REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,opened,2011-09-17 18:55:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,title,2011-09-17 18:55:48,00:00,,1,,"b""b' some way to subscribe to changes to keys'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,body,2011-09-17 18:55:48,00:00,1,,,"b""b' Hi", I apologize if this feature already exists, but I would like to request having a way to snoop changes to keys.  So a user would subscribe to a key, for example key foo. When anybody else performs a set command on foo, all subscribers get the new value of foo.  Please let me know if this is possible, this would be a killer feature for users like me.  Best," Matt'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,1,2011-09-17 18:55:48,1283.7,,1,,b'b\' Hello, this is something we want to implement, even if I never thought that the system would publish the new value of the key, but the operation performed on the key instead. To quote what I wrote about that in the mailing list recently.So we should have that new GETEVENTS, and possibly PGETVENTS to subscribe to patterns.This would publish in channels named like .. The published event could be the command name in many cases. For instance if I subscribe, using GETEVENTS," to  I would receive a message with the name of the comment every time  is modified. So if another client does SET foo BAR I\\\'ll receive ""set"". This we I can subscribe to the whole keyspace with PGETEVENTS ops.* Another thing I would implement is expire.\\\\* that will receive a message every time a key expires. So everything in this respect is currently pretty fluid. I want to think about it more", design it in the best way, and later implement it. But we\\\'ll get it soon or later, just it is not the right time to implement it right now as we have very big priorities currently. Cheers,Salvatore\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,2,2011-09-17 18:55:48,1319.17,,,1,"b'b"" Thanks for getting back to me so quickly! I like the getevents and pgetevents paradigm"," you\'re paying potentially an extra round trip time from client to db in lieu of potentially sending wasteful amounts of data to subscribed clients. The important and really nice thing about this feature is that it prevents clients from needing to poll the database to know when things they\'re interested in have changed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,closed,2011-09-20 14:18:40,1162.87,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,reopened,2011-09-20 14:18:45,0.08,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,3,2011-09-17 18:55:48,0.45,1,,,"b'b"" My mistake"," didn\'t mean to close the issue!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,4,2011-09-17 18:55:48,326.3,,1,,"b'b"" [This post]url  describes the complete scenario and [my repo]url  holds the modification I made in redis. This makes Redis do a PUBLISH on _key expiration_. This will add absolutely no _new commands_ to redis and yet let you have complex mechanisms like timers"," and cascading updates on cache expiry. I believe this approach is a lot simpler. It\'s been with me for quite long time and I\'ve found no issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,5,2011-09-17 18:55:48,102.9,,1,,"b'b"" I\'m not picky about the particular architecture", but I, too, would love to see something like this. For whatever it\'s worth in your thinking about how to do this, here\'s my use case: I\'m building a sort of chat system where users can post semi-persistent messages that are displayed differently from normal chat messages. For each of these messages, I have a key. These messages can receive votes over their lifetime (and votes extend their lifetime). I\'d like to manage the expiration of these messages using EXPIRE, but I would also like to maintain some sort of record of the last N messages including how many votes they ended with. It would be super handy to be able to subscribe to expirations and on expiration, copy a now-non-mutable version of the message in a queue.  I can kinda architect my way around that without this sort of feature," but it would be super elegant if this mechanism existed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,6,2011-09-17 18:55:48,627.4,,1,,"b""b' One problem is users want to have different behaviors with events: some want to use ",some wants to post on a queue, others want to set another key, etc ... I wonder whether a trigger based approach with Lua scripting would not be better.If users could attach Lua scriptlets to specific events, they would decide what to do when the events occur. Regards,"Didier.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,7,2011-09-17 18:55:48,271.5,,1,,"b'b\' I totally agree with @dspezia and @drewww I think it is one of the ""always"" requested features and should be part next release.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,8,2011-09-17 18:55:48,103.1,1,,,"b'b"" I haven\'t really worked with message queues", but can\'t you build one on a  model? As long as you have a mechanism to get a callback on some event type," precisely what you do afterwards or how many callbacks you register seems beside the point. Although I guess you could gain some efficiency if you didn\'t have the indirection of  and just had a message queue. But given the existing  model it seems to me to make sense to just leverage that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,9,2011-09-17 18:55:48,373.63,,,1,"b'b\' @drewww I think there is some problem with what you are understanding out of @dspezia scenario he is just trying to point out the other complex possibilities that can evolve out of ""expired keys""", Like someone may like to put an expired key in a queue or set, this is a perfect scenario where you would like to have your system a queue cancel transaction of user if he is not confirming it within 100 secs for example; so I think almost every use case can be boiled down to the fact that a simple expire publish would be key to lots of different problems.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,10,2011-09-17 18:55:48,1118.93,,1,,"b'b"" Does anybody have any issues with Salvatore\'s suggestion of adding GETEVENTS  and PGETEVENTS  commands? The resulting feeds would then specify the command name that was performed on the key or keys.  This allows for the client to either take action or not depending on whether it cares about that particular event. In addition", the whole scheme is pretty simple. Since it\'s the most concrete suggestion we have," I\'d like to hear people\'s thoughts. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,11,2011-09-17 18:55:48,207.87,,,1,"b'b\' @mattomatic I would definitely love to have GETEVENTS and PGETEVENTS in future but as post suggest ""higher priorities"" we can have something really basic that doesn\\\'t require more ""complex"" stuff and is unobtrusive. I can really see the point @antirez is trying to make here and his concerns regarding the issues.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,12,2011-09-17 18:55:48,44.45,,1,,"b'b"" GETEVENTS and PGETEVENTS seems sensible to me", and covers a nice broad set of use cases. The metaphor is a tad bit confusing, though. @antirez posits a GETEVENTS  command that would trigger whenever another client issued a command on , but expiration would be a different event channel. I like the consistency the only valid parameter for GETEVENTS being a key (or key pattern) and then we have a vocabulary of potential events that can happen to a key. The expiration case is a bit different, though, because it\'s something that redis is doing indirectly. Unlike other commands that come from clients, this one is generated internally. This will make the vocabulary of possible events not identical (or a subset of) the client command list. I\'m not sure this is necessarily bad, just wanted to bring it up. There\'s something compelling about having the event types map nicely onto commands, but I\'m not sure how to handle expiration events any other way than adding something to the event list. Some questions:Do only commands that mutate a key or metadata on a key (like expiration date) trigger events? Or do read events trigger too?Should GETEVENTS specify which kinds of events you\'re interested in, or should registering for events get you ALL events? For instance, GETEVENTS could take two parameters: key[pattern] and event[pattern]. This might help decide te previous question; if it\'s easy to filter commands when you register to receive events," then it\'s probably sensible to just generate all possible events and figure people will just register for the ones that are meaningful rather than having to trigger a callback every time a key gets modified and wait and see if the developer cares about that event type.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,13,2011-09-17 18:55:48,7.72,,1,,"b'b\' I would have assumed that the internally generated key expiration event would be published as the equivalent of an ""EXPIRE 0"" command being sent from a client. As for commands that do or do not mutate data", I wonder if there is already some internal segregation between readonly commands and those which could modify the data?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,14,2011-09-17 18:55:48,1376.03,,,1,"b'b"" I\'m new to redis", but +1 for a way to subscribe to expirations etc. (if there isn\'t a way to do this already) It might be more of drivers functionality? Example, sending an email, if an account:verification expires... In any case," can\'t wait to implement something using Redis. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,15,2011-09-17 18:55:48,196.28,,1,,"b""b' Any movement on this feature request lately?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,16,2011-09-17 18:55:48,572.17,,1,,"b""b' +1 for this feature from our side as well"," something we would really like to see at some point.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,17,2011-09-17 18:55:48,292.18,,1,,"b""b' +1 for GETEVENTS and PGETEVENTS.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,18,2011-09-17 18:55:48,1.12,,1,,"b""b' +1 for GETEVENTS and PGETEVENTS'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,19,2011-09-17 18:55:48,577.7,,1,,"b""b' +1 for GETEVENTS and PGETEVENTS'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,20,2011-09-17 18:55:48,724.92,,1,,"b'b"" Hello", I changed my mind about the design of this feature, so I\'m closing it and opening a new issue with the new idea," that is going to be implemented in a very short time. The new design is described into the issue #594.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,21,2011-09-17 18:55:48,201.0,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,22,2011-09-17 18:55:48,807.3,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,23,2011-09-17 18:55:48,1234.07,,,1,"b""b' This was implemented", merged into unstable," and documented at . Closing!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,closed,2013-02-03 23:05:41,526.93,3,17,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,24,2011-09-17 18:55:48,1210.62,,,1,"b'b"" Yess!! thanks a ton! upd:haven\'t url  found"," but contains enough info to make dreams come true""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,25,2011-09-17 18:55:48,991.52,,,1,"b""b' Awesome!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,26,2011-09-17 18:55:48,255.88,,1,,"b""b' The doc URL is : url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,83,closed,-,-,-,3,18,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,opened,2011-09-20 13:02:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,title,2011-09-20 13:02:12,00:00,,1,,"b""b' INCRBYFLOAT atomic float increments'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,body,2011-09-20 13:02:12,00:00,,1,,"b""b' A version of INCRBY that is able to operate with floating point numbers. Example: INCRBYFLOAT somekey 3.14'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,1,2011-09-20 13:02:12,588.4,,1,,"b""b' please add this behavior to HINCRBY"," too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,closed,2011-11-12 10:35:46,1293.57,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,reopened,2011-11-12 10:35:56,0.17,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,2,2011-09-20 13:02:12,941.38,,1,,"b""b' implemented and merged into unstable. closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,closed,2011-11-15 14:31:59,236.05,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,88,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,opened,2011-09-21 11:40:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,title,2011-09-21 11:40:37,00:00,,1,,"b""b' In memory Redis objects serialization'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,body,2011-09-21 11:40:37,00:00,1,,,b'b\' Redis objects serialization functions currently operate only on files, we have functions in rdb.c in order to save or load objects  files. However the DUMP and RESTORE commands needed for Redis Cluster bring the necessity to implement faster serialization on memory buffers, otherwise in order to deserialize we need to copy stuff on a file and call the old API, that is unacceptable. Pieter Noordhuis did some good preliminary work on that issue," in its ""unstable-rdb"" branch. This issue is about reviewing and merging this branch. This work is especially needed for Redis 3.0", but I\\\'m adding it into the 2.6 milestone as well as since 2.6 will be derived from Redis unstable branch I want to avoid having two branches that diverged too much, so it\\\'s better to fork 2.6 after the current unstable branch already implements many important internal changes needed for the cluster support. However 2.6 will NOT include cluster support. All the further considerations about the implementation will be moved into separated comments.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,1,2011-09-21 11:40:37,2.45,,1,,"b""b' Proposed API change: rio rioInitWithFile(FILE *fp);rio rioInitWithBuffer(sds s); I would go for: rioInitWithFile(rio *r", FILE *fp);rioInitWithBuffer(rio *r," sds s); since rio is a structure returning it performs a memory copy operation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,2,2011-09-21 11:40:37,2.8,,1,,"b'b"" I\'ll review+comment later  evening.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,3,2011-09-21 11:40:37,1.9,,,1,"b'b"" No hurry this is just a minor thing"," for now I\'m trying to read the rio.c code to make myself comfortable with the abstraction :)Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,closed,2011-09-21 11:47:46,7.15,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,reopened,2011-09-21 11:49:12,1.43,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,4,2011-09-21 11:40:37,2.23,1,,,"b""b' sorry"," hit comment&close for distraction.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,5,2011-09-21 11:40:37,88.53,,1,,"b'b"" I merged Pieter\'s branch into -rio resolving the conflicts due to the fact this branch was against a pretty old unstable commit. I\'ll work on that branch until it will be merged into the actual unstable branch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,6,2011-09-21 11:40:37,64.18,,,1,"b""b' Changed a bit the API in order to avoid returning rio structures (returning a structure in C is like doing memcpy()).Sanitized return value and comment on top of the rio structure. Finally did some metering to check what was the gain with the new in memory buffers for DUMP in my  Now", 56000k ops per second. 10 times faster," great work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,7,2011-09-21 11:40:37,1163.23,,,1,"b""b' I did a review of the new branch and finally merged it into unstable. Thanks to Pieter for providing this cool patch. Closing the issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,closed,2011-09-23 09:45:57,1316.75,2,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,94,closed,-,-,-,2,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,opened,2011-10-15 00:06:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,title,2011-10-15 00:06:10,00:00,,1,,"b""b' Feature Request: lRank'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,body,2011-10-15 00:06:10,00:00,,,1,"b""b' Please", add support to determine the index of a member in a list. P. S.I have array with unique numbers stored in the redis list. And there is no reason to use sorted set (overhead," when member equal score :() Tnx.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,1,2011-10-15 00:06:10,947.8,,1,,"b""b' Just answer"," wait for this feature in near redis builds or not? :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,closed,2011-10-19 15:53:58,947.8,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,reopened,2011-10-19 15:54:05,0.12,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,2,2011-10-15 00:06:10,1050.52,,,1,"b""b' Hi", this command will likely not be implemented as it is both an O(N) command and one that usually is felt as needed only when there is some error in the data layout design. But the good news is that with scripting in 2.6 you can implement it with very little Lua code if you really need it. However the reason for using a sorted set in this context is that is the right data structure to use. Think about this:If you want LINDEX or alike, you are hoping your list is small enough, otherwise it is unusable form a performance point of view.But if your list is small, you can use a sorted set since now with 2.4 they are specially encoded when they are small, so no additional memory is used compared to a list (or very little additional memory). Conclusion? Use 2.6 scripting if you really want it, but likely you want to change your implementation. Closing the issue. Thanks for submitting anyway! Cheers,"Salvatore'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,closed,2011-10-20 09:24:29,1050.4,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,3,2011-10-15 00:06:10,75.88,,1,,"b""b' Please check my stackoverflow question it will explain what i am doing and hopefully give a reason why i wanted to added this feature url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,4,2011-10-15 00:06:10,78.78,,1,,"b""b' I am using a list as a reversible queue", so items change places all the time just," basically a roulette that moves around and at any one time i want to know the index of an item.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,5,2011-10-15 00:06:10,183.95,,1,,"b'b"" lindex is also O(N) I don\'t think that the complexity should be a factor here.  Even if the overhead of a sorted set is the same", the use case is different with a sorted set I have to maintain my score ahead of time, with a list I don\'t.  I can ," etc.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,6,2011-10-15 00:06:10,637.3,,1,,"b'b"" We are also using a list as a reversible queue (specifically in [rq]url  These queues can get considerably large", and by far the most common operation is adding or removing to them. Luckily these operations are O(1) in redis, but now we desire a way to locate a jobs position in the queue (more specifically, the list of jobs ahead of it I understand sorted sets are the recommended solution, but I don\'t see how that\'s reasonable here: adding and removing from sorted sets is O(log(N)), which would _not_ be ok, we  from our lists some orders of magnitude more frequently than we try to do this check. I would also like to point out that a command that is _already_ provided ([lrem]url  does exactly what\'s needed here, but deletes keys rather than returns an index; so I don\'t see how the complexity argument applies ([LSET]url  and [LINDEX]url  are also O(N)) In fact, there are several commands that already do the sort of work required, but have problems associated with using them. We could use [LINSERT]url  as a hack by inserting junk values if it returned the element position modified instead of the resulting total length, or [LRANGE]url  with some arbitrary incremental value, but then we\'d duplicate a ton of work since [LRANGE]url  is O(start+retrieved), and returning the whole list with a [LRANGE]url  while less complex as O(N) in the worst case (end of the list) is still more complex in practice than stopping at the desired value, incurs an unnecessary search on the list client side, and brings with it other complications (large lists = long network transfer time + potentially doesn\'t fit in memory on the client, redis boxes in production environments are often on specially large-memory instances). Even if it\'s not a straightforward scan, is there some more redis-like solution here? I know I could use a lua script but my general rule of thumb is if I have to use a script in redis for something so small (specifically: other than so commands can interact with each other atomically) then there\'s likely a better way. So when working with a list used as a queue, is the best solution _really_ to turn the most common operation from O(1) to O(log(N))? (plus, I don\'t know about about maintaining this list, would I have to decrement every member by one when removing, and get the previous highest when adding? Or can I avoid that and just keep adding," but what are the integer size limits here?)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,7,2011-10-15 00:06:10,753.17,,,1,"b'b"" That\'s a good point.  There\'s also discussion in the comments at url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,140,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,opened,2011-10-17 09:53:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,title,2011-10-17 09:53:24,00:00,,1,,"b""b' redis 2.4.1 make error'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,body,2011-10-17 09:53:24,00:00,,1,,"b""b' In file included from /:43","       from redis-benchmark.c:35:/:80: error: duplicate member \\xe2\\x80\\x98__w_retcode\\xe2\\x80\\x99/:80: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:80: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:81: error: duplicate member \\xe2\\x80\\x98__w_coredump\\xe2\\x80\\x99/:81: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:81: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:81: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:82: error: duplicate member \\xe2\\x80\\x98__w_termsig\\xe2\\x80\\x99/:82: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:82: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:82: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:82: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:94: error: duplicate member \\xe2\\x80\\x98__w_stopsig\\xe2\\x80\\x99/:94: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:94: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:95: error: duplicate member \\xe2\\x80\\x98__w_stopval\\xe2\\x80\\x99/:95: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:95: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99/:95: error: duplicate member \\xe2\\x80\\x98({anonymous})\\xe2\\x80\\x99make[1]: **\\\\* [redis-benchmark.o] Error 1make[1]: Leaving directory '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,1,2011-10-17 09:53:24,21.37,,1,,"b""b' Hi"," this is likely a problem with your building system. What are you using in what OS?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,2,2011-10-17 09:53:24,898.55,,1,,"b'b"" I\'m using ubuntu 10.04 server editionLANG=zh_-8LANGUAGE=zh_CN:en""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,closed,2011-10-18 01:13:19,919.92,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,reopened,2011-10-18 01:14:06,0.78,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,3,2011-10-17 09:53:24,268.52,,1,,"b""b' I use redis 2.2 before\\xef\\xbc\\x8cwithout this problem'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,4,2011-10-17 09:53:24,237.87,,1,,"b""b' Your  compilation environment is?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,5,2011-10-17 09:53:24,0.03,,1,,"b'b"" on Ubuntu 10.10 (both Server and Desktop editions) \'make && make install\' for redis-2.4.1 works w/o any problems""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,6,2011-10-17 09:53:24,33.57,,1,,"b""b' There is probably an option missing or perhaps the user is trying to build a 32 bits versions with the wrong options.Looking at the header files", we have unions like: If it happens that neither __BYTE_ORDER, neither __LITTLE_ENDIAN, neither __BIG_ENDIAN are defined,then the duplicate member error will occur. Can the user post the compilation options, run make with V=1 and post the command lines generated by the Makefile? Regards,"Didier.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,7,2011-10-17 09:53:24,6.13,,,1,"b""b' No reply after 11 days and no mention of this bug from other users. It is 99.99% a problem with the build environment of the user"," so closing and reopening only if there is evidence that it is a real bug. Thanks everybody for the help on that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,closed,2011-10-31 10:19:26,545.33,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,8,2011-10-17 09:53:24,30.03,,1,,"b""b' I believe I have the same problem with redis 2.4.2 The system is Linux 2.6.32-32-server #62-Ubuntu SMP x86_64 . make 32bit fails with the same error. The problem does not occur with redis 2-2.15. Is there anything else I can provide to help debug this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,9,2011-10-17 09:53:24,953.27,,1,,"b""b' I tried to modify the headers in /", and source of redis 2.4, both failed.  T_TFinally I gave up," and used old version 2.2.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,10,2011-10-17 09:53:24,1110.08,1,,,"b'b"" Just got this trying to build Redis 2.4.7 on a CentOS 5.7 server (and the same server back when it was CentOS 5.3). For some reason __LITTLE_ENDIAN", __BIG_ENDIAN, and __BYTE_ORDER are undefined despite being in endian.h, so those members get defined twice. Redis 2.4.6 gave the same result. Redis 2.2 had no problems. Another server is also CentOS 5.7 and had no problems with Redis 2.4.6. Now I\'ve tried to rebuild it from source," and it gives this error. This is very strange.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,11,2011-10-17 09:53:24,1136.63,,1,,"b'b"" Okay", on a hunch I tried make as root which worked. This meant it was likely to be an environment variable. Sure enough, I had: The actual value was: After unsetting this, Redis 2.4.7 built just fine. That still seems strange though. This is the first time I\'ve ever had a problem despite building a lot of stuff from source," and only Redis 2.4.x had issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,12,2011-10-17 09:53:24,1356.63,,,1,b'b\' Scott: thanks for the investigation," please could you try to understand what happens exactly? I.e. if there is under ""include"" a file that takes priority and gets included instead of a legit file from the system. I downloaded libevent and checked inside the distribution but can\\\'t find any collision", however I\\\'m unable to reproduce the issue so it may be simpler in your case.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,13,2011-10-17 09:53:24,1420.88,1,,,"b'b"" I took another look since I can reproduce it consistently", and found the explanation. The key is that first \':\' in the CPATH above. The gcc docs on CPATH state:That\'s rather unexpected and annoying behaviour of gcc, because it\'s pretty common to build path lists by appending to the previous path value. So the next question is, which include file is being mistakenly picked up from the redis src directory? That would be endian.h of course. :) redis-2.4.7/ overrides / if CPATH includes an empty path. Redis 2.2 didn\'t have this file," and that\'s why it had no problems.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,14,2011-10-17 09:53:24,1430.17,,,1,"b""b' @ScottKevill thank you a ton. What about if we rename endian.[ch] in Redis to a different name? Better to prevent such an issue in the future.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,15,2011-10-17 09:53:24,113.7,,1,,"b'b"" No problem. Yeah", that should fix it. Let me know what you decide on and I\'ll do a test here just to make sure. (Although it\'s probably easy for you to reproduce now.) Even though it\'s not really the fault of redis," it will save some angst for people.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,16,2011-10-17 09:53:24,294.25,,,1,"b""b' Thank you Scott", this was fixed into the unstable branch. I did not reproduced the issue actually," but I tested that after the renaming everything is fine as usually in my systems and in the testing environment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,17,2011-10-17 09:53:24,458.5,,,1,"b""b' Sounds good to me. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,143,closed,-,-,-,2,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,opened,2011-11-13 02:54:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,title,2011-11-13 02:54:10,00:00,,1,,"b""b' zipmap zmlen is too short'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,body,2011-11-13 02:54:10,00:00,1,,,b'b\' hi antirez:  you know, many case use zipmap data structure shorten the memory usage,"  i saw configuration like ""hash_max_zipmap_entries = 1000"" many times.  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,1,2011-11-13 02:54:10,358.92,,1,,"b""b' Hi hoterran", is this a bug you really noticed into the wild or just a supposition?Because it works this way: if there are ZIPMAP_BIGLEN entries or more," everything will still work but the length will be computed scanning the zipmap instead of just returning the length byte at the start of it. Basically it is a  tradeoff inside a  tradeoff ;)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,2,2011-11-13 02:54:10,208.92,1,,,"b""b' Not a bug. not a supposition", result is correct, but efficiency is bad. many guy set  hash_max_zipmap_entries = 1000,  you can see here  url  so i think only 253 members is not enough," two bytes(254\\\\* 254 ) for zmlen can fit any case '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,3,2011-11-13 02:54:10,47.6,1,,,b'b\' The problem is that we could simply do, in order to avoid the two bytes overhead even for small entries, to just use a 4 or 2 bytes int after the first byte if it is set to BIGLEN, but this will break compatibility with old RDB files, since the zipmaps are directly exposed into the RDB file, so changing this would require breaking compatibility with old RDB files. This is possible with Redis 3.0, however I wonder if you actually profiled this problem and know how big a difference it is able to do. I\\\'m benchmarking it right now to see how much overhead it adds, even if probably it will be very sensible. The thing is that when we designed zipmap the intended usage was for hashes with a few entires," now instead users are ""abusing"" it for a good reason: to save memory. So in some way the requirements changed a bit and now I would also like to have two bytes. But better to benchmark before going further about this. Thanks for submitting the issue.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,4,2011-11-13 02:54:10,9.18,1,,,"b'b"" Ok just benchmarked", you definitely have a point and it would greatly help to have two bytes length. We\'ll fix this for 3.0, before 3.0 it is not a good idea to break the RDB file in a non backward compatible way, and fixing this ensuring the backward compatibility will make the code very dirty... so I guess we\'ll need to provide some sort of conversion tool or alike. Need to think more on that," but feature request accepted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,5,2011-11-13 02:54:10,3.43,1,,,"b""b' Btw more info about my benchmarks: going from 250 elements zipmap to 270 makes inserts (HSET) 30% slower from the point of view of the client more or less"," and a new function appears in the profiler taking 18% of the CPU time (the zipmapLen function indeed). With a zipmaps with more elements like 2048 this will be much more worse.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,6,2011-11-13 02:54:10,35.63,1,,,"b'b"" abusing? I am chinese guy", in china, the most popular sns(like twitter) is  200+ physical machines(96G mem) for redis are online. For shorten memory usage, they use zipmap store the feeds and user profile,  then found the cpu\'s utilization is higher than normal,"  this issue possible is one of root causes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,7,2011-11-13 02:54:10,4.2,,1,,"b""b' i known what you means"," you are diligent.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,closed,2011-11-13 14:02:05,667.92,6,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,8,2011-11-13 02:54:10,7.47,,,1,"b'b"" Hoterran: thanks for the info", I can provide them with a patched version if they want, even one that is backward compatible with the old RDB so that they can easily switch. In short if there is a big user with this issue I can handle it ASAP and in the best way without waiting for 3.0, but making sure this will enter 2.6. p.s. reopening the issue since it will be closed only when the fix will enter the code base.. maybe I found a backward compatible way for handling that... I\'ll keep you posted via this issue. Cheers,"Salvatore""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,reopened,2011-11-13 14:09:34,7.48,6,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,9,2011-11-13 02:54:10,2.95,,1,,"b'b"" wah...i will retweet the info to weibo\'s guy"," possible they will find you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,10,2011-11-13 02:54:10,58.32,,,1,"b""b' Thanks hoterran", I just found an interesting fact: first byte of a zipmap is between 0 and 254. 255 is a special value reserved for END of zipmap.But END can never happen to be the first byte. So if first byte is 255 we know that a two bytes count follows. This way we extended the zipmap in a way that is completely backward compatible. Note: if the first byte is 254 we still perform the full scan, as this was the older version.The new version will always switch to first byte 255 + two bytes for any zipmap with more than 253 entries. I think this should fix all our problem in a backward compatible way," so this is guaranteed to enter Redis 2.6.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,11,2011-11-13 02:54:10,625.87,,,1,"b'b"" Thanks a lot for the great work ! We set hash-max-zip-size to 256 first and then change to 512 for saving more memory ", it then cost noticeable higher cpu time . We are suffering that for a long time . ps. 256 is not a good choice ," but we didn\'t notice that . Thanks again !""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,12,2011-11-13 02:54:10,232.27,1,,,"b""b' @antirez i will focus this fix","  ps : tangfl is  core developer.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,13,2011-11-13 02:54:10,223.57,,,1,b'b\' @tangfi, @hoterran: thanks, I\\\'m already working on that, will be shipped with 2.6 for sure in a way that is backward compatible, that is," it will be possible to read old 2.4 DBs with 2.6 without issues (but not the contrary!). The problem was caused by the fact that when designing the zipmap API our idea was that the ""full scan"" was only going to be useful when calling HLEN", but instead the final code needed to promote zipmaps to real hash tables once the given number of elements is reached, so basically HSET suffers from the same problem as well, and even loading the database needs to perform this check many times in particular conditions. While I\\\'m at it I\\\'ll try to profile zipmaps better in different contexts so that if it is possible I\\\'ll add more optimizations for the special form of zipmaps where the first byte is 0xff. Cheers,Salvatore \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,14,2011-11-13 02:54:10,440.62,1,,,"b'b"" Quick note: we once had plans to make hashes use the ziplist instead of the current zipmap. The difference is that ziplists are used for lists and sorted sets as well", thus are battle tested, and that they provide efficient integer storage. This in turn allows to do in-place HINCRBY, instead of reallocating when the value needs another decimal. I\'m mentioning this because it is relevant to this discussion," not because I have implemented or am going to implement it before discussing it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,15,2011-11-13 02:54:10,17.17,,,1,"b""b' Pieter: I thought about that but I wonder if there is a way to get backward compatible using ziplists. A way would be the following:Add a new type for RDB that is HASH_ZIPLISTWhen loading the DB", if HASH_ZIPMAP is encountered, convert it on the fly to a ziplist and change the encoding. So we would take the old zipmap implementation inside Redis only to perform zipmap -I like that route, and I think it is a very good idea to have just ziplists: they are better in almost any way AFAIK," and unification always rocks. Makes sense to you? Thanks for your always great contribution to the discussion :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,16,2011-11-13 02:54:10,3.97,1,,,"b'b"" Yes", sounds good. I\'ll put this on my TODO for this week ;-) The ziplist implementation doesn\'t suffer from this particular limit, since it uses a to store the length. The rationale here is that it becomes infeasible to use a ziplist once it contains more than 2**16 elements. But, when it does," it uses a linear search to determine the length (just as the zipmap).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,17,2011-11-13 02:54:10,8.28,,,1,"b'b"" Pieter: thanks a lot for adding this in your TODO list! I secretly hoped about that ;) So I\'m not touching this at all"," please ping me once you have a topic branch to merge.Thanks again! Setting the milestone to Redis 2.6 since the solution should be completely backward compatible. Salvatore""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,18,2011-11-13 02:54:10,935.43,,,1,"b'b"" Closing because this was fixed merging Pieter\'s pull request. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,closed,2012-03-20 08:37:57,1108.38,9,4,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,188,closed,-,-,-,9,4,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,opened,2012-02-17 11:47:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,title,2012-02-17 11:47:24,00:00,,1,,"b""b' Compilation error on OS X"," caused by bundled hiredis'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,body,2012-02-17 11:47:24,00:00,,1,,"b'b"" I\'m getting a problem when trying to install redis with homebrew. I\'m using OS X 10.7.3 and XCode 4.3 (gcc 4.2.1). The error occurs when compiling hiredis (bundled in deps). The output is here: url  This is the same problem described here: url  I\'ve fix referenced in the above hiredis issue url  does fix the issue"," but is not included in the hiredis that\'s bundled in deps. Updating the bundled hiredis version should resolve this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,1,2012-02-17 11:47:24,62.07,,1,,"b'b"" Managed to install by passing to homebrew. Seems like it\'s just clang that doesn\'t work. Not sure what the stance is on supporting clang"," so closing for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,closed,2012-02-17 12:49:28,62.07,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,2,2012-02-17 11:47:24,221.45,,1,,"b""b' Anecdotally"," I believe this is currently the only thing blocking all of redis from compiling with clang 3.x.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,3,2012-02-17 11:47:24,7.85,,1,,"b""b' This should get re-opened until the fixes are pulled into the main repo. The Homebrew issue tracker has already received two reports since Xcode 4.3 came out: #10299 and #10305. The issue has also been mentioned in a few other reports.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,reopened,2012-02-18 16:50:20,240.87,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,4,2012-02-17 11:47:24,178.92,,,1,"b'b"" Hello", I updated Redis unstable with the latest hiredis," please could you verify that now it builds without problems? I\'m trying to verify but there is a 2GB download between me and the ability to try this... ;) Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,5,2012-02-17 11:47:24,2.62,,,1,"b""b' Works great for me thanks Salvatore!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,closed,2012-02-19 19:40:18,169.97,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,6,2012-02-17 11:47:24,26.27,1,,,b'b\' @antirez For Xcode 4.3, the command line tools," compilers and custom headers are available as a separate download that clocks in at ~163 MB available from url  as ""Command Line Tools for Xcode"" Mad props to Kenneth Reitz for making this happen: url  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,7,2012-02-17 11:47:24,845.13,,1,,"b""b' See 1e62ec70326af16be5feacc257f176f6beaf5a5e. I felt Redis was important enough to commit a workaround for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,8,2012-02-17 11:47:24,846.57,,,1,"b""b' I think this should be fixed now"," both on 2.4 and unstable branch. Could you confirm please? Thank you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,9,2012-02-17 11:47:24,868.48,,1,,"b'b"" p.s. there is a failing test in 2.4 when compiling with clang"," I\'ll fix it today.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,338,closed,-,-,-,1,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,opened,2012-02-22 21:28:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,title,2012-02-22 21:28:31,00:00,,1,,"b""b' test failure in 2.4.8'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,body,2012-02-22 21:28:31,00:00,,1,,"b'b"" I don\'t know if this is an issue or not"," but redis 2.4.8 fails one test:**\\\\* [err]: Protocol desync regression test #2 in uname -a                                                    1:26 12-02-23Linux  3.0.0-12-server #20-Ubuntu SMP Fri Oct 7 16:36:30 UTC 2011 x86_64 x86_64 x86_64 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,1,2012-02-22 21:28:31,3.57,,,1,"b""b' otoh"," unstable tests are fine on the same machine'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,2,2012-02-22 21:28:31,799.88,,,1,"b""b' @vissi Hi", this is almost surely not a real issue," but better to investigate better: it fails every time you run the script? What is the full error given (if there is a failing assert or alike)? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,3,2012-02-22 21:28:31,80.07,,1,,"b""b' Yes"," the second run was ok.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,4,2012-02-22 21:28:31,35.5,,,1,"b""b' Thank you"," I put in my TODO list that I should make this test more resistent to false positives.Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,closed,2012-02-26 12:47:32,919.02,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,5,2012-02-22 21:28:31,378.47,,1,,"b""b' Any reason this is happening ? The tests run successfully sometimes and fail some other times.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,6,2012-02-22 21:28:31,1.85,,,1,"b'b"" It\'s just a timing issue basically. It\'s the test that does not work well"," not Redis :) But it\'s worth fixing indeed. Only happens in slow systems probably. Reopening so that I\'ll fix it in the next days.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,reopened,2012-03-14 19:07:54,380.37,0,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,7,2012-02-22 21:28:31,5.63,,1,,"b""b' thanks @antirez '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,closed,2014-05-30 23:07:44,239.83,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,350,closed,-,-,-,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,opened,2012-05-13 06:00:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,title,2012-05-13 06:00:52,00:00,,1,,"b""b' Redis should log when it aborts for out of memory'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,body,2012-05-13 06:00:52,00:00,,1,,b'b\' Currenty we just printf() something and call abort(). This is not good, no traces into the logs. A much better idea is to log the OOM condition into the system logs, dump the stack trace, and then finally exit. -(Original posted issue follows) I posted this on the google group but I think it got rejected, my apologies if this is a duplicate. I have a Redis master and slave set up; the slave acts as only a failover instance and receives no reads. They are both on Amazon EC2 Medium instances with 3.7 GB of memory, using Ubuntu Server 10.10 and Redis 2.4.13. I started a new instance of the master on a medium instance with ulimit -n 32768. This is the first line in the log: Not too worried about that now because my memory usage is around 620 MB or so and slowly growing. I synced up the slave with the master and around 00:01:30 today I got an email from my app saying the Redis connection had gone down and the failover was automated. The following are the last lines in the Redis Master log. There are no error  . Most of the log looks like this, I do have about ~40K changes every 60 seconds; most of the operations are LRANGEs and . The Redis Failover (which was immediately promoted to Master by my failover script) has the following around that time:  ... (many more lines of unable to connect to MASTER follow) I have a few questions:1) Is Redis known to just fail like this with no error messages of any kind? What can I do to find out what went wrong? Our Redis was very stable for over 6 months but it recently ran out of memory while forking, on a small instance, so I moved it over to a medium instance. Since then," it has crashed several times with no info in the log and I\\\'ve had to set up this failover system. I\\\'m worried about its stability and was hopeful that it wouldn\\\'t crash again.2) Why does Redis slave say ""connecting to MASTER"" at 00:01:30? Did it detect the connection had failed? Why is it starting the SYNC again?3) Why is it still trying to connect to MASTER after my failover detection set it to SLAVEOF NO ONE? It acknowledged that it was now a slaveof no one", but it keeps trying to connect to the master. When I signed on a few minutes later to verify that things were ok, the Redis failover still thought it was a slave. I had to run SLAVEOF NO ONE on it again in order for it to become a master.4) When I connected to the Redis failover slave it was running queries slowly (info took like 4 seconds). Is this because it kept trying to sync with a master?  I\\\'d be very grateful for any . Thank you\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,closed,2012-05-13 06:03:03,2.18,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,reopened,2012-05-13 06:03:13,0.17,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,1,2012-05-13 06:00:52,715.28,,,1,"b'b"" Hello", when Redis fails like this usually it\'s a matter of the Linux OOMkiller terminating it.You can verify the system logs probably to see if there is something about it. Cheers,Salvatore On Sun, May 13, 2012 at 8:00 AM," Rajiv Ghantareply@wrote:##  Salvatore \'antirez\' Sanfilippoopen source developer VMwareurl  Beauty is more important in computing than anywhere else in technologybecause software is so complicated. Beauty is the ultimate defenceagainst complexity.\\xc2\\xa0 \\xc2\\xa0 \\xc2\\xa0 \\xc2\\xa0\\xe2\\x80\\x94 David Gelernter""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,2,2012-05-13 06:00:52,15.55,1,,,b'b\' Hi Salvatore,I\\\'ve been looking for the OOM killer logs (dmesg, , syslog) and have not found anything. Could it just be a segfault? Redis uses about 17% of the total 3.7 G of memory and it doesn\\\'t vary by more than 20-30 MB in each direction, with a slow overall increasing trend. Is there anything that can make Redis use that much memory all of a sudden? Also," what do you think of the slave behavior as far as ignoring the ""slaveof no one"" directive? This is the typical memory usage: It doesn\\\'t make sense that this could be the OOM killer?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,3,2012-05-13 06:00:52,150.67,1,,,b'b\' The same problem happened about a day after submitting this ticket; there were no logs of any kind in dmesg, , syslog, specifying what could have happened," and the  doesn\\\'t say anything beyond that last ""Background saving terminated with success"" message. The process just disappeared. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,4,2012-05-13 06:00:52,3.58,1,,,"b'b"" Honestly it\'s very strange", on crash Redis should definitely leave logs. Maybe it\'s a kill -9 of some kind? Btw there is a way to understand more about this. Attach GDB to Redis:Run gdb without argumentsType  Type Run this gdb session over screen. When Redis disappears go check what is the message on the gdb screen console. Cheers,"Salvatore""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,5,2012-05-13 06:00:52,1125.72,,1,,"b""b' It happened again this morning. Please take a look at this: (gdb) continue  Continuing. I can also try to include a private core dump if you let me email you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,6,2012-05-13 06:00:52,12.27,,,1,b'b\' This is an out of memory, Redis asked for some memory but the OS replied: no way. Redis can\\\'t handle this, but it\\\'s the first time I see that I don\\\'t log this event appropriately. I suggest monitoring your Redis server _before_ it dies because you should see the user memory to go upper and upper before crashing. However, for this to happen, it means that you have no or little swap configured in your Linux machine," it\\\'s not a good setup for Redis. With swap on when you are low on memory Redis will start to be slower (the OS will swap) and you\\\'ll realize that you are out of memory. Without swap Linux can\\\'t find an alternative option to provide memory to Redis so malloc() returns NULL and Redis is forced to crash. Changing this issue into ""Redis should log abort for out of memory"" :) Salvatore\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,7,2012-05-13 06:00:52,55.42,,1,,"b'b"" Salvatore", I have a script that was connecting to Redis and logging INFO every minute. Here is about 40 seconds before the crash: Redis INFO {\'pubsub_channels\': 63, \'used_memory_peak_human\': \'640.82M\', \'bgrewriteaof_in_progress\': 0, \'connected_slaves\': 1, \'uptime_in_days\': 6, \'multiplexing_api\': \'epoll\', \'lru_clock\': 1621926, \'last_save_time\': 1337425011, \'redis_version\': \'2.4.13\', \'redis_git_sha1\': 0, \'gcc_version\': \'4.4.5\', \'connected_clients\': 110, \'keyspace_misses\': 134486550, \'used_memory\': 564974812, \'vm_enabled\': 0, \'used_cpu_user_children\': 43397.150000000001, \'db4\': {\'keys\': 141, \'expires\': 106}, \'used_memory_peak\': 671949724, \'role\': \'master\', \'slave0\': \'10.169.61.209,33862,online\', \'total_commands_processed\': 665771659, \'latest_fork_usec\': 150282, \'db1\': {\'keys\': 4, \'expires\': 0}, \'loading\': 0, \'used_memory_rss\': 669335552, \'total_connections_received\': 10717634, \'pubsub_patterns\': 0, \'aof_enabled\': 0, \'used_cpu_sys\': 12545.08, \'used_memory_human\': \'538.80M\', \'used_cpu_sys_children\': 12318.25, \'blocked_clients\': 0, \'used_cpu_user\': 7762.7299999999996, \'client_biggest_input_buf\': 0, \'db0\': {\'keys\': 26682, \'expires\': 0}, \'arch_bits\': 32, \'db2\': {\'keys\': 98, \'expires\': 98}, \'mem_fragmentation_ratio\': 1.1799999999999999, \'expired_keys\': 334550, \'evicted_keys\': 0, \'bgsave_in_progress\': 0, \'client_longest_output_list\': 0, \'mem_allocator\': \'jemalloc-2.2.5\', \'process_id\': 675, \'db3\': {\'keys\': 9, \'expires\': 9}, \'uptime_in_seconds\': 556036, \'changes_since_last_save\': 34804, \'redis_git_dirty\': 0, \'keyspace_hits\': 8055873} ps aux is also logged once a minute as well as free -m. These show: Note that used memory is only 714 MB and free is 3062 MB. ps aux shows 16.9% memory usage for Redis and nothing else is significant, just 40 seconds before this crash. I don\'t have anything or shouldn\'t have anything that would suddenly flood Redis with data in 40 seconds. Is there anything else this can be? What can I do? I also have a failover slave that is constantly syncing and that didn\'t crash and its memory usage looks consistent, hovering about 620 MB range +/-20-30MB," ~17% of total memory.""'"
redis,509,closed,8,2012-05-13 06:00:52,28.53,,,1,"b'b"" Actually from the stack trace the circumstances in which the big allocation happens are strange... while reading an apparently huge query. But even so in 2.4.13 there was already a limit to max query buffer set to 1GB", while the allocation in question is of 4GB.  For sure the core dump can give us answers... if you can please send it to me at antirez at gmail," I\'ll make sure to inspect what\'s happening. Also I need a copy of the redis-server executable in use. Thanks!Salvatore""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,9,2012-05-13 06:00:52,154.75,,,1,b'b\' Thanks," Salvatore. The gzipped core dump is huge (167 MB or so). I can put this on a server and send you the links to it and the redis-server executable. Also are you sure it\\\'s trying to allocate 4GB? The ""size=4303590"" argument to zmalloc is in KB?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,10,2012-05-13 06:00:52,1055.38,,1,,"b'b"" Sorry @sonofabell I was wrong indeed", read it in an hurry as I\'m traveling this weekend (now I\'m inside a book store for instance ;) It\'s allocating just 4MB, so indeed here the problem is a normal out of memory. For this to happen there is more or less a single condition: Linux configured without swap space that is out of memory. So what may happen is the following:The system is configured without swap.For some reason at some point another process consumes a lot of RAM for a short amount of time.Redis tries to allocate -If you enable swapping this will automatically fix itself as Redis will no longer crash, because the operating system will return memory even if it will start swapping. This will ruin the performance, but will give you the time to understand what is happening and why the system seems to be out of memory. However since now I\'ve the core file I\'ll surely investigate it anyway, so that I can extract the memory usage at the time of the crash and other informations. This will provide us hints about if Redis was using too much memory suddenly," or if it is related to another process. More news soon! Thank you for the great cooperation.Salvatore""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,11,2012-05-13 06:00:52,279.28,1,,,"b'b"" Regarding the redis being unable to log OOM state: What in my opinion happened is that redis tried to log it", but because logfunction use fopen it can happen that fopen fails due to the same OOM state (as fopen needs to allocate for struct FILE somewhere). Maybe it can be worth to use raw fd\'s for logging instead of libc file i/o," logs are flushed after every message anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,12,2012-05-13 06:00:52,315.38,,1,,b'b\' Hi Salvatore," Did not think of mentioning this I hadn\\\'t noticed it before. The VSZ of the redis process jumped up quickly to about 3.1 GB shortly before the crash. The used_memory_rss in ""info"" is only about 667 MB.  SInce I didn\\\'t have a swapfile and the VSZ is so big (close to the limit)", and the core dump is also over 3 GB, does that mean this could be a problem with the allocator? The actual resident memory is only about 25% of the VSZ. For my currently running process right now, the VSZ suddenly spiked up to about 3.1 GB for a brief period of time and now swapon -s shows that one of my newly configured swap files is at 168 kB usage. But at least Redis didn\\\'t crash.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,13,2012-05-13 06:00:52,560.83,,1,,"b'b"" @sonofabell I never saw this", it\'s strange that there are spikes in the VSZ. During those spikes what happens to the used_memory_info? This reports the total allocation performed by Redis. If this is low, the VSZ spikes have something to do with some external cause, but I would love to know what the cause is. Maybe there is a problem with jemalloc and your particular kernel / libc version? Seems strange but it may be worth compiling redis with the default libc malloc to see what happens. If it\'s a problem with jemalloc (but it was never reported before) it should no longer happen in this way (but on the other hand you may get more fragmentation since the default Linux glibc allocator is a total failure). Cheers,"Salvatore""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,14,2012-05-13 06:00:52,610.88,,,1,"b""b' @antirez Right before the crash (30-40 secs) the used_memory info was as above: 640.82M peak human", rss: 669335552. The VSZ before the crash was at 3111480. In my new redis box now, with swap configured," the used memory is again around 614M and rss is 672. However the used_memory_peak_human is 1.11G (this happened in sync with the 3.1 GB spike in VSZ). I believe it would have crashed again had I not had swap configured as swap usage is at 168 KB now and staying there. Not sure what caused the sudden spike or why the VSZ is so much bigger than the memory peak.  Worried about switching allocators right now. Perhaps I can upgrade Ubuntu to the latest version; we are using 10.10 server and maybe its  has bugs.  Were you able to find any memory info from the core dump?  Thanks for looking at this!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,15,2012-05-13 06:00:52,977.45,,,1,"b""b' Now Redis (unstable branch", backporting to 2.6 in minutes) can log out of memory conditions in the log file. Closing this issue," thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,closed,2012-08-24 11:01:57,298.73,4,7,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,509,closed,-,-,-,4,7,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,opened,2012-06-09 04:43:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,title,2012-06-09 04:43:28,00:00,,1,,"b""b' 2.6RC4 sort command is broken in Lua due to automatic resorting of output'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,body,2012-06-09 04:43:28,00:00,,,1,"b'b\' When calling a command like ""sort mykey by nosort get foo:*"" from a Lua script", the results are ordered incorrectly because Redis automatically resorts the resulting values in alphabetical order due to a little logic bug in scripting.c. In scripting.c at the bottom of luaRedisGenericCommand(), I see this:/\\\\* Skip this step if command is SORT but output was already sorted */    if (cmd->proc != sortCommand || )    luaSortArray(lua); The logic is a little backwards.  It should probably be something like this:/\\\\* Skip this step if command is SORT but output was already sorted */    if (cmd->proc != sortCommand && !)    luaSortArray(lua); Making this change fixed the problem for me.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,1,2012-06-09 04:43:28,219.12,,,1,"b'b"" Just chiming in that I ran into this issue today"," and @rodcope\'s suggested change looks good.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,2,2012-06-09 04:43:28,12.67,1,,,"b""b' Sorry I overlooked this... fixing it and adding a test to prevent further problems in this regard.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,3,2012-06-09 04:43:28,14.05,1,,,"b'b"" @exogen @rodcope sorry I can\'t reproduce the issue actually: And the if statement appears to make sense since: Will actually enter the true branch if:the command is not sortCommandOR", the sort_dontsort is true," so SORT did NOT sorted the output. Please can you show me how to reproduce? Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,4,2012-06-09 04:43:28,419.57,,,1,"b'b"" @antirez Thanks for looking into this! I should have been more specific: the problem becomes apparent when you GET multiple keys", expecting interleaved results, e.g. I haven\'t added any weight keys because they\'re not necessary to demonstrate the problem," so they\'re all nil (fine). But you can see that the results should be interleaved like so: Instead they\'ve been sorted so that the weights can\'t be associated with the original elements. Hope that makes sense!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,5,2012-06-09 04:43:28,44.07,,1,,"b""b' Just adding that you can of course see the expected result order by issuing the command without Lua:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,6,2012-06-09 04:43:28,298.42,,,1,"b""b' Ok now I see the problem... we are sorting a key-val thing as a linear array in this case.Fixing ASAP. Thanks! Also checking if this applies to other commands as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,7,2012-06-09 04:43:28,109.47,,,1,"b""b' The issue is now fixed by commit 5ddee9b"," Thanks! p.s. in the process the code is now simpler and faster.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,closed,2012-09-04 23:20:49,1117.35,2,2,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,8,2012-06-09 04:43:28,834.02,,1,,"b'b\' I can actually still reproduce this in version 2.8.4: 127.0.0.1:6391(integer) 3127.0.0.1:63911) ""3""2) ""2""3) ""1""127.0.0.1:63911) ""3""2) ""2""3) ""1""127.0.0.1:63911) ""1""2) ""2""3) ""3""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,9,2012-06-09 04:43:28,65.72,1,,,"b""b' I can confirm this behaviour on a ElasticCache Redis instance (2.8.6): Ran same commands as @mtlima"," got the same results. Also reproduced on a 2.6.4: Same behaviour.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,10,2012-06-09 04:43:28,2.22,,,1,"b""b' Thanks for re-reporting. Reopening the issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,reopened,2014-10-17 14:22:47,901.97,3,3,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,11,2012-06-09 04:43:28,12.47,,1,,"b""b' This fixes it for the example above"," but not sure if it breaks anything else yet:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,closed,2014-12-11 14:54:39,31.87,3,4,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,545,closed,-,-,-,3,4,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,opened,2012-09-10 06:17:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,title,2012-09-10 06:17:18,00:00,,1,,"b""b' Linux : redis 2.6 make -> replication.c:380: undefined reference to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,body,2012-09-10 06:17:18,00:00,,,1,"b""b' I got this error during fresh git co 2.6 && make Full Error : Thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,1,2012-09-10 06:17:18,239.37,,,1,"b'b"" sync_file_range exists since Linux 2.6.16 AFAIK", you have 2.6.18 in your system, but probably with a libc that does not provide this support. Your version of software appears to date back to around 2006-2007," I think it\'s not an issue if we deprecate support for such an old system at this point instead of adding an #ifdef to test for libc version ;) Especially since you can still compile the stable version of Redis (2.4) in your system. Thanks for reporting! Closing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,closed,2012-09-10 10:16:41,239.38,0,1,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,2,2012-09-10 06:17:18,1.63,1,,,"b""b' No sorry I think I did a mistake dating your software ;) Checking better now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,3,2012-09-10 06:17:18,1.07,,1,,"b'b"" It\'s probably around 2009.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,4,2012-09-10 06:17:18,1396.98,,,1,"b'b"" Hi! I\'ve been hit with same bug. I\'d like to jump on the 2.6 bandwagon", but we are still using CentOS 5. RHEL 5 and CentOS 5 have an end of life in 2017 ;) Apparently the missing glibc call can\'t be fixed in RHEL 5 without breaking the ABI," so they advise to use syscall() directly: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,5,2012-09-10 06:17:18,253.05,,1,,"b""b' Please reopen the issue. There are many companies in the world who have pretty large infrastructures based on RHEL5 and as @david111 pointed out could still use it until 2017. We (livingsocial) are one of those users and use redis pretty heavily (dozens of instances"," many hundreds of gigabytes of data) and cutting us of from the new release just because of a missing syscall added 3 years ago is just plain wrong IMO. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,6,2012-09-10 06:17:18,1.37,,1,,"b""b' Makes sense"," patch arriving today.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,reopened,2012-10-25 13:50:47,214.1,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,7,2012-09-10 06:17:18,195.0,,1,,"b""b' Patch does not work for me on SLES10 and RH 5.7. See my comment attached to the commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,8,2012-09-10 06:17:18,609.0,,1,,"b""b' config.h not define GLIBC_VERSION_AT_LEAST Macro variables.source code at line 61: #if (LINUX_VERSION_CODE >= 0x020617 && GLIBC_VERSION_AT_LEAST(2", 6))it must define LINUX_VERSION_CODE first:#define GLIBC_VERSION_AT_LEAST(major, minor) (**GLIBC** code shoud is:/\\\\* Define rdb_fsync_range to sync_file_range() on Linux, otherwise we usethe plain fsync() call. */  #ifdef **linux**  #include #ifdef **GLIBC**  #define GLIBC_VERSION_AT_LEAST(major, minor) (**GLIBC** #if (LINUX_VERSION_CODE >= 0x020617 && GLIBC_VERSION_AT_LEAST(2," 6))  #define HAVE_SYNC_FILE_RANGE 1  #endif  #else  #if (LINUX_VERSION_CODE >= 0x020617)  #define HAVE_SYNC_FILE_RANGE 1  #endif  #endif  #endif'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,9,2012-09-10 06:17:18,209.72,,1,,"b'b"" I\'m still getting some make errors:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,10,2012-09-10 06:17:18,13.03,,,1,b'b\' Correct config.h: #ifndef __CONFIG_H#define __CONFIG_H#ifdef __APPLE__#include #endif/* Define redis_fstat to fstat or fstat64() */#if defined(__APPLE__) && !defined(MAC_OS_X_VERSION_10_6)#define redis_fstat fstat64#define redis_stat stat64#else#define redis_fstat fstat#define redis_stat stat#endif/* Test for proc filesystem */#ifdef __linux__#define HAVE_PROCFS 1#endif/* Test for task_info() */#if defined(__APPLE__)#define HAVE_TASKINFO 1#endif/* Test for backtrace() */#if defined(__APPLE__) || defined(__linux__) || defined(__sun)#define HAVE_BACKTRACE 1#endif/* Test for polling API */#ifdef __linux__#define HAVE_EPOLL 1#endif#if (defined(__APPLE__) && defined(MAC_OS_X_VERSION_10_6)) || defined(__FreeBSD__) || defined(__OpenBSD__) || defined (__NetBSD__)#define HAVE_KQUEUE 1#endif#ifdef __sun#include #ifdef _DTRACE_VERSION#define HAVE_EVPORT 1#endif#endif/* Define aof_fsync to fdatasync() in Linux and fsync() for all the rest */#ifdef __linux__#define aof_fsync fdatasync#else#define aof_fsync fsync#endif/* Define rdb_fsync_range to sync_file_range() on Linux, otherwise we use * the plain fsync() call. */#ifdef __linux__#include #ifdef __GLIBC__#define GLIBC_VERSION_AT_LEAST(major, minor) (__GLIBC__ #if (LINUX_VERSION_CODE >= 0x020617 && GLIBC_VERSION_AT_LEAST(2, 6))#define HAVE_SYNC_FILE_RANGE 1#endif#else#if (LINUX_VERSION_CODE >= 0x020617)#define HAVE_SYNC_FILE_RANGE 1#endif#endif#endif#ifdef HAVE_SYNC_FILE_RANGE#define rdb_fsync_range(fd,off,size) sync_file_range(fd,off,size,SYNC_FILE_RANGE_WAIT_BEFORE|SYNC_FILE_RANGE_WRITE)#else#define rdb_fsync_range(fd,off,size) fsync(fd)#endif/* Byte ordering detection */#include  /* This will likely define BYTE_ORDER */#ifndef BYTE_ORDER#if (BSD >= 199103)# include #else#if defined(linux) || defined(__linux__)# include #else#define LITTLE_ENDIAN 1234  /* least-significant byte first (vax, pc) */#define BIG_ENDIAN  4321  /* most-significant byte first (IBM, net) */#define PDP_ENDIAN  3412  /* LSB first in word," MSW first in long (pdp)*/#if defined(__i386__) || defined(__x86_64__) || defined(__amd64__) || \\\\ defined(vax) || defined(ns32000) || defined(sun386) || \\\\ defined(MIPSEL) || defined(_MIPSEL) || defined(BIT_ZERO_ON_RIGHT) || \\\\ defined(__alpha__) || defined(__alpha)#define BYTE_ORDER  LITTLE_ENDIAN#endif#if defined(sel) || defined(pyr) || defined(mc68000) || defined(sparc) || \\\\  defined(is68k) || defined(tahoe) || defined(ibm032) || defined(ibm370) || \\\\  defined(MIPSEB) || defined(_MIPSEB) || defined(_IBMR2) || defined(DGUX) ||\\\\  defined(apollo) || defined(__convex__) || defined(_CRAY) || \\\\  defined(__hppa) || defined(__hp9000) || \\\\  defined(__hp9000s300) || defined(__hp9000s700) || \\\\  defined (BIT_ZERO_ON_LEFT) || defined(m68k) || defined(__sparc)#define BYTE_ORDER  BIG_ENDIAN#endif#endif /* linux */#endif /* BSD */#endif /* BYTE_ORDER */#if defined(__BYTE_ORDER) && !defined(BYTE_ORDER)#if (__BYTE_ORDER == __LITTLE_ENDIAN)#define BYTE_ORDER LITTLE_ENDIAN#else#define BYTE_ORDER BIG_ENDIAN#endif#endif#if !defined(BYTE_ORDER) || \\\\  (BYTE_ORDER != BIG_ENDIAN && BYTE_ORDER != LITTLE_ENDIAN)  /* you must determine what the correct bit order is for   * your compiler the next line is an intentional error   * which will force your compiles to bomb until you fix   * the above macros.   */#error ""Undefined or invalid BYTE_ORDER""#endif#if (__i386 || __amd64) && __GNUC__#define GNUC_VERSION (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)#if GNUC_VERSION >= 40100#define HAVE_ATOMIC#endif#endif#endif  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,11,2012-09-10 06:17:18,128.57,,1,,"b'b"" I tried to replace config.h with the contents above and it makes error upon compilation ... #include has no file argument.Therefore", It should be  /\\\\* Define rdb_fsync_range to sync_file_range() on Linux, otherwise we usethe plain fsync() call. */  #ifdef **linux**  #include #ifdef **GLIBC**  #define GLIBC_VERSION_AT_LEAST(major, minor) (**GLIBC** #if (LINUX_VERSION_CODE >= 0x020617 && GLIBC_VERSION_AT_LEAST(2, 6))  #define HAVE_SYNC_FILE_RANGE 1  #endif  #else  #if (LINUX_VERSION_CODE >= 0x020617)  #define HAVE_SYNC_FILE_RANGE 1  #endif  #endif  #endif #ifdef HAVE_SYNC_FILE_RANGE#define rdb_fsync_range(fd,off,size) sync_file_range(fd,off,size,SYNC_FILE_RANGE_WAIT_BEFORE|SYNC_FILE_RANGE_WRITE)#else#define rdb_fsync_range(fd,off,size) fsync(fd)#endif /\\\\* Byte ordering detection _/#include  /_ This will likely define BYTE_ORDER */ #ifndef BYTE_ORDER#if (BSD >= 199103) # include  #else#if defined(linux) || defined(**linux**) # include  #else#define LITTLE_ENDIAN 1234  /\\\\* least-significant byte first (vax, pc) _/#define BIG_ENDIAN  4321  /_ most-significant byte first (IBM, net) _/#define PDP_ENDIAN  3412  /_ LSB first in word," MSW first in long (pdp)*/ But this fix doesn\'t work on my CentOS 5.7 environment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,12,2012-09-10 06:17:18,395.47,,,1,"b""b' 2.6.2 now compiles without error on Linux 2.6.18-164.el5  :)Thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,closed,2012-11-19 17:52:19,241.53,1,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,667,closed,-,-,-,1,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,opened,2012-11-23 04:24:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,title,2012-11-23 04:24:06,00:00,,1,,"b'b"" not epoll_add in hiredis\'s ae module""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,body,2012-11-23 04:24:06,00:00,,1,,"b'b"" 1. Not compile hiredis-example-ae ../../: In function  je_malloc\'/:126: undefined reference to  zcalloc\':/:136: undefined reference to  je_malloc_usable_size\'../../: In function  je_malloc_usable_size\'/:159: undefined reference to  je_malloc_usable_size\'../../: In function  je_malloc_usable_size\'/:201: undefined reference to ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,closed,2012-11-23 04:35:16,11.17,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,reopened,2012-11-23 04:40:40,5.4,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,1,2012-11-23 04:24:06,19.98,,1,,"b""b'   if (fd >= eventLoop->setsize) return AE_ERR; in aeCreateFileEvent'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,2,2012-11-23 04:24:06,367.22,,1,,"b""b' Hello", please submit the issue in the url  repository," as Redis has just a copy of hiredis for internal usage but is not the source of authority for the hiredis implementation (I copy it from time to time from the real repository).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,closed,2012-11-28 10:51:18,370.63,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,788,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,opened,2013-01-24 00:41:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,title,2013-01-24 00:41:44,00:00,,1,,"b""b' remove compile warning'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,body,2013-01-24 00:41:44,00:00,1,,,"b""b' This patch just removes the following build warning messages: and now  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,1,2013-01-24 00:41:44,596.38,,,1,"b""b' Thank you", makes sense," however we spell it in the whole code base! No need to change it now :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,2,2013-01-24 00:41:44,407.3,,1,,"b""b' @antirez Thank you for your answer'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,closed,2013-01-25 17:25:31,1003.78,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,reopened,2013-02-11 16:52:55,1407.4,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,3,2013-01-24 00:41:44,1408.22,,1,,"b""b' I just think removing warning with casting is better than showing warning.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,4,2013-01-24 00:41:44,1361.43,,1,,"b""b' I agree"," just change the (long long unsigned int) that does not following the Redis coding standard with (unsigned long long) and the patch will be accepted. This was the initial request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,closed,2013-03-30 09:38:25,1005.5,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,907,closed,-,-,-,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,opened,2013-01-31 09:49:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,title,2013-01-31 09:49:33,00:00,,1,,"b""b' how to install redis-2.6.9 on aix-5.3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,body,2013-01-31 09:49:33,00:00,,1,,b'b\' %gmake -v GNU Make 3.80Copyright (C) 2002  Free Software Foundation, Inc.This is free software; see the source for copying conditions.There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR APARTICULAR PURPOSE. %which cc/zhangbb7%ls -l /lrwxrwxrwx 1 bin  bin      16 Jan  1 16:11 /@ -zhangbb7%ls -l  /*-r-xr-xr-x  13 bin  bin     74947 Jun  7 2002  /*-r-xr-xr-x  13 bin  bin     74947 Jun  7 2002  /*-r-xr-xr-x  13 bin  bin     74947 Jun  7 2002  /*-r-xr-xr-x  13 bin  bin     74947 Jun  7 2002  /*-r-xr-xr-x  13 bin  bin     74947 Jun  7 2002  /*-r-xr-xr-x  13 bin  bin     74947 Jun  7 2002  /* %xlc -vexec: /(/,/,NULL) C for AIX Compiler, Version 6 Usage:   xlc [ option | inputfile ]...   cc [ option | inputfile ]...   c89 [ option | inputfile ]...   xlc128 [ option | inputfile ]........... when i use gmake to run , it appears many errors," such like......xlc -O2 -DLUA_USE_POSIX -DLUA_USE_DLOPEN  -c -o lundump.o lundump.cxlc -O2 -DLUA_USE_POSIX -DLUA_USE_DLOPEN  -c -o lvm.o lvm.cxlc -O2 -DLUA_USE_POSIX -DLUA_USE_DLOPEN  -c -o lzio.o lzio.cxlc -O2 -DLUA_USE_POSIX -DLUA_USE_DLOPEN  -c -o strbuf.o strbuf.c""strbuf.h""", line 77.1: 1506-277 (S) Syntax error: possible missing \\\';\\\' or \\\',"\\\'?""strbuf.h"""," line 76.8: 1506-485 (S) Parameter declaration list is incompatible with declarator for inline.""strbuf.h"""," line 83.12: 1506-045 (S) Undeclared identifier s.""strbuf.h""", line 89.1: 1506-277 (S) Syntax error: possible missing \\\';\\\' or \\\',"\\\'?""strbuf.h"""," line 88.8: 1506-485 (S) Parameter declaration list is incompatible with declarator for inline.""strbuf.h""", line 95.9: 1506-045 (S) Undeclared identifier len....... Must i use GNU compiler to install it?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,1,2013-01-31 09:49:33,80.75,,,1,"b""b' @bzadhere", I might think it is a problem of building lua. I am not sure," but delete static keyword which is ahead of inline keyword in strbuf.h God bless you.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,2,2013-01-31 09:49:33,16.97,1,,,"b""b' Hello! Sorry AIX is not supported by the Redis project :-( And in that case the problem is with Lua that is one of the simplest and most standard things to compile... Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,closed,2013-01-31 11:27:16,97.72,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,3,2013-01-31 09:49:33,905.03,,1,,"b'b\' I built it succ with gcc and  gmake using redis-2.6.7.1):set CC gcc -g -maix642):add ar flag -X32_643):maybe you should modify the makefile in lua or in deps dir.4):modify the fmacros.h and use ""#define _POSIX_C_SOURCE 200112L"" insead of ""_XOPEN_SOURCE""That\\\'s all.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,4,2013-01-31 09:49:33,382.77,,,1,b'b\' That\\\'s interesting," I\\\'ll add the relative #ifdef even if we don\\\'t support it actively. Please could you share with us if ""make test"" passes? Thanks.Repoening as I need to modify the source code to define _POSIX_C_SOURCE for AIX.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,reopened,2013-02-01 08:55:04,1287.8,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,5,2013-01-31 09:49:33,15.7,1,,,b'b\' Sorry, the aix machine in my hand doesn\\\'t install tcl.I\\\'ll install it and make  test for the latest version of redis. From: Salvatore SanfilippoDate: 2013-02-01 16:55To: CC: liupengcSubject: Re: [redis] how to install redis-2.6.9 on aix-5.3 (#925)That\\\'s interesting," I\\\'ll add the relative #ifdef even if we don\\\'t support it actively.Please could you share with us if ""make test"" passes? Thanks.Repoening as I need to modify the source code to define _POSIX_C_SOURCE for AIX.\\xe2\\x80\\x94Reply to this email directly or view it on GitHub. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,6,2013-01-31 09:49:33,103.65,,,1,"b'b"" Thanks"," it\'s highly recommended to do so if you plan to use it in production.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,7,2013-01-31 09:49:33,1165.7,,1,,"b'b\' Hi @antirez:  I run ""make test"" using tclsh8.6 on aix 5.3.0.0 against redis-2.6.9. It works well excepte 4 errors:  ""**\\\\* [err]: ZUNIONSTORE with +inf/-inf scores ziplist in Expected \\\'INF\\\' to be equal to \\\'inf\\\'**\\\\* [err]: ZINTERSTORE with +inf/-inf scores ziplist in Expected \\\'INF\\\' to be equal to \\\'inf\\\'**\\\\* [err]: ZUNIONSTORE with +inf/-inf scores skiplist in Expected \\\'INF\\\' to be equal to \\\'inf\\\'**\\\\* [err]: ZINTERSTORE with +inf/-inf scores skiplist in Expected \\\'INF\\\' to be equal to \\\'inf\\\'"" I don\\\'t think this is a problem"," beacause i tested the following commands:redis 127.0.0.1:6379(integer) 1redis 127.0.0.1:6379(integer) 1redis 127.0.0.1:6379(integer) 1redis 127.0.0.1:63791) ""lpc1""2) ""lpc2""3) ""lpc3""redis 127.0.0.1:6379(integer) 1redis 127.0.0.1:6379(integer) 1redis 127.0.0.1:63791) ""lpc_small""2) ""lpc1""3) ""lpc2""4) ""lpc3""5) ""lpc_large""redis 127.0.0.1:6379It works well.Is it right??? In addition to ""make test"""," I tested memory using ""./redis-server test-memory 1024"".Thouth it takes a long time"," but the result is ok! ""Your memory passed this test.Please if you are still in doubt use the following two tools:1) memtest86: url 2) memtester: url ""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,8,2013-01-31 09:49:33,220.82,,,1,"b'b"" No problem at all about this indeed"," however I\'m opening an issue in order to handle this in a more lib-C independent way. Thanks :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,closed,2013-02-04 10:00:56,65.87,2,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,9,2013-01-31 09:49:33,1189.0,,1,,"b""b' Is this will work in Latest Patches of Redis 3.2.8+ versions ?? or any other modifications ??'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,10,2013-01-31 09:49:33,1247.48,1,,,"b""b' @antirez Pls. update'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,925,closed,-,-,-,3,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,opened,2013-02-07 07:04:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,title,2013-02-07 07:04:10,00:00,,1,,"b'b"" The RedisServer\'s Connection doesn\'t release when the redis client broken for some exception like network broken.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,body,2013-02-07 07:04:10,00:00,,1,,"b""b' redis-cli -h ip -p portconnecting okthen the network is broken after a minute",the newwork goes wellconnect againnow the redis-server has two connections,will not be released. base on this question,if we have very many clients which network is unstable,and these clients subscribe the redis server,"then the redis server will produce very many connections badly. what should we do? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,1,2013-02-07 07:04:10,574.68,,,1,"b'b"" Hello", In that case you may want to use the timeout setting so that Redis willclose the connection.However it does not work in  mode since it\'s a push protocol andidle clients are ok. Cheers,Salvatore On Thu, Feb 7, 2013 at 8:04 AM," pumadong notifications@ wrote:##  Salvatore \'antirez\' Sanfilippoopen source developer VMwareurl  Beauty is more important in computing than anywhere else in technologybecause software is so complicated. Beauty is the ultimate defence againstcomplexity.   \\xe2\\x80\\x94 David Gelernter""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,2,2013-02-07 07:04:10,566.07,,1,,"b""b' antirez", thank you for your answer,as you said,timeout setting does not work in  mode, but my project is a dotnet client,I want to use  to subscribe the remote server.  For the network reason, in server,some dead connection will exists for ever,as times goes on,connection limit reached,the server cannot services more. Based on this situation,"whether redis does not apply to this scene? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,3,2013-02-07 07:04:10,846.37,,,1,"b'b"" Hello", please see the new Pablo\'s thread about this issue, I justimplemented SO_KEEPALIVE into unstable and it will be backproted to 2.6 indays. Thanks,Salvatore On Fri, Feb 8, 2013 at 3:05 AM," pumadong notifications@ wrote:##  Salvatore \'antirez\' Sanfilippoopen source developer VMwareurl  Beauty is more important in computing than anywhere else in technologybecause software is so complicated. Beauty is the ultimate defence againstcomplexity.   \\xe2\\x80\\x94 David Gelernter""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,closed,2013-02-13 18:33:41,689.52,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,4,2013-02-07 07:04:10,838.0,,,1,"b'b"" Thanks",looking forward to your new implementation. Forgive me that I am a novice GitHub\' user,"and what is the new Pablo\'s thread and where I can find it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,5,2013-02-07 07:04:10,258.63,1,,,"b""b' Sorry my fault", I was referring to the Redis mailing list, but the good news is, now the support is available in Redis 2.6.10. Check the example  for advices on configuration. Cheers," closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,reopened,2013-02-20 10:27:55,954.23,1,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,closed,2013-02-20 10:27:57,0.03,1,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,6,2013-02-07 07:04:10,253.17,,,1,"b'b"" Wonderful job","now it\'s working very well. Thanks :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,937,closed,-,-,-,1,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,opened,2013-02-14 14:41:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,title,2013-02-14 14:41:27,00:00,,,1,"b""b' make test fails 2.6.10 32-bit Amazon Linux'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,body,2013-02-14 14:41:27,00:00,,,1,"b'b"" Note that tests pass on 64-bit version of same box (EC2 m1.medium standard Amazon Linux) !!! WARNING The following tests failed: **\\\\* [err]:  can set sub-second expires in Expected \'somevalue {}\' to equal or match \'{} {}\'**\\\\* [err]: Redis should actively expire keys incrementally in Expected \'3 0\' to equal or match \'3 3\'""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,1,2013-02-14 14:41:27,82.32,,1,,"b""b' Note that this passed later on an identical (or at least identically-provisioned) box. Timing issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,2,2013-02-14 14:41:27,58.37,,,1,"b'b"" Yes", that\'s a timing issue," thanks for reporting.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,closed,2013-02-14 17:02:08,140.68,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,3,2013-02-14 14:41:27,136.15,,1,,"b""b'   always happens on a freshly installed Ubuntu 12.04 box using vagrant. Tried with redis-2.6.12 ...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,4,2013-02-14 14:41:27,1.05,,1,,"b'b"" Ok"," did not happen the fifth time i ran it. But shouldn\'t this be fixed anyway?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,5,2013-02-14 14:41:27,911.25,,,1,"b""b' I am still getting this on a fresh Amazon Linux instance"," Redis 2.6.13:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,6,2013-02-14 14:41:27,757.85,,1,,"b""b' Also got that from a fresh Ubuntu 12.04 Server instance on AWS"," after building 2.6.14'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,7,2013-02-14 14:41:27,982.42,,1,,"b""b' Still getting this with 2.8.0. Please reopen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,reopened,2013-11-22 16:27:07,1404.98,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,8,2013-02-14 14:41:27,56.77,,,1,"b'b"" @catwell I can\'t reproduce easily"," please could you investigate this briefly? Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,9,2013-02-14 14:41:27,74.3,,1,,"b'b"" It is not easy to reproduce", I admit. It doesn\'t happen on every test run. I will try to find the reason for this next week (not this weekend," I will be at Lua Workshop).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,10,2013-02-14 14:41:27,984.13,,,1,"b'b"" Thank you", I\'ll try to fix it before you need to investigate it if I find a way to reproduce or analytically understand what is happening," otherwise I\'ll try to get some help from you ;-) Have fun at Lua Workshop!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,11,2013-02-14 14:41:27,55.62,1,,,"b""b' This is a hard one to reproduce", but I managed to do it on a 64 bit box built from git unstable, so this is not a 32 bit issue and it is still alive. EDIT: OK," actually there is a comment in that test: Does this mean it is expected that this test will fail from time to time?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,12,2013-02-14 14:41:27,288.82,,1,,"b'b"" Hi"," Was the timing issue resolved? I\'m having a similar error making 2.8.13 on AIX.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,13,2013-02-14 14:41:27,73.17,1,,,"b'b"" well"," if you have the same error message it\'s obviously not resolved ;) Can you reproduce it on each run?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,14,2013-02-14 14:41:27,1373.87,,1,,"b""b' Yes"," I can. Does anyone think the solution to this could be creating for example an AIX specific polling adapter?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,15,2013-02-14 14:41:27,21.07,,1,,b'b\' It could be two things:your system time routines aren\\\'t precise enough, which would cause the Tcl tests themselves to mis-judge how much time to spend waiting for the timeout (both under and over estimating depending on the test)something inside of Redis is using the wrong time values due to an internal Redis issue. Now, we only see the issue rarely, and it seems to only happen on certain platforms," so I\\\'d lean more towards ""something in the system is the problem"" instead of a core Redis code issue. Maybe we could make a simple check (both in the tests and in Redis) to test for accuracy of system timing functions? You can also try adding a large value of in to see if increasing internal server management frequency can give more accurate time values. (try using at first.  if it works", decrease until it stops working, report findings.)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,16,2013-02-14 14:41:27,280.27,,1,,"b'b"" Increasing the internal server frequency didn\'t do anything to the timing function"," although initially at hz 100 all tests passed without errors but  when I tried running it again I had the usual error. Also I committed a couple of changes I made that enabled me to compile Redis on AIX. I was wondering if I can get feedback about the changes just to be sure that they are correct.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,17,2013-02-14 14:41:27,1.15,,1,,"b""b' Sure"," where are the changes?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,18,2013-02-14 14:41:27,7.53,,1,,"b""b' Here is the link to the branch url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,19,2013-02-14 14:41:27,4.6,,,1,"b'b\' That should be ""good enough"" since the test says it may fail sometimes anyway.  Do you have a general feeling for percentage of failure versus runs?  Run it ten times and count which ones fail?  Did it ever work at hz 10 or does it only work at hz 100?  You can also try hz 500 just to compare against too.All those changes look good.  Feel free to squash those commits down into one ""Add AIX support"" commit and open a pull request for it.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,closed,2017-07-07 15:25:11,1378.07,2,12,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,944,closed,-,-,-,2,12,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,opened,2013-02-27 03:55:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,title,2013-02-27 03:55:27,00:00,,1,,"b""b' set proctitle'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,body,2013-02-27 03:55:27,00:00,,1,,b'b\' 1),fix core dump of void spt_init(int argc, char *argv[], char *envp[]) **attribute**((constructor)); setproctitle.c2),"add a conf option ""proctitle"" in \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,1,2013-02-27 03:55:27,368.33,,,1,"b'b"" Hello", the first change you did, to avoid the GCC-specific constructor thing, is very good IMHO. I\'m going to merge it.The second change, to define the proc title by hand, is nice but maybe not perfect for most users that have yet another thing to handle in ... However there is the alternative to allow for a format specifier in the proctitle string," so that you can still specify things like the address and port printf style. Maybe it\'s a bit an overkill... Another thing I would love to know is: in what system the original implementation caused a segmentation fault?Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,2,2013-02-27 03:55:27,32.88,,1,,"b'b"" antirez",about the proctitle, i have some experiences. I still  think do it  in is a good choice. when SA manages lots of instances, they always use script to do it. If have a tag in disk,More convenient.it\'s my os info. it\'s a vm, running in vmware. core dump 100%. #0  spt_init (argc=7123136, argv=0x0, envp=0x6cb0c0) at setproctitle.c:151151     if (!(base = argv[0]))Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.80.el6_3.7.x86_64(gdb) bt#0  spt_init (argc=7123136, argv=0x0, envp=0x6cb0c0) at setproctitle.c:151#1  0x000000000049c1f6 in __do_global_ctors_aux ()#2  0x0000000000414c13 in _init ()#3  0x00007fff4fa3df80 in ?? ()#4  0x000000000049c165 in __libc_csu_init ()#5  0x0000003b2981ec70 in __libc_start_main () from /lib64/#6  0x00000000004158a9 in _start () [root@centos-stamhe redis]# uname  -aLinux centos-stamhe 2.6.32-220.el6.x86_64 #1 SMP Tue Dec 6 19:48:22 GMT 2011 x86_64 x86_64 x86_64 [root@centos-stamhe redis]# cat /CentOS release 6.2 (Final)Kernel \\\\r on an \\\\m [root@centos-stamhe redis]# gcc -vUsing built-in specs.Target: x86_64-redhat-linuxConfigured with: ../configure prefix=/usr mandir=/ infodir=/ with-bugurl=url  enable-bootstrap enable-shared enable-threads=posix enable-checking=release with-system-zlib enable-__cxa_atexit disable-libunwind-exceptions enable-gnu-unique-object enable-languages=c,c++,objc,obj-c++,java,fortran,"ada enable-java-awt=gtk disable-dssi with-java-home=/-1.5.0-gcj-1.5.0.0/jre enable-libgcj-multifile enable-java-maintainer-mode with-ecj-jar=/disable-libjava-multilib with-ppl with-cloog with-tune=generic with-arch_32=i686 build=x86_64-redhat-linuxThread model: posixgcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC)  -""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,3,2013-02-27 03:55:27,18.35,,,1,b'b\' Thank you, ok I merged the first part of your work here: 9c8be6c About setting it via , I\\\'m going to implement it via a format-specifier so that we can default to bindaddress:port but still be able to set it in any other way, however in order to do this I\\\'m trying to understand exactly what to do with the different prefixes," like ""redis-server"" ""redis-rdb-bgsave"" and so forth.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,4,2013-02-27 03:55:27,3.65,,,1,"b""b' Just merged the second commit as well"," about aeCreateTimeEvent. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,closed,2013-03-02 09:18:59,323.53,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,reopened,2013-03-02 09:26:24,7.42,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,closed,2013-03-25 18:40:49,554.42,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,973,closed,-,-,-,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,opened,2013-02-27 10:11:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,title,2013-02-27 10:11:27,00:00,,1,,"b""b' add a check for aeCreateTimeEvent'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,body,2013-02-27 10:11:27,00:00,,1,,"b""b' 1)","add a check for aeCreateTimeEvent in func initServer'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,1,2013-02-27 10:11:27,8.02,,1,,"b'b"" Never mind if you have issues creating the pull request"," I\'ll merge the commit manually.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,2,2013-02-27 10:11:27,22.63,,1,,"b""b' haha'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,closed,2013-03-02 09:18:36,1387.15,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,reopened,2013-03-02 09:26:54,8.3,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,3,2013-02-27 10:11:27,380.22,,1,,"b""b' Fixed in e431a9766074aa5a74845f7dd3680079d4ef404e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,closed,2014-07-31 17:02:20,455.43,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,976,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,opened,2013-05-09 12:42:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,title,2013-05-09 12:42:08,00:00,,1,,"b""b' Enterprise Level Support'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,body,2013-05-09 12:42:08,00:00,,,1,"b'b"" Are there any companies that offer Enterprise Level support for REDIS for customers who want to host REDIS themselves in their own datacentres?  i.e. Issue escalation", Agreed Issue Resolution SLA\'s, Follow the sun support etc Appreciate that there is community support," however our IT Operations need ways to mitigate perceived risks before they will allow us to use this in a production environment for mission critical functions.  This is however where we want to use it most to support our website and take load off our databases.  REDIS would be our preferred solution if we could find support.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,closed,2013-05-09 12:42:41,0.55,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,reopened,2013-05-09 12:42:45,0.07,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,1,2013-05-09 12:42:08,62.93,,1,,"b""b' @johnpailing how about using redis cloud service like as redis'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,2,2013-05-09 12:42:08,11.7,,,1,"b""b' perfect! On 05/09/2013 09:45 PM"," charsyam wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,3,2013-05-09 12:42:08,66.92,,1,,"b""b' Hello @johnpailing", we use this issue system mainly for technical problems," but I understand very well how your problem is a real one as well. Please contact me via email (antirez -gmail) as I can provide you some info about that. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,closed,2013-05-09 15:03:41,140.93,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1096,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,opened,2013-08-26 14:56:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,title,2013-08-26 14:56:21,00:00,,1,,"b""b' Redis still in standalone mode'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,body,2013-08-26 14:56:21,00:00,,,1,b'b\' I\\\'ve installed phpredis and added  to . From command line php -i shows that redis is loaded (2.2.3). However," when I launch redis-stat it shows:\\xe2\\x94\\x82 redis_version \\xe2\\x94\\x82 2.6.14 \\xe2\\x94\\x82\\xe2\\x94\\x82 redis_mode \\xe2\\x94\\x82 standalone \\xe2\\x94\\x82 Am I understanding correctly that ""standalone"" mode is slower? If so how do I change this? thanks\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,1,2013-08-26 14:56:21,18.47,1,,,"b'b"" You\'re confusing two things here. Redis is the server (the project you posted this on). The module you added to your  is the client library used to talk to the redis server. mode is the default mode of the redis server (and is what you want). Other modes are or  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,2,2013-08-26 14:56:21,3.73,,1,,"b""b' Was not sure if to post here or phpredis. Sounds like standalone is best then. thx'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,closed,2013-08-26 15:18:33,22.2,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,reopened,2013-08-26 15:18:45,0.2,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,closed,2013-08-26 15:18:58,0.22,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1259,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,opened,2013-11-15 11:12:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,title,2013-11-15 11:12:27,00:00,,1,,"b""b' hiredis blocked while lpush-2 2.4.16'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,body,2013-11-15 11:12:27,00:00,,1,,"b'b"" This is a problem happened several times on my online game server.  strace -p 15378Process 15378 attached interrupt to quitread(5", ez_conn 15376 crserver1  0u  IPv4 6757407  0t0  TCP 172.16.2.195:50001->ec2-54-241-178-0.us-west-1:51447 (CLOSE_WAIT)ez_conn 15376 crserver1  1u CHR 136,0  0t0    2 / (deleted)ez_conn 15376 crserver1  2u CHR 136,0  0t0    2 / (deleted)ez_conn 15376 crserver1  3w REG  8,17  1149588 22626778 /ez_conn 15376 crserver1  4u  IPv4  877785  0t0  TCP :37078->:52001 (ESTABLISHED)ez_conn 15376 crserver1  5u  IPv4  877787  0t0  TCP :37079->:52001 (ESTABLISHED) here io handler 5 is the fd connect to redis," which is blocked while reading result from redis server on the command \'lpush\'.can I set timeout for redisCommand?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,closed,2013-11-15 17:41:29,389.03,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,reopened,2013-11-16 03:38:22,596.88,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,1,2013-11-15 11:12:27,1053.8,,1,,"b'b"" I am not so sure the meaning of strace output"," butWhat\'s the client connect to redis-server?Have redis-server received the lpush (check by monitor)?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,2,2013-11-15 11:12:27,696.68,,1,,"b""b' I think the key point is using block mode socket without setting timeout. I only connect to redis server by redisConnectWithTimeout", which will set fd to block mode.I should use redisSetTimeout after the connecting," then the redisCommand will not block so long while there is some problem for hiredis reading from the fd.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,3,2013-11-15 11:12:27,828.37,,1,,"b""b' Please reopen this issue on the hiredis repository.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,closed,2013-11-17 06:11:18,152.93,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1379,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,opened,2014-01-21 05:38:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,title,2014-01-21 05:38:52,00:00,,1,,"b""b' fix spell of rewrite in aof.c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,body,2014-01-21 05:38:52,00:00,,1,,"b'b\' Fix two spell bugs about ""rerwite"" to ""rewrite"" in aof.c\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,1,2014-01-21 05:38:52,181.93,,1,,"b""b' +1 This is clear patch for missed typo.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,closed,2014-01-21 09:01:54,203.03,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,reopened,2014-01-21 09:02:36,0.7,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,2,2014-01-21 05:38:52,459.55,,1,,"b""b' Tracking in #1871 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,closed,2014-07-31 16:20:21,437.75,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1516,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,opened,2014-03-13 10:33:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,title,2014-03-13 10:33:42,00:00,,1,,"b""b' full disk -> 0 size . all data lost.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,body,2014-03-13 10:33:42,00:00,,,1,"b""b' redis-server  2.4.14 (debian wheezy). Full disk", perform shutdown with redis-cli,"  gets truncated to 0 bytes! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,1,2014-03-13 10:33:42,38.52,,1,,"b""b' Are you sure? Redis does this:Writes data to RDB file with a temporary name (the other file is not touched).Try to rename(2) the new file to the old one. So in theory what you described should never happen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,2,2014-03-13 10:33:42,74.05,,1,,"b""b' I had a problem with a system crash this week. After reboot and cleanup (full disk) redis databasewas 0 size. Today I tried to recreate the scenario  and that is what happened. It is easy", just put to a temp fs," fill it up and issue shutdown.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,3,2014-03-13 10:33:42,178.55,,1,,"b'b"" With a modern Redis (2.8.x)", when I fill up a tiny filesystem and try to  , I get: Client: Server: If I go back to 2.4.14 (almost two years old by now), I get the same behavior: Client: Server: In both cases Redis can\'t save the RDB on exit, so it refuses to exit with a normal  .  (Though, this was tested on OS X and it\'s possible under Linux you run into a different edge case.) Do you have a set of commands to reproduce your behavior?  (create tmpfs, start redis-server, write, save, fill up tmpfs, shutdown redis, start redis, now there\'s no data?) Some file system recovery processes can zero out files," especially since you mentioned a cleanup after a reboot.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,4,2014-03-13 10:33:42,38.12,,1,,"b""b' Set of commands: Server log:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,closed,2014-03-13 16:02:56,329.23,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,5,2014-03-13 10:33:42,23.9,1,,,"b'b\' I confirmed this does fail under Linux on a modern Redis (unstable HEAD at the moment).  I think you hit ""Comment and Close"" by mistake instead of just ""Comment"" with your last post. Tested on a generic vagrant vm: Steps:  [different shell] [add some things;  ; verify  has data][fill up remaining space in your tmpfs mount]  [back to redis-cli]  shutdown completes", but now  now has zero size. Before: After:  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,6,2014-03-13 10:33:42,131.82,1,,,"b'b"" Fixed!  I\'ll add a pull request soon. Thanks so much for reporting this data loss error.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,7,2014-03-13 10:33:42,797.33,1,,,"b""b' Sorry about closing was a bit in a hurry. It fails in the same way on ext4"," ext3 and tmpfs all on linux.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,reopened,2014-03-14 07:55:59,953.05,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,8,2014-03-13 10:33:42,2.8,,1,,"b""b' I am new to this. Commenting just to leave it closed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,closed,2014-03-14 07:58:47,2.8,3,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1604,closed,-,-,-,3,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,opened,2014-05-22 07:10:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,title,2014-05-22 07:10:58,00:00,,1,,"b""b' Software watchdog crashes redis during rdb save point'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,body,2014-05-22 07:10:58,00:00,,1,,"b'b\' We got some trouble with our redis server regarding timeouts and high latencies. Regarding the latency documentation url  we tried to activate the software watchdog. Our save points are ""standard"" (rdb): We got 16 databases and a maxmemory of 48GB. We enabled the software watchdog first with 500 ms via A save point was triggered (with watchdog enabled) and the redis server crashed immediately. Redis-Version: 2.8.9Operating System:  Here are the logs of crash + restart:  1571] 21 May 18:06:26.550 * Background saving started by pid 20267[20267] 21 May 18:08:25.195 * DB saved on disk[1571 | signal handler] (1400688506) WATCHDOG TIMER EXPIRED -[1571] 21 May 18:08:26.331 #  === REDIS BUG REPORT START: Cut & paste starting from here ===[1571] 21 May 18:08:26.331 #   Redis 2.8.9 crashed by signal: 11[1571] 21 May 18:08:26.331 #   Failed assertion:  (:0)[1571] 21 May 18:08:26.331 # STACK TRACE       _._                     _.__ \\\'\\\'-._                 _. _.  \\\'\\\'-._     Redis 2.8.9 (00000000/0) 64 bit  . .\\\\/  _.",_ \\\'\\\'-._            (  \\\'  ,   .,  )   Running in stand alone mode | -..._.-\\\'|   Port: 6380 |   ._  /   _.-\\\'  |   PID: 20398 -._ -._ -.__.-\\\'  _.-\\\'_.-\\\'   -._    _.-\\\'_.-\\\'  |     url    -._ -._ -.__.-\\\'  _.-\\\'_.-\\\'   -._    _.-\\\'_.-\\\'  |             -._ -._   -._    _.-\\\'                   \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,1,2014-05-22 07:10:58,631.3,1,,,"b'b"" I can\'t seem to reproduce the crash on a FreeBSD 9.2 system.  The error report shows a segfault", which wouldn\'t be triggered by the watchdog alarm. Can you reproduce the crash?It looks like you\'re running FreeBSD on EC2, so some timeouts and latency could just be intrinsic to your deployment.  You can run (runs for 30 seconds) to get a sense of what the OS is doing to processes on your system.  You can also test network latency to your server with  .  It\'s best to run from your client machines and not the server (though," you can run it on your server too and compare the latency introduced by your network).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,2,2014-05-22 07:10:58,7.2,1,,,"b""b' We didn t compiled with debug symbols so afaik this core file is useless"," right? We are running this server not on EC2. We are running it on our own physical hardware. No vm. We did a latency check today (2014-05-22 ~9am). Here are the results: Intrinsic-latency on the redis server machine: Latency from a client machine: During watchdog execution the server was in production and under load (~ 140 connected clients).Maybe this can be the issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,3,2014-05-22 07:10:58,5.85,,1,,"b'b"" Oh"," that does help.  Now it crashes for me too.  I\'ll reproduce it under a debugger and let you know what I find.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,4,2014-05-22 07:10:58,4.37,,1,,"b""b' I tried to reproduce this with a MacOSX notebook (no load"," no big database) and was not successful.What does the trick to make it crash? If i can help to try to reproduce (on a freebsd vm and not in production) just ping me :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,5,2014-05-22 07:10:58,164.8,,,1,b'b\' So, the behavior is somewhat random, but reproducible given enough tries. I first reproduced it (on FreeBSD only) with in one terminal (all default options), then setting  , then running  .  The server died with a segfault within two minutes (sometimes it doesn\\\'t fail though, or it takes much longer). The segfault could also be triggered (sometimes) by manually running  against the server while the long runs (still with the watchdog timer enabled). Looking closer, all the watchdog does is deliver a when a timeout happens.  So, we can set then send a ourselves to print the watchdog timer output with  .  That works great.  We can even loop it:  .  When we do that, dies pretty quickly.  A backtrace shows we blow out our stack with thousands of  .  This happens on FreeBSD, OS X, and Linux. So!  At this point, we see, sometimes, is being delivered while we are already in the signal handler.  That\\\'s bad. The signal handler is being initialized with  .  The option lets the signal handler be interrupted by the same signal currently being handled, letting us end up with an infinite stack of signal handlers until the kernel segfaults us. Removing from the watchdog options makes _not_ die when confronted with a loop. Since testing for the original situation isn\\\'t entirely reliable," I haven\\\'t been able to compare many ""this crashes"" vs ""this fixes it"" runs.  Feel free to try some different configurations on your own systems and report back.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,6,2014-05-22 07:10:58,6.07,,,1,"b""b' Thanks for your work @mattsta!I will try to setup your fork and reproduce this on a macbook or a freebsd system.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,7,2014-05-22 07:10:58,53.43,,,1,"b'b"" Excellent investigation", thanks. This is not the first crash report using the software watchdog," but it was never with enough context to reproduce like this one. It\'s great that we are going to have a more solid software watchdog implementation...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,8,2014-05-22 07:10:58,613.18,,1,,"b""b' Thanks for everyone.Sadly i can'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,9,2014-05-22 07:10:58,405.8,,1,,"b'b"" Hello"," Sure I\'ll merge the fix. I\'ll try to reproduce it on my local systems btw.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,10,2014-05-22 07:10:58,0.45,,1,,"b""b' p.s. it will be merged both into 2.8.10 and 3.0 of course.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,11,2014-05-22 07:10:58,14.13,,1,,"b'b"" It\'s possible the case of crashing with watchdog+saving only happens on FreeBSD due to how different kernels handle signals.  Linux and OS X could be handling signals in a less error-prone way to avoid the problem completely.  Each OS still fails the \'while true send SIGALRM\' trick though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,12,2014-05-22 07:10:58,1.53,,1,,"b""b' @mattsta we definitely saw this happening on Linux multiple times"," it is just hard to trigger...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,13,2014-05-22 07:10:58,2.87,,1,,"b'b"" Btw", focusing on this issue to try to understand better what happens and what you did. When I\'ve some news I\'ll write it down," anyway your fix seems the right thing to do regardless of the findings. I\'m just curious if this fix is related to the previous crashes we saw.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,14,2014-05-22 07:10:58,3.28,,1,,"b""b' Ok", @mattsta I see that you actually _reproduced_ the problem without using the SIGALRM flood," so... you did your tests on FreeBSD directly?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,15,2014-05-22 07:10:58,2.13,,1,,"b""b' @mattsta btw your SIGALRM loop brings back very old memories... url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,16,2014-05-22 07:10:58,26.13,,,1,"b'b\' I tested on the ""FreeBSD 9.2 i386"" image from url  by first [updating ports]url  then installing redis from ports (which includes their FreeBSD specific patches allowing backtraces and", optionally, automatically replacing Lua with LuaJIT!). Nice 16 year old similar issue too!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,17,2014-05-22 07:10:58,9.38,,1,,"b'b"" @mattsta I\'m stressing the hell out of my Linux box with HZ=1000 and a watchdog timer of 4 ms", benchmark active, plus a redis-cli -r -1 BGSAVE. No way to trigger a crash. Btw this could be explained by the following Linux kernel characteristic (from setitimer man page): Probably it is actually hard on Linux to get two signals delivered at the same time by only using the interface. However, if after the fix you can no longer trigger the issue on FreeBSD, this is a big hint about likely the bug being now fixed. I can see only another more general cause here, but this would be not hard to spot, while we can\'t see the problem actually... which is," a bad interaction with an interrupted syscall not handled in the Redis code. So I\'m quite confident you found the real issue. Now grepping for the past related issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,18,2014-05-22 07:10:58,3.63,,,1,"b""b' Ok an interesting fact. If you look at #1023", the bug output is exactly the same (the watchdog timer fires, it tries to generate the backtrace, fails probably because of the nested call, segfaults, tries again to generate the trace," and dies silently). Another hint about this being the same issue that @mattsta discovered.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,closed,2014-05-26 15:53:32,522.57,2,13,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,19,2014-05-22 07:10:58,7.27,,1,,"b'b"" @mattsta fix merged into all the branches. I\'ll release 2.8.10 in the next days with this fix.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,20,2014-05-22 07:10:58,0.52,,1,,"b""b' Reopening to wait for feedbacks from @andygrunwald '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,reopened,2014-05-26 15:54:18,0.77,2,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,21,2014-05-22 07:10:58,10.95,,1,,"b""b' We will try it on a FreeBSD as well.I try to do this tomorrow or Wednesday.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,22,2014-05-22 07:10:58,8.63,,,1,"b""b' Thanks Andy'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,23,2014-05-22 07:10:58,1.1,,1,,"b""b' Current status: Compiling redis...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,24,2014-05-22 07:10:58,19.22,,,1,"b""b' Okay. I can reproduce this problem very easy on a FreeBSD system:  Install redis from ports and atart redis  During the benchmark:  Redis chrash Now i installed the current 2.8 branch:Deinstall redis    Start redis  Same Watchdog + Benchmark + Debug commands as above... aaaaand redis does not crash anymore: Logfile Thanks for fixing!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,closed,2014-05-26 16:34:13,39.92,2,17,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,25,2014-05-22 07:10:58,8.53,,1,,"b'b"" Note: compiling on FreeBSD outside of the ports tree _disables_ backtrace support"," which could be contributing to the problem.  It\'s best to compile with the patches from ports tree applied for full behavior.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,26,2014-05-22 07:10:58,10.6,,,1,"b""b' @mattsta you are right. Thanks for this information.Should i repeat it again or is my testing with your note enough for this fix?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,27,2014-05-22 07:10:58,18.83,,1,,"b""b' The fix is tiny (just delete  : url To get it running from the ports tree:edit that one line in your  downloadrun the port again (or build and test locally in the src/ dir)re-test That should cover everything.  :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,28,2014-05-22 07:10:58,24.8,,,1,"b""b' Okay. Then i would just skip the new test.Thanks for everyone to track this issue down!Now we can debug more things to improve the redis infrastructure :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1771,closed,-,-,-,2,19,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,opened,2014-08-15 21:03:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,title,2014-08-15 21:03:16,00:00,,1,,"b""b' Store the length of the static argv when first allocated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,body,2014-08-15 21:03:16,00:00,,,1,b'b\' This fixes a bug introduced by this commit: 8237d88 The length of the static argv is not stored when it is first created; only when extended. On the first occasion this is relatively harmless (since the initialised length was 0)," but on any subsequent ""first"" allocation eg after having been cleared here: url  then a new allocated argv implicitly inherits the length of the last freed one. Where the new argv is smaller than the last freed one", and then later reused without extension at any length greater than its actual length, memory is overwritten. This fixes issue #1939. See also related issue #1943.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,1,2014-08-15 21:03:16,122.6,,1,,"b""b' Is there a simple test case to add as a regression test?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,2,2014-08-15 21:03:16,318.05,,1,,"b""b' It was crashing in my application but I will try to create a standalone example.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,3,2014-08-15 21:03:16,1033.83,1,,,"b'b"" The following sequence of calls triggers the error condition: Calling this sequence in  a loop invariably triggers a hard crash for me. I\'ve added a commit to this PR that includes this as a regression test.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,4,2014-08-15 21:03:16,18.68,,,1,"b""b' Great. I can confirm that the test crashes the server without this patch and works fine with it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,5,2014-08-15 21:03:16,645.72,,,1,"b'b"" Thanks! Merged. I\'ll release 2.8.14 ASAP", I was planning to delay it since it contains many new small changes after merging a big PR," but it is better to fix known bugs like this instead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,closed,2014-09-01 08:42:09,698.88,1,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,6,2014-08-15 21:03:16,6.82,,1,,"b""b' p.s. what about simplifying the code like that?  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,reopened,2014-09-01 08:49:29,7.33,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,7,2014-08-15 21:03:16,1.05,,1,,"b""b' Reopened in order to discuss the possible code change that simplifies the two if branches into one"," however the fix and the regression test are already merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,8,2014-08-15 21:03:16,4.1,,1,,"b""b' without having tested it"," lgtm'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,9,2014-08-15 21:03:16,29.48,,1,,"b'b"" I\'ve tested this change and it works. Commit is here for reference: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,10,2014-08-15 21:03:16,263.2,,,1,"b""b' Thanks! Change committed. Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,closed,2014-09-10 13:46:50,297.35,1,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1945,closed,-,-,-,1,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,opened,2014-08-29 12:45:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,title,2014-08-29 12:45:26,00:00,1,,,"b""b' () round-robin balancing messages between subscribers'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,body,2014-08-29 12:45:26,00:00,,1,,"b""b' HelloIt would be really useful to have bsubscribe'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,1,2014-08-29 12:45:26,1339.37,,,1,"b""b' +1 It is the great idea! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,2,2014-08-29 12:45:26,308.8,1,,,b'b\' There\\\'s two answers here: it could be added to standalone Redis fairly easily (rotate the subscriber list and only deliver once), but because we have Cluster support, it\\\'s very difficult to add correctly. [this is a long think post.  if you\\\'re short on time, there\\\'s not an actual answer below.] When people say round-robin, what they mean is: single-delivery of a message across rotating clients.  (As compared with actual pubsub which is: broadcasting a message to every listening client.) When dealing with Redis Cluster, single-delivery PUBLISH is difficult because Redis Cluster doesn\\\'t maintain a global view of anything client related.  Each individual Redis Cluster server has a private list of clients and current [P]SUBSCRIBE\\\'d channels. Right now Redis Cluster broadcasts every PUBLISH to _every other_ cluster node, and every cluster node sends that PUBLISH to _all_ connected clients.  There\\\'s no way for the nodes to coordinate single-delivery with the current implementation. What would it look like if we tried to add single-delivery across cluster nodes?  We would have to maintain a shared global view of active [P]SUBSCRIBE\\\'d channels across all Redis Cluster servers.  Then, on single-delivery PUBLISH, the server receiving the PUBLISH would select _one_ cluster node to forward the single-delivery PUBLISH to (or it could pick itself).  Now, since this is an async distributed system, if the receiving cluster node doesn\\\'t have any subscribed clients anymore, the receiving cluster node can look up another target server in its channel->server map (or just drop the message if there aren\\\'t any remaining active channels). Part of this work may be done eventually (having Cluster become aware of global [P]SUBSCRIBE\\\'d channels improves targeted PUBLISH sending instead of sending global floods)," but the single-delivery PUBLISH (which would have to be a new command) may not happen.  Also: it wouldn\\\'t be verifiably round-robin since you\\\'ve got a level of servers then a level of clients behind those servers and each server would maintain a potentially different view of all channel->server mappings.  It would be something like ""balanced random."" But", ignoring cluster mode, there _could_ be a new single-delivery PUBLISH command for regular  Redis added fairly easily. Even with everything above, there\\\'s still one more caveat: Redis has SUBSCRIBE and PSUBSCRIBE.  There are two separate lists for subscribed direct channels (SUBSCRIBE) and subscribed pattern channels (PSUBSCRIBE).  Imagine  you have Client A SUBSCRIBE to directly (non-pattern) and Client B PSUBSCRIBE to  .  Under current behavior, if you PUBLISH to  , then both Client A and Client B will receive the message, because all PUBLISH channel names get evaluated as both a direct name then as a pattern name. For single-delivery PUBLISH to  , would we match on the _direct_ channel name or the _pattern_ channel name first?  Which ever one we pick first will stop the other client from matching.  So, maybe we\\\'d also have to alternate the order of matching direct channel names or pattern channel names.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,3,2014-08-29 12:45:26,107.77,,,1,"b""b' Thanks for the detailed answer. I use redis-cluster and now I understand that implement similar functionality for the cluster will be difficult. Nevertheless"," it would be great to have this functionality using a single instance redis server'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,closed,2014-09-02 18:01:22,315.93,2,1,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,reopened,2014-09-02 18:34:27,33.08,2,1,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,4,2014-08-29 12:45:26,88.77,1,,,"b'b"" Pardon me for bringing this up again", but there is no need for sharing the private client list. The cluster nodes could, for example, inform the amount (weight) of clients connected/[P]SUBSCRIBE\'d, which would weight on the balance for the distribution. Exemple: Cluster node A has 3 clients [P]SUBSCRIBE\'d and cluster node B has 2. Each client on node A would get 1/5 of the messages while the node B would get 2/5 of the messages. Then, node B would balance again the messages being 1/2 for each client. When the message is PUBLISHed on node B, cluster A would get 3/5 of the messages while B clients get 1/5 each. Clients of node A will, then, get 1/3 of the messages. For clusters of 3+, each node will be aware of every other\'s weight and divide accordingly, but once a message is routed to a secondary node, it may be splitted internally only ignoring the other nodes on the cluster. This would cause, at most," two hops from publish to the single subscriber and stil preserves the architecture.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,5,2014-08-29 12:45:26,1264.87,1,,,b'b\' Hi, I\\\'m using redis as celery\\\'s broker. Celery uses redis\\\'  as event dispatching ( url  ) , duo to this issue," I can\\\'t start multiple ""event handler"" since every handler will receive a event message.  Any alternative solution?  I am thinking about using a lock in redis among those handlers.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,6,2014-08-29 12:45:26,765.55,,1,,"b'b"" Hi", I am implementing a feature which integrating redis published messages to mongodb that i made the project and working perfect on testing environment.  But I\'m concerning about the production environment," that i have 3 master server and they exist 12 slave cluster. if i publish message from them to a channel pattern may i subscribe all messages in one place""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,1974,open,-,-,-,4,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,opened,2014-10-23 09:58:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,title,2014-10-23 09:58:18,00:00,,1,,"b""b' EPOLLRDHUP is not handled in ae_epoll.c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,body,2014-10-23 09:58:18,00:00,,1,,"b""b' We found that redis will keep many connections at ESTABLISHED state when the remote client is killed. It may due to the remove closing event is ignored in the server. After checking the source code", we found EPOLLRDHUP signal is not handled, and a similar issue was found in this article before. url  Therefore," we think it may explain this issue and hence we suggest to add the handling EPOLLRDHUP in ae_epoll.c.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,1,2014-10-23 09:58:18,330.83,,1,,"b'b"" That\'s just what TCP does when nobody has a clean shutdown.  Redis has a client timeout to help protect against connections staying idle for hours when they don\'t actually exist anymore: I\'m not sure EPOLLRDHUP is useful for Redis because", from what I can tell, it\'s only for edge triggered epoll events (which Redis doesn\'t use). A little research shows:nginx [does use EPOLLRDHUP]url  but nginx also uses [edge triggered epoll]url  (and they have a special [immediate-close]url  operation in their loop that Redis doesn\'t have).libuv doesn\'t use EPOLLRDHUP because it doesn\'t use edge triggered epoll.libev doesn\'t use EPOLLRDHUP because it doesn\'t use edge triggered epoll.libevent [does use EPOLLRDHUP]url  but they have a [special way]url  of triggering immediate-close events that the Redis event library doesn\'t do," but they also allow [edge triggered epoll]url  so that\'s probably why they support EPOLLRDHUP. Is there any proof EPOLLRDHUP gets sent when using the default level triggered epoll mode?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,2,2014-10-23 09:58:18,1079.42,,,1,"b""b' @rivercheng do you have an easy way to simulate the broken cllient thing that leaves the connection active? This way it will be much simpler to investigate the issue and understand how to fix it. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,closed,2017-07-07 15:42:43,344.42,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,3,2014-10-23 09:58:18,113.37,,1,,"b""b' @mattsta Would please explain why redis not use epoll edge trigger? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,reopened,2018-09-06 11:29:26,1186.72,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,4,2014-10-23 09:58:18,7.68,,1,,"b""b' Reopened to check this issue personally.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,5,2014-10-23 09:58:18,847.88,1,,,"b""b' @antirez Would you like to explain why redis not use epoll?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,6,2014-10-23 09:58:18,1274.6,,1,,"b""b' @gussfield Redis uses epoll"," the issue is about a different thing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,7,2014-10-23 09:58:18,964.82,,1,,"b""b' @antirez thank you for your reply.  En", redis uses epoll. Actually," I want to know why redis not use epoll EPOLLET edge trigger?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2093,open,-,-,-,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,opened,2014-10-24 08:34:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,title,2014-10-24 08:34:08,00:00,1,,,"b'b"" Sentinel hello messages parser is not robust enough (was: Original master\'s sentinel fails to start after master re-election"," generates automatic bug report).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,body,2014-10-24 08:34:08,00:00,,1,,"b'b"" I have 2 machines with redis-server and sentinel running on them and one machine with only sentinel running. Initially", there is one master and one slave and all the sentinels monitor the master. If I kill the master\'s sentinel, then kill the master, new master is elected. Then I start the old master again, and it\'s correctly demoted to slave. Then I start the sentinel of the old master, and it crashes, giving this: === REDIS BUG REPORT START: Cut & paste starting from here ===[2846] 24 Oct 08:21:35.171 #   Redis 2.8.17 crashed by signal: 11[2846] 24 Oct 08:21:35.171 #   Failed assertion:  (:0)[2846] 24 Oct 08:21:35.171 # STACK TRACEredis-sentinel *:26379(logStackTrace+0x33)[0x44aa03]redis-sentinel *:26379(sentinelEvent+0x262)[0x452f42]/-linux-(+0xfbb0)[0x7f4e06e96bb0]redis-sentinel *:26379(sentinelEvent+0x262)[0x452f42]redis-sentinel *:26379(sentinelProcessHelloMessage+0x10d)[0x4552ad]redis-sentinel *:26379(sentinelPublishCommand+0x2e)[0x45552e]redis-sentinel *:26379(call+0x83)[0x41d803]redis-sentinel *:26379(processCommand+0x375)[0x41feb5]redis-sentinel *:26379(processInputBuffer+0x51)[0x428c21]redis-sentinel *:26379(readQueryFromClient+0xab)[0x428d3b]redis-sentinel *:26379(aeProcessEvents+0x250)[0x418d30]redis-sentinel *:26379(aeMain+0x2b)[0x418f6b]redis-sentinel *:26379(main+0x310)[0x417cc0]/-linux-(__libc_start_main+0xf5)[0x7f4e06ae0de5]redis-sentinel *:26379[0x417e5a][2846] 24 Oct 08:21:35.173 # INFO OUTPUT[2846] 24 Oct 08:21:35.173 # # Serverredis_version:2.8.17redis_git_sha1:00000000redis_git_dirty:0redis_build_id:5ff644190067a5edredis_mode:sentinelos:Linux 3.11.0-15-generic x86_64arch_bits:64multiplexing_api:epollgcc_version:4.8.1process_id:2846run_id:a580c5861c209b8590d847a451872a29cfaeddcatcp_port:26379uptime_in_seconds:0uptime_in_days:0hz:15lru_clock:4852751config_file:/# Clients connected_clients:1client_longest_output_list:0client_biggest_input_buf:0blocked_clients:0# Memory used_memory:806128used_memory_human:787.23Kused_memory_rss:2347008used_memory_peak:806128used_memory_peak_human:787.23Kused_memory_lua:33792mem_fragmentation_ratio:2.91mem_allocator:jemalloc-3.6.0# Persistence loading:0rdb_changes_since_last_save:0rdb_bgsave_in_progress:0rdb_last_save_time:1414138895rdb_last_bgsave_status:okrdb_last_bgsave_time_sec:-1rdb_current_bgsave_time_sec:-1aof_enabled:0aof_rewrite_in_progress:0aof_rewrite_scheduled:0aof_last_rewrite_time_sec:-1aof_current_rewrite_time_sec:-1aof_last_bgrewrite_status:okaof_last_write_status:ok# Stats total_connections_received:1total_commands_processed:2instantaneous_ops_per_sec:1rejected_connections:0sync_full:0sync_partial_ok:0sync_partial_err:0expired_keys:0evicted_keys:0keyspace_hits:0keyspace_misses:0pubsub_channels:0pubsub_patterns:0latest_fork_usec:0# Replication role:masterconnected_slaves:0master_repl_offset:0repl_backlog_active:0repl_backlog_size:1048576repl_backlog_first_byte_offset:0repl_backlog_histlen:0# CPU used_cpu_sys:0.01used_cpu_user:0.00used_cpu_sys_children:0.00used_cpu_user_children:0.00# Commandstats# Keyspace hash_init_value: 1414193716 [2846] 24 Oct 08:21:35.174 # CLIENT LIST OUTPUT[2846] 24 Oct 08:21:35.174 # id=2 addr=54.75.250.22:37534 fd=8 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=publish [2846] 24 Oct 08:21:35.174 # CURRENT CLIENT INFO[2846] 24 Oct 08:21:35.174 # client: id=2 addr=54.75.250.22:37534 fd=8 name= age=0 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=publish[2846] 24 Oct 08:21:35.174 # argv[0]: \'PUBLISH\'[2846] 24 Oct 08:21:35.174 # argv[1]: \'**sentinel**:hello\'[2846] 24 Oct 08:21:35.174 # argv[2]: \' 54.75.250.22,26379,ca890bc4c607fbdf06cedf4e2ed8748a09c15301,2,master,46.137.118.12,6379,2\'[2846] 24 Oct 08:21:35.174 # REGISTERS[2846] 24 Oct 08:21:35.174 # RAX:0000000000000025 RBX:0000000000000003RCX:00000000004b6d81 RDX:0000000000000000RDI:0000000000000003 RSI:00000000004b6e39RBP:0000000000000000 RSP:00007fff77ae88c0R8 :0000000000000000 R9 :ff00000000000000R10:0000000000000002 R11:0000000000000004R12:00000000004b6e39 R13:00000000004b6d81R14:00000000000018eb R15:000000000000670bRIP:0000000000452f42 EFL:0000000000010246CSGSFS:0000000000000033[2846] 24 Oct 08:21:35.174 # (00007fff77ae88cf) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88ce) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88cd) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88cc) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88cb) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88ca) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c9) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c8) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c7) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c6) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c5) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c4) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c3) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c2) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c1) -[2846] 24 Oct 08:21:35.174 # (00007fff77ae88c0) -[2846] 24 Oct 08:21:35.174 # FAST MEMORY TEST[2846] 24 Oct 08:21:35.175 # Bio thread for job type #0 terminated[2846] 24 Oct 08:21:35.175 # Bio thread for job type #1 terminatedTesting 6e4000 90112Testing 1db1000 135168Testing 7f4e04df5000 8192Testing 7f4e04fff000 8388608Testing 7f4e05800000 16777216Testing 7f4e06e82000 20480Testing 7f4e070a0000 16384Testing 7f4e075ba000 16384Testing 7f4e075c6000 16384[2846] 24 Oct 08:21:35.451 # Fast memory test PASSED," however your memory can still be broken. Please run a memory test for several hours if possible.[2846] 24 Oct 08:21:35.451 # === REDIS BUG REPORT END. Make sure to include from START to END. ===""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,closed,2014-10-24 10:19:19,105.18,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,1,2014-10-24 08:34:08,107.65,,1,,"b""b' May I ask why you closed this? Sentinel should definitely not crash like that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,2,2014-10-24 08:34:08,25.3,1,,,"b'b\' The issue was caused by a leading whitespace on one sentinels announced ip like: "" 44.44.44.44"".My bad.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,3,2014-10-24 08:34:08,37.57,,,1,"b'b"" @suonto I\'ll make sure to make the parser more resistant... reopening :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,reopened,2014-10-24 11:24:40,65.35,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2099,open,-,-,-,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,opened,2014-11-02 02:52:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,title,2014-11-02 02:52:55,00:00,,1,,"b""b' : va_end needs to be fixed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,body,2014-11-02 02:52:55,00:00,,1,,b'b\' A protential bug. Test on Ubuntu 12.04void hello(const char _fmt," ...){  va_list ap;  printf(""0x%08x\\\\n""",_ap);  va_start(ap," fmt);  printf(""0x%08x\\\\n""","_ap);  va_end(ap);  printf(""0x%08x\\\\n""",_ap);}va_end do nothing with ap but, should this be a protential bug with other platforms?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,1,2014-11-02 02:52:55,761.73,,1,,"b""b' Yip", looks like a small oversight. should be ended," not  .Could you also correct the comment of  ?:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,2,2014-11-02 02:52:55,1081.93,,,1,b'b\' Thanks for your review.Another question," codes like ""current = sdscatlen(current",p,"1);""may cause protential memory leak?Because", when sdscatlen failed," we leak the former ""current"".Does this make sense? :)@badboy \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,3,2014-11-02 02:52:55,84.33,,1,,"b""b' Nope", uses internally," which automatically frees the old memory if it needs to move all data.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,4,2014-11-02 02:52:55,192.63,,,1,"b""b' Hi @badboy ",Thanks a lot for your reply.Yes, sdscatlen uses realloc internally.But (Ubuntu 12.04) says, If realloc() fails the original block is left untouched; it is  not  freed or moved.I am not sure if it will cause memory leak when the functions fails. ps: I will be on a business trip soon without Internet for 3 to 5 days," maybe myreply will be very late. Hope you not mind. :)pss: Thanks very much for your feedback.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,5,2014-11-02 02:52:55,83.53,,1,,"b""b' Redis wraps realloc"," so if a realloc() fails the entire program segfaults.  :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,6,2014-11-02 02:52:55,209.27,,,1,"b'b\' Fun fact: ""In the GNU C Library", va_end does nothing," and you need not ever use it except for reasons of portability."" That\\\'s why we have a few missing or wrong va_end in places (because is defined as just on our development platforms", so it all goes away).  It should still be fixed for technical correctness, but it doesn\\\'t cause any problems. On solaris, va_end isn\\\'t defined as empty, but it ends up going through a chain of macros that rewrites the input to a no-op  .\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,7,2014-11-02 02:52:55,1168.85,,,1,"b""b' Hi @mattsta","  Thanks a lot for your replies. Learn a lot from you and @badboy. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,closed,2014-11-07 01:04:39,1331.73,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,reopened,2014-11-07 01:04:57,0.3,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,closed,2014-11-09 14:28:54,803.95,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,reopened,2014-11-10 06:44:11,975.28,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,8,2014-11-02 02:52:55,976.83,,1,,"b""b' @sunheehnus Any info why you keep re-opening this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,9,2014-11-02 02:52:55,323.05,,1,,"b""b' @badboy Err", my fault. Indeed, I am not very familiar with using pull request. Hope you not mind.I pushed redundant code to this branch," and the new commit appears here.This happened when I tried to fix it.I have already removed the new commit now. Just fortget to close this. Hope you not mind. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,closed,2014-11-10 12:15:05,330.9,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,reopened,2014-12-09 14:13:01,117.93,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,closed,2014-12-09 14:13:05,0.07,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,10,2014-11-02 02:52:55,118.6,,1,,"b""b' Hello", just merged," is more correct. The fact that those macros are defined to do nothing is just a technical detal. Tomorrow libc implementation may change and we may actually leak memory.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2119,closed,-,-,-,0,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,opened,2014-12-02 06:58:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,title,2014-12-02 06:58:27,00:00,,1,,"b""b' : optimization in loop'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,body,2014-12-02 06:58:27,00:00,,,1,"b""b' ### This new redisPopcount reduce the execution time by 10% than the old one.The old version counts 16 bytes in a loop. Every loop it adds the pop(uint32_t) to the highest byte of a uint32_t", then shift 24.  Finally add up the 4 uint32_t. We can add all the 4 pop(uint32_t) to a highest byte of a uint32_t and shift 24.  This will cause 5% reduce.The ceil of a byte is 255, and the ceil of pop(a byte) is 8  floor(255 / 8) = 31;  floor(31 / 4) = 7;  So we can count 7*4=28 bytes in a loop.  This will cause %5 reduce.#### The test for short length is not stable," because loop will cause great influence.#### benchmark for execution time. Start:length: 128New version speed up 1.75%New New version speed up 6.26%length: 256New version speed up 11.11%New New version speed up 17.33%length: 512New version speed up 7.67%New New version speed up 10.23%length: 1024New version speed up 4.04%New New version speed up 10.79%length: 2048New version speed up 6.35%New New version speed up 11.98%length: 4096New version speed up 6.22%New New version speed up 11.61%length: 8192New version speed up 5.74%New New version speed up 11.03%length: 16384New version speed up 6.02%New New version speed up 11.44%length: 32768New version speed up 5.74%New New version speed up 11.28%length: 65536New version speed up 5.71%New New version speed up 11.36%length: 131072New version speed up 5.73%New New version speed up 11.40%length: 262144New version speed up 5.79%New New version speed up 11.44%length: 524288New version speed up 5.74%New New version speed up 11.44%length: 1048576New version speed up 5.69%New New version speed up 11.41%length: 2097152New version speed up 5.69%New New version speed up 11.46%length: 4194304New version speed up 5.72%New New version speed up 11.43%length: 8388608New version speed up 5.70%New New version speed up 11.40%... -## TEST CODE  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,1,2014-12-02 06:58:27,287.0,,1,,"b'b"" Thank you", good changes," and I can measure the 10% speedup without problems. Merging everywhere but into 2.8 since it\'s just a non huge speed improvement so not worth to risk any stability.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,closed,2014-12-09 11:45:27,287.0,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,reopened,2014-12-09 11:46:12,0.75,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,closed,2014-12-09 11:46:15,0.05,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,2,2014-12-02 06:58:27,5.08,1,,,b'b\' Sorry," I don\\\'t understand very well the second commit: ""skip short minlen for FAST PATH"". There is explicit check for this AFAIK", in the form: So why bother? Just for speed concerns in order to avoid entering the fast path I guess... if we can\\\'t walk stuff in 4 words iterations anyway. Could you confirm this was your idea?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,3,2014-12-02 06:58:27,8.15,,,1,"b'b"" Off topic: thanks for your contribs. As promised I\'m merging them", with some delay ;-) Just a few things that may make this process smoother:1. Please justify every change in the commit message very very clearly.2. Provide furter explanation about changes here so that code review is simplified. You know why you made the change," so providing more context helps a lot other programmers to understand what is going on without reading the code understanding every bit. Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,4,2014-12-02 06:58:27,60.35,,1,,"b""b' @antirez Thank you for your reviews. :-)Yes", it just skip the  .  And as you recommend, I will mind for this situation, and take care for making more meaningful changes. :-) Thank you very much. :) ps: The url  is in closed heap," but I think I caught a tiny mistake as well. :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2179,closed,-,-,-,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,opened,2015-01-01 11:01:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,title,2015-01-01 11:01:34,00:00,,1,,"b'b\' redis-trib fix not working on cluster (""Fix me"," some work to do here."")\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,body,2015-01-01 11:01:34,00:00,,1,,"b'b"" Hi", I am playing with redis-cluster in google cloud, and some strange issues happens here after resizing sometimes.I am don\'t know how I get cluster in this state, but from there not working anymore. Such issues happen here everyday, so if you need additional logs or something, tell me. redisfrom (9e718a1f57a18d685fc63cff9ffdeef3af734969)redis-server not the latest one," but pretty new (from a git 1 month ago) Full output from cluster nodes command: url Full output from redis-trib fix: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,closed,2015-07-04 23:55:25,773.85,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,1,2015-01-01 11:01:34,279.18,,,1,"b""b' Any luck on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,2,2015-01-01 11:01:34,1051.97,,,1,"b'b"" At this point cluster dead... Even CLUSTER SET SLOT FORCE won\'t work.This issue somehow related to timing. After each command that change cluster slots you must wait at least 2 seconds. You can try recovery data from aof files. Good luck..""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,3,2015-01-01 11:01:34,8.58,1,,,"b""b' BTW another way which works you can shut down cluster and manually fix but that will be done with data loses :( Another hint: you can try to convert files with my tool (buggy)  to plain files url  Then run:  can import data from plain files to cluster with any configuration... PS use linenoise lib which limited to 4KB per line"," so if you have commands bigger then 1KB you need to change the limit in  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,4,2015-01-01 11:01:34,24.85,1,,,b'b\' Hello, this happens when something really bad happens to the cluster configuration (corruptions or replacement of  with older versions or alike), however I would like to cover this ASAP," before the release of the next Redis 3.2 release candidate. Basically this condition is triggered by the following situation:1. There are multiple nodes with a given slot ""open"" in importing state.2. But there is no owner at all in the cluster for this slot. Redis-trib should just count the number of keys in each node", and reshard all the other keys from the other nodes there. This should be quite simple honestly, I\\\'ll provide an implementation ASAP.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,5,2015-01-01 11:01:34,1.67,,1,,"b""b' Not related issue: redis-cli when detects standard input is not a tty should revert to fgets() (with overflow detection and dynamic reallocation to account for any line length) instead of using linenoise.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,reopened,2016-01-10 09:48:56,593.52,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,6,2015-01-01 11:01:34,749.78,,1,,"b""b' Issue about linenoise: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,7,2015-01-01 11:01:34,1069.27,,,1,"b""b' Redis-trib should now be able to fix this kind of errors (in the unstable version). Backporting everything back to 3.2 and 3.0 in the following days. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,closed,2016-01-12 16:06:58,378.03,2,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2251,closed,-,-,-,2,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,opened,2015-02-02 19:59:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,title,2015-02-02 19:59:04,00:00,,1,,"b""b' adding support to configure expire in getset command through ex and px optional parameters'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,body,2015-02-02 19:59:04,00:00,1,,,"b""b' This closes #2349 Can you guys review"," please? @mattsta @antirez  (This PR was made with help from @Tavio)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,1,2015-02-02 19:59:04,1154.77,,,1,"b""b' Looks good and even has tests!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,2,2015-02-02 19:59:04,416.2,,1,,"b""b' @mattsta updated help for GETSET command'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,3,2015-02-02 19:59:04,1064.62,1,,,"b'b"" Hello", I\'ve the feeling adding a option to the currently already overloaded command is a better path. More reasoning later," but feel free to post your reaction to this odd proposal :scream: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,4,2015-02-02 19:59:04,9.68,,1,,"b'b"" @antirez I don\'t know if I get this right. Are you saying about adding another optional parameter to SET command to return the key value instead of the OK?e.g. If we are allowed to broke the retro-compatibility", I think we can remove command and add a new optional parameter to command to return the key value instead of OK.If we don\'t want to broke the retro-compatibility, we can keep this implementation. I think it would be nice to have all the command logic in one place," but this way I don\'t see any reason to keep the command. What do you think about it?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,5,2015-02-02 19:59:04,1338.23,,1,,"b'b"" Hey @nykolaslima 1. Yes", my proposal is to add a (not yet sure about the name) to the command.2. We are not allowed to break retro compatibility, but is the same as  , we have it yet. However, soon or later, all this useless commands will be removed, there are many, for example  . Basically we can\'t break old code without a good reason, but we may add new features in the right place. Why an option for is the right place? Design will be ultimately a matter of taste, but I offer the following arguments.1. Adding the option to SET extend the capabilities since you can use other options as well.2. This is an exception to the rules, because SET is special.3. SET is special because SET+DEL is 90% of memcached. It is the foundation of caching, and is a special use case where very high performances are needed, so we can break the _please do it with Lua_ rule here.4. The command will be backward compatible since it returns if the option is not used, like always. Note that the return value, when NILL, is always clear even with XX / NX are used. In the example the GET option is called GT using two char option like for the other set commands. Not sure it will be in this way, just an example to show my point: Here the command is executed only of the key exists. If it exists, there is no need to return NULL, there will be always the old string value. Here the command is executed only if the key does not exist," so GT is invalid at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,6,2015-02-02 19:59:04,100.15,,1,,"b'b"" @antirez I agree with you. In my opinion it would be nice to have all set logic in one place instead of spread around. Can\'t we mark command as deprecated? I\'ll make the implementation in command as you suggested.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,7,2015-02-02 19:59:04,610.65,1,,,"b""b' @antirez closing this PR because I opened another with the suggestions that you gave me: #2387'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,closed,2015-02-12 02:13:22,374.3,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,reopened,2015-02-12 16:11:22,838.0,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,8,2015-02-02 19:59:04,838.28,,1,,"b""b' Reopening here to follow up with the design as mentined in #2387.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,9,2015-02-02 19:59:04,848.37,1,,,"b'b"" I believe that implement the option in command is the best solution because we can centralize the logic in one single place. This way", when we made some change in command, we don\'t need to check other commands that may be changed too (  command for example). Following this thought, I believe we could mark command as deprecated, because we can achieve the same functionality with command. I believe it\'s a more maintainable solution, because we will have all set logic in one place. It\'s easy to test," easy to change and easy to use. What do you guys think about it? @antirez @mattsta @badboy ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,10,2015-02-02 19:59:04,856.85,1,,,"b""b' @antirez any update on that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,11,2015-02-02 19:59:04,859.8,1,,,b'b\' nope," no update. The major drawback of the weird ""SET ... GET"" idea is \\xe2\\x80\\x94 what do clients do?  SET returns a status", not content.  It makes much more sense to add expiration to GETSET than have SET sometimes return content instead of status.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,12,2015-02-02 19:59:04,870.47,,1,,"b'b"" The two approaches have pros and con.  Pros  We can keep the command logic in a single place. If we do it", we can drop the command and simplify the code.Con  The command will return status by default but when using option it will return the content.  Pros  We can avoid the different returns in command because this command will always return the key\'s content.Con  We will have the set logic split in two places. (But maybe it\'s not a real problem, because we can refactor the code to avoid it.) I was thinking that was the best solution," but thinking better I believe that command makes more sense. We need to decide one solution and stick with it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,13,2015-02-02 19:59:04,985.52,,1,,"b'b"" I can\'t speak for other client developers but from my perspective it\'s not problematic for to return a status reply normally", and a bulk reply when the argument is present. There are already a bunch of Redis commands that are like this, including  ,  ,  ,  ," and to name a few.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,14,2015-02-02 19:59:04,1047.33,,,1,"b""b' Actually we need to decide one approach. After all"," it would be greate to have help from @antirez @mattsta @badboy to decide it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,15,2015-02-02 19:59:04,109.78,1,,,"b""b' @antirez Do you still want to merge it? Should I rebase it against branch?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,16,2015-02-02 19:59:04,866.25,1,,,"b""b' @antirez @mattsta any update on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,17,2015-02-02 19:59:04,1388.22,,1,,"b""b' Any update on this? We need this feature.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,18,2015-02-02 19:59:04,1038.93,1,,,"b""b' @antirez any chance to get It merged If rebased?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,19,2015-02-02 19:59:04,958.98,,1,,"b""b' +1 on adding  optional params to GETSET.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2351,open,-,-,-,9,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,opened,2015-02-07 14:12:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,title,2015-02-07 14:12:45,00:00,,1,,"b""b' Add test for backtrace generation (was: Compilation warning)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,body,2015-02-07 14:12:45,00:00,,1,,"b'b"" Hi there", whilst compiling the branch I got the following warning (it appeared yesterday, but thought I\'d give it some time before reporting): I didn\'t find any relevant issue already filed," so filing here :) Nothing serious though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,1,2015-02-07 14:12:45,0.92,,1,,"b""b' BTW"," spits out:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,2,2015-02-07 14:12:45,92.6,,1,,"b'b"" I saw that too a few days ago and thought I was going a bit crazy since that code hasn\'t been touched in a while. But", it looks like 45102a6f639712cd6025112bac6a988dc6e6b897 actually causes to become undefined on Linux (not good!  no tests?  CI? ?) So, if we look into it, is defined by on Linux, but in  , we only include features _after_ we check for that GLIBC at the top.  So," it\'s very busted. The best fix is to just move the include of to the top of the file so everything is consistent. That looks like: Open a PR with that fix and take credit for it yourself.  :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,3,2015-02-07 14:12:45,77.03,,,1,"b""b' Such generosity! :)Done"," PR is #2372.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,closed,2015-02-07 17:03:19,170.57,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,4,2015-02-07 14:12:45,927.77,,1,,"b""b' Reopened because we need a regression here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,reopened,2015-02-10 08:31:04,927.75,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,5,2015-02-07 14:12:45,309.57,,1,,"b""b' Regression test added"," closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,closed,2015-02-10 13:40:39,309.58,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2371,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,opened,2015-02-12 03:34:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,title,2015-02-12 03:34:28,00:00,,1,,"b""b' [Feature Request] read-only mode for maintainance'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,body,2015-02-12 03:34:28,00:00,,1,,"b""b' For maintainance", I think setting read-only mode is useful.(not for seperate client with readonlyCommand) for example, when change master server to another. To ensure," master data is not changed.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,1,2015-02-12 03:34:28,82.15,1,,,"b""b' Will Redis provide permission management to support read-write andread-only ? 2015-02-12 11:35 GMT+08:00 charsyam notifications@:##  long is the way and hard  that out of Hell leads up to light'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,2,2015-02-12 03:34:28,4.93,1,,,"b'b"" @darionyaphet I am sorry. I don\'t know what you want exactly.If you want some information about thissee readonlyCommand""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,3,2015-02-12 03:34:28,128.22,,1,,b'b\' @darionyaphet It is just a feature request waiting for feedback.Currently Redis can be read-only when it is  , and  .After merging this in," we can setup Redis master (or standalone) instance to disallow all write requests.With ""config set""", we can change it dynamically, on the fly.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,4,2015-02-12 03:34:28,31.72,,1,,"b""b' I think this is useful"," and considerably easy to implement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,5,2015-02-12 03:34:28,519.93,1,,,"b""b' @charsyam sorry I want to say redis could implement a privilege management to check Client could write to redis or just reading \\xef\\xbc\\x9f '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,6,2015-02-12 03:34:28,1086.58,1,,,"b""b' @antirez Do you have any idea for this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,closed,2015-02-23 10:28:00,413.53,4,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,reopened,2015-02-23 10:28:03,0.05,4,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,7,2015-02-12 03:34:28,41.95,,1,,"b'b"" Hello", I feel like this will make more sense when we\'ll have extended AUTH with ACLs as proposed in REP 1, so that read only can be removed only by administrator level. As it is the scope is limited," so better to wait a bit more and add it in a better way. Closing for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,closed,2015-02-25 11:09:57,41.9,4,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2388,closed,-,-,-,4,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,opened,2015-03-31 02:12:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,title,2015-03-31 02:12:08,00:00,,1,,"b""b' Sentinel maintenance'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,body,2015-03-31 02:12:08,00:00,1,,,"b""b' Add maintenance mode to sentinel.. kind of like we talked about at redis con @antirez '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,1,2015-03-31 02:12:08,0.82,,1,,"b""b' I barfed on this PR"," closing and opening two separate ones'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,closed,2015-03-31 02:12:57,0.82,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,reopened,2015-03-31 02:14:42,1.75,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,2,2015-03-31 02:12:08,3.03,,1,,"b""b' Me on github tonight: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2482,open,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,opened,2015-06-05 03:00:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,title,2015-06-05 03:00:01,00:00,,1,,"b""b' Some question with my test'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,body,2015-06-05 03:00:01,00:00,,,1,"b'b"" At Redis 3.0.1 I have six nodes with 3 masters and 3 slave ", please call them m1-s1 , m2-s2,m3-s31\\xe3\\x80\\x81I always keep writing data into redis-cluster  \\xe3\\x80\\x82 I  stop the m3  \\xef\\xbc\\x8cthe cluser is error .If I stop the s3 ,the cluster isn\'t error \\xe3\\x80\\x82How to solve this problem \\xef\\xbc\\x8c or  How to config the configuration \\xef\\xbc\\x9f2\\xe3\\x80\\x81I have written the data into redis-cluster , I stop the m3 ,the s3 will become the m3\' ; and then I start the m3 that will become the s3\' ; But I stop the m3\' again , the s3\' don\'t become the m3\'\' . and when i start the m3\' becomes the slave , at the same time , one of other slaves likes becoming the master.And How to solve this problem \\xef\\xbc\\x8c or  How to config the configuration \\xef\\xbc\\x9f By the way ," Do you know these issues ?  Please give me some suggestion \\xef\\xbc\\x81 Thanks ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,closed,2015-06-05 03:00:12,0.18,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,reopened,2015-06-05 03:29:29,29.28,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,1,2015-06-05 03:00:01,338.52,,,1,"b'b"" It\'s not 100% clear what you actually want. If this is a properly set up Redis Cluster", a failover should happen if you stop a master instance.If an old master is rebooted, it will become a slave and sync again. If you kill the new master before this sync finishes," you lose data. Keep in mind that this issue tracker should be used for bugs or improvements to the Redis server. For questions like yours please ask on the [mailing list]url  or ask in the irc channel on freenode.It might be a good idea to include logs and the config.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,2,2015-06-05 03:00:01,1394.27,,,1,"b'b"" @badboy  Thanks for your suggestion ",  I just want to know how to  solve those problems ,because when they have been happen \\xe3\\x80\\x82Normally \\xef\\xbc\\x8c if a master was kill , the slave will become a master , and then i start the master that was killed , it will become a slave ; And when I kill the master that was master ," the slave will become master again \\xe3\\x80\\x82 But it seems like that I couldn\'t test the result \\xe3\\x80\\x82Best wishes \\xef\\xbc\\x81""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,closed,2015-06-10 01:49:34,1340.08,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2606,closed,-,-,-,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,opened,2015-06-16 08:17:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,title,2015-06-16 08:17:36,00:00,,1,,"b""b' Why? Testing found that redis cluster in a master instance down"," the entire cluster will enter the unavailable state in a very short period of time'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,body,2015-06-16 08:17:36,00:00,,1,,"b""b' Why? Testing found that redis cluster in a master instance down"," the entire cluster will enter the unavailable state in a very short period of time'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,1,2015-06-16 08:17:36,14.37,,1,,"b""b' That is intentional. It can be changed though: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,2,2015-06-16 08:17:36,11.83,,,1,"b""b' Thank you~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,3,2015-06-16 08:17:36,12.22,1,,,"b'b\' This is apparently ""The Redis Cluster FAQ"". Maybe we\\\'ll change the defaultsoon or later... On Tue", Jun 16, 2015 at 10:32 AM," Jan-Erik Rediger <notifications@##  Salvatore \\\'antirez\\\' Sanfilippoopen source developer Pivotal url  ""If a system is to have conceptual integrity"," someone must control theconcepts.""   \\xe2\\x80\\x94 Fred Brooks",The Mythical Man-Month, 1975.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,4,2015-06-16 08:17:36,31.45,,1,,"b""b' Noted. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,5,2015-06-16 08:17:36,1057.2,,1,,"b""b' Modify \\xe2\\x80\\x9ccluster-require-full-coverage no\\xe2\\x80\\x9d",The re testing found that there was no solution to the problem," and would it be needed to change other places or have other reasons?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,closed,2015-06-17 03:05:06,1127.5,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,reopened,2015-06-17 03:05:38,0.53,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2626,open,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,opened,2015-07-22 16:42:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,title,2015-07-22 16:42:53,00:00,,1,,"b""b' Never get the benchmark said in the official Doc'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,body,2015-07-22 16:42:53,00:00,,,1,"b'b"" The official Doc write about the benchmark on a Macbook air. But on my Macbook Pro 13\' I type in the exactly same command but only got around 150",000 tps. My Macbook Pro is the early 2011 release. I run the command again an again," but result the same. PS: 1.I\'ve disabled all persistence feature that may slow down redis according to the Doc said.2. I read the Doc very thoroughly and make sure every config is in the right place. Thank you""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,1,2015-07-22 16:42:53,11.22,,1,,"b""b' Benchmarks are a highly varying thing. The page does not even further describe the used hardware or benchmark. Different results on different hardware is thus not unexpected. Keep in mind that this issue tracker should be used for bugs or improvements to the Redis server. For questions like yours please (and there is not even a real question here"," is it?) ask on the [mailing list]url  or ask in the irc channel on freenode.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,2,2015-07-22 16:42:53,1423.17,,1,,"b'b"" I understand benchmarks is indeterministic. But I don\'t think it can differ so much. What I really trying to ask is that", in our production environment, we were only able to achieve the 5k TPS at most per redis instance. Using pipeline surely help, but can only get 15k TPS at most. But our business senario make the pipeline approach impossible. So we have to send the command one by one. With high parallels, we were also able to exaulst the redis cpu to 100%(most cpu consumption is S not U in nmon ). After reading carefully the Docs again, I found that, among many things, your claimed 50k on Macbook air is already a high mark that our server(or my Macbook pro) can barely match. With this apparently large gap, therefore," I believe I don\'t need compare the hardware specs to get to conclusion that there must be something wrong on the software things other than the hardware difference or the indeterministic nature of benchmark.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,3,2015-07-22 16:42:53,20.92,,1,,b'b\' Hello," tests differ even between OSX versions. This is my (2 years old) macbook air with latest OSX: However I\\\'ve a lot of CPU used right now. If you have a Core duo MBP 13"" 150k ops are expected. Linux performs much better. If you get 5k  in your entry level Linux box", something is _seriously broken_ in your setup and you should carefully inspect this. Even the most unoptimized Redis instance can give you 50k  without pipelining.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,4,2015-07-22 16:42:53,12.98,,1,,"b""b'   on a mostly idle Intel i5 2.5 Ghz Linux machine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,5,2015-07-22 16:42:53,3.38,,,1,"b'b"" Wow that\'s fast @badboy. In order to have a total fair benchmark that mimics real-world behavior"," could you retry with -r 10000000 letting it run some time? This will write 10M random keys going always outside the cache line.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,6,2015-07-22 16:42:53,11.87,,,1,"b'b"" wait! Our server\'s 50k TPS benchmark is without the  ", because our business senario disable this approach," TPS using pipeling or lua script is not important for us . Is it still unnormal for this 50k  performance? the server is indeed a virtual machine with only two cores""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,7,2015-07-22 16:42:53,4.45,,,1,"b""b' 50K is still not super great but if you context switch at every single request by never using pipelining", then yes, performances will lower: 120K in fast servers," 50K in slower servers. In order to improve performance in this case there is the plan to make the I/O threaded like memcached (but not the data access).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,8,2015-07-22 16:42:53,0.82,1,,,"b'b"" Oh sorry! my fault! it\'s 50k not 5k.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,9,2015-07-22 16:42:53,5.1,,1,,"b""b' NP 50k is not stellar but in line with what you can expect from VMs or not very fresh servers"," if pipelining is not used.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,10,2015-07-22 16:42:53,83.38,1,,,"b'b"" Yep 50K is pretty much what I\'m used to from an AWS EC2 instance w/opipelining On Thu", Jul 23, 2015 at 8:37 PM," Salvatore Sanfilippo <notifications@##  _Itamar Haber_ | Chief Developers Advocate_Redis Watch Newsletter url  *-Curator and Janitor*Redis  url  url *Enterprise-ClassRedis for Developers Mobile: +1 (415) 688 2443Mobile (IL): +972 (54) 567 9692Email: itamar@Twitter: @itamarhaber url Skype:  Blog url |  Twitterurl |  LinkedInurl  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,closed,2015-07-31 02:50:32,607.65,2,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,reopened,2015-07-31 02:50:40,0.13,2,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,11,2015-07-22 16:42:53,475.43,,,1,b'b\' Well, I do notice that when it\\\'s without pipeline," most of the cpu usage is ""S"""," not ""U"". A lot of time is indeed spent on I/O. The CPU\\\'s other cores is super idle. I bet utilizing more cores to do the IO job is sure to boost redis very lot! Thank you all for the timely reply!\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,closed,2015-07-31 02:55:36,4.93,2,6,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2685,closed,-,-,-,2,6,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,opened,2015-09-12 15:13:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,title,2015-09-12 15:13:40,00:00,,1,,"b""b' Feature new command GETEX'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,body,2015-09-12 15:13:40,00:00,,,1,"b'b\' I miss a command which gets me a value and also extends the TTL with one call. I think that could save a lot of requests in some use cases. Example: 1 redis(nil) 2 redisOK 3 redis""Hello"" 3 redis would also run this command: EXPIRE mykey 100 Is there a chance that you might add this command?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,1,2015-09-12 15:13:40,72.73,,1,,"b""b' You can just use + in a transaction.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,closed,2015-10-01 18:04:28,170.8,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,2,2015-09-12 15:13:40,115.57,,1,,"b""b' @badboy Get and touch is a common pattern and in terms of API parity I do not understand why SETEX is performed without a transaction and GET + EXPIRE requires a transaction. Can we revisit this? Also asked in [#1652]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,3,2015-09-12 15:13:40,55.62,,1,,"b""b' Is this available ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,4,2015-09-12 15:13:40,248.78,,1,,"b""b' This should be implemented get and ex is a common use case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,5,2015-09-12 15:13:40,11.93,,1,,"b""b' @HcgRandon  I feel the same.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,6,2015-09-12 15:13:40,878.57,,1,,"b""b' @HcgRandon How can I set the expire in a GET: url  in a single ?  If we can do that it would save a lot of extra requests to the server. That is the point of SET with EX"," NX and XX flags.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,7,2015-09-12 15:13:40,6.1,,1,,"b'b"" There\'s no command for that implemented currently. You can use or use a Lua script to do the same.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,8,2015-09-12 15:13:40,7.5,,1,,"b""b' Right", the transaction will maintain the operation being a single unit but will not decrease the number of operations (rather increase and increase the latencies as well). Lua scripting is a potential solution to add any new operation but this is a hacky way for my environment only. Here we are trying to make an argument of a larger user need. In addition," I am still wondering why not to have it in the baseline Redis to achieve an API parity with or and flag. An additional point from my use case is that our users of [Dynomite]url  cannot use transactions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,9,2015-09-12 15:13:40,53.82,,1,,b'b\' Yes," we are all very much aware of scripting and multi. My point is \\\'setex\\\' current exists because ""it is a common api use"". Setex is atomic it is exactly equivalent to running set followed by expire. I\\\'m proposing we add getex", because this is also a very common use case of redis. Setex exists without scripting or multi. I believe getex should as well\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,10,2015-09-12 15:13:40,1214.52,,1,,"b""b' really expect this get and touch feature"," and memcached also provides this convenient api.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,reopened,2017-10-01 23:46:20,341.87,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,11,2015-09-12 15:13:40,87.62,,1,,"b'b"" Sometimes a voice gets lost in the mix. I have to add that I agree that this is a very common use scenario **SETEX** needs a corresponding **GETEX**", dare I say we have more uses for GETEX than we do for SETEX  Yes, using  will do," but I don\'t think it should have to be required for said **common operation**. It always feels like I am doing something wrong ...Like my SQL roots are getting in the way of my redis thinking. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,12,2015-09-12 15:13:40,155.0,,,1,"b'b"" Hello", in theory, we may model something like this in a similar fashion as we did with  , that is by passing arguments to  . In practice this would turn as a write command depending on the parameters used, which is kinda of a problem... so basically if we want to model this pattern as a first class citizen, there is to add a command in an explicit way. I did not expect to be a very used pattern, even if I can see how it\'s pretty useful in certain conditions," please could you comment with your use cases in order to make a convincing argument about the generality of this combo command? Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,13,2015-09-12 15:13:40,156.85,1,,,"b'b"" P.S. also note that we could potentially add this feature as an option for even if it\'s a very odd API in certain ways... So I would say it\'s not the case but just to bring all the options to the table.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,14,2015-09-12 15:13:40,451.13,,1,,"b'b"" I\'ve not yet seen anyone comment here"," so I hope I\'m not spamming or posting in the wrong area. We\'re currently using it just to extend the time something is cached such that keys that are accessed often will stay longer and keys that are not accessed often will expire.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,15,2015-09-12 15:13:40,1298.47,,1,,"b'b""  Sometimes various cached items have a wide distribution in terms of how often they\'re requested so it doesn\'t make sense to just have the same expiry time for all items of certain type.  I\'m making an app that uses the Twitter API. I use Redis to cache the ID of tweets I\'ve already added to MySQL. To save memory capacity", I don\'t want to persist all Redis items indefinitely.  I can set the same expiry time on every cached Tweet ID (e.g. three hours) and then-if it expires in Redis, but the popular tweet shows up retweeted on a user timeline that my app is reading-check my database again to confirm that the tweet has been added in MySQL, and cache the Tweet ID in Redis again for 3 hours.  But it would be better if the popular Tweet ID didn\'t expire from Redis," because every time I do a \'get\' on it I extend the expiration time by another 3 hours.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,16,2015-09-12 15:13:40,1419.98,,1,,"b'b"" I think there are quite many use cases. Let\'s say you give all your keys an expiration time. With get and expire you make sure that only the keys which were recently used will be stored some more time. Keys which weren\'t accessed recently will be removed from the cache. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,17,2015-09-12 15:13:40,323.87,,1,,"b'b"" As someone who\'s surfin\' the webz looking for mostly-Redis-related stuff", I can definitely say that an RW is more than a common requirement in the caching contexts brought above. It is, by far," the most intuitive way to kill these two birds with one simple op.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,18,2015-09-12 15:13:40,362.47,,1,,"b""b' >please could you comment with your use cases in order to make a convincing argument about the generality of this combo command? expensive data related to user session: we have multiple app servers", and we use redis to share user data between servers," while the user is active in our site (navigating between pages) we need that data. When the user leaves the site (no more request) it is ok to get rid of this data from the redis server.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2762,open,-,-,-,1,17,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,opened,2015-12-15 18:23:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,title,2015-12-15 18:23:42,00:00,,1,,"b'b"" Debugger doesn\'t report run-time errors""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,body,2015-12-15 18:23:42,00:00,,1,,"b""b' When a script with a run-time error is executed", the error is properly reported: However, when the same code is executed in the debugger," the error is not reported: Expected result: reported run-time error.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,1,2015-12-15 18:23:42,231.15,,1,,"b""b' This happens because redis-cli was not started with ldb as specified in the debugging doc", since the error is send after  , but the redis-cli cannot know when running in normal mode. What should be done, basically, is to detect that the user typed end automatically enter into the debugging mode. However this has drawbacks, I need to investigate better. So perhaps an even better solution is that when the user types in a normal session," is simply warned that this is not going to work and should be used. This is what happens using it in the proper way:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,2,2015-12-15 18:23:42,45.15,1,,,"b'b"" Salvatore", this is not going to work as I\'m working on a remote debugging that has no way of imitating ldb (as I\'m strictly limited by what can be sent over Redis protocol). I thought is also working in the same way (based on what I gathered from the source), but maybe I\'m missing something. Maybe this is the relevant fragment: Based on what I understand, when this happens I just need to do one more read (what does) to get the actual error message. If that\'s the case and this provides me access to the error message," then I probably don\'t need anything else.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,3,2015-12-15 18:23:42,1.97,,1,,"b'b"" Also"," I wouldn\'t want to disable debugging from as it\'s quite useful for debugging of debugging ;)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,4,2015-12-15 18:23:42,12.65,,,1,"b""b' I got it working with reading one more response after getting  . Thank you for looking into this! Closing...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,closed,2015-12-15 23:14:37,290.92,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,5,2015-12-15 18:23:42,442.62,,,1,"b""b' @pkulchenko glad you found your solution (you can send anything", PING for example, to get the last reply, but then the protocol is desynchronized). Btw," what about detecting the command in order to setup redis-cli so that it will do it for us? Reopening the issue since maybe the next person doing the same thing will have less troubles if we implement that :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,reopened,2015-12-16 06:37:14,442.62,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,6,2015-12-15 18:23:42,523.07,,1,,"b""b' I think this would be the ideal solution.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,7,2015-12-15 18:23:42,1044.33,,1,,"b""b' Fixed"," now using SCRIPT DEBUG will activate the debugging mode.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,closed,2016-01-08 08:44:38,127.4,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2952,closed,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,opened,2015-12-21 15:10:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,title,2015-12-21 15:10:01,00:00,,1,,"b""b' Cluster: nodes have a different slots mapping after a reshard'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,body,2015-12-21 15:10:01,00:00,,1,,"b'b"" Randomly", after a reshard, nodes don\'t share the same slot mapping. Here is an example. Before reshard, there are 4 nodes: One node is removed, and after reshard," the slots 5458-5461 are not correctly updated on one node:    nodes_7000.conf  nodes_7002.conf nodes_7004.conf ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,1,2015-12-21 15:10:01,1375.02,,,1,"b""b' Hello", if I understand this correctly in order to replicate this I should:1. Setup a 4 nodes cluster.2. Fill it with some data.3. Reshard away all the slots of a given node to the other three nodes (how do you do this exactly," so that I can do things as similarly as possible?)4. Finally remove the master entirely. Am I right? Could you kindly provide the steps you use so I can try to reproduce this? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,2,2015-12-21 15:10:01,202.35,,1,,"b""b' Yes you are rigth. My application is written in nodejs. Slots are moved in series.In our case"," slots are moved according to the following table: Slot 4096  127.0.0.1:7002 -...Slot 5458  127.0.0.1:7002 -Slot 8192  127.0.0.1:7004 -...Slot 10922 127.0.0.1:7004 -Slot 12288 127.0.0.1:7006 -...Slot 16383 127.0.0.1:7006 -Here is the methods use to move each slot:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,closed,2016-01-07 17:27:23,137.37,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,reopened,2016-01-07 17:27:37,0.23,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,3,2015-12-21 15:10:01,1043.23,1,,,"b'b"" Thanks for the info", it is possible that you try to move multiple slots at the same time? Btw I see you are not using the utility to move slots, so it is possible that there is some kind of bug in the  code (I don\'t understand it enough to spot subtle bugs," sorry). Did you tried if a similar thing happens with redis-trib? Using the new version if redis-trib you can empty a node just using the command assigning a given node the weight of zero.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,4,2015-12-21 15:10:01,1043.9,,1,,"b'b"" Btw I\'m checking better the whole report in order to spot if there is something obviously wrong in some way.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,5,2015-12-21 15:10:01,1077.82,,,1,"b'b"" Basically it\'s not yet clear how it happens", but this is what happens:1. If you check the output, the node with not updated information about the slot is the _receiving_ node itself.2. For some reason, this node, has no information about the fact it got the slots assigned (your script bug? Some race condition in Redis Custer by using commands to setup the slot in a certain order?). Or perhaps the node used to know about the config, but later this information is cleared by an UPDATE packet or alike.3. The other nodes are informed of the change correctly. So now there is no node claiming this set of slots in the cluster. When this happens the information can\'t propagate, since we propagate cluster slots info in two ways:1. Slot owner ping another node: the info in the receiver node is updated.2. Past slot owner claims to have slots, but other nodes know there is a node with greater configuration epoch owning them, so an UPDATE packet is set. So this is a stalled condition. Now the issue is," how this stalled condition is reached? Can you try to replicate this issue in the most minimal way possible?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,6,2015-12-21 15:10:01,1005.62,,1,,b'b\' Hi Salvatore,"  I am currently working at rewritting a light version of my nodejs app in ruby using redis-trib. I will try to reproduce the issue with it.  My feeling is that your hypothesis ""the node used to know about the config"," but later this information is cleared by an UPDATE packet or alike."" is right. I\\\'m trying to make a full cluster resharding as fast as possible", and maybe I have some requests in parallel instead of series.  I will keep you informed. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,7,2015-12-21 15:10:01,1044.33,,,1,"b'b"" Thanks! I\'ll investigate more in the meantime.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,8,2015-12-21 15:10:01,993.2,,1,,"b'b"" I can\'t reproduce the issue with redis-trib", so I guess there is an error in my nodejs application. Probably," the application should begin to move slots from a second node while the migration on a first node is not yet finished.The cluster\'s resharding is almost 2 times faster in nodejs. Here is the redis-trib patch is used for my tests.It is add a command which reads a json file containing slot mapping A script use to create json config file:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,9,2015-12-21 15:10:01,1201.4,,1,,"b'b"" After more analysis", I guess this case happens because a migrate command fails and my scripst doesn\'t handle correctly this error: So I will change my application, but I don\'t see why the migrate command fails sometines.With different scripts (nodejs and redis-trib)," migrate command fails with the following errors:    ERR Target instance replied with error: CLUSTERDOWN The cluster is down    ERR Target instance replied with error: READONLY You can\'t write against a read only slave.    LOADING Redis is loading the dataset in memory (Redis::CommandError""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,10,2015-12-21 15:10:01,8.25,1,,,"b'b"" Hi", i have the same problem on redis-cluster 4.0.8. My cluster configured as 19 shards (57 nodes total), network latency ~1,76ms. Problem was not reproduced by redis-trib, cause redis-trib processed nodes one-by-one (migrate all slots from one node, then migrate all slots from next node). To reproduce this bug, i\'m write a script (on error, an exception will occur): migration method: url  migration script: url  log tail (at the begin of the log," messages are the same): url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,11,2015-12-21 15:10:01,18.77,,,1,"b'b"" Hello", @artix75 recently ported redis-trib inside redis-cli, so now it\'s all C coded, and after the release of 5.0 RC1 due at the end of the week, we\'ll literally spend months addressing Redis Cluster problems. Tooling is the major one indeed, but also resiliency in these cases and the ability for to be able to fix things in any situation and to prevent failing migrations in general (for instance using more adaptive timeouts).  Do I understand correctly that right now this problem is mainly due to the fact that you are using private migration scripts? Currently some Redis Cluster safety properties rely a bit on the fact that we migrate each hash slot every time singularly, one after the other. This has the problem of being slow btw, so many users end writing faster migrating scripts. We want to formalize in some way multiple hash slots migration at once, so that there will be no need to write scripts and that the operation can be safer. It is not trivial but is definitely doable, but we\'ll need to re-analyze the algorithm used by Redis Cluster to make sure that the current properties of eventual consistency of the configuration are hold.  Also it is interesting what some user mentioned here, that is, certain things should auto-fix. For instance probably it does not make sense to continue to keep an open slot in importing state from a node that no longer claims to have such slot assigned? There is to understand if it is safe and if also just keeping the slot open could simply result into detection that something went wrong with some other operation.  Somebody here also mentioned speed of migration regardless of multiple hash slots migrated at once, well the new implementation inside is faster around 2 times, depending on the case. I\'ll re-check this issue in the next weeks. I hope @artix75 which is currently focused on this problems could check it before and report his findings," but anyway you\'ll see many new things in this space soon! Redis 6.0 will be very focused on better Redis Cluster operations.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,12,2015-12-21 15:10:01,923.55,,,1,b'b\' >Do I understand correctly that right now this problem is mainly due to the fact that you are using private migration scripts?  Yes. >Currently some Redis Cluster safety properties rely a bit on the fact that we migrate each hash slot every time singularly, one after the other.  Yes, my script migrate each hash slot every time singularly, one after the other, but select source node after each slot migration. I think the main problem in Epoch Collision: in real case (big clusters with network latency), the configuration is comes with a delay. It can happen that a newer configuration is applied earlier, before the old configuration reached. When using redis-trib, collisions are rare, because the source node rarely changes. I avoided the problem," by modifying migration method: url  After ""CLUSTER SETNODE NODE"" on the destination node", a new configuration is generated," and I\\\'m waiting for the configuration synchronization. This is implemented by calling ""CLUSTER SLOTS"" on the target and source nodes and comparing the results. If result is equal", then new configuration was applied and new migration can started.  If you need more debugging information, I\\\'m ready to help. I will wait for a new version of redis-cluster. Thank you for attention. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,13,2015-12-21 15:10:01,393.27,,1,,"b'b"" Hey guys", I\'ve also run into this on a production redis cluster. It\'s rare and usually the fault of the rebalancing software, but the issue is it\'s very difficult to fix with our current tools.  I can fix the issue manually on master nodes using SETSLOT, but replicas ignore the command and keep using the inconsistent slot mapping. Otherwise it could be fixed if it was possible to bump the epoch on the master who should own the slot. The only alternative I can think of is to convert the broken replicas to empty masters in order to call SETSLOT.  I\'m using an internal cluster rebalancing daemon that works well and normally avoids these issues. This was very common during development though, as I was doing the rebalance across nodes in parallel. From my understanding," issue is caused when a node is simultaneously importing and migrating slots.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,2969,open,-,-,-,2,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,opened,2016-02-04 17:05:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,title,2016-02-04 17:05:08,00:00,,1,,"b""b' Not unlinking temp AOF files'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,body,2016-02-04 17:05:08,00:00,1,,,"b'b"" I\'ve recently installed redis 3.0.6 in Azure and I\'ve finding an issue where redis is not unlinking AOF files when it does a rewrite"," causing a serious issue where it very quickly fills up the disk ...-rw-rw-1 redis redis 26807791546 Feb  4 15:17 temp-rewriteaof-34196.aof-rw-rw-1 redis redis 24118693105 Feb  4 15:40 temp-rewriteaof-39638.aof-rw-rw-1 redis redis 26998498671 Feb  4 16:04 -rw-rw-1 redis redis 20559924126 Feb  4 16:26 temp-rewriteaof-49372.aof-rw-rw-1 redis redis 14787871570 Feb  4 16:50 drwxr-xr-x 2 redis redis    4096 Feb  4 16:57 .-rw-rw-1 redis redis  6569108251 Feb  4 17:00 temp-rewriteaof-58048.aof... ...1516:S 24 Jan 14:05:00.753 \\\\* Background saving terminated with success1516:S 24 Jan 15:00:02.024 \\\\* Background saving started by pid 1097910979:C 24 Jan 15:04:57.031 \\\\* DB saved on disk10979:C 24 Jan 15:04:57.484 \\\\* RDB: 3503 MB of memory used by copy-on-write1516:S 24 Jan 15:04:58.532 \\\\* Background saving terminated with success1516:S 24 Jan 16:00:01.684 \\\\* Background saving started by pid 2314023140:C 24 Jan 16:04:56.223 \\\\* DB saved on disk23140:C 24 Jan 16:04:56.694 \\\\* RDB: 3520 MB of memory used by copy-on-write1516:S 24 Jan 16:04:57.905 \\\\* Background saving terminated with success1516:S 24 Jan 17:00:02.362 \\\\* Background saving started by pid 3531535315:C 24 Jan 17:04:56.993 \\\\* DB saved on disk35315:C 24 Jan 17:04:57.449 \\\\* RDB: 3565 MB of memory used by copy-on-write1516:S 24 Jan 17:04:58.529 \\\\* Background saving terminated with success1516:S 24 Jan 18:00:02.079 \\\\* Background saving started by pid 4748547485:C 24 Jan 18:05:01.446 \\\\* DB saved on disk47485:C 24 Jan 18:05:01.902 \\\\* RDB: 2674 MB of memory used by copy-on-write...skipping...1516:S 04 Feb 15:00:03.607 \\\\* Background append only file rewriting started by pid 341961516:S 04 Feb 15:17:20.922 # Background AOF rewrite terminated by signal 91516:S 04 Feb 15:17:21.023 \\\\* 1000 changes in 600 seconds. Saving...1516:S 04 Feb 15:17:21.496 \\\\* Background saving started by pid 3771937719:C 04 Feb 15:26:53.148 \\\\* DB saved on disk37719:C 04 Feb 15:26:53.575 \\\\* RDB: 5504 MB of memory used by copy-on-write1516:S 04 Feb 15:26:55.278 \\\\* Background saving terminated with success1516:S 04 Feb 15:26:55.378 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 15:26:55.857 \\\\* Background append only file rewriting started by pid 396381516:S 04 Feb 15:40:56.882 # Background AOF rewrite terminated by signal 91516:S 04 Feb 15:40:56.983 \\\\* 1000 changes in 600 seconds. Saving...1516:S 04 Feb 15:40:57.485 \\\\* Background saving started by pid 4247542475:C 04 Feb 15:48:01.292 \\\\* DB saved on disk42475:C 04 Feb 15:48:01.784 \\\\* RDB: 4868 MB of memory used by copy-on-write1516:S 04 Feb 15:48:03.372 \\\\* Background saving terminated with success1516:S 04 Feb 15:48:03.472 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 15:48:03.958 \\\\* Background append only file rewriting started by pid 439221516:S 04 Feb 16:04:01.313 \\\\* AOF rewrite child asks to stop sending diffs.43922:C 04 Feb 16:04:01.314 \\\\* Parent agreed to stop sending diffs. Finalizing AOF...43922:C 04 Feb 16:04:01.314 \\\\* Concatenating 0.00 MB of AOF diff received from parent.43922:C 04 Feb 16:04:01.315 \\\\* SYNC append only file rewrite performed43922:C 04 Feb 16:04:01.739 \\\\* AOF rewrite: 7701 MB of memory used by copy-on-write1516:S 04 Feb 16:04:03.591 \\\\* Background AOF rewrite terminated with success1516:S 04 Feb 16:04:03.591 \\\\* Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)1516:S 04 Feb 16:04:03.591 \\\\* Background AOF rewrite finished successfully1516:S 04 Feb 16:04:03.691 \\\\* 1000 changes in 600 seconds. Saving...1516:S 04 Feb 16:04:04.216 \\\\* Background saving started by pid 4718847188:C 04 Feb 16:14:51.910 \\\\* DB saved on disk47188:C 04 Feb 16:14:52.318 \\\\* RDB: 6147 MB of memory used by copy-on-write1516:S 04 Feb 16:14:53.986 \\\\* Background saving terminated with success1516:S 04 Feb 16:14:54.086 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 16:14:54.562 \\\\* Background append only file rewriting started by pid 493721516:S 04 Feb 16:26:39.229 # Background AOF rewrite terminated by signal 91516:S 04 Feb 16:26:39.330 \\\\* 1000 changes in 600 seconds. Saving...1516:S 04 Feb 16:26:39.823 \\\\* Background saving started by pid 5176551765:C 04 Feb 16:33:02.874 \\\\* DB saved on disk51765:C 04 Feb 16:33:03.318 \\\\* RDB: 4648 MB of memory used by copy-on-write1516:S 04 Feb 16:33:04.884 \\\\* Background saving terminated with success1516:S 04 Feb 16:33:04.984 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 16:33:05.510 \\\\* Background append only file rewriting started by pid 5309153091:C 04 Feb 16:39:22.645 # Write error writing append only file on disk: No space left on device1516:S 04 Feb 16:39:24.620 # Background AOF rewrite terminated with error1516:S 04 Feb 16:39:24.720 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 16:39:25.229 \\\\* Background append only file rewriting started by pid 5440054400:C 04 Feb 16:45:46.226 # Write error writing append only file on disk: No space left on device1516:S 04 Feb 16:45:48.176 # Background AOF rewrite terminated with error1516:S 04 Feb 16:45:48.276 \\\\* 1000 changes in 600 seconds. Saving...1516:S 04 Feb 16:45:48.757 \\\\* Background saving started by pid 5569655696:C 04 Feb 16:50:38.723 \\\\* DB saved on disk55696:C 04 Feb 16:50:39.200 \\\\* RDB: 3074 MB of memory used by copy-on-write1516:S 04 Feb 16:50:40.510 \\\\* Background saving terminated with success1516:S 04 Feb 16:50:40.610 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 16:50:41.110 \\\\* Background append only file rewriting started by pid 5668256682:C 04 Feb 16:57:17.960 # Write error writing append only file on disk: No space left on device1516:S 04 Feb 16:57:20.023 # Background AOF rewrite terminated with error1516:S 04 Feb 16:57:20.124 \\\\* Starting automatic rewriting of AOF on 171% growth1516:S 04 Feb 16:57:20.615 \\\\* Background append only file rewriting started by pid 58048... Nothing is logged to say that an unlink failed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,1,2016-02-04 17:05:08,901.28,1,,,"b'b"" Sorry we don\'t offer support for the Windows port since the code base is different. Please report to the Microsoft open source team.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,closed,2016-02-05 08:06:26,901.3,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,reopened,2016-02-05 10:31:30,145.07,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,2,2016-02-04 17:05:08,147.53,1,,,b'b\' Sorry I was not aware Azure does Linux as well... So here the issue is that:1. AOF gets killed by signal 9 by another process," for some reason. Do you have an idea why this happens?2. The disk is full after some time because of ""1"". So the problem appears to be we should cleanup the temp file when the AOF rewriting process fails. However this does not fix", in your specific case, the root issue that appears to be the process is killed by signal 9. The reason why the process is killed in your environment could be the Linux OOM killer.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,3,2016-02-04 17:05:08,693.52,,,1,"b'b"" Hi", I\'m experiencing the same on AWS, Ubuntu 16.04, Redis 3.2.8. In my case, it\'s probably due to too much memory allocated to Redis itself," leaving too few for background tasks like AOF  dumps. This caused the disk to fill up due to these files being left around.  I\'d strong agree with purging these files upon failure. But it would be even better if Redis spared some of the memory dedicated to the cache itself for the housekeeping tasks like the ; this way I wouldn\'t have to bear in mind to leave some memory to other things that are not Redis so that Redis can take care of itself :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,4,2016-02-04 17:05:08,501.47,,1,,b'b\' We\\\'ve been having this happen to us. In the most recent case," the temp files were taking up 15gb on the drive within minutes (see timestamps below) and the server ran out of space so all new rewrites were now failing because there was no disk space. While I agree the the ""root"" of the problem is that the process is getting killed by OOM but even if the memory problem gets fixed", the box will continue to have rewrites fail since it has 0 bytes left on the disk.  Additionally, we\\\'ve been limiting the redis memory to less than half of the system memory (via maxmemory) and yet we still have redis running out of memory during rewrites. Here is the from a server when it was getting killed:   Here\\\'s the directory listing mentioned earlier: \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,5,2016-02-04 17:05:08,329.75,,1,,"b'b"" we\'re experiencing the same issue with redis-server 3:3.2.5-2~bpo8+1 debian"," proxmox vms""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3065,open,-,-,-,3,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,opened,2016-05-13 09:48:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,title,2016-05-13 09:48:58,00:00,,1,,"b""b' Allow non-interactive execution of install_server'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,body,2016-05-13 09:48:58,00:00,,1,,"b""b' This PR adds the ability to execute the installation script non-interactively", useful for automated provisioning scripts such as Chef, Puppet, Ansible, Salt, etc.Simply feed the environment variables into the install script to skip the prompts. For debug and verification purposes," the script will still output the selected config variables.The plus side is that the environment variables also support command substitution (see REDIS_EXECUTABLE).  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,1,2016-05-13 09:48:58,494.75,,,1,"b""b' Supporting automation would be highly appreciated. Would recommend adding a option to force the script to use the defaults as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,2,2016-05-13 09:48:58,774.92,,,1,"b""b' Good feature", please could you update the pull request in order to document, with a top comment, that you can do that and what vars you need to set? Otherwise the feature will get no users. Most people will edit the file to check what it does," and the top comment can be very instructive. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,3,2016-05-13 09:48:58,75.67,1,,,"b'b"" @antirez Done", I\'ve improved the top comment with documentation on how to run the script non-interactively. I\'ve also included an example in the comment," although it might be better to provide the default values into the example in case users  the example?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,4,2016-05-13 09:48:58,65.62,,,1,"b'b"" Looks good to me with 1234 :-) It\'s just an example"," this stuff will likely end in a script with $VAR anyway. Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,closed,2016-06-15 09:19:56,1410.97,1,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,reopened,2016-06-15 09:19:59,0.05,1,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,closed,2016-06-15 09:20:01,0.03,1,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,5,2016-05-13 09:48:58,0.17,,1,,"b""b' p.s. Merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3226,closed,-,-,-,1,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,opened,2016-05-24 09:42:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,title,2016-05-24 09:42:17,00:00,,1,,"b""b' Why redis still occupy huge memory after I delete all keys? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,body,2016-05-24 09:42:17,00:00,,1,,"b""b' I set 100 000 key val string pairs in redis. After I delete all of them"," the info command shows that redis still occupy 11.54M memory and the dbsize command returned 0. What does these memory stored?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,1,2016-05-24 09:42:17,21.18,,1,,b'b\' This is probably the internal data structures\\\' overhead. For example, Redishas a dictionary that it uses to store the keys in. That dictionary isresized as you insert keys, but it isn\\\'t shrunk when you delete them.On May 24, 2016 12:43 PM,"zhenglei2015"" notifications@ wrote: I set 100 000 key val string pairs in redis. After I delete all of them,the info command show that redis still occupy 11.54M memory and the dbsizecommand returned 0. What does these memory stored? \\xe2\\x80\\x94You are receiving this because you are subscribed to this thread.Reply to this email directly or view it on GitHuburl \''
redis	3262	closed	2	oranagra	2016-05-24 09:42:17	19.0		+1		b'b"" actually, the hashtable _is_ resized down when keys are deleted, but not when the dictionary is empty.i expect that if you\'ll add one key, you\'ll see the memory released after some time. if that\'s the problem, it was fixed here (not yet released):url ""'
redis	3262	closed	3	itamarhaber	2016-05-24 09:42:17	76.3			+1	b""b' @oranagra I stand corrected, thank you sir \\xf0\\x9f\\x91\\x8d '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,4,2016-05-24 09:42:17,863.33,,,1,"b""b' @oranagra Thanks for your reply. The problem is fixed on unstable branch I tested. But I get some confused about this. How this working? How many commits are relate to this?  Could you explain more detail? I need to merge this to 3.2 branch and put it online in our  feature is important for us. Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,5,2016-05-24 09:42:17,168.05,,,1,"b'b"" this is just this small patch to redis.c (or server.c depends on the version you use):apply it to any version you like and you\'re good to go.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,6,2016-05-24 09:42:17,60.93,1,,,"b'b"" @oranagra I applied this. But it seems that this only have effect when the dict become empty. After applied it(Redis version 3.2)", I set 10 000 kv and then delete them. Redis still  occupy 10.12M memory. But the problem was really fixed on the unstable branch. After I delete all key in Redis unstable version," Redis only occupy 900k which is same as Redis just started. I found a lot of difference between 3.2 and unstable .....Could you give me some conduct to fix this on 3.2 or other stable version? I\'m trying to do this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,7,2016-05-24 09:42:17,199.05,,,1,"b""b' @oranagra  It does work..... Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,8,2016-05-24 09:42:17,288.38,,1,,"b""b' @zhenglei2015 I think url  will be helpful to you. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,9,2016-05-24 09:42:17,770.8,,,1,"b'b"" @wang502  haha"," I got it. It\'s really  you! ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,closed,2016-05-26 02:49:19,1027.03,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,reopened,2016-05-26 02:49:36,0.28,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,closed,2016-05-28 08:02:16,312.67,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3262,closed,-,-,-,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,opened,2016-06-23 09:54:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,title,2016-06-23 09:54:08,00:00,,1,,"b""b' Print issue After replication of Slave from master -Description of salve still start with M: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,body,2016-06-23 09:54:08,00:00,,,1,"b""b' I have tried to create 3 masters and 6 slaves. After replication and slave creation description still starts with **M :**Can we modify same to start with S: Like before replication shown for slave below. It will be easy to understand. hitesh@BLR1000009988:~/redis-3.2$ create replicas 2 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 127.0.0.1:7006 127.0.0.1:7007 127.0.0.1:7008'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,1,2016-06-23 09:54:08,402.1,1,,,"b""b' +1Well"," I too had faced this confusion while I was trying this for the first time. Wanted to fix it here from then. Will give PR for this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,2,2016-06-23 09:54:08,750.18,,1,,"b""b' Have tested this one in my lab. @antirez Kindly check and merge.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,closed,2016-08-05 13:10:41,196.55,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,reopened,2016-08-05 13:21:41,11.0,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,3,2016-06-23 09:54:08,495.57,,1,,"b""b' Hello"," this was closed by merging a PR. Should be ok now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,closed,2016-08-05 13:22:00,0.32,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3337,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,opened,2016-07-16 11:07:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,title,2016-07-16 11:07:32,00:00,,1,,"b'b"" Single-Master Cluster Doesn\'t Fail Over""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,body,2016-07-16 11:07:32,00:00,1,,,"b'b"" I\'m investigating deploying Redis Cluster at scale. The big holdup for me is that I need to isolate nodes across fault domains. That is -I don\'t want to allow for the possibility of multiple nodes from the same fault domain serving the same set of slots. To that end", my preferred solution is several small disjoint clusters with some consistent hashing sprinkled on top of that. This allows me to keep all of Cluster\'s advantages while guaranteeing my fault tolerance. My preferred configuration is one Master and two Slaves per cluster, so that I can tolerate two concurrent failures and not need to worry about manually migrating slots between masters. However, it seems that when running in this 1+2 configuration, and I kill the Master, then the Slaves are unable to come to a consensus about who the master should be. From the Cluster spec, it seems like this is because there are no other masters in the cluster," so no election is possible. Is there a way that Slaves could have an election in the absence of Masters?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,1,2016-07-16 11:07:32,24.17,,1,,"b""b' Sounds like you want Redis Sentinel"," instead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,2,2016-07-16 11:07:32,880.57,,1,,"b""b' follow upstair","redis sentinel can help you .I have use it with some DIY script'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,3,2016-07-16 11:07:32,6.07,,,1,"b""b' nice work'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,4,2016-07-16 11:07:32,3.35,,1,,"b""b' thx'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,5,2016-07-16 11:07:32,310.02,,,1,"b'b"" Thanks", folks. You\'re right -I got too hung up on Cluster. Sentinel does better fit the use case I described. But Cluster is _cool_ :) I\'m super excited about using Cluster, and I\'ve been studying it intensely for about a week now. I\'ve found a few additional suggestions that I\'ll share here:Allowing individual Redis instances to declare named fault domains that they belong to via configuration (Scale Unit 5, Machine Foobar), so that Cluster can make intelligent decisions about replicating masters in the most fault-tolerant way possible.CLUSTER MEET is actually a pretty dangerous command. Imagine you have two clusters that are both active and serving traffic. If I accidentally MEET them, they actually merge into one big cluster and one of them loses its data. It would be nice to have some sort of ALLOWMERGE option so that I can\'t accidentally do something dangerous. The expected case for MEET is just to add a node to an existing cluster, correct?Automatic rebalancing of Slaves. Cluster is good at making sure that each Master has at least one Slave. However, if I kill things in the right order," I can get into a situation where Masters A and B have one Slave each and Master C has 4 slaves.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,closed,2016-07-18 07:31:42,1224.17,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,6,2016-07-16 11:07:32,34.6,,1,,"b""b' Reopening for visibility. Feel free to close'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,reopened,2016-07-18 08:06:18,34.6,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3391,open,-,-,-,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,opened,2016-11-23 09:56:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,title,2016-11-23 09:56:14,00:00,,1,,"b""b' redis server version 3.2.0 and above crash on armv5tejl'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,body,2016-11-23 09:56:14,00:00,,1,,"b'b"" Hi", I\'m evaluating redis on a small arm linux platform. Server version 3.0.0 and below works, but 3.2.0 and above does not. A simple hmset will crash the server immediately, see attached log. Sometimes I\'m able to add a couple of keys before the server dies," but I get a nil value when trying to get key value.  Memory is set to 10mb.  the server binary is cross-compiled on ubuntu 14.04.03 using arm-linux-gnueabi 4.7.3. libc is used.  Have I missed something obvious? br  [redis-3.2.0]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,1,2016-11-23 09:56:14,43.88,,,1,"b""b' Hello", there is no stack trace since ARM is not supported by the Redis stack trace thing. Please attach gdb and produce a stack trace. Thanks. Also if you can give me access to such a box," it will make it much simpler to understand / fix the problem. Regards.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,2,2016-11-23 09:56:14,282.75,,,1,"b'b"" Hi","  thanks for quick reply!  I tried gdb and then I noticed that the lib\'s in the distro compared tomy x-compile environemnt has different versions :/  so I guess that the first thing for me is to fix the x-compile env so Icompile with the same libs that the sw is using on target.  I guess that a stacktrace for the main thread only is useless? or shallI attach it anyway?  unfortunately I\'m not able to provide any hw :(but if patch becomes available I can test it.  no need for you to hurry on this as I need to update my x-compiler.  br  Christer  2016-11-23 11:40 skrev Salvatore Sanfilippo: ## Links: [1] url [2]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,3,2016-11-23 09:56:14,14.67,,,1,"b""b' Hey"," stack trace for the main thread is already very useful. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,4,2016-11-23 09:56:14,5.07,,,1,"b'b\' (gdb) bt #0  0x0005c2f4 in _serverAssert (estr=0xac608 ""retval == DICT_OK"""," estr@entry=0x163124 ""\\\\a"""," file=0xac53c ""db.c""","  file@entry=0x11ad0c ""|\\\\255\\\\021""", line=122, line@entry=1517796) at debug.c:565 #1  0x0005c354 in _serverAssertWithInfo (c=c@entry=0x0, o=0x16f8a4, o@entry=0x1728e4," estr=0x163124 ""\\\\a""","  estr@entry=0xac608 ""retval == DICT_OK"""," file=0x11ad0c ""|\\\\255\\\\021"""," file@entry=0xac53c ""db.c""", line=-566991962, line@entry=122)   at debug.c:625 #2  0x0003949c in dbAdd (key=0x1728e4, db=, val=) at db.c:122 #3  dbAdd (db=0x11ad0c, key=key@entry=0x1728e4, val=val@entry=0x16f8a4) at db.c:118 #4  0x0004f778 in hashTypeLookupWriteOrCreate (c=0x163124, key=0x1728e4) at t_hash.c:422 #5  0x0004ff98 in hmsetCommand (c=0x163124) at t_hash.c:526 #6  0x00025270 in call (c=c@entry=0x163124, flags=flags@entry=15) at server.c:2221 #7  0x00028548 in processCommand (c=0x163124) at server.c:2500 #8  0x000357b4 in processInputBuffer (c=0x163124) at networking.c:1296 #9  0x0001f6dc in aeProcessEvents (eventLoop=eventLoop@entry=0x11acd4, flags=flags@entry=3) at ae.c:412 #10 0x0001f9c8 in aeMain (eventLoop=0x11acd4) at ae.c:455 #11 0x0001cbac in main (argc=2, argv=0xbe90dce4) at server.c:4079 (gdb)  (gdb) info registers r0     0x0  0 r1     0x0  0 r2     0x78   120 r3     0xffffffff   4294967295 r4     0x7a   122 r5     0xac53c  705852 r6     0xac608  706056 r7     0x163124 1454372 r8     0xf  15 r9     0x1  1 r10    0x0  0 r11    0xb6d3c06c   3067330668 r12    0xb6e9b758   3068770136 sp     0xbe90da30   0xbe90da30 lr     0x5c2ec  377580 pc     0x5c2f4  0x5c2f4  cpsr     0x60000010   1610612752 (gdb)   \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,5,2016-11-23 09:56:14,1384.42,,,1,"b""b' Could you try again with Redis unstable? There are ARM fixes. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,6,2016-11-23 09:56:14,106.15,,,1,"b'b"" thanks for the update!  tested with mass insertion with positive result. this test failed with the 4.0rc2 version. I\'ll make some additional tests later this week.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,7,2016-11-23 09:56:14,1070.57,,,1,"b""b' performed some additional tests and everything seems to work just fine. this issue can be closed from my point of view . thanks for your support!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,closed,2017-03-17 10:23:45,27.52,0,2,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,reopened,2017-03-17 10:23:59,0.23,0,2,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,8,2016-11-23 09:56:14,84.58,,,1,"b""b' Thanks! Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,closed,2017-03-17 11:48:19,84.33,0,2,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3632,closed,-,-,-,0,2,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,opened,2016-12-02 03:51:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,title,2016-12-02 03:51:42,00:00,,1,,"b""b' Redismove_slot function generator error result'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,body,2016-12-02 03:51:42,00:00,,1,,"b""b' we use redis-cluster", add node for redis-cluster, and reshard slots. Some never expire lists keys will appear the expiration time. we test that if change redisMigrateDefaultPipeline equal to 1 which used in line 918 and the default value is 10\\xef\\xbc\\x8cthe result is correct\\xef\\xbc\\x9bbut if MigrateDefaultPipeline = 3 ," still there is an error\\xef\\xbc\\x9b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,closed,2016-12-02 03:52:09,0.45,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,reopened,2016-12-02 03:52:32,0.38,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,1,2016-12-02 03:51:42,3.13,,1,,"b""b' redis version: 3.2.5 ruby version: 2.3.3p222 gcc version 4.7.2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,2,2016-12-02 03:51:42,272.28,,1,,"b""b' Do I understand you correct that after resharding some keys suddenly gained an expiration time"," whereas before resharding they had no expiration time? Can you please show an example to reproduce this behaviour?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,3,2016-12-02 03:51:42,104.8,,1,,"b'b\' yes\\xef\\xbc\\x81\\xef\\xbc\\x81 Operating as follows: After this\\xef\\xbc\\x9awx_rush_category_promotion_seq_queue_20161121_20161127_4_4004 0 -1> 4) ""20161121_20161127_40""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,4,2016-12-02 03:51:42,1.55,,1,,"b""b' if set MigrateDefaultPipeline = 1\\xef\\xbc\\x9bredisreshard  result is normal'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,5,2016-12-02 03:51:42,988.9,,1,,"b""b' Can you reproduce this behavior ? @badboy '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,6,2016-12-02 03:51:42,341.95,,1,,"b'b"" I currently don\'t have a setup ready to test with. Please also ensure that no one else is setting those expiration times (e.g. watch output of  )""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,7,2016-12-02 03:51:42,129.28,1,,,"b'b""  I\'m sure nobody has modified the expiration time"," and i get follow information through MONITOR \\xef\\xbc\\x9a before resharding \\xef\\xbc\\x9a This confused me""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,8,2016-12-02 03:51:42,175.85,,1,,"b""b' Looks like the ttl is not re-set when constructing the command. I sent a pull request (#3673)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,9,2016-12-02 03:51:42,930.03,,1,,"b""b' It works.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,closed,2016-12-09 04:59:29,66.95,1,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3655,closed,-,-,-,1,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,opened,2016-12-13 08:11:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,title,2016-12-13 08:11:39,00:00,,1,,"b""b' Redis 3.2.6 crashed by signal: 11'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,body,2016-12-13 08:11:39,00:00,,,1,"b""b' === REDIS BUG REPORT START: Cut & paste starting from here === 41219:M 13 Dec 15:48:19.695 # === ASSERTION FAILED === 41219:M 13 Dec 15:48:19.695 # ==41219:M 13 Dec 15:48:19.695 # (forcing SIGSEGV to print the bug report.) 41219:M 13 Dec 15:48:19.695 # Redis 3.2.6 crashed by signal: 11 41219:M 13 Dec 15:48:19.695 # Crashed running the instuction at: 0x45b93a 41219:M 13 Dec 15:48:19.695 # Accessing address: 0xffffffffffffffff 41219:M 13 Dec 15:48:19.695 # Failed assertion: NULL (ziplist.c:411)  -STACK TRACE -EIP: /-server 127.0.0.1:6379(_serverAssert+0x6a)[0x45b93a]  Backtrace: /-server 127.0.0.1:6379(logStackTrace+0x29)[0x45d499] /-server 127.0.0.1:6379(sigsegvHandler+0xac)[0x45db3c] /lib64/(+0xf130)[0x7f9aeea98130] /-server 127.0.0.1:6379(_serverAssert+0x6a)[0x45b93a] /-server 127.0.0.1:6379[0x4313bf] /-server 127.0.0.1:6379(ziplistGet+0x57)[0x431dd7] /-server 127.0.0.1:6379(hashTypeCurrentFromZiplist+0x3f)[0x44f8bf] /-server 127.0.0.1:6379[0x44f9d4] /-server 127.0.0.1:6379(genericHgetallCommand+0xb6)[0x450a56] /-server 127.0.0.1:6379(call+0x85)[0x426b75] /-server 127.0.0.1:6379(processCommand+0x367)[0x429c17] /-server 127.0.0.1:6379(processInputBuffer+0x105)[0x4365a5] /-server 127.0.0.1:6379(aeProcessEvents+0x218)[0x421258] /-server 127.0.0.1:6379(aeMain+0x2b)[0x42150b] /-server 127.0.0.1:6379(main+0x410)[0x41e500] /lib64/(__libc_start_main+0xf5)[0x7f9aee6e9af5] /-server 127.0.0.1:6379[0x41e775]  -INFO OUTPUT -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,1,2016-12-13 08:11:39,6.27,,,1,b'b\' core dump info  (gdb) bt #0  0x00007f487a5d2c77 in kill () from /lib64/ #1  0x000000000045dc67 in sigsegvHandler (sig=11, info=," secret=) at debug.c:1107 #2 #3  _serverAssert (estr=estr@entry=0x4dd2de ""NULL"""," file=file@entry=0x4dd128 ""ziplist.c""", line=line@entry=411) at debug.c:567 #4  0x00000000004313bf in zipLoadInteger (p=," encoding=) at ziplist.c:411 #5  0x0000000000431dd7 in ziplistGet (p=0x7f486e9ada1b ""\\\\004\\\\377""", sstr=0x7fffea0d7f50, slen=, sval=0x7fffea0d7f58) at ziplist.c:882 #6  0x000000000044f8bf in hashTypeCurrentFromZiplist (hi=, what=, vstr=, vlen=, vll=) at t_hash.c:372 #7  0x000000000044f9d4 in addHashIteratorCursorToReply (c=0x7f486ee4fdc0, hi=, what=) at t_hash.c:725 #8  0x0000000000450a56 in genericHgetallCommand (c=0x7f486ee4fdc0, flags=) at t_hash.c:761 #9  0x0000000000426b75 in call (c=c@entry=0x7f486ee4fdc0, flags=flags@entry=15) at server.c:2250 #10 0x0000000000429c17 in processCommand (c=0x7f486ee4fdc0) at server.c:2529 #11 0x00000000004365a5 in processInputBuffer (c=0x7f486ee4fdc0) at networking.c:1297 #12 0x0000000000421258 in aeProcessEvents (eventLoop=eventLoop@entry=0x7f4873a2f050, flags=flags@entry=3) at ae.c:412 #13 0x000000000042150b in aeMain (eventLoop=0x7f4873a2f050) at ae.c:455 #14 0x000000000041e500 in main (argc=2, argv=0x7fffea0d81e8) at server.c:4112 \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,2,2016-12-13 08:11:39,4.25,,,1,"b""b' Thank you @daemonservice. Please if you have the full output produced on crash"," it could be helpful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,3,2016-12-13 08:11:39,16.27,1,,,"b""b' === REDIS BUG REPORT START: Cut & paste starting from here === 10887:M 13 Dec 15:21:06.869 # === ASSERTION FAILED === 10887:M 13 Dec 15:21:06.869 # ==10887:M 13 Dec 15:21:06.869 # (forcing SIGSEGV to print the bug report.) 10887:M 13 Dec 15:21:06.869 # Redis 3.2.6 crashed by signal: 11 10887:M 13 Dec 15:21:06.869 # Crashed running the instuction at: 0x45b93a 10887:M 13 Dec 15:21:06.869 # Accessing address: 0xffffffffffffffff 10887:M 13 Dec 15:21:06.869 # Failed assertion: NULL (ziplist.c:411)  -STACK TRACE -EIP: /-server 127.0.0.1:6379(_serverAssert+0x6a)[0x45b93a]  Backtrace: /-server 127.0.0.1:6379(logStackTrace+0x29)[0x45d499] /-server 127.0.0.1:6379(sigsegvHandler+0xac)[0x45db3c] /lib64/(+0xf130)[0x7f487a96d130] /-server 127.0.0.1:6379(_serverAssert+0x6a)[0x45b93a] /-server 127.0.0.1:6379[0x4313bf] /-server 127.0.0.1:6379(ziplistGet+0x57)[0x431dd7] /-server 127.0.0.1:6379(hashTypeCurrentFromZiplist+0x3f)[0x44f8bf] /-server 127.0.0.1:6379[0x44f9d4] /-server 127.0.0.1:6379(genericHgetallCommand+0xb6)[0x450a56] /-server 127.0.0.1:6379(call+0x85)[0x426b75] /-server 127.0.0.1:6379(processCommand+0x367)[0x429c17] /-server 127.0.0.1:6379(processInputBuffer+0x105)[0x4365a5] /-server 127.0.0.1:6379(aeProcessEvents+0x218)[0x421258] /-server 127.0.0.1:6379(aeMain+0x2b)[0x42150b] /-server 127.0.0.1:6379(main+0x410)[0x41e500] /lib64/(__libc_start_main+0xf5)[0x7f487a5beaf5] /-server 127.0.0.1:6379[0x41e775]  -INFO OUTPUT -# Server redis_version:3.2.6 redis_git_sha1:00000000 redis_git_dirty:0 redis_build_id:6d1262c892a0bec3 redis_mode:standalone os:Linux 3.10.0-123.el7.x86_64 x86_64 arch_bits:64 multiplexing_api:epoll gcc_version:4.8.3 process_id:10887 run_id:944abea296d6bddbc5fffa756d02f0aeefa474cd tcp_port:6379 uptime_in_seconds:161 uptime_in_days:0 hz:10 lru_clock:5218658 executable:/-server config_file:/  # Clients connected_clients:1 client_longest_output_list:0 client_biggest_input_buf:0 blocked_clients:0  # Memory used_memory:99930224 used_memory_human:95.30M used_memory_rss:116830208 used_memory_rss_human:111.42M used_memory_peak:103160120 used_memory_peak_human:98.38M total_system_memory:3894075392 total_system_memory_human:3.63G used_memory_lua:37888 used_memory_lua_human:37.00K maxmemory:0 maxmemory_human:0B maxmemory_policy:noeviction mem_fragmentation_ratio:1.17 mem_allocator:jemalloc-4.0.3 # Persistence loading:0 rdb_changes_since_last_save:0 rdb_bgsave_in_progress:0 rdb_last_save_time:1481613505 rdb_last_bgsave_status:ok rdb_last_bgsave_time_sec:-1 rdb_current_bgsave_time_sec:-1 aof_enabled:0 aof_rewrite_in_progress:0 aof_rewrite_scheduled:0 aof_last_rewrite_time_sec:-1 aof_current_rewrite_time_sec:-1 aof_last_bgrewrite_status:ok aof_last_write_status:ok  # Stats total_connections_received:3 total_commands_processed:27100 instantaneous_ops_per_sec:8208 total_net_input_bytes:1226123 total_net_output_bytes:40989934 instantaneous_input_kbps:362.60 instantaneous_output_kbps:2879.17 rejected_connections:0 sync_full:0 sync_partial_ok:0 sync_partial_err:0 expired_keys:0 evicted_keys:0 keyspace_hits:27097 keyspace_misses:0 pubsub_channels:0 pubsub_patterns:0 latest_fork_usec:0 migrate_cached_sockets:0  # Replication role:master connected_slaves:0 master_repl_offset:0 repl_backlog_active:0 repl_backlog_size:1048576 repl_backlog_first_byte_offset:0 repl_backlog_histlen:0 # CPU used_cpu_sys:0.51 used_cpu_user:1.21 used_cpu_sys_children:0.00 used_cpu_user_children:0.00  # Commandstats cmdstat_hgetall:calls=8850",usec=26050,usec_per_call=2.94 cmdstat_keys:calls=3,usec=78728,usec_per_call=26242.67 cmdstat_type:calls=9395,usec=8601,usec_per_call=0.92 cmdstat_ttl:calls=8851,usec=5045,usec_per_call=0.57 cmdstat_command:calls=1,usec=278,usec_per_call=278.00  # Cluster cluster_enabled:0  # Keyspace db0:keys=72695,expires=0,avg_ttl=0 hash_init_value: 1481052381  -CLIENT LIST OUTPUT -id=4 addr=127.0.0.1:20979 fd=5 name= age=2 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=79 oll=0 omem=0 events=r cmd=hgetall  -REGISTERS -10887:M 13 Dec 15:21:06.870 # RAX:0000000000000000 RBX:000000000000019b RCX:00000000022d1980 RDX:00007f487a9577b8 RDI:00007f487a957760 RSI:0000000000000001 RBP:00000000004dd128 RSP:00007fffea0d7ea0 R8 :0000000000000001 R9 :00007f487b28f780 R10:000000000000002a R11:0000000000000206 R12:00000000004dd2de R13:00007fffea0d7f4c R14:00007f486ee4fdc0 R15:000000000000000e RIP:000000000045b93a EFL:0000000000010206 CSGSFS:0000000000000033 10887:M 13 Dec 15:21:06.870 # (00007fffea0d7eaf) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7eae) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ead) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7eac) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7eab) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7eaa) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea9) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea8) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea7) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea6) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea5) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea4) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea3) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea2) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea1) -10887:M 13 Dec 15:21:06.870 # (00007fffea0d7ea0) FAST MEMORY TEST -10887:M 13 Dec 15:21:06.871 # Bio thread for job type #0 terminated 10887:M 13 Dec 15:21:06.871 # Bio thread for job type #1 terminated *** Preparing to test memory region 722000 (94208 bytes) *** Preparing to test memory region 22c4000 (135168 bytes) *** Preparing to test memory region 7f486c000000 (109051904 bytes) *** Preparing to test memory region 7f48729ff000 (8388608 bytes) *** Preparing to test memory region 7f4873200000 (8388608 bytes) *** Preparing to test memory region 7f4873a00000 (2097152 bytes) *** Preparing to test memory region 7f487a200000 (2097152 bytes) *** Preparing to test memory region 7f487a959000 (20480 bytes) *** Preparing to test memory region 7f487ab76000 (16384 bytes) *** Preparing to test memory region 7f487b28f000 (16384 bytes) *** Preparing to test memory region 7f487b29e000 (4096 bytes) *** Preparing to test memory region 7f487b29f000 (4096 bytes) *** Preparing to test memory region 7f487b2a2000 (4096 bytes)  Fast memory test PASSED," however your memory can still be broken. Please run a memory test for several hours if possible.  -DUMPING CODE AROUND EIP -Symbol: _serverAssert (base: 0x45b8d0) Module: /-server 127.0.0.1:6379 (base 0x400000) $ xxd -r -p / / $ objdump adjust-vma=0x45b8d0 -D -b binary -m i386:x86-64 / -10887:M 13 Dec 15:21:07.202 # dump of function (hexdump of 234 bytes): 41548b05547f2c004989fc554889f585c05389d37505e8f5fdffffbea64f4e00bf0300000031c0e8948cfcff4d89e089d94889eabebf4f4e00bf0300000031c0e87b8cfcffbe50414e00bf0300000031c04c8925f07e2c0048892df17e2c00891df37e2c00e8568cfcffc60425ffffffff785b5d415cc3660f1f84000000000041544989fc55534883c4808b15cb7e2c0085d20f84e700000031c0be80414e00bf03000000e8168cfcff418b94249800000031c0beda4f4e00bf0300000031ed31dbe8f98bfcff418b54240831c0beed4f4e00bf03000000e8e38bfcff418b54243831c0befd4f4e00bf '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,4,2016-12-13 08:11:39,3.3,,1,,"b'b"" Thanks. It\'s odd that it crashed after 161 seconds of uptime. Possibly something is wrong with the hardware or with the content loaded from the RDB file (corruption of the ziplist serialization format"," which is loaded as it is in memory). Btw I\'ll check the stack trace with care to understand where the crash happened. Thanks again. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,5,2016-12-13 08:11:39,20.65,,1,,"b""b' I also in the debugger"," there are new clues will be back to  you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,6,2016-12-13 08:11:39,142.47,,1,,"b'b"" Hello again", I checked the code and it looks like a corruption of some kind, either of the RDB of the memory itself. Note that in theory memory corruption also includes a bug happening while *encoding* the ziplist (even if we are seeing crashing in the decoding). However nobody touched the ziplist code after 2014, and the touched code is mostly about other parts, so I\'m not really sure if this is the case.  I wonder if your crash was reproducible, that is, if the ziplist itself is broken in the RDB file, an against the same key should always crash the server, assuming you have a copy of the RDB file. This will not provide us with *all* the clues but with some clue at least, about the corrupted data being in the RDB file already, and the bug not being related to a corruption happening afterward.  Of course it is also possible that the RDB was sane, data was loaded, then a memory corruption happened while writing to the same ziplist," either because of broken memory or bugs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,7,2016-12-13 08:11:39,1247.3,,1,,b'b\' Hello again. Under the debugging of redis-server are as follows: 1: Enter the encoding type of illegal(The valid encoding input range is 241 to 253).  Now the encoding type that causes the service crash is 255. 2: As you say,"get a specific key crash through HGETALL .  /*  argv[0]: \\\'hgetall\\\'  argv[1]: \\\'Module:153001566:skill:1\\\'  # key \\\'Module:153001566:skill:1\\\' found in DB containing the following object:  # Object type: 4  # Object encoding: 5  # Object refcount: 1  # Hash size: 7  */  note:I don\\\'t know how the dirty data is produced at the present. 3:Normal data are as follows: 127.0.0.1:6379 1) ""0""  2) ""\\\\x03\\\\x02""  3) ""1""  4) ""\\\\x01\\\\x02""  5) ""2""  6) ""\\\\x01\\\\x03""  7) ""3""  8) ""\\\\x01\\\\x04"" 4:I can provide the RDB file for the test. file name: 127.0.0.1:63791) ""Module:153001566:skill:1"" \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,8,2016-12-13 08:11:39,4.03,1,,,"b'b"" Give me an e-mail address and I\'ll pass the RDB file to  @antirez  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,9,2016-12-13 08:11:39,121.27,,1,,"b""b' Thanks please send it to antirez gmail.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,10,2016-12-13 08:11:39,33.63,,1,,"b""b' Please check the mail has been sent. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,11,2016-12-13 08:11:39,4.95,,,1,"b""b' File received"," thank you. Investigating...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,12,2016-12-13 08:11:39,358.15,,1,,"b'b\' By reading the corrupted ziplist hexdump I see: key: ""0"" value ""\\\\x01\\\\x02"". Above you say that the key ""0"" should contain ""\\\\x03\\\\x02"" but I guess that\\\'s just an example and key 0 may also contain instead ""\\\\x01\\\\x02"" in a different time / dataset.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,13,2016-12-13 08:11:39,35.23,,1,,b'b\' Update: I can see where the corruption is now:   Each key is encoded in the ziplist as +  . Since the keys are 0,1,2,3, .. the keys in the hex dump are just a number (the previous entry len) and the bye that encodes small integers, that is where is 1,2,3," ... and so forth (you need to subtract 1 to obtain the actual integer).  So for instance the first entry is wich means that the key is ""0"" (F1... so 1-1 = 0). The other keys are  ", and can be easily distinguished inside the hex dump.  The values are instead small strings of two bytes," and are in the form like the first value which is (to encode the string ""\\\\x01\\\\x02"").  However after the first two entries in the zip list"," that is key=0 value = ""\\\\x01\\\\x02"" we immediately see a strange entry:   The first byte", the previous entry len  , looks correct, since the previous entry is indeed of 4 bytes (02 02 01 02). However the next entry should be  , instead we find this here," which means that a string of 5 bytes is following. This is not correct... and actually what we can see inside the entry is the string ""02 01 03"" which looks like a fragment of a correct value for ""\\\\x01\\\\x03"""," followed by ""04"" which is the start of the next entry (the previous len).  So AFAIK the ""05 82"" bytes are the wrong part"," and they should instead by ""F2 02"".  If I replace the two bytes", now the RDB loads and it shows the following:   Which looks perfectly correct. However who corrupted the dataset? It could be broken memory in theory? Or was it the disk? But the checksum passes in the RDB file, so it looks like there was the problem already in memory AFAIK.  Can you please tell me if the problem started to manifest after you restarted Redis? This could mean that it happened when the DB was loaded back in some way.  Of course one other possibility is that Redis bugs corrupted the ziplist, however I can\\\'t see the code writing this two random byts in the middle of the ziplist. I also wrote two stress testers with very similar data and I can\\\'t reproduce such a breakage. The following are the two Ruby programs I used:   and   I\\\'ll write more if I have more interesting theories.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,14,2016-12-13 08:11:39,974.48,,,1,b'b\' Thank you for your reply. 1:Nobody restarted it. 2:Crash when redis-dump. 3:A lot of tests have failed to produce the same data that can cause crashes. 4:The data initialized is correct, the runtime data set is tampered with,  and it is not known how this tampering is generated,"  and it looks as if the memory address overlaps. 5:The correct initial data are as follows 1) ""0"" 2) ""\\\\x01\\\\x02""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,15,2016-12-13 08:11:39,4.68,,,1,"b'b"" Thanks @daemonservice", a few questions, sometimes just related to make sure I understand correctly:  1. Do you mean that, the instance was running, nobody restarted it," and at some point it crashed? 2. I\'m not sure about this sentence. 3. Yep... me too. Also the way the data is corrupted does not look like a bug in ziplist.c AFAIK. 4. Yes. 5. Ok.  Question: do you use memory corrected memory modules?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,16,2016-12-13 08:11:39,22.9,,1,,"b""b' 1:Nobody restarted it. 2:Crash when redis-dump 3:No tools have been used to correct memory.(Question: do you use memory corrected memory modules?)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,17,2016-12-13 08:11:39,2.9,,,1,b'b\' Ok thanks," about ""3"" what I mean is that: url For instance Amazon AWS instances use it. But if you run in your own hardware", it is likely that you are not using ECC memory, so the cause of the corruption could just be an hardware issue.  To check (with Linux) if you have memory correction hardware just use the following command:   In this case my box has ECC.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,closed,2016-12-16 10:32:06,140.45,2,10,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,18,2016-12-13 08:11:39,18.92,,,1,"b'b"" Ok thanks. Test results are as follows: 1:hardware environment(Linux Dev_2_15 3.10.0-123.el7.x86_64 #1 SMP Mon Jun 30 12:09:22 UTC 2014 x86_64 x86_64 x86_64 ) 2:dmidecode -t memory | grep \'Error Correction\'   Error Correction Type: None""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,reopened,2016-12-16 10:53:32,21.43,2,10,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,19,2016-12-13 08:11:39,20.25,,,1,"b'b"" That\'s a good news: you are using memory which is not corrected", so probably the problem is just the memory module that\'s broken... If you want to be safe, I suggest changing the hardware. Of course we can\'t be 100% sure that it\'s not a bug, but it is very unlikely that it\'s a bug for the evidences we have here.  So you may want to do the following:  1. Put the box offline and run memtest86 against it. 2. Change the hardware if you identify memory issues or if it happens again.  However please, if you find that reports the memory is broken, leave here a comment. Also if it happens again after upgrading the hardware," please open a new issue or re-open this open.  Thank you for your support!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,closed,2016-12-16 10:53:44,0.2,2,10,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,20,2016-12-13 08:11:39,1169.82,,1,,"b""b' How to solve the same problem'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3684,closed,-,-,-,2,11,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,opened,2016-12-20 10:50:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,title,2016-12-20 10:50:04,00:00,,1,,"b""b' when master all down", slave not selected to master," cluster failed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,body,2016-12-20 10:50:04,00:00,,1,,"b""b' We test cluster in 2 labs with 3 master and each one has 1 slave.  All master in lab1", and slave in lab2. When we shutdown the machine of **all 3 master** int the lab1(shutdown 2 is fail too, shutdown 1 is OK) **in almost same time**,  all the master stay with PFAIL status. **No slave** voted and became to master instead.  And the cluster **stay down**, can not provide service.  We have 2 lab," and one lab maybe power off by accident. Is the any solution  to solve the situation or I need to wait a fix for this ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,1,2016-12-20 10:50:04,30.55,,1,,"b""b' That is by design. You need a majority of masters to vote for Slave to become a new master'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,2,2016-12-20 10:50:04,291.75,,1,,"b'b"" @badboy ",  this situation can be take as an edge condition and better be improved. If slave can not connect master for timeout * factor + rep-timeout,  then check all the master, if all are PFAIL or fail," itself should start a election among survival slaves. And if it\'s possible to resolve it by combine use of sentinel ?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,3,2016-12-20 10:50:04,37.87,,1,,"b'b"" That was a design decision when Redis Cluster was implemented. Only masters are allowed to cast a vote. I\'m not sure that the current approach can be easily extended (nor do I know if that would be considered"," even if possible).  Mixing Cluster & Sentinel will not properly work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,4,2016-12-20 10:50:04,441.62,,,1,"b""b' @badboy", got it," thank you very much.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,closed,2016-12-21 00:44:40,834.6,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,reopened,2016-12-21 00:44:48,0.13,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,5,2016-12-20 10:50:04,879.13,,1,,"b""b' Create a request #3699 instead of this issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,closed,2016-12-21 14:50:59,846.18,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3697,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,opened,2017-01-10 11:41:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,title,2017-01-10 11:41:45,00:00,,1,,"b""b' Bug Report Server crashed due to ziplist'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,body,2017-01-10 11:41:45,00:00,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,1,2017-01-10 11:41:45,1381.27,,,1,"b""b' Hello"," please can you tell me the value of the configuration parameter  ? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,2,2017-01-10 11:41:45,3.2,,,1,"b""b' Sure.  hash-max-ziplist-entries = 20000 hash-max-ziplist-value = 1024  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,3,2017-01-10 11:41:45,37.07,,,1,"b""b' Thanks", please before going in depth with debugging of the crash report, could you answer the following?  1. Do you run in a cloud environment on in your own machines? 2. If you are using your hardware, are you using error corrected memory modules? 3. If you are using your hardware and your RAM is *not* error corrected," could you run memtest86 in this box for some time?  Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,4,2017-01-10 11:41:45,1.58,1,,,"b""b' 1. Do you run in a cloud environment on in your own machines? Openstack cloud environment (3 nodes)  2. If you are using your hardware", are you using error corrected memory modules?  I can find this answer with the devops team if you need.  3. If you are using your hardware and your RAM is not error corrected," could you run memtest86 in this box for some time?  Not possible :( '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,5,2017-01-10 11:41:45,2.6,,,1,"b'b"" Could you kindly ask your Cloud vendor if they use ECC memory? I\'m starting anyway an investigation since this is the second bug report of a similar type we receive about ziplists. Even if the ziplist code did not changed significantly later it is possible that there are uncovered bugs. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,6,2017-01-10 11:41:45,11.1,1,,,"b""b' Sorry another question: I see that in your hashes", you stored numerical keys. Are the values also numbers," or there are also strings? What are the numbers ranges if they are numbers? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,7,2017-01-10 11:41:45,5.62,1,,,"b""b' No problem. In that case", numbers are stored as string and they its range is 200.000 to 999.000, expecting a maximum of 20.000 per key. (Before you think this is madness," we are bench-marking a a key design idea which would match our use case). Feel free to ask me whatever you need ;)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,8,2017-01-10 11:41:45,10.12,,,1,"b'b"" Thanks! I\'m going to write a stress test for ziplists in order to try to replicate similar conditions. Normally I wrote ziplists stress testers targeting the Redis API. This time I\'ll write a C program that uses ziplist.c directly in order to test many operations per second and explore more states than otherwise possible. Btw modeling problems with hashes composed of numbers is a good very common design! Just a suggestion", once you use ziplists of, for example, 1000-3000 entires each, the key overhead is going to be small, very similar to using 20k items per ziplist. However 20k items make operations pretty slow," so I suggest also trying with a lower number of items per ziplist.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,9,2017-01-10 11:41:45,111.75,,1,,"b'b\' ""Could you kindly ask your Cloud vendor if they use ECC memory? "" I dont know if it is a good o bad news but they are currently using \\\'Advanced ECC\\\'  PD: Thanks for the advice", benchmarks shows that having that big number of hash fields was pretty slow in terms of performance and cpu burner. I\\\'m going to split my keys in buckets having 1000-3000 entries to check it out!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,10,2017-01-10 11:41:45,14.77,,1,,"b'b"" Thanks @fgaule the fact they run memory corrected modules makes more likely it\'s a Redis bug", which in theory is bad, but actually makes it more clear where to look, which is better :-) So I\'m happy to hear that. It means that the efforts in reproducing this issue are well spent. About your use case," please feel free to comment here if you need any additional hint on ziplists tradeoffs or other ways to model your problem. Bug reports and fast follow-ups deserve this and more :-) Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,11,2017-01-10 11:41:45,12.13,,,1,"b""b' Thanks @antirez"," i appriciate!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,12,2017-01-10 11:41:45,3.9,,1,,b'b\' Just in case," virtual machines are running over ""HP ProLiant BL465c Gen8"" hardware.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,13,2017-01-10 11:41:45,2.0,,,1,"b""b' Thank you"," cool that the provider is providing assistance and details btw.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,closed,2017-01-13 14:18:51,157.1,3,5,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,reopened,2017-01-13 14:18:54,0.05,3,5,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,14,2017-01-10 11:41:45,1120.58,,,1,"b""b' Hello again", quick update: the investigation is in progress. So far nothing found but this activity will take a few days... Please in case the crash happens again," a note here would be extremely useful. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,15,2017-01-10 11:41:45,1171.13,1,,,"b'b"" Dear @fgaule", after your bug report I started an activity, which is taking days and is ongoing since the original bug report, in order to audit the file. Today I finally reached the first interesting result, analytically finding a bug that the stress testers I wrote could not find. The bug can be reproduced via the Redis API using List type commands. It is not yet clear if Hash commands could trigger the bug. Even I\'m still in the middle of the investigation I wanted to ping you about that, since this bug corrupting the ziplist is an evidence that there are issues even if they belong to states that are very hard to trigger. However this makes a lot less likely that you ran into an actual bug. AFAIK the bug I found, that may be or not the same that crashed your server (but potentially yes, or very related), is there since the introduction of  ," so is a 5 years old bug more or less. I\'ll update this issue once I\'ve further details. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,16,2017-01-10 11:41:45,1317.78,,,1,"b'b"" @antirez good to here you haven\'t sleep looking for this bug :smile:  I can confirm i haven\'t been playing around with List commands"," so it is possible that Hash commands also reproduce the bug. I have checked my code the list of commands are: hget hgetall hmget hset hmset  Ping me if you need more details. Thanks!!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,17,2017-01-10 11:41:45,1318.85,,,1,"b""b' Thanks Federico :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,18,2017-01-10 11:41:45,139.85,,,1,"b""b' Dear @fgaule I wonder if you could attach the Redis server binary that caused the crash here renamed as PNG or jpg. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,19,2017-01-10 11:41:45,156.2,1,,,"b""b' @antirez here we go ! ![redis-3 2 6]url Its a  renamed as jpg'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,20,2017-01-10 11:41:45,160.27,,,1,"b""b' Cool thank you! CC: @oranagra'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,21,2017-01-10 11:41:45,191.92,1,,,"b""b' Sorry to bother you again @fgaule I was interested in the actual binary file after the compilation", because if we compile it ourselves, the offsets in the crash report do not match the ones of your specific . So if you could please send use the binary you were using, or at least one compiled with the exact system," that would be very useful. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,22,2017-01-10 11:41:45,33.2,1,,,"b""b' @antirez sorry to misunderstand you"," here is the redis-server file ![redis-server]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,23,2017-01-10 11:41:45,99.5,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,24,2017-01-10 11:41:45,1129.5,,,1,"b""b' Good monday @fgaule assuming there is such a thing ;-)  We are near the end of our investigation", we found a bug but not apparently the one that made your instance crashing, however we are doing improvements to crash logs and upgrading other components in Redis such as Jemalloc in order to put us in a defensive position. In recent years, we had something like 4 or 5 crash reports signaled about ziplists. A few can were tracked to a quicklist bug that was now fixed. Another strange one is probably due to the bug we found during this investigation. The bug you experimented and another one have no explanation, however the other user did not used memory corrected modules, and a very large amount of crash reports in Redis when no memory corrected modules are used, are just memory errors.  In order to make sure we investigated everything was possible to investigate, just to verify I understood correctly, I want to ask if you used, in all your tests, numbers both as keys and values, and if the range of both keys and values numbers are the ones you reported earlier. We also tested different kind of encodings and values, large and small, during this investigation, but we put a special focus on key-value both composed of numbers. If instead the values were different and just similar to the keys," please could you describe the layout of your values? We would like to do a few more simulations and using the specific layout of your values.  Thank you again!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,25,2017-01-10 11:41:45,1225.98,,1,,"b'b\' @fgaule we are still investigating the issue. I saw that RDB snapshot failed with ""err"" on your environment.  can you provide us more details why it failed? as it may provide us some hint on the crash\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,26,2017-01-10 11:41:45,1242.0,,,1,"b""b' @alon-redis @fgaule this is a good question. One way the ziplist could get corrupted is by disk indeed. However the RDB files have a CRC checksum of 64 bit. Such a check sum **can be disabled** by the user via  ", I did not thought of asking about this, but maybe can be helpful. The option is:    rdbchecksum yes  On a related note, @fgaule was testing Redis Cluster, so it is also possible he was  -ing keys via or any other mean," so the key here could be moving from a different instance to that one.  However also features the same CRC64 checksum of RDB files.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,27,2017-01-10 11:41:45,1377.62,1,,,"b'b"" @alon-redis Sadly i have no access to redis log cause the node (machine) where it had failed doesn\'t exist anymore. But i remember there was a time when redis could not make its snapshot cause it run out of disk space. By mistake i had configured maxmemory to be 85% of all the RAM and had forgotten to stop persistent :cry:  @antirez i did not migrate keys using redis-trib or using any other command.  Hope it helps"," its all i have right now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,28,2017-01-10 11:41:45,0.28,,,1,"b""b' @fgaule thank you a lot. If you could acknowledge also the values were numerical would be great. I promise this is the last question :-) We are near to the end of the investigation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,29,2017-01-10 11:41:45,4.78,1,,,b'b\' @antirez no problem, i want this resolved as much as you, so you can ask me whatever you need. There was 2 benchmarks," first one saved an """" and other saved a 1kb string. I\\\'m pretty sure the first benchmark was the one associated with the crash\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,30,2017-01-10 11:41:45,20.0,,1,,"b'b"" @fgaule oh! That\'s very important. I the models I used I\'ve empty strings"," but they are used from time to time. Perhaps there is an odd edge condition that can be triggered only using all empty values. I\'ll try to both analytically investigate this and to modify the fuzzing to just use empty values. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3740,open,-,-,-,9,7,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,opened,2017-02-04 06:39:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,title,2017-02-04 06:39:17,00:00,,1,,"b'b\' Redis cluster print ""WSA_IO_PENDING writing to socket..."" continuously", does it matter?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,body,2017-02-04 06:39:17,00:00,1,,,"b""b' Hi ", when I start up redis cluster , every node prints log continuously ," does anything bad happened ?  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,closed,2017-02-10 03:49:15,1269.97,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,1,2017-02-04 06:39:17,860.7,,,1,"b""b' I had the same issue", this message is flooding the server_. Leeforrest, I see you closed the issue," do you have a solution to it? -Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,2,2017-02-04 06:39:17,547.28,1,,,"b'b"" Sorry  man", I search for days , but did not figure it out ! Since it caught no one\'s attention, I close it ," may be  I should reopen it ! smile/""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,reopened,2017-03-28 06:07:16,138.02,2,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,3,2017-02-04 06:39:17,294.95,,1,,"b""b' still getting this. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,4,2017-02-04 06:39:17,49.98,,1,,"b'b"" Hi @Leeforrest it seems that you are using the Windows fork of Redis. That fork isn\'t a part of the official Redis project and thus issues with it do not belong here"," please close yours.  You can seek further assistance at the unmaintained url  or the new url  repositories.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,closed,2018-01-08 10:10:41,243.42,2,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,5,2017-02-04 06:39:17,234.55,,1,,"b""b' [Logged Issue]url  in Windows repo.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3793,closed,-,-,-,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,opened,2017-03-01 14:53:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,title,2017-03-01 14:53:19,00:00,,1,,"b""b' fixed free of blocked client before refering to it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,body,2017-03-01 14:53:19,00:00,,1,,"b'b""   triggered which refered to the blocked context after it\'s been freed"," resulting in possible crash and an error in valgrind. Reversing the order of lines fixes this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,1,2017-03-01 14:53:19,1156.65,,1,,"b""b' Hello Dvir", this should be already fixed, probably you rebased your fix after it was fixed in a different commit. The client reference is now acquired earlier," and there is no longer the reference after the free.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,closed,2017-04-10 10:10:00,1156.68,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,2,2017-03-01 14:53:19,7.97,,,1,"b""b' Cool"," thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,3,2017-03-01 14:53:19,56.82,1,,,"b'b"" Sorry @dvirsky", as for email exchanges, I was wrong, and is also referenced by the client, so your PR is still relevant even if we already have a client reference in the new code. This fact is not exactly clear reading the code," so I\'m also adding a comment so that the line never gets mis-placed again. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,reopened,2017-04-10 11:14:46,64.77,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,closed,2017-04-10 11:14:53,0.12,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3843,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,opened,2017-03-02 08:08:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,title,2017-03-02 08:08:06,00:00,,1,,"b""b' Potential socket leak in _anetTcpServer'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,body,2017-03-02 08:08:06,00:00,,1,,"b'b"" Hi",  another one, in function of [anet.c#L480]url  ,  and  will close socket when they are going to return  , but don\'t, could it be a potential socket leak if returns error ?  Regards,"'
redis	3848	closed	closed	 - 	2017-03-07 15:57:45	469.65	0	2	0
redis	3848	closed	1	richardxx	2017-03-02 08:08:06	1434.53		+1		b""b' @viennadd Why did you close this issue?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,2,2017-03-02 08:08:06,27.17,1,,,"b""b' @richardxx  I must had close it mistakenly?  anyone could take a look", socket fd should get closed after anetSetReuseAddr failed," may be I could  open a pull request just like url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,reopened,2017-04-16 08:29:48,992.05,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,3,2017-03-02 08:08:06,345.35,,,1,"b""b' Hello", thank you @viennadd," I merged your PR and fixed this as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,closed,2017-04-18 14:15:09,345.35,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,4,2017-03-02 08:08:06,10.05,1,,,"b""b' Sorry I referenced a wrong commit with this issue. Now there is a new one really fixing the problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,reopened,2017-04-18 14:25:12,10.05,2,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,closed,2017-04-18 14:26:47,1.58,2,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3848,closed,-,-,-,2,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,opened,2017-03-28 11:14:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,title,2017-03-28 11:14:46,00:00,,1,,"b""b' Redis cluster create use 6 nodes CommandError'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,body,2017-03-28 11:14:46,00:00,1,,,"b'b"" PS D:\\\\work\\\\TfsRedis\\\\Redis-x64-3.0.504>>Connecting to node 127.0.0.1:6380: OK Connecting to node 127.0.0.1:6381: OK Connecting to node 127.0.0.1:6382: OK Connecting to node 127.0.0.1:6383: OK Connecting to node 127.0.0.1:6384: OK Connecting to node 127.0.0.1:6385: OK >>Using 3 masters: 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 Adding replica 127.0.0.1:6383 to 127.0.0.1:6380 Adding replica 127.0.0.1:6384 to 127.0.0.1:6381 Adding replica 127.0.0.1:6385 to 127.0.0.1:6382 M: d29492c7eb8d553f444efb22b0480b707a0b9eb0 127.0.0.1:6380  slots:0-5460 (5461 slots) master M: 72fc66522582ae37301c03b6fc16ca6098582b08 127.0.0.1:6381  slots:5461-10922 (5462 slots) master M: c20d06c566d96463335bdb39bd1386e22cf83da9 127.0.0.1:6382  slots:0","10923-16383 (5462 slots) master S: 16514c669ca22db2137d269bb8149d411a802bc3 127.0.0.1:6383  replicates d29492c7eb8d553f444efb22b0480b707a0b9eb0 S: f986c579ca2c5fb83ada9757d88582c05eb7aebf 127.0.0.1:6384  replicates 72fc66522582ae37301c03b6fc16ca6098582b08 S: 7b8d2327bbea99e47ddfc7acde54933e60055bd7 127.0.0.1:6385  replicates c20d06c566d96463335bdb39bd1386e22cf83da9 Can I set the above configuration? (type \'yes\' to accept): yes D:/Ruby23-x64/-3.3.3/:121:in  block in method_missing\'   from D:/Ruby23-x64/-3.3.3/:58:in  mon_synchronize\'   from D:/Ruby23-x64/-3.3.3/:58:in  method_missing\'   from D:/-x64-3.0.504/redis-:205:in  block in flush_nodes_config\'   from D:/-x64-3.0.504/redis-:666:in  flush_nodes_config\'   from D:/-x64-3.0.504/redis-:1007:in  \' PS D:\\\\work\\\\TfsRedis\\\\Redis-x64-3.0.504 url  Redis-x64-3.0.504 use Ruby 2.3.3 (x64) url  create Redis cluster CommandError""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,closed,2017-03-28 11:15:48,1.03,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,reopened,2017-03-28 11:15:57,0.15,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,1,2017-03-28 11:14:46,51.17,,1,,"b""b' it is MSTech ported ", redis on windows  . u should open issue at MSOpenTech repo .  btw ," windows version may not support cluster ~ '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,2,2017-03-28 11:14:46,17.55,,1,,"b""b' It does support Cluster and above error is pretty generic:   Looks like your not starting from a clean slate. Bring down all instances"," remove all  and try again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,closed,2017-03-30 02:21:54,905.95,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3904,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,opened,2017-05-12 17:53:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,title,2017-05-12 17:53:36,00:00,,1,,"b""b' Unstable makes valgrind unpleased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,body,2017-05-12 17:53:36,00:00,,1,,"b""b'  . '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,1,2017-05-12 17:53:36,69.02,1,,,"b""b' Sorry", was too trigger-happy," closing this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,closed,2017-05-12 19:02:37,69.02,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,2,2017-05-12 17:53:36,11.68,1,,,"b""b' Nope"," still happening. Reopening. @antirez any ideas?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,reopened,2017-05-12 19:14:18,11.68,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,3,2017-05-12 17:53:36,1156.25,,,1,"b""b' Adding the switch helped me thanks @dvirsky for suggesting","'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,closed,2017-05-13 14:30:34,1156.27,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,4,2017-05-12 17:53:36,6.08,,1,,b'b\' Hello Itamar, you also need to run with the suppression file shipped withRedis. The possibly lost you see are all false positives due to SDS tricks. On May 13, 2017 4:30 PM,"Itamar Haber""  wrote:>\''
redis	3999	closed	5	itamarhaber	2017-05-12 17:53:36	12.15	+1			b'b"" @antirez of course I used from the src dir but the errors are still there. I didn\'t remember seeing so many possibles when running previous grinds, so I tried backtracking a few weeks of commits but they still show. Most probably I\'m borking something.""'
redis	3999	closed	6	antirez	2017-05-12 17:53:36	189.55		+1		b'b"" @itamarhaber that\'s how I valgrind it. Without the special options you will always see tons of false positives, always been like that. Recently even with the following instructions you\'ll see false positives about closing invalid filedes:   You can actually just use to have a no opt, malloc-libc build.""'
redis	3999	closed	7	antirez	2017-05-12 17:53:36	191.25		+1		b""b' P.S. note that the test called in that way will trigger the following valgrind actual command line:  valgrind track-origins=yes suppressions= show-reachable=no \\\\  show-possibly-lost=no leak-check=full -server $config_file'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,3999,closed,-,-,-,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,opened,2017-08-29 06:46:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,title,2017-08-29 06:46:54,00:00,,1,,"b""b' Redis is vulnerable'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,body,2017-08-29 06:46:54,00:00,,1,,"b""b' Hello all"," There was a security accident in my company connected with Redis in way similar to described here: url  but suck of this situation in that we using latest stable version (4.0)  As prove see authorized_keys file from compromised machine in attach. Thank for attention.  [authorized_]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,1,2017-08-29 06:46:54,141.43,,1,,"b""b' was protected mode disabled?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,2,2017-08-29 06:46:54,28.0,,1,,"b""b' Or... bind explicitly mentioning 0.0.0.0?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,3,2017-08-29 06:46:54,1349.88,,1,,"b""b' Will ask guys who set Redis up"," and provide their answer ASAP'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,4,2017-08-29 06:46:54,51.27,,1,,"b""b' About protected mode was launched with default settings", so nothing has been changed about it about 0.0.0.0 yes," cause we have several interfaces.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,closed,2017-09-04 08:57:29,130.58,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,reopened,2017-09-04 08:57:33,0.07,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,5,2017-08-29 06:46:54,8.65,,1,,"b""b' Then you found the culprit. If you explicitly expose your Redis to the whole wide Internet it is of course vulnerable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,closed,2017-09-04 09:06:08,8.58,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4263,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,opened,2017-09-04 22:04:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,title,2017-09-04 22:04:25,00:00,,1,,"b""b' Redis-Cluster: Add support to auth in redis-'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,body,2017-09-04 22:04:25,00:00,,1,,"b'b"" Use password=\'secret\' Added in: info", check, create, add-node, del-node, set-timeout, reshard," rebalance and fix  Issues #2866 and #3389  Google groups: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,1,2017-09-04 22:04:25,832.53,,1,,"b'b"" Hi"," is there a reason your fix doesn\'t work for me?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,2,2017-09-04 22:04:25,41.82,,1,,"b'b\' Hi @paltryeffort Could you please try ""redisinfo password test123 10.10.3.4:7001""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,3,2017-09-04 22:04:25,79.4,,,1,"b'b"" That\'s works. Thank you!  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,4,2017-09-04 22:04:25,1124.53,,1,,"b'b"" Hi @otherpirate  why reshard doesn\'t work for me?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,5,2017-09-04 22:04:25,313.27,,1,,"b""b' Hi @k19421  The problem is in redis [migrate command]url  do not have password parameter by default.  Migrate command is called [here]url Issue: url  Solution: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,closed,2017-10-31 13:55:58,951.55,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,reopened,2017-10-31 13:57:26,1.47,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,6,2017-09-04 22:04:25,40.8,,1,,"b""b' So setting up a cluster now and would like to use auth. Is this PR the only way to do it at the moment without manual setup?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,7,2017-09-04 22:04:25,1143.4,,,1,"b""b' Just wanted to cross check", weather authentication issue with Migrate has been fixed or its still have same issue. I am using redis-4.0.6 with redis-triband still facing issue while doing redis-tribreshard  [ERR] Calling  I am passing password using auth flag:  Command Executed :   redis-tribreshard auth  host:ip  Weird this is ," this error only comes when cluster nodes has keys ...for empty masters slots resharding works fine.  Any suggestion please ? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,8,2017-09-04 22:04:25,539.23,1,,,"b'b"" Hi @dineshk8666 The problem is in redis [migrate command]url  do not have support for  parameter.  Migrate command is called [here]url Issue: #2500 Solution: #2501  You can also remove auth before do reshard", and reset after reshard  I know it\'s not the best solution," but unfortunately is the only way I figured out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,9,2017-09-04 22:04:25,892.52,,,1,"b""b' Hi @otherpirate Thanks for the update.  Is there any future solution expected"," where auth can be used to reshard slots with auth?  My purpose is to scale-up functional redis cluster and it is already configured with auth.  Thanks '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,10,2017-09-04 22:04:25,481.02,1,,,"b'b"" Hi @dineshk8666 as you saw in #4240 and #2507", it\'s was solved by community.  Probably @antirez will review," merge and publish a new version as soon he can.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,11,2017-09-04 22:04:25,6.63,1,,,"b'b"" @otherpirate I\'ve reviewed the #2507 and I\'ll talk to @antirez about this issue. Both PRs are obviously related. As for the #4288: the implementation it\'s ok to me", but since the PR is strongly related to the migrate issue, I\'d prefer to face the whole issue. Just a note: this implementation assumes that all the cluster nodes have the same password, which can make sense," but maybe it should be clear in the help message.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,12,2017-09-04 22:04:25,39.2,,1,,"b""b' Thanks for the feedback @artix75  I added the help message ;)  Please let me know if I can help with this issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,13,2017-09-04 22:04:25,709.2,,,1,b'b\' Hi," @otherpirate   The call doesn\\\'t work in your fix! Doesn\\\'t your fix support call? I think the call is important in my work. I often use ""rediscall"" to batch modifying each node configuration in cluster. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,14,2017-09-04 22:04:25,649.58,,,1,"b""b' Hi @BrotherGao Fixed"," thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,15,2017-09-04 22:04:25,293.38,1,,,"b'b\' what is the trick for calling this with create? ${REDISHOME}/-tribcreate password ""foobared"" replicas 10.10.1.12:1500 10.10.11.3:1500 10.10.14.17:1500 10.10.14.18:1500 10.10.15.2:1500 10.10.15.3:1500 >>command:[:auth","foobared""] [ERR] Sorry, can\\\'t connect to node 10.10.1.12:1500 \''
redis	4288	closed	16	otherpirate	2017-09-04 22:04:25	898.35		+1		b'b\' Hi @damora,  Are you sure 10.10.1.12:1500 is up? with auth?  The following command works?  Obs : You should use without ""quotes""\''
redis	4288	closed	17	chihuo91	2017-09-04 22:04:25	271.97		+1		b""b' For add-node command, does it support two password? One for the source node , one for the target node?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,18,2017-09-04 22:04:25,99.33,,1,,"b""b' @otherpirate I got it to work. It was user error..:-('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,19,2017-09-04 22:04:25,46.85,,1,,"b""b' Hi @chihuo91 No", it do not support more than one password.  I never saw a redis cluster with two (or more) password, just for curiosity," could you please explain to me:  1. What is the necessity of have two different password? 2. How your application connect in both nodes?  Regards'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,20,2017-09-04 22:04:25,84.75,,1,,"b""b' @otherpirate I just verified that our application only uses one password. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,21,2017-09-04 22:04:25,87.37,,1,,"b""b' I have one question. Since you pass the password as command"," user can actually use ps to see the password. Is there any way to hide password from ps ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,22,2017-09-04 22:04:25,1126.35,,1,,"b""b' So what I wanna ask is that is the command accept the secret argument through stdin?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,23,2017-09-04 22:04:25,9.0,,1,,b'b\' Hi @chihuo91 No, do not support. This command runs of a few seconds and exit," so the password gonna be ""visible"" for a small time.  Should your user access PS from redis-cluster host?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,24,2017-09-04 22:04:25,75.4,,1,,"b'b"" Even I had a similar concern about passwords being visible to any user on the redis host. Ideally", we should read password from standard input if password is not specified as a command line parameter. We shouldn\'t say \'Won\'t Fix\' for this issue for the reason that it runs for a few seconds (cause its a security issue after all). Though one could still write a wrapper script to pass password via stdin," it defeats the purpose of having the original script when a developer needs to write wrapper scripts for provisioning systems in production.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,25,2017-09-04 22:04:25,148.28,,1,,"b'b"" Hi @animesks and @chihuo91 I\'m not sure it is the best implementation", but works for me.  Any ," please let me know.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,26,2017-09-04 22:04:25,1282.03,,,1,"b""b' Hi @otherpirate  Thanks for fixing. But I got Invalid option: use-empty-masters error in line 1718 when I try to run rebalance use-empty-masters. Same as the option weight.  Do you know what might cause this error?  Command ran: Error: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,27,2017-09-04 22:04:25,1393.93,,1,,"b""b' @otherpirate  Just curious. Any update for the error we got?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,28,2017-09-04 22:04:25,106.4,1,,,"b'b"" Hi @chihuo91 Sorry for bug and delay :/  It\'s fixed", please," try again :) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,29,2017-09-04 22:04:25,25.55,,,1,"b""b' Hi @otherpirate  Thanks for fixing.  Here are come commands I tried and the errors I got. I am not familiar with ruby so if I run the command in a wrong way"," please let me know. 1. First try  2. Second try '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,30,2017-09-04 22:04:25,852.93,1,,,"b'b"" Hi",@chihuo91 I think you should check your redis version at first. As we all know, redis version(<4.0.7) doesn\'t support migrate command in the cluster with auth mode. It\'s useless to execute this script(redis-) with the options( ( i. e. ," rebalance)) which use migrate command. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,31,2017-09-04 22:04:25,542.17,,1,,"b""b' Redis-trib will be deprecated in the next release and replaced by redis-cli"," that also supports auth. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,32,2017-09-04 22:04:25,498.5,,1,,b'b\' Hi @otherpirate It would be something wrong when adding nodes or delete nodes with password. If the node has data," the ""migrate"" command will report error ""no auth"". I think the redisneed to be changed at the function \\xe2\\x80\\x9cmove_slot\\xe2\\x80\\x9d that input ""opt"" parameter and add the password when calling ""migrate"":  ([""migrate""",[:host],port,,0,@timeout,:auth,opt[\\\'password\\\'],:keys,*keys]) \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,33,2017-09-04 22:04:25,759.48,,,1,"b""b' Support added to redis-cli as @artix75 said. Closing. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,closed,2018-07-13 16:19:35,142.15,6,21,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4288,closed,-,-,-,6,21,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,opened,2017-10-08 09:26:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,title,2017-10-08 09:26:58,00:00,,1,,"b""b' Removed duplicate boundary conditions in geohash to check  pole'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,body,2017-10-08 09:26:58,00:00,1,,,"b'b"" Before Change: The boundary conditions to check for North and South poles are checked twice in geohashEncode function of geohash.c. After Change: I\'ve replaced the check having hard coded constants with the lat_range &  lon_range variables. These variables are set  to the same boundary constants by geohashGetCoordRange function.  Impact: No external impact as only the duplicated condition is removed.  How? The lat_range and lon_range variables are always set before calling geohashEncode in geohashEncodeType by calling geohashGetCoordRange.  Why? The dependency of calling geohashGetCoordRange before geohashEncode always has to be there because the same lat_range & lon_range variables are used to calculate offsets later inside geohashEncode.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,closed,2017-10-11 18:57:59,571.02,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,reopened,2017-10-11 18:58:04,0.08,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,1,2017-10-08 09:26:58,155.18,,1,,"b""b' Accidentally closed the pull request and then reopened it again. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,2,2017-10-08 09:26:58,1304.4,,1,,"b""b' Not reviewed for a long time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,closed,2018-12-26 09:46:33,888.48,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4363,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,opened,2017-11-24 18:03:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,title,2017-11-24 18:03:44,00:00,,1,,"b""b' A minor fix and subcommand for  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,body,2017-11-24 18:03:44,00:00,,1,,"b'b"" This bundles two commits:  1. The subcommand shouldn\'t be called with 2. A subcommand  If and when merged"," the relevant page at redis-io needs to be added with the new subcommand.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,1,2017-11-24 18:03:44,975.58,,,1,"b""b' Hello @itamarhaber", the HELP thing is really appreciated, thanks! For the change of behavior, I think we need to resort to something different, like returning -1," in order to signal that the reported value is invalid. Suddenly raising an error for a correct command execution based on config looks a bit problematic. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,2,2017-11-24 18:03:44,79.02,,,1,"b""b' @itamarhaber please note that my implementation must also be changed", because you basically emulated the same behavior, copying my error. I believe that my approach was broken so we could just reply -1 in all the cases IMHO.  Similarly IDLETIME does the same... Moreover I believe that @soloestoy identified several bugs in the tracking of the access frequency and probably there are pending PRs I need to merge as well," otherwise the reported values are not exact. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,3,2017-11-24 18:03:44,2.48,,,1,"b""b' Going a different route: merging this and changing the behavior in a latter commit. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,closed,2017-11-27 11:40:50,1057.1,0,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,reopened,2017-11-27 11:40:57,0.12,0,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,closed,2017-11-27 11:41:02,0.08,0,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,4,2017-11-24 18:03:44,37.87,,,1,"b'b"" Hello again @itamarhaber", there was a small issue in the PR, the objectCommand table was not modified to allow for 2 arguments. I fix it, you probably just forgot to add the server.c file to the commit. However I\'m not sure about this:  **Return the inverse logarithmic access frequency counter of the object stored at the specified key**  Why you wrote *inverse*? The number that it outputs should be actually proportional to the access frequency of the object, even if, indeed," logarithmic. Thanks for any clarification.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,5,2017-11-24 18:03:44,177.98,,1,,"b'b"" Hello @antirez Thank you. In that case", I\'ll make more similar PRs. Indeed I felt that a too big of a change will make the subcommand lost in the PR. I also didn\'t feel comfortable with the current approach, but didn\'t want to go out of scope. I thought that documenting this would suffice <a coward\'s approach. #facepalm exactly Not sure that I can, perhaps I need to reread your comments in evict.c#L47 anyway," you know best. Going to update the docs :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,6,2017-11-24 18:03:44,180.23,,,1,"b'b""  Dude don\'t trust me on that! I need to re-read as well. Thanks. But it should be", higher counter," higher frequency.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,7,2017-11-24 18:03:44,253.62,1,,,"b'b"" @antirez just to be sure"," I still don\'t see the -2 arity in the table I trust this will be included with the bigger -1 reply fix?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,8,2017-11-24 18:03:44,321.73,,1,,"b'b\' @itamarhaber probably I forgot to ""git push""... checking\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,9,2017-11-24 18:03:44,322.23,,1,,"b""b' Yes"," pushed :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,10,2017-11-24 18:03:44,323.77,1,,,"b'b"" P.S. I can confirm that the counter is *proportional* to the frequency. I\'m updating the message.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,11,2017-11-24 18:03:44,328.78,,,1,"b""b' I tried to improve the descriptions. Please ping me if you spot any error. Thank you again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4472,closed,-,-,-,2,5,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,opened,2017-11-27 21:35:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,title,2017-11-27 21:35:27,00:00,,1,,"b""b' Keyspace notifications API for modules'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,body,2017-11-27 21:35:27,00:00,,1,,"b'b"" This PR implements a mechanism for keyspace notifications in modules.  The implementation details and API are documented inside", but here is the gist of it:  1. The module subscribes to notifications based on a mask of event types (identical to what core redis uses). 2. When notifying modules, the dispatchers selects the subscribers by flags. 3. It is the subscriber\'s job to filter further by key name, actual event, etc. 4. Notifications aren\'t reentrant i.e. if you subscribe to SET, and you set something from within the notification callback," this will not trigger the callback again (that would crash redis).  5. However subscriber A can call a command that will trigger subscriber B (but B cannot trigger A back).  6. Subscriptions work without any configuration the server only dispatches events to modules if there are actualy subsribers. Checking if there are doesn\'t reduce performance in a measurable way (profiled to take 0.1% CPU time during purely write loads.  The test module now includes an example of a working notification subscriber.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,1,2017-11-27 21:35:27,821.43,,,1,"b""b' Hello @dvirsky", thanks for the PR!  I and @artix75 checked both this PR, he will comment as well here with his impressions, I can comment from the part that is the most important to me as a start, which is the API. I think this API is very sounding, what I really did not want, was the modules to be subject to the configured notification flags. Here instead you allow to specify your own flags for each module, and this is a good thing. So I think that in general I like the design, but I need to do a review of the code. Fabio already did and liked the code and used it with some modules btw. So please wait for a review from me about this just to check a few things," I should be able to do that in the next days.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,2,2017-11-27 21:35:27,70.58,,1,,"b'b"" @antirez thank you very much. I tried to have a little antirez in my head when designing this :) BTW not sure if I wrote it", but the overhead of the check if there aren\'t any module subscribers is really minimal 0.2% cpu time on a redis-benchmark doing purely writes. It can\'t even be measured in r/s since it\'s smaller than the variation between runs.  I do have a couple of ," how about I write review comments myself directly where relevant?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,3,2017-11-27 21:35:27,113.32,,1,,"b""b' @dvirsky got it", however the CPU overhead should be near 0% without modules," the reason that there is some overhead is that the function does too much work beforehand instead of checking as first condition  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,4,2017-11-27 21:35:27,23.53,,,1,b'b\' Another problem:  client *c = createClient(-1);  There is no reason to create a client every time. For instance Lua uses a cached client forever. Another minor thing about the commit style, I saw the same thing with @itamarhaber as well ;-) Please guys don\\\'t do so many cool efforts in writing the code, and then write this commit messages," you are much better English writers than I\\\'m too... for instance:  ""finished implementation of notifications. Tests unfinished""  This states what you did", not what the commit contains. Also capitalization of the first letter is great ;-) Yep I understand it\\\'s a tongue language thing, but still.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,5,2017-11-27 21:35:27,0.28,,1,,"b'b"" @antirez in fact", no we don\'t even get there if there are no subscribers," I wanted to avoid the stack call. There is a flag in the server notification flags indicating that there are modules interested in subscribing. So we don\'t even enter this function in that case. The cost is just this call ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,6,2017-11-27 21:35:27,1.65,,1,,"b""b' So the NOTIFY_MODULE flag is  when the count of module subscribed drops to 0 or returns > 0? In such case", the 0.2% measure is probably just fluctuation," and you have zero overhead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,7,2017-11-27 21:35:27,0.6,,1,,"b""b' However the system is too complex for what it does", I would drop this NOTIFY_MODULE flag and just do," if (listLengt()) return; Same speed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,8,2017-11-27 21:35:27,0.62,,1,,"b'b"" if you don\'t mind the overhead of the extra stack call"," sure. I just wanted to completely avoid it if not needed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,9,2017-11-27 21:35:27,1.6,,,1,"b""b' @antirez so you suggest storing the client as a static global? fine"," makes sense. how about recycling the context within the loop?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,10,2017-11-27 21:35:27,0.32,,1,,"b'b"" Stack call is zero in this context"," don\'t bother... what is costly in all this code path is basically createClient(). If you cache the client you\'ll see a huge improvement when there are subscribed modules.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,11,2017-11-27 21:35:27,0.8,,,1,"b'b"" I did not check that part of the code but I\'m all for also recycling the context. If we drop to zero allocation"," it\'s great.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,12,2017-11-27 21:35:27,1.72,,,1,"b'b"" cool", I\'m doing these changes now," committing soon""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,13,2017-11-27 21:35:27,0.48,,1,,"b'b"" gotta hit the iron when it\'s hot ;)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,14,2017-11-27 21:35:27,1.68,,,1,"b'b"" P.S. Thank you a lot of adding tests. One day we\'ll be able to cure 2-space indentation syndrome and everything will be fine.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,15,2017-11-27 21:35:27,0.98,,1,,"b""b' Btw I hope to merge next week max.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,16,2017-11-27 21:35:27,1.7,,1,,"b'b"" what do you mean by 2 space indentaion syndrome? I\'m using 4 AFAIK""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,17,2017-11-27 21:35:27,1.8,,1,,"b""b' @dvirsky url  btw also // style comments are not Redis standard.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,18,2017-11-27 21:35:27,1.38,,1,,b'b\' With an exception to be honest,"//"" is used to write comments in example code inside /* */ blocks, because it\\\'s the only valid syntax.\''
redis	4479	closed	19	dvirsky	2017-11-27 21:35:27	1.92	+1			b""b' @antirez re recycing the module context is it safe to use the same context over and over, and just after each cycle? Otherwise of course automemory will cause leaks'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,20,2017-11-27 21:35:27,0.67,,1,,"b'b"" and re indentaion I admit I didn\'t pay attention to style in the test"," but I did in the actual code. Will fix as well...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,21,2017-11-27 21:35:27,3.58,,,1,"b'b"" I think you have to free the context at every round indeed. About the indentation and coding style", I\'m just kidding and asking for the small things, but I like the PR, thanks. This are changes that otherwise I would do myself after merging, but I believe that the authors sometimes are more happy of doing them directly. Same about the improvements I\'m suggesting," I could do it myself but asking it\'s an agreed process and makes for better collaboration.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,22,2017-11-27 21:35:27,1.32,,1,,"b'b"" P.S. note that here tomorrow is a national holiday so I\'lve a couple of hours of work time left and later will go to hometown. See you Monday.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,23,2017-11-27 21:35:27,3.42,1,,,"b'b"" I see that some stuff is not correctly reset when freeing the context", for example freeing the postponed arrays does not reset the pointer to NULL. It looks like resuing the same module context continuously is asking for trouble, and in all likelihood it will be rare situations where you have more than one subscriber per redis," so I\'m keeping the module context per call to the notify function. It seems cheap it\'s just a static stack allocation. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,24,2017-11-27 21:35:27,8.82,,1,,"b""b' @antirez pushed fixes to the above issues. Thanks for the comments.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,25,2017-11-27 21:35:27,2.85,,1,,"b""b' Yes @dvirsky I agree that every time there is to use some context", we can reuse the same *var* but we should again re-assign the initializer," and free it later before reuse. So caching it does not make sense indeed. Full review soon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,26,2017-11-27 21:35:27,161.18,,,1,"b'b"" Really excited about this PR"," I\'ve been developing a module that (currently) relies on a client side library to manage estate and it feels sub-optimal. Any updates on the state of the PR?  thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,27,2017-11-27 21:35:27,2.05,,1,,"b'b"" I\'ll try to merge tomorrow. Btw this no longer applies"," pinging @dvirsky.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,28,2017-11-27 21:35:27,81.4,1,,,"b'b"" @antirez I\'ll rebase and resolve it ASAP. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,closed,2018-02-14 19:27:08,1311.68,3,19,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,reopened,2018-02-14 19:27:15,0.12,3,19,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,29,2017-11-27 21:35:27,24.57,,1,,"b""b' @antirez there were a couple of minor conflicts with the notification flags"," which is a good thing because it reminded me to add a flag in the module API for stream notifications as well. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,closed,2018-02-15 20:36:32,69.28,3,20,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,30,2017-11-27 21:35:27,45.1,,,1,"b""b' Code reviewed and merged. Thanks @dvirsky !'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,31,2017-11-27 21:35:27,48.63,,,1,"b""b' w00t!!!! thanks"," this is a really revolutionary one from my POV. It can allow us to do automatic indexing and other very intersting stuff. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,32,2017-11-27 21:35:27,50.07,,,1,"b""b' Thanks to you actually"," the code is written with care. Very appreciated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,33,2017-11-27 21:35:27,59.13,,1,,"b""b' Backported into 4.0 branch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,34,2017-11-27 21:35:27,59.68,,,1,"b""b' even better! I guess it needed a removal of the streams flag?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4479,closed,-,-,-,3,21,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,opened,2017-12-07 02:13:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,title,2017-12-07 02:13:36,00:00,,1,,"b""b' Bug in dictFindEntryRefByPtrAndHash (dict.c)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,body,2017-12-07 02:13:36,00:00,,,1,"b'b"" dictEntry **dictFindEntryRefByPtrAndHash(dict *d", const void *oldptr, unsigned int hash) {   dictEntry *he, **heref;   unsigned int idx," table;  if (d->ht[0].used + d->ht[1].used == 0) return NULL; /* dict is empty */  **<<<< this if can\'t judge the dict is empty**   for (table = 0; table <= 1; table++) {   idx = hash & d->ht[table].sizemask;   heref = &d->ht[table].table[idx];   he = *heref;   while(he) {     if (oldptr==he->key)       return heref;     heref = &he->next;     he = *heref;   }   if (!dictIsRehashing(d)) return NULL;   }   return NULL; }""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,1,2017-12-07 02:13:36,58.88,,1,,"b""b' Already fixed in d1176b582c8f482e46821527114c5c1476bc66d4"," you can update your code from branch :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,closed,2017-12-07 08:20:33,366.95,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,2,2017-12-07 02:13:36,310.85,,1,,"b'b"" if (d->ht[0].used + d->ht[1].used == 0) return NULL; /* dict is empty */  **<<<< this if can\'t judge the dict is empty**""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,3,2017-12-07 02:13:36,1.02,,1,,"b""b' url it fix the problem \\xef\\xbc\\x9f @soloestoy '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,reopened,2017-12-07 08:24:24,3.85,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,4,2017-12-07 02:13:36,48.63,,,1,"b'b"" hi @jonasmao it does\'t matter"," because the priority of operator is above :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,5,2017-12-07 02:13:36,41.92,,,1,"b""b' thanks  I ignore this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,closed,2017-12-07 09:54:54,90.5,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4513,closed,-,-,-,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,opened,2018-02-10 08:11:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,title,2018-02-10 08:11:27,00:00,,1,,"b""b' RESP: support process inline commands that split with \\\\n'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,body,2018-02-10 08:11:27,00:00,,1,,"b'b"" Hi",  When I wrote a script for Redis, I found a small problem. When I use \'\\\\n\'," Redis will lose the first letter of the next command.  ![image]url Signed-off-by: charpty ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,1,2018-02-10 08:11:27,58.83,,1,,"b'b"" The protocol is very specific about CRLF throughout. Playing devil\'s advocate: what is the advantage of fixing this vs expecting input data to follow the expected protocol?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,2,2018-02-10 08:11:27,441.57,,1,,"b""b' ok\\xef\\xbc\\x8cget it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,closed,2018-02-11 16:32:20,500.88,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,reopened,2018-02-12 07:19:59,887.65,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,closed,2018-02-12 07:22:02,2.05,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4678,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,opened,2018-03-07 12:02:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,title,2018-03-07 12:02:07,00:00,,1,,"b""b' redis was killed by oom'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,body,2018-03-07 12:02:07,00:00,1,,,"b""b' Hi guys I have a annoying problem . I use redis as a kv db in nodejs"," i don'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,closed,2018-03-08 02:50:37,888.5,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,reopened,2018-03-15 02:01:07,1390.5,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,1,2018-03-07 12:02:07,1094.05,,1,,"b""b' Well", the OOM killed off PID 18996, then PID 13619," not the server you sent the INFO for (PID 18665). What is your Node app doing? Do you have  set properly? What about Linux swap?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,2,2018-03-07 12:02:07,307.8,,,1,"b""b' I write a shell application to check redis server status", if it is down ,then the shell will let it restart,so the PID is not the name; I have changed the method to do my work," still thanks a lot'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,closed,2018-03-16 11:24:02,562.92,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4743,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,opened,2018-03-14 10:49:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,title,2018-03-14 10:49:52,00:00,,1,,"b'b"" config get appendfilename doesn\'t work""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,body,2018-03-14 10:49:52,00:00,,1,,"b'b\' My .conf file: _# The name of the append only file (default: """") appendfilename _  cli command: _config get ap*_ Returns: _1) ""appendfsync"" 2) ""everysec"" 3) ""appendonly"" 4) ""yes""_  Appendfilename is not listed. Is this a bug?  Redis version 3.2.100 running on Windows 10 64Bit\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,1,2018-03-14 10:49:52,59.2,,1,,"b'b"" Hi it seems that you are using the Windows fork of Redis. That fork isn\'t a part of the official Redis project and thus issues with it do not belong here"," please close yours.  You can seek further assistance at the unmaintained url  or the new url  repositories.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,2,2018-03-14 10:49:52,143.63,,1,,"b'b"" @itamarhaber: That fork isn\'t a part of the official Redis project and thus issues with it do not belong here", please close yours. > I cannot try this using Linux," but could this be an issue in Linux version of Redis as well as the Windows fork? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,closed,2018-03-14 14:12:42,202.83,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,3,2018-03-14 10:49:52,54.4,,1,,"b'b\'   config option is not supported by ""CONFIG GET""", though I have no idea if this is on purpose or was overlooked.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,4,2018-03-14 10:49:52,64.92,1,,,"b""b' @tporadowski is right.  @Kortenbach sorry for the canned reply since this is also demonstrated with real Redis (:)) feel free to reopen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,5,2018-03-14 10:49:52,318.2,,,1,"b'b"" Thanks for testing this. So it\'s a bug"," right? I will reopen...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,reopened,2018-03-14 21:30:14,437.53,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,4753,open,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,opened,2018-06-27 16:52:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,title,2018-06-27 16:52:13,00:00,,1,,"b""b' fix empty string for sentinel rename-command'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,body,2018-06-27 16:52:13,00:00,1,,,"b'b"" The rename-command should not support an empty string in the command. Here are the reasons: 1. It is useless. rename-command is unlike the others which use an empty string to disable \'sentinel set\'. Instead", we need to do it like this:  .  2. Set a renamed command to empty string: . Config rewrite process will record the renamed command like this\\xef\\xbc\\x9a . Unfortunately, it is a wrong format. Once restart," sentinel can not startup successfully.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,1,2018-06-27 16:52:13,4.23,,,1,"b""b' Thanks! Please use instead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,closed,2018-06-27 17:05:53,13.67,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,2,2018-06-27 16:52:13,12.2,,1,,"b""b' No need to close"," if you want you can just  to this PR to update the commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,3,2018-06-27 16:52:13,8.13,,1,,"b""b' My fault"," I am not very familiar with PR operations. I meant to reset and push -f to update the commit. I will reopen this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,reopened,2018-06-27 17:16:48,10.92,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,4,2018-06-27 16:52:13,2.9,,,1,"b'b"" NP I\'m also a newbie about PRs"," I just merge them but rarely create PRs :-) But a few days ago I saw another user to git push -f to squash the existing PR. So I wanted to tell you given that I see you are actively contribute things to Redis. Btw: Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,5,2018-06-27 16:52:13,11.72,,,1,"b""b' Already replace strlen() with sdslen()"," thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,closed,2018-07-02 16:40:36,1403.8,1,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,6,2018-06-27 16:52:13,1389.3,,,1,"b""b' Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5068,closed,-,-,-,1,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,opened,2018-07-19 13:06:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,title,2018-07-19 13:06:58,00:00,,1,,"b""b' Streams: ID of xclaim command should start from the sixth argument.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,body,2018-07-19 13:06:58,00:00,1,,,"b'b"" Error is not found because that is kind of a valid stream id. But i think we\'d better make it accurate and right :-). @antirez ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,1,2018-07-19 13:06:58,1354.22,,1,,"b""b' Hi @antirez ", i have pushed another commit to optimize command id parse. Currently every input ID is parsed two times. The optimization uses a static vector to cache parsed ids, just as command did. Plz have a look at this PR," thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,2,2018-07-19 13:06:58,65.35,,,1,"b'b"" Hello @0xtonyxia! Thanks for the fix! About the optimization", I think that XCLAIM being a rarely useful command, it\'s not worth trying to speedup it... It should be fast enough for most cases," better to have a simpler to read code in this case :-) We can do it later if we really see the command to be too slow for certain use cases. Please could you update the PR to just include de5ca51 for now? Thank you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,3,2018-07-19 13:06:58,808.92,,1,,"b'b"" Hi @antirez ",  agree with the simpler code POV :-), it\'s a good idea to check if it\'s worth of speedup in the future. I have reset the branch to the first commit, plz check," thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,closed,2018-08-03 11:44:54,1357.93,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,reopened,2018-08-03 11:45:10,0.27,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,closed,2018-08-03 11:45:28,0.3,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,4,2018-07-19 13:06:58,570.18,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5146,closed,-,-,-,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,opened,2018-07-21 18:16:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,title,2018-07-21 18:16:42,00:00,,1,,"b""b' Remove duplicate check'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,body,2018-07-21 18:16:42,00:00,,1,,"b""b' Removed redundant check'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,1,2018-07-21 18:16:42,237.07,,1,,"b'b"" This actually introduces a bug with  ", the check that you see there was specifically added later. However probably it\'s possible to do the other duplicated check (the first one)," so that the second will handle both the cases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,closed,2018-07-23 22:13:46,237.07,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,2,2018-07-21 18:16:42,8.9,,,1,"b""b' In e8f5d219 I removed the first check. This should be fine instead"," since the second check will catch zero both in the positive and negative cases. Thanks for hinting about the duplicated condition.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,3,2018-07-21 18:16:42,539.0,,1,,"b'b\' @antirez  It wouldn\\\'t have introduced ""-0"" slen=2", negative=1 and  (p[0] >= \\\'1\\\' && p[0] <= \\\'9\\\') condition would have failed :) \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,4,2018-07-21 18:16:42,18.05,,1,,"b'b"" Yes", that\'s the problem, -0 *should work*. So I fixed this bug adding the duplicated condition at some point here: 5cbe90dbfd5d9f46f5fa42e4e96a40a46d29b234  So basically your PR removed a fix for a real bug. At the same time, when I fixed such bug," I did not realize that the initial check at the start of the function could be removed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,5,2018-07-21 18:16:42,15.98,1,,,"b""b' No sorry", thinks are different @dsomeshwar, is still refused," so let me check what was exactly that bug fixed in 5cbe90d.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,6,2018-07-21 18:16:42,4.48,,1,,b'b\' P.S. Also note that correctly parsing -0 as 0 would introduce an error in Redis," because that function specifies that it only performs ""pure"" conversions where the result of turning back to string is the same.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,7,2018-07-21 18:16:42,17.53,1,,,"b'b"" Ok I understood what happened... \\xf0\\x9f\\x98\\x84 I and @pietern fixed the same bug about at the same time during early 2011. However he submitted the fix via a pull request. I merged the pull request *after* my fix", even if @pietern fix is actually older than mine a couple of days. However we fixed the bug in two different ways, so the same fix in two different places would not conflict, and we ended with this repeated condition.  Now I think that your PR was better than the way I fixed it, because it is a clear special condition at the start, so I\'l going to merge your code on top of my changes," and we are done :-) Thanks @dsomeshwar and sorry for the confusion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,reopened,2018-07-24 08:17:56,604.17,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,closed,2018-07-24 08:28:16,10.33,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,8,2018-07-21 18:16:42,10.67,,,1,"b""b' PR merged!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5157,closed,-,-,-,2,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,opened,2018-07-22 07:15:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,title,2018-07-22 07:15:06,00:00,,1,,"b""b' memory reporting of clients argv and scripts'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,body,2018-07-22 07:15:06,00:00,1,,,"b'b"" This PR contains several commits handling related things. please feel free to cherry pick just the first 2 commits", or any other portions you like.  1) Track and report memory used by clients argv. this is very useful in case clients started sending a command and didn\'t complete it. in which case the first args of the command are already trimmed from the query buffer.  2) ~~report memory used by scripts (not the lua lib itself). this is useful in case a bad client is flooding the server with many unique scripts, and their code in redis takes a lot of ram.~~ please use #4883 instead  3) Include internal sds fragmentation in MEMORY reporting  4) performance and memory reporting improvment sds take control of it\'s internal frag  this commit has two aspects:  A) improve memory reporting for all the places that use sdsAllocSize to compute  memory used by a string," in this case it\'ll include the internal fragmentation.  B) reduce the need for realloc calls by making the sds implicitly take over  the internal fragmentation of the block it allocated. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,1,2018-07-22 07:15:06,262.23,,1,,"b""b' @oranagra I humbly beg that you compare your 2 to mine url  iterating is slow :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,2,2018-07-22 07:15:06,10.12,,1,,"b""b' @itamarhaber thanks"," indeed my script counting code would have slowed down INFO in cases were there are many many scripts. Removing this commit from my branch. @antirez please take #4883 instead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,3,2018-07-22 07:15:06,299.77,,,1,"b""b' Thank you"," other one merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,closed,2018-07-23 16:47:13,572.12,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,reopened,2018-07-23 16:47:39,0.43,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,4,2018-07-22 07:15:06,0.62,,1,,"b""b' Reopening this one as I think there is more meat to merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,5,2018-07-22 07:15:06,2.95,1,,,"b""b' @antirez yes", this PR contained 4 commits, one of which was overlapping another PR (which was better in some aspects), so i removed that commit from this PR (now contains 3 commits). you may decide to merge just the first one, first two," or all three.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,6,2018-07-22 07:15:06,1359.95,1,,,"b""b' @antirez a reminder about this one in case you meant to review and forgot. also do you want me to resolve that minor conflict that was created by merging the other PR"," or will you handle that in case you merge?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,7,2018-07-22 07:15:06,1365.35,,1,,"b'b"" Thanks for bumping this on the list! I\'ll check tomorrow", a rebase would be appreciated," and sorry for breaking the patch merging other stuff.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,8,2018-07-22 07:15:06,1366.27,,1,,"b'b\' P.S. I wish Github could warn users about ""merging this will make X",Y,"Z impossible to merge"". For instance a few days ago I merged a typos PR that ruined a number of other PRs...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,9,2018-07-22 07:15:06,1380.18,1,,,"b'b"" resolved (push -f). the conflicts were created by another PR i submitted (which i intended you to merge only if you decide not to merge this one).  i share the same pain about merge conflicts (mainly when cherry picking between branches).. many times i prefer not to fix types and formatting problems (white space and others)", or even not to refactor ugly code (if it\'s bug free)," so that it won\'t cause conflicts.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,10,2018-07-22 07:15:06,945.82,1,,,"b""b' Hi @oranagra", I was checking the first commit implementing the argv memory reporting. Here we are ending with two similar functions:  1. size_t getStringObjectSize(robj *o); 2. size_t getStringObjectSdsUsedMemory(robj *o):  The first is introduced by your commit, the second is already in the source tree. The difference between the two should be that one includes external fragmentation and one does not.  In turn the two calls two different functions to return the memory used by an SDS string:  1. size_t sdsAllocSize(sds s); 2. size_t sdsZmallocSize(sds s);  The first returns the SDS *logical* memory used: header + size of the allocation including the final null term. The second instead reports the size of the allocation where the SDS is stored.  I wonder if we need both (probably yes, because sometimes we want to understand the total memory usage and sometimes just what the higher level API tried to allocate)," but anyway the naming scheme of such functions look very confusing. So I think here there is a good chance to fix this.  I would change them in the following way:  * sdsAllocSize() -* sdsZmallocSize() -* getStringObjectSize() -* getStringObjectSdsUsedMemory() WDYT?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,11,2018-07-22 07:15:06,1087.0,,1,,b'b\' @antirez thanks for reviewing. to me, considering we have sdslen, and sdsfree," i would expect their sum to be named ""alloc"""," but maybe ""size"" would be ok too (i\\\'m worried it ""size"" may be confused with ""len""). also", considering we have many calls to zmalloc_size in the project (to get the real allocated size including internal fragmentation)," it sounds logical to me that the sds function doing that will be named ""zmalloc""", this would not look good in the sds repo, but this may be the reason why this function is in networking.c and not sds.c.  anyway, this is just naming, so after the above arguments, feel free to decide what sounds best to you, and either rename yourself, or ask me to fix the PR.  however, like i did several times in the past, this PR introduces the changes in several stages (so that you can decide to merge just the first commit, or first two, without merging the last). but if you do decide to merge the last commit, then the difference between these two functions disappears, since now any sds will take responsibility of it\\\'s internal fragmentation.  the reason i didn\\\'t use sdsZmallocSize in the first commit," and instead introduced a new function that reports the ""logical"" size without fragmentation", was that i didn\\\'t want the performance overhead of calling sdsZmallocSize. but the 3rd commit changes sds.c in a way that every sds is now aware of it\\\'s internal fragmentation. The two benefits of doing that are:  1.  memory reporting becomes implicitly more accurate.  2.  less cases were the sds needs to be regrown / realloced.  p.s. in the light of the recent #5397, i\\\'ve reviewed my second commit and i see two things that need fixing: 1) object.c line 783 (OBJ_ENCODING_EMBSTR) we need to call getStringObjectSdsUsedMemory 2) object.c line 1318 (when MEMORY USAGE adds the keyname), we need to either call getStringObjectSdsUsedMemory, or preferably, do that on the key in the dict rather than the one in argv (anyway, we can use sdsZmallocSize on obj->ptr).  so anyway, please finish your review and decide what parts you want to merge. then either fix / refactor what you wish during merge. or if you prefer, tell me what you want to fix / merge and i\\\'ll update the PR.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,12,2018-07-22 07:15:06,1120.62,,1,,"b'b"" Thank you @oranagra. A few remarks:  1. I\'ve the feeling that the argv accounting change may be better like that to avoid a cache miss:   I think that this preserves completely the goal of your original commit", that is to understand if some client is doing crazy stuff. However I\'ve the feeling that calling the function and potentially having to cache-miss, may have an impact in certain work loads.  Otherwise I\'m taking the commit exactly like you proposed it, with the changes needed to apply it (since we accumulated other differences).  2. MEMORY USAGE 3. The SDS change looks good as well to me, since this way we may use the full potential of the allocation. However I wonder why we don\'t juse use the API provided by malloc_size() & co, so that we have to export a single additional function to SDS. I\'m not sure there is much gain in doing it in a single function, since anyway such function is doing another function call regardless. Moreover it would be important to be able to avoid setting such API in sdsalloc.h," so that SDS can work without that. And this is how we should ship SDS from upstream url  for max compatibility by default.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,13,2018-07-22 07:15:06,1142.68,,1,,"b'b\' Ok that\\\'s the idea about the point ""1"" above: url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,14,2018-07-22 07:15:06,1208.65,,1,,b'b\' @antirez i\\\'m not 100% sure i follow you, i\\\'ll try to respond, but if you feel that i lost you, please help me get back on the track.  your 1,2,3 are talking on each of the 3 commits, right? in that case: 1) indeed the main purpose of this PR is to be able to detect that crazy client(s), so in that sense, the sdslen may be enough, but if possible i would like to get a little bit closer to the trough, since sdslen is not only missing the fragmentation," but also the ""free"" portion of the sds", which may be very big. this is why my fist commit used sdsAllocSize, rather than sdslen... i.e. i wanted to avoid the unknown cost of zmalloc_size, and use only data that is present in the sds header anyway. I\\\'m not sure why you consider sdsAllocSize another cache miss more than sdslen? both variables are part of the sds header. Do you mean code cache? maybe you prefer to use sdsalloc instead of sdsAllocSize? since sdsalloc is in in sds.h and is most likely inlined by the compiler? (we can probably move sdsAllocSize and sdsHdrSizeto sds.h too)  besides that, IIUC your code from the above mentioned branch, it looks like c->argv_bytes is mixing values from various sources, in which case there may be a creeping leak. i.e. if one place adds sdslen, and the other adds or deducts getStringObjectSdsUsedMemory. we must make sure we always use the same source.  2) i agree, the only sensible use for MEMORY USAGE is to try and understand used_memory (from INFO MEMORY), and both should be of the same units (with internal fragmentation).  3) what i wanted to avoid in that commit, in not the extra call to a function in zmalloc.c," but the extra call to the allocator library. i don\\\'t want two consecutive calls to malloc_size and it\\\'s unknown cost. especially if we have it for free. so i\\\'m willing to slightly ""pollute"" the cleanness of the standalone sds repository", for a slightly better redis.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,15,2018-07-22 07:15:06,40.27,1,,,"b""b' @antirez you may have missed my response above.  where do we stand about this? do you want to add this info to redis one way or another?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,16,2018-07-22 07:15:06,1396.68,,,1,"b""b' @oranagra thanks", yes checking those as well," started from the bug fixes to release a new RC ASAP.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5159,open,-,-,-,6,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,opened,2018-08-25 04:33:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,title,2018-08-25 04:33:34,00:00,,1,,"b'b"" redis-cli haven\'t  not connect to server after loading helloword module""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,body,2018-08-25 04:33:34,00:00,,1,,"b""b' VERSION: redis-4.0.11 SYSYTEM: CentOS release 4.3  *PROBLEM*: Not have any reply in the same host with server", as follows   By the way," I have the following test error: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,closed,2018-08-25 05:03:37,30.05,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,reopened,2018-08-25 12:43:34,459.95,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,1,2018-08-25 04:33:34,424.08,,1,,"b'b"" I haven\'t verified this"," but I think this is the same as #5238.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,2,2018-08-25 04:33:34,178.87,,,1,"b""b' @itamarhaber Good!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,closed,2018-08-27 14:36:31,112.95,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5277,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,opened,2018-09-12 02:40:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,title,2018-09-12 02:40:34,00:00,,1,,"b""b' BLPOP may cause data inconsistency?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,body,2018-09-12 02:40:34,00:00,,1,,"b'b"" in BLPOP", we block the client until the specified key is existed, then we pop the key from the list.  What if  the master has become a slave, then this key is ready to pop, when we pop this key, then it will cause data inconsistency, since slave can not delete this key.  the other question is that when we pop the key and the master has become a slave, the won\'t success since this is a slave," right?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,1,2018-09-12 02:40:34,126.45,,1,,"b'b"" maybe i don\'t follow your scenario", but when the master becomes a slave," we call  . can you elaborate on what exactly the problematic scenario?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,2,2018-09-12 02:40:34,3.32,,,1,"b""b' thanks", i just want to know whether this would be a problem," seems not.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,closed,2018-09-12 04:50:20,129.77,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,reopened,2018-09-12 08:24:33,214.22,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,closed,2018-09-12 09:23:34,59.02,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5341,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,opened,2018-10-15 08:59:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,title,2018-10-15 08:59:47,00:00,,1,,"b""b' Fix treat RDB aux fields as unrecognized fields'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,body,2018-10-15 08:59:47,00:00,,1,,"b""b' Some DEBUG logs output as follows: These AUX fields not start with  "," so these aux fields can not be logged on level while rdb loading.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,1,2018-10-15 08:59:47,15.13,,1,,b'b\' Hello, probably this was a good idea, but now it\\\'s too late, there are tools that rely on the fact such fields are called like that probably at this point... It\\\'s better to just adapt the error message to make it less severe," like ""Unused field: ...""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,2,2018-10-15 08:59:47,23.42,,,1,"b'b"" Right", modify the fields name may have compatibility problems for rdb tools rely on this. It\'s safer to adapt the log output.  I will close this," thanks. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,closed,2018-10-15 09:38:21,38.57,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,3,2018-10-15 08:59:47,237.12,,,1,"b'b"" Thanks I\'m reopening as a memo that I need to change something. Thank you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,reopened,2018-10-15 13:35:27,237.1,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,5445,open,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,opened,2019-07-11 17:09:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,title,2019-07-11 17:09:39,00:00,,1,,"b""b' Make zscore transparently varargs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,body,2019-07-11 17:09:39,00:00,,1,,"b""b' Hashes have hmget"," maybe just make hget varargs too? Probably a very similar change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,1,2019-07-11 17:09:39,1043.6,,1,,"b'b"" Hello", this was discussed many times, but I\'ll try to explain it again: in Redis we never want a single command to return a different value *type* (plain VS array) just because the number of arguments changed. Because otherwise when you do:  foo = (*myarray_of_keys);  You don\'t want foo to be at random an array or a single value, otherwise you have to make extra checks later. This gets even more harder with languages like Java that have often hard-coded signatures for methods.  So the solution would be in theory to add ZMSCORE, that always returns an array (even an empty one if there are no arguments at all, this makes even more sense and is used in some Redis APIs). However is it worth it? Depends on use cases," but I\'ve the feeling that it could be a good idea. What is the common use case for fetching multiple scores at the same time?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,2,2019-07-11 17:09:39,1.07,,1,,"b""b' P.S. note that in write commands instead", we often converted them to vararg, because they returned 0 or 1, so we extended the return value to be the number of affected elements," which is completely backward compatibile and does not change the reply type with the number of arguments. This is one of the few rules of the Redis API.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,closed,2019-07-12 16:45:56,1416.28,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,3,2019-07-11 17:09:39,291.63,,,1,"b'b"" My use case is simply that I have scores in a sorted set that I want to know", because that\'s the primary place where we put those values. And being able to get more than 1 with ~half as many hash lookups would be nice.  But I closed this PR because I think Redis has too many root-level verbs already (more than 200 now)," and adding another as is not what I intended when I opened it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,4,2019-07-11 17:09:39,40.2,1,,,b'b\' @josiahcarlson I was asking what is the application reason to fetch multiple scores by value. I ask that for pure curiosity because I don\\\'t implement most applications with Redis itself nowadays and this is not a common thing I hear from the community, maybe there is a very legitimate pattern. However I think that even if you are right that Redis has many root verbs, ZMSCORE does not make the situation much worse, because most Redis users understand that ZSCORE and ZMSCORE are kinda the same thing. Sometimes we avoided adding a new command by exploiting the fact that the first argument would be a number, so one could do ZSCORE MANY keya keyb keyc, however here the first argument is a string so it\\\'s more complex to find a way to make it backward compatible," and at the same time having a form that is clearly different when used in ""multiple keys"" mode. So I\\\'m not completely against adding ZMSCORE", I wonder what other users think. Reopening in the hope to see some further comment from other folks.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,5,2019-07-11 17:09:39,0.65,,1,,"b'b"" Oh no I can\'t reopen since the branch was removed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,reopened,2019-07-17 03:12:54,626.97,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,6,2019-07-11 17:09:39,686.65,,1,,"b'b"" Reopening because you requested.  My use case is simply that I\'ve got indexes whose contents I\'m verifying and using at the same time. I have already done a few things to make sure that I\'m using Lua to minimize round-trips", but if I\'m doing 50 calls to ZSCORE with the same key as part of a larger operation, it seems like maybe avoiding the main hash lookup the 49 times it isn\'t necessary makes sense.  If this is something you actually like, I might also suggest doing something similar for  ,  ,  ,  ,  , and any others where there doesn\'t already exist a multiple-read / write version. I\'ve done applications with Redis + Lua using those operations, and I\'ve used all of the above in a loop for data fetching, index construction," etc.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,7,2019-07-11 17:09:39,1372.28,,,1,b'b\' @josiahcarlson good point: if we decide to do that, does not make much sense to stop at this instance, but to address similar things as well. There are already open issues for MEXISTS and alike indeed. Another more radical choice could be to have the next releases of Redis to return an array for such commands so that we can make the old command vararg, but in that case we would break the API," which was historically almost never done in Redis. But it is useful to outline all the possibilities we have I guess. Note that certain commands are vararg ""friendly"" in the list you proposed. For instance GETBIT", since it gets the bit as a number, can be made vararg without problems:  GETBIT mykey 2134   GETBIT mykey BITS 1 2 3 4 100 200 300 Those are low hanging fruits.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis,6230,open,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
