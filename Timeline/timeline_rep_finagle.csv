REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,,,,,,,
finagle,91,closed,opened,2012-06-27 16:16:57,,,,,,,,,,,,,,,,,,,,,,,
finagle,91,closed,title,2012-06-27 16:16:57,00:00,,1,,"b""b' finagle-protobuf '""",,,,,,,,,,,,,,,,,,
finagle,91,closed,body,2012-06-27 16:16:57,00:00,,1,,"b""b' We made a couple of improvements based on our experience using the protobuf based RPC in production.'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,1,2012-06-27 16:16:57,930.9,,1,,"b'b"" hey George\\xe2\\x80\\x94I\'m currently on vacation and will have a look when I get back (in ~1 week)""'",,,,,,,,,,,,,,,,,,
finagle,91,closed,2,2012-06-27 16:16:57,145.93,,,1,b'b\' Hey Marius," I noticed one of your comments in the finagle-protobuf module""finagle-protobuf:kill POM; seems "".We have been using this protocol in production for months", and it has beenworking great for us and we did not need to make any updates. The one thing I will need to add is a better wiki page. George On Fri, Jul 6, 2012 at 1:47 AM, marius a. eriksen <reply@\'',,,,,,,,,,,,,
finagle,91,closed,3,2012-06-27 16:16:57,327.25,,,1,b'b\' I think I was referring to the POM :-) My chief objection to making finagle-protobuf truly first class at this point is that I\\\'d really like to separate the encoding from the protocol. There are some upcoming changes in which will make it a very appealing (and generic) RPC transport, upon which we can use protocol buffers, thrift," whatever. I\\\'ll probably factor that out into something called ""finagle-rpc""\''",,,,,,,,,,,,,,,
finagle,91,closed,4,2012-06-27 16:16:57,10.25,,,1,"b'b"" Hi Marius", What\'s the status of your efforts around generalizing finagle-thrift ( i.e. finagle-rpc )? Thanks,"Mark""'",,,,,,,,,,,,,,,,
finagle,91,closed,5,2012-06-27 16:16:57,336.37,,1,,"b""b' This is done: [finagle-mux]url  As an example of adapting Mux to Thrift"," see [finagle-thriftmux]url '""",,,,,,,,,,,,,,,,,
finagle,91,closed,6,2012-06-27 16:16:57,1077.93,,,1,"b""b' @george-vacariuc how do you feel about closing this", and porting just the serialization code to use Mux instead? I promise," it is much better.'""",,,,,,,,,,,,,,,,
finagle,91,closed,7,2012-06-27 16:16:57,89.5,,,1,"b""b' @mariusaeriksen we definitely want to keep in step with the framework"," let me see how I can slip this into our backlog. Thanks for the heads up.'""",,,,,,,,,,,,,,,,,
finagle,91,closed,8,2012-06-27 16:16:57,62.37,,1,,"b""b' @george-vacariuc any update on porting this to mux?'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,9,2012-06-27 16:16:57,554.18,1,,,"b""b' @mosesn unfortunately", at this time," I do not have the bandwidth to do the porting.'""",,,,,,,,,,,,,,,,
finagle,91,closed,10,2012-06-27 16:16:57,214.83,,,1,"b""b' ok"," keep us posted.  thanks!'""",,,,,,,,,,,,,,,,,
finagle,91,closed,11,2012-06-27 16:16:57,533.52,,,1,"b'b"" Hi @mosesn", We are interested in moving forward with finagle-protobuf and we have some bandwidth to make it happen.  One of our biggest motivators is a desire to utilize zipkin for distributed tracing of our finagle protobuf services. I\'ve taken a look at the mux transport and it appears to provide the tracing support we desire.  Is there a simple example, or maybe some tests, that show a simple implementation on top of the mux transport?  Any help would be much appreciated. Thanks,"Patrick""'",,,,,,,,,,,,,,
finagle,91,closed,12,2012-06-27 16:16:57,94.18,,1,,"b""b' Not so much.  Mux is still pretty new in Finagle.  The only currentimplementation is thriftmux.  I agree though that protobuf+mux would be anextremely useful protocol. On Wed", Mar 19, 2014 at 8:40 AM," Patrick Osbornenotifications@:'""",,,,,,,,,,,,,,,
finagle,91,closed,13,2012-06-27 16:16:57,1.38,,1,,"b""b'   is a simple implementation showing how to compose an RPC system on top of Mux.'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,14,2012-06-27 16:16:57,0.2,,1,,"b""b' That being said", you might look at the api docs:url  On Wed, Mar 19, 2014 at 10:14 AM," Brian Degenhardt bmd@ wrote:'""",,,,,,,,,,,,,,
finagle,91,closed,15,2012-06-27 16:16:57,1346.83,,,1,"b'b"" Thanks for the responses.  The mux protocol documentation has been helpful. I\'ve been making a bit of progress sorting out the thriftmux implementation and what a protobuf implementation may look like. I have a question about ClientBuilder and ServerBuilder", are those classes intended only for non-mux implementations?  or am I missing something there. Is there a similar mux mechanism to config the clients and servers? Thanks,"Patrick""'",,,,,,,,,,,,,,,,
finagle,91,closed,16,2012-06-27 16:16:57,153.42,1,,,"b'b"" The builders aren\'t compatible with mux", but we\'re working on making them more general so that should change in the near future. However, a lot of the current builder knobs become meaningless with protocols like mux [1]. Because of this," the new apis were designed to a be a bit more rigid and protocol implementors are expected to provide sensible defaults (ex. [2]).  [1] url [2] url ""'",,,,,,,,,,,,,,,
finagle,91,closed,17,2012-06-27 16:16:57,211.15,,,1,"b""b' Thanks"," the FAQs are very helpful. What about adding a tracer to client  server?  We are in need of distributed tracing and our hoping to use Zipkin in that effort with the new protobuf built on mux. -Patrick'""",,,,,,,,,,,,,,,,,
finagle,91,closed,18,2012-06-27 16:16:57,1153.65,,,1,"b'b"" So what\'s the best option for protobufs  at the moment? Thanks","Justin""'",,,,,,,,,,,,,,,,,
finagle,91,closed,19,2012-06-27 16:16:57,178.18,,,1,"b'b"" Our company has tried to push our version back to Finagle but we got some pushback because it was not built on the mux transport (which wasn\'t complete at the time).  So other than building the functionality yourself", you may need to wait till we get our new version complete and pushed back to the open source community. If you have some experience with protoc plugins for generating Java code that would be very useful to producing a canonical Finagle / Protobuf interface.  See my post on the protobuf google group here: url  Cheers,"Patrick""'",,,,,,,,,,,,,,,,
finagle,91,closed,20,2012-06-27 16:16:57,1302.73,,,1,"b'b"" Hi All", I have built a basic protobuf implementation on the mux transport and it turned out to be fairly easy using thriftmux for some inspiration. I\'m now working on getting the tracing to work with the new implementation.  I have added Tracers to the DefaultClient and DefaultServer created with the mux transporter but the service name and method name aren\'t filled in.  So it looks like I need to call something like:  after the TracingFilter executes and pushes the Tracer and sets up the trace id.  But I\'m not sure how best to insert this call into client and server instances. I\'ve read through much of the thriftmux implementation and I have been unable to find how it is done there.  Is thriftmux recording the service name and method name somehow that I am missing? It does look like in the DefaultServer the \'prepare\' field (ServiceFactory) could be used to record the rpc information.  Is that correct?  Or is there a better place to do that? On the client side, I haven\'t found some sort of hook to use yet.  Is there something in DefaultClient I can use?  or maybe the ClientDispatcher? Thanks for the help,"Patrick.""'",,,,,,,,,,,,,,,
finagle,91,closed,21,2012-06-27 16:16:57,7.12,,1,,"b'b"" I\'m willing to bet that recordRpcname is not called in mux and that\'s a bug.  Lemme look into it some more.""'",,,,,,,,,,,,,,,,,,
finagle,91,closed,22,2012-06-27 16:16:57,13.98,,,1,"b'b"" Thanks for the quick response. My thinking is that the mux transport has no way of knowing what the service name and method name should be.  So that is why I was looking for some sort of hook in the client and server to provide the information. Also on a side note", I\'ve been looking at thriftmux and the fact that the client and server builders aren\'t compatible with mux and I\'m starting to wonder if anyone has used the mux transport in production. Is mux just experimental at this point or is it production ready? Thanks again,"Patrick""'",,,,,,,,,,,,,,,,
finagle,91,closed,23,2012-06-27 16:16:57,242.33,,1,,"b""b' The intention is to use the new-style APIs; and are not going to be provided for new protocols. @roanta has a change coming\\xe2\\x80\\x94it should hit github very soon\\xe2\\x80\\x94which allows the same kind of customization with the new APIs.'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,closed,2014-03-27 22:05:28,348.52,2,10,13,,,,,,,,,,,,,,,,,,,
finagle,91,closed,reopened,2014-03-27 22:05:31,0.05,2,10,13,,,,,,,,,,,,,,,,,,,
finagle,91,closed,24,2012-06-27 16:16:57,56.63,,,1,"b'b"" Thanks Marius.  I understand not using the builders with the new protocols.  In the meantime I\'ve passed the tracer into the default client and server. The driver behind us moving the protobuf implementation to mux is so that we can hook up Zipkin for distributed tracing in production.  So I have two primary concerns:getting the tracing working with the service and method namesand knowing that the mux transport is production ready Do you have some thoughts on that? Thanks","Patrick""'",,,,,,,,,,,,,,,,,
finagle,91,closed,25,2012-06-27 16:16:57,107.65,,1,,"b'b"" Both of these issues are huge focusses for the finagle team at twitter", and we\'re actively responding to any issues that arise with them.  I\'m not promising it\'s all bug-free, but we\'re extra-responsive on this stuff this quarter.  You\'re on the cutting edge," but I don\'t think you\'re too experimental to be in production.""'",,,,,,,,,,,,,,,
finagle,91,closed,26,2012-06-27 16:16:57,117.1,,,1,"b'b"" Great.  Thanks for the info.  If I can help with the mux code let me know. I\'m working on integrating the protobuf mux implementation with our existing services to see how the implementation shakes out.  I\'ll let you know if I see any other issues.""'",,,,,,,,,,,,,,,,,,
finagle,91,closed,27,2012-06-27 16:16:57,866.07,,,1,"b""b' Hi @bmdhacks",  Do you have an update on the rpc service name and method name issue with the mux transport? Should I open an issue? Thanks,"Patrick'""",,,,,,,,,,,,,,,,
finagle,91,closed,28,2012-06-27 16:16:57,337.33,,,1,"b""b' Is there an update on the mux tracing issue?  Should I open an issue? Thanks","Patrick'""",,,,,,,,,,,,,,,,,
finagle,91,closed,29,2012-06-27 16:16:57,49.63,,1,,"b'b"" It\'s fixed internally"," we\'re just working on getting a release out with the code.""'",,,,,,,,,,,,,,,,,
finagle,91,closed,30,2012-06-27 16:16:57,1033.5,,1,,"b""b' what is the timeframe for the tracing fix? -Patrick'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,31,2012-06-27 16:16:57,36.48,,1,,"b'b"" We\'ll have something up within a week""'",,,,,,,,,,,,,,,,,,
finagle,91,closed,closed,2014-04-09 17:29:33,1164.03,2,14,17,,,,,,,,,,,,,,,,,,,
finagle,91,closed,reopened,2014-04-09 17:29:35,0.03,2,14,17,,,,,,,,,,,,,,,,,,,
finagle,91,closed,32,2012-06-27 16:16:57,74.65,,1,,"b'b"" @PatrickOsborne: Would you mind updating this pull request", or opening a new one with your implementation? We might as well begin the review process while we wait for that fix. Also," I don\'t think the fix actually blocks landing the patch?""'",,,,,,,,,,,,,,,,
finagle,91,closed,33,2012-06-27 16:16:57,279.7,,1,,"b""b' Ok"," the mux tracing fix is now pushed'""",,,,,,,,,,,,,,,,,
finagle,91,closed,34,2012-06-27 16:16:57,35.45,,1,,"b""b' And now it has been merged back into github.'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,35,2012-06-27 16:16:57,1081.1,1,,,"b'b"" @george-vacariuc we\'ve been thinking about how it\'s a huge pain that finagle keeps changing underneath your feet so it\'s hard to merge in finagle-protobuf.  We\'ve also been putting similar projects under the finagle [organization][0].  What do you think about the idea of making finagle-protobuf its own project under the finagle org", so that it doesn\'t have to go through the same stringent code review process?  We can also make you an owner of the project, so you\'ll be able to merge pull requests etc yourself, which makes the most sense since you\'re the expert on finagle-protobuf. We\'ll still be happy to consult on finagle-protobuf," but we won\'t have to end up in these sinkholes where nothing gets done. Thoughts?""'",,,,,,,,,,,,,,
finagle,91,closed,36,2012-06-27 16:16:57,517.9,,,1,"b'b"" Moses", that\'s a good idea. I will check with our compliance people ifthey\'re ok with me working on this and I will follow up with you in thenext week or so. On Wed, Aug 13, 2014 at 12:00 PM," Moses Nakamura notifications@wrote:""'",,,,,,,,,,,,,,
finagle,91,closed,37,2012-06-27 16:16:57,910.1,,1,,"b""b' @george-vacariuc any update from your compliance folks?'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,38,2012-06-27 16:16:57,575.67,1,,,"b""b' Hey Moses", Please accept my apologies for having not followed up; unfortunately I willnot be able to contribute to the project. George On Mon, Dec 29, 2014 at 10:48 AM," Moses Nakamura notifications@wrote:'""",,,,,,,,,,,,,,
finagle,91,closed,39,2012-06-27 16:16:57,677.43,,1,,"b'b"" For the record", after a conversation with @chrisphelps yesterday I rebased this PR against develop and split finagle-protobuf out into [its own project]url  in the Finagle org. It\'s likely that we\'ll remove the subproject from this repository," and once that happens I\'ll close this PR.""'",,,,,,,,,,,,,,,,
finagle,91,closed,40,2012-06-27 16:16:57,11.02,,,1,"b""b' Thanks"," @travisbrown '""",,,,,,,,,,,,,,,,,
finagle,91,closed,41,2012-06-27 16:16:57,1338.68,,1,,"b""b' finagle-protobuf is now [a stand-alone project]url  in the Finagle organization and [has been removed]url  as a subproject here.'""",,,,,,,,,,,,,,,,,,
finagle,91,closed,closed,2015-03-24 13:11:16,1181.68,4,20,19,,,,,,,,,,,,,,,,,,,
finagle,91,closed,-,-,-,4,20,19,,,,,,,,,,,,,,,,,,,
finagle,112,closed,opened,2012-09-18 21:12:40,,,,,,,,,,,,,,,,,,,,,,,
finagle,112,closed,title,2012-09-18 21:12:40,00:00,,1,,"b'b\' Don\\\'t say ""get sbt"". Clarify: can\\\'t build . Don\\\'t repeat version num\''",,,,,,,,,,,,,,,,,,
finagle,112,closed,1,2012-09-18 21:12:40,431.35,,1,,"b'b"" As there\'s no open source contributor"," I think you should send this review to the internal repo.""'",,,,,,,,,,,,,,,,,
finagle,112,closed,closed,2012-09-20 04:35:27,442.78,0,2,0,,,,,,,,,,,,,,,,,,,
finagle,112,closed,reopened,2012-09-24 16:59:28,744.02,0,2,0,,,,,,,,,,,,,,,,,,,
finagle,112,closed,2,2012-09-18 21:12:40,755.62,,1,,"b""b' Reopening. Missed that this was in the branch.'""",,,,,,,,,,,,,,,,,,
finagle,112,closed,closed,2012-09-24 17:00:06,0.63,0,3,0,,,,,,,,,,,,,,,,,,,
finagle,112,closed,-,-,-,0,3,0,,,,,,,,,,,,,,,,,,,
finagle,191,closed,opened,2013-08-05 20:43:35,,,,,,,,,,,,,,,,,,,,,,,
finagle,191,closed,title,2013-08-05 20:43:35,00:00,,1,,"b""b' Provide a timezone for serializing timestamps'""",,,,,,,,,,,,,,,,,,
finagle,191,closed,body,2013-08-05 20:43:35,00:00,,1,,"b""b' Adds a way to specify the timezone that dates and times are serialized in. This is a proposed fix for #190.'""",,,,,,,,,,,,,,,,,,
finagle,191,closed,1,2013-08-05 20:43:35,35.38,,1,,"b'b"" I\'m not sure this is the direction I would go with this. If you are convinced that connection level granularity for timezones is what we want", I think a better approach would be to auto-negotiate the timezone when a connection is established. Also, I don\'t want to associate the Client with one connection, even though it is the case now," this is something that will likely change. We actually have a PR internally that changes the Client (and would be incompatible with this change). Do you mind if we revisit this later?""'",,,,,,,,,,,,,,
finagle,191,closed,2,2013-08-05 20:43:35,98.47,,,1,"b'b\' The auto-negotiation is interesting... I\\\'ll look into that. I would argue that the timezone is related to the ""connection specification""", so I still think the Client is a reasonable place to specify the timezone to use for the data type.\'',,,,,,,,,,,,,,,,,
finagle,191,closed,3,2013-08-05 20:43:35,32.28,,1,,"b'b"" I\'ve temporarily resorted to using this hack to get the datetime written in UTC:  ""'",,,,,,,,,,,,,,,,,,
finagle,191,closed,4,2013-08-05 20:43:35,331.37,,1,,"b""b' We ended up solving a similar problem recently.  We solved it with [this commit]url @eric do you think that will solve your problem?'""",,,,,,,,,,,,,,,,,,
finagle,191,closed,5,2013-08-05 20:43:35,799.9,,1,,"b'b"" @eric haven\'t heard from you lately", so I\'m going to close this PR for now.  If you run into more problems," please let us know and we can reopen it.""'",,,,,,,,,,,,,,,,
finagle,191,closed,closed,2014-08-06 18:21:00,1297.42,0,6,1,,,,,,,,,,,,,,,,,,,
finagle,191,closed,6,2013-08-05 20:43:35,100.13,,1,,"b""b' Could you give me more detail as to how that solves the problem? Part of the issue is that a datetime in MySQL has no attached timezone", so without knowing the timezone the client that inserted the record intended to use, or without knowing what the timezone of the server is," how can we know what to use here?'""",,,,,,,,,,,,,,,
finagle,191,closed,reopened,2014-08-06 21:40:04,199.07,0,7,1,,,,,,,,,,,,,,,,,,,
finagle,191,closed,7,2013-08-05 20:43:35,103.22,,1,,"b'b"" Here we\'re just forcing everyone to UTC"," so it doesn\'t matter what the client\'s original timezone was.  I don\'t think I understand your question.""'",,,,,,,,,,,,,,,,,
finagle,191,closed,8,2013-08-05 20:43:35,9.78,,,1,b'b\' Well, in ActiveRecord (in ruby), for instance, you can specify what timezone you would like all of your dates to be specified in. Now, it is obviously A Good Idea to always pick UTC, but it certainly isn\\\'t a requirement. So, if someone had not picked UTC, this wouldn\\\'t be giving them the right result. So it seems to me that there would need to be a setting on either the connection or the statement that said,"This is the timezone I want you to think of the dates and times as being in"".\''
finagle	191	closed	9	mosesn	2013-08-05 20:43:35	9.23		+1		b'b"" Oh, it occurs to me that what I linked to wasn\'t the entire thing.  The first commit was [here]url I\'ll try to get the person worked on it in here to talk with you.""'
finagle	191	closed	10	jcrossley	2013-08-05 20:43:35	7.02		+1		b'b"" Hi Eric, I\'m just wrapping up a pull request related to this issue. DATETIME types are interpreted as UTC in the TimestampValue extractor. If you\'d like to have them treated as another timezone, you could write your own extractor for a RawValue. There isn\'t currently a way to specify a different timezone.""'
finagle	191	closed	11	jcrossley	2013-08-05 20:43:35	92.18		+1		b""b' I looked over your pull request, Eric. Perhaps you could add a test to verify the desired behaviour?'",,,,,,,,,,
finagle,191,closed,12,2013-08-05 20:43:35,1357.35,1,,,"b""b' Sorry"," I ended up not having time to circle back on this and have moved to just using JDBC. '""",,,,,,,,,,,,,,,,,
finagle,191,closed,13,2013-08-05 20:43:35,234.25,,,1,"b""b' Bummer"," thanks for the update.'""",,,,,,,,,,,,,,,,,
finagle,191,closed,closed,2015-07-14 18:53:27,1273.38,1,11,3,,,,,,,,,,,,,,,,,,,
finagle,191,closed,-,-,-,1,11,3,,,,,,,,,,,,,,,,,,,
finagle,207,closed,opened,2013-10-18 19:42:03,,,,,,,,,,,,,,,,,,,,,,,
finagle,207,closed,title,2013-10-18 19:42:03,00:00,,1,,"b""b' DNS-backed cluster'""",,,,,,,,,,,,,,,,,,
finagle,207,closed,body,2013-10-18 19:42:03,00:00,,1,,"b""b' Per discussion on the finaglers mailing list: url  DnsCluster continuously resolves a host name into a set of SocketAddress instances", loosely based on ZK cluster implementation .  LingeringCluster is a generic Cluster filter that propagates Rem events after a predefined delay," this helps dealing with  firewall that does its own DNS resolution. '""",,,,,,,,,,,,,,,,
finagle,207,closed,1,2013-10-18 19:42:03,339.62,,1,,"b'b"" I like the idea here"," but Clusters are deprecated.  It doesn\'t make sense to add a new one right now.  Can you get these to work with the Name api?""'",,,,,,,,,,,,,,,,,
finagle,207,closed,2,2013-10-18 19:42:03,235.4,,1,,"b""b' It should be pretty simple to adopt to the new APIs. '""",,,,,,,,,,,,,,,,,,
finagle,207,closed,3,2013-10-18 19:42:03,0.08,,,1,"b""b' (This is really cool btw.)'""",,,,,,,,,,,,,,,,,,
finagle,207,closed,4,2013-10-18 19:42:03,803.88,,1,,"b'b"" I\'ve looked at ZkResolver to see how to implement a similar DnsResolver"," but it uses a Group internally and there\'s a comment about taking that out as well (I understand Groups are deprecated too). I wonder if my best strategy is to wait until the dust settles and then take another look? Or am I barking up the wrong tree?""'",,,,,,,,,,,,,,,,,
finagle,207,closed,5,2013-10-18 19:42:03,326.58,1,,,"b'b"" The deprecation storm has settled and the [Addr] API is the outcome. I think it\'s safe to assume that it\'s stable enough to build upon. ZkResolver is still written in terms of Group because no one\'s had time to migrate StabilizingGroup to the Var[Addr] world. A DnsResolver would provide a function  . See [twitter-server\'s FlagResolver]url  class for a simple example.""'",,,,,,,,,,,,,,,,,,
finagle,207,closed,6,2013-10-18 19:42:03,1378.4,,1,,"b'b"" Thanks for your response", but I am still a bit confused where my DNS stuff would fit in this brave new world... On one hand, it could be used as a poor man\'s ZK, with multiple machines resolving the same hostname, so that\'s why I looked at the ZkResolver, but then we can also have a Name implementation," something like this: url  What would you guys prefer? ""'",,,,,,,,,,,,
finagle,207,closed,7,2013-10-18 19:42:03,318.85,,,1,"b""b' I think we just want this to be part of the inet! resolver.'""",,,,,,,,,,,,,,,,,,
finagle,207,closed,8,2013-10-18 19:42:03,1157.17,,,1,"b'b"" @agleyzer Not sure if you\'re still interested in this problem", but I just stumbled on this ticket again.  I think @mariusaeriksen is right that this shouldn\'t be special behavior," this should just be the way that the InetResolver works all the time.  Do you still have the bandwidth to make this happen?""'",,,,,,,,,,,,,,,,
finagle,207,closed,9,2013-10-18 19:42:03,1053.75,,,1,b'b\' @mosesn We keep getting bit by inet! resolved names failing to track DNS names that change over time (e.g. AWS ELBs), so I\\\'d be interested in working this into the inet! resolver if no one is tackling it yet. What\\\'s the best approach?1. Stick with ([]url  + []url  and periodically push DNS changes to the Var. This would require periodically re-resolving the hostname on a Timer," which seems like it might be overly complicated.2. Add some kind of ""bind-on-demand"" state in Addr so that DNS resolution happens on each request. Is this even possible?\\xe2\\x80\\x94looking at [ ]url  my guess is that it needs the push behavior in (1)...\''",,,,,,,,,,,,,,,,
finagle,207,closed,closed,2014-05-14 18:25:59,1363.93,1,6,4,,,,,,,,,,,,,,,,,,,
finagle,207,closed,reopened,2014-05-14 18:26:05,0.1,1,6,4,,,,,,,,,,,,,,,,,,,
finagle,207,closed,10,2013-10-18 19:42:03,76.22,1,,,"b'b"" @mosesn sorry I just noticed your question. I might have some bandwidth next week. @jdanbrown I ended up writing a subclass for Name with periodic changes: url  it\'s been in use for a while"," no complains so far.""'",,,,,,,,,,,,,,,,,
finagle,207,closed,11,2013-10-18 19:42:03,22.12,,,1,"b'b\' @agleyzer that solution looks great.  Would you mind if @jdanbrown refashioned it to be the default for ""inet!""?\''",,,,,,,,,,,,,,,,,,
finagle,207,closed,12,2013-10-18 19:42:03,7.58,,,1,b'b\' +1, this looks great. We should consider doing a few things:limit the total amount of permissible concurrency;have resolution timeouts (will thread interruption work here?). In the long term, we might consider implementing our own DNS resolver (I think that there was a Netty summer-of-code project for this -@trustin?) so that we can respect the upstream TTLs, etc. But," I know that anything involving ""your own DNS resolver"" is tantamount to famous last words.\''",,,,,,,,,,,,,,
finagle,207,closed,13,2013-10-18 19:42:03,13.05,,,1,"b""b' @mosesn @jdanbrown you are welcome to use that code"," I am glad to be of any help'""",,,,,,,,,,,,,,,,,
finagle,207,closed,14,2013-10-18 19:42:03,75.33,,,1,"b""b' Awesome.  @jdanbrown let me know if you need any help.'""",,,,,,,,,,,,,,,,,,
finagle,207,closed,15,2013-10-18 19:42:03,310.63,,1,,"b'b"" Yeah"," Netty has an asynchronous DNS resolution facility which came from last year\'s GSoC.  It has not been merged yet because it needs some clean-up.  Will let you know once it\'s ready to go.""'",,,,,,,,,,,,,,,,,
finagle,207,closed,16,2013-10-18 19:42:03,1092.37,,1,,"b""b' @agleyzer @jdanbrown looks like this fell through the cracks"," do either of you have the bandwidth to take this on?'""",,,,,,,,,,,,,,,,,
finagle,207,closed,17,2013-10-18 19:42:03,823.52,,1,,"b'b"" @mosesn ", we are using the DNS Resolver written by @agleyzer in our product," and it works well. Can I know what is the progress to support automatically DNS resolving in finagle? I can help on issue if @agleyzer doesn\'t have time.""'",,,,,,,,,,,,,,,,
finagle,207,closed,18,2013-10-18 19:42:03,293.6,,,1,"b'b"" Sure", if you want to take it on, we\'d be glad to take your PR.  None of us at twitter has the bandwidth to do it," so it will have to be community driven.""'",,,,,,,,,,,,,,,
finagle,207,closed,19,2013-10-18 19:42:03,17.85,,1,,"b""b' I might have some free time later in July but have no problem if someonegets there sooner. On Wed", Jun 11, 2014 at 10:30 AM," Moses Nakamura notifications@wrote:'""",,,,,,,,,,,,,,,
finagle,207,closed,20,2013-10-18 19:42:03,211.7,1,,,"b'b"" @mosesn @agleyzer @jixu Yeah", sorry, I dropped the ball on this. I still intend to do it eventually, but @jixu feel free to jump on it sooner if you want. Either way," I\'ll follow up here before I spend much time on it to make sure I\'m not racing with someone else.""'",,,,,,,,,,,,,,
finagle,207,closed,21,2013-10-18 19:42:03,1178.53,,1,,"b""b' @mosesn I have created a pull request for this issue:url Please help to review when you have time.'""",,,,,,,,,,,,,,,,,,
finagle,207,closed,22,2013-10-18 19:42:03,261.7,,,1,"b'b"" #282 implemented this"," so I\'m going to close this PR.  Thanks to @jixu and @agleyzer for this super cool feature!""'",,,,,,,,,,,,,,,,,
finagle,207,closed,closed,2014-08-06 18:19:59,1433.9,3,11,10,,,,,,,,,,,,,,,,,,,
finagle,207,closed,-,-,-,3,11,10,,,,,,,,,,,,,,,,,,,
finagle,212,closed,opened,2013-10-28 23:46:50,,,,,,,,,,,,,,,,,,,,,,,
finagle,212,closed,title,2013-10-28 23:46:50,00:00,,1,,"b""b' Fixed documentation import'""",,,,,,,,,,,,,,,,,,
finagle,212,closed,body,2013-10-28 23:46:50,00:00,,1,,"b'b"" This doesn\'t compile as-is because of the extra Future in the import.  Also", I removed the Await," which appears to be unused in this example.""'",,,,,,,,,,,,,,,,
finagle,212,closed,1,2013-10-28 23:46:50,1054.9,,,1,"b""b' This has since been fixed.  Thanks!'""",,,,,,,,,,,,,,,,,,
finagle,212,closed,closed,2013-12-20 17:21:44,1054.9,0,2,1,,,,,,,,,,,,,,,,,,,
finagle,212,closed,2,2013-10-28 23:46:50,1.18,1,,,"b'b"" Oops", I got confused," didn\'t realize this was in a comment.  I\'ll get this pulled internally.""'",,,,,,,,,,,,,,,,
finagle,212,closed,reopened,2013-12-20 17:22:56,1.2,1,2,1,,,,,,,,,,,,,,,,,,,
finagle,212,closed,3,2013-10-28 23:46:50,1268.6,,1,,"b'b"" This has been merged internally"," you\'ll see it up here in a little while.""'",,,,,,,,,,,,,,,,,
finagle,212,closed,closed,2014-01-03 14:31:44,1268.8,1,3,1,,,,,,,,,,,,,,,,,,,
finagle,212,closed,4,2013-10-28 23:46:50,83.82,,,1,"b""b' Awesome"," thanks'""",,,,,,,,,,,,,,,,,
finagle,212,closed,-,-,-,1,3,2,,,,,,,,,,,,,,,,,,,
finagle,217,closed,opened,2013-11-08 21:47:40,,,,,,,,,,,,,,,,,,,,,,,
finagle,217,closed,title,2013-11-08 21:47:40,00:00,,1,,"b""b' Update Netty from 3.7.0 to 3.8.0'""",,,,,,,,,,,,,,,,,,
finagle,217,closed,body,2013-11-08 21:47:40,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,
finagle,217,closed,1,2013-11-08 21:47:40,11.87,,1,,"b""b' We are already testing the Netty 3.8 internally"," it will be available here soon.'""",,,,,,,,,,,,,,,,,
finagle,217,closed,closed,2013-11-08 22:01:25,13.75,0,3,0,,,,,,,,,,,,,,,,,,,
finagle,217,closed,reopened,2013-11-08 22:01:37,0.2,0,3,0,,,,,,,,,,,,,,,,,,,
finagle,217,closed,2,2013-11-08 21:47:40,30.2,,,1,"b'b"" Thanks. I intend to do the update and send pull request", but since you are already doing that," it\'s better you finish it.""'",,,,,,,,,,,,,,,,
finagle,217,closed,3,2013-11-08 21:47:40,10.02,,,1,"b'b"" There\'s some trickiness with the backport of http headers from netty 4 that collides with our headers map in finagle.  If you want to take a look at it"," we\'d appreciate it.""'",,,,,,,,,,,,,,,,,
finagle,217,closed,4,2013-11-08 21:47:40,8.13,,1,,"b'b"" Yes. I\'m developing Xitrum url  which is based on Netty too. I\'m seeing warnings like below when updating Xitrum: url ""'",,,,,,,,,,,,,,,,,,
finagle,217,closed,5,2013-11-08 21:47:40,59.32,,1,,"b'b"" Please see this pull request (there\'s also commit about README):url ""'",,,,,,,,,,,,,,,,,,
finagle,217,closed,6,2013-11-08 21:47:40,24.5,,1,,"b""b' Does Twitter plan to update Netty from 3.x to 4.x soon? About when?'""",,,,,,,,,,,,,,,,,,
finagle,217,closed,7,2013-11-08 21:47:40,338.45,,1,,"b'b"" I thought it\'s just matter of replacing most header access calls with headers().*(). Let me know if you need any help on this. Sent from a mobile device.url url url  -Original Message-From: Brian Degenhardt notifications@To:  finagle@Sent: \\xed\\x86\\xa0", 09 11\\xec\\x9b\\x94 2013 7:40 \\xec\\x98\\xa4\\xec\\xa0\\x84Subject: Re: [finagle] Update Netty from 3.7.0 to 3.8.0 (#217) There\'s some trickiness with the backport of http headers from netty 4 that collides with our headers map in finagle.  If you want to take a look at it," we\'d appreciate it. Reply to this email directly or view it on GitHub:url ""'",,,,,,,,,,,,,,,,
finagle,217,closed,8,2013-11-08 21:47:40,74.48,,1,,"b""b' Actually someone is already working on that right now"," it should be available very soon.'""",,,,,,,,,,,,,,,,,
finagle,217,closed,9,2013-11-08 21:47:40,614.6,,1,,"b""b' Netty is now on 3.8.0.Final.'""",,,,,,,,,,,,,,,,,,
finagle,217,closed,closed,2013-12-20 17:19:14,1157.62,0,9,2,,,,,,,,,,,,,,,,,,,
finagle,217,closed,-,-,-,0,9,2,,,,,,,,,,,,,,,,,,,
finagle,227,closed,opened,2013-12-02 10:01:40,,,,,,,,,,,,,,,,,,,,,,,
finagle,227,closed,title,2013-12-02 10:01:40,00:00,,1,,"b'b"" DefaultServer\'s closeServer function seems to close the connections to early""'",,,,,,,,,,,,,,,,,,
finagle,227,closed,body,2013-12-02 10:01:40,00:00,,,1,b'b\' Hi, I experience problem when i try to close a server while a request is still running. It results in a ChannelClosedException. Here is my Testcase: I\\\'ve found out so far," that it has something to do with how the connections are closed. In the DefaultServer\\\'s closeServer function a close on ""connections"" is emitted which calls the close function of SerialServerDispatcher. The SerialServerDispatcher calls the close function of ClientChannelTransport (including the deadline parameter)", but in this function the deadline isn\\\'t used anymore and it seems to closed asap. Is this a bug or am I doing something wrong? Thanks for your help!\'',,,,,,,,,,,,,,,
finagle,227,closed,1,2013-12-02 10:01:40,935.63,,,1,"b'b"" Technically [the deadline given to is advisory]url  so it\'s not guaranteed that it\'s adhered to all the way down the stack. That being said", it would be nice if we could wait until either is empty or the duration is expired within  . It\'s not clear how you\'d cleanly do this though," given the lack of asynchronous Netty Channel APIs.""'",,,,,,,,,,,,,,,,
finagle,227,closed,closed,2013-12-05 06:53:31,1251.85,0,1,2,,,,,,,,,,,,,,,,,,,
finagle,227,closed,reopened,2013-12-05 06:53:40,0.15,0,1,2,,,,,,,,,,,,,,,,,,,
finagle,227,closed,2,2013-12-02 10:01:40,320.92,1,,,"b'b"" Sorry", accidental close. Yeah, we have ReferenceCountingFilter for the client side, but it\'s not correct for the server side, because the Service on the client side encapsulates the entire request end to end, but on the server side, the Service is just shelled out to by the Server.  We can try adding something to the Pipeline to detect when all of the bytes for all of the requests have left the Channel.  That might work.  We could increment a counter for when a request comes in and decrement when the response goes out," or when the connection gets closed / dropped.""'",,,,,,,,,,,
finagle,227,closed,3,2013-12-02 10:01:40,119.08,,,1,"b""b' Thanks for the replies! How do you handle this at twitter? Is there any best practice to shutdown a finagle server (considering the  problem)?'""",,,,,,,,,,,,,,,,,,
finagle,227,closed,4,2013-12-02 10:01:40,509.52,,1,,"b""b' This issue should have been taken care of by [this commit]url  Here a bit of backstory from the internal code review:'""",,,,,,,,,,,,,,,,,,
finagle,227,closed,closed,2014-02-28 17:26:49,633.15,1,2,3,,,,,,,,,,,,,,,,,,,
finagle,227,closed,-,-,-,1,2,3,,,,,,,,,,,,,,,,,,,
finagle,229,closed,opened,2013-12-07 14:20:46,,,,,,,,,,,,,,,,,,,,,,,
finagle,229,closed,title,2013-12-07 14:20:46,00:00,,1,,"b""b' Futures documentation seems to be deprecated'""",,,,,,,,,,,,,,,,,,
finagle,229,closed,body,2013-12-07 14:20:46,00:00,,,1,"b""b' Hi! All the examples for Futures here: url  seem to be outdated specially when concerned about timeouts.'""",,,,,,,,,,,,,,,,,,
finagle,229,closed,1,2013-12-07 14:20:46,216.68,,,1,"b'b"" Up to date docs can be found at the finagle [user guide]url We\'ll add a note to the finagle README that it\'s out of date"," but we\'re not going to remove it yet because the user guide doesn\'t quite have parity.  We\'d love to get some pull requests for better docs though!""'",,,,,,,,,,,,,,,,,
finagle,229,closed,closed,2013-12-07 17:57:27,216.68,0,1,2,,,,,,,,,,,,,,,,,,,
finagle,229,closed,2,2013-12-07 14:20:46,0.5,1,,,"b""b' oops"," closed accidentally.  reopening until the note actually shows up on the README.'""",,,,,,,,,,,,,,,,,
finagle,229,closed,reopened,2013-12-07 17:57:57,0.5,1,1,2,,,,,,,,,,,,,,,,,,,
finagle,229,closed,3,2013-12-07 14:20:46,1410.72,,,1,"b'b"" It would be great if the user guide would have a chapter about timing out futures. I haven\'t found any other documentation that would mention them. It seems that the twitter future API has just gone through larger rewrite and the changes are not really documented anywhere.""'",,,,,,,,,,,,,,,,,,
finagle,229,closed,4,2013-12-07 14:20:46,1.1,1,,,"b""b' @hgavert The Future API has remained remarkably stable actually;  has", to my recollection," always been \\xe2\\x80\\x9cthe way\\xe2\\x80\\x9d to apply a timeout to a Future.'""",,,,,,,,,,,,,,,,
finagle,229,closed,closed,2014-02-28 15:28:45,1290.8,2,1,3,,,,,,,,,,,,,,,,,,,
finagle,229,closed,-,-,-,2,1,3,,,,,,,,,,,,,,,,,,,
finagle,245,closed,opened,2014-02-24 07:03:15,,,,,,,,,,,,,,,,,,,,,,,
finagle,245,closed,title,2014-02-24 07:03:15,00:00,,1,,"b""b' finagle-redis: Allow an empty string as a hash field value'""",,,,,,,,,,,,,,,,,,
finagle,245,closed,body,2014-02-24 07:03:15,00:00,,1,,b'b\' Motivations:To fix the bug #244 according to RESP at url  Modifications:1. Encoding In ," we allow """" to be encoded as a normal argument by removing the if guard on ( == 0)2. Decoding In "," decode \\\'$0\\\\r\\\\n\\\\r\\\\n\\\' to a BulkReply of """" instead of a EmptyBulkReply. Also removed the requirement of a BulkRelay not allowed to have """" as payload (Though I am not quite sure about the side-effect ).3. And the tests in both  and  Results:  The tests in  and  passed. And now we can have the empty string as the hash field value.\''",,,,,,,,,,,,,,,,
finagle,245,closed,1,2014-02-24 07:03:15,753.63,,,1,"b'b"" lgtm"," after you address Moses\' comments!""'",,,,,,,,,,,,,,,,,
finagle,245,closed,2,2014-02-24 07:03:15,540.87,,1,,"b""b' Also", please note that **many other commands** have the same issue, among which are Set, GetSet, PSetEx, SetEx, SetNx," etc. Please let me know if I can do anything.'""",,,,,,,,,,,
finagle,245,closed,3,2014-02-24 07:03:15,60.1,,,1,b'b\' Would love to see fixes for those too! Good catch.On Feb 24, 2014 11:37 PM,"zhanggl"" notifications@ wrote:\''
finagle	245	closed	closed	 - 	2014-02-25 09:14:10	130.92	0	3	2
finagle	245	closed	reopened	 - 	2014-02-25 09:14:24	0.23	0	3	2
finagle	245	closed	4	zhanggl	2014-02-24 07:03:15	227.0			+1	b'b\' Since I do not know much about the big picture, shall we just update as the following snippet. Or should remove the mixin of from all related commands? trait StrictValueCommand extends ValueCommand {  RequireClientProtocol(value != null ~~&&~~ ~~value~~.~~readableBytes~~ ~~  ""Found unexpected empty value"")}\''
finagle	245	closed	5	mosesn	2014-02-24 07:03:15	220.25			+1	b""b' @zhanggl removing StrictValueCommand sounds good to me.  Actually, removing everything in url  is probably fine.  However, it massively explodes the scope of this PR.  Maybe we should leave this one for now and do the other ones in other PRs?'",,,,,,,,,,,,,,,,
finagle,245,closed,6,2014-02-24 07:03:15,29.37,,1,,"b""b' @mosesn Totally agree with you. One thing at a time.'""",,,,,,,,,,,,,,,,,,
finagle,245,closed,7,2014-02-24 07:03:15,147.8,,,1,"b'b"" Alright"," I\'m happy with this.  I\'m going to put it through internal review and see what happens.  Thanks for your submission!  I\'ll let you know the results of internal review soon.""'",,,,,,,,,,,,,,,,,
finagle,245,closed,8,2014-02-24 07:03:15,535.92,,,1,"b""b' This was merged internally"," and should show up on github shortly.  Thanks!  Let me know if you want help with the other CommandTypes.'""",,,,,,,,,,,,,,,,,
finagle,245,closed,closed,2014-02-26 00:58:11,943.78,0,4,6,,,,,,,,,,,,,,,,,,,
finagle,245,closed,9,2014-02-24 07:03:15,14.82,,,1,"b'b"" Great! Thanks! I learned a lot. I\'d love to do more. Really enjoy it.""'",,,,,,,,,,,,,,,,,,
finagle,245,closed,10,2014-02-24 07:03:15,1002.98,,1,,"b'b"" @mosesn  I\'ve just faced and fixed the same issue with  .  See ad2d2912e9a2e2c6116238dfe0da8ec489002381 Maybe should wait for my last PR to show up here before I submit this one(I\'m still on the same branch).""'",,,,,,,,,,,,,,,,,,
finagle,245,closed,11,2014-02-24 07:03:15,1022.42,1,,,"b""b' Also"," this _reset_ thing [here]url  on a being caught costs me a lot to finally figure out the strange behavior(_A command gets a unexpected response_).  Would it make sense to let the popup to the upper layer instead of returning undesirable replies?'""",,,,,,,,,,,,,,,,,
finagle,245,closed,12,2014-02-24 07:03:15,125.0,,1,,"b'b"" @zhanggl no need to wait", the two changes aren\'t dependent.  feel free to put up a new PR whenever you like. It looks like the it rethrows the throwable.  I\'m not certain I understand the issue that you\'re running into," could you elaborate?""'",,,,,,,,,,,,,,,,
finagle,245,closed,13,2014-02-24 07:03:15,214.25,1,,,"b""b'   I think we should give some meaningful messages to users like which helps when debugging a problem. And", upon an exception when decoding raw data from Netty," would it be better to abort the decoding operation and discard un-handled data rather than wasting computation resources to construct an useless reply which would most likely to be discarded later on by users?'""",,,,,,,,,,,,,,,,
finagle,245,closed,14,2014-02-24 07:03:15,242.48,,1,,"b'b"" Improving the error messages sounds like a good idea to me. I think that we do abort the computationisn\'t that what happens when we throw in the section you linked me to before?  It doesn\'t look to me like we continue processing.  Could you explain in what circumstances we can continue processing?""'",,,,,,,,,,,,,,,,,,
finagle,245,closed,15,2014-02-24 07:03:15,259.07,,1,,"b'b"" Given a MBULK input  we end up with a result", which should not have happened if the **whole operation** was aborted when processing the empty line before reaching  . It looks like after the reset," we started over again and treated the left data as  . I haven\'t check the implementation details yet.""'",,,,,,,,,,,,,,,,
finagle,245,closed,16,2014-02-24 07:03:15,278.72,,1,,"b""b' Alright"," seems like that might be another bug.  Let me know what you find.'""",,,,,,,,,,,,,,,,,
finagle,245,closed,-,-,-,2,9,7,,,,,,,,,,,,,,,,,,,
finagle,248,closed,opened,2014-03-05 13:42:12,,,,,,,,,,,,,,,,,,,,,,,
finagle,248,closed,title,2014-03-05 13:42:12,00:00,,1,,"b""b' finagle-redis: Add SINTER command to redis client'""",,,,,,,,,,,,,,,,,,
finagle,248,closed,body,2014-03-05 13:42:12,00:00,,1,,"b""b' Hi", I noticed that the SINTER command was missing from the finagle-redis client when I tried to use it," so I added it in. Tested with Scala 2.10.0 and Redis server version 2.6.12.'""",,,,,,,,,,,,,,,,
finagle,248,closed,1,2014-03-05 13:42:12,102.98,,,1,"b""b' Could you add some NaggatiSpec tests?  Other than that", and a few other small changes," looks good!'""",,,,,,,,,,,,,,,,
finagle,248,closed,2,2014-03-05 13:42:12,170.6,,,1,"b""b' lgtm!'""",,,,,,,,,,,,,,,,,,
finagle,248,closed,3,2014-03-05 13:42:12,256.42,,1,,"b""b' merged internally"," should sync up here next release.'""",,,,,,,,,,,,,,,,,
finagle,248,closed,closed,2014-03-16 21:37:07,474.92,0,3,2,,,,,,,,,,,,,,,,,,,
finagle,248,closed,reopened,2014-03-16 21:37:41,0.57,0,3,2,,,,,,,,,,,,,,,,,,,
finagle,248,closed,closed,2014-03-17 23:21:00,103.32,0,3,2,,,,,,,,,,,,,,,,,,,
finagle,248,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,
finagle,388,closed,opened,2015-06-25 15:56:17,,,,,,,,,,,,,,,,,,,,,,,
finagle,388,closed,title,2015-06-25 15:56:17,00:00,,1,,"b""b' finagle_httpx version in  will not work'""",,,,,,,,,,,,,,,,,,
finagle,388,closed,body,2015-06-25 15:56:17,00:00,,,1,"b'b"" It\'s 6.26.0 in the newest commit", however, it will not work: Then I changed it to 6.24.0," everything is fine.""'",,,,,,,,,,,,,,,
finagle,388,closed,1,2015-06-25 15:56:17,24.5,1,,,"b'b"" @VELVETDETH we\'re in the middle of publishing the 6.26 artifacts but there is a lag between the docsite being updated and the binaries being released so sorry for the confusion. In the mean time you can still use 6.25.0 of the finagle-\\\\* packages and all of the quickstart docs should still run.""'",,,,,,,,,,,,,,,,,,
finagle,388,closed,2,2015-06-25 15:56:17,2.48,,,1,"b""b' @dschobel Thanks for your comment", now I understand. Still," Finagle rocks'""",,,,,,,,,,,,,,,,
finagle,388,closed,closed,2015-06-25 16:23:16,26.98,1,1,2,,,,,,,,,,,,,,,,,,,
finagle,388,closed,3,2015-06-25 15:56:17,0.63,1,,,"b""b' Sorry but should I close this issue @dschobel ?'""",,,,,,,,,,,,,,,,,,
finagle,388,closed,4,2015-06-25 15:56:17,4.58,,1,,"b'b"" @VELVETDETH let\'s keep it open until the binaries are released since it\'s a legitimate issue. I\'ll take a look at the release process to see if we can hold docsite publication until after the binaries are available going forward.""'",,,,,,,,,,,,,,,,,,
finagle,388,closed,reopened,2015-06-25 16:28:29,5.22,2,2,2,,,,,,,,,,,,,,,,,,,
finagle,388,closed,5,2015-06-25 15:56:17,768.6,,1,,"b""b' 6.26.0 has been published and the example works again.'""",,,,,,,,,,,,,,,,,,
finagle,388,closed,closed,2015-07-01 05:17:05,768.6,2,3,2,,,,,,,,,,,,,,,,,,,
finagle,388,closed,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,,
finagle,396,closed,opened,2015-07-18 22:25:15,,,,,,,,,,,,,,,,,,,,,,,
finagle,396,closed,title,2015-07-18 22:25:15,00:00,,1,,"b""b' Introduce ServiceFactorySocketAddress so that Names may bind local services.'""",,,,,,,,,,,,,,,,,,
finagle,396,closed,body,2015-07-18 22:25:15,00:00,,,1,"b""b' Problem: When building a client using a Namei.e. via Dtabsthere is no mechanism tocause a client to bind to a local Service reference.  Consider the following example: A programzoothat exposes exposes an http endpoint /; and satisfying these requests requires a downstream client to a service/. We may typically run zoo with a base dtab like: /s =/ may be served by a downstream service", but it may also beserved from directly within the process (e.g. by an in-memory buffer).This situation may arise when migrating functionality betweenprocesses (e.g. decomposing a service) or mocking downstreamclients. In these cases, we want these requests routed in-process witha dentry like: / =The workaround today is to have zoo bind to an ephemeral port andcontrol redirects to that ephemeral port: /localPort =  / =However," this approach incurs a full roundtrip through the networking stack. '""",,,,,,,,,,,,,,,
finagle,396,closed,1,2015-07-18 22:25:15,0.18,,1,,"b""b' per discussion with @mariusae '""",,,,,,,,,,,,,,,,,,
finagle,396,closed,2,2015-07-18 22:25:15,118.12,,1,,"b'b"" Are you planning on adding a new Resolver in a future PR? I\'m a little worried about adding all of these different kinds of SocketAddress (like the Weighted one we added before) because I think we have some code which looks explicitly for InetSocketAddress.  Since the SocketAddress interface is so thin", does it make sense to start providing typeclasses for the extra behavior that we want from some SocketAddresses?  (I actually don\'t know what we\'re looking for). From a quick search around: None of these is relevant for the ServiceFactorySocketAddress," but a few could be relevant for the WeightedSocketAddress.""'",,,,,,,,,,,,,,,,
finagle,396,closed,3,2015-07-18 22:25:15,916.03,,1,,"b""b' I think the right thing to do here is", in effect, not use InetSocketAddr subclasses directly, but rather create our own wrapper type," ideally a sealed ADT.'""",,,,,,,,,,,,,,
finagle,396,closed,4,2015-07-18 22:25:15,100.88,,1,,"b'b"" also", i should point out that this obviously can\'t be type-safe end-to-end; and this is Okay. Today, we have no assurances with regard to the protocol of a named service and so we can\'t differentiate i.e. http and thrift interfaces at the name-level.  So this at least isn\'t a regression feature-wise," though we can encounter runtime cast exceptions. @mosesn I added a ServiceNamer trait that makes it easy to build Service-backed namers. I don\'t think it\'s necessary to wire this through the Resolver interface unless there\'s a compelling reason.""'",,,,,,,,,,,,,,,
finagle,396,closed,5,2015-07-18 22:25:15,16.72,,,1,"b'b"" @olix0r The problem statement doesn\'t explain  this would be useful. Can you please add more details about the motivation for this?""'",,,,,,,,,,,,,,,,,,
finagle,396,closed,6,2015-07-18 22:25:15,29.35,,,1,"b'b"" @roanta consider the following: Let\'s say I have a program_zoo_that exposes exposes an httpendpoint  ; and satisfying these requests requires adownstream client to a service-. We may typically run _zoo_ with a base dtab like:   may be served by a downstream service", but it may also beserved from directly within the process (e.g. by an in-memory buffer).This situation may arise when migrating functionality betweenprocesses (e.g. decomposing a service) or mocking downstreamclients. In these cases, we want these requests routed in-process witha dentry like: The workaround today is to have _zoo_ bind to an ephemeral port andcontrol redirects to that ephemeral port: However," this approach incurs a full serialization roundtrip.  Theproposed change allows us to bypass the entire networking stack forlocal requests.""'",,,,,,,,,,,,,,,
finagle,396,closed,7,2015-07-18 22:25:15,179.2,,,1,"b'b"" @mariusae yeah", I think you\'re right.  I\'ll file a ticket internally. :shipit: this looks fine to me," although I still don\'t love the implicit cast.""'",,,,,,,,,,,,,,,,
finagle,396,closed,8,2015-07-18 22:25:15,17.72,,1,,"b'b"" @mosesn made it invariant.  It _could_ vary to let subclasses maintain Service-type flexibility but I think this isn\'t a concern practically.""'",,,,,,,,,,,,,,,,,,
finagle,396,closed,9,2015-07-18 22:25:15,39.73,1,,,"b'b"" @olix0r I don\'t think there\'s harm in having a verbose problem statement. If there\'s no objection"," maybe we can update the problem statement with the information in your last comment.""'",,,,,,,,,,,,,,,,,
finagle,396,closed,10,2015-07-18 22:25:15,341.0,,,1,"b""b' @olix0r cool"," this seems like a nice patch.'""",,,,,,,,,,,,,,,,,
finagle,396,closed,11,2015-07-18 22:25:15,1427.42,,,1,"b""b' This has been merged internally (by @luciferous). Thanks @olix0r!'""",,,,,,,,,,,,,,,,,,
finagle,396,closed,closed,2015-07-22 03:31:36,306.35,1,6,6,,,,,,,,,,,,,,,,,,,
finagle,396,closed,reopened,2015-07-22 06:47:47,196.18,1,6,6,,,,,,,,,,,,,,,,,,,
finagle,396,closed,closed,2015-07-27 21:45:32,897.75,1,6,6,,,,,,,,,,,,,,,,,,,
finagle,396,closed,-,-,-,1,6,6,,,,,,,,,,,,,,,,,,,
finagle,401,closed,opened,2015-07-23 23:50:52,,,,,,,,,,,,,,,,,,,,,,,
finagle,401,closed,title,2015-07-23 23:50:52,00:00,,1,,"b""b' Server-side wire tracing.'""",,,,,,,,,,,,,,,,,,
finagle,401,closed,body,2015-07-23 23:50:52,00:00,,1,,"b""b' Problem: Clients annotate WireSend and WireRecv at the bottom of the finaglestack.  There is no analog on the server-side (i.e. a top-of-the-stackindicator). Furthermore"," it looks like  was using the instead of . This maycause client tracing issues? Solution: Introduce  at the top of the defaultserver stack.  This module installs a filter that annotates WireRecvon receipt and WireSend on success. '""",,,,,,,,,,,,,,,,,
finagle,401,closed,closed,2015-07-23 23:52:53,2.02,0,2,0,,,,,,,,,,,,,,,,,,,
finagle,401,closed,reopened,2015-07-24 00:04:45,11.87,0,2,0,,,,,,,,,,,,,,,,,,,
finagle,401,closed,1,2015-07-23 23:50:52,17.58,1,,,"b""b' Please excuse my flip-flopping on this (got confused by multiple branches ;/ ).  I think this change is desirable.  Note that I chose not to use since this is such a thin tracing layer.'""",,,,,,,,,,,,,,,,,,
finagle,401,closed,2,2015-07-23 23:50:52,955.32,,1,,"b""b' @olix0r"," do you think we should mention this in  ?'""",,,,,,,,,,,,,,,,,
finagle,401,closed,3,2015-07-23 23:50:52,175.35,,1,,"b""b' nudge. :wave: '""",,,,,,,,,,,,,,,,,,
finagle,401,closed,4,2015-07-23 23:50:52,1159.55,,1,,"b""b' LGTM.'""",,,,,,,,,,,,,,,,,,
finagle,401,closed,5,2015-07-23 23:50:52,366.15,,1,,"b'b"" @olix0r do you still want this? if so"," @tw-ngreen can you give it a review? I think you\'ve probably got the most relevant experience from our side.""'",,,,,,,,,,,,,,,,,
finagle,401,closed,6,2015-07-23 23:50:52,1342.38,1,,,"b'b"" Sorry.  Yes"," I still think this change is useful (we\'ve just worked around it internally for the time being so i lost focus).  Let me rebase and address kevin\'s issue.""'",,,,,,,,,,,,,,,,,
finagle,401,closed,7,2015-07-23 23:50:52,275.28,,,1,"b""b' LGTM. Thanks!'""",,,,,,,,,,,,,,,,,,
finagle,401,closed,8,2015-07-23 23:50:52,1136.58,,,1,"b""b' posted internally"," thanks for your patience @olix0r '""",,,,,,,,,,,,,,,,,
finagle,401,closed,9,2015-07-23 23:50:52,231.88,1,,,"b'b"" @olix0r hey", sorry I didn\'t ask this before," but what\'s the backstory behind using a custom filter instead of AnnotatingTracingFilter?""'",,,,,,,,,,,,,,,,
finagle,401,closed,10,2015-07-23 23:50:52,11.58,,1,,"b'b"" @mosesn hey-it\'s been a few months so i don\'t have 100% of my then-context in my now-brain"," but I _believe_ that this is because we don\'t have an annotation that makes sense in the failure case...""'",,,,,,,,,,,,,,,,,
finagle,401,closed,11,2015-07-23 23:50:52,67.9,,1,,"b""b' Hmm", many of our protocols are still sending responses over the wire when we see a failure though," right?  Like we still say ServerSend on the server side.'""",,,,,,,,,,,,,,,,
finagle,401,closed,12,2015-07-23 23:50:52,1317.85,,1,,"b""b' To put this another way: what annotation should be emitted when the service fails?'""",,,,,,,,,,,,,,,,,,
finagle,401,closed,13,2015-07-23 23:50:52,65.25,,1,,"b'b"" Yeah", I\'m not sure.  But if it sends back an http 5xx, or a mux TErr," it seems reasonable to still emit a wiresend.""'",,,,,,,,,,,,,,,
finagle,401,closed,14,2015-07-23 23:50:52,4.18,1,,,"b'b"" I believe it\'s the case that if the server is actually going to respond with a messagefor instance", a 5xxthen this service call actually succeeds with the result rather than an exception.  The exceptional case typically results in some connection loss or some such (perhaps mux handles this?  but this should be at the very top of the server stack so that there are no \'rescue\' handlers installed above it. In any case," I was trying to avoid introducing new annotation types.""'",,,,,,,,,,,,,,,,
finagle,401,closed,15,2015-07-23 23:50:52,67.07,,1,,"b'b"" Hmm", my impression was that this filter is on the server\'s service, ie the application-level behavior.  So the dispatcher will invoke the service (with this filter in it) and then will make a decision based on invoking this service.  Maybe this isn\'t really the right layer if we want to claim that we only write this trace after writing to the wire. Dispatching looks something like: so we would actually want to trace that we\'ve written to the wire after the dispatcher writes successfully, but with this filter it would do it before we write it.  So maybe instead of adding this filter," we should have something that modifies dispatchers instead.""'",,,,,,,,,,,,,,
finagle,401,closed,16,2015-07-23 23:50:52,1203.32,,1,,"b""b' @mosesn yeah"," I think I agree with you.  I can look into this approach.'""",,,,,,,,,,,,,,,,,
finagle,401,closed,17,2015-07-23 23:50:52,1307.75,,1,,"b'b"" Looks like url  is probably the way forward here"," so I\'m closing this PR for now.""'",,,,,,,,,,,,,,,,,
finagle,401,closed,closed,2016-05-28 17:35:51,1051.1,4,13,2,,,,,,,,,,,,,,,,,,,
finagle,401,closed,-,-,-,4,13,2,,,,,,,,,,,,,,,,,,,
finagle,475,closed,opened,2016-03-07 10:34:32,,,,,,,,,,,,,,,,,,,,,,,
finagle,475,closed,title,2016-03-07 10:34:32,00:00,,1,,"b""b' Finagle streaming client not closing sockets'""",,,,,,,,,,,,,,,,,,
finagle,475,closed,body,2016-03-07 10:34:32,00:00,,1,,"b""b' The finagle client does not seem to close connections that are closed by the other side when streaming is enabled. If you run the application from the repository linked to below", you should notice the open number of sockets in the CLOSE_WAIT status held by the process to increase rapidly (Tomcat is configured to close connections after 5 seconds). This ultimately caused our application to hit its open file limit. When setting the max connection size of the connection pool to 1," finagle keeps using the same connection while timing out with each request that it makes.  When streaming is disabled none of the issues occur. url '""",,,,,,,,,,,,,,,,
finagle,475,closed,1,2016-03-07 10:34:32,1320.5,,1,,"b'b"" Hi @mritman", the HTTP client should be managing connections correctly whether closed locally or remotely even when interrupted during a read or write. We test these properties quite exhaustively in url  (see the tests around line 80). I\'ll have to experiment with your example," but I didn\'t see anything out of the ordinary while testing in REPL: url  tcpdump output seems reasonable too: url ""'",,,,,,,,,,,,,,,,
finagle,475,closed,2,2016-03-07 10:34:32,231.63,,,1,"b'b"" Hi @luciferous"," I should note that the problem does not occur when the server sends back a 200 response. I\'m interested to hear what you find when testing with my example.""'",,,,,,,,,,,,,,,,,
finagle,475,closed,closed,2016-03-08 12:26:40,112.13,0,3,1,,,,,,,,,,,,,,,,,,,
finagle,475,closed,reopened,2016-03-08 12:26:50,0.17,0,3,1,,,,,,,,,,,,,,,,,,,
finagle,475,closed,3,2016-03-07 10:34:32,532.43,1,,,"b'b\' When running the example application as provided I see ""CLOSE_WAIT"" states as well with  . [Full output here]url **Edit:** Also"," when just returning a success message I see far less open connections and they don\\\'t enter the ""CLOSE_WAIT"" state. [Output]url  **Edit2:** When explicitly closing the reader and the message all connections are in a state", no requests get handled anymore. [Output]url Code:  \'',,,,,,,,,,,,,,,,
finagle,475,closed,4,2016-03-07 10:34:32,1367.08,,1,,"b'b"" As I understand it the situation is as follows:1. The client sends a request.2. The server responds properly.3. The client receives the response.4. The server closes the connection.5. The client never closes its side of the connection", leaving it in CLOSE_WAIT. Running @mritman\'s test program locally, I was able to confirm that the server sockets end up in FIN_WAIT_2 and the client sockets end up in CLOSE_WAIT.  I have attempted to reproduce this in a finagle test: url  If the disconnect were received during the lifetime of a request," the transport would be torn down properly.  I am still trying to determine how the client should receive notification of remote connection teardown outside of the request lifecycle...  Perhaps this can\'t be determined until another operation (read or write) occurs on the transport?  I\'ll try to dive deeper with that test to figure out what\'s going on.""'",,,,,,,,,,,,,,,
finagle,475,closed,5,2016-03-07 10:34:32,706.43,,1,,"b'b"" Try replacing your Tomcat server with the following: You\'ll see the connections are closing. Also try a Finagle HTTP server: These connections are also closing"," but they don\'t close as fast. My lsof output showed the connection count hovering around 50. Seems to me like the Tomcat server is the issue?""'",,,,,,,,,,,,,,,,,
finagle,475,closed,6,2016-03-07 10:34:32,26.08,,1,,"b'b"" Ah I\'m setting up the server wrongly. I need to make the server send a chunk encoded response. The lsof count hovers around 50 again. The connections do get cleared", so it doesn\'t sound like a leak to me. What do you think? For curiosity\'s sake I also tried the Finagle server again with streaming enabled: I saw the same thing with lsof lines hovering around 50. The strangest thing I\'m seeing is that a lot of the requests are timing out," so maybe that\'s worth looking into. But I don\'t think there\'s a connection leak.""'",,,,,,,,,,,,,,,,
finagle,475,closed,7,2016-03-07 10:34:32,55.07,,1,,"b'b"" Correct me if I\'m wrong"," but I think the netcat and Finagle examples don\'t close the connection whereas the Spring-Boot server closes the connection.""'",,,,,,,,,,,,,,,,,
finagle,475,closed,8,2016-03-07 10:34:32,154.55,,1,,"b'b"" I\'d also argue that regardless of whether this issue is specific to the use of Tomcat or not", since it\'s the client\'s sockets that increasingly end op in CLOSE_WAIT," this is something you\'ll want to guard against from the side of the client.""'",,,,,,,,,,,,,,,,
finagle,475,closed,9,2016-03-07 10:34:32,142.7,1,,,"b'b"" @mritman that\'s reasonable. I\'m really suspicious of the timeouts. I think looking into why they\'re happening is a good place to start.""'",,,,,,,,,,,,,,,,,,
finagle,475,closed,10,2016-03-07 10:34:32,1137.62,,1,,"b'b"" @luciferous I also noticed the timeouts while testing. If you set the connection pool limit to 1 in my example project and wait for Tomcat to close the connection you\'ll see that Finagle starts timing out on it. So it looks like Finagle doesn\'t detect the connection is closed by the server and continues to try to read from it"," which is in line with @olix0r\'s observations.""'",,,,,,,,,,,,,,,,,
finagle,475,closed,11,2016-03-07 10:34:32,1094.38,,,1,"b'b"" @mritman", very interesting!  I\'d like to take a look too," hoping to check it out this weekend if folks haven\'t already figured it out by then.""'",,,,,,,,,,,,,,,,
finagle,475,closed,12,2016-03-07 10:34:32,199.48,1,,,b'b\' So," it turns out this has a really simple explanation. Because we set up the client with it means the response received will be chunked encoded (depending on how Netty reads it from the socket). This means that before Finagle can consider a response ""done""", you have to drain the reader fully or discard it. Add and you\\\'ll see the issue go away. I remember being bitten by this before too, once or twice. There\\\'s definitely room to improve the  here. Sorry about that.\'',,,,,,,,,,,,,,,
finagle,475,closed,13,2016-03-07 10:34:32,1.22,,1,,"b'b"" And", if you weren\'t seeing it with the  , it might have been because the HTTP response didn\'t contain a body," and therefore an empty  .""'",,,,,,,,,,,,,,,
finagle,475,closed,14,2016-03-07 10:34:32,3.33,,1,,b'b\' @luciferous isn\\\'t this an inherent race condition in the protocol?  if a stream is chunk-encoded and ends the transfer by closing the connection," it\\\'s indistinguishable from the remote dying.  wouldn\\\'t a ""correct"" implementation of this API signal to the reader","we don\\\'t know whether the server died or is finished""?\''
finagle	475	closed	15	mosesn	2016-03-07 10:34:32	4.0	+1			b'b"" @luciferous actually, it looks like it doesn\'t matter if the server\'s responses are chunked or not . . . weird.""'
finagle	475	closed	16	luciferous	2016-03-07 10:34:32	52.6		+1		b""b' The clients do close if the server closes. See above where I tried to reproduce with servers that close. But the tomcat one seems to keep the connection open.'",,,,,,,,,,,,,,,,
finagle,475,closed,17,2016-03-07 10:34:32,78.17,,,1,"b'b\' How then do you explain [these CLOSE_WAIT]url  I discarded the reader there. Granted I see a lot less connections than without but they are still there. Also the 200 OK responses contained the string ""Good"" and thus there was no empty reader.\''",,,,,,,,,,,,,,,,,,
finagle,475,closed,18,2016-03-07 10:34:32,499.75,,1,,"b""b' @olix0r I found a race condition in your [first test]url  seems to work OK after fixing that.  taking a look at the second one now.'""",,,,,,,,,,,,,,,,,,
finagle,475,closed,19,2016-03-07 10:34:32,26.27,,1,,"b'b"" @spockz Raise your timeout (e.g. 1 second) and you\'ll see the CLOSE_WAIT disappear. With the 20ms timeout does the number of CLOSE_WAIT grow? I see it hovering at ~20 connections.""'",,,,,,,,,,,,,,,,,,
finagle,475,closed,20,2016-03-07 10:34:32,1.1,,1,,"b'b"" @spockz Regarding the 200 OK case", it really depends on how Netty reads it from the socket. If the whole request fits into the first read," Netty doesn\'t chunk-encode it.""'",,,,,,,,,,,,,,,,
finagle,475,closed,21,2016-03-07 10:34:32,490.52,,1,,"b'b"" @olix0r and I think that ChannelTransport closes itself", which is why your proxy never detected a close.  I\'ve added the commit which no longer uses the proxy to my PR," so both tests should now pass.""'",,,,,,,,,,,,,,,,
finagle,475,closed,22,2016-03-07 10:34:32,58.13,,1,,"b'b"" @spockz @mritman I\'m beginning to think that @luciferous is right that this is a case of a difficult to use API", although it looks like there are a few bugs too.  Since your server is sending a chunk-encoded response, you need to use the to parse it.  The  s seem to disappear when I change to reading the entire reader explicitly and discarding it. A couple open questions:1.  why isn\'t it sufficient to read the entire reader?2.  why isn\'t it sufficient to discard the entire reader?3.  why isn\'t it sufficient for the server to cut the connection? My suspicion is that the reader constitutes  a read handle, and that we don\'t want to cut the read handle prematurely, so that it can still read whatever is in its socket buffer, so 3 makes sense, but 1 and 2 less so. I think it\'s also a bug that content / getContentString don\'t actually drain the reader.  The intent is to avoid blocking on io, but I think we should instead make it clear that getContent is only safe to call on unchunked content, or when you don\'t mind if you block. @luciferous what do you think? @mritman @spockz For what it\'s worth, if you control your remote servers, the remote server closing the socket should be an edge case, not the normal one.  Tcp sessions are not light, and you\'ll entail significantly GC pressure if you\'re constantly tearing down tcp sessions.  With that said, we absolutely want to get to the bottom of these bugs, so we appreciate you finding the minimization, since we know that it will happen occasionally even with servers you control," and that some servers you don\'t control may do weird things. :sparkles: :+1: ""'",,
finagle,475,closed,23,2016-03-07 10:34:32,1.97,,,1,"b'b"" @mritman @spockz I\'ve made a PR here: url  please let me know what you think!""'",,,,,,,,,,,,,,,,,,
finagle,475,closed,24,2016-03-07 10:34:32,358.33,1,,,"b'b"" I can confirm that consuming the whole reader as done in url  solves the issue.I think it is pretty clear from the signature that it is a blocking call (or that it returns what it already received). Perhaps values that are chunked shouldn\'t have a  ? In other words", using a Streaming client is a conscious decision of the developer that has to be reflected in which methods he can use?If we can still read from the socket when the connection is already closed that means that the contents are buffered somewhere on the machine. Thus," it might not be so bad to pull the contents into the finagle layer when the connection is closed. If we do that the connection can be closed without losing data.""'",,,,,,,,,,,,,,,,
finagle,475,closed,25,2016-03-07 10:34:32,408.78,,1,,"b'b"" @spockz yeah", it returns what is already received.  I think this is confusing, but it\'s potentially also confusing to change a call that doesn\'t block to one that does . . . I agree that it would be nice if responses that were chunked didn\'t have a content / getContentString, but it\'s difficult to change the API of Request, since it\'s one of the APIs that people use the most. Yeah, it might be worth pursuing having finagle try to read what\'s in the socketbuffer into memory.  I _think_ that should be safe," although I\'m not sure if it might be make us run into weird problems if a remote host has sent us more bytes that we want to copy into the JVM.""'",,,,,,,,,,,,
finagle,475,closed,26,2016-03-07 10:34:32,854.03,,1,,"b'b"" OK", I dug into finagle streaming clients some more, and I now think that the two main problems were not getting to the end of the read stream, and timing out without getting to the end of the read stream.  Note that if our  fails, then we never assign the new response to the response variable, so if it opens a read handle, we will never have the opportunity to discard the read handle. I no longer think that there\'s a bug where you need to drain AND discard.  I think it worked because it slowed down the operation, and not because of an underlying bug. @mritman @spockz I\'m convinced that there isn\'t a bug," but the API is difficult to use.  We\'ll be working to make it simpler.  Do you think it\'s OK to close the ticket?""'",,,,,,,,,,
finagle,475,closed,27,2016-03-07 10:34:32,183.25,,1,,"b'b"" So if this case can\'t be handled by the user of the Finagle API", I take it it\'s correctly handled by Finagle itself? Is the following understanding of how to use the Finagle client with streaming enabled correct? When using streaming you either:1. use (Reader$.MODULE$.readAll(()))); without a timeout, thus blocking2. or use it with a timeout but you keep trying until the call returns without timing out.  (Reader$.MODULE$.readAll(()), duration));3. or you keep reading in a streaming fashion until you encounter the a final chunk of length zero (How to detect this? By inspecting the response? Does the Response class offer a method to check for this?)4. or you need to make sure you call ().discard(). No need to answer my questions specifically," but if you can provide a summary or a link to some documentation on how to correctly use the Finagle client with streaming enabled you can close this ticket as far as I\'m concerned.""'",,,,,,,,,,,,,,
finagle,475,closed,28,2016-03-07 10:34:32,355.97,,,1,"b'b"" @mritman it can be handled by the user of the finagle API\\xe2\\x80\\x93almost none of our users use the API because most of our users use the asynchronous API", not the blocking one.  It\'s easy to deadlock if you use the blocking one and you\'re using finagle clients as well as servers, so we advise strongly against it.  It\'s much simpler to reason about if you\'re using future transformations.  I\'ve included an example of how you might describe this behavior asynchronously lower down. ah, the problem is with the  , not in the section. 1 / 2.  Please note that any use of is blocking, regardless of whether you set the timeout or not.  The only case in which it\'s not is if you set a timeout of 0.  You should _not_ use if you can avoid it.  It\'s better to use future transformations.  If you want to time something out, you can use or  . buffers the entire message, so you should only use it if you don\'t need your response streamed to you.  Otherwise it\'s preferable to use normal  .  You can set a timeout on the read with or and if it fails either of those timeouts, you can then discard it.  Here is one way that would be safe:  1.  If you\'re using the [API]url  directly, it will return you a  .  When the future is satisfied, if it\'s satisfied with a None, you know that you\'re reached the EOF and you can stop reading.2.  You only need to make sure you call () if you know you\'re no longer going to need the read handle and you haven\'t reached the end of the stream, or the stream hasn\'t failed (timeouts don\'t count).  In other cases, the stream will take care of itself. As far as docs go, we know that streaming is a weak part of our documentation.  This ticket is convincing us that we should change the Request / Response API too, so we\'re probably going to change the API to be easier to use, and then document it.  It might make sense to document safe use of Reader first though, since that\'s probably not going to change that significantly.  I\'m going to close this ticket," but I\'ve opened ticket #488 to improve documentation of Reader. Thanks for bearing with us as we figured out what was going on in your snippet!""'"
finagle,475,closed,closed,2016-03-29 14:59:55,153.08,5,20,5,,,,,,,,,,,,,,,,,,,
finagle,475,closed,-,-,-,5,20,5,,,,,,,,,,,,,,,,,,,
finagle,517,closed,opened,2016-06-17 00:12:32,,,,,,,,,,,,,,,,,,,,,,,
finagle,517,closed,title,2016-06-17 00:12:32,00:00,,1,,"b""b' finagle-http: client does not properly handle '""",,,,,,,,,,,,,,,,,,
finagle,517,closed,body,2016-06-17 00:12:32,00:00,1,,,"b""b' #482 describes a situation where clients unexpectedly throw a ChannelClosedException.  The scenario is basically:Requests being issued from linkerd to a non-Finagle HTTP server on a persistent connection.Server responds to a message with  Server closes connection.Finagle client may issue additional requests on this connectionrequests fail with ChannelClosedException Per [RFC2616]url > in either the request or the response header fields indicates that the connection SHOULD NOT be considered  go run '""",,,,,,,,,,,,,,,,,,
finagle,517,closed,1,2016-06-17 00:12:32,74.87,,1,,"b""b' In one of the test", I see that out of about 60K total requests, with ~6.5K server-disconnects," we observe ~550 ChannelClosedExceptions (exceptions caused by 8.5% of disconnects).'""",,,,,,,,,,,,,,,
finagle,517,closed,2,2016-06-17 00:12:32,16.13,,1,,"b'b"" I\'ve never seen that we\'ve handled that header in Finagle. I guess we just ignore it right now? Looks like there is a window between receiving a response with and event in the pipeline"," in which we see  .""'",,,,,,,,,,,,,,,,,
finagle,517,closed,3,2016-06-17 00:12:32,19.82,,1,,"b""b' It looks like is supposed to handle  occurs before the read operation completes? or something like that?'""",,,,,,,,,,,,,,,,,,
finagle,517,closed,4,2016-06-17 00:12:32,57.45,,1,,"b""b' Does affect the of the respective  ? Could there be a race where the is put back in the connection pool and reused before closes the connection?'""",,,,,,,,,,,,,,,,,,
finagle,517,closed,5,2016-06-17 00:12:32,737.67,,,1,"b'b"" Interestingly"," it appears that netty4 does _not_ exhibit this behavior and netty3 does.  I\'ll run more tests to confirm this.""'",,,,,,,,,,,,,,,,,
finagle,517,closed,6,2016-06-17 00:12:32,265.25,,,1,"b'b"" i\'ve added debug logging to  and I see something interesting: in netty3:in netty4:I\'m wondering if there are differences in the way that onFinish is satisfied between implementations (such that activeStreams is decremented differently). Surpisingly"," Netty3StreamTransport seems to satisfy onFinish immediately: So maybe there  is something else at play...""'",,,,,,,,,,,,,,,,,
finagle,517,closed,7,2016-06-17 00:12:32,16.55,,1,,"b""b' Indeed","  is false in netty3 and is true in netty4.  This causes the connection manager to indicate that the connection should not be closed immediately in netty3.'""",,,,,,,,,,,,,,,,,
finagle,517,closed,8,2016-06-17 00:12:32,22.83,,,1,"b""b' It appears that the response: is marked as chunked(!). While a request with an explicit content-length is correctly marked as not chunked: The problem is not exhibited when explicitly setting a content-length.  From Netty3StreamTransport: When chunked is false", onFinish=, and so ConnectionManager marks the request as immediately.  In the chunked case, onFinish is not satisfied until the body is exhausted, and so is false until this condition is met.  I believe that new requests may enter the connection between this response and the chunked response being fully read. So," this problem is exhibited with chunked responses on which is set (as is the case in the [original ticket]url '""",,,,,,,,,,,,,
finagle,517,closed,9,2016-06-17 00:12:32,12.95,1,,,"b'b"" And I\'ve reproduced this problem in netty4"," so it\'s not limited to a single netty version.  My guess is that netty4 doesn\'t treat as a chunked message and so it did not exhibit this error. When [forcibly setting a chunked response with  ]url  I can reproduce this problem in either netty version.""'",,,,,,,,,,,,,,,,,
finagle,517,closed,10,2016-06-17 00:12:32,65.92,,1,,"b'b"" I added debug logging to HttpTransport to report on read()", write() and status: Issuing the the request:receiving the response: is _false_ beecause was set, but is false because is false because the response stream has not ended yet...Something checks the transport\'s status after the response is satisfied. The status is reported as Open because the response chunk\'s onFuture hasn\'t been satisfied:Then, read\'s onFinish is satisfied (indicating the chunk response is complete).Then, another request is immediately written on the transport:Finally," we observe the connection closed exception after the write is attempted:""'",,,,,,,,,,,,,
finagle,517,closed,11,2016-06-17 00:12:32,167.37,,1,,"b'b"" OK"," so it sounds like that\'s it?  We should add some extra state to ConnectionManager to keep track of whether we\'ve ever seen an that\'s false?""'",,,,,,,,,,,,,,,,,
finagle,517,closed,12,2016-06-17 00:12:32,1129.75,,1,,"b'b"" I think I understand the issue now: We have a client stack somewhat like the following:...FactoryToService...WatermarkPoolCachingPool...HttpClientDispatcher  HttpTransport  ConnectionManager When a response is read in the HttpTransport", it is passed through _(rep, onFinish)_. The response has and  , and so the ConnectionManager is set with and (and so __ returns false). The HttpClient dispatcher essentially works as follows: There are two important events that occur when handling a response: First, the response promise is satisfied.  This causes FactoryToService to close the underlying service: When FactoryToService calls _()_, _()_ checks the _status_ of the underlying transport. This status check reports Open because  __ returns false (because readFinished hasn\'t been satisfied yet), and the service is returned to CachingPool\'s cache. At this point, a new request is received by the client and a ServiceFactory is acquired from the CachingPool. Unfortunately, the caching pool returns the same service factory that\'s currently being used to complete the initial response-the one that\'s about to close. The http client dispatcher tries to dispatch the request, but it cannot do so until the dispatcher\'s semaphore is released (and so it waits on _acquire()_). Then, the initial response\'s _readFinished_ future is satisfied and the client dispatcher releases the semaphore, allowing the second request to be dispatched & written. By then, the server has already town down the connection, and writing the second request fails with a ConnectionClosedException. So, the root of the problem is that FactoryToService closes the service once the response is satisfied and before the response stream has finished.  We wouldn\'t see this problem if close() was called after the response stream was finished, but there doesn\'t appear to be an API for receiving this notification outside of the dispatcher. Another option is to change the  to indicate status as Closed as soon the response is observed. I\'m unsure of the implications of indicating that the Dispatcher is Closed while it\'s still processing a stream," but I\'m concerned that this may cause the stream to be torn down prematurely.""'",,
finagle,517,closed,13,2016-06-17 00:12:32,324.18,,1,,"b""b' This is an issue with linkerd -I inserted a FactoryToService without a DelayedReleaseService under it. Inserting DelayedReleaseService fixes this issue. :tmyk:'""",,,,,,,,,,,,,,,,,,
finagle,517,closed,closed,2016-06-19 00:43:16,30.73,2,10,3,,,,,,,,,,,,,,,,,,,
finagle,517,closed,14,2016-06-17 00:12:32,1155.18,,1,,"b'b"" Reopening to discuss another (seemingly related) issue. Adding a DelayedFactoryService under FactoryToService does indeed appear to fix this issue.  However", when I test this configuration against Netty4, I still observe connection closed errors (though at a much lower frequency than before). Here\'s what I think is happening: We have a stack like:FactoryToServiceDelayedReleaseService...CachingPool...HttpClientDispatcher  HttpTransport  netty4.ChannelTransport  ConnectionManager Sometimes the server responds with a message that has Usually, the client handles this properly such that:The response is received on the transportConnectionManager observes the responses, marking _isKeepAlive=false_. _activeStreams_ is set to _1_ since the response has not completed yet.FactoryToService begins closing the underlying serviceDelayedReleaseService prevents the underlying service from closing until the response is completeThe response body is read.The ConnectionManager is updated, marking _activeStreams=0_ so that _shouldClose_ returns true.DelayedReleaseService observes the stream completion and closes the underlying serviceCachingPool checks the status of the underlying service which is _Closed_, and the transport is torn down. However, _sometimes_ we observe the following:The response is received on the transportConnectionManager observes the responses, marking _isKeepAlive=false_. _activeStreams_ is set to _1_ since the response has not completed yet.FactoryToService begins closing the underlying serviceDelayedReleaseService prevents the underlying service from closing until the response is completeThe response body is read.DelayedReleaseService observes the stream completion and closes the underlying serviceCachingPool checks the status of the underlying service which is _Open_ (because ConnectionManager has not updated yet), and the transport is returned to CachingPool.A new request is processed, and provisions the cached transport from CachingPool.The ConnectionManager is updated, marking _activeStreams=0_ so that _shouldClose_ returns true, but it\'s already too late because the transport is not checked. So, I think it\'s possible that DelayedReleaseService observes that the stream has been completed and closes the service before the ConnectionManager has observed this event. DelayedReleaseService wraps responses so that a promise is satisfied when the reader observes a stream termination. ConnectionManager uses the future returned from from: So," I think this means that a reader\'s read promise may be satisfied before a writer\'s write-promise is? I\'m not sure why this race only appears to manifest with Netty4. Netty3\'s copyToWriter looks like: This seems ~equivalent and I\'m not sure  this could change ordering semantics.""'",,,,
finagle,517,closed,reopened,2016-06-20 19:58:27,1155.18,2,11,3,,,,,,,,,,,,,,,,,,,
finagle,517,closed,15,2016-06-17 00:12:32,6.58,,,1,"b""b' It does appear that () may satisfy read promises before write promises are satisfied: I think that this could cause DelayedReleaseService to observe end-of-stream before HttpTransport.'""",,,,,,,,,,,,,,,,,,
finagle,517,closed,16,2016-06-17 00:12:32,139.87,,1,,"b'b"" It seems that a minor change to  resolves this: This causes the collation future to be satisfied before the reader is closed", so that the transport may observe the state before other readers do.  I\'ll test this a bit longer and, if the error does not appear," submit a PR""'",,,,,,,,,,,,,,,
finagle,517,closed,17,2016-06-17 00:12:32,78.82,,,1,"b'b"" @olix0r nice sleuthing. One thing to consider is that this (and the n3 impl) rely on the implementation details of the scheduler to ensure that the closures are ordered correctly. @dschobel and I were looking into this and we agreed that it might be nice to explore doing away with and reconciling outstanding streams in the pool. We could change the status of the service to via and defer on the decision to close or put it back into the pool until it changes. This would be a bigger change", but I think it would make the code much easier to understand and reason about. If it\'s not something you\'re interested in exploring," I\'m okay with the scheduler coupling since its effectively what we had before.""'",,,,,,,,,,,,,,,,
finagle,517,closed,18,2016-06-17 00:12:32,16.55,,,1,"b'b"" @roanta interesting!  @adleong and I were just discussing how #518 is scheduler-dependent and more of a hack than a fix... I\'m interested in improving this", but, if it\'s amenable to you," I think I\'d prefer to ship the hack while we sort out what the proper solution looks like.""'",,,,,,,,,,,,,,,
finagle,517,closed,19,2016-06-17 00:12:32,1058.45,,,1,"b'b"" @olix0r that works for me. I\'ll work towards pulling in #518. Thanks again for digging into this.""'",,,,,,,,,,,,,,,,,,
finagle,517,closed,closed,2016-06-27 20:01:19,2.87,2,12,7,,,,,,,,,,,,,,,,,,,
finagle,517,closed,-,-,-,2,12,7,,,,,,,,,,,,,,,,,,,
finagle,543,closed,opened,2016-08-16 21:10:33,,,,,,,,,,,,,,,,,,,,,,,
finagle,543,closed,title,2016-08-16 21:10:33,00:00,,1,,"b""b' finagle-redis: Enable running integration tests in finagle-redis.'""",,,,,,,,,,,,,,,,,,
finagle,543,closed,body,2016-08-16 21:10:33,00:00,,1,,"b'b"" Problem Unit tests and integration tests are mixed in the finagle-redis projectunder the test path. In addition", the SBT configuration is only runningunit tests. This partially solves issue #360. Solution Moved the integration test files to the  path from . Extracted traitsused for integration tests and created a new file in the  path. Addedconfiguration for IntegrationTest in the finagle-redis project. A summary of the changes adopted from PR url Run integration tests using  Tested using Redis 3.2Removed btree and topology tests since this is not part of the official releaseFixed scans by replacing PATTERN with MATCHUpdated the expected DUMP results, seems this differs between versions.Fixed a bug when running sentinel tests," not all servers shutdown correctlyFixed sentinel protocol to use link-pending-commands instead of pending-commands Result Running \'test\' only executes unit tests. Running \'it:test\' executes theintegration tests.""'",,,,,,,,,,,,,,,
finagle,543,closed,1,2016-08-16 21:10:33,123.03,,1,,"b""b' ## [Current coverage]url  is 68.48% (diff: 50.00%) '""",,,,,,,,,,,,,,,,,,
finagle,543,closed,2,2016-08-16 21:10:33,856.4,,1,,"b""b' Ping @mosesn '""",,,,,,,,,,,,,,,,,,
finagle,543,closed,3,2016-08-16 21:10:33,375.47,,1,,"b'b"" I\'ve attempted to pull this in internally", but finagle-redis has moved quite a bit. Would you mind rebasing your changes on the latest in develop? After that," I\'ll make sure this gets in asap.""'",,,,,,,,,,,,,,,,
finagle,543,closed,4,2016-08-16 21:10:33,164.83,,,1,"b""b' @nepthar sure", ill rebase and will also check your earlier comment," thanks!'""",,,,,,,,,,,,,,,,
finagle,543,closed,5,2016-08-16 21:10:33,446.05,,,1,"b""b' Hello"," just wondering what the status of this PR is.  Would love to get the PATTERN -> MATCH fix.  Thanks :)'""",,,,,,,,,,,,,,,,,
finagle,543,closed,6,2016-08-16 21:10:33,749.68,,1,,"b""b' @mkhq Have you had the chance to bring this up to date?'""",,,,,,,,,,,,,,,,,,
finagle,543,closed,7,2016-08-16 21:10:33,773.2,,1,,"b""b' @nepthar @luliu Hey"," it was more than I expected so didnt finish yet. Does it make sense to make a separate PR for the PATTERN -> MATCH fix?'""",,,,,,,,,,,,,,,,,
finagle,543,closed,8,2016-08-16 21:10:33,458.0,,,1,b'b\' @mkhq I\\\'ll refrain from butting into your process.  :)  As long as it is still being worked on," I\\\'m happy with a ""it\\\'s done when it\\\'s done"".\''",,,,,,,,,,,,,,,,,
finagle,543,closed,9,2016-08-16 21:10:33,196.1,,,1,"b""b' @mkhq I always have a preference for smaller", more focused PRs," so that sounds great to me!'""",,,,,,,,,,,,,,,,
finagle,543,closed,10,2016-08-16 21:10:33,194.27,,1,,"b""b' @nepthar @luliu Added a new PR #587 that replaces PATTERN with MATCH. Tested against redis 3.2.6.'""",,,,,,,,,,,,,,,,,,
finagle,543,closed,closed,2017-05-09 21:25:14,14.68,0,8,4,,,,,,,,,,,,,,,,,,,
finagle,543,closed,reopened,2017-05-09 21:25:53,0.65,0,8,4,,,,,,,,,,,,,,,,,,,
finagle,543,closed,11,2016-08-16 21:10:33,1439.17,,1,,"b""b' @mkhq have you had a chance to take another look at this?'""",,,,,,,,,,,,,,,,,,
finagle,543,closed,12,2016-08-16 21:10:33,1029.92,,1,,"b""b' @mosesn will open a new PR"," this code is too outdated'""",,,,,,,,,,,,,,,,,
finagle,543,closed,closed,2017-08-10 14:36:40,1030.78,0,10,4,,,,,,,,,,,,,,,,,,,
finagle,543,closed,-,-,-,0,10,4,,,,,,,,,,,,,,,,,,,
finagle,649,closed,opened,2017-08-26 17:05:44,,,,,,,,,,,,,,,,,,,,,,,
finagle,649,closed,title,2017-08-26 17:05:44,00:00,,1,,"b""b' Project does not build due to scrooge sbt plugin'""",,,,,,,,,,,,,,,,,,
finagle,649,closed,body,2017-08-26 17:05:44,00:00,,1,,"b""b' clone the project and run and you find that the project does not compile due to missing dependency  error] (*:update) : unresolved dependency: #scrooge-sbt-plugin;4.19.0-SNAPSHOT: not found Project loading failed: (r)etry", (q)uit, (l)ast," or (i)gnore? a  On investigation I see that it is not built for the version of Scala the project uses by default.  Is building this plugin documented anywhere?  '""",,,,,,,,,,,,,,,
finagle,649,closed,1,2017-08-26 17:05:44,106.33,1,,,"b'b"" @justinhj yep", there\'s a note in the README that explains you should peek in the []url  doc," or you can build from stable versions by switching to the \'master\' branch.""'",,,,,,,,,,,,,,,,
finagle,649,closed,closed,2017-08-26 18:52:04,106.33,1,2,0,,,,,,,,,,,,,,,,,,,
finagle,649,closed,2,2017-08-26 17:05:44,30.55,,1,,"b""b' @mosesn the underlying issue here is that was literally not published for ANY version of This is kind of a big bug for me and anyone else outside of twitter that uses thrift with finagle.'""",,,,,,,,,,,,,,,,,,
finagle,649,closed,reopened,2017-08-29 00:14:58,322.9,1,3,0,,,,,,,,,,,,,,,,,,,
finagle,649,closed,3,2017-08-26 17:05:44,294.28,,,1,"b'b"" @crispywalrus ah", I see now.  We\'ll get right on that," thanks!""'",,,,,,,,,,,,,,,,
finagle,649,closed,4,2017-08-26 17:05:44,993.37,1,,,"b""b' @crispywalrus sorry about that"," this should be fixed now'""",,,,,,,,,,,,,,,,,
finagle,649,closed,5,2017-08-26 17:05:44,6.1,,,1,"b""b' I see it now"," thanks @dschobel!'""",,,,,,,,,,,,,,,,,
finagle,649,closed,closed,2017-08-29 17:45:17,1050.32,2,3,2,,,,,,,,,,,,,,,,,,,
finagle,649,closed,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,,
finagle,683,closed,opened,2018-03-10 02:06:43,,,,,,,,,,,,,,,,,,,,,,,
finagle,683,closed,title,2018-03-10 02:06:43,00:00,,1,,"b""b' Unable to run finagle-example project'""",,,,,,,,,,,,,,,,,,
finagle,683,closed,body,2018-03-10 02:06:43,00:00,,1,,"b'b"" finagle-example is throwing compilation errors  ### Expected behavior  The project should be able to compile.  ### Actual behavior  While executing the command"," I\'m getting the following errors:  ### Steps to reproduce the behavior Run this command from the branch: . ""'",,,,,,,,,,,,,,,,,
finagle,683,closed,1,2018-03-10 02:06:43,9.47,,,1,"b'b"" @AlexITC thanks for the issue. Looks like a dependency issue has been introduced. We\'ll take a look.""'",,,,,,,,,,,,,,,,,,
finagle,683,closed,2,2018-03-10 02:06:43,221.5,,1,,"b""b'   does not depend on guava in sbt build"," but in pants BUILD it does. Looks like been broken since the removal of guava from serversets.'""",,,,,,,,,,,,,,,,,
finagle,683,closed,3,2018-03-10 02:06:43,784.13,,1,,"b""b' A patch is in progress.'""",,,,,,,,,,,,,,,,,,
finagle,683,closed,4,2018-03-10 02:06:43,256.12,,1,,"b""b' This should be fixed with url '""",,,,,,,,,,,,,,,,,,
finagle,683,closed,closed,2018-03-12 23:18:33,1271.83,0,5,1,,,,,,,,,,,,,,,,,,,
finagle,683,closed,reopened,2018-03-12 23:18:53,0.33,0,5,1,,,,,,,,,,,,,,,,,,,
finagle,683,closed,closed,2018-03-12 23:19:07,0.23,0,5,1,,,,,,,,,,,,,,,,,,,
finagle,683,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,
finagle,716,closed,opened,2018-08-23 13:06:31,,,,,,,,,,,,,,,,,,,,,,,
finagle,716,closed,title,2018-08-23 13:06:31,00:00,,1,,"b""b' Missing dtab information in NoBrokersAvailableException'""",,,,,,,,,,,,,,,,,,
finagle,716,closed,body,2018-08-23 13:06:31,00:00,1,,,"b'b"" The message of the always shows an empty and even if they are set.  ### Expected behavior  The message of the should display the actual and being used.  ### Actual behavior  Exception message always shows both the  and  as empty. This causes confusion specifically in cases where the Dtab is set in other parts of the code. Then it\'s unclear whether the dtab was actually picked up.  ### Steps to reproduce the behavior  Run the example code below:  It results in this exception:  While I was expecting the  and  parts to be filled with the actual dtab information.""'",,,,,,,,,,,,,,,,,,
finagle,716,closed,1,2018-08-23 13:06:31,640.23,,,1,"b""b' Nice find.  Looks to me like [LoadBalancerFactory]url  is not using the right constructor for  . That said", even if we capture the right value at construction time," those values could change after that. My inclination is to evolve to allow those values to be read from and unless they have been set.  Are you interested in working on a PR to fix this?'""",,,,,,,,,,,,,,,,
finagle,716,closed,closed,2018-08-23 23:46:45,640.23,1,1,1,,,,,,,,,,,,,,,,,,,
finagle,716,closed,reopened,2018-08-23 23:46:48,0.05,1,1,1,,,,,,,,,,,,,,,,,,,
finagle,716,closed,2,2018-08-23 13:06:31,814.83,1,,,"b""b' I think I could work on a PR"," but I have one  approach: * Is there a specific reason why the exception is created only once instead of creating an exception each time it encounters the specific situation. E.g. why not pass a function to the method. I think that would be better in terms of: which class should be responsible for mentioning the correct Dtab info in the message? I think it should be the creator of the exception who knows the exact information it worked with.'""",,,,,,,,,,,,,,,,,
finagle,716,closed,3,2018-08-23 13:06:31,194.33,,1,,"b'b"" It\'d be a bigger API change. A compromise might be to add a new constructor to where and are Function1\'s.  ""'",,,,,,,,,,,,,,,,,,
finagle,716,closed,4,2018-08-23 13:06:31,55.95,,1,,"b'b"" The suggested compromise makes sense I think. I\'ll prepare a PR""'",,,,,,,,,,,,,,,,,,
finagle,716,closed,closed,2018-09-14 02:16:42,149.9,2,3,1,,,,,,,,,,,,,,,,,,,
finagle,716,closed,-,-,-,2,3,1,,,,,,,,,,,,,,,,,,,
finagle,743,closed,opened,2018-11-04 16:57:34,,,,,,,,,,,,,,,,,,,,,,,
finagle,743,closed,title,2018-11-04 16:57:34,00:00,,1,,"b""b' finagle-redis: Add support for Stream APIs'""",,,,,,,,,,,,,,,,,,
finagle,743,closed,body,2018-11-04 16:57:34,00:00,,1,,"b""b' Problem  Redis 5.0 was released recently and brought with it the new Stream API. The finagle-redis client should support these new APIs.  Solution  Added support for the Stream API in the finagle-redis client.  Result  Users of the finagle-redis library will be able to access the new Stream API which is now generally available on Redis >=5.0.  NOTE: I did not implement access to the APIs yet. The return types of those calls are a bit more complex than others. '""",,,,,,,,,,,,,,,,,,
finagle,743,closed,1,2018-11-04 16:57:34,0.12,,,1,"b""b' [![CLA assistant check]url  All committers have signed the CLA.'""",,,,,,,,,,,,,,,,,,
finagle,743,closed,2,2018-11-04 16:57:34,20.07,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94  [.../]url [..]url [..]url [..]url [.../]url [.../]url [..]url [..]url ... and [2 more]url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,
finagle,743,closed,3,2018-11-04 16:57:34,13.82,,1,,"b""b' cc OWNERS:  @dschobel @edede @koliver @mnakamura @mpatidar @roanta @vkostyukov'""",,,,,,,,,,,,,,,,,,
finagle,743,closed,4,2018-11-04 16:57:34,63.95,,1,,"b""b' Hi chris"," taking a look at this today'""",,,,,,,,,,,,,,,,,
finagle,743,closed,5,2018-11-04 16:57:34,33.0,,,1,"b""b' Awesome"," thanks! '""",,,,,,,,,,,,,,,,,
finagle,743,closed,6,2018-11-04 16:57:34,336.28,,,1,"b'b"" @nepthar thanks for the review! On top of the integration spec I\'ve done a fair bit of ad hoc testing using the REPL. I thought of a few more cases I\'d like to run through"," so I\'m doing those now! ""'",,,,,,,,,,,,,,,,,
finagle,743,closed,7,2018-11-04 16:57:34,1140.7,,,1,"b'b"" @chrisbenincasa Awesome!  By the way", when you run your repl tests, could you please  the commands that you uses to test things into... maybe these comments? I know we don\'t have an official way of capturing that kind of testing," but at least having them here would be fantastic.""'",,,,,,,,,,,,,,,
finagle,743,closed,8,2018-11-04 16:57:34,1268.5,,,1,"b'b"" Most definitely! I\'ll get those added here along with the changes you requested. ""'",,,,,,,,,,,,,,,,,,
finagle,743,closed,9,2018-11-04 16:57:34,1313.7,,1,,"b'b"" @nepthar pushed up changes based on your feedback. I\'m working on cleaning up the logs from a long REPL session and I\'ll post that here once I\'m finished with that.""'",,,,,,,,,,,,,,,,,,
finagle,743,closed,10,2018-11-04 16:57:34,18.07,,,1,"b""b' This was merged as ba578c1445b2e241687ad3c89eec4f3d93431a76. Thanks for the PR!'""",,,,,,,,,,,,,,,,,,
finagle,743,closed,closed,2018-11-26 15:05:46,1328.2,0,5,7,,,,,,,,,,,,,,,,,,,
finagle,743,closed,11,2018-11-04 16:57:34,200.4,,1,,"b'b"" @bryce-anderson I\'m re-opening this PR to allow @chrisbenincasa to post his testing REPL logs here. I\'ll close once they\'re posted.""'",,,,,,,,,,,,,,,,,,
finagle,743,closed,reopened,2018-11-26 18:26:10,200.4,0,6,7,,,,,,,,,,,,,,,,,,,
finagle,743,closed,12,2018-11-04 16:57:34,148.97,1,,,"b'b"" Apologies for the delay here the holiday threw things off for me. I\'ll post those logs ASAP. ""'",,,,,,,,,,,,,,,,,,
finagle,743,closed,13,2018-11-04 16:57:34,1244.53,,,1,"b'b"" @nepthar here\'s a session demonstrating XADD", XREAD, XRANGE, XREVRANGE, XLEN, XDEL," and XTRIM.  url Let me know if you\'d like to see any more cases! ""'",,,,,,,,,,,,
finagle,743,closed,14,2018-11-04 16:57:34,384.63,,,1,"b""b' Thanks again @chrisbenincasa this got merged back in ba578c1445b2e241687ad3c89eec4f3d93431a76 and was included in the 18.12 release.'""",,,,,,,,,,,,,,,,,,
finagle,743,closed,closed,2018-12-13 00:04:19,338.15,1,6,9,,,,,,,,,,,,,,,,,,,
finagle,743,closed,-,-,-,1,6,9,,,,,,,,,,,,,,,,,,,
finagle,766,closed,opened,2019-04-30 00:15:42,,,,,,,,,,,,,,,,,,,,,,,
finagle,766,closed,title,2019-04-30 00:15:42,00:00,,1,,"b""b' finagle-core: Fix rate limiter if negative rate or after window'""",,,,,,,,,,,,,,,,,,
finagle,766,closed,body,2019-04-30 00:15:42,00:00,,1,,"b""b' Problem  When rate is negative then request could be executed"," and after one elapsed time windows rate is not well modified.  Solution  Refuse request when rate is negative and reset correctly limit after one elapsed time window.'""",,,,,,,,,,,,,,,,,
finagle,766,closed,1,2019-04-30 00:15:42,0.12,,,1,"b""b' [![CLA assistant check]url  All committers have signed the CLA.'""",,,,,,,,,,,,,,,,,,
finagle,766,closed,2,2019-04-30 00:15:42,29.35,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94  [..]url [..]url [.../]url [..]url [..]url [..]url [..]url [.../]url [..]url [...y4/]url ... and [159 more]url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,
finagle,766,closed,closed,2019-05-01 09:10:51,535.15,0,2,2,,,,,,,,,,,,,,,,,,,
finagle,766,closed,reopened,2019-05-01 09:10:54,0.05,0,2,2,,,,,,,,,,,,,,,,,,,
finagle,766,closed,closed,2019-05-27 11:41:01,150.12,0,2,2,,,,,,,,,,,,,,,,,,,
finagle,766,closed,reopened,2019-05-27 11:41:04,0.05,0,2,2,,,,,,,,,,,,,,,,,,,
finagle,766,closed,3,2019-04-30 00:15:42,1252.37,,1,,"b'b"" I\'m pulling this internally.""'",,,,,,,,,,,,,,,,,,
finagle,766,closed,4,2019-04-30 00:15:42,1342.8,,1,,"b""b' Merged in 03d1ad8bc6de13676d3164484c4448b8936007b5. '""",,,,,,,,,,,,,,,,,,
finagle,766,closed,closed,2019-06-05 20:00:20,499.27,0,4,2,,,,,,,,,,,,,,,,,,,
finagle,766,closed,-,-,-,0,4,2,,,,,,,,,,,,,,,,,,,
