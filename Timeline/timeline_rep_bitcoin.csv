REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,opened,2011-02-13 21:30:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,title,2011-02-13 21:30:13,00:00,,1,,"b""b' Specify location for  file'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,body,2011-02-13 21:30:13,00:00,,1,,"b""b' It should be possible to specify a location for the  file.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,1,2011-02-13 21:30:13,978.12,,1,,"b'b"" Need to be very careful about accidentally corrupting the  file by pointing two running bitcoins at the same  file.  Berkeley db doesn\'t do any automatic multi-process locking. Right now", a lock file is created in the -datadir Bitcoin is using," but if we allow the wallet to be anywhere in the filesystem that protection wouldn\'t work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,2,2011-02-13 21:30:13,592.3,,,1,"b""b' I second that. There should be an option to set the location via GUI.It would also be nice to be able to specify a secondary location", where a mirror of the wallet could be saved," possibly on a network path.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,3,2011-02-13 21:30:13,576.2,,1,,"b""b' I had suggested a -walletdir parameter here: url  Would probably also be necessary to start with a -rescan then when switching between wallets"," right?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,4,2011-02-13 21:30:13,197.6,,1,,b'b\' This is useful, I think. You can create an additional lockfile in the walletdir, to prevent multiple processes from accessing the same wallet. Furthermore," it\\\'s relatively easy to detect the ""switching back to an earlier wallet"" case", by storing the best block index in the wallet as well (suggested by Satoshi somewhere).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,5,2011-02-13 21:30:13,347.3,,1,,"b'b"" I wonder if just using  as it\'s own lockfile  work...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,6,2011-02-13 21:30:13,149.45,,1,,"b""b' Judging from boost::interprocess:file_lock documentation"," it should...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,7,2011-02-13 21:30:13,565.1,,1,,"b""b' Will you also give an option to replicate the wallet to a secondary location?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,8,2011-02-13 21:30:13,1179.75,,1,,"b'b"" If the wallet were composited of isolated static keys (plain text or as separate files in a wallet directory) then would there be any concern for corruption? Couldn\'t every  be write-once-never-modify?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,9,2011-02-13 21:30:13,450.8,,1,,"b""b' @alexgenaud: the wallet is much more than a collection of keys it also contains transactions", accounting information, settings," and information about the block chain'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,10,2011-02-13 21:30:13,293.57,,1,,"b'b"" Can most of that information be recreated from the network? Presumably we want to specify different wallet locations because we\'ll have many of them", likely stored on different media, backed up, encrypted, etc. If that\'s the case," I would think some isolated entities (the keys) should be write-once-never-modify.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,11,2011-02-13 21:30:13,454.15,,1,,"b'b"" Yes", the list of transactions can be easily recomputed (and are fairly sanely).  The settings,  those are just the things in the preference dialog.  Accounts, well that also not, but those are so broken , those are tied to the list of addresses," so that also shouldn\'t be a problem""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,12,2011-02-13 21:30:13,0.32,,1,,"b""b' Also", this bug should be long closed," we have -datadir=...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,13,2011-02-13 21:30:13,1.68,,1,,"b'b"" I believe this is about a the location of the wallet specifically that\'s useful","  is a step towards general wallet management.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,14,2011-02-13 21:30:13,24.45,,1,,"b""b' Ah", well then yea. Is there also a bug for separate -conffile= location," as that falls under the same category.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,15,2011-02-13 21:30:13,501.42,,1,,"b'b"" url  wallet import and export should resolve this issue"," please contribute to that thread. Edit: reopened per Sipa\'s advice""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,closed,2011-09-06 06:42:25,552.2,0,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,16,2011-02-13 21:30:13,89.3,,1,,"b'b"" As the author of pull #220", I\'m not convinced this is about the same problem. Having the client manage different (or even multiple) wallets at once would be a very useful think imho," independent from the ability to  them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,reopened,2011-09-06 08:12:16,89.85,0,17,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,17,2011-02-13 21:30:13,11.95,,,1,"b""b' I have added the wallet label so that these issues are grouped. Some of them overlap", and it makes more sense to group them than to condense them. Cheers Sipa," and kudos on the Wallet work =)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,18,2011-02-13 21:30:13,631.25,,,1,"b'b"" Any work done on this? I read on the forum that since the blockchain doesn\'t use BDB it will be easier to add this option now. Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,19,2011-02-13 21:30:13,2.33,,1,,"b'b"" @keystrike  it\'s likely going to get subsumed by the multiple wallet support.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,20,2011-02-13 21:30:13,647.98,,1,,"b'b"" Does that mean you\'re volunteering to do it @APerson241 ? Otherwise"," please spare us your judgements as to how easy or difficult something is.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,21,2011-02-13 21:30:13,1304.65,,1,,"b'b\' Closing; 0.9 release has a ""-wallet="" option.  It must still be in the -datadir", though.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,closed,2013-08-16 03:29:53,1157.62,0,20,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,68,closed,-,-,-,0,20,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,opened,2011-03-17 21:59:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,title,2011-03-17 21:59:07,00:00,,1,,"b""b' Spent per txout'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,body,2011-03-17 21:59:07,00:00,1,,,"b'b"" This patch changes some internal structures to keep track of spentness of each wallet transaction output separately", to support partially-spent transactions. It contains:an update to the data structures (vfSpent in CWalletTx instead of fSpent)a backward-compatible update to the wallet disk format (written by Satoshi, Gavin knows). Old clients reading back an updated wallet will ignore partially spent transactions when creating new ones, and may report a wrong balance, though.some helper functions (CWalletTx: IsSpent, MarkSpent, MarkDirty to reset cached values, GetAvailableCredit which only counts unredeemed outputs)update to SelectCoins and CreateTransaction to select source transaction outputs separately instead of per whole transaction. This fixes the issue mentioned in url  The reason for writing this patch: i\'m also working on an  wallet patch, where situations with partially spent transactions become hard to avoid. Everything except loading a new wallet into an old client is tested on the testnet," including crafted situations with partially-spent transactions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,1,2011-03-17 21:59:07,112.82,,1,,"b'b"" I haven\'t reviewed the code thoroughly", but it looks reasonable. In order to ease future changes to the wallet format," how about adding a  pair into the wallet indicating its data format version number?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,2,2011-03-17 21:59:07,7.78,,1,,"b'b"" That\'s certainly a possibility", which may be useful in the future, but it\'s not really necessary now. The old format used a dedicated byte for specifying spentness," while the new code uses a key-value entry (using the dedicated byte if not present) and keeps the spent-byte updated as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,closed,2011-03-20 23:59:43,120.6,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,reopened,2011-03-20 23:59:48,0.08,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,3,2011-03-17 21:59:07,15.85,,1,,"b'b"" Well", I mildly disagree that it\'s not necessary now. The time to implement versioning is now, before it\'s needed, so that when it is needed clients will have the version-checking code in place. But on reflection, that\'s what the nVersion parameter to the Serialize family of functions is for," isn\'t it?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,4,2011-03-17 21:59:07,38.0,,1,,"b'b"" Don\'t get me wrong I merely mean that for this particular issue there shouldn\'t be a problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,5,2011-03-17 21:59:07,72.7,,,1,b'b\' I pulled this and ran it against a testnet-in-a-box," and there\\\'s something seriously wrong-look at this getinfo output:{  ""version"" : 32100","balance"" : 103514.73287496,  ""blocks"" : 1479,  ""connections"" : 1,  ""proxy"" : "",  ""generate"" : false,  ""genproclimit"" : 3,  ""difficulty"" : 1.00000000,  ""hashespersec"" : 0,  ""testnet"" : true,  ""keypoololdest"" : 1302017341,  ""paytxfee"" : 0.00000000,  ""errors"" : ""} balance is greater than 50*blocks, which should be impossible! I uploaded the pre-conversion -testnet wallet and block index to:  url \''
bitcoin	123	closed	6	sipa	2011-03-17 21:59:07	795.63		+1		b'b"" Sounds like you have a lot of (used) high-value transactions whose output is yourself, but are for some reason not marked spent. I\'m not sure how that is possible but I\'ll check the wallet in that zip file.""'
bitcoin	123	closed	7	gavinandresen	2011-03-17 21:59:07	327.73			+1	b'b\' FYI:  Wallet is from a 3-node ""testnet-in-a-box"" that I ran a bunch of ClearCoin escrow unit tests against.  Typical use was  Sending wallet -I haven\\\'t tried the much simpler test of just taking a testnet-in-a-box wallet and running it against your patch; that might be a good place to start (see if balance is correct to start).\''
bitcoin	123	closed	8	sipa	2011-03-17 21:59:07	766.08			+1	b""b' I tried running a testnet-in-a-box with your wallet and block database, but everything runs fine here. Could you post your corrupted  as well?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,9,2011-03-17 21:59:07,187.67,1,,,"b'b\' I just tried again after cloning and compling directly from your git branch and got similar results.  Bad ""after"" wallet is at:  url  (this one is the entire datadir in a directory called \\\'d\\\')\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,10,2011-03-17 21:59:07,1.3,,,1,b'b\' Interesting," though:  balance is different from first time I tried: {  ""version"" : 32100","balance"" : 60605705932.90255737,  ""blocks"" : 1455,  ""connections"" : 0,  ""proxy"" : "",  ""generate"" : false,  ""genproclimit"" : 3,  ""difficulty"" : 1.00000000,  ""hashespersec"" : 0,  ""testnet"" : true,  ""keypoololdest"" : 1301969525,  ""paytxfee"" : 0.00000000,  ""errors"" : ""  }\''
bitcoin	123	closed	11	sipa	2011-03-17 21:59:07	268.32		+1		b""b' Bug fixed fAvailableCreditCached was not initialized, causing arbitrary reported numbers on some systems'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,closed,2011-04-12 17:43:49,1064.02,2,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,123,closed,-,-,-,2,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,opened,2011-03-23 16:59:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,title,2011-03-23 16:59:42,00:00,,1,,"b""b' Remove miner'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,body,2011-03-23 16:59:42,00:00,,1,,"b""b' Removes the bitcoin miner from the code (mining thread", RPCs," GUI options).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,1,2011-03-23 16:59:42,33.13,,1,,"b""b' We should keep the miner", as a reference.  People might start their own block chain, or perform research.  BitcoinMiner() provides all that in a self-contained package. Just hide it from the user in the GUI and command line help," IMO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,closed,2011-03-23 17:32:50,33.13,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,reopened,2011-03-23 17:32:56,0.1,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,2,2011-03-23 16:59:42,0.28,1,,,"b'b"" Sorry", didn\'t mean to close the pull request," just comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,3,2011-03-23 16:59:42,1280.0,,1,,"b""b' The built-in miner is darn useful for -testnet (and testnet-in-a-box) testing. Before removing it or hiding it in the client", content on the wiki and website needs to be updated," too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,4,2011-03-23 16:59:42,27.67,,1,,"b""b' I pretty much agree with removing the miner from the client. Before mining gets removed", though," we should have a separate stand-alone miner as a reference implementation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,5,2011-03-23 16:59:42,418.1,,1,,"b""b' Forum discussion here:  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,6,2011-03-23 16:59:42,1358.6,,1,,"b""b' IMHO: remove 4way code", hide miner from GUI," leave reference miner in codebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,7,2011-03-23 16:59:42,911.57,,1,,"b""b' Obsoleted by removal of 4way miner code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,closed,2011-05-06 12:09:03,1116.12,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,132,closed,-,-,-,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,opened,2011-04-06 07:43:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,title,2011-04-06 07:43:30,00:00,,1,,"b""b' Key management'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,body,2011-04-06 07:43:30,00:00,,,1,"b'b"" For now the entire PKI in bitcoin is closed for users. I propose make it more clear at least for JSON-RPC. It will be possible to create bitcoin paycards and such. All is required is to convert private (and maybe public", too) keys to base64 encoding and printing them to stdout and also implement creating private key in  by importing such base64-encoded value. I guess public key may be easily calculated from private so when you export private you have no need to export public. The purpose of this feature is to make possible creating deferred payments when you don\'t know (or don\'t want to know) whom to pay to. You give or leave the private key which has some amount of coins somewhere and recipient then withdraws money to his own wallet. With such functionality one can make a competition and the winner gets that key and receives money so you shouldn\'t worry about that. You send money to the new address," export its private key and place it to the page which is shown to the winner. And so on.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,1,2011-04-06 07:43:30,981.93,,1,,"b""b' See the dumpprivkey and importprivkey rpc calls in this branch: url  Disclaimer: not ready for production use :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,2,2011-04-06 07:43:30,328.72,,,1,"b'b"" Wow"," glad you\'re working on it. Do you plan to release it for 0.3.21?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,closed,2011-04-07 05:34:09,1310.65,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,reopened,2011-04-10 22:01:11,987.03,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,3,2011-04-06 07:43:30,1000.37,1,,,"b'b"" Well", I didn\'t want to close this issue, sorry. I have one idea to implement. Instead of importing private keys a transaction is created which sends money from supplied private key to any of user\'s address. That\'s how retrieving of bitcoin paycards may work. Party A generates a new address and sends money to it. Then it exports the private key, creates QR-code and prints it on pretty background. Then party A gives that piece of paper to party B. B makes a photo with its phone, webcam or any other device, recognizes QR-code and gets the private key. Then B executes the retrieval procedure (either via interface or via daemon) and fills in the form with two fields, the private key it got and the address it wants to receive money to. Bitcoin sends a regular transaction using this data, B gets the money and this private key become pretty unusable. I see no need to import the private key in the wallet, it\'s much safer to send all money from that address to yourself rather than just use it, because party A may get it back at any time. The shorter period between getting the key and retrieving the money the better. Of course," if there are use cases of importing your own keys into wallet it may be implemented but for now it\'s easier to just send money from one wallet to another.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,4,2011-04-06 07:43:30,614.68,,1,,b'b\' What you\\\'re suggesting is partially implemented already, see url  and url  What I\\\'m working on now is a  function for entire wallets (or selected parts thereof). I can imagine some use cases: backups, shared wallets (though that\\\'s still asking murphy to visit you), debugging (quite useful to be able to see the contents of your wallet, and per-key available funds), recovery (exporting and importing a corrupt wallet file will often get you your funds back)," ... Maybe later it can be combined with jgarzic\\\'s scratchoff patch to have a ""send funds to new address"," and export that"" and a ""send all available funds in imported file to own address"" mode as well.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,5,2011-04-06 07:43:30,1425.35,,1,,"b""b' This issue has been flagged for inactivity", and will be closed in 15 days from this message if action is not taken. To prevent closure, kindly comment as to why the issue should remain open. If a time extension is needed to commit code," please respond to this comment or contact QA@.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,6,2011-04-06 07:43:30,1298.75,,1,,"b""b' Closed pending commits / additional commentary. The inactive label has been applied.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,closed,2011-10-20 05:53:18,472.12,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,145,closed,-,-,-,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,opened,2011-04-14 05:34:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,title,2011-04-14 05:34:36,00:00,,1,,"b""b' UPnP segfault'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,body,2011-04-14 05:34:36,00:00,,1,,"b'b"" Reproduction steps: When UPnP port mapping is enabled", open settings," and attempt to uncheck UPnP port mapping. Expected behavior: Checkbox unchecks. Observed behavior: Segfault. I\'m not sure why there aren\'t full symbols. I\'m using the standard makefile with the -g option. Note that I\'ve also seen a segfault when originally enabling UPnP port mapping after clicking the checkbox and hitting okay. I can\'t reproduce it now because I\'m unable to disable port mapping due to the segfault above.  information:git checkout as of b37f09aa2e80b17028ad7fe1e87362c0f07c7406Debian 5.0Linux 2.6.26-1-686 #1 SMP Sat Jan 10 18:29:31 UTC 2009 i686 gcc 4.3.2miniupnpc 1.5""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,1,2011-04-14 05:34:36,6.95,,1,,"b""b' Apparently attempting to check the checkbox is unnecessary. All that I need to do is open the settings when UPnP is already enabled", wait a moment," and then get the segfault above.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,closed,2011-04-14 05:41:33,6.95,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,reopened,2011-04-14 05:41:46,0.22,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,2,2011-04-14 05:34:36,7.25,,1,,"b""b' It keeps getting better and better.. All I need to do now is leave the bitcoin client running on the main screen without even opening the settings"," and it segfaults as above within a minute.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,3,2011-04-14 05:34:36,962.88,,1,,"b'b"" :940 gets called when no  port mapping device has been found.  I don\'t know what the UI could have to do with this.  Is it possible the box (un)checking timing lining up just happened to be a coincidence?Also"," do you have UPnP on on your router when this happens?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,4,2011-04-14 05:34:36,498.52,,1,,"b""b' Yup", I think clicking the UI checkbox has nothing to do with it, since the segfault occurs if the client just sits there for a while doing nothing (see my comment above). UPnP is enabled on my router," but no port forwards are enabled.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,5,2011-04-14 05:34:36,142.22,,1,,"b'b"" Hm", I can\'t reproduce.  What router are you using (do you happen to know what UPnP library it is using?)Does the miniupnpc example client work (it comes with miniupnpc, upnpc_," try it with -a your internal IPv4 8333 8333 tcp)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,6,2011-04-14 05:34:36,440.07,,,1,"b'b"" My Linksys WRT54GL router is running dd-wrt. I\'m not sure what UPnP library it\'s using. Interestingly", upnpc doesn\'t appear to find the router: But then I disabled my local firewall, and I get this: (IPs masked.) So then I tried bitcoin again.. No crash, even after leaving it running for a while! I then stopped bitcoin, re-enabled my firewall, and restarted bitcoin. Sure enough," bitcoin crashed quite reliably within a few seconds. So the segfault appears to occur when using UPnP with a firewall that prevents UPnP packets from being sent. The firewall configuration is a pretty standard iptables setup. Outgoing-initiated connections are allowed. Most incoming packets are dropped. Packets for existing connections are allowed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,7,2011-04-14 05:34:36,407.42,,1,,"b'b"" Hm"," I still can\'t seem to reproduce this issue.  Can you narrow it down to one individual or set of iptables rules?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,8,2011-04-14 05:34:36,189.6,,1,,"b""b' If I add a rule to just drop all input packets", and then I start bitcoin, that will trigger the segfault:  And then if I remove the drop rule and start bitcoin," no segfault.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,9,2011-04-14 05:34:36,464.52,,1,,"b""b' Still cannot reproduce", maybe someone else can?Do you still get the segfault if you comment out :940 (FreeUPNPUrls(&urls)," probably creating a memleak)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,10,2011-04-14 05:34:36,479.2,,1,,"b""b' Yes"," commenting out that line does prevent the segfault from occurring.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,11,2011-04-14 05:34:36,19.7,,1,,"b""b' I updated to commit bf3a0902ef98365d803e4a03853dbf0f83511026 and the segfault still occurs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,12,2011-04-14 05:34:36,39.2,,1,,"b'b"" I think I found the problem. At :909", UPNP_GetValidIGD() is called to, among other things, initialize the urls parameter. The documentation for miniupnpc.c\'s UPNP_GetValidIGD() is as follows: To me, that suggests that we should only call FreeUPNPUrls(urls) if the UPNP_GetValidIGD() return value is non-zero. However at :940, we\'re calling FreeUPNPUrls(urls) if UPNP_GetValidIGD() returns any value other than 1. And I confirmed that on my machine, with the firewall on, the return value is zero. Because urls is uninitialized at the time FreeUPNPUrls(urls) is called," it\'s probably trying to free garbage pointers and thus causing a segfault.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,13,2011-04-14 05:34:36,89.17,,,1,"b""b' Looks good to me"," added a pull request for that and one other small thing at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,closed,2011-04-19 06:17:56,36.17,0,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,14,2011-04-14 05:34:36,538.78,1,,,b'b\' I think this bug may have returned -at least, as of commit 93193c8ff, I\\\'m getting a new seg fault on line 1164 of , inside this call: In GDB, the value pointed to by as of the seg fault \\\'d by that point?  Or, the problem is that they\\\'re all NULL when free()\\\'ing is attempted -this seems more likely, from what I can see so far.  According to the docs for UPNP_GetValidIGD(), which filled in  , if the function\\\'s return value is non-zero, then FreeUPNPUrls() should be called on later.  Well, we\\\'re in the case where the return value is 1 (see conditional earlier in the code), but  FreeUPNPUrls() is definitely not happy, because it is calling free() on an invalid pointer. Unfortunately I don\\\'t have the libminiupnpc sources at hand, otherwise I\\\'d dig in further, but FWIW the stack trace is: One possible clue: Earlier in :ThreadMapPort(), is allocated in this call: My system (Debian  testing distro) appears to have libminiupnpc 1.9," which corresponds to the inaccurately-labeled ""miniupnpc 1.6"" case above.  In that case", an pointer is passed, but is never checked.  Is it possible that if something goes wrong with upnpDiscover(), then later when we pass the resultant pointer as the first argument to UPNP_GetValidIGD(), there is something wrong with and thus with the results of UPNP_GetValidIGD()? I don\\\'t have time to debug further right now.  I\\\'ll try to look more into it, as soon as I get a chance to build latest libminiupnpc from source and rebuild bitcoin (with full debugging info) against it.  In the meantime, I hope this report helps. -Karl\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,15,2011-04-14 05:34:36,1229.9,,1,,"b""b' Okay"," bug goes away with latest libminiupnpc-dev.  See url  for details.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,16,2011-04-14 05:34:36,665.1,,,1,"b'b"" Thanks for reporting this and figuring this out. At least when someone else stumbles on the problem they\'ll have a place to look.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,156,closed,-,-,-,1,14,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,opened,2011-04-24 19:15:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,title,2011-04-24 19:15:34,00:00,,1,,"b""b' RPC interface hangs on getaccountaddress with empty wallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,body,2011-04-24 19:15:34,00:00,,1,,"b'b\' If ""getaccountaddress"" is the first RPC method to be called on an empty wallet"," it will hang and crash the RPC interface.To reproduce:1) remove 2) start ""./bitcoind""3) check if running with ""./bitcoind help""4) run ""./bitcoind getaccountaddress foo""5) observe that the call never returns Note: This will not happen"," if you call ""getinfo"" or ""getnewaddress"" (and possibly others) before the call to getaccountaddress. Some debugging shows the hang to happen on line 348 in  when GetKeyFromKeyPool() is called.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,1,2011-04-24 19:15:34,125.68,,1,,"b""b' This is on Debian Squeeze"," with libdb4.7 and build with USE_UPNP undefined'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,2,2011-04-24 19:15:34,155.75,,,1,"b'b"" ArtForz was able to track this down further:The problem is that GetAccountAddress() in  starts an atomic db operation with ();If may then happen", that GetKeyFromKeyPool() is called and when the key pool is not topped up, new keys will be generated and written to the database. This write operation then blocks," presumably waiting for the atomic operation to be completed. I\'m not sure what a good solution would be. I tried a workaround here: url That contains a method to top up the key pool separately and does though before starting the atomic db operation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,closed,2011-04-24 23:57:00,281.43,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,reopened,2011-04-24 23:57:23,0.38,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,3,2011-04-24 19:15:34,650.87,,1,,"b'b"" Seems to be fixed. I can\'t reproduce it anymore.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,closed,2011-08-28 10:47:52,650.48,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,185,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,opened,2011-05-03 11:46:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,title,2011-05-03 11:46:23,00:00,,1,,"b""b' Support for name lookups in -connect and -addnode'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,body,2011-05-03 11:46:23,00:00,,1,,"b""b' A new option -dns is introduced that enables name lookups in  -connect and -addnode", which is not enabled by default, as  it may be considered a security issue.A NameLookup function is added that supports retrieving  one or more addresses based on a host nameCAddress constructors (optionally) support name lookups.The different places in the source code that did name lookups  are refactored to use NameLookup or CAddress instead (dns seeding,  irc server lookup, getexternalip," ...).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,1,2011-05-03 11:46:23,135.02,1,,,b'b\' This is a recent rough draft," but it needs improvement. Think about the object structure a bit.  You want a ""CAddress factory""", that will create one or more CAddress\\\'s from a DNS lookup.  Supporting a multiple-address lookup from _inside_ a singleton address object is awkward," because DNS lookups have a one-to-many relationship between DNS names and addresses. The ""create higher nIndex"," until address returned is invalid"" is unusual for this reason", and the code should be refactored. You want a helper (CAddressFactory?) that returns one or more CAddress objects, from a DNS lookup.  Because a DNS lookup may produce multiple addresses, this cannot be inside the CAddress implementation itself.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,2,2011-05-03 11:46:23,1280.47,,1,,"b""b' I agree", actually. I moved the lookup code to a NameLookup function that creates a CAddress or a vector of those, and is used in the (single-address only) lookup version of the CAddress constructor," for convenience.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,closed,2011-05-04 11:21:52,1415.48,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,reopened,2011-05-05 13:19:39,117.78,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,3,2011-05-03 11:46:23,213.35,,,1,"b""b' ACK"," thanks for revising'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,4,2011-05-03 11:46:23,1242.15,,1,,"b""b' Forum thread url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,5,2011-05-03 11:46:23,12.75,,,1,"b'b\' My finger was hovering over the ""Merge pull request"" button", but I found a last minute issue. Eventually, we do want to support IPv6.  Satoshi reserved space for it in the P2P protocol address storage area, and it will be needed in years to come, to connect some clients. As such, please separate hostname and port into two distinct function parameters / variables," and do not combine them into a single string ""host:port""", only to be parsed and separated in NameLookup() Rationale:1) It is recommended due to IPv6 that this convention be avoided.  IPv6 addresses contain a colon, implying that proper parsing requires users to specify a bracketed string, if you are specifying a port:  [0:1:2:3:4:5:6:7]:8333.  For this reason, all new APIs -most notably, libc function getaddrinfo(3) -always keep hostname and port separate. 2) gethostbyname(3) is deprecated, and we need to switch to getaddrinfo(3).  The commit is fine as-is, and relies on a well-tested API, so I did not request revision.  But long term, again due to IPv6, it is recommended that all applications use getaddrinfo(3).  This function is supported in winsock, freebsd (macos) and linux, all our supported platforms. So, separate hostname and port, and you\\\'re golden with this commit. Thanks.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,6,2011-05-03 11:46:23,6.67,,1,,"b""b' I actually started writing this patch by using getaddrinfo", since its interface is much cleaner and supports seamless upgrading to IPv6. Not knowing what the compatibility of that is with other operating systems, i sticked to gethostbyname. Considering IPv6 hostnames, I would suggest first trying to parse the string passed as [host]:port, and if this parsing fails, resort to host:port. Otherwise we will still need some function somewhere to do that parsing anyway," if people want to pass an address including a port number on the command line or config file somewhere.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,7,2011-05-03 11:46:23,596.02,,1,,"b""b' Added string+port number constructors.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,8,2011-05-03 11:46:23,6.22,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,closed,2011-05-12 21:31:25,491.77,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,192,closed,-,-,-,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,opened,2011-05-09 18:56:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,title,2011-05-09 18:56:35,00:00,,1,,"b""b' Update RPC server to use asynchronous IO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,body,2011-05-09 18:56:35,00:00,,,1,"b'b"" This patch set updates bitcoin\'s RPC server to use boost::asio\'s async_read", _write, etc instead of their non-asynchronous versions. The server still exists as a single separate thread, but the async calls should greatly improve performance under high load. The next step in robustifying the RPC server is to create a pool of threads for the RPC server," each of which handle a number of asynchronously reading and writing connections.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,1,2011-05-09 18:56:35,615.02,,,1,"b""b' This works great for me as is and is a good first step to fixing this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,2,2011-05-09 18:56:35,831.18,,1,,"b'b"" Can you rebase? This doesn\'t apply to current tree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,3,2011-05-09 18:56:35,474.83,,1,,"b""b' Rebased to current tree.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,4,2011-05-09 18:56:35,915.33,,,1,"b""b' Using this patch on a heavily loaded bitcoind"," I am getting quite a few:reservekeyfromkeypool(): read failedfrom send transactions. I backed out the patch and so far so good but time will tell. Are you aware of any wallet locking issues with this async code?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,5,2011-05-09 18:56:35,547.72,,1,,"b""b' Can you rebase with latest version?  With transaction fee 0.0005 ?Why this important pull still not merged with upstream?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,6,2011-05-09 18:56:35,349.35,,1,,"b'b"" Any updated test results"," from heavily loaded bitcoind\'s?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,7,2011-05-09 18:56:35,1158.72,,,1,b'b\' I\\\'m running this patch on a loaded server. It works fine," but I\\\'ve seen one problem. If I do ""bitcoind listtransactions"" I get a correct list of transactions. If I do ""bitcoind listtransactions """" 1000"" I get:error: couldn\\\'t parse reply from server\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,8,2011-05-09 18:56:35,11.47,,1,,"b'b"" Any chance you can look at wireshark output", or some other way of dumping the network traffic," and see what\'s going on?  Sounds like output was truncated somewhere.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,9,2011-05-09 18:56:35,5.07,,1,,"b'b"" Yep"," I\'ll do that in a day or so and report back.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,10,2011-05-09 18:56:35,492.95,,1,,"b'b"" I don\'t have the dumps I made handy but I\'ve seen this issue as well. It only seems to happen on large RPC calls like listtransactions. I actually ran across it testing out sipa\'s showwallet branch for privkey  and didn\'t make the correlation until seeing your comments. Reverting this makes it stop happening. So there\'s definitely an issue here and this shouldn\'t be pulled until resolved. The dumps I did showed it just cutting off in the middle sometimes or sometimes leaving out chunks of the response that made the json not validate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,11,2011-05-09 18:56:35,161.37,,,1,"b'b"" Thanks for the testing guys. I\'ll look into this issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,closed,2011-06-17 15:39:35,1243.0,0,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,reopened,2011-06-17 15:39:48,0.22,0,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,12,2011-05-09 18:56:35,1425.85,,1,,b'b\' Some more info. It also happens on RPC requests _receiving_ a lot of data. Eg," sipa\\\'s importwallet. The ""alot"" seems to be around the 1k boundary or so from my very brief testing.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,13,2011-05-09 18:56:35,438.83,,1,,"b'b"" I\'m willing to pay to get this fixed and working in production use. Also looking for a keep-alive solution which would reuse connections to bitcoind.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,14,2011-05-09 18:56:35,1215.43,,1,,"b'b"" See comment above. A possible fix: url  I\'m not familiar with boost though"," so there might very well be a better solution.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,15,2011-05-09 18:56:35,377.33,,1,,"b'b"" If your plan is to optimize the RPC code", you\'re kind of barking up the wrong tree. The socket I/O is only about 3% of the load coming from the RPC code. If you just want it to handle more than one connection at a time and keepalives, just dispatching the RPC to a thread (and fixing the protocol handler to close the socket when it\'s the right time) does it. The breakdown is, roughly:30% Do the actual operation (various based on the operation, of course)20% Parse JSON request20% Generate JSON reply15% Parse HTTP 4% Check  3% Socket I/O 2% Make JSON reply 1% Send HTTP reply This is still the right thing to do. However, there are much simpler and less invasive ways to accomplish the same thing. Now, if you had done this for the net code," that would actually make a huge difference.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,16,2011-05-09 18:56:35,15.32,1,,,b'b\' @JoelKatz:  you missed the point.  This is not an optimization, but a big step towards correcting a major design flaw.  The current RPC code executes HTTP requests in order," in a FIFO queue. You can find examples of this logic in ""My First TCP Server"" style code examples", but never in any production server.  A synchronous," FIFO approach stalls all clients except the ""current"" one.  If the current client is", itself, stalled or slow or misbehaving, then all other clients suffer. Asynchronous I/O +  keep alives are desperately needed to solve obvious problems seen in the field by heavy RPC users.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,17,2011-05-09 18:56:35,96.33,,,1,"b'b"" As I said", that issue is more easily solved by simply dispatching the RPC to a thread and making the trivial fixes to the keepalive logic. There aren\'t enough RPC connections, and the operation order is always , so you don\'t get any benefit from asynchronous I/O. In contrast, in the \'net\' code," you have many connections and unpredictable operation order. That code would significantly benefit from async I/O.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,18,2011-05-09 18:56:35,1.6,,1,,"b'b"" One thread per RPC connection is unscalable in many modern workloads.  That is also potentially DoS\'able"," if you\'re not careful.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,19,2011-05-09 18:56:35,25.17,,,1,b'b\' I don\\\'t think many people, if any, expose their bitcoin RPC connections to the world. So I don\\\'t think the DoS issue is particularly important. I guess you could argue that they don\\\'t because they can\\\'t, and if they could, they might. But I think most people run a bitcoin client on each machine that needs to issue RPC queries and should bind their RPC listening sockets to \\\'localhost\\\' only. As for RPC not being scalable in modern workloads, I would argue that modern workloads include proper support for keepalives and don\\\'t require large numbers of connections. If there\\\'s a realistic case where asio for RPC provides any benefit over thread-per-connection with proper keepalive support, I don\\\'t know what it is. Again," I still think this patch is ""the right thing to do""", but I don\\\'t think there will be any actual benefit in any realistic use case. (Again, over dipatching the RPC calls to threads and fixing the broken HTTP keepalive implementation. You have to at least do that.)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,20,2011-05-09 18:56:35,10.65,,1,,"b""b' Any rebase / update for current tree?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,21,2011-05-09 18:56:35,260.23,,1,,"b""b' The pull has become unmergeable (without conflicts)", and will be closed in 15 days from this message if action is not taken. To prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed," please respond to this comment or contact QA@.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,22,2011-05-09 18:56:35,335.22,1,,,"b'b"" Sorry guys"," I don\'t have the time to maintain this pull indefinitely. Anyone please feel free to rebase and maintain yourself. I think it\'s an important patch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,closed,2011-09-30 13:41:33,1321.75,2,15,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,reopened,2011-09-30 13:41:39,0.1,2,15,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,23,2011-05-09 18:56:35,958.1,,1,,"b""b' Closed pending rebase / additional commentary. The rebase label has been applied.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,closed,2011-10-20 05:39:39,958.0,2,16,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,214,closed,-,-,-,2,16,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,opened,2011-05-12 22:04:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,title,2011-05-12 22:04:33,00:00,,1,,"b""b' Wallet and key import and export'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,body,2011-05-12 22:04:33,00:00,,1,,"b""b' Introduces four new RPC calls:dumpprivkey:  retrieve the private key corresponding to an addressimportprivkey: add a private key to your walletremoveprivkey: remove a private key from your wallet dumpwallet:  export the contents of your wallet in various waysimportwallet:  a dumped wallet into your own. The private key format is analoguous to the address format. It isa 51-character base58-encoded string", that includes a version numberand a checksum. The wallet format is JSON-based, and includes:addresses (informational, optional)private keysamounts per balance (informational, optional)blocks where addresses were first used (optional)ids of transactions in which addresses were credited (optional)labels (optional) It specifically does not contain:sender address booksettingsaccount informationunconfirmed wallet transactions Note that playing around with  and moving addresses around between wallets may result in double-spends," which may result in corrupted wallets. See url  for a solution'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,1,2011-05-12 22:04:33,125.37,,,1,"b'b"" Nice!  I\'ll have to find some time to try to break it... is getting way too big; maybe this would be a good time to start breaking it up into separate .cpp files with related functions (most of this code could be "," maybe....)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,2,2011-05-12 22:04:33,285.47,,1,,"b""b' Another feature that would be really really handy would be the ability to specify an account for the importprivkey command'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,3,2011-05-12 22:04:33,714.37,,1,,"b""b' Discussion is here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,4,2011-05-12 22:04:33,781.95,,,1,"b""b' I think this is useful for wallet security (print out a private key", stick in safety deposit box)," so prioritizing a rebase for this would be appreciated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,5,2011-05-12 22:04:33,674.37,,1,,"b""b' Rebased against master", a few bugs fixed," and split off into separate source file. TODO: known wrong balance cached when importing keys'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,6,2011-05-12 22:04:33,375.72,,1,,"b""b' Since this uses the ifstream class"," it needs to include fstream in headers.h to build in MSVC.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,7,2011-05-12 22:04:33,855.98,,1,,"b'b"" I\'ve rebased the code against Matt\'s newenc"," plus some other refactorings. I\'ll close the pull request until those are merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,closed,2011-07-11 13:37:46,933.22,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,reopened,2011-07-13 09:59:25,1221.65,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,8,2011-05-12 22:04:33,1260.0,1,,,"b'b"" Ok", reopened because github doesn\'t seem to track updates to the branch while the pullreq is closed, but this still depends on #403. Also, i\'m not convinced how stable the wallet dump format is yet, so I\'ve split the last commit in two," allowing merging of only key .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,9,2011-05-12 22:04:33,738.42,,1,,"b'b"" Didn\'t build for me::273:65: error: \\xe2\\x80\\x98PubKeyToAddress\\xe2\\x80\\x99 was not declared in this scope""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,10,2011-05-12 22:04:33,1038.85,,1,,"b""b' @lachesis: should be fixed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,11,2011-05-12 22:04:33,414.88,,,1,"b""b' I noticed some weird behavior with transactions heard over the network on imported keys: Kind of a short address there\\xe2\\x80\\xa6 :)  (from a checkout this morning)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,12,2011-05-12 22:04:33,6.53,,,1,"b'b"" It\'s really slow to import addresses one at a time\\xe2\\x80\\x94 giving a rescan for each.  If someone feels adventurous", deferred lazy rescan in a thread," an import that call that takes many would be nice.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,13,2011-05-12 22:04:33,1235.5,,1,,"b'b"" Rebased against master", and now includes a feature-complete \'removeprivkey\' call (should remove the private key, the address book entry, redundant transactions, and account information). I don\'t have time to test this the coming weeks, but if  people want to try it," be my guest.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,14,2011-05-12 22:04:33,1294.37,,1,,"b""b' rebased against 0.4.0rc1"," not tested after rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,15,2011-05-12 22:04:33,790.93,1,,,"b'b"" I think the existence of url is a strong argument against this functionality\\xe2\\x80\\x94 the feature isn\'t done yet and people are already creating websites which compromise bitcoin user\'s security. Official  functionality will increase the apparent legitimacy of attacks exploiting the functionality and bitcoin will suffer the bad PR when users hurt themselves using it. :-/""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,16,2011-05-12 22:04:33,909.0,,1,,"b""b' @gmaxwell: What part of this functionality constitutes an exploit?  The idea that one should be able to have their own private keys on paper", or on bitbills, or on physical bitcoins, etc. should be something that enhances security," not detracts from it.  Please explain how security is compromised.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,17,2011-05-12 22:04:33,1314.05,,1,,b'b\' @sipa: Nice mod!@gavinandresen re: testing: Works beautifully on Debian squeeze i686. All added functionality tested and working properly.@casascius: +1 for adding Mini Private Key format. It should be pretty easy to implement. Also," I believe the problem @gmaxwell was addressing is that scammers can generate ""secure"" keypairs for their victims and then never relinquish control of the private key", thus allowing them to steal funds from those accounts later\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,18,2011-05-12 22:04:33,16.33,,,1,"b'b"" @enmaku",@gmaxwell: I wasn\'t sure if keeping the private key was the concern here, because  appears to have been created with that concern in mind.  The generator at  is actually quite novel from a security perspective: the generation is entirely client-side and implemented in javascript in easy-to-read code in a single self-contained html file that contains no references to any network resources.  The QR codes are generated from scratch, client-side, as well.  This is exactly how a personal address generator should be.  One can save the single .html file to disk and use it to safely generate bitcoin addresses straight to their printer while disconnected from the internet.  To me," it\'s a shining example of a good idea rather than an exploit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,19,2011-05-12 22:04:33,4.13,1,,,"b'b"" @casascius: I think the concern is that while you and I might check the source", 99% of folks won\'t and eventually one will crop up that phones home and makes a big database of privkeys ripe for exploitation. Realistically though this isn\'t our problem any more than any other product or service whose userbase is regularly phished. We can put the info out there, but people want this feature and if it\'s not in the main client it\'ll be in external tools like pywallet. We can\'t stop those who want to from importing addresses, merging wallets," etc. The best we can do is put up big scary popups in the GUI implementation informing folks that messing with the wallet is dangerous and if they do stupid things they\'ll get bad results.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,20,2011-05-12 22:04:33,9.35,,,1,"b'b"" @enmaku: I share the concern", and am appreciative of the fact that the author of this website makes no attempt to explain what his website does to newbies.  You have to know why you\'re there and what the number means, otherwise it is just a gibberish generator.  And the part I appreciate the most is simply that he has released functional code that can be clipped and put into other environments where the source is ostensibly trusted. (e.g. on MtGox, or on the LinuxCoin ISO).  Free bonus is it\'s platform independent. I think the best thing that can be done to the GUI implementation would be to include this functionality where the user can get at it, and seek to be less user unfriendly," then websites like this wouldn\'t have a reason to exist.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,21,2011-05-12 22:04:33,646.35,1,,,"b'b"" One more thing... the bigger the block chain gets", the longer importprivkey takes to run, mainly because of the calls to rescan the wallet.  I want this in the main client badly because I use it all the time and believe that keys on paper will help solve the black eye Bitcoin has received over security incidents, but it occurs to me that there is no way that this would be taken seriously as acceptable in the main client if it needs to pause for 90+ seconds (and growing) to perform an import.  The client itself needs badly to maintain an index for the purpose of doing that rescanning (if it doesn\'t do so already)," among other useful purposes I can think of.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,22,2011-05-12 22:04:33,205.3,,1,,"b'b"" Keeping a database of all addresses and all outputs to them would be a massive cost that isn\'t justified for just somewhat faster importing of addresses. Take into account that when more complex scripts are supported", this becomes even harder, as there could be outputs with several possible addresses or even combinations thereof. The solution is using importwallet instead of importprivkey. It supports annotating keys with information about which transactions or starting in which block they are used," and only doing selective rescanning.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,23,2011-05-12 22:04:33,162.5,,1,,b'b\' With respect to the massive database of addresses... I could see myself trying to implement that down the road as my familiarity with the code gets better, but possibly in the form of a patch or an option that is turned off by most people because it\\\'s only useful to a specific audience: server operators. The specific real-world everyday application it would support would be so that websites (e.g. MtGox," or marketplaces that accept bitcoin deposits) could accept a ""deposit by typed private key""", and the private key wouldn\\\'t necessarily be imported, but rather, bitcoind would do one of two things: either, one immediately create and broadcast a one-off transaction (without adding the key to the wallet like importprivkey does) that sent the entire balance at that address to a specific one given as a parameter, at which point it would be treated like a deposit that came in externally (with the option of sending only a specific amount, the rest, if any," going back to the original address or to an optionally provided but specific ""change"" address)... or two", offer an RPC query feature that simply coughed up all of the unspent transactions associated with a given address, so that some sort of RPC client could implement the creation of that transaction (a feature I believe is useful in itself for other purposes that also wouldn\\\'t apply to everybody) Such a feature would depend on the ability to quickly find all transactions (standard ones, at least) given an address, and would promote the usability of paper bitcoin wallets and physical bearer items, which in turn is a viable way for joe schmoe  Grandpa to _securely_ manage his bitcoins without needing to learn about wallet encryption and keyloggers.  If bitcoind is tied up for a minute and a half to import an address, this will be impossible in a MtGox-like server scenario.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,24,2011-05-12 22:04:33,592.12,,1,,"b""b' OK", here are the goods.  Revised mini private key support that consists of adding two SetSecret functions to CBitcoinSecret to override the ones in its base class  and no modifications anywhere else.  I suppose this is a lot cleaner," and it requires only modifying base58.h and not .  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,25,2011-05-12 22:04:33,31.32,,1,,"b'b"" What do other people think about support for @casascius\' mini private keys?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,26,2011-05-12 22:04:33,11.38,,1,,"b'b"" I think it could be a useful standard for short keys"," though as a contributor on casascius\' deterministic wallet generator I may be a bit biased ;)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,27,2011-05-12 22:04:33,24.95,1,,,b'b\' I\\\'m not super-keen on the reduction in collision resistance compared to 160-bit addresses (keep in mind," general any-any ""birthday paradox"" collision is sqrt(brute force)", so only 61.5 bits\\xe2\\x80\\x94 but it\\\'s actually lower than that," the ""CRC"" check reduces the keyspace by another 16 bits\\xe2\\x80\\x94 so only 53.5 bits of collision resistance. If these are widely used the chances of two people accidental ending up with the same key is not so astronomically low that we could wave away critics who complain that this is a flaw in bitcoin. 717 cycles of the hash is _worthless_ as strengthening", I\\\'m guessing this was some number picked by someone with a horribly slow interpreted implementation of SHA256??  Figure a random desktop CPU can do on the order of 1, conservatively. If the count isn\\\'t going to be increased to a reasonable number (e.g. >100k), then it really should just be set to 1: simpler and doesn\\\'t give a false impression of security.  Even 100k cycles would still result in technically usable key generation times (e.g. 12.7s worst case assuming 1Mh/s), but if that is too slow the validity check could be reduced to  the 10,000 cycle point (max ~1 sec generation) then another million cycles (1 second import) could be applied before you can get the public key (and thus _address_) from a valid candidate key. I\\\'m doubly concerned with the computational complexity here due to the fact that our own project has helped lower the cost per sha256 operation so much. :) The same cautions I made about using a hash function we\\\'ve made so fast for the wallet crypto apply here but double so because we can\\\'t change this. Also, the way the stretch is designed every intermediate step is has no feedback of the initial material. This means that internal collisions in the hash will reduce the space further. A proper PBKDF algorithm should be used.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,28,2011-05-12 22:04:33,21.1,1,,,"b'b"" (ah", I\'d missed on my initial read that the iterated hash is only used for the \'CRC\' check\\xe2\\x80\\x94 this makes the colissions in the hash less serious," but it also means that collision attacks on the 22 character version are probably practical (or at least would be under wide usage) owing to the size of the space and the fairly low cost of checking them)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,29,2011-05-12 22:04:33,8.72,,1,,"b'b"" It\'s a reduction to be sure", but a namespace of 22^58 possible keys is still pretty massive. That\'s what, about an 8.7e-63 chance of finding a specific collision at 200 MH/s running for a year? Even if a million addressed existed to potentially collide with that\'s still ~8.7e-57 for a single 5830, and I\'m pretty sure mining is still more profitable. Besides, these addresses aren\'t intended for the same kind of use as full Bitcoin addresses are," they\'re specifically for space-limited situations and for such scenarios the slight increase in risk may be worth it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,30,2011-05-12 22:04:33,30.9,,1,,"b""b' The total keyspace is 58^21/2^16 keys: 21 characters with 58 possibilities each"," and of this total one key in 65536 will pass the validity check. It requires (65536_1 + 256_716 + 1)*58^21/2^16 = 2^124.94 SHA256 steps to generate all minikeys.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,31,2011-05-12 22:04:33,20.28,,1,,"b'b"" On the other hand", I\'m not sure why we are giving up any level of security at all. A 29x29 pixel QR code can encode 56 base36 characters, which is equivalent to a full 289 bits (256 + 33 bits crc) of information. Printing 22 base58 requires a similar number of pixels," i believe.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,32,2011-05-12 22:04:33,8.43,1,,,b'b\' First," let me comment on the ""birthday paradox"" argument.  I believe this is a good argument that has been misapplied.  If this were a hashing algorithm that had 21^58 possible outputs for 21^58 possible inputs", then it would definitely apply.  But we are using SHA256.  We are mapping 21^58 possible inputs into a keyspace of 2^256 outputs.  To suggest that SHA256 will only give 2^61.5 unique outputs given 21^58 possible inputs is to suggest that SHA256 is a pretty poor hashing algorithm. Let me put it another way.  If I decided that mini private keys had only 1 character (so, 58 possible keys going into SHA256), the same birthday paradox argument applied in the same way would suggest that SHA256 would only give sqrt(58), or about seven, possible unique outputs given these 58 inputs, and that the other 51 of them would be SHA256 collisions with one another.  It goes without saying that\\\'s not the case. Next, let\\\'s review the process of one iteration of trying to brute force one of these keys.  This isn\\\'t hash cracking, because we don\\\'t even have the target hash value.  That\\\'s because the hash value IS the asset not the plaintext used to arrive at it, as would be the case in password cracking. To try one iteration (set the CRC aside), one would have to do the SHA256, and then convert that to a Bitcoin address," and then check that against the set of all Bitcoin addresses known to have funds.  The most expensive part of this process by far is the ""convert to Bitcoin address"" step", which involves an elliptic curve multiplication.  In fact, that step is so expensive as to render the SHA256 part nearly moot, whether it\\\'s once or 717 times. The reason why I chose the number 717, with an option for 1 round, is specifically to keep it feasible to GENERATE these keys within slow interpreted languages like Javascript.  To actually generate these keys requires a brute force SHA256 effort to find one with eight zero bits.  If something like 100,000 rounds were required, the minimum expense to generate these keys would be high. I looked at it this way.  To generate a mini key that passes the check after 1 round, that requires on average 256 SHA256 operations.  To generate a mini key that passes the check after 717 rounds, that requires on average over 180,000 rounds (717*256).  At some point, it almost becomes less expensive to do the EC multiply to see if the key has funds versus eliminating it through the CRC," and doing more rounds of SHA256 isn\\\'t going to serve any useful purpose. I\\\'m not sure 58^21/2^16 is the right math... as the CRC check is ""either or"".  The check passes with zeroes on the first round", OR zeroes on the 717th round, so about 1 in 128 random strings will pass the check.  The math is probably better expressed as 58^21 / 2^7 in the worst case. Finally, these are being used for physical bitcoins worth 1 BTC.  That\\\'s the payoff for going to the effort of cracking one.  The application this would be likely adopted for by others would be to help small payments move around from hand-to-hand, face to face, since these are the applications where space is at a premium.  By no means am I recommending that someone use a 22-character code for their life savings.  The low entropy is no secret, I mentioned it myself in the wiki article.  I penciled in a 26-character version for applications where 22 characters (what I felt was the bare minimum) wasn\\\'t going to cut it.  If we turned on a 30 character version, we\\\'d probably have a keyspace that exceeded the 160 bits present in a Bitcoin address to begin with, though I didn\\\'t do it because I didn\\\'t consider it necessary.  It\\\'s a trivial change if consensus says otherwise.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,33,2011-05-12 22:04:33,29.0,,1,,"b'b"" @sipa: Do you suggest that a 56-character private key format that uses only uppercase be implemented instead of", versus in addition to, the 22 character format I propose?  You make a very good point, in that with such a scheme, a smaller QR code becomes possible without any question as to whether a reduction is lessening security. My physical bitcoins aside, I believe a short-to-type private key format is highly valuable and important to Bitcoin\'s future.  I foresee Joe Sixpack buying bitcoins for cash at a pawn shop or check cashing place, and him receiving them in the form of a pre-made scratch-off card that gets activated (read: loaded) at the register.  Which he will then take to the Bitcoin-accepting online marketplace of his choice, and type it in for instant credit.  He may or may not be able to scan a QR code, and this Joe won\'t be downloading clients or block chains.  Typing 50+ mixed-case characters really sucks (done it numerous times), but especially for Joe.  Even 22 sucks," but that\'s already flirting with the minimum enough and there is not much that can be done about that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,34,2011-05-12 22:04:33,2.52,1,,,"b'b"" I misunderstood one thing: the 0-byte tests are OR\'ed; that means indeed 7 bits of error correction instead of 16. This does mean that if I were to attack", I\'d just try those strings that hash to a 0 byte after 1 step first. Otherwise said, I can calculate half of all minikeys by only doing 256*58^21 SHA256 steps. That\'s not really a problem, but it makes the 717 rounds more or less pointless.We were talking about a different kind of collision resistance: there are 58^21/128 = 2^116 valid minikeys. If there are a lot of these in use (say 2^30), the chance of hitting one by generating a lot of them (which indeed requires an EC multiply + some SHA256 steps) becomes more likely. I think this is only a problem in theory. The real question is how useful it is to have it implemented by default in the client, which encourages people to use a (slightly) less secure system than full keys," which probably suffice for most purposes (imho).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,35,2011-05-12 22:04:33,9.48,1,,,"b'b"" The ec multiply is just slow on our existing cpu implementations.  Gate count wise it\'s _much_ faster than sha256. (of course", you\'ll still also need  1x sha256+ripemd160 to get an address) I think you\'ve missed the point on the birthday paradox issue: I\'m not proposing that this somehow makes it easier to find the private key from the address or anything like that. There are N=58^21 possible keys (minus the ones lost to checking), there are M being used.  These are the only figures you need to know to figure out the probability of two identical keys coming into existence by chance. When M=sqrt(N) it\'s 50%.  The interior operations are as irrelevant as the 86400 seconds in a day are to the traditional birthday paradox example. :) For your use this level of security may be adequate.  But if this is put in the software it will be used for other things, and I don\'t believe it is adequate for very many things. (If you\'d reached 2^160 I\'d have nothing to complain about). I don\'t follow why you did the  check (I\'d correctly used the 7 bit number initially, but sipa corrected me on IRC doh," not that I\'m also not guilty of misreading the code).  Why isn\'t this sha256^n(key)[0]&127==0 ?  The early check reduces the security of the strengthening (and makes analysis harder) without providing a substantial speedup. Generating these keys in javascript is a bad idea. The current browsers JS does not provide an appropriate environment for security-important operations.  The security of the official bitcoin software and its standard feature set should not be compromised by performance considerations related to poor performance in things that are a bad idea to begin with.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,36,2011-05-12 22:04:33,4.73,1,,,b'b\' @sipa:  If you calculated half of all the minikeys and ignored all the ones that needed 717 rounds to generate, you\\\'d only victimize those who elected to use the ones that passed on the first round.  Those who follow the best practice of only using only the ones that pass on round 717, and not on round 1, where able, are not going to be affected.  On the other hand, if you\\\'re a javascript and you need to quickly generate an address to collect a payment that\\\'s going to get swept to another wallet right away anyway, the option for a 1 round key comes in handy. Supporting the import of these private keys in the client doesn\\\'t in and of itself encourage their unnecessary use.  The average joe user isn\\\'t going to be making the decision as to which kind of key to use," these decisions are presumably going to be made by developers who would have the intellectual means to weigh whether generating minikeys versus full keys in their app is a good design decision.  I think it would be irresponsible to put a ""generate minikey"" button in the client.  But I don\\\'t think it serves any useful purpose to not accept them as imports and instead demand the user use some other utility to get the job he already needs done", done.  (Having him find and download the other utility exposes him to a new class of risks by itself, far more frightening than a brute force attack on the key space).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,37,2011-05-12 22:04:33,41.48,,1,,"b'b\' @gmaxwell: I used the ""either or"" check so that there would be a means to generate a crappy key if you only need it for a short time for a crappy purpose.  In other words", if you have the means to select a key that passes the 717 check and not the 1st check, then by all means do that.  That means," to generate a ""better"" key", explicitly discard all the candidates that pass on the 1st check. I agree with you that javascript is a poor environment to be generating keys, and I mention it only for ease of illustration.  Minikeys could be needed in the context of an interpreted language on a server, or on a microcontroller.  Imagine a check cashing shop that sells BTC and uses a VeriFone point-of-sale credit card machine to generate and issue a minicode on a piece of receipt tape a very plausible application.  That little box with its 400 MHz underclocked ARM and 2MB memory might not be able to do 180000 SHA256\\\'s in any short order, and 95% says the dude buying it is probably going to redeem it that same day, so the window of opportunity for a thief is vanishingly short. On the other hand, let\\\'s kick around as granted the conclusion that this is a bad idea.  What do we want Joe Sixpack to do instead when he acquires a private key given to him on paper?  We could make him type 51 characters instead of 22, sure.  We could make him type 26 or 30 as well.  We could make him scan a QR code, but it\\\'s likely he either has nothing to scan it with, or is almost certainly going to have to hand-key it off his cell phone and into his computer, making the QR code of no benefit and nothing more than an extra burdensome step.  I suppose it\\\'s fair to say that a minimum length keycode is universally desirable," and it\\\'s really just where to draw the line of being reckless with security. Let me also propose an alternate solution.  The key space for my proposal is all of those who pass the SHA256 check with the magic byte ""00"".  What if", in addition to this, we define another key space," and that\\\'s all of those 22-character base58 codes who fail my check but pass with magic byte ""01"".  And then we utilize a far more computationally intensive key derivation function to compute the 32-bytes in place of SHA256", that dwarfs both SHA256 and EC in resource complexity, and define that as the best practice for generating such short keycodes.  And then still leave 717 and even 1-round SHA256 as a weak option so that microcontrollers can still stay in the game where needed.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,38,2011-05-12 22:04:33,82.07,1,,,"b'b"" Example: use PBKDF2 whenever SHA256(code + \'?\')[0]==0x01", and further, use the next byte (sha256()[1]) to encode the number of iterations needed to derive the key, exponentially (2^n), so that its difficulty is easily scaled (or 2^(n/4) to increase the useful range of choices).  So a code whose sha256(code+\'?\') starts with 0x01 0x28 would derive the key with 1024 (2^(40/4)) rounds, and one whose check hash starts with 0x01 0x60 would use 16777216 rounds (2^(96/4)).  An upper bound would have to be hardcoded to prevent CPU DoS attacks on servers that accept redemptions," which would be increased by consensus as computing power advanced.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,39,2011-05-12 22:04:33,97.78,,1,,"b'b"" OK", there it is.  Proof of concept with PBKDF2, at least, at .  For testing purposes, I have commented out the wallet scanning, so all the delay experienced can be attributed to PBKDF2 and not the wallet scanning. I also got rid of the 717-round stuff.  I haven\'t used any such codes on physical bitcoins so it can be scrapped right now. So my submission either accepts a 1-round SHA256 if the test hash starts with 0x00 (as used on physical coins), and uses PBKDF2 if the test hash starts with 0x0100 thru 0x0150 (rejecting all else). Using 0x0150 does PBKDF2 with 1048576 iterations, and it takes my machine about six seconds to derive the key at that rate.  Using 0x0128 uses 1024 iterations, and the delay is imperceptible (to me as the user).  If accepted," the hardcoded limit should probably be somewhat lower to avoid DoS\'s. Here are some test keys.Sksec8N4Pb9x3EmKChBq9c ?=0x0128 calls for 1024 iterationsSmbM4uRBu2mQymCsuMKkiW ?=0x0130 calls for 4096 iterationsSou6jrw7YW8oeQjXeS8J5u ?=0x0138 calls for 16384 iterationsSU6ppdqUTS3KWcnZuFxebf ?=0x0140 calls for 65536 iterationsSTk4hKyfJdXdZ2cZG3VByy ?=0x0148 calls for 262144 iterationsSmEVr24rSdaUgnmX8LwpeM ?=0x0150 calls for 1048576 iterationsS172quV4MT1ESiS5REfFQx ?=0x0151 will get rejected due to being past current hardcoded limit. EDIT: I previously had a brainfart and put 16777216 instead of 1048576 iterations.  1048576 is the correct number.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,40,2011-05-12 22:04:33,1201.0,,1,,"b'b\' @sipa: ""What do other people think about support for @casascius\\\' mini private keys?"" Sounds like an extra feature which will need extra attention. Maybe it should be added as an additional commit on top later and should be further discussed under a separate pull request after the ""straightforward"" 51-character base58-encoded  version got added?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,41,2011-05-12 22:04:33,757.68,,1,,"b'b"" **EDIT: I got rid of the below error by adding an include in  for ** I get the following error when I try to build the showwallet branch with gcc 4.6: I\'m using gcc 4.6.1", libc6 2.13 and libboost 1.46 from Debian sid (the Linuxcoin distribution). I have tried with gcc 4.5 as well," same error.The regular bitcoin branch builds without issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,42,2011-05-12 22:04:33,20.17,,,1,"b""b' Thanks for reporting an include was missing. It should be fixed now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,43,2011-05-12 22:04:33,54.55,,,1,"b""b' Thank _you_ for adding this feature. I just tried importing a private key using this version of bitcoind on an offline computer", running Linuxcoin from a USB stick. I am now back in my everyday OS, Ubuntu, and everything seems to have worked fine and I received no errors when importing the key," although it took a while.So consider it a thumbs up for the importprivkey command from here!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,44,2011-05-12 22:04:33,1414.57,,1,,"b""b' I just pulled the other dumpprivkey; is this one now obsolete?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,45,2011-05-12 22:04:33,15.28,,1,,"b'b"" No", this one still contains removeprivkey and . I\'ve rebased them against current master now, but I\'ll close the request until it\'s more clear what  should do (there\'s talk of including addresses," for example).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,46,2011-05-12 22:04:33,0.4,,1,,"b""b' closing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,closed,2011-12-19 15:44:11,344.77,11,29,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,220,closed,-,-,-,11,29,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,opened,2011-05-15 07:17:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,title,2011-05-15 07:17:34,00:00,,1,,"b""b' Make bitcoin include files modular / Qt4 compat'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,body,2011-05-15 07:17:34,00:00,,1,,b'b\' To be able to make an external GUI, I am working on modularizing bitcoin into a library. This push request is basic code plumbing, 100% no functional or build system changes.Put guard statements around header files.Removed macro foreach: conflicts with Qt4 keyword  ," replaced with BOOST_FOREACH.Prefix C++ stdlib structures and functions with std:: in headers; ""using namespace"" in header files is generally frowned upon because it \\\'infects\\\' other files included after it. These are moved to the implementation files.Modularity: and most other header files can now be included without the other shebang (useful for linking external GUI to bitcoin core", part of GUI separation). The include files that need each other, now include each other.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,1,2011-05-15 07:17:34,114.97,1,,,"b""b' You can return to a previous commit in git with git reset HEAD~ hard"," and push that again using git push origin -f master. The pull request will automatically adapt.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,closed,2011-05-15 09:45:54,148.33,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,2,2011-05-15 07:17:34,33.42,1,,,"b'b"" Thanks! now it\'s back to one commit (uhm", sorry for pressing the  buttons," that goes too easy!)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,reopened,2011-05-15 09:46:03,0.15,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,3,2011-05-15 07:17:34,185.57,,,1,"b""b' ACK", looks good to me.  We need to move off of headers.h and this looks like a good first step (plus if it helps with QT compat, and we do eventually move there," Im in favor)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,4,2011-05-15 07:17:34,78.67,,,1,"b""b' Compiles and runs fine. This is a nice step towards cleaning up the code. ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,5,2011-05-15 07:17:34,166.38,,,1,"b'b"" ACK"," good idea.  I\'m going to pull.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,closed,2011-05-15 16:57:06,431.05,2,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,225,closed,-,-,-,2,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,opened,2011-05-17 22:53:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,title,2011-05-17 22:53:11,00:00,,1,,"b""b' Assert Failure on Fedora 14'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,body,2011-05-17 22:53:11,00:00,1,,,"b'b\' Hi I get the following error message on 0.3.21 beta when trying to send a transaction of 0.02 BTC to another user... ../(156): assert ""Assert failure"" failed in EndModal(): either wxDialog:EndModal called twice or ShowModal wasn\\\'t called\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,1,2011-05-17 22:53:11,75.77,,1,,"b""b' This is a manifestation of the error fixed in 2f62b1299f1d2d8e56ff9096017b1f3835b41642.  That said"," it is still an indication of a more underlying error which should be investigated.  Probably an issue in SendMoney.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,2,2011-05-17 22:53:11,469.38,1,,,"b'b"" As an addendum to this issue"," the client first displayed a message box telling me about a transaction fee (0.01) for which I pressed the \'Ok\'  is at that point it displayed the error message above...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,closed,2011-05-18 07:58:20,545.15,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,reopened,2011-05-18 15:47:47,469.45,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,3,2011-05-17 22:53:11,511.67,,1,,"b""b' This bug is related to wxGTK which was removed in 0.5.0.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,closed,2011-12-05 16:30:00,42.22,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,231,closed,-,-,-,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,opened,2011-05-22 14:32:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,title,2011-05-22 14:32:37,00:00,,1,,"b'b"" I\'ve finished simplified Chinese translation for Bitcoin""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,body,2011-05-22 14:32:37,00:00,,,1,"b'b"" It\'s really an interesting software! I\'ve translated it to Chinese. Please accept my changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,1,2011-05-22 14:32:37,183.15,,1,,"b""b' Can you rebase this into a single commit?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,2,2011-05-22 14:32:37,75.15,,1,,"b'b"" It\'s clean now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,closed,2011-05-22 18:50:55,258.3,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,reopened,2011-05-22 18:51:04,0.15,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,3,2011-05-22 14:32:37,74.05,,1,,"b""b' pulled manually'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,closed,2011-05-25 20:04:58,73.9,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,254,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,opened,2011-05-23 09:41:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,title,2011-05-23 09:41:46,00:00,,1,,"b""b' Added -purgetx command line option.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,body,2011-05-23 09:41:46,00:00,,1,,"b""b' When used", purges all transactions from  and forces a rescan.Useful for solving problems with invalid transactions stored in (for example," after  manipulations). Corrected russian translation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,1,2011-05-23 09:41:46,42.98,,1,,"b""b' Can you split the russian translation to a new commit"," and maybe update to latest git (as per url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,2,2011-05-23 09:41:46,66.58,,1,,"b""b' I am a newbie in GIT. Must I fork&clone your branch?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,3,2011-05-23 09:41:46,887.07,,,1,"b""b' No"," just the one russian file.  Just make your own branch (off master) and grab the russian  file from my repo (downloading via github should work fine).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,4,2011-05-23 09:41:46,19.65,,1,,"b""b' Just published a .po file: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,5,2011-05-23 09:41:46,1390.8,,1,,"b""b' I hoped that your po-file is based on the last translation file but it seems that it is not. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,6,2011-05-23 09:41:46,61.2,,1,,"b""b' url  April 02", 2011url  May 15," 2011What is more recent? ;)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,closed,2011-05-25 02:50:03,1028.28,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,reopened,2011-05-25 02:50:21,0.3,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,7,2011-05-23 09:41:46,1061.63,,1,,"b""b' Anyway"," I hope that -purgetx will be in the official client. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,8,2011-05-23 09:41:46,750.87,,1,,"b""b' indeed"," needs rebasing to remove the translations'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,9,2011-05-23 09:41:46,438.98,1,,,"b""b' IMHO this belongs in Bitcointools or other similar software", not in Bitcoin (feature creep and its more wallet recovery which IMHO should be encouraged not using Bitcoin, but using external tools as there is too much chance to make it worse)," but maybe others disagree?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,10,2011-05-23 09:41:46,1135.53,,1,,"b""b' I think that it may be used with -rescan option... So I think it should be in Bitcoin.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,11,2011-05-23 09:41:46,1188.82,,1,,"b""b' Instead", perhaps," there should be a needsrecan key that tools can set?  That would be generally useful for tools that modify the wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,12,2011-05-23 09:41:46,84.48,,1,,b'b\' -rescan only adds transactions not already in the wallet it will never remove things from the wallet. Also," it is possible to force bitcoin to do a rescan by clearing (= setting to a singe 0 byte) the ""bestblock"" entry in .\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,13,2011-05-23 09:41:46,675.82,,1,,"b""b' Agreed", that this is a bit of an esoteric option, that will not be widely used (or tested). It does make more sense as a bitcointools add-on," as BlueMatt suggested.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,closed,2011-12-20 19:46:11,1015.83,1,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,256,closed,-,-,-,1,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,opened,2011-05-26 13:09:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,title,2011-05-26 13:09:05,00:00,,1,,"b""b' Fixed German translation'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,body,2011-05-26 13:09:05,00:00,,1,,"b""b' There were some mistakes in the German translation"," so I fixed them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,1,2011-05-26 13:09:05,92.38,,1,,"b""b' NACK"," why did you change the spacing so much?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,2,2011-05-26 13:09:05,59.47,,1,,"b'b"" I didn\'t change the spacing", Poedit did this. This is because it\'s easier to read," I think. But why should the spacing be a problem?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,closed,2011-05-26 15:40:56,151.85,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,reopened,2011-05-26 15:41:14,0.3,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,3,2011-05-26 13:09:05,27.32,,1,,"b'b"" It isnt", I was just nitpicking, and it makes the commitdiff much harder to read, which isnt ," my poedit doesn\'t do that unless I put spaces in there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,4,2011-05-26 13:09:05,494.95,,1,,"b""b' fixed by matt'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,closed,2011-05-27 00:23:12,521.97,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,274,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,opened,2011-06-06 23:01:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,title,2011-06-06 23:01:35,00:00,,1,,"b""b' Fix CPU Usage bug when using -nolisten and have no connections.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,body,2011-06-06 23:01:35,00:00,,1,,"b""b' 1/2 known Windows CPU Usage bugs fixed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,1,2011-06-06 23:01:35,9.75,,1,,"b""b' Actually", dont pull this yet," way more stuff to come.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,closed,2011-06-06 23:11:24,9.82,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,reopened,2011-06-06 23:46:05,34.68,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,2,2011-06-06 23:01:35,35.05,,1,,"b""b' Nevermind"," other bug is in CryptoPP ASM when cross compiled.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,3,2011-06-06 23:01:35,1113.63,,,1,"b""b' ACK"," looks good to pull to me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,closed,2011-06-10 05:42:30,356.42,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,304,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,opened,2011-06-16 15:08:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,title,2011-06-16 15:08:55,00:00,,1,,"b""b' Should bitcoin transactions with invalid output scripts be invalid?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,body,2011-06-16 15:08:55,00:00,1,,,"b'b"" At the moment", bitcoin does not verify that the outscripts of transactions are syntactically valid.  Thus it is possible to create a transaction with junk in it\'s outscripts and get it into the block chain.  No one could spend such coins (at least until the opcodes change).  The question is, should such garbage transactions simply be rejected out of hand instead? I believe the main blockchain has no such garbage outscripts in it yet," so this change could be effected now without harming the chain. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,1,2011-06-16 15:08:55,60.87,,1,,"b'b"" One person\'s garbage is another person\'s gold. And the blockchain DOES have garbage transactions in it-see block 71036. Those garbage transactions partly insipired the change so that non-standard transactions ARE rejected by clients and mainline miners. I\'m going to close this; if you have a specific proposal"," please discuss it on the forums.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,closed,2011-06-16 16:09:47,60.87,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,2,2011-06-16 15:08:55,13.9,,1,,"b""b' You are wrong. All the scripts in Block 71036 are syntactically valid.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,3,2011-06-16 15:08:55,8.22,,1,,"b'b"" @roconnor is talking about syntactic validity", not about whether the script is a) standard or b) evaluates to true for a  input. For example if it\'d contain unknown opcodes," or opcodes that require additional databytes at the end of the output script.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,reopened,2011-06-16 16:44:11,34.4,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,4,2011-06-16 15:08:55,15.02,1,,,"b'b"" Benefit of allowing anything is it will make upgrading easier. I don\'t see any harm in leaving the TxOuts unparsed until they\'re spent.  I suppose you could arge that syntactically incorrect garbage could bloat the block chain"," but it is almost as easy to create syntactically CORRECT garbage to bloat up the chain.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,closed,2011-06-16 23:31:06,406.92,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,5,2011-06-16 15:08:55,404.3,1,,,"b'b"" As long as you understand"," I also don\'t see any harm either.  I\'ll close.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,6,2011-06-16 15:08:55,363.03,,1,,"b""b' Upon further inspection", I think that the TxOut scripts are parsed before being included in the block chain.  Because of the way the TxOut structure is serialized the length _of the script_ is included in the serialization.  The length of the script is pretty much impossible to compute without parsing the script. (I had erroneously thought it was the length in bytes of the serialized script that was put into the serialized transaction," but it is the length of the script.)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,7,2011-06-16 15:08:55,1432.45,,1,,"b""b' Ah no", I was right origianlly," TxOut scripts are unparsed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,320,closed,-,-,-,3,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,opened,2011-06-16 19:58:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,title,2011-06-16 19:58:40,00:00,,1,,"b'b"" wallet rescan doesn\'t work properly""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,body,2011-06-16 19:58:40,00:00,,1,,"b'b\' When restoring the wallet from backup to which coins were sent while it was ""offline""", those transactions show up only when replacing the blockchain with one where the last block is older than the first transaction and then let new blocks be downloaded from the software. When replacing the wallet and leaving blockchain up-to-date only transactions from that moment onwards would show up. This problem still exists even with the newest version of the client.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,1,2011-06-16 19:58:40,55.07,,1,,"b'b"" -rescan seems to work on linux but doesn\'t (always) work on windows.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,closed,2011-06-17 20:53:44,55.07,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,reopened,2011-06-17 20:53:56,0.2,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,2,2011-06-16 19:58:40,1319.48,,1,,"b""b' In which version was this? Automatic rescanning was added in 0.3.21.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,closed,2012-04-04 19:21:10,1347.23,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,321,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,opened,2011-06-21 02:51:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,title,2011-06-21 02:51:43,00:00,,1,,"b""b' Streamline the build process'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,body,2011-06-21 02:51:43,00:00,,1,,"b""b' Ideal build process: List instructions and build dependencies (packages) for common distros (", Fedora," etc) in an INSTALL file.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,1,2011-06-21 02:51:43,7.2,,1,,"b""b' It appears there are already some pull requests out there that may help this: url  url  However"," they appear to be lagging behind mainline.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,closed,2011-06-21 02:58:56,7.22,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,reopened,2011-06-21 02:59:07,0.18,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,2,2011-06-21 02:51:43,11.9,,,1,"b""b' autotools is already in a pull request"," and is on the roadmap.  Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,closed,2011-06-21 03:10:49,11.7,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,336,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,opened,2011-07-25 22:20:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,title,2011-07-25 22:20:44,00:00,,1,,"b""b' Optimizations'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,body,2011-07-25 22:20:44,00:00,1,,,"b'b"" These are the same changes as my previous pull request. They have been broken down into individual commits by function", with a useful commit message. They optimize profile outliers under a specific test load that represents the load the software sees when it\'s used for pooled mining, that is," when it gets hundreds of RPC requests (mostly \'getwork\') per second.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,1,2011-07-25 22:20:44,205.32,,,1,"b""b' ACK"," looks pretty good to me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,2,2011-07-25 22:20:44,451.02,,1,,"b""b' ACK", with one remark: if the output buffer of the base64 decoder is 1024 bytes," it supports inputs up to 1365 character (not 512). Maybe a smaller buffer suffices?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,3,2011-07-25 22:20:44,22.78,,1,,"b'b"" Yeah", a smaller buffer or a better test. I was originally going to make the caller pass it a buffer to avoid having to allocate a std:string to return and to permit it to support any length," but it didn\'t seem worth it since it\'s only called once per RPC call.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,4,2011-07-25 22:20:44,12.83,1,,,"b'b"" I tried to amend that change without messing up the tree", but my git-fu was insufficient. If I try to revert the original patch, it conflicts in util.h, and I can\'t find the right way to merge the fix with the revert. And I don\'t want to clutter the tree with two commits," no with a .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,5,2011-07-25 22:20:44,6.17,,1,,b'b\' Make a new commit in which you fix whatever you want to fix. Then," run git ""rebase -i """," it will show you a list of commits from current master to your HEAD. Modify the line with the fix in it to be ""fixup""", and possibly move it up if it should not be squashed together with the latest commit.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,6,2011-07-25 22:20:44,22.75,,,1,"b'b"" Thanks. I shrunk the buffer and cleaned up some  issues to better match bitcoin style. I couldn\'t quite figure out how to get it to squash into the commit that added that code in the first place"," but I think I did manage to merge it as a fixup.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,7,2011-07-25 22:20:44,59.63,,,1,"b""b' Looks good"," though why is strRPCUser and strRPCPass defined in util and initialized in init?Could it not be defined and initialized in  so that it doesnt have to be yet another global?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,8,2011-07-25 22:20:44,641.38,,1,,b'b\' I agree with Matt,  don\\\'t belong in util.h. How much of a speed-up do each of these changes get?  (first rule of optimization: measure speed before and after every single change," I can\\\'t count the number of times I made a change that ""must"" make code faster that didn\\\'t).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,9,2011-07-25 22:20:44,76.85,1,,,"b'b""  makes a \'getwork\' RPC request about 2% faster alone. However", the improvement is only so small because there are so many other performance disasters in that code path (once you knock those down, it\'s about 9%). It\'s true that this specific optimization doesn\'t help the mainline code very much only because the mainline\'s RPC and JSON code is so poor. But those changes are coming. My version is already in my 4diff patches," just not suitable for merge. And there\'s also a version of the RPC fixes already as a pull request (#214).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,10,2011-07-25 22:20:44,147.97,1,,,"b'b\' Can you avoid using words like ""disaster"" when you mean ""not optimized for what I want to use it for"" ? Sorry for sounding grumpy", but I\\\'m grumpy. Adding 100+ more lines of code for a speedup that nobody but mining pool operators will notice is not a good tradeoff in my mind, because we\\\'re having enough trouble making sure the code we already have works properly in all cases.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,11,2011-07-25 22:20:44,231.93,,1,,"b'b\' I think the truth is somewhere between ""disaster"" and ""not optimized for what I want to use it for"". I agree that there aren\\\'t that many mining pool operators", but they have a disproprtionate impact on the way the network operates because they are the most likely to choose what transactions get into blocks, which chains to extend, and so on. I think it benefits the safety and stability of the system as a whole if mining pool operators don\\\'t have to maintain a large number of patches, each with associated risk, from mainline.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,closed,2011-07-27 05:39:22,438.63,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,reopened,2011-07-27 05:39:28,0.1,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,12,2011-07-25 22:20:44,342.58,1,,,"b'b"" Specific opinions regarding the different commits:Fix UNIX-specific thread handle leak: this is a bugfix", should be mergedOptimize RPC  lookups: if such a simple change can cause a 2% speedup, i have no objections to merging. I agree it doesn\'t belong in util but in rpc.Faster Base64 decoder: using inline code vs. using a library is always a controversial issue, but this is simple enough imho to do internally, after some correctness tests. It doesn\'t follow the coding standards though, btw.Optimize generation of hex output on \'getwork\' requests: if you\'re able to write a faster version for converting to Hex," would it be possible to use it as a base for replacing the current HexStr() entirely? I don\'t think we need several pieces of code doing the same thing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,13,2011-07-25 22:20:44,482.23,,1,,"b""b' Merged the bug fix'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,14,2011-07-25 22:20:44,1217.57,,1,,"b'b"" RPC  is a 2% speedup-what\'s the speedup of the other 2 patches?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,15,2011-07-25 22:20:44,675.25,,1,,"b'b"" I\'ll have to track down those results"," but they\'re greater than 2% -the RPC  cache was the smallest of the improvements. (Note that these are percentages in the specific case where you\'re hammering the code with \'getwork\' requests. They shouldn\'t make any other workloads worse though.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,closed,2011-08-11 02:57:00,1277.53,5,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,reopened,2011-08-11 02:57:06,0.1,5,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,16,2011-07-25 22:20:44,36.23,,1,,"b'b"" I\'ve definitely been pushing for patches that serve the mining community.  It is a numerically small set of nodes", but very impactful and important for the communal integrity of our network, IMHO.  Lacking any better solution," we should look seriously at applying patchsets being universally adopted by mining pool operators.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,17,2011-07-25 22:20:44,585.67,,,1,"b'b"" I was hoping this thread had to do with optimizing the load time of the GUI. On windows 7 x64 it takes a minimum of 30 seconds on my mining rig. It can take longer than a minute on my laptop", and sometimes doesn\'t load on either. This is a major inconvenience when you want to use Bitcoins to pay for a pita at Meze grille. Frustrating enough that people testing out the Bitcoin concept might walk away entirely. Stronger mining is null if we don\'t have people spending the Bitcoins. EDIT: If there is a demand for changes particular to pool operators, perhaps we can offer an alternative repo with optimizations for pooled mining? I think the further we go with the Bitcoin core, the more apparent the different needs between these two distinct groups of client-downloaders. AFAIK, some pool operators run their own optimized versions of the client. At some point it might be wise to conglomerate their efforts. Keeping a pool client and a standard client will IMHO allow for greater innovation, and less compromise. Forgive me if this is an optimization that all clients would need in order to be effective," TBH I don\'t really know what it does...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,closed,2011-09-30 09:41:22,404.27,5,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,430,closed,-,-,-,5,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,opened,2011-07-30 17:37:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,title,2011-07-30 17:37:15,00:00,,1,,"b""b' Fix O_LARGEFILE support on 32bit builds'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,body,2011-07-30 17:37:15,00:00,,1,,"b'b"" Add  definitions (tested on glibc"," not sure if *bsd libc support these options) to allow  to grow past 2GB on 32bit builds. I ran into this problem when I noticed that  stops updating at 2GB on my 32bit host. This will also make it so that the block chain can grow past 2GB on 32bit builds. We may need some further options for *bsd\'s libc but I don\'t have available test installs at the moment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,1,2011-07-30 17:37:15,5.12,,1,,"b""b' The win32 and osx makefiles probably need similar changes before the block chain gets that big.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,2,2011-07-30 17:37:15,5.2,,1,,"b""b' sipa informed me that block chain is split into 1GB files so not as big a deal there. This mostly just affects  on long-running bitcoind instances.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,closed,2011-07-30 17:47:34,10.32,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,reopened,2011-07-30 17:47:38,0.07,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,3,2011-07-30 17:37:15,26.52,,1,,"b""b' This breaks GetFilesize which breaks ShrinkDebugFile. Closing until I can get that sorted out.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,closed,2011-07-30 18:14:05,26.45,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,438,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,opened,2011-08-11 23:07:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,title,2011-08-11 23:07:50,00:00,,1,,"b""b' Upgrade dependancies and tweak build process.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,body,2011-08-11 23:07:50,00:00,1,,,"b'b"" Upgrade dependancies and tweak build process.Upgrade to use miniupnpc 1.6:  At least one user has commented that newer releases are more compatible with their (and apparently common) routers.Upgrade to wxWidgets 2.9.2:  No longer need to patch it ourselves for new distrosUpgrade to Bost 1.47 for Win32 Builds  Boost has gotten really out of date here because previous releases didn\'t build (because no one bothered to research why"," probably me though I cant claim to remember).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,1,2011-08-11 23:07:50,893.27,,1,,"b""b' Temporarily closing to upgrade to db4.8"," wx2.9.2 and miniupnpc1.6 on win32'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,closed,2011-08-12 14:01:06,893.27,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,reopened,2011-08-12 15:52:11,111.08,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,closed,2011-08-12 16:36:17,44.1,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,reopened,2011-08-12 22:37:31,361.23,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,2,2011-08-11 23:07:50,517.85,,,1,"b""b' OK"," think this one is finally good to go.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,3,2011-08-11 23:07:50,1224.05,,1,,"b'b"" Closing again until I have a minute to get devrandom\'s upgrades which make mingw results deterministic pulled into this.(very much want this stuff for 0.4).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,closed,2011-08-16 19:03:00,1225.48,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,4,2011-08-11 23:07:50,1315.73,,1,,"b'b"" OK"," Im doing a couple final run-throughs and then I\'d like to see this as the build system for 0.4""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,reopened,2011-08-23 16:58:46,1315.77,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,5,2011-08-11 23:07:50,134.48,,,1,"b""b' It would be nice to get a confirmation that the results here are  devrandom said that there are a few bytes changing in the final nsis exe", but everything else should be stable (including the boost and wx results).  Im going to see if I can work on the nsis exe, but Ill leave this open because if it doesnt happen before 0.4 is ready to go," its fine by me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,closed,2011-08-31 16:16:56,1398.17,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,464,closed,-,-,-,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,opened,2011-09-14 13:56:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,title,2011-09-14 13:56:53,00:00,,1,,"b""b' 0.4.0rc2 build for linux is creating over a hundred log files'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,body,2011-09-14 13:56:53,00:00,,1,,"b'b"" I\'ve just built bitcoin-4.00rc2 on Ubuntu 10.04", and it\'s now downloading the blocks. I notice though that the  directory is being filled up by over a hundred log files," and they are eating up more than 1GB of disk space.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,1,2011-09-14 13:56:53,4.08,,1,,"b'b"" I\'ll test in 11.04 to see if I can recreate the issue""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,2,2011-09-14 13:56:53,15.63,,1,,"b'b"" Can you run the same experiment with the previous release? database log files are cleaned up on either startup or next shutdown (can\'t remember which)"," so if you\'re downloading the blockchain with a new install lots of logs are expected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,3,2011-09-14 13:56:53,19.83,,1,,"b""b' It looks like the previous release behave the same way. All the log files except the last are cleaned up after shutdown as you said. So this is normal behaviour.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,closed,2011-09-14 14:51:18,54.42,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,4,2011-09-14 13:56:53,1096.55,,1,,"b'b"" Older releases do indeed have the same problem", but that doesn\'t mean it\'s an issue that can be ignored. Start up bitcoin with an empty datadir," and it creates over 1.5GiB of log files when it finishes downloading the chain...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,reopened,2011-09-15 08:55:12,1083.9,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,5,2011-09-14 13:56:53,3.53,,1,,"b""b' Ok"," I assumed that the log files it creates were valuable. Maybe a commit could make log-file creation opt-in.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,6,2011-09-14 13:56:53,1031.63,,1,,"b""b' Should be fixed since #1010.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,closed,2012-04-05 02:08:09,1032.95,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,515,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,opened,2011-09-29 01:24:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,title,2011-09-29 01:24:25,00:00,,1,,"b""b' bitcoin main window takes a long time (20 minutes+) to appear'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,body,2011-09-29 01:24:25,00:00,,1,,"b""b' When I start bitcoin", it takes a very long time for the main window to appear. About 10-30 minutes. The following is added to ~/ when bitcoin is started, and nothing more appears until the main window appears: After the main window appears," the following information is added to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,1,2011-09-29 01:24:25,4.4,,1,,"b""b' As a first measure you could delete from your bitcoin folder. This is completely safe and should improve startup time a lot. What kind of hardware are you running it on? Either your CPU or disk is a little slow.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,2,2011-09-29 01:24:25,18.22,,1,,"b""b' I deleted ", this is the output now: I have an Intel Q9550 CPU (four cores, downclocked to 2 GHz) and my home folder is on an Intel X-25M SSD. This was never a problem with versions before 0.4," the main window appeared instantly back then.  is 254.7 MB in size.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,closed,2011-09-29 01:47:02,22.62,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,reopened,2011-09-29 02:51:50,64.8,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,3,2011-09-29 01:24:25,1185.08,,1,,"b""b' I believe this has been fixed with the QT implementation load times are now much shorter.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,closed,2011-10-10 21:32:07,1120.28,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,4,2011-09-29 01:24:25,68.6,,1,,"b'b"" I dont think load times have changed with QT as the load methods in AppInit2 haven\'t changed.This issue appears to be specifically about slow load times loading the block index", which should effect both bitcoind and bitcoin-qt.  Since no developer (AFAIK) can reproduce this error," is there any way the original reporter can profile bitcoin while it is loading?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,5,2011-09-29 01:24:25,819.4,,1,,b'b\' This bug is now gone for me. I believe the cause was an SSD drive that had slowed down. The read speeds had dropped to ~700KB/s which corresponds to about 15 minutes to read the 600MB block chain file.After the read speed have returned to normal this issue is no longer present; loading takes 15 seconds now. I do still think 15 seconds to load the GUI is a long time, though. Perhaps it would be a good idea display the GUI as soon as the bitcoin process is started," and not wait until the block chain has been read from the hard drive? The GUI could say ""Loading block chain from disk: 3%..."" while reading the data", so as to let the user know that everything is working, it\\\'s just  a slow storage medium that is causing the wait.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,6,2011-09-29 01:24:25,1016.85,,1,,b'b\' Actually the new qt gui does just that.  runeksvendsen reply@ wrote: This bug is now gone for me. I believe the cause was an SSD drive that had slowed down. The read speeds had dropped to ~700KB/s which corresponds to about 15 minutes to read the 600MB block chain file.After the read speed have returned to normal this issue is no longer present; loading takes 15 seconds now. I do still think 15 seconds to load the GUI is a long time, though. Perhaps it would be a good idea display the GUI as soon as the bitcoin process is started," and not wait until the block chain has been read from the hard drive? The GUI could say ""Loading block chain from disk: 3%..."" while reading the data", so as to let the user know that everything is working, it\\\'s just a slow storage medium that is causing the wait. ##  Reply to this email directly or view it on GitHub:url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,7,2011-09-29 01:24:25,1279.83,,,1,"b""b' Excellent. I just built bitcoin-qt"," looks very nice!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,8,2011-09-29 01:24:25,101.47,,1,,"b'b"" In my case", it\'s very slow too. And each time I start bitcoin-qt," it take more time to load the entire application than the previous one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,540,closed,-,-,-,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,opened,2011-10-05 19:51:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,title,2011-10-05 19:51:38,00:00,,1,,"b""b' Specify fees explicitly via JSON-RPC'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,body,2011-10-05 19:51:38,00:00,,1,,"b'b\' Disables automatically adding ""minimum"" fees for JSON-RPC methods-instead", it returns an error or," iff the user sets the new second parameter ""force"" to the \\\'settxfee\\\' JSON-RPC call", sends the transaction with the user-specified fee. This second parameter to \\\'settxfee\\\' is only enabled if bitcoind is started with the undocumented -nosafefees option. Currently 4/6 support this change: url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,1,2011-10-05 19:51:38,336.2,1,,,"b'b\' No consensus on this-and it removes a feature that I think most web services want (""just send whatever fee is likely to get the damn transactions into blocks"," I\\\'ll eat the costs because they\\\'re so small anyway"" -anyway", that was what I wanted for ClearCoin).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,closed,2011-12-01 01:27:50,336.2,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,reopened,2011-12-01 01:54:12,26.37,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,2,2011-10-05 19:51:38,983.6,,1,,b'b\' With this part," automatic fees up to ""maxtxfee"" (default 0.01 BTC) will be accepted for sends without further JSON-RPC interaction.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,3,2011-10-05 19:51:38,533.5,,1,,"b'b"" ACK on the -maxtxfee idea; I\'ll check the code soon. About -nosafefees yes"," but only after some way of reverting transactions that do not get accepted by the network is present.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,4,2011-10-05 19:51:38,185.13,,1,,"b""b' Seriously", the upgrading transactions stuff was already coded," all you have to do is implement it and do it well...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,5,2011-10-05 19:51:38,1000.0,,1,,"b'b\' Disagree with ""accept any  myself"" because that is a useful safety net. No opinion on the other stuff.  Probably should admin-close and let this  sit until fees are straightened out.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,6,2011-10-05 19:51:38,20.72,,1,,"b'b\' Re ""accept any  myself"": By the time they\\\'re being rejected", it\\\'s already too late to undo them.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,7,2011-10-05 19:51:38,1336.23,1,,,"b'b"" I think this is a mess we don\'t want to merge... NAK from me at least. If and when fees get redone", this code will change anyway.Until that time," it is debatable that these will be used by >1 users.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,8,2011-10-05 19:51:38,2.55,,1,,"b""b' Someone else is maintaining a complete fork just for this"," and it seems to have a >1 userbase: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,9,2011-10-05 19:51:38,9.17,,,1,"b'b"" I\'m quite sure some people are interested in this", especially the the ability to prevent transaction from taking a unexpected fee without interaction. There are alternatives though, like an RPC to prepare a transaction, and allow inspection before submitting it. The nosafefees part... sure, one day," but we definitely need saner behaviour when non-accepting / conflicting transactions exist in a wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,10,2011-10-05 19:51:38,1126.37,,1,,"b""b' Do we still need this"," in light of the raw transaction stuff in #1456 ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,11,2011-10-05 19:51:38,7.63,,1,,"b'b"" I think so. Just because one can implement the same behaviour by implementing their own Bitcoin transaction maker externally"," doesn\'t mean the simpler use-cases shouldn\'t be supported for software that just wants to deal with the financial aspects.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,12,2011-10-05 19:51:38,1401.73,,,1,b'b\' No consensus, it mixes in fee behavior which is actively debated," and this pull request has become ""all over the place"" Closing", but you are welcome to re-open smaller, more fine-grained changes as separate pull requests that might be more easily ACK\\\'d or NAK\\\'d.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,closed,2012-08-01 15:34:28,820.27,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,570,closed,-,-,-,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,opened,2011-11-10 14:43:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,title,2011-11-10 14:43:06,00:00,,1,,"b""b' QR Code generation via libqrencode'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,body,2011-11-10 14:43:06,00:00,1,,,"b'b"" Added QR Code generation button to address book page", a dialog to display the result including fields for label, message," and request amount (the latter visible only for personal addresses). Images can be saved to disk. Codes use the \'bitcoin\' URI scheme described ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,1,2011-11-10 14:43:06,80.45,1,,,b'b\' Basic  ACK except for a couple of minor issues:USE_QRC might be confused with Qt Resource Compiler (or whatever \\\'qrc\\\' is)," maybe USE_QRCODE ?QR Codes are set to ""text"" instead of ""URI""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,2,2011-11-10 14:43:06,383.82,,,1,"b'b"" Thanks luke-jr. I\'ll change the define to USE_QRCODE. The library only supports the following encoding modes  is type \'URI\' under the surface? /**Encoding mode.  */  typedef enum {  QR_MODE_NUL = -1",  ///< Terminator (NUL character). Internal use only  QR_MODE_NUM = 0, ///< Numeric mode  QR_MODE_AN,    ///< Alphabet-numeric mode  QR_MODE_8,   ///< 8-bit data mode  QR_MODE_KANJI,   ///< Kanji (shift-jis) mode  QR_MODE_STRUCTURE, ///< Internal use only  QR_MODE_ECI,   ///< ECI mode  QR_MODE_FNC1FIRST,  ///< FNC1, first position  QR_MODE_FNC1SECOND, ///< FNC1," second position  } QRencodeMode;""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,3,2011-11-10 14:43:06,32.2,,1,,"b'b\' Nevermind the mode thing. Looks like the problem is with my QR Code reader ""detecting"" URI vs text based on the content. :/\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,4,2011-11-10 14:43:06,543.7,,1,,"b""b' Ok"," change pushed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,5,2011-11-10 14:43:06,419.0,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,6,2011-11-10 14:43:06,1427.62,,,1,"b""b' Neat! ACK. Can you  these into one commit?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,7,2011-11-10 14:43:06,5.97,,1,,"b""b' Squashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,8,2011-11-10 14:43:06,14.75,,,1,"b'b"" Thanks. Some small issues: It doesn\'t build in qt creator without libqrcode (even if USE_QRCODE is not added); probably missing #ifdefs inside  ../:10: error: qrencode.h: No such file or directoryQRCodeDialog::genCode() is only called from the UI thread. Is it still neccesary to have it in a static critical section?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,9,2011-11-10 14:43:06,6.52,,1,,"b'b"" Fixing now. The first issue involves adding the qrcodedialog to the project conditionally"," so needs changes to the pro file. I\'ll fix the second. I was being overly attentive to the \'not thread safe\' warning in the library docs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,10,2011-11-10 14:43:06,8.58,,1,,"b""b' Done and resquashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,11,2011-11-10 14:43:06,11.27,,,1,"b'b"" That\'s fast :) Now builds and runs on machine without the library.  Also works great when enabled"," I tried scanning it with my phone from the screen and it got it right the first time. Another small code issue:AddressBookPage::on_showQRCode_clicked(): causes a memory leak every time the dialog is opened (at least until the addressbookpage is destroyed). Better to simply use  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,12,2011-11-10 14:43:06,6.28,,1,,"b'b"" Yeah that\'s not ideal as is. Using as you suggest though causes the dialog to be destroyed immediately as the variable goes out of scope. Are you suggesting it (and not \'they\') should be modal?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,13,2011-11-10 14:43:06,2.37,,1,,"b'b"" How about I set the \'Qt::WA_DeleteOnClose\' attribute on the qrcodedialog widget instead?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,14,2011-11-10 14:43:06,1.2,,1,,"b'b"" Sorry", I misunderstood. I thought that was the idea to be modal :-) Keep it as it is, it\'s fine. Qt has a flag to delete a window when closed, it might be useful to enable that," but I don\'t think this will ever be a big issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,15,2011-11-10 14:43:06,2.67,,1,,"b'b"" Snap. I\'ve set that flag and rebased again. 2:49am g\'night ;)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,16,2011-11-10 14:43:06,1.32,,,1,"b""b' Thanks. Goodnight!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,17,2011-11-10 14:43:06,1149.8,,1,,"b'b"" Did you check if this is compatible with the Android Wallet app? I\'m not sure exactly what format it\'s using.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,18,2011-11-10 14:43:06,33.5,1,,,"b'b"" Sorry", I\'ve only got access to my wife\'s rather ancient android phone which refuses to find the app in the app store for me or install the one I can find on the net. That app is using Google\'s ZXing library url  and I did test using url  which uses the same library. From what I can tell from the source, that app uses the same URI scheme also (the one at url  The alternative," x-btc url  seems a little less popular.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,19,2011-11-10 14:43:06,1.07,,,1,"b""b' Great! If you send me a qrcode generated by this patch I can try scanningit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,20,2011-11-10 14:43:06,5.82,,1,,"b""b' @mikehearn I can do that what email?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,21,2011-11-10 14:43:06,0.53,,1,,"b""b' mike@plan99.net'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,22,2011-11-10 14:43:06,130.15,,1,,"b'b"" If the Android app isn\'t standards compliant", then it should be fixed. That is IMO outside the scope of this pull request. If libqrcode isn\'t standards compliant, it also should be fixed and is outside the scope of this code as well. I did confirm that it works with my N900\'s QR Code reader (mBarcode on Maemo)," except for being detected as a URI (I presume they\'re using a known URI scheme list).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,23,2011-11-10 14:43:06,1.7,,,1,"b'b"" It works with the Android app :) It\'s best to do interop testing early soissues can be found wherever they lie. Seems like the app doesn\'t use the fields though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,24,2011-11-10 14:43:06,3.32,,1,,"b'b"" Most apps don\'t"," I think.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,25,2011-11-10 14:43:06,408.6,1,,,"b""b' NACK: see url On my Mac"," showing the QR code for one of my receiving addresses I get too-skinny-text-boxes for Label and Message.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,26,2011-11-10 14:43:06,4.33,,,1,"b'b"" Really cool feature", by the way. But could you also update -*.txt for instructions on how to get libqrencode (on the mac, \'port install qrencode\' works nicely) It\'d be really nice if the *.yml files were modified to build with qrencode support," too...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,27,2011-11-10 14:43:06,866.43,,1,,"b'b"" Hi Gavin I reorganised the dialog and added minimum sizes to those fields. I updated the Linux and OSX build docs"," and added the \'qrencode\' package to the  file. I don\'t have a windows dev box to do any testing there or any experience with gitian builds so I\'m reluctant to get into that stuff. I also updated  to link qrencode (dynamically) if USE_QRCODE=1 is set but again I don\'t have a Mac here to test.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,closed,2011-12-20 11:16:03,1232.95,4,17,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,reopened,2011-12-20 11:16:38,0.58,4,17,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,closed,2011-12-23 10:50:28,1413.83,4,17,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,629,closed,-,-,-,4,17,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,opened,2011-11-18 10:10:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,title,2011-11-18 10:10:58,00:00,,1,,"b'b"" AddAddress () doesn\'t update mapAddresses""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,body,2011-11-18 10:10:58,00:00,,1,,b'b\' After url  AddAddress doesn\\\'t update the nServices and the nTime in the mapAddresses when the address is already present. The new code: The old code where (*it) is an iterator on the mapAddresses (there is a second if block after this one that modifies ," but to show the problem it isn\\\'t important) The difference is in the & of addrFound. Before when we modified addrFound we modified the ""live"" version of the mapAddresses", now we modify a copy that will be discarded at the end of the function.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,closed,2012-02-19 17:52:34,461.6,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,reopened,2012-02-19 17:56:13,3.65,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,1,2011-11-18 10:10:58,466.33,1,,,"b""b' My mistake; this issue still exists"," though it is fixed in addrman (#787).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,2,2011-11-18 10:10:58,100.68,,1,,"b""b' Fixed now"," now that addrman is pulled?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,3,2011-11-18 10:10:58,5.77,,1,,"b""b' Yes"," see url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,closed,2012-04-05 19:43:45,107.53,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,642,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,opened,2011-11-23 20:18:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,title,2011-11-23 20:18:03,00:00,,1,,"b""b' Bitcoin behind Tor still receiving connections on 8333 (identity leak) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,body,2011-11-23 20:18:03,00:00,,1,,"b'b\' I noticed that my bitcoin client was getting too many connections (I ran a ""netstat -ap | grep bitcoin"" and saw that bitcoin was bypassing my proxy configuration", opening my local port 8333 and accepting incoming connections on it. What\\\'s more troubling is that, not only it is listening when it should not, but it must be giving away my IP somehow, since all these other peers would not find me otherwise they would try to connect to the exit-nodes, in vain. Maybe it\\\'s accessing the IRC bootstrap channel without using the proxy? I\\\'m using version 0.5 now. I had not noticed such behavior before, so it is a regression, but I can\\\'t tell which version introduced it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,1,2011-11-23 20:18:03,26.85,,1,,"b""b' This sounds like a regression; if tor is used it should disable listening", and should not even know its own external IP address," let alone broadcast to others. Can you check whether the proxy is used at all?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,2,2011-11-23 20:18:03,108.0,,,1,"b""b' I can see by netstat that the proxy is used. There are connections opened by bitcoin"," from localhost:X to localhost:9050.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,3,2011-11-23 20:18:03,326.77,,1,,"b""b' It should not be assumed all SOCKS proxies are TOR", thus disable listening.For example," I might want to setup a SSH tunnel between bitcoind and remote external server using both SOCKS proxy and port forwarding from server.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,4,2011-11-23 20:18:03,139.7,,1,,b'b\' Well it makes no sense to listen on the local IP address if a proxy is used, tor or not -you have delegated network access to that remote host. Someone using an anonymous non-TOR SOCKS proxy will still not want to leak his iP address, it is a serious leak. In ancient times I\\\'ve done something with SOCKS proxies," and I know SOCKS5 supports a ""bind"" call to be able to listen on a the proxy host. This is what ideally should be used in these kind of cases", but I also know 0% of the programs actually implementing a socks proxy support it. So the second-best thing is to disable listening (by default -one may enable it in specific cases) when a proxy is used. BTW if you set your TOR port to the default of 9050 it will automatically regard it as TOR. Did you change the port? that might explain the regression: IMO this should be an explicit option in the UI, and not some heuristic based on the port. Anyway, for now you can try if command line option solves the problem.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,5,2011-11-23 20:18:03,122.7,,1,,"b'b"" I can\'t try the -nolisten switch right now", will do it as soon as I can. My Tor is on 9050," as by default. Am I the only one having this problem?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,6,2011-11-23 20:18:03,65.48,,1,,"b""b' I also use TOR", but never notice the listening port, because my node is behind firewall, and never connected from outside ;)I just check the source, notice that in , fUseProxy and addrProxy is checked before it is initialized," I guess this is the bug.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,closed,2011-11-24 18:25:34,1327.52,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,reopened,2011-11-24 18:25:36,0.03,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,7,2011-11-23 20:18:03,560.85,1,,,b'b\' (oops, github was a bit trigger happy) Yes this could be the problem," the value of fUseProxy is only ""final"" after LoadWallet and the command line option have been parsed (in that order). however is given a value _before_ either the fUseProxy or the proxy port has been assigned. I am not sure how this can ever have worked.  See this pull request: url Or here: url  Can you test this?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,8,2011-11-23 20:18:03,533.02,,1,,b'b\' You do notice fNoListen is used before assigned," right? ;)I would suggest move the ""-proxy"" parsing before fTOR and fNoListen initializtion.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,9,2011-11-23 20:18:03,26.07,1,,,"b'b"" Huh good catch :) But that wouldn\'t work either -fUseProxy is also set by LoadWallet", so it can only be parsed after that," as the command-line option should take precedence over what is set in the UI. Anything using fUseProxy must happen after LoadWallet. This is more annoying than I thought... we need to be really sure to fix this without introducing a new regression""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,10,2011-11-23 20:18:03,12.7,,1,,"b""b' BTW", despite this bug, I do not see why EhVedadoOAnonimato have connections on the listening port,since proxy should still be used, and IRC server only see IP of the proxy.Maybe your Bitcoin node is also a TOR exit," EhVedadoOAnonimato? Or do you have UPnP enabled and in use? And I think fHaveUPnP should also not be set when fNoListen is false.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,11,2011-11-23 20:18:03,249.78,,,1,"b""b' Wow... storing settings in the wallet... I always wonder why my proxy setting is not in .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,12,2011-11-23 20:18:03,35.87,,1,,"b'b"" Yeah it\'s and it\'s one of the things complicating multi-wallet support All the UI-configured settings are written into the wallet. The .conf is never written"," only read.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,13,2011-11-23 20:18:03,398.57,,,1,b'b\' Ok, let\\\'s see what really happens in , proxy-wallet related. Current order of events:1. set based on and (precondition: fUseProxy and addrProxy have their final value !!not met!!, postcondition: fTor has its final value)2. is set based on and (precondition: fTor has its final value, postcondition: fNoListen has its final value)3. if is not set," is called (precondition: fNoListen has its final value)4. loads wallet (postcondition: and have an initial value)5. and are parsed from (postcondition: and have their final value)6. Network thread is started ( ) (precondition: all network settings have their final value) So we have to try to reorder this in a sensible order. Constraint: Binding to a port happens early because ""Bind to the port early so we can tell if another instance is already running."".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,14,2011-11-23 20:18:03,386.12,,,1,"b'b"" Well from what I can see we have to drop the binding port early to see if another instance is running.  I dont think it is a big deal as we now have nice locks in .bitcoin", whereas (IIRC) those weren\'t there when the order of BindListenPort was written by satoshi," but maybe gavin can confirm that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,15,2011-11-23 20:18:03,1174.98,,1,,"b""b' I agree","  we already stopped using port binding as a locking mechanism when-nolisten was introduced.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,16,2011-11-23 20:18:03,282.8,1,,,"b'b"" I\'m sorry for not having reported back. I confirm that the -nolisten switch seems to fix the issue. At least when I add it", there are no incoming connections and bitcoin is not listening on 8333. @Iongshun, concerning the incoming connections, when I first installed bitcoin (there\'s a while), I manually configured my router to redirect connections on 8333 to my machine, so that explains how people could reach me. That doesn\'t explain how they knew there was a bitcoin running on my IP though. Or do bitcoin nodes store IPs of nodes they see once and keep trying to connect to it for a long time? Because than perhaps my Android phone is to blame: I have the BitcoinJ based app on it, and I run it behind the same router (so, the same IP)," without Tor...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,17,2011-11-23 20:18:03,13.35,,,1,"b""b' Yes all nodes keep a list of known-good ips to try and exchange those with each other. EhVedadoOAnonimato reply@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,closed,2012-03-20 16:30:19,1324.72,3,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,659,closed,-,-,-,3,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,opened,2012-01-19 22:59:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,title,2012-01-19 22:59:59,00:00,,1,,"b""b' CBlockStore'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,body,2012-01-19 22:59:59,00:00,,1,,"b'b\' From the commitmsg:""Change Bitcoin\\\'s flow to use a CBlockStore classwhich blocks . This commit is designed to not change any bitcoin functionality or operation. Largest changes:ProcessMessage(s)/SendMessages moved to Many globals removed from main.h and abstracted to CBlockStoreCalls to CWallet::AddToWalletIfInvolvingMe no longer block Block verification",  resulting in a small, but measureable block verification speed increase. There is still a lot of abstraction to go," but this is a step in the right direction."" **This commit is not intended to be merged for 0.6", its targeted for for 0.7.**I just wanted to post it to start getting eyeballs on it as early as possible.  ~~In addition, there is a nasty performance bug somewhere that is causing an almost 25% slowdown in block download when downloading a lot of blocks (when downloading from a local tmpfs node to another local tmpfs node, but it is often quicker for smaller sets, say < 5000 blocks).  Ive looked at it in valgrind and gprofile and tried changing some possible culprits and havent had any luck tracking it down.  _If anyone tracks it down, Ill owe you big time._~~**Additionally, please mind the removal of cs_main around stuff thats not in  (esp rpc) and tell me Im wrong to do that.**\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,1,2012-01-19 22:59:59,70.18,,,1,"b""b' Oh and as usual thanks to @sipa and @gmaxwell for  help for my C++ noobishness along the way.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,2,2012-01-19 22:59:59,950.95,,1,,"b'b"" This seems to need rebasing... also"," at least fedb422 and bc98084 don\'t belong here (and create regressions).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,3,2012-01-19 22:59:59,950.53,,1,,"b""b' Rebased"," should be pretty mergeable now (aside from the elusive performance issue).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,4,2012-01-19 22:59:59,764.33,,1,,"b""b' Fixed a few minor issues and rebased.  Still nothing new on the performance issue(s).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,5,2012-01-19 22:59:59,436.22,,,1,"b""b' So", good news on the performance front.  While I was benchmarking bitcoin built in debug vs release (for gitian stuff), I noticed there was a bit of a performance decrease when built in debug mode.  As it turns out, I had always been benchmarking CBlockStore in debug mode.  When ff66202 is removed and CBlockStore is benchmarked," it has the slight performance improvement over master that would be expected.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,6,2012-01-19 22:59:59,944.67,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,7,2012-01-19 22:59:59,511.97,1,,,"b""b' Ridiculously minor fixes to make valgrind happy and rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,closed,2012-03-26 19:40:41,1240.7,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,reopened,2012-04-01 01:46:24,365.72,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,8,2012-01-19 22:59:59,1301.42,,1,,"b""b' Rebased", added a simple unit test," and abstracted one more thing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,9,2012-01-19 22:59:59,3.52,,,1,"b'b"" Not sure why github is showing a few of gavin\'s commits that are on master in the commitlist", but they have the same commitid," and this appears to be rebased fine in git...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,10,2012-01-19 22:59:59,35.7,,1,,"b""b' Closing this since after some thought I really dont trust myself to touch this much code without introducing one or two fatal bugs.  If anyone does want to look at this"," @sipa spent some time cleaning up the internals to look  a bit smoother at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,closed,2012-04-06 02:29:31,43.12,1,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,11,2012-01-19 22:59:59,584.03,1,,,"b""b' @TheBlueMatt large refactorings always carry some risk", but imho this is a refactor that needs to happen anyway. It can probably use a few more eyes, but it seems to run without problem, so it seems a waste not trying to get it merged. By the way," ooifiedbs is rebased against master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,reopened,2012-05-05 08:05:22,335.85,2,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,12,2012-01-19 22:59:59,1192.53,,1,,"b""b' Slowly working on rebasing this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,13,2012-01-19 22:59:59,1397.02,,1,,"b""b' Rebased against master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,14,2012-01-19 22:59:59,420.52,1,,,"b'b"" I get one potential deadlock: in ", AskForBlocks sends messages while holding the cs_vNodes lock. It\'s better to make a copy of the node you need to contact, ->AddRef() it, send the message," and ->Release().""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,15,2012-01-19 22:59:59,992.02,,1,,"b""b' Fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,16,2012-01-19 22:59:59,150.03,1,,,"b""b' Spent some more time double checking and triple checking the latest  one more potential deadlock", fixed one potential  checking to be done@Diapolo Ill check in the morning," its almost 6am...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,17,2012-01-19 22:59:59,891.68,1,,,"b'b"" Fixed the one other potential deadlock I\'m aware  kinda an ugly fix", but it works, and since the transaction copying only happens in the cblockstore callback thread(s), it shouldn\'t effect performance either way.Gonna do more testing in the next few days," but this should be pretty good right now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,18,2012-01-19 22:59:59,1325.25,,1,,"b""b' Rebased onto current master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,19,2012-01-19 22:59:59,561.65,,,1,"b""b' Rebased and have been  largely good to me"," so any additional eyeballs at this stage would be appreciated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,20,2012-01-19 22:59:59,427.1,1,,,"b""b' Closing to redo from the ground up (again).  Continuing rebasing this would simply cause issues and no doubt create odd interactions with recent commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,closed,2012-05-29 14:51:18,405.93,6,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,771,closed,-,-,-,6,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,opened,2012-02-14 17:44:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,title,2012-02-14 17:44:48,00:00,,1,,"b""b' Bitcoin-Qt: imported keys not shown until restart'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,body,2012-02-14 17:44:48,00:00,,1,,"b'b\' 1. Start Bitcoin-Qt with -server enabled2. bitcoind importprivkey 5KKpXi2Jzq5Uhc2hewc9eXQZrUJyFx7wxbm1JL2PrKEmvJmJRi73. Check ""Receive coins"" tab4. Observe new address (1MaRTyRCFm2tn1JYq6oDoAy6uati7eXJWj) is not listed5. Exit Bitcoin-Qt completely6. Start Bitcoin-Qt again after it finishes exiting7. Observe new address is now in the ""Receive coins"" tab\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,1,2012-02-14 17:44:48,875.93,,1,,"b""b' I expect this to be fixed with commit 98e61758744ed34e8b7f59b37edb6d09b33d5517.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,2,2012-02-14 17:44:48,487.68,,1,,"b""b' verified"," this is fixed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,closed,2012-04-22 16:28:25,1363.62,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,3,2012-02-14 17:44:48,1373.35,,1,,"b""b' Someone just reported this again on 0.7.1 on IRC. Reopen?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,4,2012-02-14 17:44:48,787.13,,1,,"b'b"" I\'m seeing this issue on 0.8.1 and 0.8.2 on the linux-64 client.  Please reopen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,5,2012-02-14 17:44:48,321.25,,1,,"b""b' @BoltBlit You did not set rescan=false when importing?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,6,2012-02-14 17:44:48,15.02,1,,,"b'b"" @sipa To clarify: I tried again w/ another key and rescan=true.  After import", the address shows up in the \'Addresses\' pane, but not the \'Receive\' pane.  After a restart, the address is no longer in the the \'Addresses\' pane," but then does show up in the \'Receive\' pane.  The behavior is kind of confusing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,reopened,2013-06-02 16:51:53,23.47,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,7,2012-02-14 17:44:48,1406.33,,1,,"b'b"" If make import from debug console", then it moving from \'Addresses\' to \'Receive\' after repeating this action.In debug log it presents as NotifyAddressBookChanged with isMine=0 at first time," and as isMine=1 at second.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,8,2012-02-14 17:44:48,880.4,,1,,"b'b\' This issue can be closed. It is fixed with 0.9 because we assign address purposes now. The problem was we relied on isMine to determine whether to show as ""sending"" or ""receiving"".And when importing", it was not mine (yet). But after the next refresh of addresstablemodel is was mine. (See comment above by r000n) Also see #3831.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,closed,2014-04-04 06:41:59,830.1,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,835,closed,-,-,-,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,opened,2012-02-21 22:54:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,title,2012-02-21 22:54:27,00:00,,1,,"b""b'  corrupted after bitcoin encryption'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,body,2012-02-21 22:54:27,00:00,,,1,b'b\' Hi there," Yesterday night I have encrypted my wallet using bitcoin tool. today when I open bitcoin tool It shows ""loading block index"" and than throws an error "" corrupted"". Now I cannot access my wallet. I\\\'m using Win7 64bit. I have created new  by renaming old  to wallet-. with new wallet the bitcoin tool opens fine", even I can encrypt the new wallet works fine aswell. I just don\\\'t know what happened to my original . I\\\'m new to bitcoin topic and I don\\\'t understand why the bitcoin folder is 1.3 GB. Is there any way I can recover my address back? because I have locked that adress in a mining website (deepbit). it would be very thankful if anyone gives clue how to recover the  in windows environment. All I see on google is either linux solutions which I have zero knowledge. PS: I dont mind sharing half of the money the wallet has if i get it back. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,1,2012-02-21 22:54:27,254.68,,1,,"b""b' Check out url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,2,2012-02-21 22:54:27,1158.8,,1,,"b'b"" Were you using 0.6.0rc1? It had a bug that corrupted wallets when encrypting them. If so", nothing is lost. I can send you instructions to recover," if matt\'s way doesn\'t work out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,3,2012-02-21 22:54:27,622.23,,1,,"b""b' hi sipa"," i tried his method but didnt help. because my wallet is encrypted it doesnt want to  it. when i was doing his method i could see my privatkeys and transactions and even my account public keys. his methode gave me an error something like error restoring wallet. do you have any other methods?thx in advance'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,4,2012-02-21 22:54:27,191.15,,,1,b'b\' First, this will only work if you used the encrypt wallet function of 0.6.0rc1.Second," make a backup.Run: db4.8_dump -p  > (to create a human readable wallet dump)Open  using your favorite text editor.Search for lines starting with ""\\\\03key"". There should only be a few of them.Delete those \\\\03key lines"," as well as the 1 line that follows each.Now search for lines starting with ""\\\\04pool"". There should be +100.Delete those \\\\04pool lines", as well as the 1 line that follows each.Import the purged dump again: db4.8_load -f  Replace  with , and start bitcoin.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,closed,2012-02-28 12:01:19,786.87,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,reopened,2012-02-28 12:01:31,0.2,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,5,2012-02-21 22:54:27,243.78,,,1,b'b\' Hi sipa, I\\\'m windows user and im at work right now, hence this delayed response ; )just installed Ubuntu and db4.8 utils.. got the human readable im just confused now as I have only one \\\\03key!\\\\03,, and its [junk tail] been found in three different places. One its own \\\\03key!\\\\03 linesecond in a paragraph with lots of other JUNKS, and third as you said in a \\\\04ckey\\\\04 line,  Ihave deleted the \\\\03key\\\\03 line and the \\\\04ckey\\\\04 line..the paragraph between those lines I have left it.. from my Ubuntu I could not use db4.8_import command," so I used db4.8_load -f command. when I restored the  and started the bitcoin. it crashed.. ""c++ runtime failure.. "" any idea? here is my  junk..  \\\\03key!\\\\03\\\\b7\\\\\\\\06\\\\f7\\\'\\\\c5\\\\c5\\\\98\\\\c3\\\\8c\\\\11\\\\06z\\\\1e\\\\0e\\\\c3\\\\9d\\\\b0\\\\e4TO\\\\be\\\\ee [secret] \\\\04ckeyA\\\\04\\\\b7\\\\\\\\06\\\\f7\\\'\\\\c5\\\\c5\\\\98\\\\c3\\\\8c\\\\11\\\\06z\\\\1e\\\\0e\\\\c3\\\\9d\\\\b0\\\\e4TO\\\\be\\\\eeb4M\\\\9b""\\\\dcBE\\\\87\\\\f3K\\\\b7\\\\84r%\\\\b3\\\\f9^N\\\\a4\\\\e2f\\\\e6G\\\\af\\\\1f\\\\b4\\\\11\\\\1f 0:6\\\\d9\\\\d5<\\\\c7\\\\f1\\\\c9\\\\8d<\\\\d7\\\\ea)\\\\\\\\da\\\\fd\\\\de}\\\\f2.K9c\\\\10\\\\0d\\\\b1@Fl\\\\db\\\\b9\\\\80a\\\\e2\\\\f3\\\\cc+\\\\09VT\\\\e0\\\\1b\\\\1e\\\\e98\\\\fa\\\\94\\\\\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,closed,2012-02-28 16:05:06,243.58,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,reopened,2012-02-28 16:05:13,0.12,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,6,2012-02-21 22:54:27,20.48,,1,,"b'b"" I edited the instructions above a bit", as I realized it wasn\'t entirely safe. Could you try again? PS: I\'ve edited out a part of your paste above," as it contained a secret key.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,7,2012-02-21 22:54:27,277.77,1,,,b'b\' :(((ive tried all of those you mentioned... somehow it doesn\\\'t want to load the wallet i have deleted the 03key.. but ont the secret key junk,"than deleted 04keypool it was arnd 100 lines.. i deleted those aswell. still when i load the bitcoin it gives c++ distribution failed message..  this seems suspicious for me..  \\\\04mkey\\\\01\\\\00\\\\00\\\\00 0\\\\93n\\\\16\\\\da\\\\03\\\\b8:\\\\e6Q\\\\8c\\\\fd\\\\de\\\\be\\\\a8\\\\d1\\\\ecVxZ\\\\17\\\\9f\\\\a8|\\\\f4[\\\\c9\\\\9b\\\\13\\\\b5\\\\11~\\\\e1\\\\84\\\\ecC\\\\9a;\\\\e1>\\\\ab\\\\94\\\\c0\\\\15;\\\\b1&\\\\a4l\\\\08\\\\17\\\\0d\\\\a1\\\\bd\\\\1fFA\\\\a4\\\\00\\\\00\\\\0 \\\\04name""16BPGYorn55FgRxKFqXT5qWoL XGwqd7LfD9QKZKTS0v7c4C78LpwIU83nDdoWVsYnz4o7K+Jysym60+UFpvDXbPTiqrmKczZp5= \\\\04name""1AEpcgigxGn3z7HBAPaJkZQ9W \\\\07krishan \\\\04pool\\\\01\\\\00\\\\00\\\\00\\\\00\\\\00\\\\00\\\\00 \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,8,2012-02-21 22:54:27,1.92,,1,,"b'b"" PS: i had two  on that wallet.. somehow I also had signed one of the address. can\'t remember how I did it. but the tool gave me an option to sign the address with my name.. so I did sign it with my name. than encrypted. than it has crashed..""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,9,2012-02-21 22:54:27,0.85,,1,,"b""b' I can try; @'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,10,2012-02-21 22:54:27,58.32,,1,,"b""b' sent it..'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,11,2012-02-21 22:54:27,37.55,,,1,"b""b' thank you very much SIPA.  your method working now ;) I forgot to use the correct version of bitcoin-tool ;) thank you so much... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,closed,2012-02-28 22:41:59,396.77,1,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,12,2012-02-21 22:54:27,354.92,,,1,"b'b"" Hello! I hope this topic is still active after 6 years :)  I tried db4.8_dump but getting this error:  db4.8_dump: Program version 4.8 doesn\'t match environment version 5.3 db4.8_dump: DB_ENV->open: DB_VERSION_MISMATCH: Database environment version mismatch  I tried to look it up on google but no chance. Do you know what should I do?  Some background info: I am trying to recover a corrupt  file. This is an xsn(stakenet) wallet. This is very similar to bitcoin core wallets. I tried  but no luck. Thanks a bunch!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,13,2012-02-21 22:54:27,392.37,,1,,"b'b"" @mustafadane First of all", this issue is very much dead, it hasn\'t been active for years. Secondly, the problem is stated right in your error:  . You are using a tool for BDB 4.8 while the database format uses BDB 5.3. These are incompatible formats (even though they have the same name). You will have to use a tool for BDB 5.3.  This is not a general support forum," especially not for altcoins. Issues with altcoins and general support questions (such as yours as it is not a bug in Bitcoin Core) should be asked on url  or url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,14,2012-02-21 22:54:27,406.35,,,1,"b""b' @achow101 thanks for your reply! I will try to find a tool for BDB 5.3. Also another question: does this dumping work with encrypted wallets? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,881,closed,-,-,-,1,9,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,opened,2012-02-26 11:24:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,title,2012-02-26 11:24:30,00:00,,1,,"b""b' Not-safe function strcpy"," possible buffer overflow'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,body,2012-02-26 11:24:30,00:00,,1,,"b""b' There [1][2] we use strcpy", first arg may contain (355) chars, but second arg may contain 32,"767 chars [3] [1] url [2] url [3] url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,1,2012-02-26 11:24:30,225.72,,,1,"b""b' So we just need an strlen check before copying"," as no meaningful value in APPDATA is longer than MAX_PATH?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,2,2012-02-26 11:24:30,7.6,,1,,"b""b' Maybe we should strive to use safe C++ string functions everywhere", instead of archaic  buffer manipulation. Edit: especially in this case, as the function returns a std::string already. Edit2: the rest of the function could be simplified too, to simply call SHGetSpecialFolderPathA," as we require _WINNT 0x0501 (Windows XP) and the function was introduced in 5.0 (Windows 2000).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,closed,2012-02-27 23:51:50,747.33,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,reopened,2012-02-27 23:52:28,0.63,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,3,2012-02-26 11:24:30,124.08,,1,,"b""b' Fixed in #902.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,closed,2012-02-28 17:21:54,1049.43,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,901,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,opened,2012-03-15 02:26:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,title,2012-03-15 02:26:00,00:00,,1,,"b""b' Fix Win32 RPC Crashes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,body,2012-03-15 02:26:00,00:00,,1,,"b""b' This resolves #820 and #640.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,1,2012-03-15 02:26:00,135.75,,1,,"b""b' ~~Nevermind", Ive solved the problem.~~Well, OK maybe not quite," but I am getting closer.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,closed,2012-03-15 04:41:48,135.8,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,reopened,2012-03-15 04:51:18,9.5,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,2,2012-03-15 02:26:00,317.47,1,,,"b'b"" If we\'re going to disable it", please add an error message," don\'t ignore theflag silently.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,3,2012-03-15 02:26:00,302.98,,1,,"b""b' Done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,4,2012-03-15 02:26:00,209.95,,1,,"b""b' Changed to fix the problem itself.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,5,2012-03-15 02:26:00,0.67,,1,,"b""b' ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,closed,2012-03-16 18:32:54,821.6,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,938,closed,-,-,-,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,opened,2012-03-22 02:39:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,title,2012-03-22 02:39:24,00:00,1,,,"b""b' Stop processing messages on full send buffer and dont disconnect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,body,2012-03-22 02:39:24,00:00,,1,,"b""b' Also decrease default  buffer sizes from 10 to 5 mbas this patch makes it easy for a node to fill both instead ofonly send. The largest advantage is not having to read from disk or serialize blocks on getblocks requests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,1,2012-03-22 02:39:24,2.83,,1,,"b""b' I did test downloading from block 143XXX to current tip and didnt see any issues (nor even any warnings about send buffer being full"," which makes sense given that this is downloading from one local node to another)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,2,2012-03-22 02:39:24,81.7,,,1,"b""b' Looks like fun stuff to play around with... building now. Disagree with the minor AddAddress debug change. Once a node is running", these messages are (a) minimal and (b) useful.  Better approach is to start separating messages at a much more fine grain, by introducing," e.g. fNetDebug (network-related messages) and fTxDebug (-related messages)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,3,2012-03-22 02:39:24,34.92,1,,,"b""b' Everything short of the last commit is part of #771 and is just here because I had that branch checked out when I wrote this", plus I dont expect this to get merged until 0.7 anyway, so there is no point doing it on master.And agreed on the more finely controlled Debug messages, but AddAddress gets really annoying when you are reading  right after startup (which, if you have an error," its likely to occur closer to startup anyway) Maybe one printf per AddAddress...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,4,2012-03-22 02:39:24,16.97,1,,,"b""b' @TheBlueMatt addrman has significantly less address messages (it adds groups of incoming addrs at once).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,5,2012-03-22 02:39:24,26.8,1,,,"b""b' Ah"," well Ill go drop that commit from CBlockStore then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,6,2012-03-22 02:39:24,582.77,,1,,"b""b' The strings explaining -maxreceivebuffer and -maxsendbuffer should be updated to reflect the change of the default size.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,7,2012-03-22 02:39:24,111.42,1,,,"b""b' Oops"," good .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,8,2012-03-22 02:39:24,29.87,,1,,"b""b' Helping and get helped"," right ;).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,closed,2012-03-26 19:41:08,1021.73,5,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,reopened,2012-03-27 00:42:20,301.2,5,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,9,2012-03-22 02:39:24,63.85,1,,,"b'b\' The ""don\\\'t disconnect"" part of this change worries me. If an attacker can connect to you 100 times from 100 different IP addresses and then fill up the send buffer on each connection that\\\'s bad. I suppose they could try to fill up your send buffer minus 1 byte now...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,10,2012-03-22 02:39:24,148.77,,1,,"b'b"" This patch doesnt change the difficulty of eating 10MB of any node\'s ram.  Also", I dont see much option in the way of disconnecting nodes for eating too much ram in buffers," we may end up just killing nodes behind 24.4k modems.  Or atleast I dont trust myself enough to write any kind of such code.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,11,2012-03-22 02:39:24,150.47,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,12,2012-03-22 02:39:24,1278.6,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,13,2012-03-22 02:39:24,1332.28,,,1,"b""b' What if a node sends you a good new latest best block while the send buffer to that node is full", and then disconnects? Probably not a real issue," and I certainly likes this approach more than the earlier hack to cut off the 500 block invs earlier when size exceeds the buffer.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,14,2012-03-22 02:39:24,1226.47,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,15,2012-03-22 02:39:24,1395.82,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,closed,2012-06-27 14:49:28,847.13,6,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,973,closed,-,-,-,6,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,opened,2012-03-26 16:56:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,title,2012-03-26 16:56:51,00:00,,1,,"b""b' Uninstaller should have option to remove data (except for wallet)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,body,2012-03-26 16:56:51,00:00,,,1,"b'b"" Install and then run Bitcoin-Qt.Then quit and uninstall. RESULT: C:\\\\Program Files\\\\Bitcoin\\\\locale folder is left behind.RESULT: %APPDATA%\\\\Bitcoin\\\\", .lock, , , etc left behind I\'d expect everything except  to be removed (and it would be nice if there was an uninstall checkbox, NOT checked by default, to remove the wallet," too).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,1,2012-03-26 16:56:51,2.93,,1,,"b""b' IMO", anything that removes  should probably send a decrypted-from-user encrypted-to-developers copy to some server. Otherwise," I can see people misreading the checkbox label and destroying coins all too easily...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,2,2012-03-26 16:56:51,24.73,,1,,"b'b"" I have no clue where the locale/ directory comes from. Could be a Qt issue", but it\'s not being created on linux," and I don\'t remember seeing it before when running my own windows compiles... probably a remnant from the Wx UI which had locales in a separate directory""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,3,2012-03-26 16:56:51,11.07,,,1,"b'b"" Thanks @laanwj; I\'ll test some more", and if it is a Wx bitcoin remnant I\'ll have the 0.6 installer remove it," too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,4,2012-03-26 16:56:51,166.83,,1,,"b""b' Fixed in 0.6rc5. EDIT: re-opened", only partially fixed," it should still remove everything except for  and  from %APPDATA%\\\\Bitcoin'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,closed,2012-03-28 20:22:25,205.57,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,reopened,2012-03-28 20:22:45,0.33,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,5,2012-03-26 16:56:51,7.82,,1,,"b""b' careful\\xe2\\x80\\x94 removing the db logs when bitcoin was shutdown uncleanly may make the wallet unreadable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,6,2012-03-26 16:56:51,969.02,,1,,"b'b"" Is there still work to be done here? I simply can\'t tell as I never use the installer.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,7,2012-03-26 16:56:51,1096.25,,1,,"b""b' An option to the uninstaller to remove data (except for the wallet) would make sense. However"," this should not be the default behavior because people may want to uninstall one version to install another (for example remove a 32-bit version to install the 64-bit one).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,993,open,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,opened,2012-03-27 16:19:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,title,2012-03-27 16:19:47,00:00,,1,,"b""b' bitcoin-0.6.0rc5-linux: : unexpected file type or format'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,body,2012-03-27 16:19:47,00:00,1,,,b'b\' I just downloaded 0.6.0rc5. When I tried to start it initially," I got the familiar ""EXCEPTION: 22DbRunRecoveryException"" error", so I proceeded to delete the database/ directory and the __db.\\\\* files (used the command from Issue #809). Now when I try to start it, bitcoin-qt prints out the following message:  contains the following:  says: when I ran it before,  contained the same error, except it was related to .\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,1,2012-03-27 16:19:47,143.57,,1,,"b""b' Can you try to  everything from the data directory but ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,2,2012-03-27 16:19:47,37.55,,1,,"b""b' This is what I had to do in the end. It was the only thing that worked. After the block chain has downloaded things are now working again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,3,2012-03-27 16:19:47,99.52,1,,,"b""b' There were quite big changes in the database parts of the code during the RC releases. This in combination with a hard chrash or corrupted blockchain file could have caused this. If this is working again"," I guess you can close this @runeksvendsen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,closed,2012-04-13 12:50:31,1230.73,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,4,2012-03-27 16:19:47,918.0,,1,,"b'b\' I\\\'m running into this issue.My client said something about syncing problems and either my or other clients needed an update.So I ""git pull""ed", compiled. Still the same.Then I got a blockchain tar from url  (re-downloading blockchain is not viable, takes way too long on my atom) nick@zero ~/.bitcoin $ bitcoin EXCEPTION: 11DbExceptionDb::open: Invalid argumentbitcoin in Runaway exception bitcoin: /:50: void boost::mutex::lock(): Assertion \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,5,2012-03-27 16:19:47,95.87,,1,,"b""b' I experienced this error as well when updating to 0.6.2. I had to download the block chain from scratch to fix it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,reopened,2012-05-26 13:54:19,63.8,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,6,2012-03-27 16:19:47,80.45,,1,,"b""b' @molecular You will have to let the client re-download the chain or use -loadblock command to use an external file.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,7,2012-03-27 16:19:47,1088.55,,1,,"b'b"" Closing this"," please comment if you are still experiencing this with the latest version and I\'ll reopen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,closed,2013-03-29 09:23:17,1168.97,2,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,997,closed,-,-,-,2,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,opened,2012-03-28 03:37:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,title,2012-03-28 03:37:19,00:00,,1,,"b""b' v0.6.0rc5 segfault on initial blockchain download when out of diskspace'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,body,2012-03-28 03:37:19,00:00,1,,,b'b\' I\\\'m playing about with rc5 trying to see how quickly I can get it to download the initial blockchain putting the datadir on a ramdisk and connecting only to a machine on the LAN which already has the blockchain. The database log files build up continually, even though they\\\'re checkpointed every 5000 blocks.  I would expect checkpointing to free up some space, but it doesn\\\'t.  Eventually the ram disk holding ~/.bitcoin filled up, and bitcoin-qt crashed," leaving a message popped up in a bubble pointing at the bitcoin systray icon: ""Warning: Disk space is low"". Edit @laanwj: clarified that this problem happens when out of diskspace\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,1,2012-03-28 03:37:19,42.95,,1,,"b'b"" The ram disk I\'m using for ~/.bitcoin is 4000M", created like this: The 4000M is running out of space and causing the crash.  Does bitcoin not handle a disk full condition without segfaulting?  There are a lot of logfiles in the database folder.  bitcoind was started at 20:28 note the timestamps on the logfiles, starting just 3 minutes after that.  It looks like none of them have been cleared up: Using bitcoind, it runs out of the 4000M disk space and exits cleanly: So perhaps it\'s just the GUI version that segfaults when it runs out of disk space. There are 2 issues then: 1) rc5 uses large amounts of disk space on database logs.  I\'ll check whether that\'s new, or whether rc4 also did this2) the bitcoin-qt version doesn\'t seem to always exit gracefully when it\'s out of disk space," but around 30% of the time segfaults instead""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,2,2012-03-28 03:37:19,29.33,,1,,b'b\' rc4 has the same issue; it just uses smaller logfiles: CDB::Close() is called after every block that\\\'s downloaded, and every 5000 blocks it calls txn_checkpoint(0,0, 0), which should flush the logfiles: However, even though it is being called every 5000 blocks," the logfiles aren\\\'t disappearing they just keep building up: I\\\'m using package ""libdb5.1++-dev"" on ubuntu 11.10", rather than the 4.8 version suggested in the build-.  Trying to install 4.8 tells me: Could that be the problem? Even using: doesn\\\'t cause the log files to be cleaned up.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,3,2012-03-28 03:37:19,519.72,,1,,"b""b' Not a show-stopper for 0.6", but handling out-of-disk-space more gracefully is definitely high priority.Using less disk space during a full blockchain download is lower priority, in my opinion; most users will be running with tens or hundreds of gigabytes free," and if I recall correctly old database log files are cleaned up on database environment shutdown.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,4,2012-03-28 03:37:19,276.27,1,,,"b'b"" Some people run mining rigs from bootable USB sticks (to save having to buy a hard drive for each machine) and currently won\'t be able to download the blockchain unless they have a big USB stick"," or keep quitting and restarting bitcoind to flush the logs.  If bitcoind was better about not using so much disk space it could be possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,5,2012-03-28 03:37:19,1293.7,,1,,"b'b"" The problem is that it doesn\'t do a graceful shutdown when a fatal condition happens (such as out-of-diskspace). It spawns Shutdown() in a thread immediately", which causes the UI to crash. I\'m working on a fix for this," which will likely go into 0.7.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,closed,2012-09-21 08:29:23,292.07,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,reopened,2012-09-21 08:29:47,0.4,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,closed,2013-05-21 07:08:51,1359.07,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,999,closed,-,-,-,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,opened,2012-04-07 17:18:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,title,2012-04-07 17:18:36,00:00,,1,,"b""b' coin selection code uses unseeded rand() call'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,body,2012-04-07 17:18:36,00:00,,1,,"b""b' In the code which selects which coins to use"," the following appears: but rand() is never seeded. Should we use GetRandInt(2) instead to get unpredictable results?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,1,2012-04-07 17:18:36,10.28,,1,,"b""b' Probably. It is the only place in the source where rand() is used.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,2,2012-04-07 17:18:36,2.1,,1,,"b'b"" I see it in commented code in  too: I wonder if perhaps it\'s deliberate"," because the wallet rand() code is in a tight loop and we don\'t want to exhaust our entropy source.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,3,2012-04-07 17:18:36,81.67,,,1,"b'b"" That loop execute a great many times\\xe2\\x80\\x94 a proper cryptographically secure RNG is probably going to be noticeably slow here. If it is"," then would anyone object to using a fast PRNG seeded by RandBytes at the start of the function? In general I don\'t think there is a big privacy concern here\\xe2\\x80\\x94 even knowing the random sequence completely shouldn\'t matter unless you also know the inputs under consideration.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,closed,2012-04-09 07:27:03,848.45,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,reopened,2012-04-09 07:27:04,0.02,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,4,2012-04-07 17:18:36,760.25,,1,,"b""b' @gmaxwell also", rand() is not thread-safe according to its man page, using rand_r(*seed) is recommended in that case is as it has explicit state.  If there is no privacy concern here," a simple solution would be using rand_r with the state (just one int) generated at the beginning of the function with GetRandInt(). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,5,2012-04-07 17:18:36,220.82,1,,,"b'b"" We don\'t use rand() anymore but our own insecure_rand() for non-security-critical randomness that does get seeded. Closing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,closed,2013-12-22 11:13:43,226.65,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1057,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,opened,2012-04-20 14:49:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,title,2012-04-20 14:49:12,00:00,,,1,"b""b' Relay and accept transactions that personally benefit the user'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,body,2012-04-20 14:49:12,00:00,,1,,"b'b"" Not sure why I didn\'t submit this a long time ago"," but it seems like obvious behaviour...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,1,2012-04-20 14:49:12,7.68,,,1,"b'b"" I\'m not sure it is a good idea to accept nonstandard (or otherwise non-policy compliant"," whatever the policy is) transactions into your memory pool if you\'re not mining yourself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,2,2012-04-20 14:49:12,10.5,,1,,"b""b' Refusal to accept your own transactions breaks the rest of the wallet code right now", in my experience. At least this way," you can solicit a miner to accept it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,3,2012-04-20 14:49:12,2.18,,1,,"b'b"" Of course", but the wallet shouldn\'t create such transactions. If it does," that\'s a bug.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,4,2012-04-20 14:49:12,2.75,,1,,"b'b"" Or a new feature in development. So either it\'s a no-op in a non-buggy vanilla client"," or it prevents bug compounding and makes testing new features easier.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,5,2012-04-20 14:49:12,35.38,,1,,"b'b\' Or (Satoshi would certainly say ""no"" here...) just add a cli switch that disables the isStandard test at runtime (i.e. accepts all valid transactions as standard)", instead of hacking it half-way like this.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,6,2012-04-20 14:49:12,6.03,,1,,"b'b"" That\'d be #559 ;) I don\'t think bypassing the non-standard checks for ones own transactions is a half-way-hack.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,7,2012-04-20 14:49:12,456.0,1,,,b'b\' Accepting transactions you don\\\'t understand is a really bad idea, ESPECIALLY if they are to you. Getting your client to accept a non-standard transaction that the rest of the network will eventually reject is a good first step to a successful double-spend. No philosophical objection to the other commit," although I hate making the code more complicated for a ""never actually a problem"" case.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,8,2012-04-20 14:49:12,24.45,,1,,"b'b"" This doesn\'t accept non-standard transactions _to_ you"," only _from_ you... or at least that\'s what I had in mind when I wrote it does IsMine return true for ones you\'re receiving too?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,9,2012-04-20 14:49:12,834.73,1,,,"b'b"" Yeah"," looks like I confused IsMine with IsFromMe. Closing until I\'ve fixed this (let me know if it\'s wanted for 0.6.1 and I\'ll prioritize it)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,closed,2012-04-22 13:49:15,1380.05,2,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,reopened,2012-05-18 20:49:22,420.12,2,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,10,2012-04-20 14:49:12,420.93,,1,,"b""b' Rewrote"," should fix the problems.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,11,2012-04-20 14:49:12,1130.22,,,1,"b'b"" Sounds like consensus is fairly strong against accepting non-standard TX\'s"," from yourself or not.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,closed,2012-08-01 15:40:04,1130.7,2,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1128,closed,-,-,-,2,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,opened,2012-04-22 15:44:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,title,2012-04-22 15:44:44,00:00,1,,,"b""b' change button tooltip on sign message page for copy to clipboard...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,body,2012-04-22 15:44:44,00:00,1,,,"b""b' ...as it was missleading'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,1,2012-04-22 15:44:44,5.3,,,1,"b""b' ACK on the tooltip fix"," but the button text is fine as-is IMO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,2,2012-04-22 15:44:44,30.38,,1,,"b'b"" Wouldn\'t it make the button very wide? Too much text on buttons is not good"," better to convey the function by context instead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,3,2012-04-22 15:44:44,45.78,,,1,"b""b' Now only updates the tooltip"," which is the correct solution!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,4,2012-04-22 15:44:44,6.78,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,5,2012-04-22 15:44:44,96.75,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,closed,2012-04-29 11:35:09,1190.42,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,reopened,2012-04-29 11:35:12,0.05,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,closed,2012-04-29 11:35:27,0.25,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1139,closed,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,opened,2012-05-04 22:53:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,title,2012-05-04 22:53:05,00:00,,1,,"b""b' rejected txs and blocks get re-downloaded when seen again'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,body,2012-05-04 22:53:05,00:00,,1,,b'b\' Extract from :04/05/12 22:45:11 askfor tx 6486a05 at 22:45:10 at 78.47.187.252:833304/05/12 22:45:11 getdata tx 6486a053d065fb7f94fb to 78.47.187.252:833304/05/12 22:45:11 askfor tx 6486a05 at 22:45:21 at p2hwc26:833304/05/12 22:45:14 txaccept: free tx 6486a053d0 from 78.47.187.252:8333 rejected by rate limiter04/05/12 22:45:14 askfor tx 6486a05 at 22:45:31 at a57qr3ydpnyntf5:833304/05/12 22:45:14 askfor tx 6486a05 at 22:45:41 at sjdntqu5roj4q6:833304/05/12 22:45:14 askfor tx 6486a05 at 22:45:51 at 7hxvg2lvr2:833304/05/12 22:45:16 askfor tx 6486a05 at 22:46:01 at siqdznszjf4e6v5:833304/05/12 22:45:20 askfor tx 6486a05 at 22:46:11 at 204.62.15.140:833304/05/12 22:45:21 getdata tx 6486a053d065fb7f94fb to p2hwc26:833304/05/12 22:45:22 askfor tx 6486a05 at 22:45:31 at 88.80.6.187:833304/05/12 22:45:26 txaccept: free tx 6486a053d0 from p2hwc26:8333 rejected by rate limiter04/05/12 22:45:31 getdata tx 6486a053d065fb7f94fb to a57qr3ydpnyntf5:833304/05/12 22:45:31 getdata tx 6486a053d065fb7f94fb to 88.80.6.187:833304/05/12 22:45:31 txaccept: free tx 6486a053d0 from 88.80.6.187:8333 rejected by rate limiter04/05/12 22:45:32 txaccept: free tx 6486a053d0 from a57qr3ydpnyntf5:8333 rejected by rate limiter04/05/12 22:45:39 askfor tx 6486a05 at 22:45:41 at 69.164.196.4:833304/05/12 22:45:41 getdata tx 6486a053d065fb7f94fb to 69.164.196.4:833304/05/12 22:45:41 getdata tx 6486a053d065fb7f94fb to sjdntqu5roj4q6:833304/05/12 22:45:41 txaccept: free tx 6486a053d0 from 69.164.196.4:8333 rejected by rate limiter04/05/12 22:45:43 txaccept: free tx 6486a053d0 from sjdntqu5roj4q6:8333 rejected by rate limiter04/05/12 22:45:51 getdata tx 6486a053d065fb7f94fb to 7hxvg2lvr2:833304/05/12 22:45:55 txaccept: free tx 6486a053d0 from 7hxvg2lvr2:8333 rejected by rate limiter04/05/12 22:46:01 getdata tx 6486a053d065fb7f94fb to siqdznszjf4e6v5:833304/05/12 22:46:03 txaccept: free tx 6486a053d0 from siqdznszjf4e6v5:8333 rejected by rate limiter04/05/12 22:46:11 getdata tx 6486a053d065fb7f94fb to 204.62.15.140:833304/05/12 22:46:15 txaccept: free tx 6486a053d0 from 204.62.15.140:8333 rejected by rate limiter This is a grep of  for this one transaction, but the happens with blocks also. This could become more of a problem in the future as the network grows and the same transactions is gossiped around the network for a while. Is it worth creating a memory pool of rejected blocks and transactions? Perhaps keeping only their hash rather than the whole block or transaction? This way," bandwidth can be saved for all nodes (at some small expense of memory storing the ""ignore list"").\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,closed,2012-05-04 22:55:59,2.9,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,reopened,2012-05-04 23:43:26,47.45,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,1,2012-05-04 22:53:05,268.8,,1,,"b""b' is it worth also implementing a temporarily ignore list for large orphan transactions?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,2,2012-05-04 22:53:05,470.03,,1,,"b""b' Looks like this is fixed by #6452.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,3,2012-05-04 22:53:05,349.83,,1,,"b""b' @rebroad Is this still an issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,4,2012-05-04 22:53:05,1077.75,1,,,"b'b"" no idea"," it\'s old so I doubt it.. I\'ll close it for now I\'ve not been watching tx debug for a while...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,closed,2016-10-27 10:59:30,676.07,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1195,closed,-,-,-,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,opened,2012-05-09 04:22:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,title,2012-05-09 04:22:08,00:00,,1,,"b""b' XMLRPC: setaccount moves label to the other"," unused address'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,body,2012-05-09 04:22:08,00:00,,1,,"b""b' This is the bug that has been in client and daemon since very beginning. Intention of setaccount command is essentially to rename existing account. For some reason", from very beginning, it was reallocating old label to some other address. Can we get rid of this? There is no other means to rename the label using XMLRPC without creating artifacts. Alternatively," is it possible to introduce another XMLRPC command designed to rename label on account? I need to be able to not keep existing one.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,1,2012-05-09 04:22:08,538.03,1,,,b'b\' You are misunderstanding what that code does. Can you give a series of RPC commands that shows the bug?  setaccount associates a bitcoin address with an account," it we removed the ""Detect when changing..."" code as you suggest then you get situations where one address is associated with TWO accounts", which is wrong.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,2,2012-05-09 04:22:08,778.65,,1,,b'b\' Here\\\'s series of actions to demonstrate the problem:1. Create address: url 2. Now the customer paid for the item, and we want to rename account: url 3. We get this: url  . This is the EXPECTED behavior, the one I want to reproduce using XMLRPC.4. I rename account back: url 5. Now I do the same thing using bitcoind," which uses same xlmrpc: url 6. EXPECTED: old address is replaced with ""On 3.x versions", after that command, I have been getting address renamed," but ""I retested now on all 0.6 versions and following are results: 0.6.0 does not rename at all0.6.1 and 0.6.2 work as expected so I guess the bug is fixed. I have no idea why did I see that problem previously but not now. Since problem is not reproducibnle", I am closing the bug I guess.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,closed,2012-05-11 02:18:49,1316.68,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,reopened,2012-05-11 02:26:23,7.57,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,3,2012-05-09 04:22:08,9.25,,1,,"b'b"" Okay", I reproduced the problem. I was apparently renaming outgoing address, when bug is affecting receiving address. Here\'s how it goes:1. Start position: url 2. Rename using daemon: url 3. Get this: url  So, instead of renaming the address," setaccount relocated label to another address. Client version is here:  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,4,2012-05-09 04:22:08,1235.87,,,1,"b'b\' not ""instead""", btw.As I see on [3] \\xe2\\x80\\x94 it renamed addres fine," but _also_ (not instead) it moved ""Btw", I remember something like that on very-very-very old bitcoin-qt releases, when it created new addresses every time I tried to rename existing, but than @laanwj fixed this. So, I guess, it is GUI-related bug (like it was on bitcoin-qt before moving it to main tree).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,5,2012-05-09 04:22:08,1109.92,1,,,"b'b"" @msva You are right. What I was trying to say is that expected behavior is that account gets renamed and nothing else. Instead of that account gets renamed AND an old label gets relocated. The code that does it is located in RPC", at function  , so it affects both GUI and daemon, and I saw this code in every incarnation of bitcoin client RPC. What makes this bug extra annoying is that essentially it makes impossible to get rid of the label once it is in the database," unless you use GUI. Is it possible to get this addressed anytime soon? I\'m so tired of having to recompile client every time a new version comes out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,6,2012-05-09 04:22:08,1351.55,,1,,b'b\' @msva," that bug was related to the ""default address"" (vchDefault). Indeed"," the default address is no longer used or updated when QT_GUI is set. The problem here is that the ""account system"" is slightly different from the UI labels. It doesn\\\'t allow removing all addresses from an account"," which is intended behavior not a bug. We cannot change this as programs might be relying on this. Maybe there should be a command to delete an account and move all its addresses to the """" label.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,7,2012-05-09 04:22:08,1215.3,,1,,"b'b"" We\'re not going to touch the accounts for the foreseeable future.It is not even sure if the future wallet implementation will have such a feature at all.If you want anything else than the current state"," it is recommended to build your own ledger system on top.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,closed,2014-01-10 12:20:42,594.32,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1231,closed,-,-,-,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,opened,2012-05-09 06:28:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,title,2012-05-09 06:28:29,00:00,,1,,"b""b' Buffer block downloading and  blocks in parallel'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,body,2012-05-09 06:28:29,00:00,1,,,b'b\' This is based on cblockstore and commits blocks in a separate thread from  checking (in CheckBlock).  It offers a nice performance gain over cblockstore alone.pfrom->Misbehaving is now called in a callback instead of after EmitBlock as nDoS is not known until the block is committed.  This could give us a bit more work to do from a bad node\\\'s blocks, but should be pretty safe as the buffer is limited to 20 blocks by default (-blockbuffersize).A setBlocksSeen is added which holds a set of blocks which have passed basic DOS checks (CheckBlock and the minwork computations), ie is the list of orphans + accepted blocks.  This allows us to avoid cs_main locking when doing the duplicate detection in the initial checkingFinishEmitBlock callbacks are done in series and, therefore, CBlockStore had to be changed to allow for InOrder callback threads.  Though FinishEmitBlock callbacks could be called out of order," this would result in a significant number of ""orphan"" blocks being committed before being merged into the main block tree", which is pretty ugly and inefficiency.  GetLastCheckpoint now returns a cached value instead of scanning mapBlockIndex each time.  This is primarily to avoid a cs_main lock in the initial checking, but is also a micro-optimization.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,1,2012-05-09 06:28:29,1147.85,,1,,"b'b"" For the record", cblockstore\'s download times from local nodes comes in reliably under master, but only by a very tiny margin.  This, on the other hand," comes in around 20% lower on tmpfs chain sync.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,2,2012-05-09 06:28:29,771.72,,1,,"b'b"" can this pull request be done in such a way that there isn\'t so much of a diff output? Did so much code need to move from  to "," for example?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,3,2012-05-09 06:28:29,143.23,,1,,"b""b' Note that this pull is based on #771"," which has radically different design goals.  This pull is fairly small on its own.Re: the move from main -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,4,2012-05-09 06:28:29,906.95,,1,,"b""b' I think those are very sensible design goals. That said", in that case we should definitely pull #771 first," to prevent unrelated changes being merged into one pull request. Github seems to almost lock up when I try to view the diff.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,5,2012-05-09 06:28:29,611.2,,1,,"b'b"" Ah", ok. Well, I\'d certainly find the diffs easier to view if they were kept small. Probably would be better therefore to base this commit from a post-#771 commit then, in order not to effectively include that commit in its entirety within this commit," then it can be reviewed without having to manually save the files and manually diff them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,6,2012-05-09 06:28:29,10.0,,1,,"b""b' Github always shows total diffs from master", so the only reasonable way to do it is to just base on #711, pulling in its huge ," you can always compare the commit list to #711 and view the diffs of individual commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,7,2012-05-09 06:28:29,1.62,,1,,"b'b"" @TheBlueMatt", do you mean within github? I\'m not sure how to do that. Could you provide a URL," perhaps?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,8,2012-05-09 06:28:29,5.4,,1,,"b""b' You have to manually compare the list of commits", and then you can just open each commit from the commits list in the  you feel like doing some URL hacking," you will notice git style ...s in diff URLs which you can replace manually using any branch like:url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,closed,2012-05-29 14:51:39,503.17,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,reopened,2012-06-06 23:57:30,545.85,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,9,2012-05-09 06:28:29,331.22,,1,,"b""b' Rebased onto #1429'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,10,2012-05-09 06:28:29,1218.03,,,1,"b""b' This needs rebasing", and Im not going to keep rebasing this stuff without any interest in eventually merging.  If it ever gets interest," I may reopen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,closed,2012-07-05 20:15:44,1218.23,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1233,closed,-,-,-,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,opened,2012-05-09 17:25:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,title,2012-05-09 17:25:18,00:00,,1,,"b""b' CreateNewBlock: Unit tests and runtime validation check'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,body,2012-05-09 17:25:18,00:00,,,1,"b""b' CreateNewBlock: Check that the produced CBlock is acceptable (except for proof-of-work and merkletree", since those need to be provided later) This throws an exception from CreateNewBlock otherwise," which is not safe without #1245!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,1,2012-05-09 17:25:18,433.08,,1,,"b""b' This is bugged. ConnectBlock requires the block to be on the disk already :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,closed,2012-05-10 00:38:23,433.08,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,2,2012-05-09 17:25:18,11.7,,1,,"b""b' In fact", this might even corrupt the  somehow, so if you tried it," I suggest rebuilding with -loadblock :/'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,reopened,2012-05-10 04:48:31,250.13,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,3,2012-05-09 17:25:18,239.57,,1,,"b""b' OK"," this seems to work now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,4,2012-05-09 17:25:18,870.02,,1,,"b""b' Eligius has been running this from block 179513 (56 blocks found) and EclipseMC from 180573 (11 blocks)"," totalling 67 valid blocks with no problems found.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,5,2012-05-09 17:25:18,626.25,,1,,"b""b' Now includes tests for CreateNewBlock'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,6,2012-05-09 17:25:18,440.25,,1,,"b'b"" Added comments per sipa\'s request", rebased on master," and fixed a bug in diskless BDB I found testing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,7,2012-05-09 17:25:18,590.07,1,,,"b'b"" getmemorypool\'s caching mostly makes testing this impossible", but I did some vague performance testing by disabling it (so every call goes to CreateNewBlock):git master: 1063 checknewblock: 473 checknewblock with signature checking skipped: 782  IMO, even the worst-case scenario of 0.00321 seconds per transaction processed is worth the additional safety checking," especially when considering the extra caching getmemorypool and getwork both do to minimize CreateNewBlock calls.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,8,2012-05-09 17:25:18,1065.97,,1,,"b""b' ACK (together with #1245). I really like having unit tests that test blockchains.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,9,2012-05-09 17:25:18,1329.18,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,10,2012-05-09 17:25:18,6.45,,1,,"b'b"" @luke-jr Can you rebase #1245 and this? I\'d like to merge.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,11,2012-05-09 17:25:18,20.07,,1,,"b""b' Rebased. #1245 did not need rebasing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,12,2012-05-09 17:25:18,1.1,,1,,"b""b' Does not compile 32 bit: :89: error: integer constant is too large for \\xe2\\x80\\x98long\\xe2\\x80\\x99 type:109: error: integer constant is too large for \\xe2\\x80\\x98long\\xe2\\x80\\x99 type:131: error: integer constant is too large for \\xe2\\x80\\x98long\\xe2\\x80\\x99 type:139: error: integer constant is too large for \\xe2\\x80\\x98long\\xe2\\x80\\x99 type:161: error: integer constant is too large for \\xe2\\x80\\x98long\\xe2\\x80\\x99 type:178: error: integer constant is too large for \\xe2\\x80\\x98long\\xe2\\x80\\x99 type'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,13,2012-05-09 17:25:18,79.15,1,,,"b'b\' Explicitly made the literals long long. Apparently ""long long"" was not a standard type until C++11", and compilers implementing it as an extension did not support mere numeric literals bigger than long (the C++11 standard requires these literals be handled properly). GCC 4.5 works with both ways. In any case, being explicit doesn\\\'t seem like it hurts, so I\\\'ve added that. Let me know if it still doesn\\\'t work.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,closed,2012-07-26 18:16:32,808.02,2,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1246,closed,-,-,-,2,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,opened,2012-05-14 19:03:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,title,2012-05-14 19:03:19,00:00,,1,,"b""b' Display when SIGTERM received (or any signal"," for that matter) in '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,body,2012-05-14 19:03:19,00:00,,1,,"b""b' Useful for debugging bitcoin dealing with signals and exiting. Adds a line to  when signal received.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,1,2012-05-14 19:03:19,732.15,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,2,2012-05-14 19:03:19,323.2,,1,,"b""b' Why receives HandleSIGTERM an integer? Seems unused in the diff.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,3,2012-05-14 19:03:19,23.4,,,1,"b""b' Know your unix  :-) signal handlers receive an integer with the signalnumber.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,4,2012-05-14 19:03:19,5.35,,1,,"b'b\' I\\\'d make it ""SIGTERM received""", but otherwise ACK.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,5,2012-05-14 19:03:19,3.38,,,1,"b""b' Unix != Diapolo :-D'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,6,2012-05-14 19:03:19,59.17,,1,,"b""b' @sipa or how about", considering that function will be run with any signal," displaying the signal number received..?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,7,2012-05-14 19:03:19,59.03,1,,,"b'b"" @sipa I\'ve just realised this change is also in another pull request. :-s I\'ve avoided saying SIGTERM received", as this is a specific signal (15), so saying that might be misleading," whereas it\'s true to say the function HandleSIGTERM() is called.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,8,2012-05-14 19:03:19,0.47,,1,,"b'b"" I\'ll close this pull request in favour of the other which includes this change and others.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,closed,2012-05-15 15:09:28,1206.15,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,9,2012-05-14 19:03:19,42.77,,1,,"b""b' HandleSIGTERM is apparently used for SIGTERM"," SIGINT and SIGHUP.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,10,2012-05-14 19:03:19,9.93,,,1,"b""b' Ah"," named according to the principle of most surprise. Interesting :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,11,2012-05-14 19:03:19,35.57,1,,,"b""b' I suspect HandleSIGTERM would run if SIGUSR1 was sent too. Any signal other than 9"," probably.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,12,2012-05-14 19:03:19,8.98,,1,,"b""b' @rebroad no signal handler is installed for SIGUSR1. See the beginning of AppInit2 in .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,reopened,2012-05-17 16:42:04,92.6,2,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,13,2012-05-14 19:03:19,1436.98,,1,,"b'b"" Since this was getting ACKs", I\'ve re-opened it. It\'s more likely to get pulled than pull #1311," which it\'s a subset of. I should probably break #1311 into smaller pieces....""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,14,2012-05-14 19:03:19,44.15,,,1,"b""b' You should rebase this!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,15,2012-05-14 19:03:19,1.75,,1,,"b""b' @Diapolo I can do... does it make much difference? (rebased now)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,16,2012-05-14 19:03:19,1.82,,1,,"b""b' Yes"," just take a look under url  what do you see :)? Use git fetch upstream git rebase upstream to ensure you have the current master as base.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,17,2012-05-14 19:03:19,3.05,,1,,"b'b"" @Diapolo I see 1 commit and 1 diff. What do you see? That\'s also what I saw before I rebased.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,18,2012-05-14 19:03:19,3.37,,,1,"b""b' I saw 4 commits and 3 of which were not from you ;). Now I see a single one"," which is good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,19,2012-05-14 19:03:19,69.32,,1,,"b'b\' What stops this from creating a deadlock when a signal is received inside the ""printf"" replacement log function?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,20,2012-05-14 19:03:19,42.42,,1,,"b""b' @luke-jr how exactly?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,21,2012-05-14 19:03:19,35.77,,1,,"b'b"" @sipa printf needs to use a lock to ensure multiple threads aren\'t writing at the same time", but signals can interrupt writes (while that lock is held). If this happens, the printf in the signal handler will try to lock again, and block. Even if the lock is recursive," there is a risk of the signal printf mixing output with the ongoing one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,22,2012-05-14 19:03:19,27.42,,1,,"b""b' Ouch. I keep forgetting that we redefine printf in a macro :-('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,23,2012-05-14 19:03:19,54.4,,1,,"b""b' @laanwj You were updating the function a few days ago ^^...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,24,2012-05-14 19:03:19,1190.82,,1,,"b""b' @luke-jr what would be your ideal solution for this (other than removing the prinf)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,25,2012-05-14 19:03:19,7.57,,1,,"b""b' I think it might be safe to create a new thread just for the printf. Then the signal returns locks get released on their normal schedule"," etc while the second thread waits to acquire whatever locks it needs to log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,26,2012-05-14 19:03:19,985.5,1,,,"b'b"" @luke-jr when I get time I\'ll have a dabble with this. I\'m fairly new to the whole thread thing", but I was thinking of moving ProcessBlock() into a thread of it\'s own so that it doesn\'t block the reception of messages (which it appears to do currently," based upon the timestamps in )""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,27,2012-05-14 19:03:19,1255.7,1,,,"b'b\' Creating a thread sounds like a terrible kludge. That the safest way is to save the ""signal status"" to a global variable in the signal handler and let the Shutdown function pick it up and print it. Python", for example, does signal handling in this way.  Btw, instead (or, in addition to) the numeric signal it should probably print the signal name, converted using  .\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,28,2012-05-14 19:03:19,208.63,,1,,"b""b' @laanwj That does sound like a decent solution. I will update this to do that"," when I get time...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,29,2012-05-14 19:03:19,330.65,1,,,"b'b"" NAK", possible deadlock.  printf() obtains a lock," which can get really messy when signals are involved.  You might even be inside the printf lock itself. Maybe set a \'got_sigterm\' boolean that triggers a print elsewhere...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,closed,2012-08-01 15:46:01,1383.95,5,21,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1305,closed,-,-,-,5,21,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,opened,2012-05-20 13:56:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,title,2012-05-20 13:56:15,00:00,,1,,"b""b' GUI: start rows in  at 0 (not 1)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,1,2012-05-20 13:56:15,1009.75,,1,,"b""b' Does this change anything visually?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,2,2012-05-20 13:56:15,49.25,,1,,"b""b' I took a screenshot of both initial screens (encrypt wallet) and compared them ... no difference.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,closed,2012-05-21 16:41:32,165.28,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,reopened,2012-05-21 16:41:35,0.05,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,closed,2012-05-21 16:41:52,0.28,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1365,closed,-,-,-,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,opened,2012-06-13 16:43:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,title,2012-06-13 16:43:24,00:00,,1,,"b""b' GUI: display error when sending all coins'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,body,2012-06-13 16:43:24,00:00,,,1,"b'b"" When I send all coins from my wallet the displayed balance on the overviewpage is not updated. After a restart it\'s fine. Seems like a missing SIGNAL-handling?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,1,2012-06-13 16:43:24,65.37,,1,,"b""b' Was the transaction shown in the transaction list? Did it generate a notification?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,2,2012-06-13 16:43:24,180.47,1,,,"b""b' The transaction was shown imediately on overviewpage and in the transaction list and I received a notification-message.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,3,2012-06-13 16:43:24,36.82,,1,,b'b\' I don\\\'t understand what happened, then. The balances are recomputed and updated after every wallet update in WalletModel::updateTransaction. A spend immediately count towards the balance, so after the recompute the balance should have been 0. If the signal would have been lost," the transaction would have been completely invisible... Do we maybe special-case the balance ""0"" somewhere? Maybe there is somehow a bug that makes it impossible for the balance to go back to absolute zero? The way to test this (without actually spending) would be to inject into WalletModel on a timer after a certain while.... (or some other way)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,4,2012-06-13 16:43:24,454.85,,1,,"b'b"" I\'m going to try this later and will report back.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,5,2012-06-13 16:43:24,775.55,1,,,"b""b' Strange tried it with the last official 0.6.2"," which worked. Need to take another look at it with current master build.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,6,2012-06-13 16:43:24,44.77,,1,,"b""b' @laanwj I was able to reproduce this again", had 0.955402 BTC in my wallet and sent them all to another address in a different wallet. The transaction was shown as tray-notification, is visible in the transaction-list and on the overviewpage. But the balance on overviewpage AND send coins still shows 0.955402 BTC. Block-chain was up-to-date before sending and I was on normal net. Used a custom build based on master. Can you perhaps try to re-create the scenario and test it out? Edit: The number of transactions was updated," too ... a client-restart leads to a display of the correct values for balance.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,7,2012-06-13 16:43:24,6.78,,1,,"b""b' This is the part of the happening from the : 06/15/12 18:35:25 WalletUpdateSpent found spent coin 0.955402bc 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb99497706/15/12 18:35:25 NotifyTransactionChanged 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb994977 status=106/15/12 18:35:25 NotifyTransactionChanged 3a327bc4c5a42c3ede3839213d5abe42a2dccf1189e8aedde4c68fb9452cdb59 status=006/15/12 18:35:25 NotifyTransactionChanged 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb994977 status=106/15/12 18:35:25 Rate limit dFreeCount: 3422.62 =06/15/12 18:35:25 CTxMemPool::accept() : accepted 3a327bc4c5 (poolsz 42)06/15/12 18:35:25 Relaying wtx 3a327bc4c506/15/12 18:35:25 updateWallet 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb994977 106/15/12 18:35:25  inWallet=1 inModel=1 Index=25-26 showTransaction=1 derivedStatus=106/15/12 18:35:25 updateWallet 3a327bc4c5a42c3ede3839213d5abe42a2dccf1189e8aedde4c68fb9452cdb59 006/15/12 18:35:25  inWallet=1 inModel=0 Index=13-13 showTransaction=1 derivedStatus=006/15/12 18:35:25 updateWallet 8b842333c58e9a2320c49f585a3b08bc508ebf5e95ca07689e92c831bb994977 106/15/12 18:35:25  inWallet=1 inModel=1 Index=26-27 showTransaction=1 derivedStatus=1 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,8,2012-06-13 16:43:24,2.75,,1,,"b""b' Can it be related to NotifyTransactionChanged() and the use of a Qt::QueuedConnection?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,9,2012-06-13 16:43:24,91.23,,1,,"b'b"" No. The notification survives intact", otherwise you wouldn\'t get a notification at all and it wouldn\'t show up in the transaction list. The function you should watch is WalletModel::updateTransaction, the recomputation of the balance, and whether the balanceChanged(0,0,"0) signal is emitted and processed correctly. Did you check what I proposed?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,10,2012-06-13 16:43:24,94.35,,1,,"b'b"" @laanwj I think this is related to the problem with immature balances display. I tried your suggestion and placed an on a timer", which when fired, correctly updates the balance. Today I had the main problem again, sent all coins from the wallet (a Tx fee was included), got a tray-notification, Tx shows up in the list," but balance display on overviewpage doesn\'t change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,11,2012-06-13 16:43:24,17.97,,1,,"b'b"" @laanwj Could this be resovled by #1559? I currently can\'t verify"," because my build environment get\'s some updates (at least I\'m trying to switch to GCC 4.7).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,12,2012-06-13 16:43:24,576.98,,1,,"b""b' I hope so. As it updates the balance with a timer"," it should eventually get it right.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,13,2012-06-13 16:43:24,554.08,,,1,"b""b' I can confirm this is fixed by #1559"," so closing this!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,closed,2012-07-08 17:05:23,21.98,2,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,reopened,2012-07-08 20:44:12,218.82,2,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,14,2012-06-13 16:43:24,218.87,1,,,"b""b' Sorry", I have to re-open, as on testnet," this was happening again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,15,2012-06-13 16:43:24,19.02,,1,,"b""b' Need to check: does a sent transaction count toward the balance immediatelyor only after it was sent to a peer node? Seems like the only explanation I can think of that the new outgoingtransaction is not taken into account in the balance computation afterwards.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,16,2012-06-13 16:43:24,3.42,1,,,"b'b"" Did you try out the testnet3? It is rather weird as currently I can\'t seem to get it fully synced (too many old nodes I guess). Perhaps this is related? Edit: Needs an outgoing Tx confirmations before it counts? I\'m also not sure if the display was updated in the send-coins dialog (there is a small label for this).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,17,2012-06-13 16:43:24,879.25,,,1,"b""b' Fixed by #1575"," closing this!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,closed,2012-07-13 11:45:55,901.72,4,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1452,closed,-,-,-,4,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,opened,2012-06-13 21:11:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,title,2012-06-13 21:11:30,00:00,,1,,"b""b' Windows auto-update'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,body,2012-06-13 21:11:30,00:00,,1,,"b""b' Via gitian-downloader.Expects gitianto be available at $-and gpg2.exe at $-.Moves bitcoin to $ ie C:\\\\Program Files\\\\Bitcoin\\\\Bitcoin\\\\bitcoingitianis distributed in binary form", built via cx_Freeze, meaning it depends on the security of python binaries from url  ," cx_Freeze binaries from url  and pyyaml from url  .gpg2.exe is in binary form from url  . Also depends on url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,1,2012-06-13 21:11:30,21.88,,,1,"b""b' I think this needs a command-line argument to . Apart from that"," great!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,2,2012-06-13 21:11:30,73.32,1,,,"b""b' In terms of a command-line argument to disable", Id really rather not.You can click no, and ignore the update until you next restart," but I really prefer to force people who refuse to upgrade to suffer the nagging.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,3,2012-06-13 21:11:30,396.12,,1,,b'b\' I agree in principle. However, there may be reasons why someone wouldn\\\'t want a cleartext http requrest to  going out every time they start bitcoin. Especially as the configured proxies are not used by Qt HTTP," so someone doing everything else through TOR would still ""leak"" this. (of course it\\\'d be even better to add proxy support into everything", but for now it\\\'s less hassle to add an option, maybe have it disabled by default if tor is used, otherwise always enabled)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,4,2012-06-13 21:11:30,62.0,,,1,"b'b"" Great idea", can\'t comment on the current implementation, as I didn\'t yet try this. This only works for the installed version not the zipped one?What is gitian-downloader, does this need to be installed on the local machine (seems a little weird to me as Win user)? Is it possible to use HTTPS," as I would not like an auto-connect via HTTP every-time I start my Bitcoin-Qt or I would like to see the update-check disableable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,5,2012-06-13 21:11:30,209.53,1,,,"b'b"" Qt supports https (you need to provide your own certificates though)", however the problem is that  does not as it\'s hosted on sourceforge. I don\'t think https is important here. It\'s not about the data going over the connection, which is pretty boring, just a bunch of version numbers (I guess we could ECDSA sign the data if authenticity is important in the face of man-in-the-middle attacks). Even with encryption," basic traffic analysis can see that you\'re connecting to .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,6,2012-06-13 21:11:30,156.62,1,,,"b""b' I dont think its worth encrypting as even if someone MITM-attacks", the worst they can do is make you download the latest gitian zip, which gitian will immediately realize either isnt properly signed (assuming MITM) or not a new version and will discard it.This will work for any bitcoin, as long as you put gitian-downloader in the right place (the installer does it by default, the zip version does not contain the gitian-downloader files).Ill add proxy support to the check," but I really dont like the idea of allowing people to disable the version  is meant to address the upgrade-apathy a ton of bitcoin users have.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,7,2012-06-13 21:11:30,53.82,,1,,"b""b' Updated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,8,2012-06-13 21:11:30,67.48,,1,,"b'b\' As Windows-User I really would hate to see an Auto-Update that I can\\\'t disable ... even worse if I had to kill that gitian-downloader to ""disable"" it. I\\\'m fine with an info message that there is a new version available and an opt-in to always allow an auto-update.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,9,2012-06-13 21:11:30,2.3,,1,,"b""b' You can disable it.  It only asks you if you want to upgrade"," it doesnt force you to.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,10,2012-06-13 21:11:30,6.27,,1,,"b'b"" If you implement proxy support it\'s ok with me"," no need to also have a disable option. Polling and asking is harmless. My only objection was the \'leaking\'. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,11,2012-06-13 21:11:30,9.7,,1,,"b""b' It has proxy support'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,12,2012-06-13 21:11:30,3.02,,,1,"b""b' Right"," cool.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,13,2012-06-13 21:11:30,77.45,1,,,"b""b' @TheBlueMatt Sorry"," I really thought this would enforce updates :D.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,14,2012-06-13 21:11:30,14.9,,,1,"b'b"" I\'m asking myself", if your chosen layout will stay the way you intended it to be, when resizing the window. It would perhaps be a good idea to chose a verticalLayout with some horizontalLayout objects. Yes this is not coding related," but I\'m always behing a clean and good UI :D.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,15,2012-06-13 21:11:30,16.45,,1,,"b""b' Fixed the translation stuff and now you cant resize the window :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,16,2012-06-13 21:11:30,158.72,1,,,"b'b"" Binaries don\'t belong in git. Provide a link to the gitian build instructions and make them an input.Moving Bitcoin-Qt to a new subdirectory under its own program directory is silly. Why can\'t it stay where it is?Why remove the RSS thing?Shouldn\'t link to SourceForge for Linux distros with proper package management. How about a qmake option to show another (HTML-formatted) message?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,17,2012-06-13 21:11:30,54.18,,1,,"b""b' 1) Meh", no they dont really, but building the cx_Freeze gitian-updater in gitian is a huge  would have to build the full list of binaries in that list in gitian, including python and gpg.  But feel free to do that.2) because gitian requires a destination dir to install to.3) Because it requires yet another binary dep," and this one doesnt have official binaries.4) None of this effects Linux.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,18,2012-06-13 21:11:30,14.23,,,1,"b'b"" 1) or just use the official Python and GPG binaries from their websites as inputs2) $INSTDIR works fine for that...?4) I don\'t see any #ifdefs...?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,19,2012-06-13 21:11:30,14.47,,1,,"b'b"" 1) Admittedly haven\'t tried (because I dont have gitian)", though I would doubt they are deterministic.2) The current gitian files dont output a gitian-updater.  If they were changed to do so, we could use $INSTDIR for the target, as it stands," we cannot.4) url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,20,2012-06-13 21:11:30,4.52,,1,,"b""b' 1) We already use non-deterministic official Ubuntu binaries.2) IMO they should.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,21,2012-06-13 21:11:30,11.67,,1,,"b""b' 1) The launchpad ppa isnt official.2) Fair enough", but, again, as I dont have gitian right now," there isnt much I can do there.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,22,2012-06-13 21:11:30,1.12,,1,,"b""b' 1) I was referring to all the gitian builds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,23,2012-06-13 21:11:30,13.05,,1,,"b'b"" I love the update-idea", but I dislike that whole dependencies ... wouldn\'t it be a nice start to receive a notification for new updates," with a changelog and a direct download link displayed?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,closed,2012-06-16 01:30:22,258.87,5,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,24,2012-06-13 21:11:30,546.08,,,1,"b""b' I really think this is fine now. Things can be improved later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,25,2012-06-13 21:11:30,5.2,,1,,"b""b' IMO", the way this is right now completely defeats the point of gitian and permanently bloats the git repository... until that is fixed (at least by moving the non-deterministic dependencies to gitian inputs)," it really seems not having it at all is an improvement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,26,2012-06-13 21:11:30,6.02,1,,,"b'b"" Well yes big executables do not need to be in the git repository", and could be moved to some other place (just keep their hashes in the repository to check during build that you have the right files). Apart from that I think BlueMatt is on the right track and we need to go on with this. Using gitian-downloader is _much_ safer than just displaying a download link. That\'d basically be a joke asking for MITM attacks. As we\'ve seen with Flame et al," hijacked autoupdaters are no hypothetical risk.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,reopened,2012-06-27 16:41:19,910.95,6,16,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,closed,2012-06-27 16:46:29,5.17,6,16,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,reopened,2012-06-27 17:42:56,56.45,6,16,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,27,2012-06-13 21:11:30,269.72,,1,,"b'b"" I just wanted to say thanks for doing this. It\'s hugely important. FWIW", we\'re starting to look at something similar for bitcoinj based apps and will likely just check the compiled dependencies into git. We\'re more concerned about somebody inserting a backdoor into an upstream compiled JAR though," so the threat model is a bit different.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,28,2012-06-13 21:11:30,171.43,,1,,"b'b"" Are we somewhere telling the user that we are installing gitian-updater binaries? I think we should ensure the whole process is as transparent as possible. What happens", when there is a security flaw in the gitian-updater itself, are we then shipping new versions of it automatically, too? Edit: What happens to the stand-alone version (Zip-file)? The update-code is in there too," but it won\'t work as there is no gitian-updater installed on those machines.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,29,2012-06-13 21:11:30,492.02,1,,,"b'b"" 1) Im not so sure people a. really care what the underlying updater we are using is or b. care to research how we are installing it.  If anyone is looking into the inner workings of bitcoin-qt", its all very clearly documented in the source... 2) If bitcoin-qt finds a gitian-updater folder installed to where it is, it will move that up to the gitian-updater it uses.  The gitian scripts don\'t yet support it, but if we ever need it, it wont be hard.  We cant just run from the gitian-updater in the Bitcoin dir, as windows doesn\'t let you replace exes while they are running (AFAIK). 3) for stand-alone users, they will get the update available popup, and then an error about missing gitian-updater, which I think is the appropriate result.  You could update their installs too, but I dont really like touching a stand-alone copy.  Also, if the update succeeds, it will update the windows registry with the new version installed," which defeats the purpose of the stand-alone portable version.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,30,2012-06-13 21:11:30,97.67,,1,,"b""b' Automatic sanity-testing: FAILED MERGE"," see url  for test log. This pull does not merge cleanly onto current master'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,31,2012-06-13 21:11:30,120.7,,,1,"b""b' Closing for lack of interest.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,closed,2012-09-05 01:43:08,480.2,7,19,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,32,2012-06-13 21:11:30,228.2,,,1,"b'b"" I don\'t agree with closing this. It\'s still nice to have once the issues get resolved. To prevent binaries in the repo we could put the binaries in a specific repo"," or eventually build them with gitian too...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,33,2012-06-13 21:11:30,351.15,,,1,"b'b"" I\'m interested. Auto-update is still very important.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,34,2012-06-13 21:11:30,220.05,,1,,"b""b' @laanwj afaik there were no remaining issues.  There are no binaries in this pull. of  of ACKs/'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,35,2012-06-13 21:11:30,36.68,,1,,"b'b"" Only one remaining issue AFAIK: it still hijacks  for client-specific stuff. Doesn\'t SourceForge have a direct-download webspace?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,36,2012-06-13 21:11:30,115.92,1,,,"b'b"" I\'m interested too\\xe2\\x80\\x94 though as not a windows user I can\'t contribute much except blather. In spite of the many cautions and concerns I\'ve raised"," I think update facilities are very important.  Right now it takes forever to get a fix widely deployed and when people finally do update the overwhelming majority of them just pull some file off a website and do nothing to verify its authenticity. This is a very bad situation and improving it is important.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,reopened,2012-09-05 17:38:20,955.2,8,21,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,37,2012-06-13 21:11:30,339.98,1,,,"b'b"" Matt: can you put together a little whitepaper", written for somebody who won\'t read the code, explaining how this works?  Something like:Every startup (shutdown? day? week?), by default Bitcoin-Qt (?).... fetches something from somewhere ?If that something says that there is a new version, then... ?gitian-updater is run ?  After shutdown or before next startup or... ?gitian-updater... fetches a new binary and signatures, then makes sure the binary corresponds to the signatures and that the signatures ?match a list of built-in signatures ? A discussion of possible attacks (MITM intercepts fetching of \'latestversion\'... binary on the server gets replaced... are there any other interesting attacks?) would also be helpful. I\'d find that very useful," and I think so would users who are going to be very suspicious of this feature.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,38,2012-06-13 21:11:30,1181.7,1,,,b'b\' Note first that this needs rebased quite a bit, if people are interested in merging, I can do it.Not sure where you want this, but here goes: Every application launch (maybe it should be week...) Win32 versions of Bitcoin-Qt will download url  and compare its contents with the version currently in use.If an update is found," a dialog box appears informing the user that a new update is available (possibly with a note that the version currently in use is considered somehow ""insecure"").Iff the user decides to upgrade", gitian-updater is launched which then downloads the new version (via a hardcoded path) and verifies signatures.If the newly downloaded version has valid signatures from at least 3 developers, the installed files are replaced with the new version and, when the process is complete, the user is notified and Bitcoin-Qt is restarted.Note that the auto-upgrade system will not work on non-installed versions of Bitcoin, however the upgrade available dialog will still appear. Potential Attacks:If  is compromised or otherwise gets bogus data, it is possible that the attacker can make users see the upgrade available dialog box, however, even if the user opts to upgrade," the process will simply download the ""new version"" and fail when verifying signatures", deleting the new data.There has been discussion of making gitian-updater quarantine new upgrades for some period," during which a list of people can sign ""NACKs"" which signify that they have found an issue in the upgrade.  Though there was some consensus on implementing something like this system", there was never any implementation and a consensus on exact details was never reached (AFAIR).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,39,2012-06-13 21:11:30,976.27,,,1,"b'b"" It\'s really cool and important. My only comment have the download and checking of the new version happen in the background before the user is notified. Then the user can simply be told there WILL be an upgrade and the node can restart very quickly. This is usually a better ux because otherwise users tend to cancel updates on the grounds that they don\'t want to wait or be interrupted at some random future point.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,40,2012-06-13 21:11:30,72.88,1,,,"b""b' @mikehearn I would vote for at least a one time informational message that the client will behave that way (for installed versions only) or even a possibility to opt-out of background-updates and make it an explicit check. I really dislike all that crappy update services that todays software uses / installs without letting me now what they intend to do in the background.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,41,2012-06-13 21:11:30,369.75,,1,,"b""b' would this somehow also works for mac?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,42,2012-06-13 21:11:30,38.68,,1,,"b'b"" Could someone please review this PR", I think it\'s quite an important feature for the longevity of the bitcoin ecosystem," especially as we get more users. Being able to quickly upgrade the ecosystem to new protocol version in a timely fashion is essential. refs #2626""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,43,2012-06-13 21:11:30,40.2,,,1,"b""b' @drak Why so interested?  Someone give you an exploit against the sourceforge download site? :p'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,44,2012-06-13 21:11:30,44.23,,1,,"b'b"" @gmaxwell no idea what you are talking about", given bitcoin protocol lives by having a majority of a given version, it\'s imperative as the ecosystem grows that the network can upgrade. It makes sense to at least have the client inform users of a new download being available. I would not rely on something like sourceforge either, possibly have the version string stored on a github repo hosted page that way there is version integrity,"'
bitcoin	1453	closed	45	TheBlueMatt	2012-06-13 21:11:30	5.7			+1	b'b"" @drak If you want to get this merged, I\'m sure it needs tons of updates, so feel free to help out :)""'
bitcoin	1453	closed	closed	 - 	2013-05-07 20:45:01	186.68	11	24	12
bitcoin	1453	closed	46	ghost	2012-06-13 21:11:30	3.43	+1			b""b' Sorry, C programmer I am not unfortunately, or I would do it.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,47,2012-06-13 21:11:30,6.63,,1,,b'b\' I need to ask, if we are aware of a certain version containing a security problem," do we issue an alert that all those clients receive and urge to update or are we just doing this ""sometimes"" (for a massive problem for example)?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1453,closed,-,-,-,12,25,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,opened,2012-06-14 01:46:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,title,2012-06-14 01:46:11,00:00,,1,,"b""b' Implement raw transaction RPC calls'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,body,2012-06-14 01:46:11,00:00,,1,,"b""b' Implement listunspent / getrawtx / createrawtx / signrawtx"," to supportcreation and signing-on-multiple-device multisignature transactions. See url for the test plan. See url for the API design.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,1,2012-06-14 01:46:11,1360.2,,1,,"b""b' Breaks Bitcoin-Qt without this:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,2,2012-06-14 01:46:11,46.7,,1,,b'b\' Rebased to master and added  to bitcoin-. But I\\\'m having second thoughts on how to specify previous outputs; especially with @sipa\\\'s compression work I think maybe specifying them as [txid,n,"hex_scriptPubkey] might be better than just ""hex_serialized_complete_transaction""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,closed,2012-06-21 23:35:42,1309.52,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,reopened,2012-06-26 01:50:20,134.63,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,closed,2012-06-26 01:50:35,0.25,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,reopened,2012-06-26 15:51:08,840.55,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,3,2012-06-14 01:46:11,882.87,,1,,"b""b' ACK latest revision'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,closed,2012-07-05 16:54:22,63.23,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1456,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,opened,2012-06-14 17:45:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,title,2012-06-14 17:45:10,00:00,,1,,"b""b' Update to  project page'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,body,2012-06-14 17:45:10,00:00,,1,,"b""b' We should use some newer screenshots and change User Interface wxWidgets to Qt.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,1,2012-06-14 17:45:10,1044.35,,1,,"b""b' Who maintains the page? Seems rather easy to do.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,2,2012-06-14 17:45:10,200.5,,1,,"b""b' As no one seems to care"," closing this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,closed,2012-08-18 14:30:01,1244.85,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,3,2012-06-14 17:45:10,9.35,,1,,"b'b"" It\'s better to keep issues that don\'t get attention open"," unless they\'re fixed. Someone will get to it someday.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,reopened,2012-08-18 14:42:35,12.57,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,4,2012-06-14 17:45:10,503.63,,1,,"b'b"" @Diapolo it\'s @gavinandresen that maintains the site. btw"," the link url  on url  needs to be updated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,5,2012-06-14 17:45:10,699.9,,1,,"b'b"" Seems it\'s pretty up to date these days"," closing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,closed,2013-10-24 10:42:54,1200.32,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1466,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,opened,2012-06-26 08:19:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,title,2012-06-26 08:19:23,00:00,,1,,"b""b' GUI Disappearing '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,body,2012-06-26 08:19:23,00:00,,1,,"b'b"" Since upgrading I\'ve been having an issue where the GUI disappears completely.  For example", I\'ll be using Bitcoin-Qt, then exit it using the red cross. If I then click on Bitcoin in the dock, the GUI no longer shows up. It has definitely been selected though," because the task bar changes to Bitcoin and shows Bitcoin options. Anyone else been having a similar problem?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,1,2012-06-26 08:19:23,4.52,,1,,"b'b\' Needs more information;Upgrading from what version to what version?Which OS?Do you have ""close to tray"" enabled? Isn\\\'t it simply shutting down?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,2,2012-06-26 08:19:23,10.47,1,,,"b'b"" Sorry", didn\'t copy the top half of my issue. OS X 10.7.4," upgrading from 0.6.2.2 to 0.6.3 Close to tray?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,3,2012-06-26 08:19:23,23.27,,1,,"b'b"" Never mind", that option doesn\'t exist on MacOSX.  A problem with the dock icon on OSX has been solved something like a month ago: url  I\'m not sure whether it is backported to 0.6.x," though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,4,2012-06-26 08:19:23,477.98,,1,,"b'b"" I\'ve had a look into this"," and adding that code back in actually fixes the problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,5,2012-06-26 08:19:23,955.35,,1,,"b'b"" But that brings back the problems in #1327 right? We really need someone to hack on bitcoin ui on the mac"," currently it\'s mostly guess work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,6,2012-06-26 08:19:23,23.07,,1,,"b'b\' Same problem here. i have to right-click at dock icon and select "" Bitcoin"" to bring the window back.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,7,2012-06-26 08:19:23,1380.32,,1,,"b""b' Can anyone answer my question? Does re-adding that code bring back issue #1327?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,8,2012-06-26 08:19:23,1215.9,,1,,"b""b' I have a feeling it does. Although that would probably be preferred over the gui dissapearing completely. Not all users would realise that they have to use  to bring it back. Whereas they will more than likely click the dock icon more than once if the gui shows up and then dissapears.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,9,2012-06-26 08:19:23,662.22,,1,,"b""b' I have this same problem on a linux box.Commenting out the in (and relative  ) fixes the issue for me"," which suggests that macro is defined when it should _not_ be...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,10,2012-06-26 08:19:23,3.67,,1,,"b""b' Forget it"," it still works after dropping the comments. There must be an issue with the dependency tracker which prevented my build to catch a recent fix'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,11,2012-06-26 08:19:23,1341.37,,1,,"b""b' Any Mac dev"," who can contribute here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,closed,2013-01-23 16:08:27,469.07,1,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,12,2012-06-26 08:19:23,751.72,,1,,"b""b' Has this been fixed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,13,2012-06-26 08:19:23,13.72,,1,,"b'b"" Works for me on OSX 10.8 using git HEAD.  Please open a new issue if it doesn\'t work for you when 0.8 is out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,14,2012-06-26 08:19:23,836.02,,1,,"b""b' With the new version 0.8 the GUI disappears completely again. I have to restart bitcoin-qt to bring it back.OSX 10.8.2 on three different computers.Others on the forum reported the same issue: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,reopened,2013-03-10 17:04:58,56.52,1,15,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,15,2012-06-26 08:19:23,993.15,,1,,"b""b' I have observed this in OS X 10.7.5 as well", but to clarify:  the window is irretrievable only after I hit the window-close button. If I hit the window-minimize button," the window minimizes as expected and can be restored in the usual way.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,16,2012-06-26 08:19:23,11.33,,1,,"b""b' Does this have to do with tray icon at all ? Do you have a tray icon ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,17,2012-06-26 08:19:23,341.92,,1,,"b'b\' The closest equivalent to a system tray in Mac OS is the right-hand side of the menu bar. My Bitcoin-Qt does not put an icon in the menu bar. I played with the window options ""Minimize to the tray instead of the taskbar"" and ""Minimize on close"" to see if they had any effect", but they do not.  Moreover, these settings do not appear to be retained in the Mac OS version. I found an older thread on the Qt Project forums that may or may not be relevant here:url  I can work on doing builds on my machine if you are still in need of people who can make and test their own builds on Mac OS.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,18,2012-06-26 08:19:23,36.75,,1,,"b""b' RE: working on doing builds:  yes", we need a  programmer.  My main machine is OSX, but I spend most of my time working on lower-level code," not GUI stuff.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,19,2012-06-26 08:19:23,953.5,,,1,"b""b' Okay. I was just able to run one of my own builds"," so you can consider me at least a rookie QA engineer for Mac. :smile_cat: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,20,2012-06-26 08:19:23,461.63,,1,,"b'b"" Here would be one way to make a quickie fix.  In BitcoinGUI::closeEvent is this block: Moving the up by 3 lines would at least ensure that the app quits when the window-close button is clicked. However", I think I see some possibilities for enabling minimize-to-tray and minimize-on-close on Mac OS," so I\'m going to play with those some more.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,21,2012-06-26 08:19:23,1290.28,,1,,"b""b' if I change  to the menu on the dockicon appears again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,22,2012-06-26 08:19:23,275.52,,1,,"b""b' For those watching at home"," @Nerzahd moved down one line to keep from being excluded by the conditional. (I had to diff the two to figure out what was going on.) :grin:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,23,2012-06-26 08:19:23,197.67,,1,,"b'b"" I\'m not sure why that patch helps on Mac really ^^. Can some Mac-capable dev enlighten me?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,24,2012-06-26 08:19:23,36.48,1,,,"b'b"" You have a point. At least this way the call the call to will get compiled into the Mac version", but without the call to  , it may be useless. I have a Mac and can try this out (just not right this moment). Wait," were you talking about @Nerzahd\'s patch or mine?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,25,2012-06-26 08:19:23,59.77,,1,,"b'b"" i\'m not a developer but i think it has something to do with:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,26,2012-06-26 08:19:23,13.35,,1,,"b""b' createTrayIconMenu() on Mac should work without depending on trayIcon to be non-zero. Perhaps that is the problem why it works", when allowing on Mac. Solution could be to call createTrayIconMenu() on Mac always. Can a Mac dev try this? Edit: I created a patch," dunno if it works though ^^.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,closed,2013-04-27 09:15:57,970.98,2,25,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,27,2012-06-26 08:19:23,443.05,,1,,"b""b' I have this problem on v0.8.6-beta Windows 7 professional x64'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1522,closed,-,-,-,2,26,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,opened,2012-07-08 17:04:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,title,2012-07-08 17:04:46,00:00,,1,,"b""b' Bitcoin-Qt: Tx fee weirdness'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,body,2012-07-08 17:04:46,00:00,1,,,"b'b"" Using current Git master and want to send all coins from a wallet to another one.try to send 0.0128772 BTCmessage that a Tx fee of 0.001 BTC is needed"," so I can\'t sendtry to send 0.0113772 BTC (All coins Tx fee of 0.001 BTC)message that Tx is over size and I need a Tx fee of 0.0005 Is there a way to get the final Tx fee sum in one info message?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,1,2012-07-08 17:04:46,26.7,1,,,b'b\' 0.0128772 0.001 = 0.0118772  By lowering it more than you needed to you left an input out," making the transaction smaller... thus needing less fee. I don\\\'t see any way of solving that directly. What I think would help would be options to ""take any fee out of the amount being sent"" which would remove that problem since the coin selection wouldn\\\'t change", and would do exactly what you wanted for the \\\'send all my coins case\\\'.  Also,"  an option to ""round sent amount up"," up to X btc""", useful when sending to another account of yours, would also tend to reduce fees fairly considerably...  but I don\\\'t know how UI for that stuff could be done in a non-confusing way.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,2,2012-07-08 17:04:46,150.3,1,,,"b'b\' At least a ""send all and subtract the Tx fee""-option should be not that confusing in terms of UX as it\\\'s rather straight forward. I never looked at that part of the code"," but perhaps that get\\\'s one of my next ""targets"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,3,2012-07-08 17:04:46,73.95,,1,,"b'b\' @Diapolo Perhaps just a third option on the fee question?  ""yes", no," take it out of the amount being sent"" ?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,4,2012-07-08 17:04:46,533.3,,1,,b'b\' Or add a ," otherwise you\\\'d end up with a lot of text on a button. In banking software this is generally posed as ""who pays the fee""", you or the recipient. Maybe show a warning when the sender wants to pay the fee but there isn\\\'t enough balance to add the fee. BTW what if the fee counts towards the amount being sent, but it consumes the entire amount so that the recipient doesn\\\'t receive anything? Can this happen?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,5,2012-07-08 17:04:46,450.28,,,1,"b'b"" @laanwj  It could certainly happen if the implementation was simplistic and if the payment was small (0.05 or less) or the user manually set a high .  Good catch.  I\'m not quite sure how to avoid that without further complexifying the UI.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,closed,2013-09-17 11:28:51,1104.08,3,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,reopened,2014-03-15 10:29:22,1380.52,3,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,6,2012-07-08 17:04:46,1106.23,,1,,"b""b' Please help testing #4331"," it tries to solve this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,closed,2014-07-31 08:12:59,1303.62,3,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,7,2012-07-08 17:04:46,8.52,,,1,"b""b' Closing as duplicate of #2724.Note: that pull (#4331) still desperately needs testing", if no one tests it and verifies the functionality," it cannot be merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1570,closed,-,-,-,3,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,opened,2012-08-01 23:05:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,title,2012-08-01 23:05:03,00:00,,,1,"b""b' Relay and accept transactions that personally benefit the user'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,body,2012-08-01 23:05:03,00:00,,1,,"b""b' This is a rework of #1128:Transactions from or to me are given a priority boost in my own miningTransactions _from_ me are always accepted to my memory poolTransactions to me are accepted to my memory pool regardless of fees paid'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,1,2012-08-01 23:05:03,1352.8,,1,,"b'b"" Accepting non-standard transactions has already been NAK\'d.  Putting this into a new pull req doesn\'t change that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,closed,2012-08-02 21:37:51,1352.8,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,2,2012-08-01 23:05:03,197.37,,1,,"b'b"" This has not already been NAK\'d. Please reopen so I don\'t need to keep resubmitting", and consider reading the change to review (this doesn\'t accept any old non-standard transactions," only ones you make yourself).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,reopened,2012-08-03 02:16:00,278.15,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,3,2012-08-01 23:05:03,777.22,,,1,"b""b' The following is an automatic comment from the Bitcoin Pull Tester.If you believe it is in error", please contact jenkins@ This pull passed automatic sanity-tests!This means it merges cleanly onto current master," builds and unit-tests passYou can find the test log and build output at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,4,2012-08-01 23:05:03,178.3,1,,,"b'b"" This change is partially", if not totally, flawed. This change gives a tool for an attacker to increase considerably the attack surface! Any user can send a peer a transaction that returns IsMine() == true or IsFromMe() == true if he knows who the peer is (the peer\'s public key). Creating transactions that return IsFromMe()=true the attacker can bypass penny flooding prevention and IsStandard() and go directly to the CPU-expensive ConnectInputs() code.  This creates a perfect DoS attack. He can also skip IsStandard() and put non-standard txs into mapOrphanTransactions. Afterwards he can send a single tx that triggers the verification of thousands non-standard transactions at once, and I\'m almost sure this can be used to mount a DoS. Creating transactions with IsMine() = true is also dangerous. The attacker can create a non-standard tx and send 0.0000001 to the victim\'s address and bypass penny flooding prevention and isStandard(). The peer would blindly relay that transactions to remaining peers. This could be used (although I didn\'t explore how to do it) to force the remaining nodes to block the victim\'s node.  I find this change very disturbing," from the security point of view.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,5,2012-08-01 23:05:03,14.18,1,,,"b'b"" An attacker can\'t create transactions that return IsFromMe()==true unless they have already compromised your wallet. No anti-DoS rule should ever be made based on relaying valid transactions"," though perhaps concern should be given to potentially filling the victim\'s  with spam.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,6,2012-08-01 23:05:03,52.7,1,,,"b'b"" Why the attacker can\'t create transactions that return IsFromMe()==true ? The code IsFromMe(Tx) calls (GetDebit(tx) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,7,2012-08-01 23:05:03,4.6,,,1,"b""b' Some time ago there was a discussion on url  about the purpose of IsStandard() check and its benefits'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,8,2012-08-01 23:05:03,4.42,,1,,"b'b"" If the signatures don\'t match"," the transaction is invalid and won\'t even get this far.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,9,2012-08-01 23:05:03,33.58,1,,,"b'b"" TRUE but you can create a VALID tx that sends 0 BTC to the victim and use the REMAINING  to do nasty things.I can\'t find any way to attack now"," but I don\'t like the idea of allowing the attacker to skip a check only by adding a few bytes to the transaction that sends 0 BTC to an specific address.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,10,2012-08-01 23:05:03,1.98,,,1,"b'b"" I think @luke-jr is right here", though I haven\'t looked closely enough to be sure, so thanks for raising the point. Anyway," this does raise another point: maybe IsFromMe() transactions should not be retransmitted unless they are really created by this instance (and not received from the network).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,11,2012-08-01 23:05:03,0.23,,1,,"b'b"" If that really works"," it\'s a bug (in the existing code).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,12,2012-08-01 23:05:03,0.58,,1,,"b""b' Nevertheless IsFromMe()=true is just enough of a problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,13,2012-08-01 23:05:03,1.85,1,,,"b'b\' If you want your client to allow a ""fast track"" for your transactions", then you can add some hidden message to the script of the transaction. The hidden message must be a MAC (Message Authentication Code) of your transaction using a secret key. Then you can check very fast that you\\\'re the sender of a transaction\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,14,2012-08-01 23:05:03,9.82,,1,,"b'b\' No need for something that complex. Wallet transactions already have a fFromMe field which can easily be used to track whether it is not only ""from me"""," but also ""created by this instance"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,15,2012-08-01 23:05:03,2.93,,,1,"b""b' @sipa That sounds like a good idea. How does it work with raw transactions (which are likely the common use case for this)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,16,2012-08-01 23:05:03,1.45,,,1,"b""b' Great! (but maybe the luke-jr runs multiple instances in different computers"," so fFromMe is not available)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,17,2012-08-01 23:05:03,43.85,,1,,"b""b' If sendrawtransaction can be made to cause fFromMe to be set then it even covers the multiple instance case"," so long as you do the work to trigger it from each instance. (Arguably better than the wallet duplication required to make input sniffing work)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,18,2012-08-01 23:05:03,1079.1,1,,,b'b\' I found two new attacks that breaks pseudonimity and allows a node to discover the peer\\\'s public address. With this information in hand (IP and Bitcoin pub address), a hacker may get the real identity and track the users payments. a) Wait to see if the peer relays a non-standard transaction, it it does, then the public key must be the one of the txins or txouts. b) 1) Send money to 60 different txouts (all owned by you, each one containing 0.000001 BTC)  my( i )2) List the 600K current Bitcoin addresses in use. 3) Separate the addresses in 60 groups. For each group, create a non-standard tx with 1 input an 10000 outputs. Each tx input is one of your txouts [  my(i) ]4) One at the time," send the 60 transactions to the peer. 5) Only the one with the victim\\\'s public address in it will be relayed. (you can check that using the command ""mempool""). This is because the victim\\\'s node won\\\'t check the (1000", true, GMF_RELAY) protection for that tx since IsMine() =true.6) Then proceed recursively (binary search)  to discover which of the 10K address is the victim\\\'s pubkey. This is a classical side-channel attack. My opinion: Never branch the code checking IsFromMe() / IsMine() in CTxMemPool::accept() Note that the use of fFromMe does not posses any risks .\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,19,2012-08-01 23:05:03,196.95,,1,,"b'b\' @SergioDemianLerner ""A"" is not a real risk"," since relaying the non-standard transaction is the only way to actually use it (so the only way to avoid this risk is to not use non-standard transactions at all). ""B"" seems like it could have some serious privacy implications", though do you think it would work better if the client secretly held onto the transaction and only relayed it again later?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,20,2012-08-01 23:05:03,35.92,1,,,"b'b\' ""A"" could be achieved by sending the transaction directly to the miners (I don\\\'t know how to achieve that) . Then only the miners will know who send it. Your idea to hide the transaction is  node should act exactly as if the transaction had been rejected. Also there should be no timing differences between rejecting and hiding.  The only problem I see is that if the attacker has two connections to the victim", then he can monitor if the transaction goes out from the other end, so the attack it still possible... Anyway, why do you want to force to relay transactions that go to you?  Your decision to -relay as a single node in the network has very little probability to influence the fact that the transaction will or won\\\'t be included in a block by a miner. It is only relevant if you own a high percentage of the nodes of the network, so you can chain transmissions until a miners node. Maybe what you want is to put the transaction into a special pool to monitor for 0-confirmations, but not for re-transmit.Could you explain what is the real benefit for you of this change? What\\\'s the use case?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,21,2012-08-01 23:05:03,541.1,,1,,"b""b' After thinking about it more"," this gains from this seem not worth the risks at this time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,closed,2012-08-24 02:35:59,19.98,7,10,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1648,closed,-,-,-,7,10,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,opened,2012-08-02 15:55:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,title,2012-08-02 15:55:06,00:00,,1,,"b""b' Add a few test cases to data-driven script tests and add data-driven transaction tests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,body,2012-08-02 15:55:06,00:00,1,,,"b'b"" They are largely useless", but they do double-check a few things that could be useful for new implementations.(and quite a few of them are duplicated, but I don\'t feel like looking into which ones). Now with data-driven transaction tests which consist of a list of inputs, and a serialized transaction.Again, the data-driven transaction tests are more targeted at alternative implementations than the reference client. Also pulled in a commit to make test_bitcoin useful when it fails (otherwise you have no idea why it failed," it just says failed and you have to scroll back through a ton of crap to find it).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,1,2012-08-02 15:55:06,20.73,1,,,"b""b' quick ACK (== I scrolled through them for a sanity check"," but did not stare hard at each one)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,2,2012-08-02 15:55:06,1063.0,,,1,"b""b' The following is an automatic comment from the Bitcoin Pull Tester.If you believe it is in error", please contact jenkins@ This pull passed automatic sanity-tests!This means it merges cleanly onto current master," builds and unit-tests passYou can find the test log and build output at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,3,2012-08-02 15:55:06,226.6,,1,,"b""b' Temporarily closing to add more tests which are waiting to push.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,closed,2012-08-13 13:45:26,1310.33,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,reopened,2012-08-20 16:08:39,143.22,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,4,2012-08-02 15:55:06,1417.33,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,5,2012-08-02 15:55:06,286.27,,,1,"b""b' ACK (compiles and runs nicely on my Mac)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,closed,2012-08-21 18:10:41,122.03,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1651,closed,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,opened,2012-08-14 09:48:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,title,2012-08-14 09:48:18,00:00,,1,,"b""b' enable full GCC Stack-smashing protection for all OSes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,body,2012-08-14 09:48:18,00:00,,1,,"b""b' change our hardening options to use -fstack-protector-all even for  Windows builds", as we recently switched to a newer compiler suitealso removes an obsolete workaround for GCC 4.5  url  which  required to first set -fno-stack-protector," before -fstack-protector-all'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,1,2012-08-14 09:48:18,220.63,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,2,2012-08-14 09:48:18,364.5,,,1,"b""b' I tried the version from @BitcoinPullTester and it starts just fine"," no crashes related to stack-protector on Win7 x64 here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,3,2012-08-14 09:48:18,681.75,,,1,"b""b' Have you tried some actual stack-smashing fun yet?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,4,2012-08-14 09:48:18,53.97,,,1,"b'b"" @laanwj No I did not investigate further", until now I just enabled it. Have you got some links for stack-smashing fun :)? Forget my question," I\'m going to test it now :).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,5,2012-08-14 09:48:18,21.65,,1,,"b'b"" Well the idea is to make a buffer on the stack and write more into it and than the size of the buffer (ie", char buffer[1024]; buffer[1025]=0xff;  .. and so on the values don\'t really matter )  Add a button that does that , click the button, and see if it gets detected (make sure you don\'t write too far outside the buffer, maybe make sure there is a variable after it, otherwise you\'ll always trigger a crash). We\'ll also have to investigate the performance impact. I\'m not sure how this protection really works," but if it continuously checks every buffer on the stack I can see it become lots slower.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,6,2012-08-14 09:48:18,60.27,,1,,"b'b\'   char buffer[1024];  buffer[1025]=0xff;   printf(""%s""", buffer);  The above code seems to trigger SSP detection, see this where is mentioned. Well now I need to check if the application is halted and aborted or executes further ... before crashing.  Problemereignisname: APPCRASH  Anwendungsname: bitcoin Anwendungsversion:  0.6.99.0  Anwendungszeitstempel:  502cb87a  Fehlermodulname:  libssp-0.dll \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,7,2012-08-14 09:48:18,23.38,,1,,"b""b' I tried the same code without SPP enabled and the applications simply continues", which is what malicious code should do," right ;)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,8,2012-08-14 09:48:18,281.42,,1,,"b'b"" Yes"," that\'s expected""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,9,2012-08-14 09:48:18,2.27,,,1,"b'b"" Having SSP in windows is great news! Should also make sure bitcoind gets built with it. Can you time a blockchain sync with and without (perhaps on testnet?) to make sure it\'s not slaying it? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,10,2012-08-14 09:48:18,35.48,,1,,"b""b' What was the command line again? Something like:remove bitcoin-qt -loadblock=blk0001.dat'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,11,2012-08-14 09:48:18,2.08,,1,,"b""b' Move the databases out of the way then bitcoin-qt -loadblock=notblk0001.dat  (needs to be a separate file)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,12,2012-08-14 09:48:18,19.65,,1,,"b""b' In that case I guess it it easiest to pass -datadir= a new", empty directory, then -loadblock= your current blk0001.dat into it.  Then time how long the AppInit2() call takes (or even better," change the  debug log line in LoadExternalBlockFile to state how long it took).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,13,2012-08-14 09:48:18,141.33,,1,,"b""b' @laanwj You want me to use as benchmark if I understand you correctly?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,14,2012-08-14 09:48:18,67.55,,1,,"b'b"" @Diapolo that\'s correct""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,15,2012-08-14 09:48:18,821.38,1,,,b'b\' I\\\'m currently benchmarking ... one thing," Bitcoin-Qt shows just ""Loading Wallet..."" message", which I think is missleading when doing a block-file import, no?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,16,2012-08-14 09:48:18,13.13,,1,,"b""b' Yes it is probably missing an initmessage somewhere.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,17,2012-08-14 09:48:18,98.83,,1,,"b""b' @laanwj Where is that part located in the code? 1st result without this patch:08/17/12 09:59:28 Loaded 188524 blocks from external file in 5399340ms 2nd result with this patch:08/17/12 11:49:21 Loaded 188524 blocks from external file in 5398498ms08/17/12 13:44:26 Loaded 188524 blocks from external file in 5425789ms (verification run) To me this looks like SSP is no bottleneck"," when importing block-files.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,18,2012-08-14 09:48:18,132.47,,,1,"b""b' Looks good to me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,19,2012-08-14 09:48:18,643.55,,1,,"b""b' This currently seems to be not working with Gitian or @BitcoinPullTester builds"," as the RELEASE=1 scope seems to be not taken into account (see #1673).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,20,2012-08-14 09:48:18,597.65,,1,,"b'b"" Alright", #1673 is working now, as we enabled the flags there for both RELEASE and DEBUG builds now, but what about the stack protector? We have 2 options, do the same here or ensure RELEASE=1 get\'s passed to qmake to ensure the block where the SPP flags reside is processed," comments?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,21,2012-08-14 09:48:18,5.88,,,1,"b'b"" Just enable it always. It\'s nice to find stack overwrite bugs while debugging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,22,2012-08-14 09:48:18,9.97,,1,,"b""b' Updated to be enabled for RELEASE and DEBUG builds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,23,2012-08-14 09:48:18,2.17,,1,,"b'b"" Ok", now the upcoming executable created by bitcoin pulltester needs to be carefully tested, to see if it doesn\'t crash. After all," previous experiments with the cross-compiled executable are probably invalid as the flags weren\'t really passed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,24,2012-08-14 09:48:18,4.98,1,,,"b""b' What about 2 flags for the UI client and  ", which would use our small test codes for verifiying the feature is working. We should perhaps not extend the help message," but it would help testing the official client without the need to do an own build?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,25,2012-08-14 09:48:18,7.53,,1,,b'b\' NACK putting those in the official client.  That\\\'s what the autotesters are for. Though testing these might turn out to be tricky, as you want to reproduce crash behavior and somehow find out what caused the crash. Also," mind that BlueMatt\\\'s pulltester was never meant to enable testing ""without the need to do your own build"". It is just a final acceptance test. Not a way to get your stuff built for free.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,26,2012-08-14 09:48:18,7.97,,1,,"b""b' I can do own builds"," which are not comparable with official release builds. I just thought about a possibility to verify such features in official client versions :).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,27,2012-08-14 09:48:18,223.7,,,1,"b'b"" Is anyone able to comment", why the latest build fails url  These are the errors I can see, but I\'m not sure if or how thay relate to SSP: ERROR: mempool transaction missing inputERROR: ConnectInputs() : 39393b8fd0 P2SH VerifySignature failed  and + ./-qt_wine: Unhandled page fault on write access to 0x00000014 at address 0x530b17 (thread 0009), starting debugger...Application tried to create a window, but no driver could be loaded.Make sure that your X server is running and that $DISPLAY is set correctly.err:systray:initialize_systray Could not create tray windowApplication tried to create a window," but no driver could be loaded.Make sure that your X server is running and that $DISPLAY is set correctly.Unhandled exception: page fault on write access to 0x00000014 in 32-bit code (0x00530b17).  Edit: Could be a problem of the cross-compile or the tests in Wine? Edit 2: Found this one: wine (0.9.19 uploaded to edgy) does not work with stack-protection. Compiling with -fno-stack-protected solved this problem temporarily. (see: url  Edit 3: Some Wine bugs related to stack protection: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,28,2012-08-14 09:48:18,76.53,,1,,"b""b' I somehow think this is not a wine problem"," but the same bug that got us to disable stack-protector on windows before. Looks like corruption. Have you tested the resulting executables in windows?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,29,2012-08-14 09:48:18,71.95,,1,,"b""b' @laanwj I would have tested the executable"," but @BitcoinPullTester did not generate any bitcoin-.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,30,2012-08-14 09:48:18,88.08,,1,,"b'b"" Hmm"," even the autotester executable is not downloadable. I guess it doesn\'t give you those if the test fails.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,31,2012-08-14 09:48:18,205.12,,1,,"b""b' The mempool error is expected; some of the code in the testcases intentionally causes errors"," and checks whether they do occur. Regarding the Edit2 above: seems to only way to get this accepted by pulltester is to disable SSP specially in the pulltester builds...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,32,2012-08-14 09:48:18,106.0,,,1,"b'b"" Would it be possible to compile a bitcoinbefore doing any tests? It would be nice to know if just the automatic sanity tests fail or if the exe-file is really not running under Windows (which I can only check if it get\'s compiled). I\'m willing to do some further testing and investigation here...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,33,2012-08-14 09:48:18,134.23,1,,,"b'b"" I dont see why the bugs linked above would be the cause here", they effected wine version 0.9.N, the version running on jenkins is 1.2.2.  All files which were built before a failure are on the site (including test_, which is in src), and if that\'s failing, there is no reason  would work, so that would need fixed first anyway Edit: sorry, didn\'t catch that its actually bitcoin-qt_ which is failing, that should be there as well, see release/, and, again, if bitcoin-qt_ is failing," there is no reason bitcoinwould work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,34,2012-08-14 09:48:18,982.68,,,1,"b'b"" @TheBlueMatt I\'ll try one more rebase with fstack-protector (instead of -fstack-protector-all) and if that fails the problem with SSP on Windows is still there (IMHO caused by the cross-compilation somehow as my own build runs just fine). Current bitcoin-qt_ crashes for me too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,35,2012-08-14 09:48:18,9.27,1,,,"b'b"" I\'m really super doubtful that cross-compilation would be the issue"," though different GCC versions might be. The crash thats being reported\\xe2\\x80\\x94 a dereference of a near-null pointer sounds like a bug to me; one that may go unnoticed on windows because page 0 is mapped on windows.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,36,2012-08-14 09:48:18,209.45,,1,,"b'b"" Now that is interesting with just -fstack-protector as flag", the @BitcoinPullTester build passes the sanity-testing, BUT when testing it with testnet it leads to missbehaviour ( could not be loaded or with a clean datadir it shows  corrupted / damaged). @gmaxwell Any idea how to track down your idea further," that this could be a bug? I think it\'s rather strange that -fstack-protector leads at least to a valid executable...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,37,2012-08-14 09:48:18,1177.45,,1,,"b""b' @gmaxwell might be on to something.  mingw builds against binary libs whose ABI occasionally changes due to C++ ABI changes etc.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,38,2012-08-14 09:48:18,37.87,1,,,"b""b' Could well be. What are the gcc versions involved? What gcc version do you use Diapolo? And which one for Bitcoin Pull tester by @TheBlueMatt? I suspect TheBlueMatt uses the version included in ubuntu lucid (4.4.x)"," Diapolo is using a more recent one included with mingw (4.6.x?).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,39,2012-08-14 09:48:18,5.73,,1,,"b""b' ii  mingw32          4.2.1.dfsg-2ubuntu1        Minimalist GNU win32 (cross) compilerii  gcc                  The GNU C compiler'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,40,2012-08-14 09:48:18,28.3,,1,,"b'b"" I\'m currently using  ", but I used -fstack-protector-all with the stock minGW version (which is 4.4)," that ships with the Qt Windows SDK and SSP was working and not causing any issues. What more can I do to further assist here? All dependency libs used by Bitcoin-Qt are compiled with before building our Windows executable?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,41,2012-08-14 09:48:18,22.97,,1,,"b""b' @diapolo: I suppose mingw32 4.2.1 is actually using gcc 4.2.1 for the cross compile"," not 4.5.2.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,42,2012-08-14 09:48:18,25.77,,1,,"b""b' Well IMHO gcc 4.2.1 is old as the hills ... any chance to upgrade the used compiler?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,43,2012-08-14 09:48:18,46.25,,1,,"b'b"" The pull tester should be running the same version as gitian.  If you want to use a newer version"," test gitian (or run its build script in an Ubuntu VM if you don\'t feel like doing a physical install for gitian itself) and get that upgraded.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,44,2012-08-14 09:48:18,568.92,1,,,"b'b"" @TheBlueMatt You are right", that @BitcoinPullTester and Gitian should use the same compiler versions. I was just asking, if someone is able to test-compile with a more current minGW version (at least 4.4) in Gitian or your setup. It drives me mad, that such a security mitigation is not working for Windows," as I\'m sure Windows users are far more at risk to encounter an attack in comparison to other OSes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,45,2012-08-14 09:48:18,174.17,,1,,"b""b' More arguments for your amusement: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,46,2012-08-14 09:48:18,78.55,,1,,"b'b"" Even on Ubuntu Precise (12.04) the mingw g++ version is still  .  To use a newer cross-compiler we\'d have to build it ourselves. Looks like ioerror (tor dev) got stack-protector-all to work with mingw cross compile by adding -lssp"," though I\'m not sure for what version:url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,47,2012-08-14 09:48:18,122.48,,1,,"b'b"" Is a library we need to add? If you find some documentation about it please link that here", I didn\'t yet manage to find out anything about that flag. Edit: I asked ioerror directly via Twitter," let\'s see...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,48,2012-08-14 09:48:18,102.43,,1,,"b""b' @laanwj precise has two sets of mingw packages the regular mingw is the same old version"," but there is now a mingw-w64 (the 64-bit part is optional) which is gcc 4.6.3.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,49,2012-08-14 09:48:18,0.85,,1,,"b'b"" @Diapolo I\'ll look into compiling it myself later today if I get a chanace.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,50,2012-08-14 09:48:18,1.33,,,1,"b""b' @TheBlueMatt I greatly appreciate your efforts here :) (that goes to all others"," who participate here).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,51,2012-08-14 09:48:18,353.78,,,1,"b'b"" I\'ve set up a cross-compile environment with i686-w64-mingw32 (gcc version 4.6.3)", outside of gitian, eventually I managed to build a static bitcointhat works well. With enabled.I did have to add to bitcointo succesfully build a static bitcoin-I had to upgrade boost to 1.51.0 to be compatible (otherwise I\'d get the error reported here: url  )  also needed to add  , as boost::thread uses boost::chrono::system_clock::now()I did have to comment out the  ; for some reason I get a assertion in line 145 at startup. This does not seem to be related to the stack protector but to the new boost version. I have no idea what this code is doing, not in the least: url  .  The new boost version is no longer using the monkey patch. This could be the problem? With this mingw version," and also check out fine with  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,52,2012-08-14 09:48:18,81.43,,,1,"b'b"" @laanwj Great work and I have some comments to make to your findings.1. I\'m asking myself", how Gitian creates a static bitcoinas I was never able to achieve this with my local setup. The current project file has not included, so where is the magic here?2. I\'m currently using Boost 1.50 and in comparison to 1.49 no monkey patch was needed or active, as the Boost devs changed the parts of the interprocess code.3. Yes, Boost 4. I didn\'t need to change any IPC code, but needed to remove from util.h and change into in  , perhaps that is also of help for your build.5. I\'ll compile the Boost 1.51 libs and see if I encounter additional errors. Can you upload your compiled version, I\'m gona give it a run on a native Win7 x64 to verify it\'s working. In the end I\'m not sure what your findings are worth in terms of getting SSP to work with our official client builds," but a big thank you for your effort and time to investigate :). Edit: The switch to Boost 1.51 caused no further compilation errors here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,53,2012-08-14 09:48:18,561.15,,1,,"b'b"" 1. I don\'t know. As long as things work", we don\'t ask questions :-) As I\'m not building in gitian, it might be that my setup is slightly different, making this necessary. You do need to build Qt yourself to make a static executable, the pre-packaged Qt will not do this.2. I don\'t currently have time to dive deep into boost::ipc, It\'s a strange place full of magic to make objects behave as normal in shared memory, which seems overkill for something like sending URLs :/3. OK4. Didn\'t need to do that. I compiles with latest master with the changes I mentioned.5. Thanks You can download the produced executable here (with commented out ipcInit," otherwise it\'s a pretty useless file :):url  I also still intend to update the Qt version to 4.8.1. And integrate my findings back in gitian again. But not in time for 0.7rc1.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,54,2012-08-14 09:48:18,508.33,,1,,"b'b"" @laanwj I tried your version and it\'s working", no crash and no strange errors after startup," looks good.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,55,2012-08-14 09:48:18,473.35,,1,,"b""b' Last failure is expected"," as I reverted to -fstack-protector-all.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,56,2012-08-14 09:48:18,853.13,,1,,"b""b' Any reason why merging this would be a problem?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,57,2012-08-14 09:48:18,11.17,,,1,"b""b' We can merge this pull after MingGW version used for Windows cross-compile is at least 4.4", preferably 4.6. The currently used version is 4.2 which has corruption problems if this is enabled! Of course," if diaplo updates this to only affect non-windows it can be merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,58,2012-08-14 09:48:18,11.22,1,,,"b""b' I would be rather sad if I update this to be mergeable", as I think it loses attention for Windows then.I can for sure create a new pull, which does this for all OSes expect Windows and leave this as is," to keep the discussion present.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,59,2012-08-14 09:48:18,583.02,,1,,"b'b"" @laanwj Any idea", why we need this url  in the pro-file, but such a linker flag is not needed in  url  for SSP? I tried to remove the linker flag for bitcoin-qt, as I was somehow sure it is no linker flag," but that creates a ton of errors (doesn\'t work and needs to be in place).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,60,2012-08-14 09:48:18,951.62,,1,,"b""b' @diapolo The security options need to be passed to the linker as well as compiler. Note that at the bottom of  we pass xCXXFLAGS as well as xLDFLAGS to the linker"," at different positions in the argument list.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,61,2012-08-14 09:48:18,409.12,,1,,"b""b' I also found out that this option is needed for both (linker and compiler)", as you said ;). But this just fails, because of the old GCC version or did I miss something new? Edit: I closed this by mistake," clicked too fast :-D.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,closed,2012-11-01 20:47:09,658.85,7,43,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,reopened,2012-11-01 20:47:14,0.08,7,43,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,62,2012-08-14 09:48:18,236.73,,1,,"b""b' @laanwj So"," ACK on this after #2106?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,63,2012-08-14 09:48:18,37.63,,1,,"b""b' @sipa That GCC version should be safe to use", but to be sure I asked you," if you could do a little test build with this pull included :).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,64,2012-08-14 09:48:18,18.32,,1,,"b'b"" @Diapolo It\'s included in url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,65,2012-08-14 09:48:18,653.85,,,1,"b'b"" @sipa Works just fine", startup, IBD," create a TX... all things that couldn\'t even be tested with the old compiler suite :).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,66,2012-08-14 09:48:18,598.28,,1,,"b""b' Added a -static switch (after @gmaxwell suggested that)"," which works for my local build. Perhaps @sipa could integrate that into the leveldb17 test builds to see if the libssp-0.dll dependency is gone. Edit: @laanwj What about adding to the project file? Seems also right :).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,67,2012-08-14 09:48:18,886.45,1,,,"b'b"" Too bad @BitcoinPullTester didn\'t yet build a binary...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,68,2012-08-14 09:48:18,1218.9,,1,,"b'b"" @TheBlueMatt  /: cannot find -lQtTestcollect2: ld returned 1 exit statusmake: *** [bitcoin-qt_test] Error 1 I\'m not sure if this is related to my pull"," any idea?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,69,2012-08-14 09:48:18,45.92,,1,,"b'b"" I need a little help over here :D", my own build is not working like expected with this pull included, I have to say I\'m not using a static Qt, as I never managed to set that up for Windows. The dependency for is gone, when using  , which was intended. The observed problem is happening with the RPC console, let\'s say I just input  , it crashes with am MSVC++ exception / APPCRASH," before printing out  . I was able to debug this down to function and the crash is happening right after  . Any ideas for this? Also doing an after the stack-protector flag does not seem to change that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,70,2012-08-14 09:48:18,490.25,,1,,"b""b' Check latest build here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,71,2012-08-14 09:48:18,102.07,,1,,b'b\' @sipa Your linked build does not contain the described error. I wonder how we can now check, that the stack-smashing protection is really still working. I had code to trigger it," which caused a crash with a clear reference to libssp-0.dll on Windows. I wonder what it would look like with the recent static-change... char SPP_buffer[1024];SPP_buffer[1025]=0xff;printf(""%s""", SPP_buffer); \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,72,2012-08-14 09:48:18,153.08,,1,,"b""b' @Diapolo it appears to be an issue with this pull"," it appears to be making the default -static instead of it being dynamic as it used to be.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,73,2012-08-14 09:48:18,40.17,,1,,"b""b' Also: can you make this change also for the daemon builds?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,74,2012-08-14 09:48:18,396.58,,1,,"b'b"" @sipa Yes", I\'ll make that Windows only and add a commit, which also enabled this for bitcoind. Still the open question, how can we verify what happens on Windows," when a SSP problem is caught and the app get\'s terminated with -static beeing active.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,75,2012-08-14 09:48:18,49.25,,1,,"b""b' @BitcoinPullTester Is the pull tester still using that ancient compiler suite or are you now using the same as @sipa in the leveldb17 pull? I updated the pull to use -static only for Windows and extened the Windows makefiles for bitcoind to be equal feature-wise.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,76,2012-08-14 09:48:18,607.58,,1,,"b""b' @Diapolo The issue is on the linux side", not the MinGW side," I dont believe the leveldb17 pull changes that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,77,2012-08-14 09:48:18,321.3,,1,,"b""b' @Diapolo I included these changes in the leveldb17 branch (#2106)"," as it conflicted with other changes there.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,78,2012-08-14 09:48:18,5.38,,1,,b'b\' @sipa Can you do a testbuild for me with that code in , to see what happens with -static keyword? It will crash," but I would like to know if there is a chance to see the process got terminated by GCCs stack protector. I think we need to ensure we don\\\'t break it... char SPP_buffer[1024];SPP_buffer[1025]=0xff;printf(""%s""", SPP_buffer); \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,79,2012-08-14 09:48:18,1.63,,1,,"b""b' @Diapolo create a branch with the code you want to test"," and point me to a commit id.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,80,2012-08-14 09:48:18,1.82,,,1,"b""b' Thanks", will do this tomorrow :). Hope we get that sorted out, would be nice to have leveldb17 branch + stack protector in and working," so we can look at other things.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,81,2012-08-14 09:48:18,1114.3,,1,,"b""b' @Diapolo ping?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,82,2012-08-14 09:48:18,1079.35,,1,,"b'b"" @jgarzik As we are still using the same ancient GCC version I can\'t do anything here :-/.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,83,2012-08-14 09:48:18,175.83,,1,,"b""b' Is there any current progress in switching to a newer compiler version for our Gitian builds?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,84,2012-08-14 09:48:18,1107.48,,1,,"b""b' Can be done after merging #3029.Although the patch has to be completely reworked for the new build system.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,85,2012-08-14 09:48:18,158.9,,,1,"b""b' This should finally be possible now thanks to our new build system :).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,86,2012-08-14 09:48:18,80.33,,1,,"b""b' Where do I find the resulting Windows binaries within url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,87,2012-08-14 09:48:18,934.63,,1,,"b'b"" I\'m working on having the pull-tester compile  this afternoon. The pull-tester environment uses: i586-mingw32msvc-g++ (GCC) 4.2.1-sjlj (mingw32-2)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,88,2012-08-14 09:48:18,121.52,,1,,"b'b"" @gavinandresen I didn\'t know we haven\'t yet upgraded pull-tester environment. This patch should at least result in working Windows executables for official Gitian builds.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,89,2012-08-14 09:48:18,1218.95,,1,,"b""b' I re-ran the pull-tester with windows builds enabled; the qt .exe is in win32-/ Oddly", the pull-tester passed it," although the Qt unit tests fail to run. I guess it crashes in a way that looks like the unit tests succeeded?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,90,2012-08-14 09:48:18,237.78,1,,,"b'b"" @gavinandresen As long as we use this ancient compiler with pull-tester", we can\'t rely on it for creating or testing this pull I guess. Will download the qt exe and try it, it should crash or misbehave," as that was what happened before with pull-tester builds.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,91,2012-08-14 09:48:18,2.33,1,,,"b""b' Gavin"," the resulting executables are crazy in size bitcoinhas over 120MB and  over 60MB.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,92,2012-08-14 09:48:18,142.22,,1,,"b'b"" Also the bitcoindoesn\'t show an icon + it doesn\'t contain any meta-data (from bitcoin-qt-)"," wherars  DOES contain that meta-data (from bitcoind-).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,93,2012-08-14 09:48:18,981.22,,1,,"b""b' @Diapolo : re executable size: they are not stripped (contain debugging symbols).  I assume they crash because pull-tester is using an ancient mingw?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,94,2012-08-14 09:48:18,382.47,,1,,"b""b' @gavinandresen Yes", they crash because of the ancient mingw version," so this is still pending on a pulltester mingw update. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,95,2012-08-14 09:48:18,492.28,,1,,"b""b' @laanwj Should this now be possible to work :)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,96,2012-08-14 09:48:18,3.52,,1,,"b'b"" Not until we\'ve updated the gcc used by the pulltester.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,97,2012-08-14 09:48:18,28.7,,,1,"b""b' Passed? Wow'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,98,2012-08-14 09:48:18,998.02,,1,,"b'b"" When I build 32/64 bit executables using gitian", I still get the libssp error: I\'ve tried manually passing -lssp_nonshared, but this didn\'t solve it. Making the entire build would be possible, will try that now," currently we only   on windows.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,99,2012-08-14 09:48:18,25.48,,1,,"b'b"" Correction:  Works with  . Can you cherry-pick this commit into this branch"," to see if the pull tester doesn\'t bark on it?url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,100,2012-08-14 09:48:18,5.07,,1,,"b""b' Cherry-picked your commit...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,101,2012-08-14 09:48:18,44.38,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,closed,2014-01-22 11:00:20,853.1,10,76,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1674,closed,-,-,-,10,76,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,opened,2012-08-30 20:18:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,title,2012-08-30 20:18:57,00:00,,1,,"b""b'  Fails to  0.6.3 Program Aborts'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,body,2012-08-30 20:18:57,00:00,,,1,"b'b"" Running Windows 7 64-Bit Ultimate.1. Installation went fine.2. Block chain was close to completing initial download.3. Forced to restart machine due to another program.4. Subsequent attempts to run Bitcoin result in it failing at loading the  file.5.  with either Windows or Bitcoin\'s uninstaller does not fix the issue. First time  exactly made confident by this initial . Not sure this is technically a bug", but it surely cannot be a feature. Please  thank you," BB""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,1,2012-08-30 20:18:57,78.88,,1,,"b'b"" @bondbeau 0.6.3 doesn\'t like it", when the process just get\'s killed, 0.7 should be more sane as we did some shutdown-code-tweaking there. Could be, that your database was damaged and if you never used the client and have no funds in your wallet it would be easiest to just empty your whole Bitcoin data directory. ONLY delete it," if there are NO coins or needed addresses in your wallet!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,2,2012-08-30 20:18:57,119.05,1,,,b'b\' @Diapolo Thanks for your reply, but I have to say I\\\'m quite shocked that Bitcoin is being proffered as a refined money replacement for world-wide use if something as simple as an unplanned shutdown brings it to its knees. Since I really don\\\'t want to be a tester and therefore only want to run \\\'released\\\'  explain step-by-step exactly how one can repair this situation. I do actually have a tiny amount of coin in the wallet which I would be just as happy to keep as to lose (as I suspect would be the case for most users regardless of circumstance), so exactly which files in which directories need to be deleted or fixed or  that is the correct solution? For example," I don\\\'t see a ""data"" directory for Bitcoin. I see ""daemon"" and ""src""... Please understand that I am simply an endlike most any other person in-the-wild who might like to see what this is  thanks for your help.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,3,2012-08-30 20:18:57,3.9,,1,,"b'b"" If you want", [you could try 0.6.4rc1]url  which only has bugfixes. I don\'t know if that will help with this particular issue," however. Most unplanned shutdowns don\'t cause problems for me...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,4,2012-08-30 20:18:57,7.1,1,,,"b'b"" @luke-jr I doubt that\'d make any difference @bondbeau  I assume the shutdown caused Bitcoin to be terminated prematurely", and the database got corrupted. Little we can do about that while using BDB (the database engine) I\'m afraid, but it is embarrassing to be frank. BDB should deal with such events, but since it didn\'t, I fear there\'s little you can do but delete , blk0001.dat, and if it exists blk0002.dat. They can be found in the data directory (see url  After that, start Bitcoin again," and it should redownload the blockchain.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,5,2012-08-30 20:18:57,19.27,,,1,b'b\' @luke-jr Thanks," but the the file for the .exe didn\\\'t want to download after I reloaded the page...(I hesitated and cancelled it the first time because Avast said something like "" you really want to download this file that almost nobody around the world has ever downloaded""). Hope you understand... @sipa Bitcoin is running again and downloading the block chain according to your  thank you very kindly. I\\\'ll play around with it a bit", but given this first-time experience I can\\\'t imagine trying to rely on Bitcoin as a way to actually live and make routine transactions. It\\\'s -E-S-P-E-R-A-T-E-Lit simply can\\\'t fly like this in my  just can\\\'t gain widespread use.  about it just now, wouldn\\\'t it have to be essentially foolproof for children as young as four or  whatever age it is that kids commonly start to handle small amounts of paper and coin money? Much appreciation for the concept  and well wishes!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,6,2012-08-30 20:18:57,11.7,1,,,"b'b"" @bondbeau np", like @sipa said, it probably isn\'t fixed anyway. On a side note, you might consider another antivirus suite: Avast seems fairly hostile to Bitcoin so far. Keep in mind that neither this client, nor any other today, is considered production-ready. For better or worse," the market is ahead of the software in this area.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,7,2012-08-30 20:18:57,311.13,,1,,"b'b\' @bondbeau These problems are why we still call our Bitcoin client experimental software. The people who are participating here do this mostyl in their freetime and they do a pretty good job. A switch to a ""better"" or more stable database system is in the works and every day brings fixes to the client. We simply need users", like you, who will report problems here, so thanks for that :).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,8,2012-08-30 20:18:57,1081.33,,,1,"b'b"" We need to do a much better job of recovering from bdb errors. I created a little tool that randomly changes bytes in files", and am working on auto-recovery (as much as possible) for corrupt .  When I\'m happy with that," I plan on moving on to  and maybe  (although we\'re likely to switch to LevelDB before I get there).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,9,2012-08-30 20:18:57,241.27,,1,,"b""b' @gavinandresen  that just means you get to do it to leveldb too. :P'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,10,2012-08-30 20:18:57,211.62,1,,,b'b\' To be fair," if we set up good exception handling for broken databases that will come in just as handy with leveldb.  At least in bitcoin-qt there should really be a pop-up ""The block chain database is corrupted. Exit"," or try to ?"". Instead of some vague ""runaway exception"" error and having the user come here or even mail us with ""what to do now?""... Wallets are a completely different issue of course", as the data is usually not so readily available, and trying to recover automatically can be disastrous. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,11,2012-08-30 20:18:57,379.27,,1,,b'b\' The next chapter in this story after @sipa\\\'s suggestion helped me get Bitcoin running again: 1. After running it for a number of days (with only ordinary laptop sleep along the way) and letting it finish downloading the blockchain, I did a PLANNED shutdown. As in, I selected File 2. Bitcoin not having been high priority, I didn\\\'t try to start it again until  guess  doesn\\\'t. In fact," the only option given in the Bitcoin directory of the start menu is to ""Uninstall Bitcoin"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,closed,2012-09-19 13:23:28,1024.52,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,reopened,2012-09-19 13:25:11,1.72,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,closed,2013-01-23 16:07:38,162.45,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1759,closed,-,-,-,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,opened,2012-09-01 22:14:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,title,2012-09-01 22:14:31,00:00,,1,,"b""b' Bugfix: Require OrderedTxItems to provide properly scoped accounting entry list'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,body,2012-09-01 22:14:31,00:00,,1,,"b""b' OrderedTxItems returns a multimap of pointers", but needs a place to store the actual CAccountingEntries it points to. It had been using a stack item, which was clobbered as soon as it returned," resulting in undefined behaviour. This fixes at least bug #1768.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,1,2012-09-01 22:14:31,7.53,,,1,"b""b' ACK. makes valgrind happy again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,2,2012-09-01 22:14:31,502.12,1,,,"b'b"" I agree that this would solve the immediate problem. std::list (unlike std::vector) does not invalidate iterators when items are added", so it is safe to keep pointers to items in it. I do think the solution is a bit strange, but maybe it\'s just me. Why not return a type from OrderedTxItems that has the actual CAccountingEntry instead of one that has pointers to another (temporary) structure," which is being built at the same time? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,3,2012-09-01 22:14:31,52.2,1,,,"b'b"" @laanwj It does feel strange to me", but I failed to think up a better way short of trying to rewrite it in some other paradigm. Maybe boost::variant would work better (most of the CAccountingEntry pointers are NULL)," but I\'m not comfortable with adding that into the mix myself this late in the release cycle.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,4,2012-09-01 22:14:31,6.45,1,,,"b'b"" Yes", this is the simplest solution for now, that\'s for sure. Maybe add a (doxygen) comment to CWallet::OrderedTxItems that warns of the dangers," instead of only at the callsite in wallet.h.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,5,2012-09-01 22:14:31,20.12,,1,,"b""b' Like that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,6,2012-09-01 22:14:31,139.42,,1,,"b""b' Yes. ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,7,2012-09-01 22:14:31,434.08,1,,,"b""b' ACK. (oops. clicked the wrong button)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,closed,2012-09-02 17:36:26,1161.92,4,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,reopened,2012-09-02 17:36:37,0.18,4,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,closed,2012-09-02 23:47:58,371.35,4,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1774,closed,-,-,-,4,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,opened,2012-09-06 02:34:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,title,2012-09-06 02:34:29,00:00,,1,,"b""b' Data-driven tests for CTransaction::CheckTransaction()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,closed,2012-09-06 02:37:37,3.13,0,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,reopened,2012-09-06 02:58:56,21.32,0,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,1,2012-09-06 02:34:29,1173.3,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,2,2012-09-06 02:34:29,1091.57,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,closed,2012-09-18 23:23:59,1225.05,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1794,closed,-,-,-,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,opened,2012-09-14 18:56:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,title,2012-09-14 18:56:59,00:00,,1,,"b""b' Transfers getting confirms from older blocks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,body,2012-09-14 18:56:59,00:00,,1,,"b""b' I was having my client (0.6.3)  off line for a week or so. Just before i was starting my client i was getting a transfer to one of my addresses. When i was starting the client it started to download blocks. Meantime the client got the transfer to my address and the transfer was getting confirms from blocks that was days older when the transfer itself. It ended up in that the transfer got around 100 confirms when the transfer just was a  up to a half an hour old.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,closed,2012-10-06 03:26:49,509.83,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,reopened,2012-10-06 03:27:19,0.5,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,1,2012-09-14 18:56:59,511.37,1,,,"b'b"" So i have upgraded to 0.7.0 i have a transfer that is 15mins old and it got 3 comfirms already because the client wasn\'t synced so it got confirms from older blocks.  I did close the issue by mistake. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,2,2012-09-14 18:56:59,10.17,,1,,"b""b' Can you tell us (or me privately) the transaction ID of one of these transactions and give us the  from your client?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,3,2012-09-14 18:56:59,545.45,,1,,"b""b' Any news on that issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,4,2012-09-14 18:56:59,765.6,,1,,"b""b' I can not recreate the bug so i will now close it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,closed,2012-11-25 01:29:59,1322.67,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1824,closed,-,-,-,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,opened,2012-09-28 11:57:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,title,2012-09-28 11:57:12,00:00,,1,,"b""b' Removed a duplicated identical if'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,body,2012-09-28 11:57:12,00:00,,,1,b'b\' There are two equal ifs, one inside another. If the first one is true," then the second one is true. I\\\'ll add that I don\\\'t think it\\\'s a good idea to use the [] operator for checking the existance of items in a map in the context of a method that should only ""show"" the wtx (the map::[] operator adds a new item if it isn\\\'t found). I think the method should work with a const CWalletTx &wtx.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,1,2012-09-28 11:57:12,34.42,,1,,"b""b' The patch makes absolutely sense and why not create a patch for your second suggestions"," too :)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,2,2012-09-28 11:57:12,53.97,,1,,"b""b' Can you squash the 2 commits into one please.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,closed,2012-09-28 13:31:56,94.73,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,3,2012-09-28 11:57:12,18.6,1,,,"b""b' @Diapolo Aaaah... I hate github... I hate git... I was trying to rebase everything in local and I closed the pull... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,reopened,2012-09-28 13:44:11,12.25,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,closed,2012-09-28 13:45:28,1.28,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,4,2012-09-28 11:57:12,48.85,,1,,"b""b'  use before your 2nd commit '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1878,closed,-,-,-,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,opened,2012-11-04 10:26:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,title,2012-11-04 10:26:47,00:00,,1,,"b""b' remove printf redefinition from '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,body,2012-11-04 10:26:47,00:00,,1,,"b'b"" as the redefiniton of printf happens in util.h", which is included in  ," we don\'t need another redefinition""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,1,2012-11-04 10:26:47,9.43,,1,,"b""b' Are you sure this is a no-op? Maybe one of the included header files between the undef and the define needs the original"," or tries to define printf by itself?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,closed,2012-11-04 10:36:13,9.43,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,reopened,2012-11-04 10:36:19,0.1,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,2,2012-11-04 10:26:47,8.5,,,1,"b'b"" It was this pull", who included this change url  but as you see between the #undef and the #define are only boost or std headers, well I\'m not sure it\'s a no-op, but compilation and running the client is working fine. We include util.h quite often and it\'s mostly before boost headers... @laanwj It was your pull," perhaps you can enlighten this?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,3,2012-11-04 10:26:47,18.38,,1,,b'b\' That line is actually ancient. It\\\'s showing up the text as being from me because I renamed to  . However, the line was in there way before that. Some deeper git forensics shows that the first commit in which the printf redefinition was in was 84c3fb0. This appears to be _also_ a reorganization commit, in which was renamed to  .Digging even deeper," 22f721d was really the first commit in which it was introduced (by Satoshi himself). Looks like it was added for ""MSVC 8 compatibility"". FYI", the git command to grep a while throughout all commits:  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,4,2012-11-04 10:26:47,5.67,,,1,"b'b"" Thanks for digging", although I\'m still not sure if it\'s needed there or not. MSVC 8 is ancient," also.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,5,2012-11-04 10:26:47,4.12,,,1,"b'b"" No one knows. I\'m ok with removing it. After all", as you say, all the rpc*.cpp spinoffs work fine without it. Though my real preference would still be to remove the re-definition of printf, rename OutputDebugStringF to some sane name such as debug_log()," and use that throughout the source code. But I don\'t think everyone agrees.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,6,2012-11-04 10:26:47,340.47,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,7,2012-11-04 10:26:47,470.43,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,closed,2012-11-10 11:47:11,70.87,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,1977,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,opened,2012-11-16 18:40:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,title,2012-11-16 18:40:57,00:00,,1,,"b""b' fake bitcoins?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,body,2012-11-16 18:40:57,00:00,,1,,"b""b' url  coins were actually sent only to 1EH...(too long address)"," 1Km... should not have received any coins. why was that accepted by the network?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,1,2012-11-16 18:40:57,15.17,,1,,"b""b' BlockExplorer is a low-level tool. Bitcoin works substantially different low-level than what you see in the clients as an end user. 1Km... is very likely your own change address"," which is hidden at the high level.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,closed,2012-11-16 19:02:34,21.62,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,reopened,2012-11-16 19:02:55,0.35,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,2,2012-11-16 18:40:57,6.92,,,1,"b""b' thank you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,closed,2012-11-16 19:03:02,0.12,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2020,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,opened,2012-11-27 01:56:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,title,2012-11-27 01:56:15,00:00,,1,,"b""b' Downloaded And Frozen'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,body,2012-11-27 01:56:15,00:00,,1,,"b'b"" Had B wallet", wouldn\'t sync, paralysed the PC, uninstalled, re-installed from below," paralysed again. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,1,2012-11-27 01:56:15,727.63,1,,,"b""b' We need more details... such a report is simply unuseful"," sorry to say.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,2,2012-11-27 01:56:15,51.48,1,,,"b""b' Looking at the sophistication of the other posts", I thought that might be the case, but was at a loss as to what to do \\xe2\\x80\\x93 very keen to start trading.  Are there any details I can record and post that would be helpful? Thanks for the reply. Rob UK From: Philip Kaufmann [mailto:notifications@] Sent: 27 November 2012 14:04To: Cc: robzrobSubject: Re: [bitcoin] Downloaded And Frozen (#2043) We need more details... such a report is simply unuseful," sorry to say. \\xe2\\x80\\x94Reply to this email directly or view it on GitHub url  .  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,3,2012-11-27 01:56:15,39.57,,1,,"b""b' You need to at least supply your OS and it makes sense to pastebin the "," which the client should have created. Also did you supply any command-line parameters and what you mean by paralysed... did you use Bitcoin-Qt or bitcoind?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,4,2012-11-27 01:56:15,13.78,,1,,"b""b' I assume the disk I/O is just killing his machine. @robzrob What hardware are you on? ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,5,2012-11-27 01:56:15,154.2,,,1,"b""b' OS CPU RAM DISK Cheers Rob Cornwall UK robzrob@ From: Pieter Wuille [mailto:notifications@] Sent: 27 November 2012 15:49To: Cc: robzrobSubject: Re: [bitcoin] Downloaded And Frozen (#2043) I assume the disk I/O is just killing his machine. @robzrob url What hardware are you on? ? \\xe2\\x80\\x94Reply to this email directly or view it on GitHub url  .  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,6,2012-11-27 01:56:15,4.57,,1,,"b""b' eh?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,7,2012-11-27 01:56:15,8.6,1,,,"b""b' Hello Philip OS I\\xe2\\x80\\x99m not up on IT lingo", I\\xe2\\x80\\x99m afraid, so I don\\xe2\\x80\\x99t know what the rest of your text means, sorry.  By paralyzed, I mean that as soon as I start Bitcoin wallet, I get the wallet icon on the middle of the screen with \\xe2\\x80\\x98Loading addresses...\\xe2\\x80\\x99 showing on it and after that appears, I can\\xe2\\x80\\x99t do anything with my PC at all, neither mouse nor keyboard keys have any effect.  I have to hold the PC on switch in to get it to turn off. From: Philip Kaufmann [mailto:notifications@] Sent: 27 November 2012 15:35To: Cc: robzrobSubject: Re: [bitcoin] Downloaded And Frozen (#2043) You need to at least supply your OS and it makes sens to pastebin the ," which the client should have created. Also did you supply any command-line parameters and what you mean by paralysed... \\xe2\\x80\\x94Reply to this email directly or view it on GitHub url  .  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,8,2012-11-27 01:56:15,2.18,,1,,"b""b' Didn\\xe2\\x80\\x99t the screendump pics show in the body of the email? From: Pieter Wuille [mailto:notifications@] Sent: 27 November 2012 18:27To: Cc: robzrobSubject: Re: [bitcoin] Downloaded And Frozen (#2043) eh? \\xe2\\x80\\x94Reply to this email directly or view it on GitHub url  .  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,9,2012-11-27 01:56:15,1423.68,,1,,"b""b' @robzrob the mail interface to the issue tracker probably stripped any images you tried to add to an email.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,10,2012-11-27 01:56:15,166.22,,,1,"b""b' OSWindows XP Home 5.1 Build 2600 SP3 CPUAMD Athlon(tm) 64 X2 Dual Core Processor 5000+ MMX 3DNow (2CPUs) RAM896MB DISKSamsung HD161HJ'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,closed,2012-12-01 21:08:26,1152.18,3,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,reopened,2012-12-01 21:08:33,0.12,3,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,11,2012-11-27 01:56:15,755.63,1,,,"b""b' Is your HDD LED flashing like crazy or staying on"," after you started the client?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,12,2012-11-27 01:56:15,497.77,,1,,"b""b' Staying on.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,13,2012-11-27 01:56:15,44.82,1,,,"b""b' Seems your machine is to weak to run a full node then ... when the HDD LED stays on it means there is a lot of load on your disk", which seems to freeze your PC," sorry mate.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,14,2012-11-27 01:56:15,79.62,,1,,"b""b' Got 915GB free space on an external harddrive.  Would it be worth trying to install it on that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,15,2012-11-27 01:56:15,13.72,,1,,"b'b"" If it\'s a USB drive: don\'t. They have much higher latency", which is very important for the block database (at least until 0.7, in 0.8 it may become doable," but that\'s not finished yet).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,16,2012-11-27 01:56:15,0.83,,1,,"b'b"" It\'s not the required space (which is ~3-4 GB for current block-chain and stuff)", it\'s the limitation of your PCs processing power and  ( and so on) performance," which is too low.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,closed,2013-03-29 10:16:54,788.35,5,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2043,closed,-,-,-,5,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,opened,2012-12-11 21:47:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,title,2012-12-11 21:47:42,00:00,,1,,"b""b' logfile irregularities'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,body,2012-12-11 21:47:42,00:00,,1,,"b""b' 1) These two sets of non feature lines should be removed...The first line is blank", whether with logtimestamps.Regardless of shrinkdebugfile," the first 2 through 20 lines of the logfile are blank and do not carry logtimestamps. 2) These entries are missing logtimestamps...   vMerkleTree: 4a5e1e4baa  3) vMerkleTree has an unnecessary space at the end of line.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,closed,2013-10-22 08:17:50,630.13,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,reopened,2013-10-22 08:18:27,0.62,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,1,2012-12-11 21:47:42,631.12,,1,,"b""b' Not sure if these still apply"," lots has changed in logging in the last few months.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,2,2012-12-11 21:47:42,255.38,1,,,"b'b"" This is a result of how multi-line log messages are handled (as CTxIn::ToString() returns multiple lines).I\'m not sure that every line should be prefixed with a new timestamp in this case as it\'s only one message"," so prefixing only the first line makes sense in a way.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,closed,2013-11-07 12:34:12,255.75,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2093,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,opened,2012-12-27 16:29:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,title,2012-12-27 16:29:25,00:00,1,,,"b'b\' ""Sign Message"" window should incorporate  output then sign the message\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,body,2012-12-27 16:29:25,00:00,1,,,"b'b\' Some  (if not all) contain non-ascii characters to present a type of formatting such as ""\\\\n"" and other hidden characters of that nature. The sign message window should detect base64 input and if it looks like a base64 string it should pop-up a text box displaying the decoded message. With out base64 incorporation", any document containing hidden characters that are presented through a stream will not match the receipts signature with the senders signature. I think the decoded message should be displayed as well since users deserve to know what they are signing with out having to trust third-party applications to decode the base64 for them.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,1,2012-12-27 16:29:25,56.97,,,1,b'b\' Sign a hash, not the data\\xe2\\x80\\x94 otherwise what happens wen you want to sign something containing 10 mbytes of images? :)  Opaquely packing data in the signature has problems with the data not matching what you think it will match," even if it decodes it\\xe2\\x80\\x94 who\\\'s going to notice a "" not "" slipped into the middle of a two page contract", when it only shows up on the received signature?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,2,2012-12-27 16:29:25,549.58,,,1,"b'b"" Good point & solution. I can\'t really think of a reason not to sign the hash.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,closed,2012-12-28 02:36:31,607.1,2,0,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,3,2012-12-27 16:29:25,1399.3,1,,,b'b\' Okay what about this issue," How do we promote users ""Not to sign anything vague"" when we are promoting them to sign digests. Which to any users is just a string of random letters and numbers; It doesn\\xe2\\x80\\x99t mean a thing to a non-technical person.  I realise that sha256 doesn\\xe2\\x80\\x99t have any (known or mathematically computed) collisions but to a non-technical person that doesn\\xe2\\x80\\x99t mean anything"," so with this social engineering flaw in mind we can assume any joe-shmoe can invent his own ""predictable digest"" or even just provide a base64 encoding of the message the non-technical user wouldn\\\'t know a thing of the difference and could agree to things they are unaware of. I don\\\'t know where we need to go to further this discussion the possibilities of this issue", shall I open it up in the forums?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,reopened,2013-01-03 01:55:16,1398.75,3,0,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,4,2012-12-27 16:29:25,957.77,,1,,"b""b' I opened the discussion hereurl As git comments here will be used for posting  that are agreed upon (Seems to be the protocol for discussion around here any ways)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,5,2012-12-27 16:29:25,9.02,,1,,"b'b"" I don\'t see any reason to keep this open at this time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,closed,2013-01-03 18:02:03,966.78,3,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,6,2012-12-27 16:29:25,211.23,,1,,"b'b"" Looks like the issue on my end was that the website wasn\'t encoded in UTF-8 and thus the characters the user was copying wouldn\'t verify. My intention wasn\\xe2\\x80\\x99t to waste anyone\\xe2\\x80\\x99s time I thought this was a real issue. Cheers mates""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2132,closed,-,-,-,3,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,opened,2012-12-28 16:57:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,title,2012-12-28 16:57:03,00:00,,1,,"b""b' no help with connecting to peers'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,body,2012-12-28 16:57:03,00:00,,1,,"b""b' Quite often I find that -qt can spend hours trying peers with no success. Would anyone have any suggestions on what the client could do in this situation or feedback to the user? For example", it could notify the user that the proxy server is unresponsive if that happens to be the cause," etc...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,closed,2012-12-28 16:58:37,1.57,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,reopened,2012-12-28 16:58:55,0.3,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,1,2012-12-28 16:57:03,4.25,1,,,"b'b\' Suggest that they move out of the oppressive dictatorship that they\\\'re in?  :p  It\\\'s inconceivable to me that it ""can spend hours trying peers with no success"" do you have any idea why it\\\'s doing this for you? Certainly it doesn\\\'t do this for me.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,2,2012-12-28 16:57:03,30.62,1,,,"b""b' In case of a bad network connection", it may help if you increase the connection timeout, -timeout=N (with N in milliseconds," 5000 is default).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,closed,2014-02-27 03:17:14,618.32,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2134,closed,-,-,-,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,opened,2013-01-07 07:18:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,title,2013-01-07 07:18:51,00:00,,1,,"b""b' Clean up code dependencies'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,body,2013-01-07 07:18:51,00:00,,,1,b'b\' I realize this introduction is a bit long," so if you don\\\'t feel like reading skip to the bullet points below under ""strategy"". The codebase as it exists right now has a number of unnecessary dependencies which makes code modularization much more difficult. In particular", the satoshi client was built to handle all bitcoin-related tasks," but its value as a ""reference implementation"" lies primarily in doing verification and acting as a relay agent as these are the most essential tasks that participating nodes must perform to keeping the network in operation. Things like wallets", historical databases, mining, and notification agents could be written as entirely separate third-party applications without risk to the network\\\'s fundamental integrity. The basic architecture of a bitcoin node is as follows: At the core there exist fundamental bitcoin message structures, along with the code necessary for . These structures belong in their own source files with minimal dependencies so they can be reused for applications that needn\\\'t perform verification and relay for instance, filtering and notification agents. Unfortunately, these core structures currently reside for the most part in , one of the central problems this pull request attempts to fix. On top of these core structures sits a network component that manages sockets, does peer discovery, and handles queueing and dispatching of messages. This component is clearly dependent on the core message structures but does not depend on the specific logic used to verify blocks and transactions nor to identify misbehaving peers nor sign transactions nor maintain a block chain database. Then we have a scripting engine, signature verification component, and a signing component. Historical database applications do not need signature  functionality at all.  Filtering messages and sending alerts generally does not even require a scripting engine and does fine with basic pattern matching. The most critical high-level operations needed by a  node such as the satoshi client are transaction verification; block chain and memory pool management; and  of misbehaving peers. These things are currently primarily implemented in . These are indeed the main operations of the satoshi client but the core low-level structures should not depend at all on this logic. Then there\\\'s the UI, but let\\\'s leave that aside for a moment. Finally there\\\'s , which sets up the particular environment in which the satoshi client runs. This branch takes the following strategy:Remove source file dependencies on main.h and init.h by only including necessary headers wherever possible.If source files depend on definitions in main or init, either move the dependent portions into  or move the depended-upon portions into separate files.If the dependent source files use global variables or functions that clearly belong in either main or init, copy the value over to a class member or a variable with file scope in the dependent source or expose a registration function to set a callback.If moving a core class out of main is impossible because its methods depend on variables or functions defined in main, isolate the methods that depend on main and either move them to another class that _does_ belong in main or convert them into regular functions in main. It is important that all modifications made in this branch are easy to review and to test. This branch does not encourage rewriting things from scratch only moving them and rearranging them in easily identifiable chunks. Furthermore, the focus of the branch is not so much on coding style and style consistency but on isolation of functional units and elimination of unnecessary dependencies.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,1,2013-01-07 07:18:51,455.13,,1,,"b""b' Why namespace db_cpp ?  Seems to me the database copy of pchMessageStart could be a static member of the DbEnv.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,2,2013-01-07 07:18:51,25.7,,1,,"b'b"" I\'d rather avoid adding more dependencies in CAddrDB for something that isn\'t really used elsewhere.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,3,2013-01-07 07:18:51,15.22,,1,,"b'b"" @gavinandresen That doesn\'t make sense. This is for ", which doesn\'t use BDB at all," and I suppose CDbEnv will be gone as soon as we kick out BDB-based wallets.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,4,2013-01-07 07:18:51,63.65,,,1,"b'b"" I\'m still not clear on exactly where in the code it\'s best to:1) set the magic bytes for CAddrDB2) Set the call handlers for  I tried running and got this error: url But tried restarting and it initialized correctly"," and now it seems to be running fine.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,5,2013-01-07 07:18:51,44.92,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,6,2013-01-07 07:18:51,284.35,,,1,"b""b' RE: namespace db_cpp: Fine", make it static in CAddrDB," I forgot that  is not a BDB file (and pass it into CAddrDB constructors?  or is CAddrDB a singleton class? )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,7,2013-01-07 07:18:51,357.75,,1,,"b""b' @gavinandresen Noted and done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,8,2013-01-07 07:18:51,76.03,1,,,"b'b"" cp: writing  \': No space left on device WTF?!?!?! Shall we all chip in and get BlueMatt some more hard disk space?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,9,2013-01-07 07:18:51,440.77,,1,,"b""b' I am going to keep pushing commits as an extra backup despite BitcoinPullTester being out of disk space.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,10,2013-01-07 07:18:51,66.98,,,1,"b'b"" I think you are doing good work", but I\'m sure you will get faster ACKs or merges," if you try to keep pulls smaller. Perhaps @sipa or other core devs can comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,11,2013-01-07 07:18:51,13.58,,,1,"b'b"" Our bottleneck is code review and testing. If you want your pulls to get merged", then you need to help fix that bottleneck-either recruit  to  your own code, or volunteer to help  other people\'s pulls. Or only refactor code that has good unit tests, so we can be more confident that nothing breaks on any of the three platforms we support. I am generally against refactoring just to improve the code," unless the refactoring comes with some significant benefit or unit tests.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,12,2013-01-07 07:18:51,3.4,,1,,"b""b' Oh", also:  you might want to help test or update url  which is a fully refactored version of the core code, that, last I checked," nobody used because nobody trusts it (because so many changes were made without thorough testing).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,13,2013-01-07 07:18:51,143.77,,,1,"b'b"" The changes I\'m making will be well-documented and possible to rigorously review. And if more unit tests are needed", I\'d be glad to help write some up. I\'m making incremental changes, hopefully each change easy to understand and track. I haven\'t changed any actual logic in the code nor implementation details just moved code around and in large chunks, not small pieces. As most of the significant changes thus far are things like moving methods from one class to another or turning them into regular functions, it should be possible to do a fairly comprehensive assessment by doing pattern matches on the codebase and making sure each usage was appropriately modified. i.e. () becomes CheckTransaction(tx); or (txin," inputs) becomes (txin); etc...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,14,2013-01-07 07:18:51,16.85,,1,,"b'b"" Also"," I\'m willing to do comprehensive testing on earlier commits with the hope of getting them merged without having to merge everything at once.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,15,2013-01-07 07:18:51,241.77,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,16,2013-01-07 07:18:51,17.1,1,,,"b'b"" Just for the record: I\'ve been discussing these changes extensively with @CodeShark the past few days", and I think they are very valuable. They should make the code easier to understand and reuse. Getting 0.8 out now certainly has priority over refactorings, but as these are almost entirely just code-movement changes," merging them shouldn\'t be too hard.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,17,2013-01-07 07:18:51,177.67,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,18,2013-01-07 07:18:51,390.12,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,19,2013-01-07 07:18:51,637.83,,1,,"b""b' The core commits will be reorganized into four stages:1) move core class methods that should remain class methods implemented in  out of  and into . (move)2) move core class method implementations in main.h that should not be part of core classes out of the class declarations in main.h. (move)3) turn methods that should not be part of the core classes into regular functions in main.h and ", get rid of the method prototypes in the classes, and add function declarations in main.h where necessary. (pattern replacement," add function declarations to main.h)4) move the core class declarations to core.h (move)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,20,2013-01-07 07:18:51,672.77,,1,,"b""b' Automatic sanity-testing: FAILED MERGE"," see url  for test log. This pull does not merge cleanly onto current master'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,21,2013-01-07 07:18:51,852.88,,1,,"b""b' Rebase needed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,22,2013-01-07 07:18:51,2.08,,1,,"b'b"" I\'m sure @CodeShark intents to rework this pull into smaller more logical pieces after 0.8 is final.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,23,2013-01-07 07:18:51,1381.15,1,,,b'b\' OK, very much like where this code is going.  ACK 90% of it, modulo inline comments made earlier. One specific criticism with this rebase:  the rebase problems were all fixed in a final, appended commit.  That does not work, because it breaks bisection properties.  Each commit needs to produce a tree that is buildable and passes tests.  Otherwise,"git bisect"" will not work, and attempting to find a problematic commit in past history becomes more difficult. I know that makes rebasing more difficult for changes like this, sorry :( We cannot have:  broken commit, broken commit, broken commit, commit that fixes everything.\''
bitcoin	2154	closed	24	sipa	2013-01-07 07:18:51	4.17		+1		b'b"" I\'m very much in favor of the code changes here (and they look move-only to, apart from the registration functions). It\'s only a first step, but it\'s a very needed one IMHO. I agree with the comment about the last commit fixing everything, but apart from that, I\'d like to see this merged soon. Since now seems the ideal time for this, I don\'t mind holding up other pullreqs for a short time, so this can get reviewed and finalized.""'
bitcoin	2154	closed	25	jgarzik	2013-01-07 07:18:51	2.63	+1			b'b"" Agreed, RE holding other pullreqs, to avoid the endless rebase pain on @CodeShark \'s part.""'
bitcoin	2154	closed	26	CodeShark	2013-01-07 07:18:51	577.28		+1		b'b"" I\'ll try to get this done today.""'
bitcoin	2154	closed	27	CodeShark	2013-01-07 07:18:51	439.22		+1		b""b' All the commits build with make -f  now. Still left to do:Move CBlock to coreRemove main.h include in .Unit tests'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,28,2013-01-07 07:18:51,159.25,,1,,"b'b"" The unit tests have run successfully on all the commits in linux. Need a few more eyes to review for correctness and some help with a few more tests on other platforms. As for the other two things I had listed as TODOs moving CBlock to core and removing the main.h include from net I\'d rather merge what we have now and do these things later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,29,2013-01-07 07:18:51,10.88,,,1,"b'b"" OK", looks pretty good. ACK everything except the indirect function pointer stuff.  Definite NAK on the function pointers.  Let\'s fix that up," and we can get this merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,30,2013-01-07 07:18:51,19.67,,1,,"b""b' What do you suggest in place of the function pointers?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,31,2013-01-07 07:18:51,5.57,1,,,b'b\' @jgarzik Not sure you see the reason for those indirect pointers. They are there to break the dependency of net on main, and seen as such it seems perhaps weird, if the only user of net is main for now. However, over time," net should turn into a class ""CNetworkNode"" or something", which exposes a way to listen for events. I suppose a boost::signal could be used right now instead, which more clearly shows its intention. And please, the overhead of a pointer indirection is few orders of magnitude lower than even just allocating the buffer in which a message being processed is read...\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,32,2013-01-07 07:18:51,1.07,,,1,"b'b"" If there\'s any reasonable critique of the function pointers it\'s about style", not performance. A more general-purpose messaging system would be very nice but in absence of a clear design," at least the function pointers avoid any dependencies on outside libraries.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,33,2013-01-07 07:18:51,9.63,,1,,"b'b"" I\'d also prefer boost::signals2 over registering function pointers. We\'re already using them elsewhere in the code"," and it is exactly the type of decoupling they are designed for.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,34,2013-01-07 07:18:51,10.08,,1,,"b'b"" Agree with Gavin on boost::signal2"," let\'s avoid raw function pointers in c++""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,35,2013-01-07 07:18:51,1.78,,1,,"b'b"" Very well"," I agree it\'s a cleaner solution.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,36,2013-01-07 07:18:51,58.87,,1,,"b'b"" I\'ll add signals later today...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,37,2013-01-07 07:18:51,172.93,,1,,"b'b"" Just so this isn\'t forgotten: @TheUni just noticed this doesn\'t update makefiles (yet)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,38,2013-01-07 07:18:51,406.88,,1,,"b""b' ACK for FreeBSD this branch builds and runs clean with the standardFreeBSD adjustments. On 6 June 2013 04:13"," Pieter Wuille notifications@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,39,2013-01-07 07:18:51,86.07,,1,,"b""b' @sipa I have deliberately avoided putting anything in  to avoid makefile issues for this merge. Eventually"," it will probably make sense to move some of the code in core.h into .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,40,2013-01-07 07:18:51,129.82,,,1,"b'b"" When I had worked on this originally",  was calling StartShutdown directly. Happily," this has since been removed. I had overlooked the fact that ProcessMessages was still being called directly from . I\'ll fix the appropriate commits once everyone agrees with the messaging approach.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,41,2013-01-07 07:18:51,13.52,1,,,"b'b"" @CodeShark You\'ll still at least need to add core.h to bitcoin-", and while you\'re on it," I don\'t see any harm in adding  to the other makefiles too that\'ll make it easier to move stuff there in the future.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,42,2013-01-07 07:18:51,88.05,,1,,"b'b"" @sipa done@TheUni  will have to be considered in what you\'re doing""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,closed,2013-06-06 07:23:06,4.25,6,29,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,reopened,2013-06-06 07:24:44,1.63,6,29,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,43,2013-01-07 07:18:51,67.65,1,,,"b""b' Sorry"," hit the close button by accident.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,44,2013-01-07 07:18:51,16.9,,1,,"b""b' Alright code freeze until merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,45,2013-01-07 07:18:51,115.9,,,1,"b'b"" ACK. Code changes look good to me", and I\'ve tested  on testnet. I have a few inline comments left, but those can be dealt with in follow-up commits," so we don\'t need to stall the merging process too long.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,46,2013-01-07 07:18:51,570.95,,1,,"b'b"" I\'ve tested this commit on testnet"," no problems found.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,closed,2013-06-10 13:17:39,352.92,7,31,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2154,closed,-,-,-,7,31,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,opened,2013-01-30 15:59:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,title,2013-01-30 15:59:22,00:00,,1,,"b""b' LevelDB build bugfix'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,body,2013-01-30 15:59:22,00:00,,1,,"b'b\' Bugfix: LevelDB: Use ""xCXXFLAGS"" variable to avoid user-defined CXXFLAGS from clobbering necessary compiler options\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,1,2013-01-30 15:59:22,8.95,,,1,"b""b' ACK if pulltester & gitian are happy with this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,2,2013-01-30 15:59:22,574.32,,1,,"b'b"" Ahh.. without this non-default cflags break the build.  Where\'d pulltester go?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,3,2013-01-30 15:59:22,475.1,,1,,"b""b' @TheBlueMatt can you force a pulltester run on this pullreq?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,4,2013-01-30 15:59:22,349.82,,1,,"b'b"" ACK. Although I think  should probably depend on FORCE"," so if bug-fixes are made to leveldb source files we don\'t have to make clean to pick up the changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,5,2013-01-30 15:59:22,13.53,,,1,"b""b' @gavinandresen That sounds like a good idea to me. Shall I add it to this pullreq?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,6,2013-01-30 15:59:22,600.97,,1,,"b""b' Amended to fix gitian spec to use standard CXXFLAGS for -frandom-seed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,7,2013-01-30 15:59:22,1085.08,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,8,2013-01-30 15:59:22,1380.93,,1,,"b'b"" Testing this... doesn\'t fix the problem", the -Qt build is non-deterministic. Also, I don\'t like the extensive changes to the , it will make merging upstream changes harder. I\'m testing an alternative that cherry-picks some of the changes here, but doesn\'t touch anything in leveldb/  (passes CXXFLAGS in OPT; LDFLAGS is irrelevant," because we\'re building leveldb .a\'s).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,9,2013-01-30 15:59:22,386.67,,1,,"b""b' Closing"," mostly superceded by #2311'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,closed,2013-02-16 01:14:44,555.37,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,10,2013-01-30 15:59:22,250.53,,1,,"b'b"" Reopening with one remaining fix that wasn\'t in #2311 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,reopened,2013-02-19 05:25:17,250.55,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,11,2013-01-30 15:59:22,1232.72,,1,,"b""b' Automatic sanity-testing: WARNING", see url  for binaries and test log. This pull decreases total test coverage," please add unit tests to test all new code and help us add test cases for existing code.Coverage report can be found at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,12,2013-01-30 15:59:22,1326.38,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,closed,2013-04-09 01:03:04,1177.78,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2243,closed,-,-,-,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,opened,2013-02-13 21:53:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,title,2013-02-13 21:53:36,00:00,,1,,"b""b' Corrupted database?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,body,2013-02-13 21:53:36,00:00,,1,,"b""b' Launching bitcoind I get the following error: Using version v0.8.0rc1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,1,2013-02-13 21:53:36,129.65,,1,,b'b\' What OS? Clean shutdown the run before," or did your machine or bitcoin crash? This might be a case of ""your disk drive was flaky for some unknowable reason.""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,2,2013-02-13 21:53:36,597.02,1,,,"b'b"" OSX 10.6.8", HFS+ journaled disk.Unfortunately I don\'t know if bitcoind was running or not while the machine crashed (we can assume it was).On [SE]url  Nick pointed out the exactly line I\'m hitting, so if you want we could add there some more debugging infos to track it down. i.e. it is not very good if you have to re-download the whole blockchain for a single corrupted element, especially since not it is made of many small files," if would make more sense if only that file was re-downloaded...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,3,2013-02-13 21:53:36,7.9,,1,,"b'b"" @Lohoris The problem is not a corrupted downloaded file that\'s easy. In your case", the database is corrupted," despite several systems which try to prevent ever getting an inconsistent state on disk. You also don\'t need to redownload anything. Starting with -reindex will rebuild the database using the block chain data you already have.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,4,2013-02-13 21:53:36,9.68,1,,,"b'b"" Oh! I\'ll try", thanks. Of course if this works it could be considered fixed...(it\'s unlikely I\'ll be able to try before tomorrow," sorry)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,5,2013-02-13 21:53:36,1422.45,1,,,"b'b"" reindex at block ~100000 started re-downloading", so I can\'t go on testing it right now (I\'ve got a limited bandwidth).Maybe I\'ll go on testing it on monday," sorry for the delay.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,6,2013-02-13 21:53:36,67.6,,,1,"b'b"" I\'ll spam this bug", for interesting reading: ##  url  ## On a properly functioning computer this stress test should never fail, but surprisingly we discovered that on about 1% of the computers being used to play Guild Wars it did fail! One percent might not sound like a big deal, but when one million gamers play the game on any given day that means 10,000 would have at least one crash bug. Our programming team could spend weeks researching the bugs for just one day at that rate! A lot of bug hunting on something as processor and ram intensive and requiring 100% math accuracy like Bitcoin, is likely to be unrepeatable it\'s going to be Bitcoin revealing to users their hardware problems. A similar hardware fitness test like the article describes, running before initial-download or during idle cpu, to certify a system\'s error-free crypto and 8GB of it\'s storage before attempting to assemble and verify a bit-accurate database," may prevent tears later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,7,2013-02-13 21:53:36,414.32,1,,,"b'b"" Didn\'t have time to test it properly so far", sorry.I\'ll close it for now, and I guess if someone else encounters this same problem upgrading," he\'ll be able to re-open it...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,closed,2013-03-07 18:02:13,1208.62,4,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,8,2013-02-13 21:53:36,1180.78,,1,,"b'b"" Ok this happened again right now. I\'ll reindex and see what happens.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,reopened,2013-03-16 13:43:00,1180.78,4,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,9,2013-02-13 21:53:36,1223.57,,1,,"b""b' Reindex worked", as expected.Next time this bug happens," what do I need to do before reindexing to debug it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,10,2013-02-13 21:53:36,426.17,,1,,"b""b' I am having this error i dunno what to do i have bitcoin wallet on Windows Vista when i open it i get Bitcoin-QT: System Error: Database Corrupted  what shall i do to fix it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,11,2013-02-13 21:53:36,5.02,,1,,"b""b' Try running it from command line:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,12,2013-02-13 21:53:36,8.18,,1,,"b""b' do you have Skype we can chat on sir?I backed up the enitre bitcoin folder in app data and all removed it re-install re-inserting data to see if it worksplease add me on skype zainmw91 Date: Thu"," 18 Apr 2013 10:18:02 -0700From: notifications@To: bitcoin@CC: zainmw91@Subject: Re: [bitcoin] Corrupted database? (#2305) Try running it from command line: bitcoind -reindex \\xe2\\x80\\x94Reply to this email directly or view it on GitHub.        '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,13,2013-02-13 21:53:36,1025.53,,1,,b'b\' I think this functionality should be added to the GUI too.. Not everybody is a computer pro, and knows how to handle the command shell.. if the index is broken," a window should pop up ""it crashed should we reindex blabla... ?""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,14,2013-02-13 21:53:36,584.83,,1,,"b'b\' I\\\'m going to close this as ""corruption probably due to the run-out-of-file-descriptors"" bug that was fixed.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,closed,2013-05-07 20:16:18,393.3,4,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,15,2013-02-13 21:53:36,694.68,,,1,"b'b"" Good"," I\'ll update and let you know if anything happens.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,16,2013-02-13 21:53:36,1330.73,,1,,"b'b\' This keeps happening to me with version v0.8.3-beta on OS X 10.8.3 Bitcoin-qt spends a few hours ""Reindexing blocks on disk.."" and then all is well for a day or so", until I gracefully shutdown bitcoin-qt and upon opening I am greeted with the Corrupt database error dialog. Any updates on this?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,17,2013-02-13 21:53:36,1200.5,,1,,"b'b"" I\'m getting this on ubuntu 12.04. it re-indexed once when upgrading to 0.8.4 and a few days later its doing it again. I\'m running on a SSD for another possible data point that might be relevant.  Will running -reindex on the cli compete faster?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,18,2013-02-13 21:53:36,1270.78,,1,,"b'b"" I\'ve just stated seeing this issue on ubuntu 13.04 on a laptop with an SSD. I saw the error earlier today"," re-indexed successfully and got the error again now.Edit: I\'m running v0.8.3.0-g40809ae-beta.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,19,2013-02-13 21:53:36,1401.7,,1,,"b""b' See url or just update to 0.8.5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,20,2013-02-13 21:53:36,38.42,,,1,"b""b' Thank you for the information.There does not seem to be a PPA version of 0.8.5 for Ubuntu yet. I assume the correct place to clone and build from is: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,21,2013-02-13 21:53:36,118.7,,1,,"b""b' @nikolajsheller Yes"," though the official Linux binaries in tar form are for ubuntu.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,22,2013-02-13 21:53:36,1267.2,,,1,"b""b' I confirm the issue on MacOS. I got my database corrupted a few times already. I always recover using bitcoin-qt -reindex. That works fine but takes hours.The last time I paid attention to close the application in a clean way. I did and re-opened the application several times without any issue. Nonetheless", after rebooting, the database is corrupted again. I am using 0.8.5-beta, the executable has been built on Friday, September 13," 2013 2:18 AM. Is there a version that does not have this issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,23,2013-02-13 21:53:36,1353.73,1,,,b'b\' On Mac OS X 10.9 (Mavericks) with Bitcoin-Qt 0.8.5," I was getting the ""System Error: Database Corrupted"" error every time I started the Bitcoin-Qt client. I tried deleting everything in my Bitcoin directory except and  ", but the error persisted.  What fixed it for me was deleting everything _including_  .  For the record, here\\\'s what was showing: So, it appears to have been an issue with  . If anyone needs the file to debug this issue, let me know. I saved a copy of the bad version.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,24,2013-02-13 21:53:36,1364.67,,1,,"b""b'   is not a LevelDB file. Only the / and chainstate/ directories contain LevelDB databases"," so the problem must have been with either of those.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,25,2013-02-13 21:53:36,1287.58,1,,,"b'b\' @sipa The only two files that I kept were and  . I deleted everything else and every time I started the Bitcoin-Qt client I received the ""System Error: Database Corrupted"" message. It wasn\\\'t until I deleted everything _including_ the file that the problem resolved itself.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,26,2013-02-13 21:53:36,778.27,,1,,"b'b\' Macbook just crashed trying to sync the blockchain for the first time from Bitcoin QT. Now I\\\'m getting the ""System error: Database corrupted"" I didn\\\'t have any coins in the wallet. Does anyone know how I can reset and trying to sync again? The data directory library file -\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,27,2013-02-13 21:53:36,867.82,,1,,b'b\' I am getting those db corruptions again those days.  I tried restoring mydb and blocks folders from backups but it does not do the trick.Only thing that works:reindexThat takes very long so this is really painful.On Nov 24, 2013 10:14 AM,"tahoeboarder909"" notifications@wrote:\''
bitcoin	2305	closed	28	tahoeboarder909	2013-02-13 21:53:36	250.45		+1		b""b' How does one reindex the blockchain??'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,29,2013-02-13 21:53:36,252.47,,1,,b'b\' Bitcoin-qt -reindexOn Nov 27, 2013 1:27 AM,"Kyle Hess"" notifications@ wrote:\''
bitcoin	2305	closed	30	fanquake	2013-02-13 21:53:36	280.62		+1		b""b' @tahoeboarder909 Using Terminal '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,31,2013-02-13 21:53:36,1322.35,,1,,"b'b\' 2017-08-25 19:26:16 Bitcoin version v0.14.2 2017-08-25 19:26:16 InitParameterInteraction: parameter interaction: -whitelistforcerelay=1 -2017-08-25 19:26:17 Assuming ancestors of block 00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90 have valid signatures. 2017-08-25 19:26:17 GUI: ""registerShutdownBlockReason: Successfully registered: Bitcoin Core no se ha cerrado de forma segura todav\\xc3\\x83\\xc2\\xada..."" 2017-08-25 19:26:17 Default data directory C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin 2017-08-25 19:26:17 Using data directory C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin 2017-08-25 19:26:17 Using config file C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\ 2017-08-25 19:26:17 Using at most 125 automatic connections (2048 file descriptors available) 2017-08-25 19:26:17 Using 32 MiB out of 32 requested for signature cache", able to store 1048576 elements 2017-08-25 19:26:17 Using 0 threads for script verification 2017-08-25 19:26:17 Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010) 2017-08-25 19:26:17 Using wallet  2017-08-25 19:26:17 scheduler thread start 2017-08-25 19:26:17 init message: Verificando cartera... 2017-08-25 19:26:17 CDBEnv::Open: LogDir=C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\database ErrorFile=C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\ 2017-08-25 19:26:17 Bound to [::]:8333 2017-08-25 19:26:17 Bound to 0.0.0.0:8333 2017-08-25 19:26:17 Cache configuration: 2017-08-25 19:26:17 * Using 2.0MiB for block index database 2017-08-25 19:26:17 * Using 8.0MiB for chain state database 2017-08-25 19:26:17 * Using 440.0MiB for in-memory UTXO set (plus up to 286.1MiB of unused mempool space) 2017-08-25 19:26:17 init message: Cargando indice de bloques...  2017-08-25 19:26:17 Opening LevelDB in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\blocks\\\\index 2017-08-25 19:26:17 Opened LevelDB successfully 2017-08-25 19:26:17 Using obfuscation key for C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\blocks\\\\index: 0000000000000000 2017-08-25 19:26:17 Opening LevelDB in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\chainstate 2017-08-25 19:26:18 Corruption: 924 missing files; e.g.: C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\ 2017-08-25 19:26:20 init message: Cargando indice de bloques...  2017-08-25 19:26:20 Wiping LevelDB in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\blocks\\\\index 2017-08-25 19:26:20 Opening LevelDB in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\blocks\\\\index 2017-08-25 19:26:20 Opened LevelDB successfully 2017-08-25 19:26:20 Using obfuscation key for C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\blocks\\\\index: 0000000000000000 2017-08-25 19:26:20 Wiping LevelDB in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\chainstate 2017-08-25 19:26:20 Opening LevelDB in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\chainstate 2017-08-25 19:26:20 Corruption: 924 missing files; e.g.: C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\ 2017-08-25 19:26:21 scheduler thread interrupt 2017-08-25 19:26:21 Shutdown: In progress... 2017-08-25 19:26:21 Shutdown: done 2017-08-25 19:28:47 bitcoin-reindex -chainstate, it doesn\\xc2\\xb4\\xc2\\xb4t work.  I have removed chainstate folder, because it was corrupted and I get to access again and recovery (C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin).  How can I repair original chainstate folder? \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,32,2013-02-13 21:53:36,214.65,,1,,"b""b' @mapalmalemus hmm", I cant reproduce, but if you simply delete the files in C:\\\\Users\\\\Miguel\\\\AppData\\\\Roaming\\\\Bitcoin\\\\chainstate and then run with bitcoin-reinded-chainstate (note its not separate)," that should do it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,33,2013-02-13 21:53:36,348.08,,,1,"b""b' Yes", I have done," thanks! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2305,closed,-,-,-,6,24,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,opened,2013-02-23 05:53:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,title,2013-02-23 05:53:56,00:00,,1,,"b""b' Icon Refresh'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,body,2013-02-23 05:53:56,00:00,1,,,"b'b"" I\'ve noticed the Mac binary\'s icon is somewhat poor quality; it is not properly shadowed", resulting in ugly lines around it, and in addition the icon as a whole isn\'t very graphically pleasing, giving the impression the app is somewhat amateurish.  A professionally designed icon would be a lot better, and given many graphics designers, including myself, have contributed and released such icons for use, it seems silly not to swap to one of them away from the pancake  the old gold-coin design was significantly better (I understand it was dropped due to small size; larger," vector versions are available now). ![Screen Shot 2013-02-23 at 05 52 03]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,1,2013-02-23 05:53:56,74.45,,,1,"b'b"" I should add", I have personally designer better ones here:url  But I\'m not suggesting mine should be used; if the community wants to it can, i\'ve already released them, but I\'d be just as happy for someone else\'s work to be used, as long as it\'s decent. If using from my designs there," these are probably my favourites:![]url or![]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,2,2013-02-23 05:53:56,64.97,,,1,b'b\' The gold coin was retired because it was too blingy creating associationswith casinos, video games,"get rich quick schemes"" etc. The new one ismore stylized, simplified, just showing the virtual coin concept. Feel free to design a better looking icon, or fix up artifacts, but itshould be in the spirit of the new icon not the old one.\''
bitcoin	2330	closed	3	grue0	2013-02-23 05:53:56	1141.93		+1		b'b"" just resize the picturebox so it\'s bigger""'
bitcoin	2330	closed	4	mathcampbell	2013-02-23 05:53:56	73.65	+1			b'b\' Actually, you\\\'d have to resize the icon downwards until the drop-shadow is properly contained, but that rather bypasses the main point, that the icon is poor.It doesn\\\'t follow the Apple HIG, nor icon ""Style"" icons are supposed to be photorealistic or near to, and have shading and tone, lit from a 15 degree vertical angle; this is neither, and it looks amateurish; on the  forums there are plenty of discussions showing up the dislike this icon is held within the community; I take on board what laanwj says about the old one being too ""blingy", but it needs to represent a coin, but at the same time," it can look less like someone did it in 5 minutes in MS word.  It makes the app look cheap and ""amateurish"".if you don\\\'t believe me", take a look at the top 100 apps on the mac AppStore, and show me a single one with an icon like this...The flat pancake looks bad, and the pointless slanting of the Bitcoin sign just annoys people (believe it or not, there was a whole 3-4 pages of thread of people hating just on the slant," and it\\\'s pointless ""lets make it look cool"" approach)....I\\\'m not saying it has to be my design", happy for someone else to step in as well, but I am saying that if you want people to take the Mac Bitcoin client, and really the platform as a whole, more seriously, and not look like some dodgy thing cooked up by amateurs, you need professional-level graphics and artwork, and that icon is neither.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,5,2013-02-23 05:53:56,193.25,1,,,"b'b"" Obviously it doesn\'t follow the mac interface guidelines. The icon is used on all platforms", we don\'t have a team of artists at our beck to do design for every platform\'s specific fashion-of-the-day (MS fanboys want this, Mac fanboys want that," Ubuntu fanboys want thus). Closing this issue as it is devolving into a battle of opinions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,closed,2013-02-24 07:42:11,108.25,3,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,6,2013-02-23 05:53:56,15.38,,,1,"b""b' Reopening this as I agree that we can use a new icon"," and the ones in the thread that you link are actually pretty nice.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,reopened,2013-02-24 07:57:34,15.38,3,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,7,2013-02-23 05:53:56,344.32,,1,,b'b\' I sent you a private e-mail about that, but I\\\'ll state publicly here," that I am sorry for my poor choice in words; I edited my original comments almost instantly; they do not reflect my thoughts. Maybe the best thing to do would be to make a post on the Bitcoin forums; ""Design a new icon for Bitcoin"".  Then we can al submit icons", and take a vote on what the community\\\'s favourite is.  There may surface something we can all agree to, and maybe even a bounty can be put together (i\\\'ll contribute a few , I\\\'m a poor struggling artist LOL!)...With regards your point about the icon needing to be platform neutral, I  disagree.I\\\'ll explain. A Mac style icon can (and should) be a restyling of one that is drawn to suit a windows app, likewise a linux one; they can all be the same design, but slightly restyled.  For instance, the apple Safari icon; on Mac it is as it should be, but on Windows it _should_ (apple haven\\\'t done this, they won\\\'t change their icons!) be drawn in a more illustrated style; more pastels, less photoreal etc.  And on Linux, if it were drawn for that platform, it would be perhaps more cartoonish, and vivid," a la the """" icon set. Since the designer has already designed the icon (which is the bulk of the work)", and what not, designing a few variants is not a major issue.The icon should be immediately recognisable as Bitcoin, but should look good at high detail (for reference, on Mac, icons now are expected to be 1024x1024...we;re a long way from 32x32, eh?)," and should be re-deployable across other platforms in a slightly different style (yet still the same design etc).I would suggest we don\\\'t veer far from the ""coin"" motif", but again, if we make a forum post about this," and make it a polled ""competition"" or whatever", people are free to do what they like, and the whole community can have a say and input  this would be an icon only we\\\'re not talking about rebranding Bitcoin  making a better icon for the client app....\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,8,2013-02-23 05:53:56,7.62,,1,,"b""b' The low resolution issue is present on Ubuntu as well", in the launcher to the left of the screen. I wonder if the icon could be included as an .svg as well," because I think common Linux distributions can read that as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,9,2013-02-23 05:53:56,6.52,,1,,"b'b"" Certainly wouldn\'t be an issue; provided the original icon is created in a vector format", ie Illustrator... I personally generally only draw in vector, although I know some icon designers draw in  etc.  Perhaps if we do go down the forum-call line, then mandate the artwork should be supplied in vector format," and then there won\'t be any issue with later moves to larger icons etc.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,10,2013-02-23 05:53:56,1060.52,,1,,"b'b\' The current icon is in the source tree in svg format (""""). I think we should require the same from any replacement icons. Although vector doesn\\\'t completely make the scaling issue go away", especially at the very small sizes (such as 16x16/24x24/32x32 for the notification icon) we still need a bitmap. @schildbach The problem with the launcher icon is separate; to have a high-resolution launcher icon you need to install a .desktop file in the right place, and an icon somewhere in the shared system directories. I\\\'m not sure if the ppa does this, but the problem is not unavailability of the current icon in different sizes.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,closed,2013-10-22 08:11:53,14.32,3,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2330,closed,-,-,-,3,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,opened,2013-03-01 11:09:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,title,2013-03-01 11:09:14,00:00,,1,,"b""b' Discourage fee sniping with nLockTime'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,body,2013-03-01 11:09:14,00:00,1,,,b'b\' Set nLockTime on wallet transactions (only, no RPC changes) such that they can only be mined by the next block, rather than a block orphaning the current best block. There are two reasons to do this, the first is the minor benefit that using nLockTime ensures related bugs get caught immediately," so protocols that need that feature don\\\'t become ""unusual"" transactions with flaky behavior. The more important reason is to discourage ""fee sniping"" by deliberately mining blocks that orphan the current best block. Basically for a large miner the value of the transactions in the best block and the mempool can exceed the cost of deliberately attempting to mine two blocks to orphan the best block. However with nLockTime you\\\'ll soon run out of transactions you can put in the first block", which means they now need to go in the second. With limited block sizes you\\\'re run out of room, and additionally another miner now only needs to orphan one block to in-turn snipe the high-fee transactions you had to place in the second block, wrecking all your hard work. Of course, the subsidy is high enough, and transaction volume low enough, that fee sniping isn\\\'t a problem yet, but by implementing a fix now we ensure code won\\\'t be written that makes assumptions about nLockTime that preclude a fix later. Transaction propagation is not impacted; even with non-final is non-standard the best block height implies we have at least one peer, and very soon more peers, that will accept and rebroadcast the transaction immediately.## Testing### Unit tests Pass### Propagation No issues. Used -blocknotify=\\\'bitcoind sendtoaddress\\\' to send transactions as soon as a few block is found with worst-case of a node connected to only two 0.8 peers. Enabled -logtimestamps w/ ntp on that node and another node, and every transaction got to the second node within 5 seconds.### Services No problems: Easywallet, Instawallet, Coinbase Wallet, Coinbase Merchant Services, , BitPay, bitfetch, localbitcoins Won\\\'t accept until 1 confirmation: Satoshidice Most likely SatoshiDice implemented nLockTime == 0 rather than IsFinal() as their never-confirm nLockTime fix. I think there is an argument to be made that forcing them to make a minor change like this one would be a good way to test the waters to see if they\\\'ll make a more drastic change, as would be required if we make dust outputs non-standard.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,1,2013-03-01 11:09:14,1082.73,1,,,"b'b"" @sipa I looked into it and I think we don\'t need to worry about nBestHeight decreasing on a retarget reorg. Anything already in a node\'s mempool stays there and will be mined once the chain height catches upl so it would be extremely rare for that to take more than an extra block or two.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,2,2013-03-01 11:09:14,756.67,,1,,"b'b"" Coinbase got back to me and they\'ve now fixed the issue they\'re using the same IsFinal() logic as the reference client.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,3,2013-03-01 11:09:14,1072.12,1,,,"b'b\' Re-based on top of the ""fix off-by-one errors"" fix", which unfortunately means this has to be weakened until the network upgrades. It\\\'ll still at least shake out bugs in the meantime.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,4,2013-03-01 11:09:14,63.75,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,5,2013-03-01 11:09:14,820.6,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,6,2013-03-01 11:09:14,82.63,,1,,"b""b' @petertodd Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,7,2013-03-01 11:09:14,1416.08,,,1,"b""b' This seems nice to have.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,8,2013-03-01 11:09:14,952.88,,1,,"b'b"" @jgarzik @luke-jr Updated and tested it against ", Coinbase, EasyWallet, SatoshiDice and the Android Bitcoin Wallet. It may make zero-conf tx\'s take a little longer to show up for SatoshiDice, but other than that possible issue I didn\'t have any problems. (the android wallet seems to have been updated to never show unconfirmed tx\'s so that\'s a non-issue) I couldn\'t test  properly because right now they aren\'t showing _any_ transactions as confirmed for my account," nLockTime or not. Note that this version is still the weaker one compatible with the current off-by-one behavior of the rest of the network that url  fixes. What does BitPay do with nLockTime-using transactions?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,9,2013-03-01 11:09:14,0.45,,1,,"b""b' @luke-jr You added this patch to next-test any related bug reports?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,10,2013-03-01 11:09:14,6.37,,1,,"b""b' Without getting into too much public detail:  BitPay uses stock bitcoind as boundary nodes if at all possible.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,11,2013-03-01 11:09:14,2.73,,1,,"b'b"" Well if you trust those bitcoind\'s 100% for what is or isn\'t a real transaction then this patch won\'t cause any problems for BitPay customers.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,12,2013-03-01 11:09:14,96.22,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,13,2013-03-01 11:09:14,53.47,,1,,"b'b"" @petertodd Why do you think so? That\'s certainly not the case. However it will display a warning if lockTime ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,14,2013-03-01 11:09:14,42.92,,1,,"b'b"" I\'ve been using this as part of next-test for months now and haven\'t encountered any problems as a result.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,15,2013-03-01 11:09:14,118.17,1,,,b'b\' @schildbach Actually seems that Android Wallet has a number of issues: 8f8dee4bbd74b573c324745d9d23938a1e4d12f269f9afca022224cf740f16aa This tx has nLockTime=1," but nSequence=int max so it is a final tx. Instead the wallet shows a big read ""this transaction is non-standard and should not be trusted"" until it confirmed kinda silly. fdb100df609349802c90dee38c694f3626b6c1f62a20ba92603ad17202b09322 nLockTime=1", and nSequence set so nLockTime is active, but the tx is locked. It eventually showed up in my wallet, but only after a confirmation. It didn\\\'t show up immediately. a4cceb4df7db3507966e57aea6d8f7b21ceabee55bac573e9b9590229fde6a3f This one, and a few like it, are the worst though: they are time-locked transactions, and every one of them not only didn\\\'t know up prior to being confirmed, but even after being confirmed they still didn\\\'t show up in my wallet. tx 6ed945173e1455edf09931b4c7caac165c7d834ddc1ea296a24b9213a45cf24d is a particularly extreme example," having the minimum possible ""lock-by-time"" nLockTime. Curiously if nLockTime Finally after re-scanning the chain all the tx\\\'s showed up in my wallet.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,16,2013-03-01 11:09:14,412.9,,,1,"b'b"" @petertodd Thanks for your detailed tests. I\'ll investigate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,17,2013-03-01 11:09:14,26.3,,1,,"b""b' @schildbach any results?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,18,2013-03-01 11:09:14,10.4,,1,,"b'b"" @wtogami I fixed the UI so that the first case should not show up as timelocked any more. The other cases should not show up in their unconfirmed state. However"," they will show once they\'re blockchain confirmed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,19,2013-03-01 11:09:14,644.35,,1,,"b'b"" @schildbach What\'s blocking showing those tx\'s in their unconfirmed", but final," state?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,20,2013-03-01 11:09:14,783.33,,1,,"b""b' I think the rationale is those transactions currently do not constitute a usecase that is supported by bitcoinj", so for safety reasons they are not allowed into the wallet. I believe this will change in future," probably with the introduction of more complex payment types (consisting of more than one tx). Probably @mikehearn can tell more.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,21,2013-03-01 11:09:14,533.37,1,,,"b'b\' Using the nLockTime feature is the business of the sender; the receiver has no reason to care about whether or not that feature was used if the transaction is now final and can be mined. This is just another example of the ""death-spiral"" of feature disablement that we keep seeing in Bitcoin where because we disable features based on nothing more than a suspicion that they might somehow be used for something nefarious", which in turn makes it impossible to develop anything useful using that feature because wallet software interacts badly with it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,22,2013-03-01 11:09:14,269.73,,,1,"b'b"" Hmm", that argument sounds familiar :) This came out of the conclusion that people could create time-locked transactions that people would think would confirm quickly, then wouldn\'t, making it easier to double spend. I think it was you that brought that up originally actually. Anyway it was a fair point so those transactions just don\'t get accepted into the wallet by default. And nowadays they\'re non standard anyway so they shouldn\'t even propagate to those wallets. People upgrade SPV wallets fairly fast," so we can certainly change that for a subset of cases if it\'s important and won\'t increase risk to merchants.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,23,2013-03-01 11:09:14,2.48,,,1,"b'b"" @mikehearn The problem right now is that they don\'t show up in android wallet even after they\'re locked. Those transactions are not non-standard", they propagate fine," and other wallets (most?) display them okay too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,24,2013-03-01 11:09:14,6.1,,1,,"b'b"" I\'ll re-review that code", but I think final transactions are allowed, or are supposed to be. There was an issue with the Android UI checking if there was a time lock rather than if it was final," but I thought that was fixed. I filed bug 469 to investigate: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,25,2013-03-01 11:09:14,1027.42,,1,,"b""b' I fixed the bitcoinj side issue. It may require a quick new API to make the UI do the right thing though. Andreas"," let me know when you have time to retest this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,26,2013-03-01 11:09:14,927.07,,,1,"b""b' @schildbach @mikehearn Current version of the Android wallet is rejecting all using txs with nSequence != max  nLockTime != 0 even once they are confirmed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,27,2013-03-01 11:09:14,188.78,,1,,"b""b' @petertodd If you have a test script"," can you publish that so I can reproduce?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,28,2013-03-01 11:09:14,55.6,,1,,"b""b' The current version of the app is not using bitcoinj 0.11-SNAPSHOT which is where I made the fixes. So that would be expected.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,29,2013-03-01 11:09:14,521.9,,1,,"b'b"" @schildbach I don\'t have a test script; I used the raw tx API and just edited the hex manually.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,30,2013-03-01 11:09:14,327.57,,1,,"b""b' ACK. I have been using this for 4 months now"," at least 2 months of that including my offline wallet with hundreds of BTC. No problems at all.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,31,2013-03-01 11:09:14,50.43,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,32,2013-03-01 11:09:14,4.35,,1,,"b""b' NACK This has potential privacy problems by acting as yet another bit of metadata added to transactions that can distinguish wallets and thus coins. While it may be a useful thing in the future"," for now I consider those privacy issues significantly more important than the fee-sniping problem. Closing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,closed,2014-02-21 01:09:06,839.87,5,24,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,33,2013-03-01 11:09:14,23.45,,1,,"b""b' Right now Bitcoin-QT created transactions are trivially distinguishable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,34,2013-03-01 11:09:14,8.27,,1,,"b""b' @gmaxwell Explain?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,35,2013-03-01 11:09:14,18.97,,1,,"b""b' AFAIK this is only a privacy problem as long as only a few people are using it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,36,2013-03-01 11:09:14,25.92,,1,,"b'b"" @petertodd All our signatures are have S values in half the order. Once you have more than a couple signatures on your transaction it\'s distinguishable with near certainty.  We also do things like ... not resending change to the same address which distinguishes us from multibit and bc.i", for example. Or compute fees correctly, distinguishing us from multibit (and I think anything bitcoinj based?), bc.i, mtgox," etc.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,37,2013-03-01 11:09:14,206.98,,,1,b'b\' Bitcoinj 0.11 wallets also use half order s values now and fees arecomputed correctly by bitcoinj, save for the fact that it won\\\'t ever createfree transactions regardless of priority due to the tiny fixed spaceavailable. Once floating fees come in I hope to change that as we will havesome notion of how fast a free tx could confirm. And I\\\'m working on HDwallets now so the address reuse will go away in the coming months. We\\\'rekeeping up.... mostly :) Anyway, Peter\\\'s argument could apply to any upgrade. Perhaps in this casethe benefit is so minor it\\\'s really not worth it, but I\\\'m not comfortablewith arguments that could be reused in any tx format upgrade. BTW the issues with how finality are represented by bcj should be fixed in0.11On 21 Feb 2014 07:56,"Gregory Maxwell"" notifications@ wrote:\''
bitcoin	2340	closed	38	petertodd	2013-03-01 11:09:14	3.18			+1	b'b"" @gmaxwell Most of those practices are things other wallets can and should adopt, e.g. S-values and using new addresses for change. Fees will be increasingly floating in the future, which makes them less useful as a distinguisher. @luke-jr Not necessarily. For instance a CoinJoin transaction may be completed in a time long enough for multiple blocks to be created, in which case the transaction sticks out compared to transactions created otherwise. Similarly users using high-latency anonymization networks can only guess at what nLockTime to use. Now maybe those issues can be satisfactorily solved by randomizing the nLockTime chosen, say 90% of the time pick the default, 10% of the time pick something at random from the last 100 blocks. Note that there is also a propagation issue, although that\'s similar to how we don\'t repropagate orphan tx\'s after we learn about their parents the fix can make use of that machinery. The code has to be neutered right now by setting nLockTime back 1 from what it could be to deal with the nLockTime off-by-one bug maybe it\'d be best to change that to 10 back to be safer so that the initial rollout only triggers nLockTime-related bugs rather than propagation problems. In any case this is a cost-benefit problem. The problem of fee-sniping is only apparent with large mining pools comprising a significant fraction of the total mining power and fees significantly larger than the block reward. While we have the former, the latter is a long way off. At the same time we already know mining pools already have an incentive to become bigger due to orphan costs; the incentive to become larger to fee snipe is probably small in comparison.""'
bitcoin	2340	closed	39	luke-jr	2013-03-01 11:09:14	0.15		+1		b""b' @mikehearn What are your thoughts about porting this change to BitcoinJ?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,40,2013-03-01 11:09:14,3.27,,1,,"b""b' @petertodd High latency users can afford to pick a future block and have it wait for relaying.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,41,2013-03-01 11:09:14,2.67,,1,,b'b\' I\\\'m not sure yet. Still watching the debate. I\\\'m not against doing that,although right now there are a lot of other changes that seem moreimportant. I guess I\\\'d like to see at least a BIP explaining the change andrationale in detail, so wallet authors can be pointed there to understandthings.On 21 Feb 2014 11:26,"Luke-Jr"" notifications@ wrote:\''
bitcoin	2340	closed	42	petertodd	2013-03-01 11:09:14	53.12		+1		b'b"" Well anyway this is pretty low on my priority list; I updated it so that it goes 10 blocks back, and 1/10 times the depth is randomized. If it pans out, it pans out, and in the meantime it\'ll help get rid of whatever remaining nLockTime-related bugs people have in their custom implementations. ACK""'
bitcoin	2340	closed	reopened	 - 	2014-02-21 06:55:04	345.97	5	32	7
bitcoin	2340	closed	43	petertodd	2013-03-01 11:09:14	1022.52		+1		b""b' rebased'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,44,2013-03-01 11:09:14,692.77,,,1,"b""b' I think this is a good idea for normal wallet behaviour. Perhaps we should open some discussion on the mailing list"," or have an informative BIP?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,45,2013-03-01 11:09:14,178.65,,1,,"b""b' @sipa +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,46,2013-03-01 11:09:14,1120.58,,1,,"b'b"" If this is conditional on a BIP or mailing list condition I\'m going to close this for now. It makes no sense to continue asking for rebases. Let me know when discussion is concluded and it can be merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,closed,2014-06-25 09:09:35,134.52,5,35,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,47,2013-03-01 11:09:14,387.85,,1,,"b'b"" @laanwj Quite reasonable; I suspect there\'s zero interest in it frankly. It\'s a solution to a very far off problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,48,2013-03-01 11:09:14,6.05,,,1,"b'b"" I continue to think this is good wallet behavior", and it is cheap to put in place now for the long term.  RE privacy, that is only true if others fail to adopt this practice.  bitcoind wallets can usually be detected by other means today anyway (thus in the future it should be private presuming it\'s adopted," and today it\'s not the biggest problem in that arena). Just mailed the list.  I think that is sufficient.  I don\'t think this rises to the level of a BIP.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,49,2013-03-01 11:09:14,50.7,,,1,"b'b"" It doesn\'t change how anyone else must behave... I agree it would be a best practice and consistency would be good for improved privacy"," but I don\'t think thats a reason to defer or delay doing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,50,2013-03-01 11:09:14,2.35,,1,,"b'b"" I suggested the BIP and mailinglist discussion mostly to let other wallet implementation be aware of this possibility and suggest using it. I don\'t think it\'s a blocker. The only concern here seems to be privacy"," but I\'m pretty sure our wallet implementation is already pretty recognizable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,51,2013-03-01 11:09:14,2.5,,,1,"b'b"" Anyway", if it doesn\'t turn out to be a good idea, we can easily revert it; if it does turn out to be a good idea, it\'ll be easier to implement it more widely once someone has forced people to fix their nLockTime related bugs. But I\'m going to catch a flight soon, so if you want to merge it," someone else needs to fix whatever is making the merge fail. :) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,reopened,2014-06-25 16:42:33,452.97,5,37,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,52,2013-03-01 11:09:14,1209.1,,1,,"b'b"" I must admit that I somehow don\'t understand this issue fully any more. Can someone post a tl;dr what nLockTime related bugs do other (perhaps specifically bitcoinj-based) wallets have?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,53,2013-03-01 11:09:14,7.95,,1,,"b""b' I think the bugs were fixed a long time ago"," at least at the library level. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,54,2013-03-01 11:09:14,28.77,,1,,"b'b"" Oh", I didn\'t mean to say I knew of any unfixed bugs right now," just that this will keep new ones from sticking around for long. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,55,2013-03-01 11:09:14,45.45,,1,,"b""b' Rebased. This should be ready for merging.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,56,2013-03-01 11:09:14,179.18,,,1,"b'b\' Current dev consensus on this is ""looks good to have"" It was posted to the mailing list thread ""Wallet nLockTime best practices"" with little to no response. Let\\\'s collect ACKs and get it in:  ACK\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,57,2013-03-01 11:09:14,250.05,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,58,2013-03-01 11:09:14,572.43,,1,,"b'b"" I think we\'re all a bit hesitant to be the first wallet to merge this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,59,2013-03-01 11:09:14,648.7,,,1,"b""b' ACK.  Another benefit is more txes in the blockchain with information on first-eligible-block vs. actual-block"," at no additional storage cost.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,60,2013-03-01 11:09:14,137.1,,,1,"b""b' Automatic sanity-testing: FAILED ", see url  for binaries and test log. This could happen for one of several reasons:1. It chanages paths in -mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in -tester)2. It  tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)4. The test suite fails on either Linux i386 or Win325. The block test-cases failed (lookup the first bNN identifier which failed in url  If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,61,2013-03-01 11:09:14,273.88,,1,,"b'b"" I for some reason thought this was merged already. Functionality that doesn\'t get used will rot. It\'s also useful for some far out concerns.  I\'m in favor of this"," but it should probably get a configuration option to disable it. (e.g. if it turns out to be problematic for someone even after we ship it).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,62,2013-03-01 11:09:14,2.48,,1,,"b""b' Bitcoin Core is the reference wallet", and, as such, should set the best practices," ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,63,2013-03-01 11:09:14,13.85,,1,,"b""b' +1 still want this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,64,2013-03-01 11:09:14,35.72,1,,,"b'b"" If someone hasn\'t complained by now"," they can hack the code and recompile. I\'ve been using this in production for over a year now with no issues. So I\'d favour just merging it without a config option.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,65,2013-03-01 11:09:14,304.33,,1,,"b""b' ~~ACK~~ +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,66,2013-03-01 11:09:14,2.05,,1,,"b'b"" @btcdrak You realize code you ACKed doesn\'t actually compile right now... Lemme get this fixed and we can get this actually tested and merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,67,2013-03-01 11:09:14,4.23,1,,,"b""b' @petertodd Oops"," I meant +1 to the idea. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,68,2013-03-01 11:09:14,6.8,1,,,"b""b' @btcdrak Your punishment: go fix that compile error for me so I can watch bad movies on my flight home instead. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,69,2013-03-01 11:09:14,36.93,,1,,"b""b' @petertodd done"," but a single character diff doesnt seem like punishment'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,70,2013-03-01 11:09:14,1395.18,,1,,"b""b' Fixed unsigned-vs-signed issue and did one last bit of testing. Lets just merge this as is before it drags on any further. Adding a command line option to disable it can easily be done in another pull-req.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,71,2013-03-01 11:09:14,6.25,,1,,"b'b\' Well I can definitely say ""tested ACK"" it this time. Tested ACK\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,72,2013-03-01 11:09:14,341.17,,1,,"b""b' Fixed issue brought up by @dgenr8 and added an assert() to double-check the resulting nLockTime is sane.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,73,2013-03-01 11:09:14,0.62,1,,,"b'b"" It\'s unfortunate there\'s no unittest that actually does a CreateTransaction()... at first glance it looks like quite a bit of work to add however. :(""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,74,2013-03-01 11:09:14,188.43,,1,,"b""b' tested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,closed,2014-12-19 17:54:54,72.35,9,53,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,75,2013-03-01 11:09:14,1389.13,,1,,"b'b"" Bitcoin Wallet version 4.16 \\xe2\\x80\\x93 just released \\xe2\\x80\\x93 is now compatible to this patch in that it doesn\'t display an \'untrusted\' warning on those tx any more.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,76,2013-03-01 11:09:14,1391.05,,,1,"b""b' @schildbach Thanks! Out of curiosity"," how long for the Android store to update?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,77,2013-03-01 11:09:14,1396.82,,1,,"b'b"" @petertodd It\'s already on Google Play. It usually takes an hour or so to appear.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,78,2013-03-01 11:09:14,233.22,,,1,"b""b' @schildbach Thanks! Confirmed working here too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2340,closed,-,-,-,9,55,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,opened,2013-03-07 10:19:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,title,2013-03-07 10:19:37,00:00,,1,,"b""b' make vRPCCommands comment match property names'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,body,2013-03-07 10:19:37,00:00,1,,,"b""b' This is a real simple change to make the comments match the property names of Here is the diff"," ignoring the whitespace: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,closed,2013-03-07 10:25:44,6.12,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,reopened,2013-03-07 10:31:12,5.47,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,1,2013-03-07 10:19:37,14.02,1,,,"b'b\' Suggest renaming ""unlocked"" at the same time"," since it can be confused with wallet encryption .. ""threadsafe""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,2,2013-03-07 10:19:37,32.5,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,3,2013-03-07 10:19:37,50.32,,1,,"b""b' Automatic sanity-testing: PASSED"," see url  for binaries and test log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,closed,2013-03-11 23:07:43,756.52,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2348,closed,-,-,-,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,opened,2013-03-20 03:39:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,title,2013-03-20 03:39:20,00:00,,1,,"b""b' Bitcoin-QT 0.8.1 Windows client freezing when importing private-key.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,body,2013-03-20 03:39:20,00:00,,1,,"b'b""   Could the reason be that the client is rescanning ? I didn\'t ask it to rescan.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,1,2013-03-20 03:39:20,508.47,,1,,"b""b' Can you try what happens with this"," when you are fully synced with the network and report back.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,2,2013-03-20 03:39:20,175.43,,1,,b'b\'   is something that\\\'s done through the is not in synch, that the client is prevented from crashing in regards to this issue. Also it would be good to give some kind of feedback like \\\'Private key [key label] successfully imported\\\'," you may need to restart the client for it to be visible. Also the error message given when trying to importing the same private key twice gives an error message: ""The private key for [bitcoinaddress] is already imported."" Forgive me for this poorly formatted message", I\\\'m unfamiliar with the github issue system.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,closed,2013-03-20 15:03:14,683.9,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,3,2013-03-20 03:39:20,1.25,,1,,"b""b' Hah I managed to accidentally close the issue as well well I reopened it now I need input from others"," please.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,reopened,2013-03-20 15:04:29,1.25,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,4,2013-03-20 03:39:20,214.7,,1,,"b'b"" Importing a private key does immediately start a rescan", which when executed through the debug console will make the UI unresponsive until it completes. This is so the new balance will be shown correctly after importing a key. A progress or busy indicator would be useful when Bitcoin is performing an operation, even if started via RPC, so users don\'t shut down Bitcoin-Qt while it is performing some database operation. There is an option that allows you to disable the automatic rescan," if for example you have many keys to import before you wish the rescan to happen. importprivkey  [label] [rescan=true]""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,5,2013-03-20 03:39:20,500.52,1,,,"b'b\' Same problem. Windows VistaSometime on import all is well.  Sometimes on import the wallet freezes.  Chain is up to date.v0.8.1-beta 1 private key !2 private keys !3 priv ____ BREAK (not responding) force ""close program"" Looking for newer...now trying 8.2... Nope.  Same problem.  Locked up after the third import. So the solution is to wait?  Is there any other way to import a batch of addresses?  This seems awfully inefficient for a merchant.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,6,2013-03-20 03:39:20,363.08,,1,,b'b\' After importing a new key, the blockchain is rescanned for missing transactions. This may take 10 minutes or so, depending on hardware. You can disable rescanning by passing an extra \\\'false\\\' argument to the RPC call," so for example I\\\'ve also been working on an ""entire wallet"" key  function", which would export all wallet keys to a file, or import such a file at once. May I ask why you need to import many keys, though?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,7,2013-03-20 03:39:20,376.25,,,1,"b'b\' So I\\\'ve imported the private keys per sipa\\\'s method and while the solution worked perfectly I later realized that the addresses show up differently in my wallet that I had expected... they show up under the ""addresses"" tab.  ;-)  Perhaps I am not doing what I _should_ be doing.  My entire purpose is to create a new public address for each transaction the same way mt gox appears to do each time I deposit btc into my account.  If the key system is any type of modulus system is it not true that a single private key could have many public solutions?  If that is the case... how to I create a batch new public keys from the ""original"" private key within or outside my wallet?  I would like to create: 1publicaddress123451sumutherpublicaddress123451sumutherpublicaddress123461sumutherpublicaddress12347 I expected these to show up under ""Receive"" so I\\\'m now thinking that I wanted to create new public addresses from the existing key instead of new keys which _seem to be called_ addresses.  Is this right? My solution _was_ to use vanitygen + import the newly pressed keys.  But I don\\\'t think I  all the private keys.  Thoughts? Better place to ask? (I don\\\'t need vanity addresses", just unique ones with a zero balance).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,8,2013-03-20 03:39:20,9.52,,1,,"b""b' Every private key has exactly one corresponding public key and address. But why are you importing keys at all? Just do a getnewaddress every time you need a new receive address?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,9,2013-03-20 03:39:20,5.12,,,1,"b'b\' ""Just do a getnewaddress every time you need a new receive address"" This is the information I needed", thank you.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,10,2013-03-20 03:39:20,1171.25,,1,,"b""b' Closing this as it appears to be sufficiently answered.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,closed,2013-10-24 11:04:55,1200.43,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,11,2013-03-20 03:39:20,209.08,,1,,"b""b' how do i get my coins if i closed because i thought it froze'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2389,closed,-,-,-,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,opened,2013-03-28 23:02:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,title,2013-03-28 23:02:23,00:00,,1,,"b""b' Use a uint256 for bnChainWork'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,body,2013-03-28 23:02:23,00:00,,1,,"b'b"" Every block index entry currently requires a separately-allocated CBigNum. By replacing them with uint256", it\'s just 32 bytes extra in CBlockIndex itself. This should save us a few megabytes in RAM (around 32 bytes per block)," and less allocation overhead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,1,2013-03-28 23:02:23,453.17,,1,,"b""b' Are these numbers always guaranteed to fit in a uint256? A more general solution may be to change CBigNum to store numbers <2^256 inline", and only allocate for larger ones," like with some optimized string implementations.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,2,2013-03-28 23:02:23,32.42,,,1,"b""b' Our current work (printed as a uint256 with this patch) is 00000000000000000000000000000000000000000000003256b810087da1a920", assuming every 600MH card on the network is replaced with a 60GH ASIC and then we multiply that by 1000 for network growth, we get a network rate of 100,000x current, we are safe for another 92 septillion*time since genesis,"  think we are safe.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,3,2013-03-28 23:02:23,0.07,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,4,2013-03-28 23:02:23,342.35,,1,,"b""b' ok"," ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,5,2013-03-28 23:02:23,238.57,,1,,"b'b"" When 2^256 hashes are exceeded", it\'s quite likely we\'ll have found a preimage for double-SHA256," and Bitcoin is broken in the first place.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,6,2013-03-28 23:02:23,1.2,,1,,"b""b' @BitcoinPullTester @TheBlueMatt I believe this will require a different pulltest"," as I presume it tries to modify the global BigNums.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,7,2013-03-28 23:02:23,76.7,,1,,"b""b' Yea"," this tries to modify the mindiff stuff so breaks on this pull.  Ignore pulltester output for now and ping me before merge so I can update the patch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,8,2013-03-28 23:02:23,1144.78,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,9,2013-03-28 23:02:23,729.43,,1,,"b""b' Added a commit that prints the 2-log of nChainWork instead"," which is somewhat more useful for human eyes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,10,2013-03-28 23:02:23,1059.83,,1,,"b""b' ACK. (Needs pulltester)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,11,2013-03-28 23:02:23,1401.1,,1,,"b""b' Rebased. This will need manual pulltester changes before it will succeed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,12,2013-03-28 23:02:23,957.42,,1,,"b'b"" @TheBlueMatt I\'ve added a patch to your patch in this pullreq. If you update pulltester to use the tests in contrib"," this _should_ apply cleanly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,closed,2013-04-12 10:19:25,677.03,0,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,reopened,2013-04-12 10:19:27,0.03,0,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,13,2013-03-28 23:02:23,418.98,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,closed,2013-04-12 17:27:56,428.48,0,14,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,14,2013-03-28 23:02:23,1028.13,,1,,"b""b' Would it be of any use to display a delta work (work since the last block) instead?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,15,2013-03-28 23:02:23,1074.88,,1,,"b'b\' The work since last block is also called ""difficulty"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,16,2013-03-28 23:02:23,316.07,1,,,"b'b"" Doesn\'t seem like a very useful thing to display on every UpdateTip message.. Why not just output one debug line when the difficulty changes"," and remove log2_work= altogether from the UpdateTip debug message?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2418,closed,-,-,-,1,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,opened,2013-04-06 18:32:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,title,2013-04-06 18:32:27,00:00,,1,,"b""b' no separate source code tarball download available'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,body,2013-04-06 18:32:27,00:00,,1,,"b'b"" on url there\'s no source code tarball which i need to get reproducible results on my build-it-yourself distro (package management system is laid out for source tarballs with checksums", not git checkouts) apparently the linux download has the source included, but also comes with prebuilt binaries (unusable in my case, since i use a different libc).this bloats up the tarball to twice the needed size or more, which affects download time and hd usage. the argument that 18 MB is nothing compared to 7G of blockdata, is not valid for people who just fetch all tarballs in one go (so they have them already in case they need it), but in the end do not use the bitcoin client. the other argument that github provides downloads is also not valid, since1) they generate tarballs on the fly so the checksum changes whenever it is removed from cache (gz uses a random seed, so every archive produced is unique, even with the same content)2) github redirects from http to https, making it impossible to download anything with busybox\' wget program. they did not even reply to my complaints about that.3) github has no redundancy, when the frontend server(s) is down, everything is down4)  (which is already used for binary downloads) has at least 20 mirrors in different countries," and provides much better download speeds. additionally it lets the user choose if he wants HTTP or HTTPS downloads. so please in the future release a separate source code tarball and make it available from the default download page.thanks. please also consider using the .xz compressor since it\'s about 40-60% better in compression and only slightly slower in decompression speed than .gz (but 3-4x as fast as bz2) and available on any linux distribution that came out in the last 5 years. even busybox supports it by default.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,1,2013-04-06 18:32:27,786.75,,1,,"b""b' A source code tarball is really needed for packagers.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,2,2013-04-06 18:32:27,1.97,,,1,"b'b\' The linux tarball is the source tarball. Our experience with packagers has not been inspiring. What system do you plan on packaging bitcoin for? ""unusable in my case"," since i use a different libc""", do you actually have Bitcoin running on this system?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,3,2013-04-06 18:32:27,11.55,1,,,b'b\' Yes," I see. Not having a source tarball is weird. Normally that is ""the release"" and the binaries are supplemental. I\\\'m working on a Fedora rpm.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,4,2013-04-06 18:32:27,10.2,,1,,"b""b' Bitcoin cannot currently be usefully packaged for Fedora because the distribution patches out _all_ ECC support from OpenSSL"," which we currently depend on.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,5,2013-04-06 18:32:27,2.08,,1,,"b""b' Yes"," I have an alternate openssl rpm as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,6,2013-04-06 18:32:27,101.32,1,,,"b'b"" @gmaxwell my system is url  based on musl libc.and no", currently i dont have bitcoin running there due to the weird release situation for the official client.but i\'d like to add it," once a regular source tarball is available.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,7,2013-04-06 18:32:27,2.38,,,1,"b'b"" I had fairly little luck getting boost to work on alpine a year or two ago.  A separated binary and source tarball is not your biggest hurdle by far. (This is all an aside mostly but\\xe2\\x80\\x94 maintaining _more_ files to release is more work"," and seems kinda pointless if it\'s only to appease some sense of rightfulness for some that doesn\'t even have Bitcoin working for them already; Not that I disagree that it would be better to have a separate freestanding source tarball.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,8,2013-04-06 18:32:27,1.48,,1,,"b""b' i have both qt4 and boost installed"," the only thing missing is bitcoin.url url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,9,2013-04-06 18:32:27,0.33,,1,,"b""b' url  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,10,2013-04-06 18:32:27,0.42,,1,,"b""b' @sipa please read before post'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,11,2013-04-06 18:32:27,1.77,1,,,"b""b' Sorry"," ignore me :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,12,2013-04-06 18:32:27,0.53,,1,,"b'b"" @rofl0r if your response is that you want a _non-SSL_ source for it", I\'m going to have to WONTFIX that," cause thats kinda nuts.  Should we ever get around to running our own resources for  and move all the hosting to it that site will be SSL only.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,13,2013-04-06 18:32:27,1.78,1,,,"b""b' i didnt say anything about SSLi simply request a source tarball as _any_ other project offers (without useless glibc binary crap)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,14,2013-04-06 18:32:27,3.95,,,1,"b'b"" Then grab it of the tag based URL that sipa pointed you to. Thats currently our supported method for providing source only files.  I agree it\'s less good than freestanding file", but I don\'t see a justification for additional work considering that we have a costless workable alternative. (Gzip is also not randomized in any way, though differences in zlib version can change the output," if the github snapshots are not deterministic thats due to something else) The github files are determinstic for me:$ sha256sum v0.8.3*b56de5bde38714e83f69a4daf81c9a5577f151beda60427381770a1a4819af15  v0.8.3b56de5bde38714e83f69a4daf81c9a5577f151beda60427381770a1a4819af15  v0.8.3""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,15,2013-04-06 18:32:27,2.43,,1,,"b'b"" as i said in the introductory text", HTTPS cannot be fetched by busybox wget you\'re offering downloads for anything," why do you dig your heels to not offer a proper source download ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,16,2013-04-06 18:32:27,1.92,,1,,"b'b"" it\'s about adding two lines in your make-: one line in your sourceforge upload code""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,17,2013-04-06 18:32:27,0.67,,,1,"b'b"" As I said above", we will not commit to supporting a non-SSL download method for anything we provide on an ongoing basis.  There is no sense in doing _additional_ work for every release when doing so won\'t solve anyone\'s problems.  You will not be satisfied because it won\'t stay useful to you," no one else will be satistfied because they\'re already happy with the two source download options we already have.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,18,2013-04-06 18:32:27,0.63,,1,,"b""b' so why do you offer non-SSL downloads for windows and mac binaries via sourceforge ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,19,2013-04-06 18:32:27,1.03,,1,,"b'b"" won\'t solve anyone\'s problem so you\'re saying that i and @jeffmendoza are nobody ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,20,2013-04-06 18:32:27,1.08,,1,,"b'b"" @rofl0r  Because of legacy inertia\\xe2\\x80\\x94 thats what sourceforge does.  There is another issue where yet someone else is yelling at us over the non-use of SSL. There is absolutely no way that we\'re going to commit to providing _non-ssl_ downloads for your busybox environment. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,21,2013-04-06 18:32:27,0.87,,1,,"b'b"" just because busybox\' wget does not link to openssl does not mean that openSSL is not available on the host.it\'s just not being linked against because of huge bloat. the packaging system uses the host\'s wget", which could either be busybox wget or gnu wget depending on the user\'s preferences," but i have to make sure that both work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,22,2013-04-06 18:32:27,0.75,,1,,"b'b"" @gmaxwell sourceforge is providing both HTTP _and_ HTTPS"," so that\'s completely irrevelant""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,23,2013-04-06 18:32:27,5.62,1,,,"b'b"" I don\'t know who you are. I know that you are asking for something that some additional work on an already strained release process that seemingly almost no one else cares about", on the basis of apparently incorrect claims (github\'s tag links being non-determinstic), with additional preconditions which we will not commit to supporting (non-ssl downloads). Do you think that responding aggressively and arguing every point is going to get you your way here?  I might have made a commitment to do some extra work to support someone\'s particular requirements\\xe2\\x80\\x94 if I understood them and thought it would help\\xe2\\x80\\x94 but I\'m certainly not inclined after this interaction. :( As far as Jeff goes," he hasn\'t said why one of the two options we already have isn\'t sufficient for his usage.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,24,2013-04-06 18:32:27,3.93,,,1,b'b\' what about FreeBSD, PCBSD," etc users ? shall they download a ""linux"" tarball full of binary linked glibc stuff just to get the source ? linux != GLIBC", altho thats a common misconception.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,25,2013-04-06 18:32:27,2.47,,,1,"b'b"" As you can see by my mention of Alpine above", I\'m aware that Linux!=GLIBC (and... even my first linux system was not glibc). They can download the Linux release package\\xe2\\x80\\x94 at a moderate size tax\\xe2\\x80\\x94, or they can grab a tag source URL," or they can fetch using git. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,26,2013-04-06 18:32:27,2.77,1,,,"b""b' the problem is not so much the binary clutter in the tarball", although it is highly annoying.the main problem is that if someone goes on your site to search for a source code download, he doesnt find anything," except a link on github. my knowledge that the linux binary download also contains the source is from IRC'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,27,2013-04-06 18:32:27,15.58,1,,,"b""b' what this project is currently doing is turning a source code user into a second-class citizen while prefering binary junk consumers (altho only for popular platforms). needless to say that the binary stuff in the linux tarball is useless for any user of a non-x86 glibc linux system"," whereas the source code is universal and works everywhere.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,28,2013-04-06 18:32:27,1.68,,1,,"b'b"" As a FreeBSD maintainer", i would like to see the following: add a source code only  tarball, which can be used by , BSD, MAC, etc etc and optional an additional  32 bits binary download BSD users generally compile our stuff ourselves," so there\'s no need for a binary tarball.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,29,2013-04-06 18:32:27,4.4,,1,,"b""b' nemysis: Here ya go"," url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,30,2013-04-06 18:32:27,4.5,,1,,"b""b' This is not as one stable SF tarball", please upload a stable tarball as bitcoin-0.8.3 to SF," thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,31,2013-04-06 18:32:27,4.03,1,,,"b'b"" @nemysis I\'m afraid you\'re going to have to explain what you need thats missing here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,32,2013-04-06 18:32:27,0.05,,1,,"b'b"" It seems reasonable to me to put a source tarball on sourceforge along with release binaries. As things are", I agree it seems we\'re somewhat discriminating against source builds," which IMHO is something we should encourage (it removes the need for gitian-like trust in release binaries). The person doing releases may not like the extra work though...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,33,2013-04-06 18:32:27,2.38,1,,,"b""b' @gmaxwell BSD and  users need a stable Source tarball on SF.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,34,2013-04-06 18:32:27,1.83,,1,,"b'b"" @sipa Better to encourage builds from GIT", since then it leaves people in a position to send patches. ;) But indeed," it shouldn\'t be a big deal. I\'m concerned by the weirdness of the responses here.  @nemysis  On SF? They do?  Really? Why? You\'re just repeating yourself\\xe2\\x80\\x94 please help me understand.  The tar I linked to is a stable tarball. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,35,2013-04-06 18:32:27,7.98,,1,,"b""b' @gmaxwell yes is stable here", but is not good to download as  bitcoin-0.8.3 with good checksum what is needed for BSD,"  source tarball. This is only granted from SF.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,36,2013-04-06 18:32:27,5.3,1,,,"b'b"" @nemysis I understand your concern about a stable download I assume the fact that checksums can be published and verified", and are guaranteed not to change (and I indeed don\'t know to what extent github provides this). But just so I understand correctly: there is nothing specifically offered by SF that you need," right? It\'s just the fact that github doesn\'t guarantee stability of its source downloads?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,37,2013-04-06 18:32:27,4.13,,1,,"b""b' @gmaxwell yes for a FreeBSD Port is needed a stable tarball with good checksums", which GitHub not offer. Here when a Port use GitHub must download a snapshots, and in distinfo is then a checksum which is reference, but this is not very good," because GH sometimes change download and have same name.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,38,2013-04-06 18:32:27,2.47,,1,,"b""b' not to talk about redundancy offered by  and download speeds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,39,2013-04-06 18:32:27,8.25,1,,,"b'b"" @nemysis  I\'m sorry"," I still must be confused.  Whats wrong with USE_GITHUB and GH_TAGNAME in ports? I had thought many ports already pulled from github archive URLs just like ours.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,40,2013-04-06 18:32:27,4.4,,,1,"b""b' @gmaxwell this is true", i have too some FreeBSD Ports which use GH," but problem is that GH change very oft his rules and then must FreeBSD portmgr@ change  that download works from GH with this new rules and all Ports must be sometimes changed to this new rules. And when is a source tarball on SF then is all good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,41,2013-04-06 18:32:27,1.85,,,1,"b""b' @nemysis OK! Thats good to know.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,42,2013-04-06 18:32:27,42.23,,1,,"b""b' @gmaxwell good that you this now know", Could you now upload a stable bitcoin-0.8.3 and future Versions to SF site," please?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,43,2013-04-06 18:32:27,4.78,,1,,"b'b"" @gmaxwell If we\'re going to move to automake", we\'ll end up needing to do source releases anyway. To take advantage of automake\'s functionality," programs need to distribute source with the configure script already generated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,44,2013-04-06 18:32:27,3.63,,1,,"b'b"" Yes", please put the release source on Sourceforge. Github generated distfiles change frequently, for no good reason, and any build system relying on them is going to need constant fiddling. As the maintainer of the FreeBSD port, SourceForge distribution would make a lot of sense. It would also reduce load on github\'s servers," which cannot be a bad thing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,45,2013-04-06 18:32:27,3.38,,1,,"b'b"" As Gentoo maintainer", I have never seen the GitHub tarballs change... Gentoo\'s build system checks the SHA256 of all source files," so it would have picked up on anything like this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,46,2013-04-06 18:32:27,7.2,,1,,"b'b"" FreeBSD and other BSD checks too SHA256 but from downloaded tarball and all downloads when user wish to install Port check if this SHA256 from distinfo is the same what have Port maintainer make with \'make makesum\'"," also this is verified install.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,47,2013-04-06 18:32:27,1.88,,1,,"b'b"" On Thu", Jun 27, 2013 at 2:33 PM, nemysis notifications@ wrote:By the way, I have no objection against source tarballs as part of therelease," but I guess it\'s up to the person doing the release.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,48,2013-04-06 18:32:27,9.13,,1,,"b""b' @luke-jr does that mean gentoo checks the extracted files as opposed to the tarball itself ? that would explain why you didnt notice the changed hashi got this information on irc from a packager: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,49,2013-04-06 18:32:27,0.33,,1,,"b""b' Well"," it happened less than a month ago. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,50,2013-04-06 18:32:27,1.53,,,1,"b'b"" Nothing in this thread refutes the argument rofl0r made when he started the issue", being the other argument that github provides downloads is also not valid, since1) they generate tarballs on the fly so the checksum changes whenever it is removed from cache (gz uses a random seed, so every archive produced is unique, even with the same content) This obviously affects all source based distributions that use the gz\'s SHA256/MD5/size, so whenever github changes a minor bit," all source distributions that use the checksums for verifying are affected. Which is why exporting source based archives to sourceforge is a _good_ idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,51,2013-04-06 18:32:27,16.0,,,1,"b'b"" @xmj What you\'re saying there is untrue to the best of my ability to determine. There is no random seed in gzip or zlib.  There may be other causes of non-determinism (like the timestamp) which is why I was asking more questions (and regardless of what we do here", if github is actually non-determinstic we should get that fixed).  I\'m sorry, it\'s just my nature to ask a lot of questions when people show up with incorrect arguments and perplexing desires like wanting to use sourceforge voluntarily. :)  @robbak Thanks for the information," thats great! ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,52,2013-04-06 18:32:27,5.68,,1,,"b'b"" @rofl0r Gentoo checks the tarball\'s hash itself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,53,2013-04-06 18:32:27,1.02,,1,,"b""b' @gmaxwell '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,54,2013-04-06 18:32:27,9.0,,1,,"b'b"" @rofl0r Thats the timestamp.  [gmaxwell@helmholtz tmp]$ tar cf zipzip-test/ | gzip -cn 7abee1d0f56eb5e4405b2f4b15d24a94ff7b3103b0d2f4ba63c11e68305e9df5  zip-[gmaxwell@helmholtz tmp]$ tar cf zipzip-test/ | gzip -cn 7abee1d0f56eb5e4405b2f4b15d24a94ff7b3103b0d2f4ba63c11e68305e9df5  zipGithub tarballs don\'t store it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,55,2013-04-06 18:32:27,4.62,,1,,"b""b' @gmaxwell doesnt output to stdout"," so your pipe does effectively nothing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,56,2013-04-06 18:32:27,4.02,,1,,"b'b"" Sorry"," wasting my time on things you could trivially check yourself isn\'t conducive to the greatest care. [gmaxwell@helmholtz tmp]$ tar cf zip-test/ | gzip -cn 6b75d74dc0e312b466f305180d3b5fb930ac70f7f28775ae8498ac5a20f679b4  zip-[gmaxwell@helmholtz tmp]$ tar cf zip-test/ | gzip -cn 6b75d74dc0e312b466f305180d3b5fb930ac70f7f28775ae8498ac5a20f679b4  zip-[gmaxwell@helmholtz tmp]$ tar cf zip-test/ | gzip -cn 6b75d74dc0e312b466f305180d3b5fb930ac70f7f28775ae8498ac5a20f679b4  zip-""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,57,2013-04-06 18:32:27,3.07,,1,,"b""b' and what makes you think github uses your way and not mine ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,58,2013-04-06 18:32:27,3.52,1,,,"b""b' btw", i get the hash with your command. so different machines give different hashes for some reasons. so depending on the mood of the github servers the hash will differ. why not just use a proper, manually generated tarball instead of the laughable download service that github shoehorned on top of their git repos (so they could stop the download service they offered previously," but then stopped due to cost reasons) ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,59,2013-04-06 18:32:27,2.82,,1,,"b""b' Thankfully"," git archive already provides a deterministic tar creation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,60,2013-04-06 18:32:27,0.32,1,,,"b'b"" Of course you get a different hash", the data you\'re _tarring_ up is different, unless you happen to have the same UID as me, same file timestamps, etc. I checked the github files," I checked them before I even responded to this stupid point.  I\'m getting a little tired of people stating as fact things they haven\'t even tried to check. (Or ignoring Luke\'s gentoo point)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,61,2013-04-06 18:32:27,0.93,1,,,"b""b' did you even see this (quote of robbak):  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,62,2013-04-06 18:32:27,2.9,,,1,"b'b"" @rofl0r I did", did you? It had nothing to do with github file determinism, that was actually changing to a different commit id. (Interestingly: the one it changed to is completely invisible to me: nothing in the reflog on my checkouts with that hash. Nothing in the github UI, etc.) Edit: I\'ve decoded what appears to have happened in robbak\'s case: Originally he created the port using the ID of the ultimate commit on that version," but we subsequently added the digitally signed tag as part of the release process. The path in the tarball uses the ID of the tag (94933c3) instead of the commit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,63,2013-04-06 18:32:27,60.55,,,1,"b""b' Closing before my inbox overflows. Consensus seems to be github tarballs are Just Fine For Now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,closed,2013-06-27 14:40:32,1208.08,14,39,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,64,2013-04-06 18:32:27,25.63,,1,,"b""b' @gavinandresen apparently you cant read"," that is only the opinion of @gmaxwell and nobody else here'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,65,2013-04-06 18:32:27,2.97,,1,,"b""b' @gavinandresen ulrich drepper would be proud of you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,66,2013-04-06 18:32:27,0.7,,,1,"b""b' github tarballs are fine for now", as stated. As @luke-jr indicated," this may change once automake support is complete and merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,67,2013-04-06 18:32:27,20.55,,1,,"b""b' GitHub tarballs are not fine", Github generated distfiles change frequently, for no good reason," and any build system relying on them is going to need constant fiddling. Please upload to SF stable bitcoin-0.8.3. Thanks in advance'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,68,2013-04-06 18:32:27,101.97,,,1,"b'b"" Github tarballs are not fine. Please start posting source tarballs with the change to automake", sounds great to me. (yay autotools!)You\'re going to start using pkg-config too," I hope?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,69,2013-04-06 18:32:27,22.65,,,1,"b'b"" @jeffmendoza And what problems do the github tarballs cause for you? (I\'m collecting problems to report to github: So far I have none and regardless of what we do in the future it would be nice if the functionality worked right for people.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,70,2013-04-06 18:32:27,22.3,,1,,"b""b' You can see here for some details. It will work"," but a real release tarball would be much preferred.url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,71,2013-04-06 18:32:27,59.58,1,,,"b""b' @jeffmendoza is unability to download from HTTPS nothing ? this causes a huge problem for me and other busybox users.edit: oops"," that should have been @gmaxwell '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,72,2013-04-06 18:32:27,279.88,1,,,"b""b' @gmaxwell Not quite. We always retrieved the tag"," v8.0.2. Github (or maybe a bitcoin dev) changed how it determined what that tag meant. (Probably github there was a rash of github-sourced ports that needed changing at around that time.)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,73,2013-04-06 18:32:27,23.62,1,,,"b'b\' @robbak Can you explain to me how a gentoo ebuild from two years ago: url  Has correct SHA256s for files I can download for github today? E.g. ""DIST bitcoin-v0.5.1.tgz 1007787 RMD160 107944a SHA1 2718930 SHA256 e33279066298e0a29e1dcca566d0a0bbcd89ef6e02d43bdbbeaf046f5faf66fe"" $ wget url $ sha256sum v0.5.1e33279066298e0a29e1dcca566d0a0bbcd89ef6e02d43bdbbeaf046f5faf66fe v0.5.1$ tar -ztf v0.5.1bitcoin-bitcoin-5623ee7/bitcoin-bitcoin-5623ee7/.gitignorebitcoin-bitcoin-5623ee7/COPYING[...] I note that 5623ee7 is the ID of the signed tag", just like the current one that confounded you. So there can be no doubt that the same behavior was in place two years ago. Maybe you were being MITMed? :p\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,74,2013-04-06 18:32:27,13.08,,1,,"b""b' Or maybe a tag was just overwritten?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,75,2013-04-06 18:32:27,816.65,,,1,"b'b"" I\'m reopening this issue. I think this discussion got derailed into a question of why the OP asked for these tarballs (and I agree with gmaxwell about that mostly: we need to find out if and why github\'s tarballs aren\'t deterministic", and we need to encourage building from git ). Nonetheless, the request for source releases is very reasonable IMHO," and very simple to accomplish.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,reopened,2013-06-29 13:50:10,1389.63,17,44,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,76,2013-04-06 18:32:27,1075.72,,1,,"b""b' This should be easier now that the source tarballs produced by the gitian builds are deterministic.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,77,2013-04-06 18:32:27,130.63,,1,,"b""b' @laanjw could you please clarify for non-insiders where to get these tarballs?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,78,2013-04-06 18:32:27,7.6,,1,,"b'b"" They are not available as there has been no 0.9 release yet. I\'m just saying that releasing deterministic source tarballs (that everyone with gitian builder can check) became possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,closed,2015-05-18 08:44:56,1134.77,17,47,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,79,2013-04-06 18:32:27,1362.22,,1,,"b""b' Tarballs can be found along with the rest of the downloads"," e.g. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,80,2013-04-06 18:32:27,82.1,,1,,"b""b' the /bin/ in the URL suggests its a binary (compiled). this issue is about _source_ tarballs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,81,2013-04-06 18:32:27,87.78,1,,,"b'b"" Now that\'s a dumb comment. is just the internal site structure used for uploading releases and has no relevance here. The file I linked to is a source tarball. Please in the future try to do the minimum amount of research before you comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2476,closed,-,-,-,18,49,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,opened,2013-04-22 12:23:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,title,2013-04-22 12:23:18,00:00,,1,,"b'b\' Bitcoin-Qt suddenly stopped with ""assertion failed""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,body,2013-04-22 12:23:18,00:00,,1,,b'b\' Bitcoin version 0.8.1-betaQt version 4.8.3 Screenshot: url  Background: I have used this Bitcoin client for a while. The configuration was initialized under Windows XP," and later on transferred to a Windows 7 machine. It has worked for several months swithout any notable problems -with the only exception of it sometimes not including a ""mined"" transaction into my free balance immediately as it matures (instead it needs to be restarted). Today"," about 4 hours after receiving a ""mined"" transaction", it then crashed telling:After restarting, it appears to have recovered fully.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,1,2013-04-22 12:23:18,635.7,,1,,"b""b' Are you mining? EDIT: I mean solo-mining (or p2pool)"," against Bitcoin-qt?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,2,2013-04-22 12:23:18,617.72,,1,,b'b\' Nope, not against my local bitcoin-qt -a different machine is mining against a pool," local client just receives the resulting bitcoins (they appear as ""mined"" transactions since Eligius does it that way).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,3,2013-04-22 12:23:18,25.33,,1,,"b""b' For the record: @gmaxwell noticed yesterday that this can only be cause by the retargetting code. That should narrow down the problem a lot.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,4,2013-04-22 12:23:18,329.97,,1,,b'b\' Would retargeting code only run on an instance of Bitcoin intended for mining? In that case, I have to clarify: I have in the past, used this Bitcoin instance for mining too, and now that I checked, as a historic leftover,"rpcuser"" and ""rpcpassword"" are still set in "".\''
bitcoin	2547	closed	5	sipa	2013-04-22 12:23:18	1.43	+1			b'b"" Sorry for the confusion. It is unrelated to mining I asked that question before it was discovered that this assertion failure is caused by the retargetting code. I just added it here so we don\'t forget.""'
bitcoin	2547	closed	6	cpunks	2013-04-22 12:23:18	1.22		+1		b'b\' However, to further clarify, I am not starting it with a ""-server"" command line option, so anything that results from that code path, should be excluded.\''
bitcoin	2547	closed	7	cpunks	2013-04-22 12:23:18	1.45			+1	b'b"" Aha, thanks. If you have any additional questions, just ask. I\'ll check back about once a day, even if the problem is not disturbing my activities in any manner.""'
bitcoin	2547	closed	8	bitcoinstarter	2013-04-22 12:23:18	1200.4			+1	b""b' @sipa any  regarding this problem? I too have this issue for more than 2 weeks now.![assertion_failed]url '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,9,2013-04-22 12:23:18,1304.13,,1,,"b""b' The part of the code which triggers your problem is (in GetNextWorkRequired()):   // Go back by what we want to be 14 days worth of blocks  const CBlockIndex* pindexFirst = pindexLast;  for (int i = 0; pindexFirst && i < nInterval-1; i++)    pindexFirst = pindexFirst->pprev;  assert(pindexFirst); But this needs to be looked at by a core dev...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,10,2013-04-22 12:23:18,1243.3,,,1,"b""b' @gavinandresen  Can you please take a look the problem stated by @Diapolo above? thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,11,2013-04-22 12:23:18,873.83,,1,,"b'b\' Duplicate; hopefully fixed by the ""don\\\'t use too many file descriptors"" fix.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,closed,2013-05-07 20:17:48,474.5,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,12,2013-04-22 12:23:18,3.15,,1,,"b'b"" @gavinandresen That\'s very unlikely on Windows. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,reopened,2013-05-07 20:21:50,4.03,1,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,13,2013-04-22 12:23:18,166.2,,1,,"b'b"" @bitcoinstarter You have this problem for more than two weeks now. Does that mean that you fix it", and it re-appears, or after it happened the first time," it just doesn\'t go away?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,14,2013-04-22 12:23:18,1168.7,,1,,"b""b' @sipa @gavinandresen Im still having issues. The problem still persist and I cannot finish synchronizing because of the issue. Below is the latest screenshot of my wallet showing the error. ![still problem]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,15,2013-04-22 12:23:18,6.78,,1,,"b""b' @sipa  @gavinandresen no matter what button I choose from the error above", bitcoinhas stopped working. This is my problem since I started downloading the client for more than 2 weeks now and I keep having this problem no matter how many times I have re-download the client whether I using the install version or the zip version. same issues. ![not responding]url  btw," I using windows 7 Ultimate with 4GB RAM  (just for reference).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,16,2013-04-22 12:23:18,167.82,,1,,"b""b' Is this an error that appears immediately at startup", every time? If so, start with -reindex on the command line," once. That will rebuild the database from scratch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,17,2013-04-22 12:23:18,474.37,,1,,"b""b' @sipa Yes", that is an error after I fire up the exe. the error appears after a few minutes of initialization. btw," how do I start wit -reindex on the command line? Is there a command line version for the wallet? or are you referring to the Windows CMD prompt?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,18,2013-04-22 12:23:18,6.73,,,1,"b""b' @sipa Ok I think youre referring to the Windows CMD prompt so Im giving it a shot. Hope it works and will let you know :) ![reindex]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,19,2013-04-22 12:23:18,211.97,,1,,"b""b' Did you ever play with testnet before?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,20,2013-04-22 12:23:18,209.32,,1,,"b'b"" User hasn\'t reported back after 8 months"," likely the -reindex solved the problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,closed,2014-01-17 12:32:49,970.98,1,17,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,21,2013-04-22 12:23:18,290.97,,,1,"b""b' -reindex worked for me!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2547,closed,-,-,-,1,17,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,opened,2013-05-10 00:50:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,title,2013-05-10 00:50:59,00:00,,1,,"b""b' Mac OS X command line build instructions for QT'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,body,2013-05-10 00:50:59,00:00,,1,,"b""b' QT Creator does not run on 32 bit OS X (eg Snow Leopard). QT4 needs tobe ported.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,1,2013-05-10 00:50:59,37.4,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,2,2013-05-10 00:50:59,350.2,,,1,"b'b"" hmm... will probably install the whole qt4 package. On line 47 of readmewe write Qt Mac OS X SDK So then the user might have qt installed twice?!Could we not just tell the users to install qt through macports? And yes. It\'s true. The Qt Creator downloadable from qtis only 64bit (even when it\'s labeled as 32/64 universal).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,3,2013-05-10 00:50:59,7.32,,,1,"b'b\' My pull was derived from building bitcoin and bitcoin-qt on a newly installed Snow Leopard hackintosh in Virtualbox. I did not download the  . What worked for me was downloading Xcode 3.2 (the latest version I could find for Snow Leopard)  and ""sudo port install qt4-mac"". Perhaps the readme for Mac OS X should be split into OS X 64 bit and OS X 32 bit instructions? (It seems much easier to virtualize the 32 bit Mac OS X).![capture3]url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,4,2013-05-10 00:50:59,2.2,,1,,"b""b' @Crinklebine i recommend not to split. Because the SDK downloadable from qt-project does not work out of the box (i always had to compile qt sdk) i would also say"," remove the parts of Line 47 and change it with your information (install through port). Then we can also avoid making differences between 32 and 64 bit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,5,2013-05-10 00:50:59,2.82,,1,,"b'b"" We\'d also want to look at including the instructions for users using brew instead of macports"," if necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,6,2013-05-10 00:50:59,6.4,,1,,"b'b"" There does appear to be some brew instructions in the current readme\'. If using HomeBrew",  edit to account for library location differences. There\'s a diff in that shows what you need to change," or you can just patch by doing  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,7,2013-05-10 00:50:59,2.08,,1,,"b'b"" Those instructions are only for correcting dependancy include paths. They don\'t have anything to do with installing Qt.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,8,2013-05-10 00:50:59,14.97,,1,,"b""b' @fanquake  I see what you are saying. This should work on brew? brew install qt @jonasschnelli Your recommendation seems right as MacPorts and HomeBrew both support QT install. P.S. This is my first pull so please bare with me. :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,closed,2013-05-10 07:55:36,424.62,0,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,reopened,2013-05-10 07:55:38,0.03,0,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,9,2013-05-10 00:50:59,5.57,,,1,"b""b' @Crinklebine your pull is great (even when we bother you with details)! :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,10,2013-05-10 00:50:59,503.0,,1,,"b""b' I will close this pull request and reopen a new pull to incorporate the suggestions from @jonasschnelli  and @fanquake .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,closed,2013-05-10 16:22:56,507.3,0,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,11,2013-05-10 00:50:59,9.15,,1,,"b'b"" You don\'t need to close the pullreq. You can just push to the associated "," and it will be updated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,12,2013-05-10 00:50:59,63.9,,,1,"b'b"" @sipa Thank you for the help. I have already opened a new pull request. I\'m still learning the Git development process and will do it correctly next time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,13,2013-05-10 00:50:59,292.13,,1,,b'b\' Any help? I have set up a new 10.6.8 VM," fresh install. I installed XCode 3.2.6 and then MacPortsnext I did: sudo port installl boost db48 miniupnpc openssl qt4-mac Then I did basic  from the command line yet it errors out EVERY DAMN TIME with this: Undefined symbols:  ""MapPort()""", referenced from:  OptionsModel::setData(QModelIndex const&, QVariant const&," int)in optionsmodel.o  ""_fUseUPnP""", referenced from:  OptionsModel::setData(QModelIndex const&, QVariant const&," int)in optionsmodel.old: symbol(s) not foundcollect2: ld returned 1 exit status I have tried qmake with ""USE_UPNP=-"" and make with the same USE_UPNP=and neither seem to work. It always errors out when it gets to: / -name bitcoin  -o qrc_ PLEASE! I know this has to be something simple", I\\\'m dying here, have tried 2 different VMs, one with Ports and one with Homebrew, and I\\\'m still not able to build a darn -QT of my own!!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2636,closed,-,-,-,0,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,opened,2013-05-26 06:09:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,title,2013-05-26 06:09:08,00:00,,1,,"b""b' Bitcoin-qt v0.8.1 windows 8 -> BSOD'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,body,2013-05-26 06:09:08,00:00,,,1,"b""b' I upgraded from Win7 -Bitcoin-QT had to re-index the blocks on the first run after the upgrade.On the second upgrade I got a strange error message.Then on the third execution I had BSOD. Below is the memory dump. Please let me know if there is anything else I can help. 1: kd-                          *       Bugcheck Analysis            *                          *  ******************************************************************************* SYSTEM_SERVICE_EXCEPTION (3b)An exception happened while executing a system service routine.Arguments:Arg1: 00000000c0000005", Exception code that caused the bugcheckArg2: fffff8800198c7ff, Address of the instruction which caused the bugcheckArg3: fffff88017a368b0, Address of the context record for the exception that caused the bugcheckArg4: 0000000000000000, zero.## Debugging Details: EXCEPTION_CODE: (NTSTATUS) 0xc0000005 The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be %s. FAULTING_IP: ndis!ndisPcwCollectData+143fffff880 0198c7ff 8b4008    mov   eax,dword ptr [rax+8] ds:002b:00000072 17a372b0 fffff880 003ce1d0 fffff8a0 00000000 fffff8a0 17a37570 fffff880 17a376b0 fffff8a0 116de1a0 00000000 17a375f0 fffff880 00000000 fffff880 00002000 00000000 17a37680 fffff880 17a378b8 00000000 0a45f328 fffff880 17a377a0 fffff880 00000004 fffff880 a887fc97 fffff8a0 17a377d0 fffff803 018cdd8c fffffa80 00224013 00000000 17a37890 fffff803 0d3b6b00 00000000 00000001 00000000 17a37a20 fffff803 00000000 fffffa80 7dbed000 fffff6fb 17a37a90 00000000 00000000 00000000 00000000 00000000 1679f128 00000000 00000000 00000000 00000000 00000000 018cc1c3 8bf0    mov   esi,"eax SYMBOL_STACK_INDEX:  1 SYMBOL_NAME:  pcw!PcwpCollectNotification+c7 FOLLOWUP_NAME:  MachineOwner MODULE_NAME: pcw IMAGE_NAME: DEBUG_FLR_IMAGE_TIMESTAMP:  5010ab5c STACK_COMMAND:  .cxr 0xfffff88017a368b0 ; kb BUCKET_ID_FUNC_OFFSET:  c7 FAILURE_BUCKET_ID:  0x3B_pcw!PcwpCollectNotification BUCKET_ID:  0x3B_pcw!PcwpCollectNotification## Followup: MachineOwner'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,1,2013-05-26 06:09:08,325.12,,1,,"b'b""  seems to be the Performance Counters for Windows Driver. I think it\'s unusual that Bitcoin-Qt is able to trigge a real bluescreen. Can you please try again with 0.8.2 RC3.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,2,2013-05-26 06:09:08,575.17,,,1,"b""b' Done. Will let you know if I have BSOD again. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,3,2013-05-26 06:09:08,457.63,,,1,b'b\' Just had my second BSOD using 0.8.2 RC3.Here is the latest dump: 1: kd-                          *       Bugcheck Analysis            *                          *  ******************************************************************************* SYSTEM_SERVICE_EXCEPTION (3b)An exception happened while executing a system service routine.Arguments:Arg1: 00000000c0000005, Exception code that caused the bugcheckArg2: fffff880019747ff, Address of the instruction which caused the bugcheckArg3: fffff8801c13c8b0, Address of the context record for the exception that caused the bugcheckArg4: 0000000000000000," zero. ## Debugging Details: Page 1aec74 not present in the dump file. Type "".hh dbgerr004"" for details EXCEPTION_CODE: (NTSTATUS) 0xc0000005 The instruction at 0x%08lx referenced memory at 0x%08lx. The memory could not be %s. FAULTING_IP: ndis!ndisPcwCollectData+143fffff880 019747ff 8b4008    mov   eax",dword ptr [rax+8] ds:002b:00000ade 1c13d2b0 fffff880 00408600 fffff8a0 00000000 fffff8a0 1c13d570 fffff880 1c13d6b0 fffff8a0 07fce5b0 00000000 1c13d5f0 fffff880 00000000 fffff880 00002000 0000002e 1c13d680 fffff880 1c13d8b8 00000000 03bc7608 fffff880 1c13d7a0 fffff880 00000004 fffff880 f387fc97 fffff8a0 1c13d7d0 fffff801 018b5d8c fffffa80 00224013 00000000 1c13d890 fffff801 09727b00 fffffa80 00000001 00000000 1c13da20 fffff801 fffffffe fffffa80 0000000f fffff6fb 1c13da90 00000000 00000000 00000000 00000000 00000000 1632f128 00000000 00000000 00000000 00000000 00000000 018b41c3 8bf0    mov   esi,eax SYMBOL_STACK_INDEX:  1 SYMBOL_NAME:  pcw!PcwpCollectNotification+c7 FOLLOWUP_NAME:  MachineOwner MODULE_NAME: pcw IMAGE_NAME: DEBUG_FLR_IMAGE_TIMESTAMP:  5010ab5c STACK_COMMAND:  .cxr 0xfffff8801c13c8b0 ; kb BUCKET_ID_FUNC_OFFSET:  c7 FAILURE_BUCKET_ID:  0x3B_pcw!PcwpCollectNotification BUCKET_ID:  0x3B_pcw!PcwpCollectNotification ## Followup: MachineOwner Please let me know if there is anything else I can help. Thanks,-Oron\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,closed,2013-05-29 04:47:05,1357.95,0,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,reopened,2013-05-29 04:47:08,0.05,0,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,4,2013-05-26 06:09:08,780.48,,1,,"b""b' I am unconvinced this is really caused by Bitcoin. Perhaps something like the reindex process causes your system to overheat and cause random  issues?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,5,2013-05-26 06:09:08,1143.23,,1,,"b""b' This is not bitcoin related"," but an ndis (network) driver error. Likely you need to upgrade your driver. An occurence of the same crash (ndisPcwCollectData+0x143) from Google:  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,closed,2013-05-31 12:50:47,483.65,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2698,closed,-,-,-,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,opened,2013-05-28 02:09:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,title,2013-05-28 02:09:28,00:00,,1,,"b""b' Leveldb subtree at 1 12 0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,body,2013-05-28 02:09:28,00:00,,1,,"b'b"" Performs the following:Brings the LevelDB code base up to 1.12.0Incorporates an upstream deadlock fix for Windows condition variablesIncorporates upstream fix #178: cannot resize a level 0 compaction setLimits the rate of compaction to prevent runaway resource usage Here\'s the upstream issue regarding the deadlock:url  And the compaction issue:url  This is the commitlog of the subtree:url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,1,2013-05-28 02:09:28,728.73,,,1,"b'b"" Here\'s a decent comparison highlighting the benefits of git-subtree over submodules:url  This blog post describes my experiences with submodules:url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,2,2013-05-28 02:09:28,2.52,,,1,"b'b\' This pull request still contains a ""Remove leveldb in preparation for git-subtree""", which was already done. Can you rebase this, and only include relevant commits? Code changes look good to me otherwise.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,3,2013-05-28 02:09:28,92.83,,,1,"b'b"" Roger that", I have rewritten the branch. It will need to pass through the automated testing again," although in theory the files are still the same. But don\'t take my word for it! I rewrote public history.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,4,2013-05-28 02:09:28,18.27,,1,,"b'b"" As per sipa\'s comments", if you want individual leveldb commits to appear in the bitcoin commit log instead of a squash, that can be done. But the price is that first the entire leveldb commit log must be merged into bitcoin\'s commit log once. After that," new commits to leveldb will appear incrementally.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,5,2013-05-28 02:09:28,3.95,1,,,"b'b"" I\'d prefer to have access to the individual changes that were made to the leveldb subtree. Ideally", the leveldb changes appear as individual commits in our repository, but that may be hard (I\'m not familiar enough with git-subtree yet). An alternative is having a leveldb branch (or separate) repository under the bitcoin project," and occasionally pull changes from there through such a squashed commit as exists in this pullreq now. Other devs opinions? @gavinandresen @jgarzik @gmaxwell @laanwj?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,6,2013-05-28 02:09:28,172.63,,1,,"b""b' Updated the version of leveldb to 1.12.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,7,2013-05-28 02:09:28,907.83,1,,,"b'b"" LGTM. I didn\'t notice this pull also updated the version", my mistake. The diff is identical to what I got doing it the old fashioned way, so it seems like the upgrade is a no-brainer. To copy what I wrote before, the fix for CompactRange() would be security sensitive if we ever used that call anywhere. Given the risk of someone introducing a call to that in future," we should ensure this upgrade does take place. I don\'t care how the commits are represented one way or another. LevelDB is stable and doesn\'t change much. It hardly seems worth worrying about the optimal arrangement given that fact.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,8,2013-05-28 02:09:28,85.53,1,,,"b""b' I vote for upgrading to the latest LevelDB also"," as we seem to have quite a few strange related DB-corruption issues.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,9,2013-05-28 02:09:28,280.12,,1,,"b'b"" Has anyone done the necessary audit to be sure there aren\'t some uncontroversial bugfixes which could affect Bitcoin network behaviour?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,10,2013-05-28 02:09:28,339.83,,1,,"b'b"" The repository for Ripple and Bitcoin\'s fork of LevelDB has been moved to the Ripple organization: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,11,2013-05-28 02:09:28,7.33,,1,,"b""b' @gavinandresen @jgarzik @laanwj @gmaxwell Are you in favor of having a  repository?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,12,2013-05-28 02:09:28,2.58,1,,,"b""b' /me rather liked the in-tree attributes.  That was one of the selling points in moving to leveldb from BDB: it would be in-tree"," so no crazy version troubles due to strange linking.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,13,2013-05-28 02:09:28,5.67,,,1,b'b\' @jgarzik Yes," note that what you have now is ""in-tree."" What @sipa is asking is if you want to also have as a public repository", your fork of leveldb. @sipa I say, why not add ? There\\\'s no downside to it. You can either fork the one from ripple, or create your own empty repository and push to it like this: @sipa You should try these steps anyway. You can always throw away the branch or repository. Get some practice with git-subtree, it\\\'s great!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,14,2013-05-28 02:09:28,0.7,,,1,"b'b"" @jgarzik No one suggests changing that. This is using git-subtree", so a copy of the LevelDB source is still inside our code, but there\'s a separate repository where development of our LevelDB tree can happen (it has significant changes, including a non-upstream Windows port with some patches by us). This way, the LevelDB code can live somewhat independently, but we can easily synchronize the in-repo copy. One of the nice things about git-subtree is that it doesn\'t matter where that extra repository is maintained it\'s only identified using commit ids. In a previous patch, we \'switched\' to a tree that @vinniefalco extracted from our LevelDB history," and this commits pulls in changes that have been made there. My question is whether we wouldn\'t rather have such a LevelDB tree under .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,15,2013-05-28 02:09:28,2.05,,1,,"b""b' @vinniefalco No need to yell.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,16,2013-05-28 02:09:28,1.33,,1,,b'b\' @sipa Yeah yeah," I forgot to mark those commands as ""code"" in GitHub flavored markdown so they became section headers in large bold text. Anyway", here\\\'s a simple improvement for bringing in LevelDB that lets you trim it from the Makefile or whatever and also will speed up your build: url  At some point I will make it work without the fancy macros and put it in our fork so anyone can use it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,17,2013-05-28 02:09:28,637.85,,1,,"b'b"" To answer Luke", yes, I audited the changes and didn\'t see anything thatcould cause desynchronization or other security issues. The FD limit wasraised but we did that already, I think. On Fri, Jun 28, 2013 at 12:21 AM," Vinnie Falco notifications@:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,closed,2013-07-01 15:38:04,808.6,4,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,reopened,2013-07-01 15:38:36,0.53,4,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,18,2013-05-28 02:09:28,399.8,,1,,"b'b"" I\'ve amended the pull request to include Vaclav\'s changes from 6/12/2013:**Added  kernel name (TARGET_OS)**""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,19,2013-05-28 02:09:28,152.6,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,20,2013-05-28 02:09:28,579.58,,1,,"b'b"" Should I rebase this? It\'s been 2 months...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,21,2013-05-28 02:09:28,888.4,,1,,"b'b"" It seems like a simple merge"," not sure why it\'s not done yet. There\'s no changes in the new leveldb that could cause problems.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,22,2013-05-28 02:09:28,4.62,,,1,"b""b' FYI"," in Ripple we are trying out HyperLevelDB and it is looking pretty awesome. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,23,2013-05-28 02:09:28,144.63,1,,,"b'b"" Okay", I did a coinstate rebuild at height 248116 with this code and got a bit identical UTXO set at the end. I had a little concern about the level 0 compaction fix because it looked like under some corner case conditions (and not just making a compact call) that it could screw up and lose some modifications to the database. Even if thats true, that kind of corruption hasn\'t happened for at least my node. I do think we should just setup a  and subtree that though. It looks like reparenting it is kind of obnoxious (creates a big diff)," so when we do need to apply some leveldb patch it would better be a tree we control.  Am I missing something here?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,closed,2013-07-28 10:57:18,1158.7,5,14,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,24,2013-05-28 02:09:28,832.5,,1,,"b'b"" I think this code has had sufficient review", so I\'m merging this. I\'ve since setup a  repository," but I\'m not familiar enough with git-subtree to set up things properly. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,25,2013-05-28 02:09:28,856.73,,1,,"b""b' You have my contact info", whenever you want I can teach you On Sun, Jul 28, 2013 at 4:01 AM," Pieter Wuille notifications@:##  Follow me on Github: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,26,2013-05-28 02:09:28,414.95,,1,,"b'b\' @gmaxwell To apply a patch to leveldb all you need to do is split the subtree out of Bitcoin using ""git subtree split""", and it will become an orphaned branch in your local repo (a branch that doesn\\\'t share any history with bitcoin). Then you apply the level db patches to that branch. Finally," use ""git subtree pull"" or ""git subtree merge"" (preferably with ff-only) on your local orphaned leveldb branch to bring the changes back in. Once you have split your leveldb branch using ""git subtree split"" you can push it to your own remote leveldb repository and maintain it as a fork. Or not. Whatever you want to do. The files will still always exist as normal files in the bitcoin repo. As usual contact me if you have questions.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,27,2013-05-28 02:09:28,723.03,,1,,"b'b"" I had the same concern when I saw it", so I checked with Sanjay and he said it could only occur if you manually used CompactRange. I guess he\'d know," so I left it at that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,28,2013-05-28 02:09:28,724.03,,1,,"b""b' Note that the changes in this pull request have been superced by #2907 .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2702,closed,-,-,-,5,19,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,opened,2013-06-17 14:02:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,title,2013-06-17 14:02:46,00:00,,1,,"b""b' Pull request 2763 / Problems bitcoin over Tor'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,body,2013-06-17 14:02:46,00:00,1,,,"b""b' after that Pull Request this Problem occours",Reverting it, and all is o.k.  disconnecting node 127.0.0.1:36934ERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeaccepted connection 127.0.0.1:36935send version message: version 70001, blocks=242009, us=96.47.226.21:8333, them=0.0.0.0:0, peer=127.0.0.1:36935receive version message: version 32200, blocks=0, us=127.0.0.1:8333, them=127.0.0.1:36935, peer=127.0.0.1:36935socket recv error 104disconnecting node 127.0.0.1:36935ERROR: CTxMemPool::accept() : nonstandard transaction typeaccepted connection 127.0.0.1:36936ERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typesend version message: version 70001, blocks=242009, us=96.47.226.21:8333, them=0.0.0.0:0, peer=127.0.0.1:36936receive version message: version 32200, blocks=0, us=127.0.0.1:8333, them=127.0.0.1:36936, peer=127.0.0.1:36936socket recv error 104disconnecting node 127.0.0.1:36936ERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeAdded 2 addresses from 95.211.41.87: 334 tried, 13996 newERROR: CTxMemPool::accept() : nonstandard transaction typeaccepted connection 127.0.0.1:36937send version message: version 70001, blocks=242009, us=96.47.226.21:8333, them=0.0.0.0:0, peer=127.0.0.1:36937receive version message: version 32200, blocks=0, us=127.0.0.1:8333, them=127.0.0.1:36937, peer=127.0.0.1:36937socket recv error 104disconnecting node 127.0.0.1:36937ERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeERROR: CTxMemPool::accept() : nonstandard transaction typeaccepted connection 127.0.0.1:36939send version message: version 70001, blocks=242009, us=96.47.226.21:8333, them=0.0.0.0:0, peer=127.0.0.1:36939receive version message: version 32200, blocks=0, us=127.0.0.1:8333, them=127.0.0.1:36939," peer=127.0.0.1:36939socket recv error 104disconnecting node 127.0.0.1:36939probklesa'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,1,2013-06-17 14:02:46,26.42,,,1,"b""b' the Proxy-function is still Broken / unusable 1!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,2,2013-06-17 14:02:46,1.47,,,1,"b'b"" It looks like there is a node out there that tries to connect to your through Tor"," which doesn\'t support the extra bool flag in the version message. I don\'t think there\'s a fault on your side. Running through tor works fine for me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,3,2013-06-17 14:02:46,375.52,,1,,"b""b' since this Pullrequest it conflics with  -discover parameter . without the parametr all is ok'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,closed,2013-06-22 20:46:10,403.4,1,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,reopened,2013-06-27 10:04:27,798.28,1,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,4,2013-06-17 14:02:46,802.3,,1,,"b""b' What works okay?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,5,2013-06-17 14:02:46,7.82,1,,,"b""b' I made \\xe2\\x80\\x8b\\xe2\\x80\\x8ba mistake. it is not fixed. the error appears anyway.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,6,2013-06-17 14:02:46,134.15,1,,,"b""b' Problem statement is not clear. Bitcoin+Tor is working for many people. I think you just had a bad peer"," that happens sometimes and especially on Tor because the number of nodes is more limited there.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,closed,2014-01-17 12:30:26,145.98,3,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2773,closed,-,-,-,3,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,opened,2013-06-23 05:02:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,title,2013-06-23 05:02:16,00:00,,1,,"b""b' ChainState DB uncorrupted itself'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,body,2013-06-23 05:02:16,00:00,,1,,"b'b"" Running 0.8.2-beta on OSX 10.8.4 Opened Qt to a corrupted chainstate", and was told to rebuild. Decided to do it later, so chose abort from the popup.  Opened Qt the next day to no corruption message, and it\'s just syncing per normal. This debug snippet below is from the shutdown before corruption, opening the corrupted wallet and choosing to not rebuild and finally opening the wallet and having it load successfully. Added 1 addresses from 173.197.107.3: 683 tried, 13640 newreceived getdata for: tx a535a410388497f78b4bb77b9c929242d6174b0d26f396cc10212d9dcfafb95eCTxMemPool::accept() : accepted e3406befa1868f30485c44a460586ec374186b3ce07e1c287b6afdbb44a8909f (poolsz 1451)received getdata for: tx e3406befa1868f30485c44a460586ec374186b3ce07e1c287b6afdbb44a8909freceived getdata for: tx e3406befa1868f30485c44a460586ec374186b3ce07e1c287b6afdbb44a8909fFlushed 14323 addresses to 24msAdded 1 addresses from 173.197.107.3: 683 tried, 13640 newreceived getdata for: tx 8a7b68238126e3a167f8d4369bc1b5c832147e6b3aa5a291b2af462f2a4b51ffdumpaddr thread stopmsghand thread interruptopencon thread interruptnet thread interruptaddcon thread interruptFlush(false)DBFlush(false) ended     0msStopNode()UPNP_DeletePortMapping() returned : 0upnp thread interruptFlushed 14322 addresses to 25msCommitting 775 changed transactions to coin database...Flush(true) refcount=0 checkpoint detach closedDBFlush(true) ended      67ms Bitcoin version v0.8.2-beta (2013-05-25 08:48:25 -0700)Using OpenSSL version OpenSSL 1.0.1c 10 May 2012Startup time: 2013-06-22 15:18:30Default data directory / Using data directory / Using at most 125 connections (2560 file descriptors available)Using 8 threads for script verificationinit message: Verifying wallet... LogDir=/  ErrorFile=/ Bound to [::]:8333Bound to 0.0.0.0:8333init message: Loading block index...Opening LevelDB in / Opened LevelDB successfullyOpening LevelDB in / Opened LevelDB successfullyLoadBlockIndexDB(): last block file = 67LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=175, size=28716039, heights=242380...242554, time=2013-06-20...2013-06-21)LoadBlockIndexDB(): transaction index disabledLoadBlockIndexDB(): hashBestChain=00000000000000241476e0d024a206a2e8555a97f0fc0b5ab522d492b5dab34f  height=242554 date=2013-06-21 06:54:39init message: Verifying blocks...Verifying last 288 blocks at level 3LevelDB read failure: Corruption: block checksum mismatchFlush(false)DBFlush(false) ended     0msStopNode()Flushed 0 addresses to 1msCommitting 8 changed transactions to coin database...Flush(true)DBFlush(true) ended     0ms Bitcoin version v0.8.2-beta (2013-05-25 08:48:25 -0700)Using OpenSSL version OpenSSL 1.0.1c 10 May 2012Startup time: 2013-06-23 04:32:54Default data directory / Using data directory / Using at most 125 connections (2560 file descriptors available)Using 8 threads for script verificationinit message: Verifying wallet... LogDir=/  ErrorFile=/ Bound to [::]:8333Bound to 0.0.0.0:8333init message: Loading block index...Opening LevelDB in / Opened LevelDB successfullyOpening LevelDB in / Opened LevelDB successfullyLoadBlockIndexDB(): last block file = 67LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=175, size=28716039, heights=242380...242554," time=2013-06-20...2013-06-21)LoadBlockIndexDB(): transaction index disabledLoadBlockIndexDB(): hashBestChain=00000000000000241476e0d024a206a2e8555a97f0fc0b5ab522d492b5dab34f  height=242554 date=2013-06-21 06:54:39init message: Verifying blocks...Verifying last 288 blocks at level 3No coin database inconsistencies in last 150 blocks (53329 transactions) block index     17768msinit message: Loading wallet...nFileVersion = 80202 wallet       1171msinit message: Loading addresses...Loaded 0 addresses from 1ms() = 242556nBestHeight = 242554() = 100() = 19() = 24dnsseed thread startupnp thread startLoading addresses from DNS seeds (could take a while)net thread startaddcon thread startopencon thread startmsghand thread startdumpaddr thread startFlushed 0 addresses to 1msinit message: Done loading""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,closed,2013-06-24 15:14:26,612.17,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,reopened,2013-06-24 15:14:29,0.05,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,closed,2013-06-25 15:45:15,30.77,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,reopened,2013-06-25 15:45:16,0.02,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,1,2013-06-23 05:02:16,178.62,,1,,"b'b"" Same issue again. This time I\'ve opened Qt to see the corruption message", and chosen to not rebuild. I then opened Qt again to be certain that there was corruption, and again chosen to not rebuild.  I\'ve then shutdown my computer, and when I opened Qt the next day with the intent of starting the rebuild, I\'ve seen no corruption message and Qt opens and functions normally. Debug excerpt below. CTxMemPool::accept() : accepted 0ff7e52e6db85029f84e1deb0555fd7a55ef89517106ff6cc7b20ebb826f8e01 (poolsz 1365)received getdata for: tx 0ff7e52e6db85029f84e1deb0555fd7a55ef89517106ff6cc7b20ebb826f8e01Added 1 addresses from 108.28.174.70: 144 tried, 14212 newCTxMemPool::accept() : accepted a5d26c75f362f242eb8c69dc1de1a23dce06391705f8a32dde6c9a9ded20f02c (poolsz 1366)CTxMemPool::accept() : accepted 7637ee26947110612af59fb3eacc7197fcb3354d6176f94e6f7bf824905da36f (poolsz 1367)msghand thread interruptopencon thread interruptdumpaddr thread stopaddcon thread interruptnet thread interruptFlush(false)DBFlush(false) ended     0msStopNode()UPNP_DeletePortMapping() returned : 0upnp thread interruptFlushed 14356 addresses to 25msCommitting 487 changed transactions to coin database...Flush(true) refcount=0 checkpoint detach closedDBFlush(true) ended      87ms Bitcoin version v0.8.3-beta (2013-06-25 10:27:24 -0400)Using OpenSSL version OpenSSL 1.0.1c 10 May 2012Startup time: 2013-07-15 09:10:22Default data directory / Using data directory / Using at most 125 connections (2560 file descriptors available)Using 8 threads for script verificationinit message: Verifying wallet... LogDir=/  ErrorFile=/ Bound to [::]:8333Bound to 0.0.0.0:8333init message: Loading block index...Opening LevelDB in / Opened LevelDB successfullyOpening LevelDB in / Opened LevelDB successfullyLoadBlockIndexDB(): last block file = 70LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=494, size=61594836, heights=246066...246559, time=2013-07-11...2013-07-14)LoadBlockIndexDB(): transaction index disabledLoadBlockIndexDB(): hashBestChain=00000000000000341ec038963b45848695b667222c4beccaf6b6a930bb2c2335  height=246559 date=2013-07-14 17:43:56init message: Verifying blocks...Verifying last 288 blocks at level 3LevelDB read failure: Corruption: block checksum mismatchFlush(false)DBFlush(false) ended     0msStopNode()Flushed 0 addresses to 1msCommitting 5518 changed transactions to coin database...Flush(true)DBFlush(true) ended     0ms Bitcoin version v0.8.3-beta (2013-06-25 10:27:24 -0400)Using OpenSSL version OpenSSL 1.0.1c 10 May 2012Startup time: 2013-07-15 09:27:36Default data directory / Using data directory / Using at most 125 connections (2560 file descriptors available)Using 8 threads for script verificationinit message: Verifying wallet... LogDir=/  ErrorFile=/ Bound to [::]:8333Bound to 0.0.0.0:8333init message: Loading block index...Opening LevelDB in / Opened LevelDB successfullyOpening LevelDB in / Opened LevelDB successfullyLoadBlockIndexDB(): last block file = 70LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=494, size=61594836, heights=246066...246559, time=2013-07-11...2013-07-14)LoadBlockIndexDB(): transaction index disabledLoadBlockIndexDB(): hashBestChain=00000000000000341ec038963b45848695b667222c4beccaf6b6a930bb2c2335  height=246559 date=2013-07-14 17:43:56init message: Verifying blocks...Verifying last 288 blocks at level 3LevelDB read failure: Corruption: block checksum mismatchFlush(false)DBFlush(false) ended     0msStopNode()Flushed 0 addresses to 0msCommitting 5518 changed transactions to coin database...Flush(true)DBFlush(true) ended     0ms Bitcoin version v0.8.3-beta (2013-06-25 10:27:24 -0400)Using OpenSSL version OpenSSL 1.0.1c 10 May 2012Startup time: 2013-07-16 07:36:40Default data directory / Using data directory / Using at most 125 connections (2560 file descriptors available)Using 8 threads for script verificationinit message: Verifying wallet... LogDir=/  ErrorFile=/ Bound to [::]:8333Bound to 0.0.0.0:8333init message: Loading block index...Opening LevelDB in / Opened LevelDB successfullyOpening LevelDB in / Opened LevelDB successfullyLoadBlockIndexDB(): last block file = 70LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=494, size=61594836, heights=246066...246559, time=2013-07-11...2013-07-14)LoadBlockIndexDB(): transaction index disabledLoadBlockIndexDB(): hashBestChain=00000000000000341ec038963b45848695b667222c4beccaf6b6a930bb2c2335  height=246559 date=2013-07-14 17:43:56init message: Verifying blocks...Verifying last 288 blocks at level 3No coin database inconsistencies in last 255 blocks (53474 transactions) block index     16640msinit message: Loading wallet...nFileVersion = 80300 wallet       1251msinit message: Loading addresses...Loaded 0 addresses from 1ms() = 246561nBestHeight = 246559() = 100() = 25() = 29dnsseed thread startupnp thread startnet thread startaddcon thread startLoading addresses from DNS seeds (could take a while)opencon thread startmsghand thread startdumpaddr thread startinit message: Done loadingrefreshWalletAdded 28 addresses from 178.18.90.41: 0 tried," 28 new""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,2,2013-06-23 05:02:16,391.25,1,,,"b'b"" Very strange"," this is an error coming from inside leveldb. Could this be some kind of transient  corruption issue? I suppose it\'s related to the other MacOSX leveldb corruption issues""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,3,2013-06-23 05:02:16,862.9,,1,,"b""b' Related discussion url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,4,2013-06-23 05:02:16,68.93,,1,,"b""b' Can you guys with the issue please run this on a terminal and paste the output here?  diskutil list Please describe which disk and partition that the db / bitcoin-qt supporting files is on as well trying to track down a bigger picture issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,5,2013-06-23 05:02:16,16.22,,1,,"b'b"" / #:         TYPE NAME        SIZE   IDENTIFIER 0:  GUID_partition_scheme        *120.0 GB disk0 1:        EFI         209.7 MB disk0s1 2:      Apple_HFS Lion SSD      119.7 GB disk0s2/ #:         TYPE NAME        SIZE   IDENTIFIER 0:  GUID_partition_scheme        *1.0 TB   disk1 1:        EFI         209.7 MB disk1s1 2:      Apple_HFS SpinTB      999.9 GB disk1s2 I\'ve had corruption happen running on both of these (the SSD and the non-SSD). url has a couple of corrupt chainstate dbs.(or will soon"," second upload is still happening).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,6,2013-06-23 05:02:16,3.9,,,1,"b""b' Thanks checking it out now! Can you confirm that both corruptions occurred on disks using HFS??? Any if possible can you confirm if these are HFS with case sensitive settings enabled?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,7,2013-06-23 05:02:16,7.6,,,1,"b'b"" I don\'t have the skills to fix this but I can recreate the problem.1) Go to system preferences and click on . Set the date to 2012. Close System preferences and hit save. Open Bitcoin-qt and get the corrupted database message. Click abort.2) Set system preferences and click set date and time automatically. Open Bitcoin-qt and the database is fine.Can you use an atomic clock API and rely on that instead of the system clock to prevent leveldb from becoming corrupted? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,8,2013-06-23 05:02:16,77.75,,1,,"b'b\' @jordan314 that\\\'s a different issue (""CheckBlock() : block timestamp too far in the future"") not related to corruption", see #2007\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,9,2013-06-23 05:02:16,461.05,,1,,"b'b"" I believe I have a fix.  I\'ve submitted to the LevelDB devs for review:  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,10,2013-06-23 05:02:16,1257.97,,1,,"b""b' Closing"," this is the well-known MacOSX corruption issue and should be fixed in 0.8.6 and master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,closed,2014-01-17 12:28:27,1243.18,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,11,2013-06-23 05:02:16,1418.25,1,,,"b'b"" I\'m having a sort of error like this", my node on a VPS server crashes pretty often because of this error. I\'ve made a script that checks if the node is running every minute," but it\'s kinda annoying. I\'m running Bitcoin core v0.10.1 on Ubuntu 12.04_x64 file: 3c26bfff664f03a939468cb0  height=298522  log2_work=78.316982  tx=37876897  date=2014-05-01 01:13:17 progress=0.260683  cache=131322015-06-13 12:00:20 opencon thread interrupt2015-06-13 12:00:20 dumpaddr thread stop2015-06-13 12:00:20 addcon thread interrupt2015-06-13 12:00:20 net thread interrupt2015-06-13 12:00:26 UpdateTip: new best=0000000000000000088c21d8a6f9bae5f5009ca14525c21884a83679b9c12b18  height=298523  log2_work=78.317113  tx=37877528  date=2014-05-01 01:29:17 progress=0.260703  cache=142822015-06-13 12:00:26 msghand thread interrupt2015-06-13 12:00:26 Shutdown: In progress...2015-06-13 12:00:26 RPCAcceptHandler: Error: Operation canceled2015-06-13 12:00:26 StopNode()2015-06-13 12:00:28 Shutdown: done2015-06-13 12:01:01""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2785,closed,-,-,-,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,opened,2013-07-07 13:32:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,title,2013-07-07 13:32:56,00:00,,1,,"b""b' Add wtogami to gitian download scripts.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,body,2013-07-07 13:32:56,00:00,,,1,"b""b' I was involved in Gitian verification of 0.8.2 and 0.8.3.  I frequently do gitian builds for Litecoin"," and I am thinking about designing a better procedure for getting a lot more people involved in regular gitian verification.  Meanwhile here is my key to be able to participate in the existing release procedure. url I ported Gitian to Fedora and it has been working perfectly. url My GPG key is signed by my old GPG key which is fairly well connected in the FOSS world.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,1,2013-07-07 13:32:56,14.27,,1,,"b'b\' Verified key AEC1884398647C47413C1C3FB1179EB7347DC10D with freenode NickServ user ""Warren"" (hostmask ) registered 2002-12-13.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,2,2013-07-07 13:32:56,8.45,,1,,"b""b' url url ~-gpg-transition-2013url url ~-gpg-transition-2013 If folks want to call to verify me", ping me on IRC first," then get my phone number from .  I am willing to provide GPG signed and encrypted government issued photo ID to other trusted Bitcoin devs upon request. url My old GPG key.url My new GPG key.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,closed,2013-07-07 13:55:39,22.72,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,reopened,2013-07-07 13:55:43,0.07,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,3,2013-07-07 13:32:56,1381.48,,,1,"b""b' Looks good to me. I remember Warren from the Fedora-as-a-repo days.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,4,2013-07-07 13:32:56,47.72,,1,,"b'b"" ACK Warren\'s convinced me of his identity nearly to the point where I\'d go ahead and sign his key.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,5,2013-07-07 13:32:56,67.85,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,closed,2013-07-08 21:51:40,475.95,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2816,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,opened,2013-07-12 21:20:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,title,2013-07-12 21:20:47,00:00,,1,,"b""b' Add forcerescan'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,body,2013-07-12 21:20:47,00:00,,1,,"b""b' I have found this usefull when I have to import keys with pywallet for example.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,1,2013-07-12 21:20:47,63.58,,1,,"b""b' Hm. Does pywallet not correctly handle the height records?  If its adding a key to a wallet it should zero it out.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,2,2013-07-12 21:20:47,1.55,,1,,"b'b"" I suppose it does not", but even then there shouldn\'t ever be a need to rescan except when loading a wallet," so this should be done via the command-line (-reindex) instead of via RPC? Or is there a reason why an RPC is preferrable?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,closed,2013-07-12 22:25:55,65.13,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,reopened,2013-07-12 22:25:57,0.03,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,3,2013-07-12 21:20:47,433.93,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,4,2013-07-12 21:20:47,69.25,1,,,"b""b' @sipa its only usefull if you forgot to run with -rescan so you dont have to stop + start again", anyone editing the wallet while bitcoind is running is stupid. id say this new RPC call would atrract alot of ppl exactly doing this," therefore its not a that good idea.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,5,2013-07-12 21:20:47,935.15,,1,,"b""b' NACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,6,2013-07-12 21:20:47,309.18,,1,,"b""b' NACK from me"," too.  Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,closed,2013-08-16 03:33:26,307.48,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2824,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,opened,2013-07-21 04:53:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,title,2013-07-21 04:53:19,00:00,,1,,"b""b' Added new config option noautofillkeypool.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,body,2013-07-21 04:53:19,00:00,1,,,"b'b"" One of the most annoying things about trying to maintain wallet backups is the fact that every time you unlock a wallet the key pool gets automatically refilled", thus making any existing backups of the wallet keys obsolete. If you call getnewaddress on a locked wallet, no problem but the moment you unlock it, your wallet backups are out of  warning is given to user. Sooner or later that backed up wallet will expire, by which time we better hope the user had the foresight, understanding, discipline, and memory to have made a new backup. As things currently stand, the user must either keep track of when the backed up keypool is exhausted and remember to make a backup before the new keys are used or must make a backup after every few transactions to be certain the backed up keypool is never exhausted. And let\'s be honest about it very few users do either of these things. They are tedious and annoying. I only do them because they\'re far less tedious or annoying than attempting to recover lost keys. The user now has the choice to disable automatic refilling of the keypool by adding the following line to : noautofillkeypool=1 This effectively disables all automatic key generation, requiring the user to manually run keypoolrefill to replenish the wallet when the key pool runs low or a new wallet is  keypoolrefill command has been conveniently exposed in the GUI as well. This ensures that all generated keys can be easily and conveniently backed up in a timely fashion, with confidence that the backup has been made properly and will never expire without warning (at least as far as keys synchronizing history and account labels are separate issues that this pull request does not address). We probably shouldn\'t be allowing users to generate new keys without prompting them to make backups (or automatically making the backups for them); certainly not in the GUI and probably not in the RPC either (at least not without requiring an override flag or an additional call). It obviously makes more sense to do backups in batch rather than after every single new transaction; after all, that\'s exactly the purpose of pregenerating a key pool in the first place.  I believe hiding this from users only does them a disservice. Anyone who is smart enough to use Bitcoin-Qt should have no problem understanding how to do this and anyone who is incapable of doing this probably shouldn\'t be managing their own bitcoin keys in the first place. EVERYONE should be making proper backups of their signing keys. Exposing a wallet backup function without also giving users control over their keypool is giving them a tool that requires two hands to use properly but tying one of their hands behind their back. This pull request simply makes the keypool feature which already exists properly usable. Having said that, with the expectation that some may disagree with my position, this new behavior is 100% opt-in  if noautofillkeypool is not set in  (or omitted), the app defaults to its old behavior thus ensuring full backward compatibility. ![alt tag]url View of Bitcoin-Qt interface with keypoolrefill feature exposed. TODO:General: Automate backups when keypool runs low by, for instance, allowing the user to add one or more autobackupwallet= lines to the config file. The destination field should support protocols like sftp as well as removable media. Will require mechanism to prompt user or return an error if connection cannot be established, removable media is not present, or specified path is not .Bitcoin-Qt: Prompt user to refill pool when key pool is empty,  user more aggressively to make backups, check key pool status before attempting operations that require new keys, add indicator to show how many keys are left in pool, add the ability to easily change the pool size from GUI," make it clear when errors are due to an empty key pool and show user proper procedure for refilling it and making a backup.Bitcoin-Qt: Icon attribution for ![alt tag]url  taken from url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,1,2013-07-21 04:53:19,591.45,,1,,"b""b' 1) Feature request seems sane.  30 second glance did not turn up any bugaboos. 2) Mild conflict with #2776 but easily resolved. 3) Waiting to see if pulltesters likes these new commits.  A bit worried that the first commit breaks git bisect?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,closed,2013-07-26 08:55:49,242.5,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,reopened,2013-08-16 04:37:09,1181.33,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,2,2013-07-21 04:53:19,839.98,,1,,"b""b' needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,3,2013-07-21 04:53:19,235.88,,,1,"b""b' Automatic sanity-testing: FAILED ", see url  for binaries and test log. This could happen for one of several reasons:1. It chanages paths in -mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in -tester)2. It  tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)4. The test suite fails on either Linux i386 or Win325. The block test-cases failed (lookup the first bNN identifier which failed in url  If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,4,2013-07-21 04:53:19,778.55,,1,,"b""b' needs rebase again'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,5,2013-07-21 04:53:19,271.47,,1,,"b'b"" I ain\'t never seen a double-negative I didn\'t disapprove of. Option should be -autofillkeypool", default should be 1," set it to 0 to turn it off. And needs rebase and a test plan.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,6,2013-07-21 04:53:19,347.03,,1,,"b'b"" I like this feature", as I\'d like to have more control over when and whether it refills the key pool," so that I know exactly when there are new keys in the wallet and I need to make a new backup. It just feels safer.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,7,2013-07-21 04:53:19,23.0,,1,,"b""b' Maybe  should just implement very basic BIP32 key generation instead :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,8,2013-07-21 04:53:19,90.0,,,1,"b'b"" That\'d be a good option too. But as long as we have a keypool option (and I don\'t think it\'s wise to completely do away with the keypool as soon as introducing deterministic wallet support) having more explicit control over it would be useful. And this code is already written...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,9,2013-07-21 04:53:19,433.15,,1,,"b""b' I wonder if it should be -generatekeys=0/1 instead"," so it covers any future cases where keys might be created.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,10,2013-07-21 04:53:19,47.67,,1,,b'b\' @CodeShark I\\\'ve rebased it: url  @luke-jr yes," it should block all the cases in which keys are added to the wallet automatically. But in the (future) case of HD wallets it could ""generate"" new keys from the seed even with this option on.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,11,2013-07-21 04:53:19,869.22,,1,,"b'b"" Closing this", even though I personally would find this a useful safety feature as long as deterministic wallets haven\'t landed," but the consensus is against.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,closed,2014-01-29 08:20:43,223.57,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2841,closed,-,-,-,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,opened,2013-07-23 00:39:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,title,2013-07-23 00:39:44,00:00,1,,,"b""b' Mitigate Timing Attacks On Basic RPC Authorization'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,body,2013-07-23 00:39:44,00:00,1,,,"b'b"" As per #2838 . Eliminates the possibility of timing attacks by changing the way the two passwords are compared. It iterates through each char in the strings", and if the two chars it is comparing aren\'t the same, then it adds 1 to nReturn and the function, once it\'s done comparing all the chars, will return false. Previously, the function would return false on the first char that didn\'t match," allowing a possible attacker to run a timing attack. See url  for reference.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,1,2013-07-23 00:39:44,12.05,,1,,"b'b"" Can you also make the short password delay into an unconditional delay on failure? Your current code timing-leaks the length", but I don\'t know if I care. You could avoid this by only comparing the input number of characters every single time," with a min() on the offset (take care to avoid a fence post error) on the actual password.  Then compare the lengths.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,closed,2013-07-23 01:00:53,21.15,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,reopened,2013-07-23 01:01:29,0.6,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,2,2013-07-23 00:39:44,12.8,1,,,"b'b"" Woops", didn\'t mean to close it.  And I was thinking along the same lines, but with something a little simpler.  If the lengths don\'t match, you can just compare the actual password with itself (to get the timing right)," but add 1 to nReturn also so it returns false.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,3,2013-07-23 00:39:44,2.22,,1,,"b""b' The only reservation I have with that is that", depending on how you write it," it is code that the optimizer is very likely to optimize out.  E.g. if it were  if(len1==len2){} else {selfcompare}  that will quite probably get optimized.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,4,2013-07-23 00:39:44,11.28,,1,,"b""b' I updated it to fix the length-leaking"," seems like the simplest way to do it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,5,2013-07-23 00:39:44,54.68,,1,,"b'b\' @grayleonard The extra loop with the ""return ++nResult == 0;"" is ... a little perplexing.  The % that sipa proposed (or the min)  should actually result in simpler looking code. Just move the length check to the end", and use the % to make sure that both only access valid indexes. Care to give it a shot?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,6,2013-07-23 00:39:44,6.67,1,,,"b'b"" There\'s no telling what compilers will do to this. If you\'re that concerned about timing attacks"," why not just do something like this pseudocode?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,7,2013-07-23 00:39:44,0.52,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,8,2013-07-23 00:39:44,2.85,,1,,"b""b' Jeff argues that we should probably just drop basic auth entirely and require digest auth"," which would solve this as a side effect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,9,2013-07-23 00:39:44,12.75,,,1,"b'b"" @theuni we\'re deep in pedantry land"," but expecting very high accuracy sleeps results in sadness. It\'s perfectly possible to leak data through a sleep like that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,10,2013-07-23 00:39:44,5.22,1,,,"b'b"" @gmaxwell fair point on pedantry", but if you\'re on a system with <50msec sleep precision, i\'d guess you\'d have bigger concerns. In this case," it\'d likely even spoil the very attack the evildoer is attempting.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,11,2013-07-23 00:39:44,2.75,,1,,"b'b"" Also -1 on convoluted schemes that the compiler might try to micro-optimize", or might impact the authentication result. Heck, even unconditionally sleeping for a random interval would be better.  Remove the \'if\' check on password size. But yes," approaching 1.0 it is reasonable just to require Digest auth.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,12,2013-07-23 00:39:44,184.12,1,,,"b'b"" @theuni From what I\'ve read it seems like there are two ways to mitigate timing attacks one can hold all responses with a constant delay", say 50ms.  The other returns faster, I\'ve seen ~10ms in this instance from tests I\'ve run, with a constant-time comparison algorithm.  Either one works. I\'m not sure how soon 1.0 is going to be available, but if we are treating this as a vulnerability instead of a bug it\'s important we get it out as soon as possible," regardless of the technique we use.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,13,2013-07-23 00:39:44,571.98,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,14,2013-07-23 00:39:44,402.5,,1,,"b""b' Superceded by #2886 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,closed,2013-08-15 22:02:07,1260.63,6,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2845,closed,-,-,-,6,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,opened,2013-07-25 23:11:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,title,2013-07-25 23:11:57,00:00,,1,,"b""b' Add support for watch-only addresses'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,body,2013-07-25 23:11:57,00:00,,1,,"b'b"" A rebased and modified version of #2121. Changes:Support P2SH addresses", so  can be used without having all keys for M-of-N multisig.Add a fRequireSpendable flag to script\'s matching routines, so watch-only addresses can be avoided. This is used in SelectCoins (CreateTransaction would fail to sign them anyway).Different storage format in database," which supports P2SH too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,1,2013-07-25 23:11:57,0.82,,1,,"b""b' Note: untested for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,2,2013-07-25 23:11:57,357.77,,,1,"b'b"" **THANK YOU SO MUCH!** @sipa you are my hero (and probably a bunch of other people\'s too)! I will pull this and test it tomorrow", and try to do a more extensive test this weekend. I\'ll report back if I find any issues. Again, you are awesome, and I think this is hugely important for bitcoin. Thank you, thank you," thank you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,3,2013-07-25 23:11:57,5.52,,,1,"b'b"" @sipa is there any chance this could make it into master for the next release? I\'m not sure if it\'s out of scope for the next release or not", just curious on timing so I can plan accordingly. I would love to see in the next release of course," but I don\'t want to derail all the other important stuff you guys are working on.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,4,2013-07-25 23:11:57,210.77,,,1,"b'b"" Thanks for giving this pull request some love", sipa! I think having both spendable and watch-only accounts in the same wallet is problematic. For instance, how do we deal with getbalance, account labels, etc...? I had delayed attempting this merge until multiwallet capability had been merged, where we could simply have a wallet be entirely watch-only or entirely spendable. I\'m glad some people are finding it useful as it is," though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,5,2013-07-25 23:11:57,74.73,,1,,"b'b"" @CodeShark The approach that this pullreq takes is that for almost everything", watch-only is considered equal to normal keys. You\'ll see it in getbalance, in listtransactions, in listunspent, ... However, these are not considered when creating a transaction. Presumably we\'ll need a getspendablebalance too," and some GUI special-casing (perhaps only shown when watch-only addresses are present at all).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,6,2013-07-25 23:11:57,1412.92,,,1,"b""b' Thanks @sipa and others who have contributed to this!  I am so insanely happy to see this functionality get added.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,7,2013-07-25 23:11:57,248.85,,1,,"b""b' I have tested this patch by importing an address with ", and  ,  ,  ," work as expected (and they agree with ). from a wallet that contains only a single watch-only address fails gracefully with:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,8,2013-07-25 23:11:57,28.25,,,1,"b""b' One interesting thing to test would be having a mixed wallet", and checking that you can spend the amount in normal keys," but not more.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,9,2013-07-25 23:11:57,10.53,,,1,"b'b"" Summarizing IRC review comments:AvailableCoins() needs an additional arg.  It now takes two optional bool args.Would be nice if \'listunspent\' indicated watch-only or notAgree that testing a mixed wallet would be useful ACK once issues are fixed""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,10,2013-07-25 23:11:57,106.63,,1,,"b'b\' I just tested sending transactions on testnet. Sending amounts higher than the balance available for spending (from non-watch-only addresses) results in a ""Signing transaction failed"" error. is the watch-only address and I have the private key for:  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,11,2013-07-25 23:11:57,328.58,,,1,"b""b' Significant changes", re-testing would be welcome :) Instead of fRequireSpendable, the IsMine family of functions now return MINE_NO," MINE_WATCH_ONLY or MINE_SPENDABLE (instead of a boolean). should show whether a coin is spendable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,12,2013-07-25 23:11:57,157.33,,1,,b'b\' Overall ACK of updated code.  Did not test," just code review.  Minor taste-based nits:RPC: \\\'true\\\' seems a better return value than \\\'null\\\'perhaps due to my b/g I prefer the ""_t"" suffix to the more verbose ""type"".  POSIX standard naming for such situations.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,13,2013-07-25 23:11:57,691.35,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,14,2013-07-25 23:11:57,88.65,,1,,"b""b' Some changes:Fixed a bug that caused rescans to sometimes be skipped.Adapt the output of validateaddress for watch-only addresses.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,15,2013-07-25 23:11:57,32.73,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,16,2013-07-25 23:11:57,1306.35,1,,,"b""b' I just tested the new changes and now re-scanning works both on testnet and mainnet for me. I can send and receive on testnet", and I get a error message when I try to send more than I have in spendable funds (according to  ) but less than I have in unspendable funds. On mainnet," the output agrees with  for the tested address.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,17,2013-07-25 23:11:57,203.67,1,,,"b'b"" @gavinandresen You\'ve voiced some objections to this on IRC", and prefer watch-only wallets over individual watch-only addresses IIRC, care to mention them here? I don\'t feel like working on this further if it is controversial, but I think it\'s extremely useful and pretty much necessary to enable managing P2SH addresses without having all keys available. To get that same functionality with watch-only wallets, this becomes dependent on multiwallet," which doesn\'t seem to be making any progress.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,18,2013-07-25 23:11:57,3.22,,,1,"b""b' IMO there is a strong user-based case for merging.  There is clear user interest.  People are building websites based on this branch"," among other things.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,19,2013-07-25 23:11:57,11.33,1,,,"b'b"" I\'d like to add that it increases decentralization", thus increasing the resilience of the Bitcoin ecosystem. Instead of having to rely on  to get information about addresses not owned by myself, I can monitor these addresses using my own node. The same goes for other Bitcoin services. I suspect a lot of people depend on the  JSON API simply because they have no other option right now. I know at least one service whose developer I spoke with using the  API because they\'re the only ones offering a way to pull data about addresses for which one doesn\'t own the private key. Every time  has problems, or gets DDOSed, my service is unable to continue because I have no way of retrieving this information in a decentralized manner. It becomes a single point of failure for many of the smaller Bitcoin-related services. I agree that separate, watch-only wallets would be preferable," but at the same time I don\'t see why it has to be an either-or issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,20,2013-07-25 23:11:57,9.63,,1,,"b'b"" It might be useful to have \'getinfo\' or another RPC return a boolean indication of watch-only addresses in the wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,21,2013-07-25 23:11:57,17.93,,,1,"b'b"" We\'d love to have this feature. It is nonsense that we have to rely on  and  while having the entire blockchain stored on our own node. Currently bitcoind doesn\'t have a friendly API for merchants and payment services providers. It is crucial to be able to handle tens of thousands of addresses for which we don\'t want to share the private keys with a certain copy of bitcoind. It would be really cool to have this merged ASAP without creating dependencies on other not yet developed features. To show how people overcomplicate this: The best would be to simply have an RPC call which queries the database for a certain address", as a one-off query. No need to add it to any wallets, manage it, etc. Just query the database for it. Make getreceivedbyaddress work with _any_ address. That\'s all we need. I really appreciate the work put into this branch," in fact we live off it for quite some time now. Would love to see this merged. Thanks for listening!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,22,2013-07-25 23:11:57,9.0,,1,,b'b\' It also seems opportune, with mentions of , to plug my related pull request,"Add unauthenticated HTTP REST interface"" (req #2844 )\''
bitcoin	2861	closed	23	kyledrake	2013-07-25 23:11:57	323.87		+1		b'b"" @sipa is the importaddress code expected to update the account balance when a transaction goes out? I just dropped a generated raw transaction onto \'s tx send with one of the unspent transactions, and it removed the unspent from  , but it didn\'t change the balance for the account that the address is associated with. I didn\'t send it through my bitcoind instance, so that may be why that\'s happening, I need to do another test and send through my local bitcoind. Just wanted to mention incase it was a bug: And the transaction that was sent: url ""'
bitcoin	2861	closed	24	sipa	2013-07-25 23:11:57	10.63		+1		b'b\' @kyledrake Accounts are not addresses, and do not have _anything_ to do with the coins available to an address. The abstraction provided by the reference client has at no point any concept of a ""balance of an address"," only ""balance of a wallet"". Addresses are associated with accounts", and coins received by those address will credit the account. For debits," you need to explicitly use ""sendfrom"". Accounts are just virtual counters", and they can even go negative. I don\\\'t see a useful way to combine them with watch-only addresses. I think in general that their use is very limited, and in most cases what people really want is multiple individual wallets.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,25,2013-07-25 23:11:57,2.07,,,1,b'b\' I\\\'ll be happy with watch-only addresses in the wallet if their meaning isclear and that meaning doesn\\\'t break people\\\'s existing code. If I understand," as implemented their meaning is ""Exactly like any otheraddress in your wallet (shown as part of total balance", shown inlisttransactions, ??shown in listunspent??)," except you cannot spend themwithout constructing a raw transaction yourself"". That breaks two assumptions people may have: 1) getbalace shows the total number of bitcoins available to spend.  Ithink that is an important assumption not to break. 2) If all your receive transactions are confirmed", sum(listtransactions) ==getbalance \\\'*\\\'  == sum(listunspent) . ##  ##  Gavin Andresen\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,26,2013-07-25 23:11:57,15.75,,1,,"b""b' They are included in listtransactions", listreceivedbyaddress, and balances. They are also included in listunspent, but marked as watch-only there. Adding a flag to balance," or a separate RPC to query only spendable / watch-only addresses is probably useful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,27,2013-07-25 23:11:57,148.58,,1,,"b'b\' More thoughts: I agree that there is consensus that SOME solution is needed. I\\\'ll (grudgingly) go along with a watch-only address breaking the ""getbalance == coins you can spend"" assumption"," as long as that is well documented. RE: flag to balance or separate RPC:  ""meh""  -if people want to keep track of watch-only balances separately"," they should give them all a ""watchonly"" label.  In fact"," I\\\'d vote that the default label for importaddress be ""watchonly"" (or ""imported"" -don\\\'t care about the name) instead of """". RE: documentation: How about: importaddress help says something like: Adds an address that can be watched as if it were in your wallet", but cannotbe used to spend. Transactions to or from watch-only addresses will appearin listtransactions and listunspent and will be counted in getbalance, butare not spendable without the private key. Watch-only addresses may bemade spendable by importing the corresponding private key usingimportprivkey.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,28,2013-07-25 23:11:57,7.82,,1,,"b""b' One more random thought: Will the typical use case be a merchant importing a bunch of addresses?  If yes", maybe this should be:  importaddresses [address1,address2,"...] &lt;label&gt; &lt;rescan&gt;'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,29,2013-07-25 23:11:57,84.02,,1,,"b'b\' ""six of one"," half-dozen of the other"" -JSON-RPC 2.0 batches work just as well", for multiple importaddress.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,30,2013-07-25 23:11:57,20.92,,1,,"b'b"" @jgarzik Do they? (considering imports rescan the blockchain..) Reminder that the original author of this pull request has abandoned it in favour of watch-only wallets. IMO", it makes a lot more sense to approach this after HD wallets are merged," as then there\'s a clear use-case that doesn\'t violate the no-address-reuse principle.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,31,2013-07-25 23:11:57,426.9,1,,,"b'b\' @luke-jr doesn\\\'t do a rescan if you pass ""false"" as the third (rescan) parameter. So the approach for batch imports of watch-only addresses would be to add all your addresses except the last one with rescan=false", and add the last one with rescan=true. Thinking about my use cases, I don\\\'t think I would have any use case for a mixed watchwallet. Ie. I wouldn\\\'t have a need for a wallet containing private keys that can spend money, _and_ a wallet containing watch-only addresses. To me, the whole point of watch-only addresses is not letting bitcoind manage private keys for added security. Either for use with a web service (which can be a -style site, or a web wallet), or a local Armory-style wallet, where an external program handles the wallet, and only uses bitcoind to maintain the blockchain and query it about relevant transactions. As Armory functions now, it uses bitcoind to maintain the blockchain," but not to query information from it. Armory scans the entire blockchain (loads the raw """" files) on startup", and to deduce the balance for the wallets maintained by Armory. If these watch-only extensions were to become available, Armory could add the relevant addresses using the function, and let bitcoind gather information on these addresses. To me this would be the first step in separating the wallet functionality from bitcoind. I agree that mixing these two address types can be confusing even though it has to be done manually so I would much rather have the ability to have either a watch-only wallet or a wallet with private keys than nothing at all, although I\\\'m not sure how much work that would be to implement. Another solution would be to add watch-only versions of the relevant affected RPC calls. Ie. using to get the balance of watch-only addresses, to list unspent transactions for watch-only addresses etc. Another option would be to include an optional [includewatchonly=false] parameter to the relevant RPC calls, as another solution to make sure we don\\\'t break existing installations. I agree with Gavin that this is an important concern.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,32,2013-07-25 23:11:57,562.65,,,1,"b'b"" FYI I have worked around the issue by calling for the addresses I am watching and looping to calculate the balance. The wiki page on raw transactions doesn\'t yet document this"," but there\'s an optional array of addresses you can add to the end: I believe this solves the balance calculation for me!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,33,2013-07-25 23:11:57,48.27,,,1,"b'b"" Another issue I\'m running into is that doesn\'t show sent transactions anymore when I send via  . I can use to see them", but I can\'t filter it on bitcoind itself using an array of addresses, so I would have scaling issues after a certain point if I used it for a site running a lot of transactions. Ideally it would be nice to see a list of transactions filtered by an array of addresses, similar to how listunspent can be used. I\'m not saying this is a problem for this commit (and you mentioned this issue above), I\'m just adding this info incase anyone was interested. I will work around this by scanning the transactions manually for now, and try to come up with a longer term solution later on. Update: Actually I won\'t be able to do a listransactions dump either," because there isn\'t really a way to see the source of the sends in the output except via the transaction id. I\'ll probably have to keep track of  on my end.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,34,2013-07-25 23:11:57,324.82,1,,,b'b\' The _only_ way to have a transaction debit an account, is by using sendfrom. I\\\'m not sure how you\\\'d expect sendrawtransaction to interact with this. Accounts are not about address balances, and any application that tries to do so will likely have a hard time working around the abstraction that the wallet provides:A wallet is a bunch of transactions and keysA wallet has a number of addresses, which are entry points into the wallet.Afterwards, the wallet is a black box that manages your coins.When sending coins," they are sent from your wallet there is no concept of a ""from"" address.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,35,2013-07-25 23:11:57,62.98,,,1,"b'b"" Just wanted to chime in to say I\'d love watch-only functionality. IMO", it\'s the best way to go for server security, and I\'d love to be able to do this without using a 3rd party service like . For me, it doesn\'t matter whether it\'s a separate watch-only wallet or integrated into the regular wallet, although I\'d agree with runeksvendsen that I can\'t think of any cases I\'d want to use them together. It would also probably keep things simpler to have them separate, but I\'m not at all against the idea of combining them," either.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,36,2013-07-25 23:11:57,712.88,,1,,"b'b"" I\'m also coming in with a +1 on this.Echoing earlier comments", for merchants this feature is an absolute must. Having the ability to listunspent for a watch only address is IMO," essential for merchants and developers of BTC applications. Currently the only way to get unspent is with  /unspent api ~ having this feature locally would obviously be a massive improvement.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,37,2013-07-25 23:11:57,622.63,,,1,"b'b"" I have been using this in testing for Coinpunk and haven\'t run into any problems yet. Would love to see it get merged to master!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,38,2013-07-25 23:11:57,140.93,,1,,"b'b"" @kyledrake You know", the P2SH support @sipa just added could work well with Coinpunk: store funds in a 2-of-2 multisig P2SH addresses (including change) and have both the server and the user\'s client-side wallet sign transactions. Because both parties need to be involved you\'d be able to implement useful features like daily spending limits, 2-factor-authentication to keep coins safe even if the user\'s computer is completely compromised, and safe instant transfers between users," while still preventing coins from being stolen if the server itself is hacked.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,39,2013-07-25 23:11:57,592.23,1,,,"b'b"" What\'s the safest (least amount of changes compared to a stable version) version containing this patch? Are there any binaries available? I tried getting them from jenkins from last auto sanity check but it returns 404.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,40,2013-07-25 23:11:57,744.93,,1,,"b""b' very quiet here.. How far is this from going into the 0.9 release ? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,41,2013-07-25 23:11:57,1253.23,,,1,"b""b' Would also like to see this merged in for an upcoming release! Let me know if I can help. I have been using this functionality extensively with Coinpunk. I have refactored the service so that it now depends on nothing but the watch only address functionality"," and have figured out how to deal with the transaction management without using the bitcoind wallet. It would be great to not require users to compile an older custom version of bitcoind to use Coinpunk. I have been testing the watch address functionality extensively over the last month and have not run into a single issue with it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,42,2013-07-25 23:11:57,975.52,,1,,"b'b"" I\'ll try merging this into master and doing some testing. Edit: though on second thought I\'d prefer a solution in which an entire wallet is made watch-only"," instead of adding watch-only keys to an existing wallet and creating two classes of IsMine. This feels error prone somehow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,43,2013-07-25 23:11:57,92.9,,1,,"b""b' A recent suggestion by gmaxwell is to make coins received through watch-only function as if they were automatically (and irreverisbly) marked locked. Not much would change in practice"," though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,44,2013-07-25 23:11:57,419.22,,,1,"b'b"" @sipa I\'m not sure what the benefits are of using this over the current implementation (which appears to work very well under testing)", but I\'ll defer to the experts. How long do you think it will take to make that change? Is it a candidate for making it into 0.9? Not trying to pushy," just need to provide information to people using Coinpunk. Thanks for the feedback!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,45,2013-07-25 23:11:57,43.15,1,,,"b'b"" @kyledrake It\'s not about implementation I expect that little would change. The reason to suggest it", is because the main controversy seems to be what the semantics of unspendable coins would be. If they behave identically to an already existing concept (lockunspent)," the semantics are clear. And I\'m working on other things first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,46,2013-07-25 23:11:57,44.93,,1,,"b""b' @laanwj I do agree that having entire wallets be watch-only or not would certainly be an easier abstraction"," but IMHO that means we need multiwallet as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,47,2013-07-25 23:11:57,15.5,,,1,"b""b' Just want to give my love to @sipa"," thanks for the feature! Hope it gets merged soon. +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,48,2013-07-25 23:11:57,712.52,,1,,b'b\' @sipa Yes," let\\\'s just go ahead with this. Even with watch-only wallets we\\\'ll need ""importaddress"" and unspendable outputs. ACK; tested and it works as expected\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,49,2013-07-25 23:11:57,130.55,,1,,"b'b"" @laanwj  +1  That\'s the bottom line ACK"," did a quick test and re-review""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,50,2013-07-25 23:11:57,285.67,,,1,"b'b"" Just to add to the testing reports: I haven\'t found a single error using importaddress and listunspent using this code so far"," and I\'ve used it quite a bit. It\'s been working great in testnet and production for me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,51,2013-07-25 23:11:57,156.78,,1,,"b'b"" @keo It seems I never replied to your comment", but what may seem as overcomplication is rather the opposite. Being able to always query information about any address\'s history, requires a rather large index to be maintained (multiple gigabytes). Using that for a simple wallet service means you become dependent on such an index, and your system will for example not be compatible with block chain pruning (not storing old parts of the block chain on disk). And most of all, it isn\'t needed for normal operation. Contrary to how many people see the system, internally it doesn\'t work with addresses at all those are just part of an authentication layer on top of transactions (implemented through scripts). For anyone just needing information about some wallet, where potentially not all keys are known," this is a much more efficient and scalable solution.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,52,2013-07-25 23:11:57,270.47,,1,,"b'b"" It doesn\'t really make sense for address-watching to add outputs to the wallet in the first place"," since the outputs aren\'t really related beyond the receive notification.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,53,2013-07-25 23:11:57,245.8,,,1,b'b\' My testing indicates that Coin Control #2343 and Watch Only operate fine independently, but the combination has issues. url Here is my branch of Bitcoin 0.8.5 where I initially tried to add watchonly to coin control by filtering out the watchonly outputs in AvailableCoins().  That succeeded in excluding the unspendable coins from the selection dialog, Coin Control appears to calculate the tx size and fee correctly, but then things go wrong after you Send. One transaction I attempted had 67 inputs and was just under 10KB qualifying for free with a sufficiently high priority.  After send," the client ended up failing with the ""Transaction too large"" error", meaning the client thought the transaction was in excess of 100KB.  Another attempt with a 2KB transaction failed with an insufficient fee as the client thought the actual size was much larger than what Coin Control believed it to be. The way Coin Control is currently structured it is uncertain if it can use watchonly\\\'s fSpendable as intended.  I also wonder if it would be useful to anything for it to be tri-state like IsMIne() instead of a boolean.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,54,2013-07-25 23:11:57,304.42,1,,,"b""b' I forgot to mention"," Coin Control + Watch Only exhibits this strange erroneously large transaction behavior even if you have zero watchonly addresses.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,55,2013-07-25 23:11:57,1326.12,1,,,"b'b\' @kyledrake Would Coinpunk be usable with a fully watch-only wallet?  It would be a lot safer and less confusing to allow watch-only addresses only if a wallet does not mix with privkey addresses.  I have to admit while testing this earlier that the user experience with the current watchonly implementation is very confusing when you have a mixed wallet.  The ""fake-encrypted"" wallet approach would allow a watch-only wallet to happen safely and easily.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,56,2013-07-25 23:11:57,477.8,,1,,"b'b"" @wtogami Coinpunk would be usable with a watch-only wallet", correct. I\'m not sure if others would like to have the private key addresses for other purposes, but for me," private key addresses are not needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,57,2013-07-25 23:11:57,1238.35,,1,,"b""b' @kyledrake Given the current conflict Watch Only will not improve until Coin Control #2343 is first merged.  CC is pretty much done except people need to step through the Test Plan in that ticket.  Could you please direct people to participate in that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,58,2013-07-25 23:11:57,1438.0,1,,,"b'b"" I fully agree that having a mixed wallet", with both spendable keys and other unspendable addresses, leads to a more complex and potentially confusing interface. However:As long as we don\'t have multiwallet, I believe that forcing an entire wallet to be spendable or not makes this less useful. This is arguable a problem on its own that needs fixing, but work around multiwallet support seems to have declined.For effectively dealing with multisig transactions where you only have some of the required keys, you inevitably need some form of watch-only (in a wallet with actual keys) to use the raw transaction API, unless you\'re implementing an entire wallet from scratchWe effectively already have non-spendable coins in wallets," through  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,59,2013-07-25 23:11:57,14.68,,1,,"b""b' @sipa I agree. IMO the complication of the current solution would be less if it was more visible to the user through the interface; for example if getinfo and such were to return two balances: a spendable and a watch-only balance.  Internally this could be implemented by making GetBalance take an IsMineType. This would also fit better into the overview page in the GUI.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,60,2013-07-25 23:11:57,13.1,,1,,"b""b' @sipa +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,61,2013-07-25 23:11:57,761.82,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,62,2013-07-25 23:11:57,1017.43,,,1,b'b\' This is working awesome for me. Thank you @sipa  and all other people here too. I want to ask," how can we delete a watched only address from being ""watched"". Because I sync my cache from ""listtransactions *""  from now and then I don\\\'t want bitcoind to keep being aware of some address. Can I remove them? \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,63,2013-07-25 23:11:57,204.83,,1,,"b""b' Anyone able to share a built windows exe? Trying to build bitcoind in windows without much Make experience is like chewing sand. :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,64,2013-07-25 23:11:57,1386.62,,,1,"b'b"" I\'d love to see this feature to be merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,65,2013-07-25 23:11:57,191.05,,,1,"b""b' @np : WHY would you love to see it merged-can you please describe exactly how you are using", or are planning on using, this feature?  Could you just run with an always-encrypted wallet instead, and if not," why not?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,66,2013-07-25 23:11:57,22.98,,1,,"b""b' **Watch Only Wallet now?**1) Import all the privkeys that you want to be watch-only.2) Encrypt the wallet with an impossibly long random generated passphrase.  Discard the passphrase.3) Use the wallet as watch-only.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,67,2013-07-25 23:11:57,8.42,,1,,"b'b"" @gavinandresen I would like to see it merged because if I want to watch an address right now I have to use a block explorer.. ie", either , or install abe, which adds big mysql db, php, apache, running abe itself," keeping it up to date... all these additional overheads wouldn\'t be nessesary if I could just add the nessesary watch only addresses to a watch only wallet as such ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,68,2013-07-25 23:11:57,276.28,,,1,b'b\' @wtogami Agreed, that\\\'s a good way of creating a watch-only wallet right now. The only feature missing then is to watch addresses that you have no private key for. This could be due to logistic reasons," ex. a ""shop"" server that wants to monitor that payments have come in", but cannot spend them. Or multisig addresses that the user has only one of the keys to," but knows the P2SH address for. I think the ""importaddress"" idea is solid. But my irk about this implementation is that it combines spendable and non-spendable balances. This is only acceptable for read-only wallets.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,69,2013-07-25 23:11:57,105.63,1,,,"b'b"" @gavinandresen: My apologies if this comes off as dramatic", but we\'re having a really hard time explaining how important this is, and I\'m kindof at a loss for how to explain how important this pull request is, having tried so hard previously and failing to get attention. I want everybody reading this to take a moment of silence to ponder the tens, perhaps hundreds of millions of dollars USD that have been stolen **because of storing private keys on the server**. Bitcoin security is in really bad shape. There\'s so much theft of Bitcoins these days, in such high amounts, that it makes bank heists look like shoplifting. This is not something the police are going to solve, we have to solve it. We have to get more serious about security, and providing safer mechanisms for dealing with Bitcoin. **That\'s what this pull request does.** What this pull request does is turn bitcoind into a listener node you don\'t need to trust anymore, and as such, this is **the most important addition to bitcoind ever.** It is critically important for hybrid wallets that we don\'t disclose the private key to the server, ever. Coinpunk completely and utterly depends on it, and if this gets rejected, it endangers a new Bitcoin wallet. In that amount of time, several new hosted wallets will go online that use server-side key management because no alternative exists for them, which will create more honeypots for hackers, which will lead to more major wallet thefts. There are at least a dozen Bitcoin startups using it in production (not just for Coinpunk, for many other things), and I don\'t want to see them forced to depend on an old unstable version of bitcoind that could lead to serious problems and possibly a blockchain fork involving a huge swath of Bitcoin users, which could cause a crash in the price of Bitcoin, or worse. It\'s been tested heavily and not a single person has reported a problem yet. I **will not** use a replacement for this that requires the private keys, because it\'s dangerous and I won\'t do it. If there is a way to not disclose private keys and have this same functionality that\'s through a different mechanism, document it in this thread and I will gladly switch to it. But anything involving private keys is a total deal breaker. All the work is done. We\'re one merge away, and Bitcoin immediately becomes a more secure, better ecosystem. That merge will give developers safer tools to work with Bitcoin, and will probably save millions of dollars from future theft. Anyone interested in using this," please +1. And please merge this pull request. Thank you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,70,2013-07-25 23:11:57,11.62,,,1,"b'b"" @kyledrake You know", this is a great example where practicality beats architectural purity. Sure, maybe watch-only probably shouldn\'t have been setup to mix watch and non-watch addresses, but if you\'re not using the functionality," so what if it\'s there? Better to get this out the door given the high real-world demand for it than let the code rot and become unmergable again as things get changed around it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,71,2013-07-25 23:11:57,57.97,1,,,b'b\' @petertodd The problem is that once you introduce certain functionality, people start relying on the interface to be in that way," and it is very difficult to change it again. One example of this is the ""account"" system. It is extremely unintuitive in various ways", does strange things in interaction with labels (and the GUI). But we\\\'re kind of stuck there. Everyone wants accounts to work in their preferred way, but doing anything to it breaks backwards compatibility in possibly dangerous ways. So -we need to get this (the RPC interface, not so much the implementation) right the first time. **IMHO** the only solution that can satisfy everyone is to get rid of wallet functionality in bitcoind (split it off, not delete it), and provide an interface for wallet software to connect to. @kyledrake and others can then use their own custom wallet without depending on us. In principle the wallet functionality is a distraction from the purpose of bitcoind which is to run a validating node for the P2P network.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,72,2013-07-25 23:11:57,31.92,,,1,"b'b"" @laanwj Yes", and we agree on that. When the wallet functionality is split off interfaces can be gradually moved to whatever they should be. But given people are using this in production and semi-production, that\'s saying it\'s got direct real-world uses and maybe the interface is actually working. Once people\'s usage strategies settle down a bit," maybe our ideas of what was a perfect RPC interface will turn out to be wrong anyway I myself can think of times where mixing funds that have full keys and funds that need additional signatures from elsewhere to be spent would be useful. (my one-time-password protected wallet idea)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,73,2013-07-25 23:11:57,5.8,,1,,"b""b' @kyledrake Aside from the problems here", the current watch-only code is broken when merged with Coin Control. The above **Watch Only Wallet now?** procedure is not ideal, but it is a way to have a watch-only wallet TODAY.  If you create such wallets offline, private keys are effectively never on the server.  This is the best, proven option you have for now. The only possible implementation of watch-only that has a chance of merging in 0.9 might be a fully watch-only mode where privkeys are disabled, there is no spending and you can importaddress.  I know some people who would be willing to write that for a little bounty," but there is no guarantee that it would be accepted into mainline.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,74,2013-07-25 23:11:57,14.22,,,1,"b'b"" @laanwj People are _already_ relying on this interface", because they desperately needed it. Rejecting this pull request doesn\'t prevent that, it causes more problems. Sometimes we can\'t control how open source software is used. The street finds its own use for things, and the street is using watch-only addresses. We should recognize that this is happening and help people solve the most important problem with Bitcoin right now: security. Getting the RPC interface right (I\'m using it right now, and I have no changes, it\'s perfect for what I\'m doing anyway), and splitting off the RPC are different goals, and I really don\'t think we should reject this pull request because of an ongoing purity debate regarding the wallet code in bitcoind. There\'s always warts in APIs, but I actually think the RPC interface in Bitcoin is pretty good. I\'ve worked with HTTP APIs for years, and I would say it\'s one of the best interfaces I\'ve ever worked with (The Facebook API was a nightmare in comparison). @gavinandresen\'s improvements to raw transaction were well done and very helpful. I agree with you that splitting off is a good thing and I support that, but how does holding back on this pull request right now prevent you from splitting it off later? Let\'s not let bitcoind fall into disrepair while having this discussion. Let\'s make it better right now, and split off the code later. This merge is so simple it could be put in the next release of Bitcoind, but the code splitting probably needs another major version, so it\'s a good partition to do it this way. Tomorrow I\'m going to be at the Subway in Allentown, PA that accepts Bitcoin, and I\'m going to demo the first-ever pure HTML QR-based POS transaction ever done, and it\'s going to be based on Coinpunk, which is based on this pull request. This is significant, because it\'s a mobile Bitcoin wallet that supports QR that **Apple can\'t ban**, which is another major problem we\'ve been having. If that\'s not a good use case of this pull request, I don\'t know what is. Please help me solve these problems. I can write the code on my side, but I can\'t merge this code in. Throw me a bone here," I\'ll make it worth your time. Thank you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,75,2013-07-25 23:11:57,15.45,,1,,"b""b' @kyledrake I think we realize how important it is.  Just 1) the code is broken right now 2) it needs a fair bit more work to be acceptable in mainline.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,76,2013-07-25 23:11:57,0.93,,,1,b'b\' @wtogami I appreciate the workaround and it\\\'s interesting, but if I understand it, it can\\\'t be dynamically changed efficiently without exposing private keys and restarting servers. A hacker with a packet sniffer would be able to read all of the incoming keys unless it was being transferred remotely. For my use case, the private key must never touch the server. I can\\\'t speak for everyone," but a ""fully watch-only mode where privkeys are disabled"" is a perfectly fine solution for my needs and I could use that. No disrespect intended for the great work on Coin Control", but IMHO, this pull request is more important than Coin Control. Lack of anonymity hasn\\\'t caused nearly as many problems as private keys on servers. The list of thefts from Bitcoin servers is long and terrifying to read: url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,77,2013-07-25 23:11:57,5.18,,1,,"b'b\' I wonder -would it be possible to simulate ""importaddress"" in an always-encrypted wallet  that is guaranteed to never by decrypted? (ie", by providing fake private key data)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,78,2013-07-25 23:11:57,14.57,,,1,"b'b"" @laanwj Can\'t speak for everyone of course", but that would also work great for me! I\'m totally indifferent as to the mechanism (as long as it doesn\'t involve a real private key). Just adding an address," and being able to optionally scan the full blockchain (so I can skip if the key is new) solves my use case. Being able to put in a fake private key with a real address wouldn\'t be an issue for me at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,closed,2013-11-29 11:20:03,728.1,12,40,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,reopened,2013-11-29 11:20:06,0.05,12,40,28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,79,2013-07-25 23:11:57,12.0,,,1,b'b\' Uh, didn\\\'t mean to do that," wrong button So essentially:Introduce a new wallet state ""read only"" (apart from unencrypted", encrypted," unlocked)  Can be switched using a ""setwalletreadonly"" RPC command  This is a one way trip!   Probably needs a safety catch to prevent people from doing this to their only copy of their wallet.  Make an automatic backup copy of the old wallet filecommand will only work in this mode. (The reason I wonder whether it\\\'s possible to do this minimally invasive using the current ""encrypted wallet"" logic is that it may require the full pubkey", not just an address, and it\\\'d not work for pay-to-P2SH or cases in which the pubkey is not known)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,80,2013-07-25 23:11:57,167.15,,1,,"b""b' Making watch-only addresses in a wallet turn the wallet watch-only entirely removes the use case of implementing true multisig through it (you need to be able to watch payments to the multisig address", even though you have only keys for some). Also," wallets can already be mixed spendable and non-spendable (through lockunspent).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,81,2013-07-25 23:11:57,1118.77,,,1,"b""b' @sipa Okay", good point, so in that case we need separate spendable and non-spendable balances per wallet either way. What about my previous idea of having GetBalance  (as well as other API entry points) take a IsMineType parameter? This would make it possible to show to the user that they have both spendable and unspendable coins in their wallet," and how much.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,82,2013-07-25 23:11:57,102.2,,,1,"b""b' @laanwj Sounds good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,83,2013-07-25 23:11:57,113.33,,1,,"b""b' Do we really need wallets that contain a mix of both multisig and non-multisig coins? Seems to me that use case would be best served by having separate wallets too?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,84,2013-07-25 23:11:57,17.0,,1,,"b""b' @luke-jr I think the best user experience for multisig coins would be indeed via a separate wallet  create-multsig-wallet -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,85,2013-07-25 23:11:57,635.2,,1,,"b""b' @gavinandresen for all the reasons mentioned above. In particular avoiding the use of  and trying out coinpunk. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,86,2013-07-25 23:11:57,156.0,,1,,b'b\' Sounds like a -readonlywallet mode is what is wanted," with just public keys and no private keys.  Is that correct?  What wallet operations is CoinPunk doing?  bitcoind really isn\\\'t designed to be a generic ""Tell me the  balance of THIS set of public keys"," please"" service-it seems like that is the functionality you really want (and isn\\\'t CoinPunk switching to libbitcoin anyway???). The problem with this pull request is the mixing keys-that-can-be-spent with keys-that-cannot-be-spent.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,87,2013-07-25 23:11:57,715.05,,1,,b'b\' I like the idea of a readonly wallet. This is a mode where you don\\\'t need to spend, don\\\'t need multisig, etc.," because you\\\'re running it on a server as a validating node that can be queried instead of . I wouldn\\\'t mix this with the GUI and personal use cases. ""Tell me the  balance of THIS set of public keys"," please"" is the exact thing bitcoind needs right now to be able to be used in production at wallets", merchants, PSPs, etc. libbitcoin is buggy, and so are the others. When you want to verify a transaction and want to make sure, you need your own bitcoind node which doesn\\\'t contain any private keys. This is is THE most important functionality that holds back hundreds of not thousands of businesses from being able to safely verify transactions. Having a safe and stable workaround for this problem is a huge cost right now.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,88,2013-07-25 23:11:57,70.93,1,,,"b""b' ^ I agree 100%. Having to setup and run your own block explorer to find unspent outputs for addresses that are not in your wallet is very bad. By being able to query  balance and find unspent  of addresses that you do not directly own... you can then build more secure apps around bitcoin handling spending and such in the browser.. only using bitcoind to push the transactions. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,89,2013-07-25 23:11:57,6.32,,1,,"b""b' I also prefer the idea of a read-only wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,90,2013-07-25 23:11:57,270.53,,1,,"b'b"" @gavinandresen  ",  ,  ,  . That\'s it. I have never said I will be using libbitcoin, and haven\'t even considered the possibility until you mentioned. Upon quick inspection, it appears to be also not designed for my use (I\'m not writing an anarchist-themed C++ application), but trying to implement it via FFI might be an interesting experiment. If I did consider doing that, I would still like to design Coinpunk to be usable by both clients. There\'s other issues with using an alternative implementation," such as stability and blockchain fork concerns and the like.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,91,2013-07-25 23:11:57,44.03,,1,,"b""b' @kyledrake It is not necessary for you use libbitcoin directly"," you could use url  which is built on top of libbitcoin. However I think these projects are not yet mature enough and Coinpunk should aim at using both in the future. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,92,2013-07-25 23:11:57,89.17,,,1,"b'b"" @np I conveniently happen to be in the same room as the author of libbitcoin right now", and apparently there is a 0MQ interface for working with it I will investigate. RE this pull request, it would be great to be able to continue supporting the importaddress approach as well. I realize that bitcoind isn\'t perfect, but nothing will be for a long time," and it\'s a known quantity that I\'m comfortable using until a better solution comes out in the future.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,93,2013-07-25 23:11:57,103.2,,1,,b'b\' I am working on a project that requires watch only addresses, I previously got this code working perfectly using the importaddress rpc command a few months ago," but seems to fail every way I try now. I documented my steps which was really just ""git checkout -b "" before compiling. No matter what I try now", I get method not found. Desperately need this command to build a POS system for restaurants which are waiting on me. Cannot have private key on the terminal. Help? EDIT: Nevermind, I think I got it. Now see importaddress in the src files. Just want to say thanks for this feature. There will soon be several restaurants accepting bitcoin without any worry that the private key can be stolen by . To anyone needing this amazing feature," use:""git clone -b watchonly url ""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,94,2013-07-25 23:11:57,878.48,,1,,"b""b' See #3383 for a rebased version'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,closed,2013-12-10 14:12:11,172.08,13,51,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,95,2013-07-25 23:11:57,295.22,,1,,"b'b"" In case anyone is still looking for this functionality", here is our project that creates a  API for any address:[url |  [insight Homepage]url The project also includes a blockexplorer, but that is 100% on client-side JavaScript.The index is stored on leveldb, and the data is pulled from bitcoind\'s .dat files or RPC getrawtransaction calls, and updated via p2p. Still under heavy development," but it is working. Patches are welcomed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2861,closed,-,-,-,13,52,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,opened,2013-08-10 13:36:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,title,2013-08-10 13:36:33,00:00,,1,,"b""b' do not call BuildMerkleTree() unnecessarily twice'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,body,2013-08-10 13:36:33,00:00,,1,,"b""b' (); is called twice for no reason. Just a few lines above its called the first time.We dont need to check for empty container here before the () call", because  can not be empty at this point," because () has been checked before.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,closed,2013-08-10 13:37:17,0.73,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,reopened,2013-08-10 13:42:56,5.65,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,1,2013-08-10 13:36:33,44.07,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,2,2013-08-10 13:36:33,1089.22,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,closed,2013-08-12 11:11:00,1288.07,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2890,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,opened,2013-09-04 09:47:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,title,2013-09-04 09:47:47,00:00,,1,,"b""b' Make it possible to determine fee before sending transaction (RPC)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,body,2013-09-04 09:47:47,00:00,,1,,"b'b\' Due to ""url "" there are two types of fees.Logic for the mandatory comission is not so clear. Also it\\\'s difficult to check via existing api will whether the mandatory fee be charged or not. So the command to check will whether the mandatory fee be charged or not will be useful. Edit: clarified issue title\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,1,2013-09-04 09:47:47,528.87,,1,,"b""b' might be fixed (half fixed) with #2987.@Mezrin do you talk about RPC (API)? I could also try give some info the RPC response whether the fee was voluntary or not'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,2,2013-09-04 09:47:47,22.87,,,1,"b""b' Seems", that your commit generally makes what I meant when creating this issue. And yes I meant RPC API. If you are able to enhance RPC it will be amazing )  I do not use C++ much," creating new commit will be hard for me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,3,2013-09-04 09:47:47,72.82,,1,,"b""b' The rpc api could of cours be enhanced with that.But now the (and others) will normally response with a transaction-id.I think we break compatibility if we would give  information back. Any ideas?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,4,2013-09-04 09:47:47,258.98,,1,,"b""b' This is solved by #1645 aka #570 aka #557'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,closed,2014-04-23 15:50:53,363.1,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,5,2013-09-04 09:47:47,929.87,,,1,"b'b"" It is not possible to to know in advance whether the \'mandatory fee\' will be charged as this depends on the size of the transaction. The size of the transaction", in turn, depends on the output of the coin selection algorithm. This may have changed by the time the \'real\' send happens (either due to non-determinism or concurrent threads). It would be nice if the raw transactions API provided access to the coin selection and fee determination logic of the wallet. This would make it possible to first construct a transaction," and send it or not dependent on the fee. Right now using the raw transactions API means having to do coin selection yourself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,reopened,2014-04-23 16:01:22,10.48,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,6,2013-09-04 09:47:47,141.45,,1,,"b""b' See also #3794'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,7,2013-09-04 09:47:47,1342.5,,1,,"b""b' This has become possible with  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,closed,2016-02-09 16:45:08,43.77,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,2971,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,opened,2013-09-23 21:55:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,title,2013-09-23 21:55:31,00:00,,1,,"b""b' Make signatures with non-canonical data pushes non-standard.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,body,2013-09-23 21:55:31,00:00,,1,,"b""b' This fixes another malleability problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,1,2013-09-23 21:55:31,20.22,,1,,"b""b' This would constitute a soft-fork"," as IsPushOnly is called by P2SH VerifyScript. Closing until I find a workaround.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,closed,2013-09-23 22:15:44,20.22,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,reopened,2013-09-23 22:48:38,32.9,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,2,2013-09-23 21:55:31,46.6,,1,,"b'b\' Why not make a generic ""IsCanonicalPushDatas"" that just checks arbitrary scripts for pushdata canonicality and apply it to both scriptPubKey and scriptSig?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,3,2013-09-23 21:55:31,2.6,,1,,"b""b' @petertodd You basically mean applying the canonicality test to output scripts as well"," without enforcing it being push-only. Sounds reasonable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,4,2013-09-23 21:55:31,5.17,,1,,"b'b"" Yup"," and the same function can be used for scriptSigs because other mechanisms force them to be only pushdata\'s anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,5,2013-09-23 21:55:31,1342.4,,1,,"b""b' @petertodd Done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,6,2013-09-23 21:55:31,13.25,,,1,"b'b"" @petertodd Nice catch. I removed it while investigating a tester error", that lead to discovering IsPushOnly() was used in P2SH VerifyScript. I shouldn\'t have left that change in," though. Removed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,7,2013-09-23 21:55:31,25.75,,,1,"b""b' @sipa Cool. Fix the OP_n case and add more tests and I think this is done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,8,2013-09-23 21:55:31,933.58,,1,,"b""b' @petertodd If we both allow OP_n and single-byte pushes"," malleability will remain (at least for non-P2SH multisigs with less than 17 keys). Is it really a problem?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,9,2013-09-23 21:55:31,43.3,,1,,b'b\' @sipa As I said in my comment before IsStandard() tests that OP_n is used where appropriate," so there isn\\\'t any way to use a non-standard pushdata anyway. Just leave that decision until later mark it with a ""TODO"" for now", and do note in that comment that OP_1NEGATE and OP_RESERVED would have to be handled correctly in addition to the more obvious OP_{0,1-16} Besides," what do you mean by ""malleability"" in your comment about non-P2SH multisigs anyway? The scriptPubKey is hashed; no-one other than the sender can change it.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,10,2013-09-23 21:55:31,1399.68,,1,,"b'b"" @petertodd Right now", this is just an IsStandard() test as a first step, but my intention is certainly to try to get this (or something similar) as a network rule (requiring a soft fork). Together with a few other changes, I believe it\'s possible to kill malleability entirely (only for transactions that don\'t choose to give it up through different hashtypes, of course). From that perspective, I don\'t think there is any way around making sure that every potential data push has exactly one representation in the script language. If we can\'t accept such a strict rule even for just IsStandard(), then there is certainly no way to get it as a network rule," and this whole effort becomes less useful.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,11,2013-09-23 21:55:31,581.32,1,,,"b'b"" I know that", I\'m just saying that in this case the rule is meaningless for now because it\'s a case that can\'t happen in a standard transaction scriptSig," and we should at least update the rest of the reference client source code to follow this new standard first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,12,2013-09-23 21:55:31,1367.6,1,,,"b'b\' Trying to implement a ""pushing a byte between 0x00 and 0x10 uses OP_n"," rather than 1-byte data pushes"" rule", I hit an odd problem: the coinbase genesis is non-canonical...\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,13,2013-09-23 21:55:31,1270.55,,1,,"b""b' Heh"," I was waiting for you to notice that. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,14,2013-09-23 21:55:31,0.0,,1,,"b""b' ACK ACK ACK ACK.  Rebase and merge.  (Or should I just open a new pull with the rebase)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,15,2013-09-23 21:55:31,11.42,,1,,"b'b"" ACK presuming aforementioned coinbase issue addressed...  I don\'t see a check in the current commit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,16,2013-09-23 21:55:31,6.98,,1,,"b'b\' @sipa What is ""the coinbase genesis""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,17,2013-09-23 21:55:31,2.55,,1,,"b'b"" @luke-jr The coinbase of the genesis block uses a pushdata form that sipa\'s code would consider non-standard. Anway", there\'s no reason to apply these rules to scriptPubKey\'s," which are signed and aren\'t mutable. Apply them only to scriptSigs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,18,2013-09-23 21:55:31,5.63,,1,,"b'b"" Rebased. @petertodd But the genesis coinbase is a scriptSig"," not a scriptPubKey. I can\'t remember why this was a problem IsStandardTx is never applied to coinbases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,19,2013-09-23 21:55:31,15.88,,1,,"b'b"" @sipa I mean in general; the code right now applies the test to both when to fix malleability you only need to apply to scriptSig. Potentially by doing both we\'ll cause extra problems that don\'t need to be.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,20,2013-09-23 21:55:31,4.52,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,21,2013-09-23 21:55:31,1.62,,1,,"b'b"" @petertodd Yes", agree. Removed it from scriptPubKey now. I\'d still like to have all 1-byte pushes (the CScript << operator) cause something we consider canonical ourselves. Doing that breaks the genesis block," however.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,closed,2014-02-11 20:44:42,1316.07,2,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,22,2013-09-23 21:55:31,35.7,,1,,"b'b"" Did anyone actually test this? For example that spending a multisig doesn\'t cause code that gets rejected?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,23,2013-09-23 21:55:31,37.68,,1,,"b'b"" I\'ve been running it (well an earlier copy extracted from it) on my node since yesterday afternoon. I haven\'t done any multisig spends. But I\'ll go ahead and try that on testnet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,24,2013-09-23 21:55:31,45.07,,1,,"b'b"" The genesis block really doesn\'t _really_ have a coinbase. It\'s more accurate to say merkleroot 4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b represents zero transactions. We could update bitcoind to act on that logic"," if it helps..""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,25,2013-09-23 21:55:31,54.63,,1,,"b'b"" @luke-jr The problem is this:Currently", the CScript::operator<< willl not use OP_1 through OP_16 for 1-byte pushes of bytes 0x01 though 0x10.To be consistent with the rules we\'re setting ourselves for IsStandard here," that would need to change (even though that operator isn\'t actually used anywhere for creating actual transactions currently).Changing that would mean the construction of the coinbase genesis (the hardcoded one in chainparams) becomes inconsistent with the real genesis block.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3025,closed,26,2013-09-23 21:55:31,92.6,,1,,b'b\' @sipa yes," i got an error: {""code"":-25","message"":""64: non-canonical""} when i trying to spend a multisig (multi-input to multi-output), how to fix? ./bitcoind sendrawtransaction 0100000004aa8e347c91a714d7b94c150eb5029ef6b2275b09e543e26e80d7d97be8d0096801000000fd000100493046022100ffeb7f23cd0561e9f72ba1d69d6de9bf2dd19b34852283e82fd591c3d51985b2022100ebbd06fa9c293c12b659ae6a9b98fcd08ec194d7f0c4de048f676b945f22f5f601493046022100dc974771bbe0674080d1697e7bfe68756ad20416c9d6dd115550fe1c7957bd50022100be019ee76f9f1ef04ccfc8e91e449f18b857fa6ab113f7d295e2fee8915f5f12014c69522103bdbcfa53f42f3f8013e7b3b29907ddcaf7a5e5c5938c38470ddeadcab18a479b210357a44da8b8058914c7c5e2f3647296ed35322a5329275f58d714a8af5764274021025edcf4ce9331f82a6a39857a3b06e685f0b2047a1d4ab83a75a61afd204a28b653aeffffffff5481051ec43a44ab388239a97a2f5edfdcc566c0e72f0b804d1e6b1d181060f601000000fc0047304402200d894cad88d430f16435da3ae283507e0283dec140015b933899708027ce8952022076b0b147531d89a861e58869185c2b3bb2d601878408febbf9a12de4e2c35f3a0147304402206afd23bd3e5e54578ba02732d05c9e36ce7784af757a7484da0e99be85a49e07022036921deef12a038e1e88149c6c53f314434adf5b581264c43dd0b50e29caf7e4014c69522103bdbcfa53f42f3f8013e7b3b29907ddcaf7a5e5c5938c38470ddeadcab18a479b210357a44da8b8058914c7c5e2f3647296ed35322a5329275f58d714a8af5764274021025edcf4ce9331f82a6a39857a3b06e685f0b2047a1d4ab83a75a61afd204a28b653aefffffffff07c8d9591df41cba605bbc980e9549978b7171b1c657c82fc6e6b890ee7274700000000fdfd0000473044022055c68b60a9d065f88438b1622faf4eb61ae1ba3a5463912fd6459986a34ad9de02204555ade4c54ee5ff7db9d8e3967a953ee9b8b85ad922fa3c13135f2ec32e377f014830450220352a7278ecd451c0e0849ce3aa691f00395e3587b7b90611bcdede68a5c2876c022100e72897818e924dfd43bc9435a3441b2aeb32de49fbeba563a79aaf306c0c2e3f014c69522103bdbcfa53f42f3f8013e7b3b29907ddcaf7a5e5c5938c38470ddeadcab18a479b210357a44da8b8058914c7c5e2f3647296ed35322a5329275f58d714a8af5764274021025edcf4ce9331f82a6a39857a3b06e685f0b2047a1d4ab83a75a61afd204a28b653aeffffffff15699c3105c31af55b19af09ec8db8f7648027dd7f88eafa02cdfc90ef1e37fa01000000fdfe000048304502207879be207872bb0edfca7f5be47739fd8fa6b9ba3735030283b941b12bb122dd022100cd8a21ff055532eb38850135542a7e5d5ccd9654868b0b1ba0f368b01477ad2d014830450220051abebe269dab1d78fb26022fff3114ff815b9c518e788cbef342991c733112022100a851506519fbbe4c2b1620b765c2084e46bda027c0f2f1fc59b17fe5252964b7014c69522103bdbcfa53f42f3f8013e7b3b29907ddcaf7a5e5c5938c38470ddeadcab18a479b210357a44da8b8058914c7c5e2f3647296ed35322a5329275f58d714a8af5764274021025edcf4ce9331f82a6a39857a3b06e685f0b2047a1d4ab83a75a61afd204a28b653aeffffffff0280c3c901000000001976a914edfb7e5f37f0e09eb917327fc42d81e62bbf443588ac706f9800000000001976a914bad76037c3c4c31c57806de92bc35417a3f4c04b88ac00000000\''
bitcoin	3025	closed	-	-	-	-	2	24	2
bitcoin	3029	closed	opened	wtogami	2013-09-25 04:25:27
bitcoin	3029	closed	title	wtogami	2013-09-25 04:25:27	00:00		+1		b""b' Upgrade gitian win32 to Precise 12.04.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,body,2013-09-25 04:25:27,00:00,,,1,b'b\' mingw upgrade allows more hardening," compiler bug fixes and possibily win64 later. Rename deps .zip files to be more consistent in revision format.Remove ""msvc"" compat triplet name.LDFLAGS -static-libgcc -static-libstdc++Upgrade win32 gitian to boost-1.54.0.Workaround 1.54.0  build bug", upstream #9156Workaround 1.51.0+ human bug, upstream #7262 Upstream 1.51.0 fixed a multiple reference bug that is problematic in 1.50.0.  The cross-compile patch is by the Fedora package developer and shipped in Fedora. Please also note the sha256sum -c thing in boost-win32.yml.  devrandom agreed it is a good approach to better ensure the integrity of inputs, at least prior to gitian itself gaining the ability to track and enforce particular input hashes.  If folks have no objections to this sha256sum -c approach, I would like to do a different pull request that does it for all inputs. All unit tests pass.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,1,2013-09-25 04:25:27,1122.82,1,,,"b""b' cfields indicated this ar is not deterministic by default so the hacks need to remain. url The next update will include this commit to make all mingw builds static. Discussion in #bitcoin-dev seems to indicate general agreement on upgrading all gitian win32 library deps to stable versions that several distros already ship.  To make it easier to review", I will separate the commits to working precise 12.04 gitian with the previous boost-1.50 + build patch, and another commit that upgrades all the libraries. Before adding this to the next PR update," please provide feedback to indicate that this would be accepted.  It is a non-trivial amount of effort to test all this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,closed,2013-09-25 23:08:16,1122.82,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,reopened,2013-09-25 23:08:22,0.1,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,2,2013-09-25 04:25:27,429.93,,,1,b'b\' We currently require 2 VM images to create a release (10.04 32-bit used to compile linux 32-bit and windows binaries, and 10.04 64-bit used to compile linux 64-bit). Ideally, a single 12.04 64-bit VM could compile everything; if you can get that to work, and produce binaries that work for Windows XP+ and (whatever the equivalent version is for Linux) then I\\\'m all for it, and will gladly do the (not trivial) work of creating a 12.04-based VirtualBox VM for gitian-building. I\\\'m less enthused if this means anybody who gitian-builds has to create THREE virtual machine images. RE: updating library dependencies: same criteria," and ""widely distributed"," not bleeding-edge"" is a good guideline", unless, of course, there are critical security fixes that might affect us.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,3,2013-09-25 04:25:27,42.52,,1,,b'b\' The added storage requirement for base-precise-amd64.qcow2 is only 739M.  That is necessary to modernize the toolchain," enable more hardening and possibly performance optimizations later.  The mingw back in the 10.04 era was pretty dire compared to what shipped in 12.04. There was a productive discussion about improvements to the Linux deterministic binary process in #bitcoin-dev today.  Some interesting options there were proposed.  I would warn however to keep this PR solely on the needs of the win32 build. ""widely distributed"," not bleeding-edge"" seems to be the reasonable consensus for dep upgrades.  I will look at various distros along with patched CVE\\\'s if they exist", and pick an appropriate version and patches.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,4,2013-09-25 04:25:27,258.47,,,1,"b'b\' Each commit here results in a working win32 build.cfield\\\'s commit allows the new mingw32 to build without errors and has no effect on the old mingw.Upgrading to precise 12.04 is literally only that plus the mingw32 compat patch that was later added to boost-1.51. The following commit upgrades to boost-1.54 and demonstrates a very simple method to check the integrity of source inputs. Unless there are more improvements to be suggested I believe this is ready for commit. The next step after commit would be to research the ""widely distributed"," not bleeding-edge"" dep versions", verify that the source tarballs used by multiple distros are identical, then verify that Bitcoin win32 remains working with all those upgrades.  I suggest michagogo, with his interest in gitian and learning, to work on that next step as it is time consuming but achievable by someone who is learning software development.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,5,2013-09-25 04:25:27,153.35,,1,,"b'b"" Changes ACK (though releasehas to be updated to download the new dependency boost-mingw-gas-cross-compile-2013-03-03.patch ) haven\'t tested yet""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,6,2013-09-25 04:25:27,21.65,,1,,"b""b' releasehas been updated for boost-mingw-gas-cross-compile-2013-03-03.patch'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,7,2013-09-25 04:25:27,4.48,,1,,"b'b"" ACK on upgrading win32 gitian to mingw-w64 and upgrading boost. We probably want to converge to a single VM for everything", with ideally the following properties:Old glibc, so that the resulting binary works on many systems.Modern g++, so we can start using for example C++11 features and -fltoMingw-w64 to have a modern win32 (and perhaps one day win64) environment. For now, there don\'t seem to be any readily-available options that combine all properties," so let\'s stay on Lucid for linux builds for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,8,2013-09-25 04:25:27,423.35,,,1,"b'b\' OFF-TOPIC for this PR but responding anyway. @gavinandresen Regarding ""Ideally"," a single 12.04 64-bit VM could compile everything""", consensus is that it is infeasible as its built binaries would be incapable of running on RHEL6, a major server platform on which it is quite difficult to build Bitcoin from source.  It would also drop 10.04 which is still supported as a server platform. The more recent conversation wandered into the desire to have modernized toolchains building to a target old glibc.  If that is the case, then we are better off keeping Linux gitian as-is for 0.9 (as it works just fine right now) and looking at future available options.  The ideal future single VM would cross-compiling everything from a long-term supported distro that maintains modern toolchains for us.  This would allow us to maintain only minimal toolchain additions ourselves, themselves deterministic built on the underlying OS. On whatever future platform that is chosen we can build deterministic Linux binaries for i686 and x86_64 against a particular target old glibc ABI.  Whenever a mac cross-compile toolchain happens, it can be built and deployed there too.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,9,2013-09-25 04:25:27,1132.2,,1,,"b'b"" @gavinandresen Agree with merging this now", so we don\'t have to rely on an ancient GCC with limited hardening anymore for Win32," and postponing the discussion about what to do for the linux build environments later?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,closed,2013-09-29 08:44:07,575.75,1,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3029,closed,-,-,-,1,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,opened,2013-09-26 10:21:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,title,2013-09-26 10:21:20,00:00,,1,,"b""b' recurring errors on Windows 7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,body,2013-09-26 10:21:20,00:00,1,,,b'b\' The following errors occured with an installation on Windows 7 64 Bit during transfer of bitcoins from the wallet. I don\\\'t know if it is important, but the wallet is password protected.![bitcoin-qt error1]url After restart of the application," the following message is shown (I pressed ""Abort""):![bitcoin-qt error2]url After I had pressed ""Abort"""," the message ""wallet corrupted"" appeared:![bitcoin-qt error3]url  The wallet was succesfully restored", but the transaction was not carried out.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,1,2013-09-26 10:21:20,1348.98,,1,,"b""b' @dsattler Is this still an issue"," which version of the client were you using at that time? Can you try with latest 0.8.5?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,2,2013-09-26 10:21:20,1422.67,,1,,"b'b"" @Diapolo I\'m running bitcoinVersion 0.8.5.0"," isn\'t this the latest version?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,closed,2013-10-07 08:32:59,1331.65,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,reopened,2013-10-07 08:33:18,0.32,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,3,2013-09-26 10:21:20,4.2,,1,,"b""b' Yes this is the latest version... are you still missing transactions or was this a one-time fault? Have you access to your  at the time the error was happening?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,4,2013-09-26 10:21:20,10.32,,,1,b'b\' Fortunately, I have no missing transactions. I have successfully transferred all my bitcoins to an online wallet, so now I have a balance of 0.00 in my local wallet.But now every time I start the bitcointhe following error is shown:![bitcoin-qt error4]url  I have just checked the ," but can not understand everything what is logged there. There is one error which is  occurring regularly: ""ERROR: CTxMemPool::accept() : nonstandard transaction type""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,5,2013-09-26 10:21:20,16.07,,1,,"b""b' You could try starting the client with a flag once.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,6,2013-09-26 10:21:20,29.38,1,,,"b'b\' I have just tried the ""-rescan"" flag", but no change. I have looked at the  and found the following entries: Open file handle: C:\\\\Users\\\\\\\\AppData\\\\Roaming\\\\Bitcoin\\\\Open file handle: C:\\\\Users\\\\\\\\AppData\\\\Roaming\\\\Bitcoin\\\\database\\\\PANIC: fatal region error detected; run recoveryfile unknown has LSN 1/476, past end of log at 1/28Commonly caused by moving a database from one database environmentto another without clearing the database LSNs, or by removing all ofthe log files from a database environmentPage 0: metadata page corruptedPage 0: could not check metadata page: DB_VERIFY_BAD: Database verification failed\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,7,2013-09-26 10:21:20,16.05,,1,,"b'b"" This sounds like a really corrupted ... I\'m not sure how to help you. Backup your  and try running once more.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,8,2013-09-26 10:21:20,223.77,,,1,"b""b' That did the trick! I have already transferred some money back and forth with no errors.Thank you very much!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,closed,2013-10-07 13:32:50,299.53,2,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3036,closed,-,-,-,2,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,opened,2013-10-21 23:36:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,title,2013-10-21 23:36:09,00:00,,1,,"b""b' Adding an Interactive RPC Client.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,body,2013-10-21 23:36:09,00:00,,,1,"b'b\' Just trying to fork off the discussion from #3082. Seems like the is an interest for an RPC client with ""like tab completion", and inline help, and batch processing, and pipelines of queries," etc"" My biased vote goes toward building it with Python", because there are plenty of existing libs for that. Would the script in / be a good start? Other questions involve feature set, and how to manage the executable. I\\\'ve leave those for discussion though.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,1,2013-10-21 23:36:09,879.93,,1,,"b""b' What kind of interactivity are you aiming at?The simplest implementation would connect"," load the RPC proxy object into the context and drop to the Python shell.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,2,2013-10-21 23:36:09,13.43,,1,,b'b\' Well that is up for discussion. I think the best way to go about it wouldto build one feature set at a time, starting with tab completion since thatshould be the easiest to accomplish. Agreed on that approach.On Oct 22, 2013 10:16 AM,"Wladimir J. van der Laan"" <notifications@\''
bitcoin	3122	closed	3	laanwj	2013-10-21 23:36:09	14.93		+1		b""b' Yes but I mean do you want an interactive Python interpreter? Or make your own mini-language? For example there are tab completion implementations for the Python interactive shell that you can just use (see url  so you essentially would have to do nothing :)'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,4,2013-10-21 23:36:09,3.5,,1,,b'b\' Python. Yeah looked at that already. That\\\'s exactly what I was going touse.On Oct 22, 2013 10:44 AM,"Wladimir J. van der Laan"" <notifications@\''
bitcoin	3122	closed	5	gmaxwell	2013-10-21 23:36:09	22.7	+1			b'b"" Ipython + some hooks to make it easier to use the rpc with less typing would be pretty great (e.g. importing the rpc functions at the top level)... maybe some hooks to give node status at the prompt... also an input method for walletpassphrase that doesn\'t log the passphrase. It would be sad if we couldn\'t someday have the same interface in the QT \'console\'. :)""'
bitcoin	3122	closed	6	super3	2013-10-21 23:36:09	13.03		+1		b""b' From some Google Fu it seems like it would be possible to plug the script into the QT console. For the password it looks like Python has something usable(see url  Could you expand upon what node status should look like?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,7,2013-10-21 23:36:09,1.13,,1,,"b""b' E.g. blocks count and number of peers.  Defined as a user replaceable function"," so if the user wants it to show their balance there it would be easy to add it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,8,2013-10-21 23:36:09,12.82,,1,,"b""b' So basically just let them rip fields from  . Should this be embedded in the prompt line? Something like that? Now"," what what be awesome is if argument fields were automatically shown when you typed the command. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,9,2013-10-21 23:36:09,599.93,,1,,"b'b"" And the Debug window in QT doesn\'t provide this functionality?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,10,2013-10-21 23:36:09,2.82,,1,,"b'b\' Developers are more likely doing work in command line. ""tab completion", and inline help, and batch processing, and pipelines of queries," etc"" would speed up workflow.  To answer your question", no it doesn\\\'t. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,closed,2014-03-12 01:40:23,124.23,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,reopened,2014-03-12 01:40:25,0.03,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,11,2013-10-21 23:36:09,469.8,,1,,"b""b' @super3 This issue has been open for more than a year. Do you still intend to work on this? If no"," please close it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,closed,2015-05-18 17:16:15,935.83,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3122,closed,-,-,-,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,opened,2013-11-01 20:23:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,title,2013-11-01 20:23:48,00:00,,1,,"b""b' Unnecessary (possibly incorrect) check on transaction count.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,body,2013-11-01 20:23:48,00:00,,1,,"b""b' This check is unnecessary since the size of a transaction is no less than 60.It also seems a little inconsistent since MAX_BLOCK_SIZE is used for bothlength of the serialized block and for the number of transactions in a block.If there are MAX_BLOCK_SIZE transactions"," the serialized size check will fail.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,1,2013-11-01 20:23:48,18.9,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,2,2013-11-01 20:23:48,31.38,1,,,"b'b"" It is a reasonable belt-and-suspenders sanity check; we don\'t want to call ::GetSerializeSize if () is something ridiculous. So NACK from me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,3,2013-11-01 20:23:48,602.07,,,1,"b""b' How about this: Define another constant MAX_TRANSACTIONS_PER_BLOCK and give it the same value as MAX_BLOCK_SIZE?  Doing this would give this code a more natural reading..'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,closed,2013-11-02 07:16:09,652.35,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,reopened,2013-11-02 07:16:34,0.42,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,4,2013-11-01 20:23:48,393.88,,1,,"b'b"" I\'d rather not have an explicit constant"," but instead compute it on the fly if it is needed for belt-and-suspenders. e.g.:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,closed,2013-11-11 05:17:26,1320.87,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3192,closed,-,-,-,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,opened,2013-11-07 07:59:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,title,2013-11-07 07:59:43,00:00,,1,,"b""b' listunspent does not list transactions sent to multisignature addresses'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,body,2013-11-07 07:59:43,00:00,,1,,"b""b' I called listunspent", got a bunch of results for normal addresses in the wallet," but none for the multisignature addresses in my wallet. I searched the results both by the address and the transactionID and I did not find any results.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,1,2013-11-07 07:59:43,268.28,,1,,"b'b"" This is intentional", as the wallet only considers multisig addresses where it has all keys to be owned by itself. This is to prevent multiple wallets from considering the same coins spendable. I won\'t close this bug, however, as I think this requirement isn\'t necessary for the raw transaction API. One possible solution is via watch-only wallets," which can monitor and track any address even without any key at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,closed,2014-02-26 22:01:58,842.25,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,reopened,2014-02-26 22:02:01,0.05,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,2,2013-11-07 07:59:43,813.53,,1,,"b'b"" I imported all the keys related to a Multisig in version 0.10.2", and listunspent does not show transactions related to this multisig, nor does the balance include these transactions.  Per sipa\'s comments on 11/7/2013," I\'m under the impression I should see this transactions as part of my balance and these transactions should display via listunspent.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,3,2013-11-07 07:59:43,1169.68,,1,,"b'b"" @ShawnKimble: do your wallet owns all keys for the multisig or only some? Event if you have a **2 of 3** multisig-address and you **only own two keys** (which would be sufficient to spend to coin)"," you won\'t be able to spend it as well as you won\'t see the coin in ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,4,2013-11-07 07:59:43,1342.9,,1,,"b'b"" Yes", all three keys were imported for a 2 of 3 multisig.  So according to current understanding this should work, but does not. Shawn> @ShawnKimble: do your wallet owns all keys for the multisig or only some? Event if you have a 2 of 3 multisig-address and you only own two keys (which would be sufficient to spend to coin)," you won\'t be able to spend it as well as you won\'t see the coin in ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,5,2013-11-07 07:59:43,1348.05,,1,,"b'b"" If you have all three keys", it should be included in the balance calculation and in response. Mind the argument if your wtx has no confirmation (probably not). If it\'s not listed," could you give us some more informations like the raw transaction and a output of  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,6,2013-11-07 07:59:43,1350.1,,1,,"b""b' Did you use the addmultisigaddress RPC to make the wallet aware of the P2SH address to look for?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,7,2013-11-07 07:59:43,1397.93,,1,,"b""b' I created the three standard bitcoin addresses independently of bitcoin core and funded two MS addresses created from the 2 of 6 permutations of those addresses.  I then imported all three private keys using importprivkey.  I then used addmultisigaddress to add the 6 different permutations of addresses.  My listunspent only lists existing transactions in the wallet. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,8,2013-11-07 07:59:43,1403.28,,,1,"b'b\' Here is a transaction related to one of the MS 3QRhXMcBS8fwm2o9jvz9TVPdeW1SJ8sWWY dd4cfddd6bbddbfa7c6270c3455bf5a7408831f6fd9e304f6d6be3651072cb84 07:50:15\\xef\\xbf\\xbcvalidateaddress 3QRhXMcBS8fwm2o9jvz9TVPdeW1SJ8sWWY 07:50:15\\xef\\xbf\\xbc{""isvalid"" : true","address"" : ""3QRhXMcBS8fwm2o9jvz9TVPdeW1SJ8sWWY","ismine"" : true,""iswatchonly"" : false,""isscript"" : true,""script"" : ""multisig","hex"" : ""5221039cf3c2f439cebf811c342aa833d477b114cdcae1ad4ea58c8c0000bdaedd4c1621030519ad4f1c71a3d1089ef4b6e84286757acd3d62e6a55f6b04753edc5508537e2103614c3e73928b001532cc8c4779a1597497bf2c56109fa198fefa93c058dba6c353ae","addresses"" : [""1MEzw8VK8MMehi8PhhRgwtsmdA8KAC4BPp",1L1Tp1EnaKBKNhfbJyRyP6ANy1ReigwbXb,"14a4Gp2bDpKks8Q2YgULz8hLRnW97AMERK""],""sigsrequired"" : 2,""account"" : ""} 07:50:22\\xef\\xbf\\xbclistunspent 07:50:22\\xef\\xbf\\xbc[{""txid"" : ""4ef0a429d0d42e27e0a37cf31ac14cc852e790b8fb0e1065c5d4095ea123bc6c","vout"" : 335,""address"" : ""13BkQV7Z94QWyX4rj3AemT7kvJebDvzEBi","account"" : ""2048","scriptPubKey"" : ""76a91417f8a4ceacb09d23ae3ac1df78d63be39cda2fee88ac","amount"" : 0.00007880,""confirmations"" : 6012,""spendable"" : true},{""txid"" : ""57d2c95e5f8b352480b21c64e4a1890ffa106bfbf3bd6ddef2126c7ca9f89eeb","vout"" : 1,""address"" : ""1DB2P2mYS8L3BwPimS3GqQYCiD8SY1thqt","account"" : "",""scriptPubKey"" : ""76a9148586d2235f1de1ffe863be2a6865ad74cddb5b9288ac","amount"" : 0.00010000,""confirmations"" : 25998,""spendable"" : true}]\''
bitcoin	3218	open	9	ShawnKimble	2013-11-07 07:59:43	1418.1		+1		b'b\' Not sure if this helps, but the MS addresses only show in the ""Sending list"" of addresses, since they were created offline and then funded by this bitcoin core wallet.  Then they were added to the wallet later.  So they were funded by this wallet before they were owned by this wallet.\''
bitcoin	3218	open	10	meshcollider	2013-11-07 07:59:43	124.77		+1		b""b' Possibly related to #9421 in that case, restarting the wallet may make it appear'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,11,2013-11-07 07:59:43,571.77,,1,,"b'b"" @ShawnKimble are you able to confirm @MeshCollider\'s comment above? Does restarting resolve this for you?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,12,2013-11-07 07:59:43,582.93,,1,,"b""b' You need to import the multisig address itself as a watch-only address. Importing public keys does *not* make them be treated as yours; it just helps signing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3218,open,-,-,-,0,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,opened,2013-11-07 16:14:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,title,2013-11-07 16:14:52,00:00,,1,,"b'b"" Default boost 1.53 on Ubuntu 13.10 doesn\'t work""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,body,2013-11-07 16:14:52,00:00,,1,,"b""b' As reported by a few people on IRC. Installing libboost-{system",filesystem,chrono,program-options,thread,test}1.54{-dev,".0} manually seems to work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,1,2013-11-07 16:14:52,1.12,,1,,"b""b' :+1:  (personally) confirmed. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,2,2013-11-07 16:14:52,65.47,1,,,"b""b' How does it not work?Does it generate an error message during runtime or compilation? If so which one?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,3,2013-11-07 16:14:52,3.22,,1,,"b""b' @laanwj  it prevents compilation  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,4,2013-11-07 16:14:52,11.63,,1,,"b""b' Can you pastebin the  somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,5,2013-11-07 16:14:52,5.55,,1,,"b'b"" @laanwj  I think it\'s too late", if  is not appended each time configure is exec," then mine only have the logs _after_ installing proper packages sipa said and there fore it compiled properly (except for bdb too which was throwing an error).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,6,2013-11-07 16:14:52,885.45,,1,,"b""b' I just upgraded my laptop to Ubuntu 13.10 (Salamander Sauce). This indeed installed boost 1.53: No problems encountered configuring bitcoin: Did you install all the necessary libboost-XXX-dev dependency packages?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,7,2013-11-07 16:14:52,144.03,,,1,"b""b' I did libboost-all-dev and no luck. What I did not find was anything in / about boost afterinstalling all packages. Sent from my iPhone'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,8,2013-11-07 16:14:52,9.43,,1,,"b'b"" Ok", I\'m assuming it was a fluke or you were missing some package. There is no way to find this out anymore," so closing this issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,closed,2013-11-08 11:00:46,1125.9,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,9,2013-11-07 16:14:52,58.07,,1,,"b""b' I can confirm this is not a fluke. @laanwj I just personally mailed you my  after I ran ./configure with libboost-all-dev installed but none of the boost 1.54 packages. I was able to run the script with the 1.54 packages.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,reopened,2013-11-08 12:07:20,66.57,1,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,10,2013-11-07 16:14:52,10.28,,1,,"b'b"" Hmm that\'s not much more illuminating: likely we need to update the README to specify the packages separately instead of libboost-all-dev", as that\'s what I did," I never installed libboost-all-dev.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,11,2013-11-07 16:14:52,8.83,1,,,"b""b' +1 specifying packages separately. libboost-all-dev installs a crapload of packages that are apparently not needed by bitcoin. Still I think the console output is misleading: What library?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,12,2013-11-07 16:14:52,22.18,1,,,"b'b"" Yes", the output is misleading. I have no clue what library it\'s complaining about," and  there doesn\'t seem to be a way to find out except for diving into tons of autogenerated neigh-unreadable bash script. I see the problem with specifying the packages separately is that some packages such as libboost-chrono1.53-dev don\'t have versionless aliases. I wonder if boost-all-dev catches them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,13,2013-11-07 16:14:52,10.18,,1,,"b'b"" I understand versionless aliases is exactly what we _don\'t_ want", since bitcoin works with boost 1.54 and not with boost 1.53. When I was still running Ubuntu 13.04, libboost-all-dev included all needed boost deps (and a lot more)," so I assume under 13.10 it can work also if it included the necessary versions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,14,2013-11-07 16:14:52,37.1,,1,,"b""b' Please read my post above"," I did get it to work with boost 1.53. If you install exactly the boost dev packages mentioned it should work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,15,2013-11-07 16:14:52,59.0,,1,,"b""b' I was compiling it under a new", clean," Ubuntu 13.10 virtual machine in Azure.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,16,2013-11-07 16:14:52,1060.13,,1,,"b'b"" I\'ve been able to reproduce this in a VM.The problem is that the configure script looks for boost libraries in (the value of BOOSTLIBDIR). However"," they are not installed there but in  . A temporary fix is to use  . See #3232""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,closed,2013-12-13 04:16:28,969.13,3,14,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,17,2013-11-07 16:14:52,124.75,1,,,b'b\' Does this work for i386 (32 bit Ubuntu 13.10)? I am going to try this:  1) disable wallet (no need to worry about the berkeley db)2) used configure with-boost-libdir=/-linux-gnu (or variation on i386) 3) ran into libprotobuf not found," fixed with ""sudo apt-get install libprotobuf-dev""4) configure successful", and make seemed to be ok5) see ./ compiled ## Will try run it and see if it works and post later Seemed to work. See debugging log processing blocks.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,18,2013-11-07 16:14:52,567.7,,1,,"b""b'   Fixed this issue for me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,19,2013-11-07 16:14:52,1332.8,1,,,"b""b' Same error and fix under Ubuntu 14.04 .. Please remember to enhance the error message if possible...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,20,2013-11-07 16:14:52,696.98,,,1,"b'b"" Yes"," On ARM (hardfloat) you need to provide: I\'m starting to see a pattern here :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,reopened,2014-06-06 05:30:30,74.03,5,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,21,2013-11-07 16:14:52,585.63,,1,,"b'b"" I\'ve got a few boost m4 changes queued up. I\'ll add this to the \'to-fix-before-pushing-upstream\' list.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,22,2013-11-07 16:14:52,829.22,,1,,"b'b"" Just had another look here while I was poking at #3945. The host string should take care of this. To those who can reproduce"," could you please verify that the master branch has this problem? It should\'ve been solved by 13a2283a6d33""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,23,2013-11-07 16:14:52,292.15,,1,,"b'b"" @theuni I\'ve added some debug statements to ax_boost_base. The problem is that it thinks the lib directory will be  ", where it is  . The default library path detection makes some assumptions. Could we use  , and extract the libraries section," here instead?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,24,2013-11-07 16:14:52,393.0,,,1,"b'b"" Yea"," that\'s a good idea. Will play with it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,closed,2014-08-18 18:18:07,767.62,5,18,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,25,2013-11-07 16:14:52,152.87,,,1,"b'b\' Thank you @laanwj ! You just saved me from hours of useless research under Raspbian ""Jessie"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,26,2013-11-07 16:14:52,1032.82,1,,,"b'b"" The error messages probably need to be more verbose in case the library search fails where did it look", what exactly didn\'t it find the code is opaque, the only way I\'ve been able to debug it (every time) was to litter the m4 with debug statements. It is boost that complicates finding it by not supporting the standard ways of finding packages," such as pkg-config.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,27,2013-11-07 16:14:52,969.72,,1,,"b""b' I am trying to build NFD. While running the command ./waf configure"," it gives the following error. checking boost linkage: Could not link against boost libraries using supplied options Tried several options to resolve the boost linkage error but could not make it. It is running in Ubuntu 14.04. Please help.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,28,2013-11-07 16:14:52,974.8,,1,,"b""b' What is NFD and waf?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,29,2013-11-07 16:14:52,630.97,,1,,"b""b' Ran into this issue while configuring Ekiga 4.0.1 on Kali.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,30,2013-11-07 16:14:52,1105.48,,1,,"b'b"" @paulbrittain So does this work? Should be fixed on master but I have no idea what version you\'re trying to compile.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,31,2013-11-07 16:14:52,43.13,,1,,"b""b' @laanwj I also ran into that issue while configuring Ekiga 4.0.1 on KUbuntu 16.04. I tried running the command in the first post with the newest version from the Ubuntu repos (1.58) and I also tried to pass the libdir with no success:    Any other Idea?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,32,2013-11-07 16:14:52,963.2,,1,,"b""b'   works for me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,33,2013-11-07 16:14:52,456.7,,,1,"b""b' on ubuntu 17.10:  after : sudo apt install libboost-all-dev  checking whether the Boost::IOStreams library is available... yes configure: error: Could not find a version of the library! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,34,2013-11-07 16:14:52,1083.58,,1,,"b'b"" @cameronbergh If that issue persists after starting with a clean tree", after following the instructions building Bitcoin core 0.16.0 or master, please open a new issue. A comment on an issue of 5 years ago is going to fall between the cracks. FWIW I\'ve just successfully configured and built master on Ubuntu 17.10," but it might be something conflicting in your setup.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3219,closed,-,-,-,6,25,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,opened,2013-11-10 23:37:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,title,2013-11-10 23:37:21,00:00,,1,,"b""b' Require configuration of mining before creating blocks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,body,2013-11-10 23:37:21,00:00,,1,,b'b\' As discussed on IRC," this removes the ""defaults"" miners often use as an excuse to not make mining decisions.getblocktemplate is disabled unless bitcoind is explicitly configured with mining settings.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,1,2013-11-10 23:37:21,690.95,1,,,"b'b"" I\'d propose to implement this slightly differently", more straightforward: set the default to invalid values (such as or MAXINT or  ," whatever is most useless) then check for valid values in IsMiningSetup() instead of probing the arguments.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,2,2013-11-10 23:37:21,495.63,,1,,"b'b"" That\'d probably make it clearer too"," okay...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,3,2013-11-10 23:37:21,38.08,,1,,"b'b"" @laanwj That\'d need making the variables globals again.. so maybe this is better after all?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,4,2013-11-10 23:37:21,31.53,,1,,"b'b"" Ugh", yes I now see that CreateNewBlock also queries and parse the arguments every time. That\'s the same as using globals," just in a hidden way.At least I now understand your reasoning for doing it that way in IsMiningSetup.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,5,2013-11-10 23:37:21,1260.87,,,1,"b""b' The obvious downside of this approach being ..... once a miner has set them", we lose the ability to select smarter defaults," because whatever they pick could end up being used indefinitely.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,6,2013-11-10 23:37:21,66.35,,1,,"b'b\' ""We"" shouldn\\\'t be setting defaults anyway. That\\\'s the point.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,7,2013-11-10 23:37:21,13.83,,1,,"b""b' If we think that the common settings become wrong for an option there is always the possibility of just renaming the option to force resetting it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,8,2013-11-10 23:37:21,1154.62,,1,,"b'b\' Rebased without ""&& true""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,9,2013-11-10 23:37:21,46.63,,,1,"b""b' Automatic sanity-testing: FAILED ", see url  for binaries and test log. This could happen for one of several reasons:1. It chanages paths in -mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in -tester)2. It  tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)4. The test suite fails on either Linux i386 or Win325. The block test-cases failed (lookup the first bNN identifier which failed in url  If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,10,2013-11-10 23:37:21,1247.93,,1,,"b'b"" I think this needs a documentation update too. Miners upgrading to 0.9.0 will have no idea what to set the defaults to"," so the documentation could suggest some sane default values (I get the irony here) and to sources of information with regard to setting the values.We wouldn\'t want them to just put some nonsense values.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,11,2013-11-10 23:37:21,753.48,,,1,"b'b\' NAK This is fundamentally ""force X to think"" which is unfriendly.  We want miners to be thinking about this", agreed; But I see nothing wrong and much good by continuing to provide a sane default mining policy.  Let\\\'s continue to play nice with our miner friends.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,12,2013-11-10 23:37:21,694.05,,1,,"b""b' Seems consensus is against this (at least in the current state)"," so closing for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,closed,2014-01-10 11:51:19,733.97,1,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,13,2013-11-10 23:37:21,1151.53,,1,,"b""b' Huh? Most people seemed to support this from the comments... Just realised this was closed without merging :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,reopened,2015-07-23 15:24:48,213.48,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,14,2013-11-10 23:37:21,525.7,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,15,2013-11-10 23:37:21,13.32,,1,,"b""b' This probably breaks a bunch of -tests (which run -regtest and which rely on defaults).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,16,2013-11-10 23:37:21,14.17,,1,,"b""b' The same objections remain...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,17,2013-11-10 23:37:21,4.17,,1,,"b""b' @jgarzik This does give a randomised selection of not-unreasonable settings.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,18,2013-11-10 23:37:21,13.63,,1,,"b""b' @luke-jr AFAICS this change _requires_ miners to have something set in their configs", which they may not have set before, by checking () Thus it breaks e.g. every miner, including p2pool miners," which do not have those settings in their config file. Am I missing something?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,19,2013-11-10 23:37:21,99.3,1,,,"b""b' @jgarzik No", that sounds about right. It breaks miners who have thus far been too negligent to configure their node," until they do so. @gavinandresen Fixed QA tests by skipping config check on .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,20,2013-11-10 23:37:21,4.17,,1,,"b""b' NAK maintained. This would seem to increase the barrier to entry for p2pool etc. miners and knowingly break currently-working configurations.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,21,2013-11-10 23:37:21,690.87,,1,,b'b\' Just seems like way too many problems or oddities with this patch:Raises the bar for getting p2pool working:  Breaks current documentation + requires users to perform lots of research vs. simply taking a useful default.Breaks existing, working configs.Picking random values for key settings is just odd, and runs counter to normal engineering practice.  Less deterministic, makes testing more difficult, and more. More generally,"pushy"" changes that halt software operation until the user educates themselves to a higher degree are distasteful.  Bullying the user into learning the intricacies of mining policy is not the way to go. It is a lot of headache just to avoid providing a sane default.\''
bitcoin	3229	closed	22	luke-jr	2013-11-10 23:37:21	1428.07		+1		b""b' Closing due to inactivity.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,closed,2016-01-28 05:36:14,851.43,2,19,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,23,2013-11-10 23:37:21,262.72,,1,,"b'b"" Yes", while I philosophically agree with this pull, and I\'d rather get rid of any unnecessary default values any day," it\'s so inconvenient to miners that we can\'t really merge it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3229,closed,-,-,-,2,20,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,opened,2013-11-14 09:35:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,title,2013-11-14 09:35:38,00:00,,1,,"b""b' RPC option to report bitcoins in satoshi units.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,body,2013-11-14 09:35:38,00:00,,,1,b'b\' I think the proper way to report bitcoin is in satoshi units, the smallest unit today. To not break compatibility with current RPC clients," I think of adding this in a opt-in way. There could be a setting called something like ""RPC-unit-satoshis"" or the like. I\\\'d love to hear why this arguments against it.  Thanks",ton.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,1,2013-11-14 09:35:38,48.62,1,,,"b'b"" Personally I don\'t like this. The 10^-8 is an implementation detail. It makes sense to use it internally in programs", but I don\'t like exposing it on interfaces. Changing this now also leaves open the way to disaster," imagine what could happen if a site used the wrong unit in RPC. We had a similar discussion for BIP 0021 (Bitcoin URI scheme). Eventually we decided to simply use a BTC amount instead of messing around with different  as that is most straightforward and clear.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,2,2013-11-14 09:35:38,14.9,,1,,"b""b' Yes", and also we can now be sure implementations can deal with fractional numbers. If we had started with Satoshis," everyone would have used integers and the switch to fractions of Satoshis would be more prone to errors.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,3,2013-11-14 09:35:38,101.57,1,,,b'b\' Given all the problems with existing floating point implementations, and existing JSON implementations, and how use of floating point has already lead to incorrect values following a multiplication or division etc. I have always supported the use of satoshis -all integer -in the RPC interface. However, given that that decision was made years ago," backwards compat makes it difficult to switch now.  Even a ""use-satoshis"" option is not without danger", as @laanwj indicates. I do not think it is a large danger, because an error would likely result in **sending too little** rather than sending too much.  But it is still a danger.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,4,2013-11-14 09:35:38,17.28,,1,,"b'b\' @jgarzik That\\\'s a completely different discussion. JSON always represents numbers as doubles (well that\\\'s not strictly true I should say _almost all implementations do_). Moving the decimal point around does not solve that.  But I\\\'d be all for ""send coin amounts as strings instead of numbers"" option", so that people may be less tempted to use floating point for monetary values with all the risk it entails. This would also be pretty harmless if misconfigured (result in parse errors not incorrect amounts).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,5,2013-11-14 09:35:38,405.63,1,,,"b'b"" If you place it in config like the others said that might lead to terrible mistakes. Although I think it would be reasonable to add it in the actual RPC call. For example"," Or something to that effect. I\'d rather this be implemented in a wrapper than the core client.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,6,2013-11-14 09:35:38,791.18,1,,,"b'b"" Sorry"," I\'m going to close this. Adding additional options just because some like their RPC values a shade of green instead of purple is a certain way toward madness. Adding the option will just give more maintenance and testing complexity. A choice was made once to use BTC and there is no convincing reason to switch to anything else. Also it is easy enough to provide a wrapper that converts the values to whatever unit you like.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,closed,2013-11-21 08:34:49,1379.18,4,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,7,2013-11-14 09:35:38,113.37,,1,,"b'b"" Reopening", I may have been too trigger happy, though I still think it\'s a terrible idea to just change the multiplication factor, as it does nothing to fix precision issues that people are having from JSON RPC implementations. If anything," it would _hide_ inherent floating point precision issues (and would keep using double internally for monetary amounts just as happily).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,reopened,2013-11-21 10:28:11,113.37,4,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,8,2013-11-14 09:35:38,19.38,,1,,"b'b"" @laanwj bitcoind doesn\'t use double for monetary amounts internally at all... not sure what you mean by that?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,9,2013-11-14 09:35:38,5.68,,1,,"b'b"" @luke-jr We\'re talking about users of the API here"," not so much bitcoind itself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,10,2013-11-14 09:35:38,871.55,,1,,"b""b' Guys", I still thinking that an opt-in config option would not hurt anyone," but will clearly make conversions way easier and safer for the ones who opt to use it. I may not see your points though. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,11,2013-11-14 09:35:38,9.48,,1,,"b""b' @imton What language are you using?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,12,2013-11-14 09:35:38,12.78,,,1,"b'b"" @super3 I am using RoR", and I took all measures to handle them safely, using  & money-rails gem. Still, It will be better if I didn\'t even have to convert them back from float to handle satoshis as int," as I do in ruby money.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,13,2013-11-14 09:35:38,111.78,,,1,"b'b"" @imton The point is there is nothing _safer_ in returning large values instead of smaller", up-to-8-digit precision JSON values. The problem is that javascript (which is at the base of JSON), as well as many other implementations, use doubles for number representation. Double is a _floating point_ format, which means that the mantissa has a limited precision, not the number of decimals after the dot. Sure, you can patch your JSON RPC parser to use integers instead, or maybe yours does already, but if you are going to patch your JSON RPC parser you can do it just as well in the current situation: make it return a Decimal or fixed point format for numbers. Btw @luke-jr, what you say is not entirely correct, we indeed use uint64 as internal format but we do use doubles in the intermediate conversion for JSON RPC," see  This has caused an issue at least once with an upgrade of json::spirit. url  which somehow formatted numbers differently. _When we\'d use strings we could avoid converting to double intermediate format at all and be fixed-point all the way to the client._""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,14,2013-11-14 09:35:38,877.08,,1,,"b'b"" The option that\'s added in #3759 allows this. Please help testing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,15,2013-11-14 09:35:38,832.52,1,,,"b'b"" I had a pull (#3759) open for a long time that exposed this option and no one bothered to even test it. Seems very-low priority so I\'m closing this issue. A future JSON-RPC interface revision will likely switch to integer", satoshi units," but these are far-future plans (see #3806).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,closed,2014-07-31 08:08:27,1300.27,5,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,16,2013-11-14 09:35:38,197.45,,,1,"b""b' Thanks anyway'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,17,2013-11-14 09:35:38,404.87,,1,,"b'b"" @laanwj do you think it would be possible to -open #3759? I am willing to rebase it if there\'s some ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,18,2013-11-14 09:35:38,19.9,,,1,"b'b"" @gdm85 As discussed on IRC I think you\'ll find zero interest in that in practice. The RPC interface is just what it is", clients have grown to our interface instead of the other way around," and too much would be broken by changing that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,19,2013-11-14 09:35:38,34.8,,,1,"b'b"" @laanwj yes", agree. Your idea of a future library approach sounds interesting," although I\'d prefer also to see a reference RPC implementation in @bitcoin here on github.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3249,closed,-,-,-,5,10,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,opened,2013-11-17 04:34:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,title,2013-11-17 04:34:31,00:00,,1,,"b""b' Use C++ streams instead of C-style printf functions'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,body,2013-11-17 04:34:31,00:00,,1,,"b""b' Convert aoti[64] to fromstr", itostr[64] to tostr.Add CLogStream (logstream.h), wraps ostringstream but preserved type after insertions.Use fstream where possible (when no fsync is required).Change error function to have void return type.Fix functions relying on the false return from error function.Use boost::format for localized string token replacement. Follow up for #3236, #3237," and #3244. This should remove C99 requirements.  Replaces *printf functions with C++ equivalents.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,1,2013-11-17 04:34:31,2.3,,,1,"b""b' While the motivation is appreciated...  meh", a bit disinclined to stir every printf line, and break tons of other patches," for this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,2,2013-11-17 04:34:31,184.6,,1,,"b'b"" @jgarzik That\'s also why I have discouraged doing this. On the other hand"," it appears pretty trivial to rebase patches to this and it mostly (only) affects debug printing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,3,2013-11-17 04:34:31,80.97,1,,,"b""b' Apart from the above nits I think this is overall a good idea (printf is ugly and un-typesafe after all", so getting rid of it in favor of a safer method reduces risks. Also depending on C99 as well as C++ was a bit weird)," but we may want to merge other pull requests first to prevent conflicts.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,4,2013-11-17 04:34:31,325.35,,1,,b'b\' I\\\'d prefer a  ," with ""class"" optional as well. Since this is something that is often written during debugging", maybe just call it  ?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,5,2013-11-17 04:34:31,1.7,,1,,"b'b"" Why remove error\'s return type?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,6,2013-11-17 04:34:31,24.75,1,,,"b""b' Because error always returned false"," which made the fact that it returns anything confusing (until you looked up the definition).  Error was a subroutine acting like a function. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,7,2013-11-17 04:34:31,913.08,,1,,b'b\' @sipa and @laanwj:  following your suggestions, I have created the Log class (log.h and ).  At its core it works by multiplexing an input to multiple outputs. Since generally flags won\\\'t change after instantiation of the class (except for changes from other threads), the constructor of the instantiation reads the different flags and decides what streams to send the data to. For all types except strings and const char_s, the data is just passed along to the streams below (manipulators work too).  For strings and const char_s, we do a little processing based on what stream it is, specifically seeing  we are writing new lines. For the error function," I removed it all-together and replaced them with log calls (""ERROR: "" prepended","\\\\n"" appened).  If we want to make it so the ""ERROR: "" part is configurable, I would recommend a public static const char\\\\* on Log instead of making a wrapping function.\''
bitcoin	3271	closed	8	brandondahler	2013-11-17 04:34:31	1165.35		+1		b""b' Fixed problems hopefully, rebased.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,9,2013-11-17 04:34:31,10.82,,,1,"b'b\' I prefer printf-style syntax over << "" "" << etc", so I don\\\'t like this pull.  It is 700 extra lines of code for approximately zero practical benefit that I can see.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,10,2013-11-17 04:34:31,147.4,,1,,"b'b"" @gavinandresen:  I understand feeling that there is a lot of one-time risk involved in moving from printf to stream style conversion; however", I completely disagree that there is no practical benefit. 1)  This makes maintenance easier The code is much less complex overall.  This removes some ugly compatibility #defines, attribute markings, and even hacks. 2)  Platform independence We are no longer relying on the platform to have a  printf function.  Instead we are relying on the C++ standard library implementation which we already rely on since we use C++ in the first place.  This is specifically a problem for int64_t since Windows doesn\'t use the same syntax as Linux unless you use some compatibility defines. 3)  The way it reads Streams read fluently instead of requiring the user to place the parameters in the correct place.  Consider: Becomes Likewise logging lines stand out just like normal cout lines (given the new Log class). All of this being said, I will agree that the shorter changes, such as: Becoming Would probably work better off as a boost::format.  The reason I started out with not using boost::format more is because I personally prefer to keep dependence on boost to a minimum.  If y\'all disagree I do think it could make things less cluttered when making simple, smalls strings. Likewise creating formatting functions for specific types of data would allow us to change the output formatting of the data in one place instead of across a bunch of files, while fitting in with the stream style.  Using the above function again," having a static call makes things cleaner all-together: Further we can make custom manipulators to reduce duplication of code:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,11,2013-11-17 04:34:31,7.28,1,,,"b""b' On another note"," does anyone have any idea why pull tester is failing?  The only lines that look bad are: From url  .  Whereas a successful one shows the following at the same spot:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,12,2013-11-17 04:34:31,169.03,1,,,"b'b"" @gavinandresen Agreed", the problem isn\'t with printf-style _syntax_, it\'s with the printf function  which (in our usage) isn\'t part of the C++ standard, so we had a dependency on C99-like formats that broke down on Windows without special mingw defines. Also it\'s not type safe, easy to mess up the stack with some wrong % char, and uses a variable-number-of-parameters hack which breaks down for std::string so a dummy \'0\' argument is inserted with a macro (the etc...).  Many reasons to get rid of the sprintf hacks. But boost::format would be better in that regard as it mostly keeps printf syntax but is typesafe and has none of those mentioned drawbacks. I don\'t think the actual risk is that large," at most some debug messages will be formatted differently. It could map pretty much one-on-one. Could we do this without adding (so many) lines?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,13,2013-11-17 04:34:31,2.67,,,1,"b""b' Also -do we really need our own class for handling time? () How is this related to the subject of this pull?Reducing depenency on boost is not a goal! If boost offers some functionality", please use that instead of rolling our own. This changes way too many things," please keep it focused.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,14,2013-11-17 04:34:31,355.1,,,1,"b'b\' @laanwj I would not consider the use of ostringstream as ""rolling my own""", namely because that is the only way provided by the C++ standard library to convert random types to strings and vice versa. If you are talking about the Log class, the first commit started off without it, but it was added because it simplifies the actual logging process (the business logic that goes in to putting type T data into X, Y, and Z streams) and it makes reading the actual print lines prettier: vs \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,15,2013-11-17 04:34:31,474.63,,,1,"b'b"" Closing; no consensus this is a good idea.  Maybe bring back as a boost::format version that doesn\'t break so many other pull requests.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,closed,2013-11-29 20:59:33,985.03,4,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,16,2013-11-17 04:34:31,347.2,,1,,"b'b"" @gavinandresen Can I request a temporary re-openingI made changes but did not request comments on them (was busy and didn\'t write them up). Updated summary of changes that are in this pull request:1.  Replaced LogPrintf with new Log class that is functionally the same", but instead works by multiplexing log data into a set of streams, determined at the time of the construction of the class.  This causes >95% of all line changes here.2.  Removed strprintf and all hacks associated.  **Replaced usage with boost::format.**3.  Used ostringstreams in place of large string concatenations (many examples in ).  4.  Update translation function std::string _(const char\\\\* psz) to boost::format _(const char\\\\* psz).  Add ability to get direct string instead of boost::format by specifying _std::string(const char\\\\* psz).5.  Replaced ato\\\\* and *tostr functions with templated functions tostr and fromstr.6.  Moved time functions to bitcointime.{h,cpp} from util.{h,cpp}.  Fixes circular dependency and allows namespacing of functions to provide context clarity.7.  Removed error function completely, always returned false before," logging input(s) with strings preappened and appended. Edit:  Also rebased.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,17,2013-11-17 04:34:31,871.87,,,1,"b'b"" I\'m personally fine with the general direction this is going in. In particular:Splitting off log and time functionality to their own source files is good util is a mess.No problem with using a more ideomatic C++ way for formatting output especially if it provides better type-safety.The Log(class) << some << messages looks ok to me. I\'m less sure about things like (quite verbose if we really need a separate method", maybe or something?). Also, most certainly was a hack, but I\'m in the middle about getting rid of it, if it requires adding that many extra lines to deal with it. @gavinandresen Given that it\'s now (in some places) using boost::format," care to reopen?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,18,2013-11-17 04:34:31,786.25,,1,,"b""b' Updated to address items above and rebased"," they will not propagate to this pull request unless the request is re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,reopened,2013-12-05 10:27:43,808.17,4,10,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,19,2013-11-17 04:34:31,246.23,1,,,"b'b"" Reopening this -I don\'t expect that it gets merged for 0.9", as we don\'t want to break all other pulls, and it needs a lot of work," but overall it\'s going the right way IMO (boost::format instead of ugly over-verbose stdio stream syntax).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,20,2013-11-17 04:34:31,1032.28,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,21,2013-11-17 04:34:31,1162.23,,,1,"b""b' url  might be a good replacement. As opposed to boost::format"," the format is exactly the same as the one that uses.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,22,2013-11-17 04:34:31,641.05,,,1,"b'b"" @p12tic that actually looks very good", it is a type-safe strprintf() implementation in one header file and is not dependent on the platform\'s printf functions. According to the description it supports C99 format characters," which is a requirement.Could be a drop-in replacement.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,23,2013-11-17 04:34:31,373.7,,1,,"b""b' See #3549'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,closed,2014-01-16 16:00:22,332.65,5,12,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3271,closed,-,-,-,5,12,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,opened,2013-11-19 12:52:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,title,2013-11-19 12:52:39,00:00,,1,,"b""b' wallet: add interface for storing generic data on destinations'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,body,2013-11-19 12:52:39,00:00,,1,,"b'b\' Add ""destdata"" record type to wallet", as well as accessor functions on CWallet and CWalletDB. This can be used by the UI to store arbitrary data tuples to be associated with a tx destination in the wallet. A destdata tuple in the wallet is of the form (address, key, value) where the key acts to distinguish different types of generic data. The purpose of this is to give the GUI a way to store:When an address table record was created (for #3207)The invoice Payment URI associated with a receiving address (for #3207)Outgoing payment requests (as soon as the GUI for this is ready), so that they can be associated with incoming transaction outputs when paid (transaction details could show this information...) And possibly other data later. I\\\'ll add tests when this is deemed a sane change.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,1,2013-11-19 12:52:39,195.83,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,2,2013-11-19 12:52:39,1133.25,,1,,"b""b' Closing this for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,closed,2013-12-12 11:01:44,1329.08,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,3,2013-11-19 12:52:39,298.25,,1,,"b""b' I think this can be reopened the only objection ever was some confusion about a variable name...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,reopened,2014-01-13 16:01:52,300.13,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,4,2013-11-19 12:52:39,2.8,,1,,"b""b' Yes", I closed it because I had too many other active pulls in the air at that point," not because of any problem with the code. Reopened.Edit: also needs rebase it appears'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,5,2013-11-19 12:52:39,1285.12,,1,,"b""b' Closing in favor of #3521'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,closed,2014-01-15 13:27:54,1286.03,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3281,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,opened,2013-12-08 08:45:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,title,2013-12-08 08:45:32,00:00,,1,,"b""b' fixed documentation on  hardening flags'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,1,2013-12-08 08:45:32,948.23,,,1,"b""b' Should be good now. thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,closed,2013-12-09 00:33:50,948.3,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,reopened,2013-12-09 00:33:52,0.03,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,2,2013-12-08 08:45:32,277.73,,1,,"b""b' Please squash the three commits into one.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,3,2013-12-08 08:45:32,29.58,,1,,"b""b' Ok"," squashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,4,2013-12-08 08:45:32,12.4,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,5,2013-12-08 08:45:32,153.8,,1,,"b'b"" @haltingstate Looks like you\'ve pulled in an unrelated commit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,6,2013-12-08 08:45:32,933.88,,1,,"b""b' ACK commit -though @fanquake correctly notes another problem'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,7,2013-12-08 08:45:32,290.02,,1,,"b'b"" Yes"," let\'s get rid of that extra commit then we can merge this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,8,2013-12-08 08:45:32,366.77,,1,,"b""b' I dont know the github command to fix it. What would I run. On Thu", Dec 12, 2013 at 8:51 PM," Wladimir J. van der Laan <notifications@'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,9,2013-12-08 08:45:32,28.03,,1,,"b""b'   In this case", Then delete the line with the extra commit, save and exit.Then do a force push to your repository," i.e.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,10,2013-12-08 08:45:32,3.32,,1,,"b""b' The repo appears to be corrupted.  It has been five days and I am gettingthis error from github url  On Fri", Dec 13, 2013 at 3:26 AM," Wladimir J. van der Laan <notifications@'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,11,2013-12-08 08:45:32,10.47,,1,,"b""b' Seems to work again for me now...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,12,2013-12-08 08:45:32,6.32,,1,,"b""b' I had to delete local repo", repull and then change the file. You can closethis pull request and the new pull request is at url  On Fri, Dec 13, 2013 at 3:40 AM," Wladimir J. van der Laan <notifications@'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,closed,2013-12-13 11:46:23,672.52,0,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3367,closed,-,-,-,0,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,opened,2013-12-08 23:47:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,title,2013-12-08 23:47:13,00:00,,1,,"b'b\' Get rid of using the change address ""feature"" as default in the official bitcoin clients\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,body,2013-12-08 23:47:13,00:00,1,,,b'b\' Using change addresses cause a lot of problems, and don\\\'t have much benefit. The problems:High learning curve newbies don\\\'t know where their money is going. When they make a payment, they see their entire address drained of money on the blockchain.Backing up your bitcoins becomes almost impossible. This is really the biggest problem with using change addresses, and it is a HUGE problem. How do you back up your money if your addresses are drained every time you use them? If you want to back up an address, you can do that easily. Just encrypt your wallet and copy it to various devices (your phone, external HD, USB drive, paper wallet, etc). If change addresses are used tho, you must copy to all your backups (as painful as printing out a new paper wallet) every time you make a transactions. That is intractable. That intractability I think is a HUGE problem for bitcoins. People need a simple," understandable secure way of being ""their own bank"" and change addresses make bitcoins broken for most people. You can use seeded address generators", and back up the seed. But there are no standard algorithms for doing that. If you find your seed in 30 years, how will you know what algorithm to use to use the seed on? You\\\'d have to back up the algorithm with your seed. That\\\'s really hard on paper.  Its in the best interests of bitcoin and bitcoins users to have a simple way to back up their money. It doesn\\\'t make sense to make backing up bitcoins far more complicated just to gain a little bit of privacy, especially when the technique [probably doesn\\\'t even work]url  Don\\\'t gear this currency toward power user let power users use advanced features when they understand them.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,1,2013-12-08 23:47:13,4.57,,1,,"b""b' Bitcoin becomes unusable without change addresses. Are you going to explain to people why they can only send bitcoin amounts totalling the exact size their coins are? Please keep in mind that reusing addresses is _broken _. HD wallets solve the backup issue without breaking the user experience.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,2,2013-12-08 23:47:13,21.65,,1,,"b""b' There absolutely is"," BIP 32. url  Considering this we will not be making the proposed change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,closed,2013-12-09 00:13:26,26.22,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,3,2013-12-08 23:47:13,33.23,,,1,b'b\' Wow. Way to completely misunderstand what I\\\'m saying luke. I\\\'m saying make the outputs of a transaction your receiver and the origin address by default. I.E. don\\\'t use new _change addresses_. Reusing addresses is not misuse please justify that.  gmaxwell, would you mind please reopening this issue? I don\\\'t mind my issue being closed once a consensus has been reached, but 30 minutes is not long enough for that to happen. Please indulge me with the knowledge that if my idea isn\\\'t reasonable it will be very clear within a week.  Also," I think you misunderstood me when I said there is no ""standard"". You have clearly done excellent work in creating an algorithm for doing this", but that doesn\\\'t make it a standard. The fact that it is a proposal at the moment means it is definitely nowhere near a standard. The importance of a standard is that people will be able to easily find ways of restoring their wallets in the future. By contrast, an encryption standard like AES would be all that\\\'s needed to safely store a bitcoin private key, and by proxy a user\\\'s money if change addresses weren\\\'t used. Your BIP is nowhere near the level of standard that AES is. I would appreciate some justification for the use of change addresses here. Please don\\\'t just dismiss this issue without some discussion. I\\\'d also appreciate links to this type of discussion if you\\\'re aware of where it has taken place before.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,4,2013-12-08 23:47:13,17.97,1,,,b'b\' This has been discussed previously, at length," and I suspect that people are exhausted about talking about it but I don\\\'t mind reopening for you. I closed it on the basis of the belief that you were unaware of BIP 32 and would have withdrawn your request after being informed of it. I think you\\\'re thoroughly confused wrt the ""standard"". BIP 32 is more clearly defined than Bitcoin _itself_ as a standard", and more clearly defined than any other existing method of actually encoding Bitcoin key material, etc. AFAIK all widely used wallet programs plan on moving to it in their next or next few versions, also establishing it as the defacto standard. It has several complete independent software implementations. With the BIP process I\\\'d been tending to model after the IETF process, so don\\\'t be confused by the language. Actual standards are just proposals until long enshrined by common practice\\xe2\\x80\\x94 something that nothing in Bitcoin really is today.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,reopened,2013-12-09 01:04:38,51.2,2,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,5,2013-12-08 23:47:13,284.92,,,1,b'b\' Thanks. I\\\'d actually consider the Bitcoin protocol itself a well-established standard at this point, with [hundreds of thousands of nodes]url  and constrained by the strength of the current blockchain no one can simply start using another algorithm because it wouldn\\\'t be bitcoins anymore. By contrast, these proposals have very little keeping them around. It may well be the case that HD wallets will have staying power for a few decades, but there\\\'s nothing to ensure that especially when (it sounds like) no program has actually implemented it yet.  Learning about the proposal though, it sounds pretty nice and solves most of the problems I\\\'ve been worried about. I still think that bitcoin needs to have a well established way to keep coins safe in the long run without any monitoring. A person should be able to back up a wallet, throw it in a time capsule, and someone in 50  years should be able to open it up and use the wallet. To me," this means that whatever algorithm is used to generate the right private keys should be identifiable and findable 50 years later just by looking at the backup.  I know for a fact that if you stored a plain bitcoin address private key and threw it in a time capsul that labeled it ""bitcoin address"" someone in 50 years could open it and use it. Is this true for your proposal? It would feel really sucky for people if they back up their stuff", and 5 years from now open it up and can\\\'t figure out how generate the right addresses from it. I don\\\'t want bitcoin to erode away because its too easy for people to lose their coins. Would you mind pointing me to somewhere where the efficacy of change addresses has been discussed?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,6,2013-12-08 23:47:13,94.52,,1,,"b""b' Closing as a duplicate of #3250 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,closed,2013-12-09 07:24:04,379.43,2,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,7,2013-12-08 23:47:13,0.85,1,,,b'b\' With coin control (which is merged for 0.9.0) you\\\'ll be able to set your own change address, so you can avoid any issues with it. Apart from that -at this point I\\\'d recommend using another wallet program that does support BIP0032 deterministic wallets. The keypool system that is used now in the reference client is indeed dangerous as you aren\\\'t even notified when you have to make a new backup.Such notifications could be added to the GUI," and there is ""keypoololdest"" in RPC ""getinfo"""," but for for all practical purposes deterministic wallets would be better. (I\\\'m also working on a feature that lists the change addresses in ""Used receiving addresses""", this may help a bit too)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,8,2013-12-08 23:47:13,878.93,,,1,"b""b' @laanwj Being able to see what change address will be used (and modify it if you want  set default behavior) would definitely be very helpful. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3371,closed,-,-,-,3,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,opened,2013-12-10 19:23:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,title,2013-12-10 19:23:39,00:00,,1,,"b""b' Duplicated addresses?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,body,2013-12-10 19:23:39,00:00,,,1,"b'b\' I\\\'m on version v0.8.5.0-gef14a26-beta from deb. After some cleanup I noticed that some addresses get kinda-duplicates: ![shot]url  The ""explain"" address was created by normally clicking ""new address"". """" on the other hand was created by importprivkey. In both cases", I wanted to  one . But somehow (after some time, not immediately) I got two. What\\\'s more these additional accounts do not show in listaccounts: Now sure what else I can show to help debug the problem if there is anything, please let me know.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,1,2013-12-10 19:23:39,641.97,1,,,"b'b"" Do not combine use of labels in the GUI and the accounts feature.Due to historical reasons these use the same wallet data in different ways. This causes strange conflicts. You won\'t lose coins due to it"," but don\'t expect it to do anything sensible either.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,closed,2013-12-23 06:05:37,641.97,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,reopened,2013-12-23 06:07:36,1.98,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,2,2013-12-10 19:23:39,76.57,1,,,b'b\' Sorry," I have no idea what you are talking about. I checked ""listaccounts"" only after I saw duplicated labels", with different numbers in bitcoin-qt.Again," to reiterate: I created an address by pressing ""new address"" in receive window", added it a label. After some time I got another address, with the same label," added.Same thing happened when I loaded privkey using ""importprivkey"" from debug window. The problem is not in what listaccounts shows", but rather in duplicated addresses in normal window, created by who-knows-what.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,3,2013-12-10 19:23:39,7.97,,1,,"b""b' So you are not using any of the account functionality through RPC? And purely using the GUI"," except for  ? BTW: it appears that the addresses are not duplicated. There are just multiple addresses with the same label.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,4,2013-12-10 19:23:39,5.83,,1,,"b""b' Yes. The only thing I did not-clicking was importprivkey. And I know the address is not the same"," but still why is it there? How come it showed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,5,2013-12-10 19:23:39,8.03,,1,,"b'b"" Don\'t know", it does sound like a kind of bug. It shouldn\'t be creating new addresses automatically. Might be an issue while editing the label. Then after restarting the client there are suddenly more addresses. I remember a few problems with the address list have been fixed in 0.9," this may be one of them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,closed,2014-07-31 07:07:02,59.43,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3384,closed,-,-,-,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,opened,2013-12-15 19:25:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,title,2013-12-15 19:25:20,00:00,,1,,"b""b' Unit tests for uint256.h'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,body,2013-12-15 19:25:20,00:00,,1,,"b""b' Unit tests for uint256.h. The file uint160_ is no longer needed. The ad-hoc tests which were in uint256.h are also no longer needed. The new tests achieve 100% coverage.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,1,2013-12-15 19:25:20,92.15,,,1,"b""b' Very nice"," just a few nits. There are several indentation errors though (? please only use 4 spaces for indent).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,closed,2013-12-15 21:14:14,108.9,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,2,2013-12-15 19:25:20,17.22,,1,,"b""b' Closed while minor points are being fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,3,2013-12-15 19:25:20,6.28,,1,,"b""b' No need to close for minor fixes. You can just re-push to the same branch to update the pull request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,4,2013-12-15 19:25:20,16.07,,1,,"b'b"" Yeah", problem is I won\'t be able to finish this until Wednesday," no need to clutter things until then.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,reopened,2013-12-18 08:41:02,686.8,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,5,2013-12-15 19:25:20,626.1,,,1,"b'b"" Changes look good. But before this can be merged", please reorganize the commits a bit. You don\'t need to squash everything into one commit. For example d1490c6 and d1490c6 make sense as seperate ones," but do roll the dummy commit and indentation fixes into your original code changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,6,2013-12-15 19:25:20,477.43,,,1,"b'b"" Thank you", Wladimir. I\'m new to github and git," so I don\'t know yet how to do useful commit structures. I improved it. Let me know if you still see room for improvement.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,7,2013-12-15 19:25:20,1119.98,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,closed,2014-01-06 09:29:36,48.57,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3422,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,opened,2013-12-23 03:51:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,title,2013-12-23 03:51:57,00:00,1,,,"b'b\' error: {""code"":-4","message"":""Error adding key to wallet""}\''
bitcoin	3456	closed	body	devilankur18	2013-12-23 03:51:57	00:00		+1		b""b' I am not able to import a private key using the importpvtkey command. I tried with with and without passphase set, it always throw the error Here is the getinfo about my setup. I am on ubuntu 12.04. Any suggestions ?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,1,2013-12-23 03:51:57,131.08,,1,,"b""b' What version of bitcoin?From the GUI or directly from RPC?Any more specific error in ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,2,2013-12-23 03:51:57,17.28,1,,,"b""b' @laanwj  Bitcoind version 8.6.  No error messages in the  but there some messages related to flushing the wallet  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,closed,2013-12-23 06:20:19,148.37,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,reopened,2013-12-23 06:20:33,0.23,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,3,2013-12-23 03:51:57,37.65,1,,,"b'b"" My guess is that your wallet is still locked somehow and that you need to unlock it.  does not check for the wallet to be locked and gives a weird error message if that is still the case (see #957", #3457). The only other cause of this error (AFAIK) would be a database problem with your wallet," so let\'s first completely rule out the wallet lock status.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,4,2013-12-23 03:51:57,197.38,1,,,"b""b' The most common cause of this error message is actually that one already has the key imported. IIRC"," git head has a specific message for that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,5,2013-12-23 03:51:57,3.17,,1,,"b'b"" Yes"," there is a check for that nowadays. Didn\'t know that wasn\'t in 0.8.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,6,2013-12-23 03:51:57,257.55,,1,,"b""b' @laanwj", Originally when I tried, the wallet does not even have the passphasse, so there we can rule out the case of locked. Later I added passphase and tried. I have posted getinfo, it has unlock_until set to 1387806110 which shows wallet is unlocked. @sipa @laanwj In 8.6, there is no check for existing keys, but I have tried with different keys," none of them worked url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,7,2013-12-23 03:51:57,1064.47,,1,,"b""b' Does this still happen with 0.9.1?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,closed,2015-05-18 11:22:53,302.33,4,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3456,closed,-,-,-,4,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,opened,2014-01-07 17:46:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,title,2014-01-07 17:46:22,00:00,,1,,"b""b' Current master crashes in wine'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,body,2014-01-07 17:46:22,00:00,1,,,"b'b"" Current master (cross compiled using gitian) crashes in wine. If this doesn\'t happen on windows proper (unsure) this is a low priority issue. First", after connecting to a few nodes, it gives a warning about the time  , and then after at most a minute it crashes with a segmentation fault. It looks like a crash in with a NULL pointer," called some place within the networking code. I\'ll need to compile with debugging information to find out more. No information or messages explaining the crash end up in .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,1,2014-01-07 17:46:22,792.88,,1,,"b'b"" I\'ve not seen this on Windows recently.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,2,2014-01-07 17:46:22,167.48,1,,,"b'b"" url It is unclear if it is related to what @laanwj is experiencing", but we found a network related issue with boost-1.54 on win32 builds.  Litecoin\'s 0.8.6.1 gitian win32 was upgraded from boost-1.50 to boost-1.54 to match Bitcoin master.  Some (but not all) Windows users have an issue where networking just stops randomly after a few hours.  getpeerinfo thinks it still has peers but netstat shows they are long gone.  GUI still operates," networking just stops and  shows things like this: Downgrading back to boost-1.50 seems to fix the issue.  I am attempting to narrow it down more. I think merely upgrading Bitcoin 0.8.6 gitian win32 to boost-1.54 will have the same problem.  It is entirely likely bitcoin master gitian win32 is similarly affected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,3,2014-01-07 17:46:22,171.6,,1,,"b'b"" Today I\'ve been completely unable to reproduce this issue.That may have to do with my attempt at adding debug information; Heisenbug? will try a clean build and see if it brings back the issue. Edit: yep", without debug information it\'s back! :-( Something all the crashing sessions have in common: Either all the peers return crazy values, or GetTime returns an invalid value (this is subtracted). My bet is on the second. Yep, GetTime returns junk (it thinks it\'s in the far far future)," peer is well-behaved:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,4,2014-01-07 17:46:22,181.33,,1,,"b""b' Ok this is weird.time(NULL) returns (random?) data in the upper part of the uint64_t. If I add an explicit &0xffffffff in GetTime"," it works.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,5,2014-01-07 17:46:22,8.13,,1,,"b'b"" Maybe time_t on windows natively returns a 32-bit integer"," but it\'s declared as returning a 64-bit one?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,6,2014-01-07 17:46:22,30.32,,1,,"b""b' That could be the case.The curious thing is that the upper word is always the same"," so it is not random stack corruption being returned: sizeof(time_t) is 8 bytes on mingw.So it may indeed be a misdefinition somewhere (but not in bitcoin -it also happens with a minimal test).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,7,2014-01-07 17:46:22,5.27,,1,,"b'b"" I\'ve narrowed down the problem to: This option changes the size of time_t from 4 to 8"," and adds the random gunk on time(NULL). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,8,2014-01-07 17:46:22,20.88,1,,,"b'b"" Ok", this is confirmed a wine bug. wine 1.4 (Ubuntu 12.04): wine 1.4.1 (Ubuntu 13.10): Edit: also checked that the crash doesn\'t happen when making GetTime() return outrageous times in general. That, too," is a wine issue probably with time_t size conflict.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,closed,2014-01-08 16:46:38,1380.27,3,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,9,2014-01-07 17:46:22,341.33,,1,,"b'b"" This looks to be url  . It\'s a toolchain issue that will manifest when building with D_FILE_OFFSET_BITS=64 (which is correct). This value should not affect time_t", but in the buggy versions it did. sizeof(time_t) should be 4 for win32. If it\'s 8, the headers are buggy and runtime will be unpredictable. At runtime, a 4byte value is stored in an 8byte var," leaving half uninit\'d. Using a recent mingw it\'s 4 as expected. I\'m assuming gitian\'s version still has this bug. This should be reopened. It\'s a build-time issue that may manifest at runtime.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,reopened,2014-01-09 08:06:59,920.35,3,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,10,2014-01-07 17:46:22,583.07,,1,,"b""b' @theuni In that case we should define  if mingw. This overrides the file offset bits...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,11,2014-01-07 17:46:22,20.88,1,,,"b""b' See #3497  FYI the output with (correct):  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,12,2014-01-07 17:46:22,28.82,,1,,"b""b' Discussion continues in #3497'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,closed,2014-01-09 08:58:22,51.38,4,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3494,closed,-,-,-,4,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,opened,2014-01-08 07:48:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,title,2014-01-08 07:48:15,00:00,,1,,"b""b' bitcoind crashes due to error 30974'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,body,2014-01-08 07:48:15,00:00,,,1,"b'b"" Bitcoind is periodically crashing due to a problem accessing ", however there\'s no apparent reason why it would need to do so at all since this node has never been used to send or receive bitcoins. 2014-01-08 02:07:57 AcceptToMemoryPool: 151.228.231.138:35147 /Satoshi:0.8.6/ : accepted ce73721e983ac13a18a35fb6e4f8acbcffc51c1f9d78a383292f82ea08172385 (poolsz 731)2014-01-08 02:07:57 received block 00000000000000026119785e54afcf5ec2c50b17fbdbf8ab2b2731f0dc971b492014-01-08 02:08:02 Committing 1618 changed transactions to coin database...2014-01-08 02:08:02 *** System error: CDB() : can\'t open database file , error -309742014-01-08 02:08:02 Error: System error: CDB() : can\'t open database file , error -309742014-01-08 02:08:02 ERROR: AcceptBlock() : AddToBlockIndex failed2014-01-08 02:08:02 ERROR: ProcessBlock() : AcceptBlock FAILED2014-01-08 02:08:02 received getdata (2 invsz)2014-01-08 02:08:02 AcceptToMemoryPool: 60.242.39.39:55343 /Satoshi:0.8.6/ : accepted 599cfe1a8be361b8e1ed3ed260381d8343da7d8f7c8a9f3350d44e4248c68f03 (poolsz 314)2014-01-08 02:08:02 received getdata for: tx ce73721e983ac13a18a35fb6e4f8acbcffc51c1f9d78a383292f82ea081723852014-01-08 02:08:02 Added 1 addresses from 130.83.163.196: 253 tried, 14411 new2014-01-08 02:08:02 Added 1 addresses from 192.168.50.13: 253 tried, 14411 new2014-01-08 02:08:02 Added 1 addresses from 114.142.212.128: 253 tried," 14411 new2014-01-08 02:08:02 Shutdown : In progress...2014-01-08 02:08:02 addcon thread interrupt2014-01-08 02:08:02 opencon thread interrupt2014-01-08 02:08:02 msghand thread interrupt2014-01-08 02:08:02 dumpaddr thread stop2014-01-08 02:08:02 net thread interrupt2014-01-08 02:08:02 Flush(false)2014-01-08 02:08:02  refcount=02014-01-08 02:08:02  checkpoint2014-01-08 02:08:02  detach2014-01-08 02:08:02  closed2014-01-08 02:08:02 DBFlush(false) ended     1ms2014-01-08 02:08:02 StopNode()2014-01-08 02:08:03 Flushed 14664 addresses to 1006ms""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,1,2014-01-08 07:48:15,8.32,,1,,"b'b"" Looking on google", error -30974 is DB_VERSION_MISMATCH This means you are probably using bitcoin compiled against BDB 4.8 and BDB 5.1 interchangeably. Using a wallet produced with BDB 5.1 with BDB 4.8 causes this error (no backward compatibility).Just move the wallet out of the way and it should work again. If it was never used, at least you don\'t need to recover anything. BTW: Git master has a compilation option as well as as  ," this may help you in this case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,closed,2014-01-08 07:56:34,8.32,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,2,2014-01-08 07:48:15,4.32,,1,,"b'b\' ""Just move the wallet out of the way and it should work again."" Every time this happens I just delete the wallet entirely and start up again. After a several days it happens again. I\\\'m not recompiling bitcoind", or taking any actions at all that should affect the wallet, in between manifestations of this bug.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,3,2014-01-08 07:48:15,7.15,1,,,"b'b"" That\'s strange...Are you removing any other wallet-related files (for example"," the database environment) from ~/.bitcoin manually between startups?Or maybe doing unclean shutdowns?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,4,2014-01-08 07:48:15,4.32,,1,,"b'b"" I haven\'t been removing the database directory. I can try that. Haven\'t had any unclean shutdowns in recent memory"," just clean shutdowns and the ones caused by this error.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,reopened,2014-01-08 08:13:25,16.85,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,5,2014-01-08 07:48:15,2.93,,1,,"b""b' I just did a clean shutdown and noted the database directory was not present after the shutdown (did not need to delete it manually). I deleted the new  it just got done creating and restarted again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,6,2014-01-08 07:48:15,8.77,1,,,"b""b' This is almost scary.Could there be some other process messing with your ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,7,2014-01-08 07:48:15,3.53,,1,,"b'b"" The node is running in a headless virtual machine with nothing else running except bitcoind (that I\'ve put there anyway). I can start keeping copies of the problematic  files.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,8,2014-01-08 07:48:15,582.97,,1,,"b'b"" I\'d recommend upgrading to 0.9.x and running with (or if you compile it yourself"," compiling bitcoin without wallet support with  ).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,closed,2015-05-18 11:16:27,183.03,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3496,closed,-,-,-,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,opened,2014-01-13 04:39:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,title,2014-01-13 04:39:49,00:00,,1,,"b""b' [Qt] Permanently store requested payments in wallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,body,2014-01-13 04:39:49,00:00,,1,,"b""b' see title. Did some quick testing"," seems to work...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,1,2014-01-13 04:39:49,147.45,,,1,"b'b"" Thanks for having a shot at this. I agree with the UI part. However the core part should be more generic. The core doesn\'t need to know about UI-only data structures such as CReceiveRequestEntry. My idea was to offer a interface for storing general-purpose data on destinations in the wallet. See url  and store payment requests and bitcoin URIs in there. However", it is nearly impossible to get changes to the core wallet code reviewed (and you need very good ), and I had tons of other things to do," this needs to be re-thought post-0.9.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,2,2014-01-13 04:39:49,407.37,,,1,"b""b' How about using "," serializing the SendCoinsRecipient as  and storing this in the wallet. Could this work / Is a good idea?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,3,2014-01-13 04:39:49,9.35,,1,,"b'b"" I\'d rather not import another serialization format. We can use the bitcoin serialization format (used for most stuff in the wallet) or google protobuf (as used for payment requests). The important part is that the serialization happens on the  side", and not in the core," as to not burden the core with knowledge it doesn\'t need to know about.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,4,2014-01-13 04:39:49,24.17,,1,,b'b\' Ah yes, having 3 serialization formats makes no sense. So even if I implement this in on top of #3281 ," there is no chance of getting ""storing the requests permanently"" into 0.9?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,5,2014-01-13 04:39:49,12.57,,,1,"b'b"" It\'s most likely if you keep the core changes as small and non-invasive as possible. Basing on #3281 is a good idea I think as it only adds a minimal amount of code. I can\'t guarantee anything though. I\'ll just merge GUI changes"," but core changes need more extensive scrutiny.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,6,2014-01-13 04:39:49,11.03,,,1,"b""b' Ok thanks"," I will take a look at this. Though I cant promise anything at this point. So close for now and maybe reopen on top of #3281...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,closed,2014-01-13 14:51:45,611.93,0,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,7,2014-01-13 04:39:49,44.33,,,1,"b'b"" Ok"," in any case it\'d be very welcome!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,reopened,2014-01-14 04:36:20,824.58,0,4,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,8,2014-01-13 04:39:49,787.13,,1,,"b""b' Now based on #3281  When loading from wallet the sorting of the table is different than before. But I would want to add sorting in general to the table. So lets leave this sorting-problem for another pull.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,9,2014-01-13 04:39:49,413.1,,,1,"b""b' Implementation looks good"," I plan to test this in the coming week.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,10,2014-01-13 04:39:49,2.2,,1,,"b'b"" Locking: Don\'t forget that the DestData functions on CWallet (just like the other address book manipulation functions) require a lock on cs_wallet before calling"," as they don\'t acquire the lock themselves.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,11,2014-01-13 04:39:49,281.35,,,1,"b""b' Sounds good. Added the lock.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,12,2014-01-13 04:39:49,1005.18,,,1,"b""b' Indeed"," deleting multiple rows at once seems to be broken. It deletes a different subset than asked (only visible after a restart). Apart from that it works great. Changing the ordering is not a big issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,13,2014-01-13 04:39:49,507.78,,,1,b'b\' Yes," I did not realize you are supposed to delete multiple rows there... Now fixed.@emmix Many thanks for pointing this out. I also added a third commit ""Add sorting feature"". Default is by date desc", fixing the ordering issue.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,14,2014-01-13 04:39:49,8.68,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,15,2014-01-13 04:39:49,841.38,,,1,b'b\' I have some . What do you think about them? 1) display (no amount) instead of 0.00," similar to (no label) (no message) 2) rename table headline ""Requested payments"" =3) Change description from   ""Use this form to request payments.""   to   ""Use this form to create bitcoin addresses and URIs""   I dont like the term request payment. Someone may think you are actually requesting something   from the network"," but you are just creating a request.  4) Rename button ""Request payment"" to ""Create "" or ""Create payment information""   (Could also say ""generate"" instead of create) 5) Move this button to the left aligned with the textfields", otherwise the mouse ways are long.   Put Clear button right to this button or even remove Clear button, with only 3 fields there," the   Clear button is not so important. 6) Write a sentence above the 2 fields amount and message:   ""Amount and message are useful when using bitcoin URIs (bitcoin:1abc...)   They appear in someones client when clicking the URI""   Otherwise people may be confused and think they always have to specify the amount now", to receive coins. 7) What is the intention with the message field? Shouldnt this appear in sendcoinsdialog," when I click an URI. Is this field even used anywhere currently? Should I implement this? If I understand this correctly the message is ignored when clicking on a simple URI. 8) Emphasize all fields being optional a little better:   ""All fields are optional!"" or   ""All fields are OPTIONAL""   or even write next to every label (optional) 9) Draw a border around the upper form elements. 10) How about instead of the checkbox ""Reuse an existing address"" make a combo box ""Address:""   default is ""Generate new bitcoin address (recommended)"" and then fill the combo with all addresses ordered by label"," address? Combo box could be placed below ""Label"" above message and amount.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,16,2014-01-13 04:39:49,38.93,,1,,b'b\' 1) ok 2) History may be too general, don\\\'t forget there is transaction history too 3/4) But eventually this form will be used to create payment requests (BIP 0070). It doesn\\\'t do that yet, which may be confusing," sure...Maybe a better word would be ""invoice""? 5) Aligning the \\\'action\\\' button to the right and the clear button to the left is consistent with the \\\'send\\\' tab. Don\\\'t change this individually. 6) Fine with me 7) The message is a standard field that gets embedded in the bitcoin: URI. It is a message for the recipient of the ""invoice"". Our client doesn\\\'t use it currently"," but the idea is that it gets saved with the transaction at the sender (it does not get sent over the network).Maybe  it for now? 8) Good idea. I like ""All fields are OPTIONAL"". Don\\\'t write it next to every label", I tried that and it\\\'s ugly (also tried using \\\\* and put the message below, but it looks strange if it applies to all fields). 9) Fine with me 10) The number of addresses in the wallet can be huge, please don\\\'t put them in a combo box. We want to go away from the idea of addresses being something you have easily graspable, limited quantity of.  I\\\'m not even sure we should have this option at all.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,17,2014-01-13 04:39:49,5.23,,1,,"b""b' Please make a new issue for those changes. This pull request should be ready for  right? No need to hold it up.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,18,2014-01-13 04:39:49,504.9,,,1,"b""b' @laanwj @Diapolo I do prevent storing to CNoDestination", but in , CWallet::AddDestData. I hope this is ok. @laanwj Thanks for your feedback, I will open a new pull for the other changes. Yes this one is ready for testing. I did not follow any testplan, just randomly sorted, added, deleted rows, then restart to check, if everything gets restored correctly. Works for me so far. @Diapolo Unless there is any other update to this pull," I will put your nits in a future pull request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,closed,2014-01-22 07:08:05,151.75,0,9,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3521,closed,-,-,-,0,9,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,opened,2014-01-13 15:56:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,title,2014-01-13 15:56:13,00:00,,1,,"b""b' build: update win32 deps'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,body,2014-01-13 15:56:13,00:00,,1,,"b""b' Update win32 deps:Qt 5.2.0 (use below zlib and libpng instead of built-in ancient ones)miniupnpc-1.8openssl-1.0.1ezlib-1.2.8libpng-1.6.8qrencode-3.4.3 Also fixes #3522'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,1,2014-01-13 15:56:13,1007.87,,1,,"b""b' Closing this for now"," will reopen after upgrading other win32 deps as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,closed,2014-01-14 08:44:05,1007.87,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,reopened,2014-01-14 10:01:06,77.02,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,2,2014-01-13 15:56:13,86.4,,1,,"b""b' @wtogami ready for testing again"," any  issues should be solved'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,3,2014-01-13 15:56:13,827.02,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,4,2014-01-13 15:56:13,307.1,,1,,"b""b' Worked for me.  I suggest double checking that the source tarballs match what is shipped by various distributions before committing.In some cases thankfully they GPG signed it.These are the other new sources.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,5,2014-01-13 15:56:13,54.07,,1,,"b""b' url Matches exactly with date 14-Aug-2013 url Matches extracted archive with date 07-Jun-2013'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,6,2014-01-13 15:56:13,5.13,,1,,"b""b' IMHO", it would be cleaner to squash all three of these commits," or at least the one-liner release notes commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,7,2014-01-13 15:56:13,179.15,,1,,"b'b"" The commits are atomic and are separate changes", so I don\'t see much point in squashing them," but if you insist...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,8,2014-01-13 15:56:13,197.95,,1,,"b""b' ACK.  No need to merge the commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,closed,2014-01-15 12:20:58,139.87,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3527,closed,-,-,-,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,opened,2014-02-04 20:27:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,title,2014-02-04 20:27:37,00:00,,1,,"b""b' gitian: Make windows dependencies outputs fully deterministic'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,body,2014-02-04 20:27:37,00:00,,1,,"b""b' Sort .zip order"," and other small determinism changes to make sure builds are repeatable for windows deps. These changes are just to get the intermediate outputs deterministic. There should be no resulting changes to the end product so the version numbers were not bumped. Boost windows: Deps windows: Protobuf windows: Qt windows:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,closed,2014-02-05 07:21:02,653.42,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,reopened,2014-02-05 14:11:08,410.1,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,1,2014-02-04 20:27:37,1145.07,,1,,"b""b' Output after building 0.9.0rc1 with these descriptors:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,2,2014-02-04 20:27:37,1163.37,,1,,"b'b"" It looks like the Qt dependency changes every day. Subsequently"," the and testchange as well.This reeks like some embedded date (but not time) somewhere. Either that or the ordering of QHash now changes every day :-)I\'ll store today\'s version and compare it tomorrow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,3,2014-02-04 20:27:37,116.93,,1,,"b""b' @laanwj Store and compare tomorrow? Why not just set the clock ahead by a day?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,4,2014-02-04 20:27:37,22.88,1,,,"b'b"" Because I don\'t feel like messing up my system clock.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,5,2014-02-04 20:27:37,759.15,,,1,"b'b"" Building with VirtualBox: Boost win matches: bitcoin-deps-win matches: Protobuf mismatch: Qt mismatch: Final output; as expected", I\'m guessing," qt binaries do not match: All of the -gitian*.zip inputs uploaded to /~gavin/""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,6,2014-02-04 20:27:37,388.32,,,1,"b""b' Thanks", as I expected, some embedded date," versus  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,7,2014-02-04 20:27:37,89.28,,1,,"b""b' Ok that issue should be solved"," updated the pull as well as my posts with sha256sums.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,closed,2014-02-10 17:23:32,192.4,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,8,2014-02-04 20:27:37,459.1,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3625,closed,-,-,-,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,opened,2014-02-11 19:40:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,title,2014-02-11 19:40:40,00:00,,1,,"b""b' Adds transaction index by address (updates #2802 to current master)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,body,2014-02-11 19:40:40,00:00,1,,,"b'b"" This branch updates the original transaction index by address patch by sipa in #2802 to work with the current master. To get here", successive portions of the master branch were merged into the addrindex branch, resolving merge conflicts along the way.  There was no need to change any of sipa\'s original code, other than to accommodate things like splitting out bitcoin-cli or other code reorganizations.  This did take a lot of merges; in retrospect it might have been faster to just re-implement the changes starting with the current master.  Nonetheless, doing it this way preserves all the history (and blame) and allows backtracking along the branch to see what fixups were needed. I\'ve tested with with txindex=1 and addrindex=1 in  (using -reindex on cli), and am able to make queries with bitcoin-cli: (output suppressed) In the original pull request, there was some debate about whether the reference client should include this capability, for fear that some would come to rely on it; I don\'t see the concern and in fact it will allow me personally to implement some lite wallet functionality I\'ve been wanting to pursue. Also," it may be useful in helping deal with the current TX malleability issues by helping to identify actual transactions  addresses instead of just by txid.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,closed,2014-02-11 19:43:14,2.57,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,reopened,2014-02-11 19:43:16,0.03,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,1,2014-02-11 19:40:40,3.2,1,,,"b'b"" Sorry", I misclicked," please ignore. You\'ll need to get rid of the merge commits though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,2,2014-02-11 19:40:40,1.83,,1,,"b'b"" I don\'t mind squashing all of these into a new single commit; however", this will mean that your original contributions will show up as done by me instead.  If that is not a problem," I\'ll do this right now and update the PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,3,2014-02-11 19:40:40,0.23,1,,,b'b\' Also," I don\\\'t understand how you can call it a ""lite"" wallet if it requires a fully-indexed full node behind the scenes. That\\\'s exactly why I hate this.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,4,2014-02-11 19:40:40,1.75,1,,,"b""b' Poor terminology.  I have a personal need to have this index"," and I also already run multiple copies of bitcoind fully indexed for other reasons.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,5,2014-02-11 19:40:40,0.45,,1,,"b""b' @jmcorgan Just cherry-pick the original commits on top of master. Or commit with date=... author=...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,6,2014-02-11 19:40:40,1.35,1,,,"b'b"" @luke-jr: unfortunately"," I can\'t cherry-pick like that; the original commits were a year ago and way too much has changed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,7,2014-02-11 19:40:40,1.18,,1,,"b""b' @jmcorgan Just resolve the conflicts like you had to for this..'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,8,2014-02-11 19:40:40,4.08,,1,,"b'b"" @luke-jr The conflicts were extensive and spread over many files", including through file renames and code movement to new binaries (like bitcoin-cli).  I think I\'ll just squash this whole branch to a commit, make sipa the author, and go with it.  It\'s not like I wrote any of the actual features," just the drudge work to get them current.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,9,2014-02-11 19:40:40,8.62,,1,,"b""b' This has been squashed to a single commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,10,2014-02-11 19:40:40,15.33,,,1,"b""b' nice!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,11,2014-02-11 19:40:40,2.32,1,,,"b'b"" Wanting this to implement a wallet still sounds like a horrible idea. It\'s awfully inefficient"," and will only work with confirmed transactions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,12,2014-02-11 19:40:40,16.72,,1,,"b'b"" Well", it does what I need, that\'s why I spent the time and effort to refresh it. Maybe it is useful to others," maybe notyou guys decide.  If it doesn\'t get merged I\'ll try to keep it fresh on my repo as master changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,13,2014-02-11 19:40:40,1285.23,,1,,"b""b' Rebased off 0.9.0rc2"," minor conflict in .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,14,2014-02-11 19:40:40,1255.05,,1,,"b""b' Rebased off master to accommodate rpc call table reorg conflict.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,15,2014-02-11 19:40:40,92.55,,1,,"b""b' Rebased on current master with minor fixups (**func** usage", switch away from boost::int64_t).  Also," there is now a addrindex-0.9.2 branch in my repo with the same functionality that is rebased on v0.9.2rc2.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,16,2014-02-11 19:40:40,630.18,,1,,"b""b' so the main reason against implementing this is that there is no equivalent index over the utxo set"," so people would start depending on a fully indexed blockchain?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,17,2014-02-11 19:40:40,281.05,,1,,"b'b"" Right", there are other tools that can be used to index the entire block chain if you need to, for example for forensic reasons. One of these is Bitpay\'s insight. Anything that relies on indexing the whole block chain doesn\'t belong in Bitcoin Core. These indices could be anything," depending on the kind of queries you want to do. So use the right tool for the job. From mailing list discussion a similar index for the UTXO set would be acceptable. It would be a much smaller index and only relies on data that is needed anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,18,2014-02-11 19:40:40,1152.13,,1,,"b""b' Minor rebase to accommodate CTransaction and POW refactoring.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,19,2014-02-11 19:40:40,837.47,,1,,"b""b' Minor rebase to accommodate #4415 merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,20,2014-02-11 19:40:40,17.42,,,1,"b""b' Minor rebase to accommodate smart fees merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,21,2014-02-11 19:40:40,436.8,,1,,"b""b' Minor rebase for  changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,22,2014-02-11 19:40:40,938.3,,1,,"b""b' Minor rebase to accommodate #4593 changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,23,2014-02-11 19:40:40,986.7,,1,,"b""b' Minor rebase to accommodate RPC server help categorization.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,24,2014-02-11 19:40:40,309.87,,1,,"b""b' Minor rebase to accommodate #4656.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,25,2014-02-11 19:40:40,373.55,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,26,2014-02-11 19:40:40,978.28,,1,,"b""b' @gmaxwell mentioned this was buggy hope he can elaborate.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,27,2014-02-11 19:40:40,438.07,,1,,"b""b' @luke-jr @gmaxwell Context?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,28,2014-02-11 19:40:40,1194.3,,1,,"b""b' (1) Still waiting on @gmaxwell comment?(2) Intersects with #5048 ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,29,2014-02-11 19:40:40,327.43,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,30,2014-02-11 19:40:40,1354.0,,,1,"b'b"" @gmaxwell: I\'m very interested in learning about potential bugs here as well. The only issue that I noticed", besides a fixed FD leak," and one should be aware of: orphaned transactions are not rermoved from the index.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,31,2014-02-11 19:40:40,57.42,,1,,"b'b"" I wouldn\'t expect orphaned transactions to be removed from the index...?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,32,2014-02-11 19:40:40,2.63,,1,,"b'b"" They\'re kept in -txindex as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,33,2014-02-11 19:40:40,8.0,,1,,"b'b"" What I observed was missing transactions. But I can\'t tell why they were missing... e.g. perhaps they were inserted and reorged out. I\'m absolutely sure they were missing"," since ... thats easy to reliably test.. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,34,2014-02-11 19:40:40,19.98,,,1,"b'b"" Bad choice of words: returning and keeping orphaned transactions is fine and not an issue per se"," but it wasn\'t something I expected. Thanks for information.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,35,2014-02-11 19:40:40,1439.03,,,1,"b""b' We have ported this to the current branch of bitcoin if anyone is still interested url  by @reorder'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,36,2014-02-11 19:40:40,1033.33,,1,,"b'b"" i hope this hasn\'t been shelved""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,37,2014-02-11 19:40:40,489.6,,,1,"b'b"" I dont know if there is still interest in this PR. I have it adapted for bitcoin 0.10 here url  It\'s been used in deployment now for many months", including by Counterparty without any problems or missing transactions. @gmaxwell unless there is a concrete example of it missing data out," I would suggest it\'s been well tested to date. Counterparty has been stress testing it considerably in their Counterwallet web-wallet and have not reported any problems. I assume if it was wanted it would have to be rebased to since 0.10 is now maintenance only afaik.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,38,2014-02-11 19:40:40,33.92,,,1,b'b\' @btcdrak: it\\\'s great that you maintain the branch and I\\\'m sure there are a few using it. For a longer time the Counterparty integration did not filter orphaned transactions, and just used all of them, and this was basically unnoticed, until pointed out," if I recall correctly. So when you say ""stress tested"""," does this equal ""really tested"" or ""there were no complaints so far""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,39,2014-02-11 19:40:40,478.48,,1,,"b'b"" @dexX7 Counterparty (and other users of addrindex) rely on \'confirmations\' field of transaction record to be non-zero"," which only holds if transaction block is in mapBlockIndex. I am not sure how are reorgs handled by current Counterparty code but it used to reparse blockchain tail and invalidate orphaned transactions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,40,2014-02-11 19:40:40,45.35,,,1,"b'b"" @reorder: I\'m not really familiar with how the address index is used in the context of XCP"," thus the curiosity. Also: url  :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,41,2014-02-11 19:40:40,20.53,,1,,"b'b\' @dexX7 I was actually assuming XCP logic is similar to what we have done in  using the same addrindex code: with Viacoin extremely short blocktime there happens a reorg or two every hour so handling it can indeed be considered ""stress tested"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,42,2014-02-11 19:40:40,47.55,,,1,"b'b"" @dexX7 Counterparty have relied exclusively on this patch for 5 months in production processing thousands of requests per day in ", I believe this counts as stress testing. In Viacoin\'s ClearingHouse we have relied on this patch for about 8 months and as reorder explains we have a lot more reorgs than the bitcoin blockchain. This is why I am confident that the patch, as it exists in my bitcoin fork for 0.10," works.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,43,2014-02-11 19:40:40,5.45,,,1,"b""b' Thanks for the follow up.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,44,2014-02-11 19:40:40,784.13,,1,,"b""b' @btcdrak  Here is a picture of results from running url  for 90 minutes this afternoon:This is on a t2.large instance with an SSD EBS drive. ![untitled_spreadsheet_-_google_sheets]url  Link to the data: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,45,2014-02-11 19:40:40,42.57,,,1,"b'b"" @deweller: so what did you learn", based on this data? There are a few things to keep in mind here:a great number of results is empty, because there is no transaction history yet (the delay grows proportionally to the number of results I\'m not sure, what exactly you want to test, but you\'re probably better off, if you\'d exclude empty results," and messure delays in  or similar.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,46,2014-02-11 19:40:40,136.8,1,,,"b'b"" We have been experiencing issues with delayed transaction creations in counterparty.  The problem became significantly worse during the recent spam attacks on the bitcoin network. Our preliminary tests pointed toward bitcoind responding very slowly to a RPC call.  So we ran some tests to see what kind of response we were getting from queries to the address index. I\'ve posted that data here for discussion and any clues on how to narrow the problem down further.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,47,2014-02-11 19:40:40,1022.47,1,,,"b""b' Leaning towards closing this pinging interested parties here for comment. Rationale:  For whatever reason", this seems stuck and not getting merged.  That is _not_ a judgement on the goal or code quality or a NAK," simply an observation over time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,48,2014-02-11 19:40:40,34.87,,1,,"b""b' I integrated this into my alt and find it very useful", i may try get time and submit a refactored version. IMO it is a feature well worth the effort as it reduces reliance on web explorers for information," maybe label it as an advanced option much like coin-control. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,49,2014-02-11 19:40:40,1365.97,,1,,"b'b"" Closing for aforementioned non-technical reasons.  I\'m hoping that someone will come along", volunteer as a maintainer of this change," and work to shepherd this in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,closed,2015-09-15 17:14:12,1290.93,8,32,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3652,closed,-,-,-,8,32,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,opened,2014-02-13 09:55:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,title,2014-02-13 09:55:34,00:00,,1,,"b""b' base account name'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,body,2014-02-13 09:55:34,00:00,,1,,b'b\' The account system has basically a tree structure. I suggest creating a name for the root, instead of using an empty string," i.e. so that the root account has the name ""base"" for example (""root"" could be confused with user access rights). Empty strings are not a good choice for representing data. So instead of this  one would have this  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,1,2014-02-13 09:55:34,82.73,,1,,"b'b\' The account system does not have a tree structure. """" is not so much root"," as the ""use no account account"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,2,2014-02-13 09:55:34,15.3,,1,,b'b\' If there is anything a root," it is ""*"". But even in that case"," there\\\'s only a single level (with a default account """"", plus however many others you want).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,3,2014-02-13 09:55:34,68.42,,1,,"b""b' okay"," I can always use a base account myself I want to. the semantics are not entirely transparent at first sight.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,closed,2014-02-13 12:42:01,166.45,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,4,2014-02-13 09:55:34,110.02,1,,,"b'b\' The """" account is pretty lame.  We should follow git", and pick a name, but make that default easily changeable.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,reopened,2014-02-13 14:39:21,117.33,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,5,2014-02-13 09:55:34,8.07,,,1,"b'b"" I\'d rather get rid of accounts than encourage them further.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,6,2014-02-13 09:55:34,5.0,,1,,"b""b' because of the recent issue? making everything onchain would increase bandwidth at the moment blockchain tx are 30 = 350/sec. all the exchanges do roughly the same (perhaps 50-100/sec).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,7,2014-02-13 09:55:34,0.8,,1,,"b'b"" That\'s a fair opinion", too.  I stated on IRC yesterday that all we need is address tagging," quite similar to the old labels.  Someone with more time to care for a bolt-on accounting system can take it from there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,8,2014-02-13 09:55:34,0.55,,1,,"b""b' @benjyz No"," we are not talking about making things on-chain'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,9,2014-02-13 09:55:34,65.73,,1,,"b'b"" +1 @sipa There\'s so much broken with it and everyone wants something else from an acccounting system anyway"," it\'s kind of a layer violation to have it in bitcoind in the first place. Address tagging is enough to implement anything on top.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,10,2014-02-13 09:55:34,65.62,,,1,"b""b' tagging sounds good. are there any proposals for that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,11,2014-02-13 09:55:34,294.17,,,1,"b""b' Removing accounts sound like a very very nice idea!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,12,2014-02-13 09:55:34,966.02,,1,,b'b\' @benjyz A proposal:Leave the tagging of receiving addresses (like in the GUI and the argument to RPC) as it allows linking received transactions to customers," but remove the account ledger semi-balancesRename to  to  to  Rename optional argument of to  Deprecate the RPC command and any account ledger usageDeprecate the use of the account argument in and as well as  Deprecate the following:     Not sure about:  . Probably deprecate it. ""label address"" wouldn\\\'t really be a sensible thing.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,13,2014-02-13 09:55:34,133.57,,,1,b'b\' @laanwj what is the different between label and account? I need a move command to mirror my internal account system. I am ok with how accounts work at the moment, but it\\\'s quite non-obvious how to implement intermediary applications on top of bitcoind.  A basic use case is this. some  (trusted third party TTP) manages his own ledger. the users have accounts with that TTP. the TTP implements his own (web-) application, which has concepts of users," accounts and balances. the TTP provides a BTC address for deposits. The question is what gets done by an account system (application layer) and bitcoind ( layer). All of these transactions on the TTP ledger are internal to his wallet.  So the needed bitcoind base operations would be:set label (label  address)unset label (balance goes to the ""main"" label)move (labelA to labelB) The application operations would be:map user to BTC address for deposits (user  label  address)withdrawal functiontransact function (moving balances from userA to userB)users and labels are mapped in this database and synced Each request from the web application needs a sync with the application database", which is a costly operation. It would be better to have a hook mechanism, so that any outside transaction has a callback. It might be a good idea to have an opensource sample application to describe some use cases in detail. I\\\'m not sure what other consumers of bitcoind expect from such an intermediary layer.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,14,2014-02-13 09:55:34,1048.3,,1,,"b'b"" @benjyz Labels are simply names for addresses.  For receiving addresses this makes it possible to attribute an incoming transaction to a certain user or order. That\'s all. They do not relate to balances. If you manage money for users you need to keep track of your own accounting. This is outside the scope of the Bitcoin Core project.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,15,2014-02-13 09:55:34,0.53,,1,,"b""b' Closing in favor of #3816 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,closed,2014-03-18 09:40:23,1141.03,1,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3664,closed,-,-,-,1,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,opened,2014-02-21 04:44:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,title,2014-02-21 04:44:35,00:00,,1,,"b""b' GUI: Receive: Remove option to reuse a previous address'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,body,2014-02-21 04:44:35,00:00,,,1,"b'b\' This was justified by the need to ""resent"" an invoice", but now that we have the request history, that need should be gone.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,1,2014-02-21 04:44:35,48.97,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,2,2014-02-21 04:44:35,78.0,,1,,"b'b"" I added this option on purpose because I don\'t want to lose the older functionality of generating a QR code for previous addresses (which are not longer in the recent history). IMO removing it would be blunting a tool just to avoid people cutting themselves in the foot on purpose privacy-wise.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,3,2014-02-21 04:44:35,4.65,,1,,"b'b\' @laanwj How about importing all previous ""address book"" entries into the requested payments history?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,4,2014-02-21 04:44:35,70.57,1,,,"b'b"" Meh"," that would import all people\'s previous addresses (which can be a lot for old wallets) as ugly payment requests with missing fields.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,5,2014-02-21 04:44:35,150.35,,1,,"b""b' Closing this for now"," could be reopened at some point when deterministic wallets are implemented (then there is no excuse left to reuse addresses).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,closed,2014-03-16 10:37:07,352.53,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,6,2014-02-21 04:44:35,1255.4,,1,,"b""b' We have HD wallets now. Should this be reopened?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,reopened,2017-02-11 08:41:04,1323.95,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,7,2014-02-21 04:44:35,1378.02,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,8,2014-02-21 04:44:35,97.87,,1,,"b'b"" I don\'t think that the feature of [reusing previous address] is needed if you have a HD wallet.  However"," should we still provide this option for those who have old wallet?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,9,2014-02-21 04:44:35,342.78,,1,,"b""b' IMO the address reuse function should only be removed then  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,10,2014-02-21 04:44:35,1171.23,,1,,"b""b' Any plans to reduce the feature to HD wallets only?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,11,2014-02-21 04:44:35,448.95,,,1,"b'b"" Agree with @jonasschnelli"," though I\'m happy to do this anyway if we add an -upgradewallet for HD wallets and wait a release or two.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,12,2014-02-21 04:44:35,1226.52,,1,,"b'b"" Not sure. I think if we remove this feature"," it should be removed wholesale. Otherwise this code will likely sit untested and rot (there\'s no automated test for GUIs and everyone tests with new wallets...).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,13,2014-02-21 04:44:35,776.18,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,14,2014-02-21 04:44:35,1168.5,,,1,"b""b' ACK e1b7c7343 (see screenshots)  Note that it is still possible to regenerate QR codes of addresses where a QR code was previously generated. However"," it is not possible to generate QR codes for addresses which were generated by rpc (  et al.)  I think that is fine.  Before: ![screenshot from 2017-11-10 16-31-13]url After: ![screenshot from 2017-11-10 16-31-13]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,15,2014-02-21 04:44:35,523.67,,1,,"b""b' (If we want QR codes for past addresses in general"," we could possibly add a Show QR Code to the address book)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,16,2014-02-21 04:44:35,16.85,,1,,"b""b' utACK e1b7c7343f1d7f845e36a5aefda3db6056a7c350  @luke-jr: can you please remove the unused scope to make this PR ready for merge? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,17,2014-02-21 04:44:35,68.3,,1,,"b""b' Done'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,18,2014-02-21 04:44:35,620.2,,1,,"b""b' '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,closed,2017-11-11 18:33:39,592.58,1,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3716,closed,-,-,-,1,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,opened,2014-02-25 06:33:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,title,2014-02-25 06:33:24,00:00,,1,,"b'b"" Don\'t log IP addresses for transactions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,body,2014-02-25 06:33:24,00:00,,1,,"b'b"" Don\'t log IP addresses by default. Argument originally given in pull request #2126 by darkhosis and luke-jr.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,1,2014-02-25 06:33:24,17.85,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,2,2014-02-25 06:33:24,260.68,,,1,"b'b"" Personally", I don\'t think this change is a good idea. There are reasons why one might want to have this information. If you\'re worried about it, perhaps add an option to control it. It could even be off by default," but I don\'t want to make it impossible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,3,2014-02-25 06:33:24,8.9,1,,,"b'b"" You removed not only the IP adress but also the subversion. The version is very useful to know when a strange transaction comes in. All in all", I think this makes little sense. Are you afraid of people logging IPs? Well," the people that want to log IPs can simply patch the source code to do so. Or use a sniffing tool. Some sites such as  will already log your IP (see the sad story in #2653) and even make it queryable for all.  At this point if you don\'t want your IP all over the place you should use bitcoin behind Tor.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,4,2014-02-25 06:33:24,416.2,,,1,"b'b"" @laanwj Historically", we\'ve had a policy (there are PRs prior to #2126 also) to not log IP addresses. The reason being, that it makes bitcoin node logs a potentially valuable resource to , making a hassle for users. If an individual wants to patch it in (or even enable an option), that\'s fine," but having it enabled by default is IMO a real risk.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,5,2014-02-25 06:33:24,22.57,,1,,"b""b' I agree with @luke-jr here"," but we should perhaps allow enabling IP address logging somehow for debugging.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,6,2014-02-25 06:33:24,1.08,,,1,"b""b' The complaint against making logs valuable is really only about defaults"," options are fine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,7,2014-02-25 06:33:24,36.4,,,1,"b'b"" I\'m fine with making logging IPs an option that is off by default. BTW the respective commit ba6a4ea added IPs in various places (and there were others as well already) so it probably makes sense to generalize this and not single out this single occurence.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,8,2014-02-25 06:33:24,1.28,,1,,"b'b"" Well", right now this isn\'t implemented as an option as far as I can tell -it just strips it out completely. I wouldn\'t be very opposed to having it off by default, but it shouldn\'t be completely removed. Ninja edit: Yeah, as @laanwj says, it should definitely be changed across the board, if any change is made at all. (also," TIL that Github PR pages automatically update with new posts even while you\'re typing.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,9,2014-02-25 06:33:24,360.7,1,,,"b'b"" So", shall I change this pull request, and extend it to other areas so that IPs are logged, but only when a command line option is given, which is off by default? This is kinda what I did about 2 years ago (#1311), but perhaps policy has changed since then, although my code was pretty messy back then," so I\'m not surprised much of it was never pulled.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,10,2014-02-25 06:33:24,7.88,1,,,"b'b"" Right now I think the only IPs we log by default are connect messages\\xe2\\x80\\x94 and I actually don\'t see much harm in those. I\'d like to eventually move in the direction of keeping a ring buffer in memory and dumping it on crash (or on command)"," and otherwise logging very little to disk by default.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,11,2014-02-25 06:33:24,4.28,,,1,"b""b' @gmaxwell sounds like a good idea", well, more so on Windows," whereas on unix there are more system tools available for doing this externally to bitcoind.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,12,2014-02-25 06:33:24,79.48,,1,,"b""b' what purpose would logging IPs serve ? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,13,2014-02-25 06:33:24,1.23,,1,,"b'b"" it\'s useful for debugging. If some node is sending you garbage it\'s useful to be able to reconnect to it intentionally to see what its doing and reproduce the behavior.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,14,2014-02-25 06:33:24,609.17,1,,,"b'b"" @gmaxwell I think you\'re right. For example the mempool messages affected by this pull are not logged by default"," only if -debug=mempool is provided.Apart from that we log IPs for  version messages and misbehaving peers.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,15,2014-02-25 06:33:24,541.28,,,1,"b'b"" I\'ve just raised a pull request #3764 that hopefully addresses the points made. Thanks for any feedback on this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,closed,2014-02-27 22:02:31,929.12,4,7,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,16,2014-02-25 06:33:24,2.82,,1,,"b'b"" @rebroad For future reference"," there\'s no need to create a new PR. If you just push to the same branch (DontLogTxIPaddresses) the PR gets updated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,17,2014-02-25 06:33:24,166.05,1,,,"b'b"" I\'m confused. I thought pull #3764 provided a solution to what people were requesting in this pull request", but the arguments I\'m hearing on there is that it adds an extra command line argument to what is already a list of too many command line options, yet," people on here are asking for it to be optional. Can someone please clarify what is wanted?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,reopened,2014-04-02 00:51:16,168.75,5,8,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,18,2014-02-25 06:33:24,433.68,,1,,"b'b"" How many times do we need to repeat this: there is no issue! In the default configuration (so if you don\'t enable -debug=net)", which this \'threat scenario\' is all about, those extra IP-logging messages are not logged. If you want extra network debugging you get IPs. That\'s exactly how it should be," IMO.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,closed,2014-05-28 13:15:13,743.95,5,9,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3741,closed,-,-,-,5,9,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,opened,2014-02-25 06:58:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,title,2014-02-25 06:58:51,00:00,,1,,"b""b' gitian: Make protobuf win32 intermediate output deterministic'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,body,2014-02-25 06:58:51,00:00,,1,,"b""b' While building protobuf in different environments we noticed that the host tool protoc was slightly different between builds (a symbol table sorting issue).Add a deterministic seed for gcc as well as disable zlib support just in case. Exected output is now: No effect on final executables so no version bump.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,1,2014-02-25 06:58:51,35.38,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,closed,2014-02-25 10:41:51,223.0,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,reopened,2014-02-25 10:42:27,0.6,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,2,2014-02-25 06:58:51,534.73,,1,,"b""b' Confirmed. ACK if I have a vote. My output :  e2e403e1a08869c7eed4d4293bce13d51ec6a63592918b90ae215a0eceb44cb4  protobuf-win32-2.5.0-gitian-r4.zip  a0999037e8b0ef9ade13efd88fee261ba401f5ca910068b7e0cd3262ba667db0  protobuf-win64-2.5.0-gitian-r4.zip 57f3f122255f7fb8044a1474cde2e62d9b90e8ce346d4e171b7ca8ab44a55a18  protobuf-win32-'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,closed,2014-02-25 16:34:45,352.3,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,3,2014-02-25 06:58:51,6.72,,,1,"b""b' @int03h thanks for testing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3742,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,opened,2014-03-01 19:01:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,title,2014-03-01 19:01:24,00:00,,1,,"b""b' Change linux  dir names to match windows'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,body,2014-03-01 19:01:24,00:00,,,1,"b'b"" At the moment", linux sigs are marked with just the version, while windows sigs are marked with the version with -win appended. I don\'t see any reason why this should be the case. The logic is the same as renaming  to gitian-. Also," this fixes an unbalanced paranthesis.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,1,2014-03-01 19:01:24,448.67,,1,,"b""b' NACK.  (if I may) As I understand it that line builds all of them. Not just linux. There is a comment about 3 lines up that says that but I agree the script it is calling is misleadingly named. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,2,2014-03-01 19:01:24,248.45,,,1,"b'b"" @int03h Uh", I\'m not sure exactly what you\'re saying. Have you ever done a gitian build? The gsign script signs whatever was just built. Right now, Linux and Windows builds are done separately. You can tell by the names of the descriptors. Right now the $VERSION-win dir is the signature for the Windows build," and $VERSION is the Linux build. This just makes it clear.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,3,2014-03-01 19:01:24,206.63,,1,,"b""b' Makes sense"," I suppose. This is too late for 0.9 but this convention can be used for the next release.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,4,2014-03-01 19:01:24,194.6,1,,,"b'b"" ...I must have been tired or distracted or something", not everything\'s properly changed," etc. I\'ll redo this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,closed,2014-03-02 13:19:45,1098.35,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,5,2014-03-01 19:01:24,240.57,,1,,"b'b"" Okay"," let\'s try this again...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,reopened,2014-03-02 17:20:19,240.57,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,6,2014-03-01 19:01:24,2.13,,1,,"b'b\' @laanwj What defines ""too late"" in this case? Why couldn\\\'t this go into 0.9.0", if we end up needing an rc3?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,7,2014-03-01 19:01:24,1239.08,1,,,"b""b'   ack and bump. Looking at it again I see why now. Sorry my fault for holding it wrong. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,8,2014-03-01 19:01:24,1204.22,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,9,2014-03-01 19:01:24,36.72,,1,,"b'b"" Okay"," I think it\'s rebased now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,10,2014-03-01 19:01:24,407.27,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,11,2014-03-01 19:01:24,1387.37,,1,,"b""b' The changes from this PR are included (or"," obsoleted) as part of PR #4449.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,closed,2014-07-02 07:09:59,829.67,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3775,closed,-,-,-,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,opened,2014-03-03 23:49:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,title,2014-03-03 23:49:32,00:00,,1,,"b""b' client can unknowingly reuse addresses when restoring old backup'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,body,2014-03-03 23:49:32,00:00,1,,,"b'b"" I am requesting a receive address", but I keep getting addresses that have been previously used. This may be facilitated by the fact I am using a  that was previously used as a backup, but nevertheless, even so," this is not ideal and is misleading the user into thinking they will be using an unused address. I propose that bitcoin-qt could check that the address hasn\'t been previously used and keep looking until it finds an actually unused one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,1,2014-03-03 23:49:32,447.57,,1,,"b'b"" There is no way that Bitcoin-Qt can know whether the address was used before somewhere in the world. It has only the local view provided by the keypool in the  that you installed. So if you restore an old backup it will think it\'s handing out new addresses. You can \'skip ahead\' by running the RPC call as many times as needed (up to the keypoolsize to mark the entire keypool as used).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,closed,2014-03-04 07:17:06,447.57,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,reopened,2014-03-04 13:02:10,345.07,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,2,2014-03-03 23:49:32,346.42,,1,,"b'b"" I\'m reopening this. We can know when keys are used (see a transaction spending using them)", and don\'t use this to mark keypool keys used. In fact," this will be necessary for recovery from BIP32 wallet backups.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,3,2014-03-03 23:49:32,371.02,,1,,b'b\' You can know whether the key has been used," but you cannot know for sure whether the key has not been used. It could be given to someone as an invoice and not be in a visible transaction yet. Or it could be in a queued-up transaction. The ""addresses is in the blockchain"" assumption is very shallow.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,4,2014-03-03 23:49:32,375.88,,,1,"b'b"" It\'s still very reasonable to mark addresses as used if you see them used"," imho :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,5,2014-03-03 23:49:32,378.82,1,,,"b'b"" It it reasonable", but may be dangerous if people make the wrong assumptions (it looks as if it works in every case," but it doesn\'t).  Edit: If you use multiple copies of a wallet you\'re bound to have race conditions in which both give you the same key as \'new\'. There is always a window for this confusion. The only solution would be to make them generate keys with different BIP32 parent keys.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,6,2014-03-03 23:49:32,433.93,1,,,"b'b\' In a GUI client we could notice this case and wag a popup at the user. ""Woah", this wallet appears to be out of sync with the network, coins seem to be spent out from under it. [...] If you\\\'re using multiple copies of the same wallet," beware your impending doom. See [here] for more info."" WRT multiple copies beyond the reuse", the problem is that they\\\'ll double-spend each other... and if spending unconfirmed change end up totally borken. But I think better handling a backup recovery doesn\\\'t prevent better catching of risky use. It\\\'s not like it replaying the keypool is the only or the most obvious mechanism we can use to point out that this doesn\\\'t really work.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,7,2014-03-03 23:49:32,439.35,,1,,"b'b"" Agreed that the client could warn in that case"," but that\'s very different from claiming that \'reuse an existing receiving address\' does not work which is the issue title.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3791,open,-,-,-,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,opened,2014-03-08 07:08:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,title,2014-03-08 07:08:04,00:00,,1,,"b""b' Improvements in CChainParams'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,body,2014-03-08 07:08:04,00:00,,1,,"b""b' Replace direct references to RegTest() with constant parameters on CChainParams interface.EDIT: dependency merged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,1,2014-03-08 07:08:04,9.95,,1,,"b'b"" @jtimon You\'re creating a lot of minor pulls that depend on each other.Submitting it as one pull grouping multiple git commits would make it easier to review and generates less clutter.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,2,2014-03-08 07:08:04,468.83,1,,,b'b\' @laanwj only this one is dependent on the others. The rest are valid independently, just related.Well," by depedent you may mean that since they change common files they need to be rebased on top of each other.I thought this would increase the chances each of them would have to be accepted.My reasoning was more or less like ""if the commit at #3819 is not accepted for some reason"," the other commits will be automatically rejected and I will have to start again from scratch or commit on top of that previous \\\'invalid\\\' commit"". I also thought that it would be easier to review them individually", but, yes, they\\\'re all related, so probably is easier to understand the purpose by putting them all together and also the history will have less merges. So I have no problem putting them all on a single pull request, but to save me some pain, could you please tell me if there\\\'s any problem with each of the individual changes (or improvement, renaming of method...) before I do that? Note: It is the first time that I use git in a project with this level of concurrency in development so I appreciate your patience. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,3,2014-03-08 07:08:04,47.53,,,1,"b'b"" Well people\'s opinion may vary but I generally like \'one pull request solves one issue\'. Too granular makes indeed it hard to merge (especially if they\'re \'change the world\' commits)", but too fine and everyone loses track of the larger view of what you\'re trying to do. This may be just right, I just noticed a flood of pulls and thought I\'d warn you :-) It does make sense to split up GUI and core changes. Merging GUI changes is much easier," in general.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,4,2014-03-08 07:08:04,45.15,,,1,"b'b"" Thanks again for the feedback", much appreciated.So I guess the optimal approach would have been to request pulling the gui change first (#3823) and then the rest together warning that they\'re dependent on that one.I\'ll leave them as they are for now since, as said, I\'m concerned about people having issues with one of them individually (and honestly," also due to laziness: I don\'t want to work more on this until I hear what more people have to say about this). Probably I should have referenced our previous discussion at #3812 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,5,2014-03-08 07:08:04,562.42,,1,,"b'b"" I\'ve putted them all together except the GUI change.So now this is only dependent on #3823 (The test won\'t pass until that\'s merged).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,6,2014-03-08 07:08:04,971.9,,1,,"b'b"" Does this actually make the code clearer", though? Now when checking the various places regtest mode was special cased," you can see that a special case exists but you have no idea without rummaging through  (reading all of it) when it will actually happen. Was this change motivated by some other work or do you think it\'s just clearer this way?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,7,2014-03-08 07:08:04,35.37,,1,,"b""b' I prefer the old code"," NACK from me on this change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,8,2014-03-08 07:08:04,11.97,1,,,"b'b"" I really hate how we\'re assigning weird properties to regtest", and making them only accessible under IsRegTest(). Imho, these should just be separate command-line options or separate RPCs," instead of overloading their meaning for regtest.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,9,2014-03-08 07:08:04,0.95,,1,,"b'b"" So to be clear: I consider this pullreq a step towards making special behaviour not hardcoded to regtest"," but it\'s not enough.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,10,2014-03-08 07:08:04,1.08,1,,,b'b\' The motivation is to make it easier to create new modes. Particularly," I plan to create a mode where proof of work is completely replaced by signatures of a ""centralized miner"". Other full nodes can connect and validate", but only whoever can provide a valid scriptSig can produce new blocks. Also RegTest() global-like function feels a bit ugly to me," which brings me to some related questions I have:  Shouldn\\\'t be TestNet() and RegTest() be methods of CChainParams?Shouldn\\\'t there be consistency in the use of ""Params().NetworkID() == CChainParams::REGTEST"" vs RegTest() ? Maybe a virtual bool CChainParams::isNetwork(Network) could be a solution.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,11,2014-03-08 07:08:04,1.65,1,,,"b""b' Meh"," all the same. I dislike explicit tests for particular modes. The high-level code should not need to know nor care about which mode is active. It should just care about its properties.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,12,2014-03-08 07:08:04,0.57,,1,,"b""b' Apart from the boost:hardware_concurrence call"," ACK from me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,13,2014-03-08 07:08:04,0.63,,1,,"b'b\' Leaving aside the style issues for a moment such a ""centralised miner"" mode seems pointless. You could just as well have a regular SQL database and dispose with the block chain algorithm entirely at that point? sipa: as I said", I feel like that\\\'s applying style theory over practice here. In practice, just testing properties of the mode simply makes the code harder to understand without improving modularity or maintainability in any real way.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,14,2014-03-08 07:08:04,4.42,1,,,"b""b' I think reading: if (Params().MineBlocksOnDemand())  weird special-case code is just as obvious as if (RegTest())  weird special-case code Though the question should really be: why is this behaviour specific to regtest at all?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,15,2014-03-08 07:08:04,17.72,1,,,b'b\' The former simply repeats logic redundantly: if (Params().MineBlocksOnDemand()) { // Mine some blocks," because the user demanded it.} The conditional tells you nothing beyond ""this behaviour is network mode specific"" and requires you to go hunting in order to find out more.  if (RegTest()) { // Mine blocks on demand} is much more informative it tells you when that code path actually becomes active", in easy to read language. It\\\'s specific to regtest because that\\\'s the only time it would appear to be useful. If someone came up with another case where it was wanted (that doesn\\\'t involve weird entirely non-Bitcoinish uses) then it\\\'d make sense to generalise it some more and document when it can happen with a comment.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,16,2014-03-08 07:08:04,39.72,1,,,"b'b\' How is any of this different from RequireRPCPassword() ? It is true that the private chain is ""non-bitcoinish"" (related to off-chain transactions) and it\\\'s probably only useful with more changes that won\\\'t possibly get into bitcoin. I would just like to minimize the divergence from bitcoin\\\'s codebase. But still", this makes it easier to create more testing modes I honestly haven\\\'t thought about yet. Anyway, we should focus on the readability and maintainability, and I still think RegTest() is pretty ugly. Any thoughts on the consistency of the use of these global functions as opposed to methods in CChainParams interface?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,17,2014-03-08 07:08:04,160.95,,1,,"b'b\' @mikehearn we can also change the comment to be non-redundant and avoid you to ""hunt on "" if that\\\'s the problem. if (Params().MineBlocksOnDemand()) {// Used on regtest mode}vsif (RegTest()) {// Mine blocks on demand}\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,18,2014-03-08 07:08:04,1369.52,,1,,"b'b"" I\'m not sure how is in any way descriptive of what what is going on unless you happen to already know that the bitcoin pull-tester uses a regression testing mode to mine blocks on demand. clearly says what is being tested for.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,19,2014-03-08 07:08:04,593.2,,1,,"b'b"" As I understood it (and explained to @jtimon) the idea of ChainParams is to containproperties of the chain itself and (like  )environmental properties that define how bitcoind handles this chain (like  ) Especially the second set of properties could made data-driven (moved to a configuration file) to make it possible to define your own testing modes. Using a clunky \'is a\' operation like RegTest() breaks this. So IMO this pull is an improvement. @jtimon Please do document the new methods of CChainParams clearly with a comment: what does this flag do"," and why would someone want to do that. @sipa +1 CChainParams should only contain constants. The boost concurrency call is not a constant and depends on the execution environment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,20,2014-03-08 07:08:04,1044.47,,1,,"b""b' Updates: -Non-constant value for default threads removed as suggested by @sipa -References to regtest  and redundancies removed on comments as suggested by @mikehearn -New methods documented in the interface as suggested by @laanwj '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,21,2014-03-08 07:08:04,30.75,,1,,"b""b' ACK. Enough bikeshedding.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,22,2014-03-08 07:08:04,3.4,,1,,"b'b\' Fixed typo ""doesn\\\'t requires"" -\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,23,2014-03-08 07:08:04,1085.03,,1,,b'b\' Also stop using TestNet()," now () is only called from 3 places: url url url  I would say the latest changes complete the pull request which almost achieves the goal of chain modes ""quacking like a duck"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,24,2014-03-08 07:08:04,1349.27,,,1,b'b\' Thanks @laanwj," corrected.Also getmininginfo and getinfo will cointain ""testnet"": True for regtest"," so this is a change in behavior but I think it\\\'s more appropriate (as regtest is also for testing). Ultimately I would add a new field ""network"" or ""mode"" to replace ""testnet""", although it may be still needed for backwards compatibility.If people believe it should return False for regtest I can correct it as well. This is the relevant commit: url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,25,2014-03-08 07:08:04,720.38,,1,,"b'b"" ~~I\'m all in favor of adding a \'network\' ID to \'getinfo\' output. The GUI uses CChainParams::DataDir() to get a network identifier for display in the debug window (and replaces it with \'mainnet\' if empty). But let\'s add method to CChainParams that returns a canonical network ID string", and use the in the GUI as well. In any case," that\'s something for another pull. ~~ (edit: this was added to  ) Returning \'true\' for \'testnet\' on the regtest network in RPC output is OK with me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,26,2014-03-08 07:08:04,532.87,,,1,b'b\' Although not as human friendly, the magic byte string serves this purpose.On Apr 6, 2014 11:05 PM,"Wladimir J. van der Laan"" <notifications@\''
bitcoin	3824	closed	closed	 - 	2014-05-20 08:13:19	65.25	7	17	4
bitcoin	3824	closed	27	jtimon	2014-03-08 07:08:04	1221.2	+1			b'b"" I\'m confused. Why did this PR got closed?Should I rebase it on top of the latest changes?Is there anything else I can do to get it accepted?Is there any reason why these (in my opinion, pretty harmless) refactoring changes will never make it  into bitcoind?""'
bitcoin	3824	closed	28	laanwj	2014-03-08 07:08:04	66.17	+1			b'b"" Huh?!?! I don\'t remember closing this. I must have misclicked. Sorry!""'
bitcoin	3824	closed	reopened	 - 	2014-05-21 12:25:07	251.8	9	17	4
bitcoin	3824	closed	29	sipa	2014-03-08 07:08:04	1382.82		+1		b""b' Rebase please?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,30,2014-03-08 07:08:04,176.58,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,31,2014-03-08 07:08:04,1089.62,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,32,2014-03-08 07:08:04,149.0,1,,,"b'b"" Virtual methods removed. In the process chainparams.h had to include protocol.h and a constant (MESSAGE_START_SIZE) was moved to protocol.h to avoid including chainparams.h from there.On net.h a line used map instead of std::map"," which didn\'t previously fail because net.h included protocol.h which included chainparams.hThose problems are solved. Now chainparams.h is only included from .cpp files and base58.h Maybe the last two commits should go together?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,33,2014-03-08 07:08:04,25.03,,1,,"b""b' It works locally"," I guess I need to rebase again?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,34,2014-03-08 07:08:04,10.25,,1,,"b'b\' :502: error: ""TestNet"" was not declared in this scope\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,35,2014-03-08 07:08:04,37.12,,1,,"b'b\' This is the commit and line that breaks the PR: url  Feedback by @Diapolo welcomed.Right now it doesn\\\'t fail if the network in the details is ""regtest"".If that is never expected",  Could be replace with: If we want to support regtest, the following would be better: Another possibility is creating a new networkStr parameter and do something like this: In this case," I would have preferred that the NetworkStr parameter contained ""testnet"" instead of ""test""", but maybe it\\\'s too late to change that on ()? Thoughts?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,36,2014-03-08 07:08:04,73.07,,1,,"b""b' I created a mapping networkID -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,37,2014-03-08 07:08:04,41.57,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,38,2014-03-08 07:08:04,539.1,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,39,2014-03-08 07:08:04,554.92,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,40,2014-03-08 07:08:04,44.4,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,closed,2014-06-09 10:52:39,1347.53,10,28,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,41,2014-03-08 07:08:04,495.0,,1,,"b'b"" @jtimon"," please stop mixing irc and github. I\'m not the guy you\'re talking to on irc.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,42,2014-03-08 07:08:04,523.72,1,,,"b'b"" I\'m sorry", my mistake," I believe wumpus on irc is @laanwj here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,43,2014-03-08 07:08:04,595.42,,1,,"b'b"" @jtimon That\'s correct.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3824,closed,-,-,-,11,30,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,opened,2014-03-08 11:56:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,title,2014-03-08 11:56:05,00:00,,1,,"b""b' Tabs toolbar is unlocked and can be moved (floating)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,body,2014-03-08 11:56:05,00:00,,1,,"b""b' I am using Bitcoin Core 0.9.0rc2The tool bar can be moved by grabbing the dotted line. This is a bug or feature? ![image]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,1,2014-03-08 11:56:05,75.07,,1,,"b""b' A feature"," I guess. This has always been the case (at least on Linux).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,closed,2014-03-08 13:11:09,75.07,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,reopened,2014-03-08 13:13:40,2.52,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,2,2014-03-08 11:56:05,199.42,,1,,"b'b"" Same here"," it\'s a feature ^^...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,3,2014-03-08 11:56:05,8.22,,1,,"b""b' I there are reason why anyone would not want this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,4,2014-03-08 11:56:05,1247.85,,1,,"b""b' Is there a reason why anyone would like this? I dont like this the same way I dont like having my windows start bar unlocked.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,5,2014-03-08 11:56:05,7.33,,1,,"b'b"" If you don\'t want to use it"," just don\'t use it.Closing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,closed,2014-03-16 13:33:58,20.3,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3825,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,opened,2014-03-10 19:11:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,title,2014-03-10 19:11:18,00:00,,1,,"b""b' Refactor proof of work related functions out of main'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,body,2014-03-10 19:11:18,00:00,,1,,"b'b"" I\'m not sure if ScanHash_CryptoPP on  would fit here too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,1,2014-03-10 19:11:18,41.47,,1,,"b""b' Perhaps these should be moved to a chain params class?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,2,2014-03-10 19:11:18,163.13,,1,,"b""b' Right"," a function on CChainParams'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,3,2014-03-10 19:11:18,0.22,,1,,"b""b' Yes", @luke-jr if you mean those 3 constants like @drak says," that makes sense to me. Do you mean move also the functions?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,4,2014-03-10 19:11:18,16.22,,1,,"b""b' Yeah"," I mean move the entire functions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,5,2014-03-10 19:11:18,1431.33,,1,,"b'b"" @luke-jr my understanding (based on what @laanwj and @sipa have told me) is that CChainParams  should only contain constants"," so I think only the functions should remain out of chainparams like @drak suggested. I could add those changes on this pull request or make them later (since they would make this simple pull request less likely to be accepted). I\'ll wait to have more feedback before adding anything.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,6,2014-03-10 19:11:18,640.5,,,1,"b'b"" Right", CChainParams should only contain constants. And we don\'t intend to support multiple POWs in bitcoin. I\'m fine with moving these to a seperate file," main is much too large and this is a clearly delimited separable piece of functionality. Don\'t move ScanHash_CryptoPP from  here: it\'s a static function and keeping the internal miner functions together makes sense.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,7,2014-03-10 19:11:18,450.1,,1,,"b'b"" Ok", I\'ll just leave it as it is and move nTargetTimespan, nTargetSpacing and nInterval to CChainParams in another pull request  this one gets merged. More concretely, I want to avoid merge conflicts with #3824 and this is not a high priority change anyway," just refactoring to improve readability and move towards a more modular codebase.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,8,2014-03-10 19:11:18,1368.05,1,,,"b'b"" @jtimon I think you should just go ahead an commit the change to move  "," and  . It\'s just one small commit and I don\'t see how moving the params will create a merge conflict with #3824. There is nothing worse than splitting up PRs unnecessarily. More chance of things getting forgotten.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,9,2014-03-10 19:11:18,112.3,,1,,"b""b' It may create a merge conflict with the other PR because it edits the same interface (abstract class) CChainParams"," but they should be easily solvable so I moved the constants as suggested.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,10,2014-03-10 19:11:18,160.58,,,1,"b""b' Nice. This PR looks good to me (untested but the diff seems pretty straightforward).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,11,2014-03-10 19:11:18,912.43,,1,,"b""b' Rebase please?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,12,2014-03-10 19:11:18,237.58,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,13,2014-03-10 19:11:18,617.2,,1,,"b""b' Untested ACK... though I did a line-by-line scan to look for aberrant changes mixed into the code movement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,14,2014-03-10 19:11:18,1074.07,,1,,b'b\' While rebasing it came to mind that maybe these pow-specific constants don\\\'t really belong to chainparams. There could be a pow class with them as arguments and having these functions as methods.This would make it easier for altchains to maintain: just be extending this class and overwriting the pow functions many altcoins would become trivial to maintain on top of bitcoin (less excuses to compete for development resources). Just to be clear, Freicoin uses the same SHA256 pow as bitcoin, and although I got to this pool request by looking for the places I would need to touch for implementing private chains (also non-bitcoinish), the main objective of the PR is nothing but getting things that belong together out of main.Well, now that I think about it we have a different difficulty filter so a pow class should help with our maintainability, although I don\\\'t think it will be a great difference with this functions already separated.The question remains, in this case that it\\\'s clear it has no benefit at all for bitcoin, is it desirable to facilitate things for projects based on bitcoin\\\'s codebase or not?The ideal solution for altchains would be to directly include the functions on chainparams," similar to to what @luke-jr previously proposed and what it\\\'s done in libcoin to make the library ""chain agnostic"" : url but that seems incompatible with the objective of maintaining only constant values on chainparams. Also", it could negatively affect bitcoin\\\'s modularity if you start to encapsulates many differences from different places other than pow in there," chainparams. It could easily morph into a hard to maintain beast if you start to try to be ""agnostic"" in relation to", say, a chain with explicit support for asset issuance.So it seems a Pow class would be more rational for bitcoin even if it requires a little more work from the altchain developers than the chain-agnostic approach.But still, a class instead of the independent functions and the constants in chainparams (this PR as it currently stands) doesn\\\'t offer anything interesting to bitcoind\\\'s code itself. That change wouldn\\\'t imply any risks because it would be a trivial refactoring like moving the constants to chainparams. Sorry for getting so long and reiterative, maybe this belongs to the mailing list," but it\\\'s just seems a simple and interesting example to debate a general policy for ""non-bitcoinish"" contribution. To define more clearly what kind of things can be accepted and which would represent unnecessary weight for bitcoin.I\\\'m particularly interested in @gavinandresen @mikehearn and @drak \\\'s options", since they have expressed some concerns about making it easier for other projects to just rebase on top of bitcoin\\\'s latest version and try to keep the differences minimal and the general improvements in bitcoin.I can also move this discussion to another PR with some actual code that shows the little differences more clearly instead of the mailing list," and leave this one as the simple ""move things out of main one functional thing at a time"" it is.Whatever you think it\\\'s best.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,15,2014-03-10 19:11:18,50.15,,,1,"b'b"" I don\'t think usefulness for derived codebases is a priority here. If code quality improvements benefit them", so much the better, but I don\'t think we should make our code more complex to accommodate potential forks... I like this because it moves responsibilities away from main," and the code looks sane to me (though I\'d like to go over it line by line).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,16,2014-03-10 19:11:18,112.42,,,1,"b""b' Thank you for the feedback", makes sense. It was already rebased just before my previous comment," it contains the merge of the PR 4300 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,17,2014-03-10 19:11:18,40.52,,,1,"b""b' @sipa Agree it is not a _primary_ priority.  If we can refactor", make our code more modular, and make life less difficult for ," that is good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,18,2014-03-10 19:11:18,612.75,,,1,"b""b' Just for the record"," I have been running two nodes with this patch since Jun 1 with no problems or funny stuff in the logs. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,19,2014-03-10 19:11:18,133.7,,,1,"b""b' @drak thanks for the testing.Rebased.The additional refactorings I was talking about seem to be more complex than I initially thought", so I will just leave this PR as it is and maybe propose further changes in another PR later.So, yes," better do it through incremental refactoring.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,20,2014-03-10 19:11:18,237.7,,1,,"b""b' I have also moved UpdateTime.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,21,2014-03-10 19:11:18,253.28,,1,,"b'b"" I\'m working on more changes so I will close this for now. I will reopen it soon.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,closed,2014-06-20 19:37:00,25.7,1,15,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,reopened,2014-06-21 01:22:10,345.17,1,15,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,22,2014-03-10 19:11:18,845.52,,,1,"b""b' @jtimon The PR looks good"," but generally a PR like this should just be shuffing code. Makes it easier to read the diff and know what is going on. referring specifically to 3931601 which should be the subject of a separate PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,23,2014-03-10 19:11:18,52.85,,1,,"b""b' No problem"," I will separate the commits in 2 different PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,24,2014-03-10 19:11:18,110.75,,,1,"b""b' Ok"," looks good to me. ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,25,2014-03-10 19:11:18,618.22,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,26,2014-03-10 19:11:18,405.22,,1,,"b""b' @laanwj is there anything holding up this being merged?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,27,2014-03-10 19:11:18,20.1,,,1,"b'b"" @drak No"," looks good to me now. I\'ll check the code moves and try to merge this today.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,closed,2014-06-25 07:14:43,352.55,1,18,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3839,closed,-,-,-,1,18,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,opened,2014-03-11 22:52:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,title,2014-03-11 22:52:05,00:00,,1,,"b""b' [Qt] add expert section to wallet tab in optionsdialog'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,body,2014-03-11 22:52:05,00:00,1,,,"b'b\' ...dialog See title.I think its better to move the ""confusing"" spendZeroConfChange in an ""Expert"" tab.Coin control is misplaced in ""Display"" tab currently", in my opinion. So moving it too. ![experttab]url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,1,2014-03-11 22:52:05,627.87,,1,,"b'b"" I think we should have an \'expert\' section in the Wallet tab", and move these options there. At least personally I don\'t like \'Expert\' as a category in itself," it\'s not descriptive.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,2,2014-03-11 22:52:05,111.67,,1,,"b""b' Ok"," so closing this. I will keep the expert section in the wallet tab in mind.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,closed,2014-03-17 11:11:37,739.53,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,3,2014-03-11 22:52:05,15.82,,1,,"b""b' Another way that would be ok to me is the other way around; keep this Expert tab and create a Wallet category there.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,4,2014-03-11 22:52:05,123.72,,1,,"b""b' @laanwj What do you think? Moved the description for spendzeroconfchange to tooltip. ![experttab3]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,5,2014-03-11 22:52:05,1047.13,,,1,"b""b' Looks good!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,6,2014-03-11 22:52:05,355.97,,1,,"b'b\' updated to ""add expert section to wallet tab in optionsdialog""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,reopened,2014-03-18 12:54:15,102.63,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,7,2014-03-11 22:52:05,512.75,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,closed,2014-03-21 08:26:39,1172.4,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3850,closed,-,-,-,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,opened,2014-03-16 20:17:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,title,2014-03-16 20:17:03,00:00,,1,,"b""b' Split headers-only versions off  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,body,2014-03-16 20:17:03,00:00,,1,,"b'b"" There is a small semantic change here", namely that blocks with invalid transaction data (eg duplicate hashes, non-first coinbase, ...) will have their headers accepted into the tree (but never considered for connecting). That\'s an inevitable consequence of moving towards headers-first, as we\'ll do header connectivity checkinng before transaction checking anyway (the transaction data won\'t be available until later, so we rather do more extensive checking on the headers that are available first). This has very low DoS risk," as it still requires faking PoW.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,1,2014-03-16 20:17:03,13.92,,1,,"b'b"" This doesn\'t change the actual behaviour of the pre-existing functions", correct? So, eg," unit test assumptions remain valid..""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,2,2014-03-16 20:17:03,4.0,,1,,"b""b' A better summary of the changes:before: standalone  checks", (orphan store), tree  checks, store block, connectafter: standalone headers checks, tree headers checks, store headers, standalone tx checks, (orphan store), tree tx checks, store block, connect In a later pull request, the orphan storage will be removed entirely," as blocks can be stored with just headers validated but not transactions (potentially resulting in out-of-order block storagre).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,3,2014-03-16 20:17:03,1351.72,,1,,"b""b' Please take your time"," and ask for clarification as necessary.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,4,2014-03-16 20:17:03,1270.08,,1,,"b""b' There is a bug in this code"," which prevents syncing. Closing until fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,closed,2014-03-29 16:16:46,1199.72,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,reopened,2014-04-07 23:33:25,436.65,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,5,2014-03-16 20:17:03,478.0,,1,,"b""b' \\\\o/ segfault'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,6,2014-03-16 20:17:03,1087.5,,1,,"b'b"" Bug fixed. @luke-jr I don\'t think any assumptions that are used in unit tests change. The only real change is that now CBlockIndex entries in the block tree may exist that do not have actual block data associated with them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,7,2014-03-16 20:17:03,1246.42,1,,,"b""b' I did a review", comments ended up on the origin commit rather than here oops. Overall looks good," just would appreciate some more comments and helper methods in a few places to make the logic easier to follow and reduce the chances of typos with all the bit twiddling.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,8,2014-03-16 20:17:03,94.98,1,,,"b'b"" There seems to be some bug on the connection logic in this pull. I got a node stuck after it got shutdown during syncing. After launching it again", all the remaining blocks got marked as orphans," and it never resumed syncing. Shutting down and launching again several times didn\'t help.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,9,2014-03-16 20:17:03,41.23,,1,,"b""b' @rdponticelli With a recent version of this code (less than 8 days old?)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,10,2014-03-16 20:17:03,10.15,,,1,"b""b' @sipa Yes", last version. Culprit seems to be some kind of race condition with the low disk space code. Some logs: 2014-04-16 14:18:49 UpdateTip: new best=0000000000000000937bdca5485b8a02da4cbfea74fe982903a2da1ba8537866  height=295933  log2_work=77.988128  tx=36873027  date=2014-04-15 07:18:51 progress=0.9938052014-04-16 14:18:49 ProcessBlock: ACCEPTED2014-04-16 14:18:49 **\\\\* Error: Disk space is low!2014-04-16 14:19:03 ERROR: AcceptBlock() : FindBlockPos failed2014-04-16 14:19:03 ERROR: ProcessBlock() : AcceptBlock FAILED2014-04-16 14:19:03 Requesting shutdown2014-04-16 14:19:03 ProcessBlock: ORPHAN BLOCK 0, prev=0000000000000000a89d601cd42705cfe8a25b6546ed892309c67e5a197e3fdb2014-04-16 14:19:03 ProcessBlock: ORPHAN BLOCK 1, prev=000000000000000005ea1ca8a944a574826bd856b83a29871f46c8e2a2323deb2014-04-16 14:19:03 Running Shutdown in thread After that all the chain is detected as orphan: 2014-04-16 14:58:04 Initialization result: 12014-04-16 14:58:14 ProcessBlock: ORPHAN BLOCK 0, prev=0000000000000000a89d601cd42705cfe8a25b6546ed892309c67e5a197e3fdb2014-04-16 14:58:15 ProcessBlock: ORPHAN BLOCK 1, prev=000000000000000005ea1ca8a944a574826bd856b83a29871f46c8e2a2323deb2014-04-16 14:58:17 ProcessBlock: ORPHAN BLOCK 2, prev=00000000000000001179ce5490d2ff833c0afb1799b6beb0981096c9800002c82014-04-16 14:58:17 ProcessBlock: ORPHAN BLOCK 3, prev=00000000000000001b4fd2aaec801ac068ea2a39a4b9f9eb16569a69c6713d6f2014-04-16 14:58:18 ProcessBlock: ORPHAN BLOCK 4, prev=000000000000000023524d33b27b7ea7135332b32853a7582cf504e20644ea482014-04-16 14:58:19 ProcessBlock: ORPHAN BLOCK 5," prev=0000000000000000a5344e5239e17ae8995d3c7c1417b38d0dc1e047595a3807'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,11,2014-03-16 20:17:03,43.62,,1,,"b'b"" Running the code in master in this state I got: 2014-04-16 17:10:31 init message: Done loading2014-04-16 17:10:31 Initialization result: 12014-04-16 17:10:41 Pre-allocating up to position 0x7000000 in blk00132.dat2014-04-16 17:10:47 ERROR: ReadBlockFromDisk : OpenBlockFile failed2014-04-16 17:10:47 **\\\\* Failed to read block2014-04-16 17:10:51 ERROR: AcceptBlock() : AddToBlockIndex failed2014-04-16 17:10:51 ERROR: ProcessBlock() : AcceptBlock FAILED2014-04-16 17:10:51 ERROR: ReadBlockFromDisk : OpenBlockFile failed2014-04-16 17:10:51 **\\\\* Failed to read block2014-04-16 17:10:51 ERROR: AcceptBlock() : AddToBlockIndex failed2014-04-16 17:10:51 ERROR: ProcessBlock() : AcceptBlock FAILED2014-04-16 17:10:51 Requesting shutdown2014-04-16 17:10:51 Running Shutdown in thread2014-04-16 17:10:51 ERROR: ReadBlockFromDisk : OpenBlockFile failed2014-04-16 17:10:51 **\\\\* Failed to read block2014-04-16 17:10:51 addcon thread interrupt2014-04-16 17:10:51 net thread interrupt2014-04-16 17:10:51 dumpaddr thread stop2014-04-16 17:10:51 opencon thread interrupt2014-04-16 17:10:53 ERROR: AcceptBlock() : AddToBlockIndex failed2014-04-16 17:10:53 ERROR: ProcessBlock() : AcceptBlock FAILED2014-04-16 17:10:53 msghand thread interrupt2014-04-16 17:10:53 Shutdown : In progress... And after that the new code again: 2014-04-16 17:45:19 init message: Done loading2014-04-16 17:45:19 Initialization result: 12014-04-16 17:45:28 ProcessBlock: ACCEPTED2014-04-16 17:45:31 ProcessBlock: ACCEPTED2014-04-16 17:45:31 CheckForkWarningConditions: Warning: Found invalid chain at least ~6 blocks longer than our best chain.Chain state database corruption likely.2014-04-16 17:45:31 ProcessBlock: ACCEPTED2014-04-16 17:45:31 CheckForkWarningConditions: Warning: Large valid fork found  forking the chain at height 295933 (0000000000000000937bdca5485b8a02da4cbfea74fe982903a2da1ba8537866)  lasting to height 295941 (00000000000000002cda160c4452e7ad5252453a969dc6ff9b6e9e8bb584093f).Chain state database corruption likely.2014-04-16 17:45:31 ProcessBlock: ACCEPTED2014-04-16 17:45:33 CheckForkWarningConditions: Warning: Large valid fork found  forking the chain at height 295933 (0000000000000000937bdca5485b8a02da4cbfea74fe982903a2da1ba8537866)  lasting to height 295942 (0000000000000000adfe890f4c33801b26fac05207747652d8c311244e59a6d0).Chain state database corruption likely. And it\'s still going like this....""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,12,2014-03-16 20:17:03,1023.23,,,1,"b'b"" @rdponticelli Thanks for testing! So the problem was that if the block data failed to write", we ended up with a block header in the index, but no corresponding block data in the block file. At next startup, this would mean it would need to download it again, but the block download logic can\'t deal with the in-index-but-not-on-disk case yet," which will be added later. I\'ve (hopefully) fixed it by only writing the block header to the index after the block data is present.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,13,2014-03-16 20:17:03,477.8,,,1,"b'b"" Now I\'m getting this on another node. It seems that it\'s breaking when it changes the block file: 2014-04-17 19:02:56 ProcessBlock: ACCEPTED2014-04-17 19:03:07 UpdateTip: new best=0000000000000000551b394408e467f83cd5d6f36612f8e33643d188f0d4498f  height=293947  log2_work=77.722856  tx=36140885  date=2014-04-03 11:35:26 progress=0.9316342014-04-17 19:03:07 ProcessBlock: ACCEPTED2014-04-17 19:03:18 Pre-allocating up to position 0x300000 in rev00129.dat2014-04-17 19:03:19 UpdateTip: new best=000000000000000055c9d3b2a816877d3b1a9ca6048170ed7cee1c8629255e0e  height=293948  log2_work=77.72298  tx=36141736  date=2014-04-03 11:56:14 progress=0.9317022014-04-17 19:03:19 ProcessBlock: ACCEPTED2014-04-17 19:03:21 Pre-allocating up to position 0x2000000 in blk00129.dat2014-04-17 19:03:52 UpdateTip: new best=0000000000000000b2a0b9c58aa86994aa85385d0d8a8676945f6d3b642b27a9  height=293949  log2_work=77.723105  tx=36142897  date=2014-04-03 12:08:09 progress=0.9317442014-04-17 19:03:53 ProcessBlock: ACCEPTED2014-04-17 19:03:53 ProcessBlock: ORPHAN BLOCK 0", prev=00000000000000006c3f5ca15b21e43e7328c6ea033a25671f08c396cfd027ca2014-04-17 19:03:59 UpdateTip: new best=00000000000000006e97b96972f7f31f0847fcf35e723193c0949dad4bbc730c  height=293950  log2_work=77.723229  tx=36143254  date=2014-04-03 12:14:21 progress=0.9317652014-04-17 19:03:59 ProcessBlock: ACCEPTED2014-04-17 19:04:03 UpdateTip: new best=0000000000000000cf179e61ecbe56eb19561396ef72650f2a8b3e7d29d21cde  height=293951  log2_work=77.723353  tx=36143569  date=2014-04-03 12:20:27 progress=0.9317852014-04-17 19:04:03 ProcessBlock: ACCEPTED2014-04-17 19:04:05 UpdateTip: new best=000000000000000039022b02422dfee754c2dd91cf8dac8289c956b30da37b80  height=293952  log2_work=77.723478  tx=36143600  date=2014-04-03 12:20:35 progress=0.9317852014-04-17 19:04:05 ProcessBlock: ACCEPTED2014-04-17 19:04:05 ProcessBlock: ORPHAN BLOCK 1, prev=00000000000000007f49a436045b4190c4164adef4479ebc290ae1379826b40a2014-04-17 19:04:07 UpdateTip: new best=00000000000000001c9b145536ce2f3ffd529742b0ab58a4bdee1ebd985e4c69  height=293953  log2_work=77.723602  tx=36143765  date=2014-04-03 12:24:37 progress=0.9317992014-04-17 19:04:07 ProcessBlock: ACCEPTED2014-04-17 19:04:07 ProcessBlock: ORPHAN BLOCK 2," prev=0000000000000000c0b4bede793045606417892efcbb83c3d5c52b9aa74b90862014-04-17 19:04:08 UpdateTip: new best=0000000000000000c9cbe25307641906939f3e767d94dd7d2553b860dad7a835  height=293954  log2_work=77.723726  tx=36143895  date=2014-04-03 12:27:15 progress=0.931808""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,14,2014-03-16 20:17:03,29.42,,,1,"b""b' Just seeing orphans while syncing is perfectly expected (not intentional though"," but it will require more to fix that).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,15,2014-03-16 20:17:03,113.55,,1,,"b'b"" Rebased and addressed @mikehearn\'s comments.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,16,2014-03-16 20:17:03,54.1,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,17,2014-03-16 20:17:03,24.17,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,18,2014-03-16 20:17:03,1361.47,,1,,"b""b' @gavinandresen How does this look to you?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,19,2014-03-16 20:17:03,956.53,,,1,"b'b"" Tested this on the Dogecoin blockchain. Both initial sync and keeping up with the blockchain worked as normal"," both restarting the client and waking up from hibernation worked fine and I didn\'t spot anything unusual in the logs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,20,2014-03-16 20:17:03,630.98,,1,,"b'b"" I\'m currently testing this. It\'s still incredibly slow due to the peer selection for the block download. I really think it should take the speed of download into consideration for selecting a peer", and I still don\'t understand why it selects only one peer why can\'t it select several? After all," most download tools these days choose to download from multiple sources to reduce the load on any one source.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,21,2014-03-16 20:17:03,4.08,,1,,"b'b"" @rebroad This is an incremental reorganization. All that stuff you are talking about was implemented months ago in sipa\'s headers first branch but it was too risky a change to take at once and wasn\'t seeing adequate testing.  This pull (and others) are breaking up the steps to move to it incrementally in a way which is easier to verify.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,22,2014-03-16 20:17:03,94.15,,1,,"b'b"" @gmaxwell yes"," I know. The stuff I am talking about hasn\'t been implemented yet. This is why I am mentioning it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,23,2014-03-16 20:17:03,12.75,1,,,"b""b' Pulling from multiple peers and taking speed into account were both implemented in the headers first branch. (actually it does something which is usually better than take speed into account it tracks when peers are stalling the process and kicks out the straggler(s)).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,24,2014-03-16 20:17:03,225.55,1,,,"b'b"" @rebroad That\'s just rude. Please keep discussion in issues about the goal of the issue. @sipa does not claim that this change solves the problems that you mention"," so you should not be disappointed that they are not solved by it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,25,2014-03-16 20:17:03,278.95,,1,,"b'b"" @rebroad Selecting multiple peers to download from would just bring duplicate block downloads back", unless it happens in a coordinated way. No such coordination exists, because we don\'t know in advance which peers have which blocks we just download what they tell us they have. Nobody claims we can\'t download from multiple peers at once that is one of the goals of headers-first synchronization (which this is incremental work towards," but it will take a few more pull requests before we\'re actually there).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,26,2014-03-16 20:17:03,34.7,,1,,"b'b"" How do we decide when there\'s been enough testing and review? Seems like the path forward here isn\'t clear.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,27,2014-03-16 20:17:03,31.5,1,,,"b'b"" @mikehearn What part is unclear? This is tagged \'0.10\' so will be merged after the branch-off of 0.9.2.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,28,2014-03-16 20:17:03,14.45,,1,,b'b\' This may be a discussion for the mailing list," but I\\\'m not sure it\\\'s healthy to keep pull requests that are ""done"" queued up where they have to be constantly rebased", waiting to enter master, missing out on testing that people might do. If you want to have a branch for stabilisation, why not branch for 0.9.2 now and cherry pick fixes into it until you\\\'re confident it\\\'s ready?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,29,2014-03-16 20:17:03,61.95,,1,,"b""b' I know that the plan is to split off 0.9.2 this week.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,30,2014-03-16 20:17:03,11.37,,1,,"b""b' Okie dokie.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,31,2014-03-16 20:17:03,18.82,1,,,"b'b"" @gmaxwell ah", so it\'s not in the master branch? Am I able to submit pull requests to the branch you mention? What is the purpose of this branch and will it as some point be merged into master? My main reason for mentioning these concerns is that the current master as it is doesn\'t work well, and gets 300 or so orphan blocks piling up without catching up on the blockchain, often requiring a restart of bitcoind to get it downloading again, at which point the hundreds of orphan blocks already downloaded are then lost (since they are not saved to disk). It\'s also frustrating to see this, considering I raised a pull request about 2 years ago which downloaded blocks far faster and more efficiently than it currently does, and which did detect stuck downloads," unlike the current master branch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,32,2014-03-16 20:17:03,39.7,,1,,"b'b"" @rebroad Gregory talking about my personal headers-first branch (#2964)",which was never merged because of multiple reasons," and later abandoned.I\'ve since (slowly) been working on several pull requests with pieces ofthat functionality. This pull request is just some refactoring work towardsthat.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,closed,2014-05-09 14:00:50,867.42,6,23,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3884,closed,-,-,-,6,23,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,opened,2014-03-23 21:39:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,title,2014-03-23 21:39:13,00:00,,1,,"b""b' configure error on 32-bit Ubuntu Saucy'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,body,2014-03-23 21:39:13,00:00,,,1,"b""b' checking for main in -lminiupnpc... (cached) yeschecking for boostlib >= 1.20.0... yeschecking whether the Boost::System library is available... yesconfigure: error: Could not find a version of the library!make[1]: **\\\\* [override_dh_auto_configure] Error 1 works on amd64"," however... See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,1,2014-03-23 21:39:13,1.7,1,,,"b""b' Quite possibly me missing something"," but that error message is completely indecipherable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,2,2014-03-23 21:39:13,581.7,,1,,"b""b' Do you have  output?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,3,2014-03-23 21:39:13,512.18,1,,,"b""b' The above log is all I have"," sorry.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,4,2014-03-23 21:39:13,0.27,,1,,"b'b"" If I have time"," I\'ll try to rerun the build with a cat  at the end.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,5,2014-03-23 21:39:13,1050.88,,1,,"b""b' Usually this means that boost libraries are installed in multiple locations"," and autoconf picks the wrong location. You could with-boost-libdir= to explicitly set a directory.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,6,2014-03-23 21:39:13,437.95,,1,,"b""b' url  Updating to #serial 23 should fix. Will PR it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,7,2014-03-23 21:39:13,39.55,,1,,"b'b"" @TheBlueMatt This should fix your issue"," but I\'m unable to test. Could you please confirm?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,closed,2014-04-08 08:24:29,645.27,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,8,2014-03-23 21:39:13,520.52,,1,,"b""b' Nope"," this bug still exists on both saucy and trusty:url ~bitcoin/+/+packages'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,reopened,2014-04-20 02:28:48,1084.32,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,9,2014-03-23 21:39:13,1079.62,,1,,"b""b' @TheBlueMatt Could you please grab a  for this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,10,2014-03-23 21:39:13,1405.4,,1,,"b'b"" I\'ve tried to reproduce this"," finally managed to extract the  from the pbuilder environment. See here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,11,2014-03-23 21:39:13,559.75,,1,,"b'b"" Debian is building 0.9.1 which didn\'t get 13a2283a6. 0.9.2 contains it", so that should work. @floe unless you\'re able to reproduce with the 0.9.2 branch or rc tags," this has been taken care of.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,12,2014-03-23 21:39:13,421.45,,1,,"b""b' @TheBlueMatt could you push new packages for 0.9.2 to your PPA? Would probably be the quickest way to test this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,13,2014-03-23 21:39:13,11.48,,1,,"b'b"" 0.9.2 final is not released yet"," so pushing packages for it makes no sense. We\'ve never done PPAs for release candidates.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,14,2014-03-23 21:39:13,41.83,1,,,"b""b' @laanwj oops", my bad. will test on my machine," then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,15,2014-03-23 21:39:13,421.2,,1,,"b""b' @theuni: I had tried with 13a2283"," but that did not resolve the problem. Have there been any other changes which could effect this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,16,2014-03-23 21:39:13,101.5,,1,,"b""b' No"," that should do it. You made sure to re-run  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,17,2014-03-23 21:39:13,14.25,,1,,"b""b' yea"," they all run from a clean state.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,18,2014-03-23 21:39:13,243.8,,1,,"b""b' Seems to have worked with 0.9.2.1.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,closed,2014-08-05 01:44:15,1395.45,3,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3945,closed,-,-,-,3,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,opened,2014-03-31 01:04:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,title,2014-03-31 01:04:08,00:00,,1,,"b""b' Improved getblocks logging.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,body,2014-03-31 01:04:08,00:00,1,,,"b""b' Logs a message when a getblocks request is sent. This line can later be changed to include the peer number (I am about to edit that other pull request to address the issues raised).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,closed,2014-03-31 01:09:04,4.93,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,1,2014-03-31 01:04:08,16.28,,1,,"b""b' Why close?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,reopened,2014-03-31 17:23:57,974.88,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,2,2014-03-31 01:04:08,719.75,,1,,"b""b' Automatic sanity-testing: FAILED MERGE", see url  for test log. This pull does not merge cleanly onto current masterThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,closed,2014-07-04 09:05:28,941.52,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3985,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,opened,2014-04-01 05:32:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,title,2014-04-01 05:32:39,00:00,,1,,"b""b' Less getblocks zeros'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,body,2014-04-01 05:32:39,00:00,,,1,"b""b' Change these lines: getblocks 293326 to 0000000000000000000000000000000000000000000000000000000000000000 limit 500 to these lines: getblocks 293326 to end limit 500 (i.e. no need to display an expanded hash of NULL)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,1,2014-04-01 05:32:39,1267.62,,,1,"b""b' @laanwj @sipa @gmaxwell Some  would be appreciated. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,2,2014-04-01 05:32:39,282.5,,1,,"b""b' I like printing always the full hash. It used to be different in earlierversions but at a certain point it was decided to change this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,3,2014-04-01 05:32:39,74.08,,1,,"b""b' Indeed. It allows easy copy pasting entries from the log file into RPCs orother services.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,closed,2014-05-20 07:50:03,137.4,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,4,2014-04-01 05:32:39,201.15,,1,,"b'b"" Please can you look at what this pull request does. It doesn\'t change the way hashes are displayed as the assumption seems to have been. It simply doesn\'t display a long line of ONLY zeros when there is NO hash as it does currently.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,5,2014-04-01 05:32:39,1.02,,,1,"b""b' @laanwj please can you re-open this pull request"," as it was misunderstood what it does. thank you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,6,2014-04-01 05:32:39,25.6,,1,,"b'b"" I still don\'t really see the point of making a special case for 0.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,7,2014-04-01 05:32:39,902.73,,1,,"b'b"" @laanwj because 0 isn\'t a hash", it\'s like a NULL, so it seems wasteful to fill  with an expanded hash of NULL," when it\'s not a hash.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,8,2014-04-01 05:32:39,291.43,1,,,b'b\' Right, uint256(0) _is_ a special case here. It\\\'s a pity that things were done this way in the protocol, but you can\\\'t help that. Reopening. If we\\\'re special-casing anyway," what about using a string such as ""end"" or ""last"" instead of ""0""? ""To 0"" reads like it\\\'s trying to requests the blocks to the beginning instead...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,reopened,2014-06-27 08:18:50,28.78,1,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,9,2014-04-01 05:32:39,1118.0,,1,,b'b\' @laanwj ah, yes,"end"" is more clear. Changed.\''
bitcoin	3990	closed	10	BitcoinPullTester	2014-04-01 05:32:39	58.95		+1		b""b' Automatic sanity-testing: PASSED, see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,11,2014-04-01 05:32:39,183.03,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,closed,2014-06-28 08:16:15,1437.42,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,3990,closed,-,-,-,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,opened,2014-04-08 21:34:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,title,2014-04-08 21:34:59,00:00,,1,,"b""b' Backport of SSL fix (CVE-2014-0160) for 0.8.6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,body,2014-04-08 21:34:59,00:00,,,1,"b""b' Can you maybe publish a fixed version for 0.8.6?0.9 introduces some changes which affords some changes to my service"," so i would be happy if you could publish a fixed 0.8.6 version? Thanks!!!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,1,2014-04-08 21:34:59,603.38,,1,,"b'b"" The pre-compiled 0.8.6 uses an old OpenSSL version (0.9.8k if I reember correctly)"," so it\'s not an issue there. If you built it yourself you can just upgrade your OS\'es OpenSSL lib version.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,closed,2014-04-09 07:38:22,603.38,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,2,2014-04-08 21:34:59,109.07,,1,,"b'b"" Actually", 0.8.x uses OpenSSL 1.0.1c, but since it doesn\'t have payment protocol support it\'s really not applicable anyway. It would only be a concern if you had the RPC server exposed to the internet with SSL enabled, but that\'s already a security hazard even besides Heartbleed. I\'ll probably include a fixed OpenSSL in 0.8.7rc2," but it\'s not a priority and may never get built anyway since 0.9.0 is better in every way. What kind of problems do you have with 0.9.0? I don\'t recall any changes that should have broken compatibility with anything...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,3,2014-04-08 21:34:59,20.22,,,1,"b'b"" I don\'t know", I just read that bitcoin qt is now splitted up into an cli version and i think i have to change some small parts of my monit scripts... Nothing big," but I have to spend some time.. a 0.8.7 version i probably could just drop in... but thanks anyway for the informations...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,4,2014-04-08 21:34:59,6.7,,1,,"b""b' @lichtamberg Nothing has changed there. There are new commands but the old things work like they always have"," at least for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,reopened,2014-04-09 10:32:16,173.9,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,5,2014-04-08 21:34:59,39.08,,1,,"b""b' Ok"," reopening this issue then. I thought 0.8.x still used the old deps.But looking at the deps in 0.8.6 you are right:url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,6,2014-04-08 21:34:59,1244.6,1,,,"b'b"" As 0.8.x doesn\'t fetch payment requests", there is only very little risk due to heartbleed: only if you have enabled  , a host that is in already the list could execute the attack. After the initial hysteria has faded," it does not seem worth it to keep open this issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,closed,2014-05-02 07:18:02,1245.77,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4026,closed,-,-,-,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,opened,2014-04-28 12:00:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,title,2014-04-28 12:00:48,00:00,,1,,"b""b' rpc: Use netmasks instead of wildcards for IP address matching \\xe2\\x80\\xa6 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,body,2014-04-28 12:00:48,00:00,1,,,"b'b"" As discussed on IRC. currently has a wacky wildcard-based format. After this commit it will accept the more standard format", for example:Ranges with netmask  ,  Ranges with cidr  ,  Loose IPs  , Trying to use the old *?-based format will result in an error message at launch. Most people will likely be specifying single IPs," so won\'t notice this change at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,1,2014-04-28 12:00:48,77.63,,1,,"b""b' untested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,2,2014-04-28 12:00:48,324.13,,1,,"b'b"" Code and idea ACK. I didn\'t test"," but the unit tests are convincing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,closed,2014-05-03 21:47:09,586.35,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,reopened,2014-05-03 21:47:13,0.07,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,3,2014-04-28 12:00:48,681.8,,1,,"b""b' @gmaxwell huh?You mean the scriptable", turing complete," non-linear IP mapping we discussed on IRC?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,closed,2014-05-09 15:26:52,1059.65,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,4,2014-04-28 12:00:48,615.32,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4102,closed,-,-,-,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,opened,2014-05-08 17:54:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,title,2014-05-08 17:54:25,00:00,,1,,"b""b' Fundamental (); throwing a segment fault.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,body,2014-05-08 17:54:25,00:00,,1,,"b""b' Not changing anything", just trying to print the genesis block," it throws a segment fault (core dumped).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,1,2014-05-08 17:54:25,2.35,,1,,"b""b' Can you elaborate in what you are doing exactly?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,2,2014-05-08 17:54:25,3.25,,1,,"b'b"" I\'ve tested this many times before in previous 0.8 versions", and now when I try to print the genesis block (not changing anything)," I get a Segmentation fault (core dumped) doing the whole finding the find nNonce ==0 loop  -I see this method still exists in  so I know it\'s not a method taken out or no comments about it being deprecated...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,3,2014-05-08 17:54:25,9.98,,1,,"b""b' Is this some altcoin-genesis-block-creating code?  There is no  or genesis-incrementing nonce in Bitcoin Core.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,4,2014-05-08 17:54:25,17.73,,,1,"b'b"" It\'s used to re-create the BitCoin genesis block"," yes... Thanks for verifying that there is no .print method in the BitCoin core. I thought that it might have been broken due to a change from 0.8 to 0.9""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,closed,2014-05-08 18:27:44,33.32,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,5,2014-05-08 17:54:25,4.2,,1,,"b'b"" There is a print() method in CBlockIndex and CDiskBlockIndex. I still have no clue what code you\'re talking about", where the variable genesis is declared, what type it is," or where exactly it segfaults.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,reopened,2014-05-08 18:33:14,5.5,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,6,2014-05-08 17:54:25,8.23,,,1,"b'b"" Thanks sipa", It\'s the print() method in CBlockIndex that it\'s occurring.. I haven\'t tracked down on what line it\'s occurring. I\'ll get back with that info... I have to say guys, I\'m very impressed with the responses and quickness that is represented here. Thanks for taking the time to look at this with me," even if it\'s just some benign occurrence that i\'m experiencing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,7,2014-05-08 17:54:25,2.07,,1,,"b""b' Closing this unless you actually have a problem to report.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,closed,2014-05-08 18:42:14,9.0,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4153,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,opened,2014-05-09 23:05:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,title,2014-05-09 23:05:40,00:00,,1,,"b""b' Implement SI-style (thin space) thoudands separator'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,body,2014-05-09 23:05:40,00:00,1,,,"b'b"" Personally", I find long strings of digits (either side of the decimal point) hard to read....  To the right of the decimal point, it\'s OK as long as you really only care as to the first few..... But when you have multiple leading zeros 0.001 and 0.0001 are easy to confuse (but no big loss) But switching to millior microand 1000000 versus 100000 is a big deal. IMHO the only sane option is SI-style (i.e. a thin space as thousands separator, both left and right of the decimal point) because:given the huge variation in punctuation marks used as decimal separators and thousands separators, anything else is confusing at best and ambiguous at worstthere\'s really no other widely used convention for thousands separators to the right of the decimal point This pull request adds thin spaces to formatted BTC amounts (both sides of the decimal point), _but_ Thin spaces are avoided in the following cases:Copying from the transaction view (I and I\'m sure countless others rely on being able to cut and paste BTC values into spreadsheets)Transaction exports (for similar reasons) (BTW," i never even looked at Qt before yesterday and this ended up involving somewhat more non-trivial Qt code than I anticipatedso this really should be reviewed by someone who knows Qt) ETA: Are there other cases where we should avoid thousands separators?  (Or alternatively should the code avoid them by default and only insert them in certain cases and if so in which cases?)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,1,2014-05-09 23:05:40,44.55,,1,,"b'b"" BTW", this change also makes copying unconfirmed transactions consistent.  (Previously, copying from the context menu copied without the square brackets," but copying using Ctrl+C copied _with_ the square brackets.  Now it\'s consistentsly copied without square brackets (or thousands separators))""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,2,2014-05-09 23:05:40,59.08,,1,,"b'b"" I support the idea of using thin spaces (and have advocated it previously", just didn\'t get around to making a pull request). For consistency," you might want to change the descriptions of \\xc2\\xb5BTC and mBTC to use thin spaces too: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,3,2014-05-09 23:05:40,347.23,,1,,"b""b' Does this need any special precautions for parsing? What happens if you copy an amount", thin spaces and al, into the amount widget? Also when copy-pasting using double-click, it will see an amount with spaces in it as multiple units," probably? Or are these spaces special?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,4,2014-05-09 23:05:40,2.47,1,,,"b'b"" ~~I still think it makes more sense to use locale-specific number formatting (implemented in #3893) than invent a convention that inserts spaces in numbers~~ (**edit:** okay", not invent," according to the internet it\'s somewhat common as a unambiguous thousands separator). On the other hand this has a lot less impact on the code. Inserting separators in the decimals _after_ the decimal point is also strange. There is no locale that does that as far as I know.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,5,2014-05-09 23:05:40,61.55,,1,,"b'b"" Separators _after_ the point is absolutely 100% standard practice in SI notation.  It\'s pretty much universal in scientific fields.  (Pick up any physics textbook printed within the last 50 years and you\'ll see what I mean) It\'s true that", outside of scientific fields such conventions never developed," but that\'s largely because in mainstream use you rarely have very many digits to the right of the decimal point.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,6,2014-05-09 23:05:40,8.5,,,1,"b'b"" Re a locale-specific approach"," I\'m neutral on that point  mainly I went down this route because the comments in BitcoinUnits::format state that we don\'t want to do that :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,7,2014-05-09 23:05:40,3.88,1,,,"b'b"" I\'m really not certain on this. Both ways have long lists of advantages and disadvantages"," and I don\'t want a long shed-painting discussion. I don\'t want to make this decision at all. Any idea what other wallets do?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,8,2014-05-09 23:05:40,8.47,,1,,"b'b"" Maybe we need a preference to control this :-( Bitcoin Wallet for Android: no separators.  Armory: no separators to the right of the decimal point (don\'t know about to the left as it doesn\'t support units smaller than bitcoin yet). Really", most people probably don\'t complain about lack of thousands separators to the right of the decimal because most people don\'t know they exist (although how you\'re supposed to distinguish 0.00001 from 0.000001 without them is beyond me).  We don\'t have that problem yet, but I see people confuse 0.001 and 0.0001 often enough.  Maybe this is just more fuel for the argument for a units change though. But if the community really does move to \'bits\' then people are going to complain about the lack of them to the _left_ of the decimal.  Lots of people will have millions of bits," and knowing whether they have 10000000 bits or 1000000 bits or 100000 bits without having to count the zeros is important.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,9,2014-05-09 23:05:40,5.48,,1,,"b'b"" We all agree that decimal separators are useful. If it was up to me", we\'d have them already in 0.5.0. The problem is, in the Bitcoin community no one can ever agree on _how_ to do something," so we eventually end up with no decision at all after a very long discussion. BTW on a more technical level: Do you know what happens if a value (with thin spaces as thousands separators) is pasted into the bitcoin amount widgets? They need to be able to cope with this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,10,2014-05-09 23:05:40,1.18,,1,,"b""b' Re pasting"," no  I need to take a look at that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,11,2014-05-09 23:05:40,4.3,,1,,"b'b"" Parsing formatted numbers is going to be a bit of a can of worms if you also want to support locale-specific numbers.  You need to strip out thousands separators but not the decimal separator. Remember that 1",000 and 1.000 can mean the opposite of what you expect," depending which country you\'re in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,12,2014-05-09 23:05:40,1.47,1,,,"b'b"" #3893 actually implements such parsing based on the locale. But no need to worry about that here. We\'ll either use this or locale specific numbers", not both. I\'m reluctantly starting to see the advantages of this," although I\'m also sure a lot of people will complain (WHY DIDN\'T YOU JUST...).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,13,2014-05-09 23:05:40,2.28,,1,,"b""b' Well", we could always make it a preference (SI-style, locale-specific," or none).  Then all we have to argue about is the default :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,14,2014-05-09 23:05:40,4.92,1,,,"b""b' I tried to go that way in #3893 but it may result in confusion. People _will_ be using amounts formatted in this style in communication. Also internationally. So if different users have selected different options... And yes locale-specific formatting has the same drawback.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,15,2014-05-09 23:05:40,32.48,1,,,"b'b"" I had a look at pasting right now pasting anything with (thin) spaces isn\'t allowed as it fails validation.  Obviously we can fix this", but is there really a use case for allowing it?  I think I prefer the approach of trying to prevent formatted values leaking into the clipboard in the first place.  Parsing is a slippery slope what if I paste \'1000 mBTC\' for instance? Also, re double click," that already doesn\'t do the right thing at the moment (it doesn\'t select across dot) so this change doesn\'t really make it any worse.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,16,2014-05-09 23:05:40,5.55,1,,,"b'b"" Yes that should be fixed. It\'s very annoying if a website displays an amount in this format", for example, and it isn\'t accepted. I\'ve been very annoyed at this with my bank, which puts spaces in between some identifiers (for example, the IBAN) but subsequently fails to recognize them in that format, so you have paste it into some intermediate place to manually remove the spaces. You _cannot_ avoid these values from leaking into the clipboard. People will copy the balance from the overview page, for example, or from the request payment window to an email. Hacking every single place to do something else on  is not very elegant," either (or even realistic).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,17,2014-05-09 23:05:40,22.7,,1,,"b""b' Agreed"," will fix.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,18,2014-05-09 23:05:40,220.72,1,,,"b'b"" I\'ve fixed the spin box to display and accept values with spaces", and also fixed the confirmation message box not to wrap values. My biggest reservation at the moment is that, on my machine (Mac) thin spaces really aren\'t as thin as I\'d like.  In most contexts they do seem to display slightly narrower than a standard space, but only very slightly.  In message boxes they seem to display identically to ordinary spaces. Maybe it\'s a font issue," not sure.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,19,2014-05-09 23:05:40,27.23,,,1,"b""b' Great! It seems that thin spaces are supposed to be half as wide as a real space. There are even thinner spaces: url (SIX-PER-EM and HAIR)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,20,2014-05-09 23:05:40,159.62,1,,,"b'b"" Ok", changed from U+2009 THIN SPACE to U+200A HAIR SPACE which I think looks a bit better. Qt seems to have a bug whereby the thin spaces in the HTML message box get displayed as normal space.  I experimented with various workarounds, but it\'s hard to find one that\'s both supported by Qt\'s HTML engine and doesn\'t break the nowrap behaviour of the containing SPAN element. Only solution I could find was to display the space in a smaller font size, using an absolute font size.  6pt looks about right to me. Of course, it will need checking for suitable visual results on other platforms than Mac," since different font engines and default fonts might mean it needs tweaking differently for Windows and Linux.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,21,2014-05-09 23:05:40,43.2,,1,,"b'b"" Re a more general CopyRole the way the code is currently structured", it needs a separate role for each column.  I could have just edited the existing FormattedAmountRole though rather than adding a new one, but I thought it better to leave FormattedAmountRole as it was (even though it\'s no longer used after this change)," in case it\'s needed in the future. I agree that FormattedAmountWithoutThousands could better be called ExportFormattedAmountRole though""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,22,2014-05-09 23:05:40,2.65,,1,,"b""b' This is better than what we currently have"," but my preference would be for locale-sensitive printing and parsing in the Qt wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,23,2014-05-09 23:05:40,476.08,,,1,"b""b' With the current code"," the separation is barely noticable imho:![spacesep]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,24,2014-05-09 23:05:40,24.83,,1,,"b""b' What platform?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,25,2014-05-09 23:05:40,7.12,1,,,"b'b"" Although I did feel that on my Mac thin space was too wide but hair space a little narrower than ideal"," it wasn\'t quite as narrow as your screenshot. I think. Unfortunately these are ultimately just characters from a font so the actual width is subject to the whims of the font designer. The difficulty of getting the visual aspects right here is starting to give me reservations as to whether this is a sensible approach""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,26,2014-05-09 23:05:40,476.05,,1,,"b""b' Ubuntu 13.04"," xmonad.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,27,2014-05-09 23:05:40,255.15,,,1,"b'b"" ![screen shot 2014-05-11 at 14 28 46]url  I think it\'s marginally better on my system (OS X 10.9.2) but I agree it\'s probably a bit too narrow.  I\'ll see if I can experiment with other types of spaces.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,28,2014-05-09 23:05:40,26.6,,1,,b'b\' drak: because it\\\'s standard practice to do so in every scientific field.  You seriously want to have to count digits in order to distinguish 0.0000001 BTC from 0.00000001 BTC?  (Of course, you could fix this by writing 0.1 \\xc2\\xb5BTC  or 0.01 \\xc2\\xb5BTC).  And 1.000 and 1,"000 can both mean ""exactly one"" or ""one thousand"" depending on country", so are useless in any international context. As locale-specifc versus SI-style formatting, I don\\\'t feel very strongly on the issue.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,29,2014-05-09 23:05:40,139.2,,,1,"b'b"" In my opinion it\'s even enough spacing on sipa\'s system. This isn\'t about the user consciously noticing the space but more about guiding his eye. That function is fulfilled perfectly for me", I have no problem assessing the numbers without counting the digits. Even better test cases would be amounts with many identical digits, as that\'s what\'s especially problematic to asses right now (e.g. 1 BTC in \\xc2\\xb5BTC, 1 Satoshi in BTC). @drak BTC is already borrowing SI prefixes," I don\'t see why it can\'t borrow the only existing convention that makes large amounts of digits after the decimal point readable?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,30,2014-05-09 23:05:40,25.72,,1,,"b""b' Disagree... I need conscious effort to see the grouping. Without it"," it just looks misaligned.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,31,2014-05-09 23:05:40,49.02,,1,,"b'b"" drak: I\'m not a scientist", I\'m a Linux sysadmin (although I did study physical sciences to university level). I really think the comparison with fiat currency (like accounting software or ATMs) is misguided because:Fiat currency pretty much invariably works either in whole numbers or with exactly two decimal places.  This pretty much avoids the ambiguity, and also avoids the requirement for grouping to the right of the decimal pointWith the exception of the Eurozone, fiat currency is largely country-specific anyway.  If I\'m trying to send fiat to someone in another country or am requesting fiat payment from someone in another country then whether we write dots or commas really is the least of our problems As for exchanging accounts, spreadsheets or other financial documents across international borders, this isn\'t something the general public does -and accounting professionals  who work in this area will be used to the issues. We\'re not special flowers here; the requirement to be able to accurately and precisely communicate numerical values across international boundaries -where those values might be very large or very small, and might contain a large number of significant digits -is not new to Bitcoin.  Smart people have already thought about this problem and solved it decades ago.  But if the Bitcoin community wants to reinvent the wheel, be my guest. I watch with some bemusement the reactions to suggesting we use this standard and widely adopted convention -but I\'m particularly interested in the reaction to grouping the digits to the right of the decimal point, which has ranged from surprise to active hostility.  What this really proves to me is that, even amongst a highly technical set of users, most people _really_ aren\'t used to dealing with numbers with more than a couple of digits to the right of the decimal point on a day-to-day basis.  More than anything," this convinces me that \\xc2\\xb5BTC is the only way to go.  (And I say this as someone who started out not that long ago as a units change skeptic.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,32,2014-05-09 23:05:40,7.3,,1,,"b'b"" I should add that I wasn\'t aware of Wladimir\'s pull request (#3893) when I submitted mine.  I chose to use the SI convention _specifically_ because BitcoinUnits::format contains the comment:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,33,2014-05-09 23:05:40,11.63,,1,,"b'b"" sipa:  I\'ve reverted to U+2009 THIN SPACE On reflection I think this looks right.  (It was the QMessageBox HTML issue which originally took me down the path of thinking thin spaces are too wide.  But that appears to be a Qt bug"," which I\'ve since worked around.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,34,2014-05-09 23:05:40,1.83,,,1,"b""b' ![screen shot 2014-05-11 at 18 54 44]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,35,2014-05-09 23:05:40,3.3,,1,,"b""b' Visual misalignment could perhaps be avoied by aligning numbers around the period. This would also make numbers of similar sizes look more similar. Alternatively", and perhaps superiority, all digits could be printed at all times, even if they are zero\\xe2\\x80\\x94 which would guarantee alignment and perhaps prevent some misreading. (just some thoughts," I am not a UI guru)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,36,2014-05-09 23:05:40,1.3,,,1,"b""b' ![screen shot 2014-05-11 at 18 59 12]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,37,2014-05-09 23:05:40,0.6,,,1,"b""b' ![screen shot 2014-05-11 at 19 00 37]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,38,2014-05-09 23:05:40,9.53,,,1,"b""b' gmaxwell: yeah"," one or other of those would seem to be a good idea not sure which I prefer'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,39,2014-05-09 23:05:40,10.22,1,,,"b'b"" BTW"," just for the record: TODO: Review all remaining calls to BitcoinUnits::formatWithUnit to determine whether the output is used in a plain text context or an HTML context (and replace with BtcoinUnits::formatHtmlWithUnit in the latter case).  Hopefully there aren\'t instances where the result could be used in either context. (I\'m not going to do bother to do this  there\'s any consensus to proceed with this)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,40,2014-05-09 23:05:40,7.37,,1,,"b'b"" Now I have a different concern. Without doing effort"," this looks like just very big number to me. The fact that one of the spacings has a dot in it doesn\'t stand out. ![spacesep]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,41,2014-05-09 23:05:40,5.62,,1,,"b""b' Make the font size slightly smaller for the fractional part?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,42,2014-05-09 23:05:40,11.5,1,,,"b'b"" sipa: Yeah", I know what you mean.  But I\'m not sure replacing the spaces with commas would be better in that respect if anything it might be worse.  Myabe gmaxwell\'s idea\'s would help, though. luke-jr: interesting idea.  I think this approach works with mBTC or \\xc2\\xb5BTC where the digits in the small font are, in a very real sense," insignificant.  But with BTC you\'re not really getting into the territory where the small digits are representing insignifcant amounts of money""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,43,2014-05-09 23:05:40,2.97,,1,,"b""b' 75% opacity text then?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,44,2014-05-09 23:05:40,6.8,1,,,"b'b"" Not sure.  Also I worry that either smaller font or transparency will compromise readability.  It\'s not like we\'re starting with a particularly large font.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,45,2014-05-09 23:05:40,6.0,,,1,"b'b"" Just picked up an old textbook from my university days", and interestingly at least in this particular book they seem to use spaces to the right of the decimal point if there are five or more digits, but they don\'t if there are only four. Now I\'m wondering if that\'s the correct convention or perhaps more generally you prefer a final group of four digits to a single hanging digit (I couldn\'t immediately find any examples of exactly 7 or 10 digits to the right of the decimal point so I can\'t tell) leofidus: what do you think?  Do you know where this is documented? EDIT: Actually, I think it is the single hanging digits that kept looking wrong to me.  Part of why I kept trying to reduce the space width, I think, as I mistook the reason it looked wrong EDIT: It appears this book does the same to the left of the decimal point.  It writes \'1000\' without a thousands separator," but writes \'10 000\' with one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,46,2014-05-09 23:05:40,6.58,,,1,"b'b"" This looks a lot better to me now ![screen shot 2014-05-11 at 20 06 09]url  I\'d love to have confirmation.  And particularly to know what the right thing is to do when you have e.g. seven figures to the right of the point (I couldn\'t immediately find an example"," but I suspect now the right thing is a group of three followed by a group of four)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,47,2014-05-09 23:05:40,9.82,1,,,"b""b' Not committing yet until someone can research whether the correct rule is to always prefer a final group of four to a final single digit or whether the rule should be to always place a thin space every three digits"," but only if you have five or more digits. If the former is right (I suspect it is) fix is to replace r_size with r_size-1 in  and '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,48,2014-05-09 23:05:40,185.15,,1,,"b'b\' @roybadami the International Bureau of Weights and Measures [says in the SI brochure]url  ""Following the 9th CGPM (1948", Resolution 7) and the 22nd CGPM (2003, Resolution 10), for numbers with many digits the digits may be divided into groups of three by a thin space, in order to facilitate reading. Neither dots nor commas are inserted in the spaces between groups of three. However, when there are only four digits before or after the decimal marker," it is customary not to use a space to isolate a single digit."" So you\\\'re right. It\\\'s 1000", but 10 000 and 1 000 000. Similarly 0.0001 but 0.000 01 and 0.000 000 1.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,49,2014-05-09 23:05:40,27.17,,,1,"b'b"" Oh", excellent, thanks leofidus.  Actually," I was wrong -I had assumed maybe in the seven digit case we would write 0.000 0001  EDIT: Although looking at my version written down it looks wrong.  I\'ll fix to implement to correct version.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,50,2014-05-09 23:05:40,20.47,,1,,"b'b"" leofidus: while we\'re at it"," do you know what\'s the correct spacing between the value and the unit is it space or thin space?  (I skimmed the document you linked but couldn\'t find the right section.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,51,2014-05-09 23:05:40,9.42,,1,,"b""b' I thought it was a thin space"," but the SI brochure seems to only mention a space (section 5.3.3). Another source (German Wikipedia) recommends a thin non-breaking space. The fact that units are treated as mathematical entities also suggests thin spaces (if I remember mathematical typesetting right).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,52,2014-05-09 23:05:40,5.63,,,1,b'b\' Could I suggest that people who feel strongly one way or the other on this issue identify which locale(s) they\\\'re  lived in?  (EDIT: And what the number formatting conventions are in those locales, where we\\\'re not all likely to know already.) FTR I\\\'m in boring old en_GB. (Well," boring at least in the sense that we don\\\'t have any particularly exotic number formatting conventions.) I\\\'m interested because those in en_GB or en_US saying ""use locale-specific number formatting"" counts for little since it won\\\'t have much impact on us.  I\\\'d like to here what people living in _different_ locales want -particularly people living in locales (such as de_DE) that use dot as the preferred thousands separator. I don\\\'t know", but strongly suspect," that people in de_DE (German German) have to contend with a mishmash of localized and non-localized software.  So that ""1.000"" _might_ mean ""one thousand"" from a localized app"," or it _might_ mean ""exactly one"" from a non-localized app (that always uses a dot as the decimal point", regardless of locale). Case in point, Bitcoin Core is currently exactly such an app that always used dot," regardless of locale. So it\\\'s not at all clear to me that de_DE residents will even thank us for switching from the current ""1000"" to a localized ""1.000""", since the latter probably can\\\'t be correctly interpretted without context. But I\\\'d love to know what people in those locales really think.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,53,2014-05-09 23:05:40,7.67,1,,,"b'b"" I\'m a de_DE user who appreciates the unambiguity of unlocalized numbers. When I copy a price of 1",000 mBTC from a US merchant to my bitcoin client, I would be very annoyed if local aware parsing would suddenly read it as 1 mBTC. I\'m used to switching between the number formats constantly, but BTC provides less clues the usual," as somebody else here already said.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,54,2014-05-09 23:05:40,22.32,,,1,"b'b"" Not sure what\'s going on"," but pretty sure this wasn\'t caused by deciding not to insert thousands separators into four digit numbers :) 1:46:22 10 : Failed to verify block: : Block had too many Signature Operations  at (:673)  at (:791)  at (:363)  at (:239)  at (:218)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,55,2014-05-09 23:05:40,433.82,,1,,"b'b"" @gmaxwell Aligning on the \'.\' would be the best solution", but it\'s harder to do, it would require at least a custom cell formatter for the transaction table to always center around the dot.That\'s why it was never done. The table formatter also doesn\'t support HTML formatting so the \'hidden digit\' approach doesn\'t work either. That approach _could_ be used for the balance display on the overview page," although you\'d need a fixed-width font for it to work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,56,2014-05-09 23:05:40,36.32,,1,,"b""b' @laanwj: Most fonts use monospaced digits anyway", I think.  As for hidden digits," U+2007 FIGURE SPACE looks like it was invented specifically for this purpose. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,57,2014-05-09 23:05:40,171.32,,1,,"b'b"" Ok", if fonts use monospaced digits and there exists a digit-wide space," it sounds like it\'s suddently pretty easy to do. I did not know that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,58,2014-05-09 23:05:40,624.07,1,,,"b'b"" Ok", so I was a bit worried about the convention that I and @leofidus had been researching, where if you have exactly four digits on either side of the decimal point, you omit the thousands separator and just write a group of four.  This would mess up digit alignment in tabular data -and it would also make it much harder to line up the decimal points. Fortunately, looking at actual real life data, people don\'t actually like printing tables that look horribly misaligned.  I found two ways in which this was tackled in real life tabular data to the right of the decimal point (presumably the same approaches can be used to the left).In a table where most values had four decimal places, but the odd one had five, they simply suspended the use of thin spaces  In a table where there were lots of numbers with five decimal places, but the odd one with four," they simply suspended the rule special casing four digits: So it seems that we can be pragmatic and do what makes sense given the nature of the data.  It seems eminently doable to do something sensible with this here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,59,2014-05-09 23:05:40,480.45,,,1,"b'b"" @roybadami Even scientists can be pragmatic sometimes! But indeed", it makes sense to simply group per three, at least in the overview page and transaction overview," as having the numbers below each other align up is more important here. It\'s also easier for people to learn this (for many) new convention of grouping digits after the dot if done consistently per three. To be honest I\'m still a bit divided on the whole concept of grouping digits after the dot. Maybe people that want that should just switch to  to get the long slew of digits before the dot. But it might grow on me...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,60,2014-05-09 23:05:40,534.75,,1,,"b'b"" This was getting messy", so I\'ve squashed to a single commit.  Implemented alignment in the overview and transaction table.  It gets kinda messy though, when combined with the use of [square brackets] to show unconfirmed transactions.  Maybe it\'s good enough," though?  (Perhaps I could float the closing bracket to the left of the figure spaces in the transaction view?)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,61,2014-05-09 23:05:40,5.95,,,1,"b""b' ![screen shot 2014-05-17 at 15 00 49]url ![screen shot 2014-05-17 at 15 00 55]url ![screen shot 2014-05-17 at 15 01 07]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,closed,2014-05-17 14:03:33,897.88,16,31,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,reopened,2014-05-17 14:03:35,0.03,16,31,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,62,2014-05-09 23:05:40,1325.65,,,1,"b'b"" I agree it\'s impossible to get alignment to work properly as long as brackets can appear as well as numbers.Choosing something else than brackets to show that the amount doesn\'t count towards the spendable balance would be fine with me", BTW, if clear," I\'m not wedded to them :)**Edit**: But it\'s fine to leave that for another pull... I think it looks fine like this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,63,2014-05-09 23:05:40,14.33,1,,,"b'b"" I\'m not sure what would be better though", but I agree," the misalignment isn\'t that horrible. I think I\'ll float the right bracket to the left of the spaces (in the case where there is no unit) and then leave it at that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,64,2014-05-09 23:05:40,1251.07,,,1,"b'b"" I\'ve tested this a bit and think it looks great in uBTC", reasonable in mBTC, and plain strange in BTC. So much empty space... I\'m starting to think we should just pad with zeros. ![ubtc]url Microbtc: looks great ![btc]url BTC: too much empty space makes it hard to relate things. Having whitespace between digits after the dot," combined with padding makes for a lot of whitespace. ![btc_null]url BTC: now with zeros for padding. Looks much better to me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,65,2014-05-09 23:05:40,468.48,,1,,"b""b' I agree that padding with zeros looks much better'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,66,2014-05-09 23:05:40,137.48,,,1,"b""b' On balance"," I think showing a consistent number of decimal places is better anyway. But that may be because of my physics background again in a scientific context the number of decimal places quoted conveys the precision of the quantity.  0.001 BTC and 0.00100000 BTC mean slightly different things (the former may have been rounded to the nearest millibitcoin; the latter clearly is exact down to the last satoshi)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,67,2014-05-09 23:05:40,1191.32,1,,,"b'b"" @roybadami Yes", agreed. Let\'s always show full precision. It also removes all doubt as to how subdividable bitcoins are," no matter what unit they have selected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,68,2014-05-09 23:05:40,890.27,,1,,"b'b"" @roybadami I\'d like to merge this -are you going to update to do padding with zeros instead of spaces?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,69,2014-05-09 23:05:40,1201.38,,1,,"b""b' Sure will do shortly.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,70,2014-05-09 23:05:40,1085.47,1,,,b'b\' Done.  Note that, ideally, the following should still also be done (sorry," I don\\\'t have time to look at this right now): ""TODO: Review all remaining calls to BitcoinUnits::formatWithUnit to determine whether the output is used in a plain text context or an HTML context (and replace with BtcoinUnits::formatHtmlWithUnit in the latter case). Hopefully there aren\\\'t instances where the result could be used in either context."" Using formatWithUnit in an HTML context risks wrapping quantities at the thousands separator.  More subtly", it also results in a standard space rather than a thin space, due to a bug in Qt\\\'s XML whitespace canonicalisation.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,71,2014-05-09 23:05:40,83.82,,1,,"b""b' Fixed merge conflict", removed now-redundant arguments to some methods, and added a comment re the TODO. NB: this builds and runs for me," but is _very_ lightly tested'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,72,2014-05-09 23:05:40,20.0,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,73,2014-05-09 23:05:40,1221.33,,1,,"b'b"" @laanwj I just realised I might have misinterpreted what you were asking for. What I\'ve _done_ is to completely remove the code that strips trailing zeros", so that all bitcoin quantities, _everywhere_, are to full precision. The alternative would have been to retain the fAlign flag that I introduced to control padding with figure spaces, and to only show full precision in those contexts where alilgnment is requested (currently the overview page and the transaction history).  In that case, sums of bitcoin elsewhere (e.g. in confirmation dialogs) would remain as now," showing as few as two decimal places. Let me know if it was the latter you wanted and I\'ll revert the appropriate parts of the changes. roy""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,74,2014-05-09 23:05:40,1009.22,,,1,"b""b' Sounds good to me"," to be consistent here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,closed,2014-07-18 11:59:35,1316.0,19,37,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4167,closed,-,-,-,19,37,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,opened,2014-05-11 05:41:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,title,2014-05-11 05:41:45,00:00,,1,,"b""b' Add integrity checks for missing blk*.dat files.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,body,2014-05-11 05:41:45,00:00,1,,,"b'b"" This is a fix for #3957. Patch behaviour: if a peer requests a block which is in the block index", but the block file (blk*.dat) is missing, an error is logged to  and no response is sent to the peer. Buggy behaviour: without this patch," an invalid \'block\' message is sent which contains null bytes. Should anything further be done in response to this issue?  Perhaps re-request the block from peers?  Something else?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,1,2014-05-11 05:41:45,117.55,1,,,"b'b"" A reject message seems appropriate. It may be necessary to disconnect the peer as well"," since the blockchain downloading code cannot handle a peer\'s failure to provide the block.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,2,2014-05-11 05:41:45,30.37,1,,,"b""b' @luke-jr currently all of the rejection states seem to relate to the peer doing something unacceptable (MALFORMED", INVALID, OBSOLETE, DUPLICATE, NONSTANDARD, DUST, INSUFFICIENTFEE, CHECKPOINT).  Does there need to be an additional state added for when the request was unable to be fulfilled due to some runtime issue?  like," REJECT_UNAVAILABLE?  Similar in purpose to an HTTP 503.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,3,2014-05-11 05:41:45,1.9,,1,,"b'b"" This should just be an assert right now"," it\'s not a covered case in the code. (we probably should test for it at startup too).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,4,2014-05-11 05:41:45,8.83,,1,,"b""b' @gmaxwell That makes sense.  So the process is terminated if a missing block is requested.  Would this behaviour address the concern raised by @luke-jr"," ie. the requesting node will continue syncing? I will also work on doing the check of blk*.dat files on startup so it can be merged at the same time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,5,2014-05-11 05:41:45,2.18,,1,,"b""b' Hanging up should make the peer choose a new syncnode"," so it should indeed fix that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,6,2014-05-11 05:41:45,0.57,,1,,"b'b"" Indeed", there is currently no level of service you can indicate to peers between NODE_NETWORK and nothing it all. If you can\'t serve every block you advertise, you\'re lying to your peers. You could in theory downgrade to nothing at all, but that\'s pointless, as peers also won\'t expect you to validate or relay transactions anymore. For now, this should just cause the program to quit. In the longer term, we should push for some protocol changes to indicate partial block availability," so this can become a supported case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,7,2014-05-11 05:41:45,98.7,,1,,b'b\' Further question: Considering this can and will shut down peoples nodes," ideally there is some communication to the user about what has happened and how they can repair it.  So what are the steps to repair this problem?  I tried restarting with a -rescan but it didn\\\'t fix the problem.  I also had  present but it said ""Already have block 1"" even though it was missing from disk.  Does the user have to manually source the missing .dat file and copy it into their blocks directory?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,8,2014-05-11 05:41:45,9.48,,1,,"b""b' Oh", I just realised that -reindex fixes it.  So," I guess it should automatically run a -reindex if the startup check finds any missing .dat files?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,closed,2014-05-11 12:07:34,385.82,3,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,reopened,2014-05-11 12:08:19,0.75,3,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,9,2014-05-11 05:41:45,122.57,,1,,b'b\' See attached new patches.On startup," LoadBlockIndexDB() does an additional scan of blk*.dat files to check that all files required by the index are present and readable.If ""getdata"" is received for a block thats file is missing"," the process will abort with a failed assertion. This hooks into the existing code that says ""Error loading block database.  Do you want to rebuild the block database now?"" with an option to reindex or abort.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,10,2014-05-11 05:41:45,44.22,,1,,"b'b"" Pulltester hasn\'t even begun sending any blocks at the time it fails. There\'s no blocks to load.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,11,2014-05-11 05:41:45,3.18,,,1,"b'b"" @sipa It seems my code is failing on first startup with a blank datadir.  nLastBlockFile defaults to 0", but blk00000.dat isn\'t there yet at that point.  I\'m trying to find if there\'s a nice solution to this," other than skipping the check with nLastBlockFile == 0.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,12,2014-05-11 05:41:45,6.65,,1,,"b""b' You can iterate the mapBlockIndex entries"," and build a set of the occurring nBlockFile fields of those with BLOCK_HAVE_DATA set.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,13,2014-05-11 05:41:45,53.4,,1,,"b'b"" Updated patch to use @sipa\'s method for finding blk files used by the index.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,14,2014-05-11 05:41:45,308.03,,1,,"b""b' Untested ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,15,2014-05-11 05:41:45,402.63,,1,,"b""b' Renamed this pull request to better describe the new patch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,16,2014-05-11 05:41:45,588.55,,1,,"b""b' Untested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,17,2014-05-11 05:41:45,72.02,,,1,"b""b' Oh I see.  I had assumed that the file gets closed when the pointer goes out of scope.  C++ is kinda new for me :) The same type of loop is in ThreadImport() as well when reindex is done"," so possibly that code also leaves file handles open. My code should really just use a stat() call instead but I wanted to re-use the existing OpenBlockFile code to prevent having to hardcode the file paths in a 2nd place.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,18,2014-05-11 05:41:45,18.45,,,1,"b""b' Pushed new patch which wraps it in CAutoFile. (and re-tested) Thanks for the review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,19,2014-05-11 05:41:45,14.37,,,1,"b'b"" @ashleyholman Yup", it\'s indeed error-prone to have to manually close handles. We try to write code that frees something automatically when it goes out of scope, and if not we create RAII wrappers such as CAutoFile," which you\'ve already found :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,20,2014-05-11 05:41:45,30.38,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,21,2014-05-11 05:41:45,810.32,1,,,"b'b"" False alarm.  ThreadImport() doesn\'t leak any file handles because LoadExternalBlockFile() closes them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,22,2014-05-11 05:41:45,692.08,,,1,"b'b"" ACK"," works for me.I\'ve tried moving blk00000 and blk00001 out of the way and successfully got an error.Moved them back and bitcoind worked again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,closed,2014-05-19 15:02:42,174.38,4,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4173,closed,-,-,-,4,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,opened,2014-05-28 18:35:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,title,2014-05-28 18:35:33,00:00,,1,,"b""b' Non-recursive make'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,body,2014-05-28 18:35:33,00:00,,,1,"b'b"" I decided to take care of this before handling the libsecp256k1 changes", because this should end up making future work much less tangled. The point of this work is to avoid having separate logical builds for each directory. That causes complications because one target cannot know about changes in another directory. For example, if  changes, the qt target does not know that, and will continue to happily  against the stale intermediate libraries. With a non-recursive system, however, each target is aware of all of its own components. In the example above, changing  would force a rebuild of all files that include that header, regardless of where they\'re located. Non-recursive also means that lots of spaghetti can go away, because we can include any dependency anywhere we want. It also helps with parallelism because multiple targets can be compiling at once. A quick test shows that a fully ccached make -j8 of src/ (eliminating compiler time) is reduced from 20.4 sec to 13.7 sec. A make -j8 without ccache is reduced from 73.6 sec to 62.1.  description of the difference here: url  Build logic moves from individual \'s to include files, which the main  includes. This avoids having to manage a gigantic single Makefile. Stub Makefiles have been added to imitate previous behavior, for those who may have gotten used to doing a make or clean in specific subdirs. These can be expanded as desired, they\'re very simple for now. Most deviations from the original \'s involve eliminating $(BUILT_SOURCES), so that generated files are created as late as possible," and without requiring a vanilla \'make\' (without a target) as they do currently.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,1,2014-05-28 18:35:33,3.13,,,1,"b'b"" @jgarzik You originally nack\'d non-recursive"," but I think your opinion has shifted since. You\'ve got right of first refusal :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,2,2014-05-28 18:35:33,11.4,,,1,"b'b"" Untested ACK. Build-system changes like this shouldn\'t require extensive review; if the pull-tester is happy"," I say pull it and do the final  as future pull requests.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,3,2014-05-28 18:35:33,49.28,,,1,"b'b"" Build works fine for me. I tried to reproduce #3955: Seems it doesn\'t detect the change in another directory even with the non-recursive make.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,4,2014-05-28 18:35:33,46.88,,1,,"b'b"" The top-level is disconnected from the others", that hasn\'t changed. You\'re looking for:  . I could move it all up a dir so that would work," but I\'m not sure there\'s much to gain from that?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,5,2014-05-28 18:35:33,87.37,,,1,"b'b"" Don\'t care much"," but changes look fine to me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,closed,2014-05-28 23:21:29,285.93,0,2,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,reopened,2014-05-28 23:21:32,0.05,0,2,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,6,2014-05-28 18:35:33,88.42,,1,,"b'b"" Whoops"," didn\'t mean to close.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,7,2014-05-28 18:35:33,398.9,,,1,"b'b"" @theuni I don\'t mind"," but I\'d like to be able to close that issue and others that claim \'the build system is broken!&!!\'. Thanks for explaining. ACK in any case as this speeds up the build.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,8,2014-05-28 18:35:33,785.18,,1,,"b""b' No objection if others want it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,9,2014-05-28 18:35:33,72.77,,1,,"b'b"" Pushed a cleaned up and rebased version with some additional changes. On @gavinandresen\'s advise", I\'m not going to bother breaking the move from .am\'s to .include\'s into smaller chunks for the sake of easier review. It\'s a pretty straightforward change. Now that we\'re non-recursive, things like AM_CPPFLAGS become global to all builds. I\'ve removed our usage of those globals in favor of setting the flags per-target. Also (mainly to help in my testing of the changes) I\'ve silenced the qt build spew. Now, the usual shows the full output as would be expected. As discussed with @laanwj yesterday: This does not address the issue in #3955," but it doesn\'t regress it eaither. That can be addressed as a follow-up. I\'ve removed the RFC description as (if pull-tester is happy) I believe this is now merge-ready.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,10,2014-05-28 18:35:33,5.28,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,11,2014-05-28 18:35:33,572.98,,,1,"b'b"" Pulltester is happy. I\'ve done some testing as wellNormal build: OKDisablewallet build: OK : OK **Note** that before pulling you need to remove the old generated Makefles", as otherwise you get a file collision error. (or alternatively," to return to a clean working directory)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,closed,2014-06-06 06:04:36,403.07,0,6,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,12,2014-05-28 18:35:33,328.15,,1,,"b'b"" Doing make -j2 check in src/: It seems that when descending into make check-TESTS", all libbitcoin_server and libbitcoin_common objects are rebuilt (very fast, probably ccache\'d)," but still... I\'d expect the makefiles to only build them once?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4241,closed,-,-,-,0,7,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,opened,2014-06-14 00:33:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,title,2014-06-14 00:33:03,00:00,,1,,"b""b' Proposal: disconnect clients sending unrequested txs. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,body,2014-06-14 00:33:03,00:00,1,,,"b'b"" I am not sure if this is the correct place for new proposals", so I apologize in advance if this is the wrong place. btcd currently disconnects peers that sending unrequested txs: 18:36:03 2014-06-13 [INF] BMGR: New valid peer 173.228.29.187:58881 (inbound) (/BitCoinJ:0.10.3/)18:36:04 2014-06-13 [WRN] BMGR: Got unrequested transaction ae238ff036467cf3f6fd83bb4987e287109e2423b702da319146cd8e4bf2eae8 from 173.228.29.187:58881 -disconnecting  I believe bitcoinj does this to avoid a roundtrip. However, I see a few issues with accepting unrequested txs.  A peer can easily cause bitcoind to waste time processing TXs, fill and max out the orphan tx database dropping random txs from the orphan tx database, wasting bandwidth, etc. A potential DoS target. There is no requirement that a client must send an  , wait for a  , than send a  .  Currently, bitcoind will accept unrequested txs. I am proposing bitcoind not accepted unrequested txs," forcing peers to send an first and respond to requests. I\'d like to hear thoughts from others.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,closed,2014-06-14 03:08:11,155.13,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,reopened,2014-06-18 14:13:34,665.38,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,1,2014-06-14 00:33:03,826.88,,,1,"b'b"" So", in some cases it makes sense from an efficiency point of view tobroadcast transactions (or blocks!) directly without advertising themfirst, if you _know_ the peer does not have them yet. If you just createdthe transaction yourself or mined the block yourself, this is an obvioustruth. So, alternative proposal: trigger DoS scoring when receiving anunadvertized  that you do already have. Pros:Optimizes propagation latency slightly.Is conpatible with all existing behavior in clients afaik. Cons:More complex network rule.Assumes that every peer (or at least every NODE_NETWORK peer) will be  interested in the actual  (which is currently likely the case," but  we don\'t know the future variety of network nodes).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,2,2014-06-14 00:33:03,0.4,1,,,"b'b"" If we accept your premise that there are DoS attacks here...... then I don\'t see how forcing attackers to jump through one extra hoop (send an \'inv\' first) fixes them. Attackers will just send \'inv\' messages first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,3,2014-06-14 00:33:03,4.77,1,,,"b'b"" Gavin: the idea is not to just require them to just send an inv first. Theidea is to only allow an incoming tx message when it was getdata\'d before.If an attack sends an inv for something we already have"," we never getdata.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,4,2014-06-14 00:33:03,3.52,1,,,"b'b"" There are several cases where the receiver of an inv message might not actual want the data.Here are two cases:The data has already been requested from another peer and it\'s currently in-flight.  There is no need to process the same data again", so it\'s possible to ignore the inv message, or add it to a list of peers known to have the data so it can be requested from them should the in-flight request fail.The data is already available in a local cache or in the local db. By giving nodes the chance to choose whether or not to send a getdata through first sending it an inv," the decision is left up to the receiver whether or not it needs the data.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,5,2014-06-14 00:33:03,72.05,1,,,"b'b"" My point is that this will not fix any of the DoS attacks that hypothesized", because attackers will never send something you already have. If the DoS attack is incoming bandwidth:  attacker can just send an endless stream of orphan-and-will-never-have-inputs-satisfied transactions. If the DoS attack is disk or memory thrashing looking up transaction previous inputs: same. If the proposal really isn\'t about DoS attacks but is about optimizing the networking p2p protocol," then okey dokey; I\'ll let networking protocol experts argue over what the Most Optimal Behavior is.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,6,2014-06-14 00:33:03,1307.25,,1,,"b'b"" On a somewhat related note", I\'m seeing many peers sending  many block invs (not just the latest block) without any getblocks having been sent first. This was contributing to the very high orphan block count that some people were seeing. My pull request #4431 makes it so that blocks aren\'t requested from any node other than the syncnode (which is also changed after every 500 blocks," or sooner).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,7,2014-06-14 00:33:03,1388.27,1,,,"b""b' To me it seems to late to change this", too much software relies on this. But if you still think this is worth the trouble, the place for protocol-level change proposals such as this would be a BIP," which can be proposed and discussed on the -dev mailing list (see url  ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,closed,2016-02-16 12:36:11,1342.62,6,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4338,closed,-,-,-,6,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,opened,2014-06-18 18:09:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,title,2014-06-18 18:09:57,00:00,,1,,"b""b' Make CBlockIndex a subclass of CBlockHeader'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,body,2014-06-18 18:09:57,00:00,,1,,"b'b"" Seems more in line with DRY and although I\'ve been looking for a reason not to do it I\'ve not been able to find it. Also an assignment with no apparent effect (nVersion = this->nVersion) in CBlockHeader\'s IMPLEMENT_SERIALIZE is removed. Note that if CBlockIndex\'s default constructor used sets CBlockHeader::CURRENT_VERSION as default value for its nVersion instead of 0", I could remove two more lines. If you know a reason why I cannot make that change," I will use your explanation to replace my TODO comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,1,2014-06-18 18:09:57,162.15,,1,,"b'b"" I need to think more about this"," I\'m closing it for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,closed,2014-06-18 20:52:12,162.25,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,2,2014-06-18 18:09:57,916.27,,1,,"b'b"" I haven\'t looked at the code", but in general yes, CBlockIndex could be asubclass of CBlockHeader. The reason it is not yet the case is thatCBlockHeader originally did not exist, and only CBlock existed. Now thatthe header is split off it could become a common ancestor to both. However, do not remove nVersion = this->nVersion. The local variablenVersion is defined by the IMPLEMENT_SERIALIZE methods," and is theserialization version used. It may be necessary for future protocolupgrades that change serialization (though that would imply a hardfork).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,reopened,2014-06-21 01:25:41,273.48,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,3,2014-06-18 18:09:57,14.15,,1,,"b'b"" I\'m not very keen on making core data structure methods virtual. It adds indirection overhead", and prevents inlining. You can just override the method, no? You\'ll get the more efficient cached version when using a CBlockIndex reference," and the old on-the-fly-computed hash when using a CBlockHeader one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,4,2014-06-18 18:09:57,684.22,1,,,"b""b' Yes", in this case is polymorphism is completely unnecessary," I just have to unify GetHash() and GetBlockHash() and remove that ugly TODO comment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,5,2014-06-18 18:09:57,666.77,1,,,"b'b\' The main objective of this PR is ""don\\\'t repeat yourself"" and sepcially get rid of those field-by-field ugly mappings. But it could be also solved with simple composition instead of inheritance.That would require more work since pindex->nTime would turn into pindex->header->nTime (the same for CBlocks)", but the end result is probably more readable (since you don\\\'t have to take inheritance into account).Whatever it\\\'s done I think it should be the same for both CBlock and CBlockIndex. Thoughts?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,6,2014-06-18 18:09:57,206.88,,1,,"b""b' I only now realize that CBlockIndex did not store the hashPrev", but only a pointer to the previous CBlockIndex instead; changing that means adding 32 bytes to every CBlockIndex in memory," which means some 10MB extra RAM. That seems like a high cost for a minor code cleanup.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,7,2014-06-18 18:09:57,43.02,,,1,"b'b"" That\'s very interesting.Using composition wouldn\'t help either", unless the indexes share the headers with other classes," say CDiskBlockIndex or CBlock.I don\'t know which of these structures are maintained more permanently and which only temporarily in memory.What I\'m proposing is to have a common container (say a map) and let the indexes and blocks have a pointer to their header.I know that would be a complex change so I\'m thinking out loud to see if you think it would make any sense at all. How much header data duplication do you think it\'s out there? A much simpler solution would be to create a new class CProtoHeader which lacks hashPrev and which CBlockHeader and CBlockIndex both extend. But that\'s not saving anything either and it\'s not particularly beautiful (specially considering that CDiskBlockIndex extends from CBlockIndex but also has hashPrev). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,8,2014-06-18 18:09:57,56.05,,1,,"b""b' A CBlockIndex instance is permanently held in memory for every known block.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,9,2014-06-18 18:09:57,23.05,,1,,"b'b"" I was asking if there was any other structure that is similarly contained in memory and contained a header too. Probably not. Anyway", maybe there\'s another solution. Now that the index has hashPrev," it may be possible to delete uint256\\\\* phashBlock to take back the memory space...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,10,2014-06-18 18:09:57,13.17,,1,,"b'b"" Yes", you could, but at the cost of needing to look up hashPrev inmapBlockIndex on every access," and still only reclaiming 8 out 32 bytes. Idon\'t think that is worth it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,11,2014-06-18 18:09:57,406.67,,,1,"b""b' Automatic sanity-testing: FAILED ", see url  for binaries and test log. This could happen for one of several reasons:1. It chanages paths in -mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in -tester)2. It  tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)4. The test suite fails on either Linux i386 or Win325. The block test-cases failed (lookup the first bNN identifier which failed in url  If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,closed,2014-07-02 16:18:33,892.87,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4366,closed,-,-,-,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,opened,2014-06-20 13:17:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,title,2014-06-20 13:17:01,00:00,,1,,"b""b' no resize osx 10.9.3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,body,2014-06-20 13:17:01,00:00,,1,,"b""b' new ver 0.9.2.1url  url  And"," Why did you change the font?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,1,2014-06-20 13:17:01,242.57,,1,,"b'b"" I don\'t see this on my 10.9.3 retina macbook with 0.9.2.1. Could you please provide some details on your config"," and exactly what you need to do to cause the stretching? Have you seen this behavior in previous releases?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,2,2014-06-20 13:17:01,992.3,,,1,"b""b' hmmm", relaunch client, and problem gone," but I think not forever.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,closed,2014-06-23 09:52:58,1235.95,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,3,2014-06-20 13:17:01,17.27,,1,,"b""b' why close?folded"," unfolded after 10 minutes and again the same thing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,reopened,2014-06-23 10:09:24,16.43,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,4,2014-06-20 13:17:01,1.23,,1,,"b'b"" @ZPK4 can you answer Cory\'s questions?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,5,2014-06-20 13:17:01,3.1,,1,,"b""b' in <0.9.2 no. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,6,2014-06-20 13:17:01,521.28,,1,,"b'b"" @ZPK4 Please provide exact instructions for reproducing. I\'ve ", resized, closed, reopened," fullscreen\'d... everything I can think of. All works as expected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,7,2014-06-20 13:17:01,1047.55,,1,,"b""b' @ZPK4 Are you still experiencing this issue? Also"," your screenshots are no longer available.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,closed,2014-12-30 14:03:40,234.27,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4372,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,opened,2014-06-20 13:23:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,title,2014-06-20 13:23:19,00:00,1,,,"b""b' rpc: Prevent easy memory exhaustion attack'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,body,2014-06-20 13:23:19,00:00,1,,,"b""b' Allocate memory for POST message data only as bytes come in"," instead ofall at once at the beginning. Fixes #4343.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,1,2014-06-20 13:23:19,68.58,,1,,"b'b"" Comments:Agree this wants fixing.Memory exhaustion in RPC is a low priority", since it\'s an internal control plane, not something that should be exposed to the open Internet.16k seems small.  It is easy to construct a valid JSON batch request of this size.  Make it 1MB.During review, I noticed we use getline(), which is similarly unbounded input. So," increase the limit and consider fixing getline() calls too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,2,2014-06-20 13:23:19,3.48,,1,,"b'b"" So with this fix", you actually have to SEND 4GB (or whatever) of data to exhaust 4GB (or whatever) of memory, instead of just sending a header SAYING that you\'ll send 4GB of data. ACK: better is better. Although did you consider just setting an arbitrary," large limit on nLen? Code would be simpler...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,3,2014-06-20 13:23:19,7.08,,,1,"b'b"" @gavinandresen Actually", very good final point.  Just change the limit here: to 1MB. Currently the limit is _not_ infinite, either: So," that\'s 32MB.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,4,2014-06-20 13:23:19,2.53,1,,,"b""b' General comment:  Our RPC code really wants to be smarter in any case.  You can just as easily open a bunch of connections", even with the loop, and exhaust memory.  Or another familiar HTTP attack is opening a bunch of connections, keeping them open for hours or days without making progress. i.e. send one character per day across 10,000 connections.  Stupid server will not timeout," and sockets will be rapidly exhausted.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,5,2014-06-20 13:23:19,2.33,,1,,"b""b' Yes there is already a limit", and yes this is low priority," I was mislead by the issue description that this happened _before_ the rpcallow check. Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,closed,2014-06-20 14:47:20,84.02,3,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,6,2014-06-20 13:23:19,1.98,,1,,"b'b"" Also it\'s not about unbounded input"," but as @gavinandresen remarks correctly that with this change you actually have to send the amount of bytes to get them allocated instead of being able to open 100 connections up-front and specifying 32 mbytes of data and keeping open the connection without actually sending it (which is very cheap to do).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,7,2014-06-20 13:23:19,6.15,,,1,"b""b' @laanwj Agree"," that is why I did not NAK the patch. Adding a loop is fine with me...  just 16k was _much_ too low.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,8,2014-06-20 13:23:19,464.25,,1,,"b""b' Untested ACK; I would raise the 16k too"," though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,reopened,2014-06-21 08:02:11,1034.85,3,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,9,2014-06-20 13:23:19,563.55,,,1,"b""b' OK", seemingly this fix-on-top-of-a-stack-of-hacks is good enough for now," will change POST_READ_SIZE to 1MiB.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,10,2014-06-20 13:23:19,1400.02,,1,,"b""b' Rebased and changed POST_READ_SIZE to 256kiB.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,11,2014-06-20 13:23:19,42.25,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,closed,2014-07-07 08:30:15,28.07,3,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4373,closed,-,-,-,3,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,opened,2014-06-22 16:48:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,title,2014-06-22 16:48:30,00:00,1,,,"b""b' Allow peers to determine how much they are seen to be misbehaving.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,body,2014-06-22 16:48:30,00:00,,1,,"b""b' This can allow peers in future to modify their behaviour to avoid netsplits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,1,2014-06-22 16:48:30,940.72,,1,,"b'b"" On one hand"," this is very useful for diagnostics. On the other hand this moves our internal anti-DDoS mechanism into the P2P interface. This means thata) we can\'t change it to some other mechanism anymore at a later timeb) other node implementations need to use the same or a similar system Not sure how much of a drawback this is. Accumulating a ban score is a straightforward mechanism. All in all I\'m mildly positive about this. But I\'d suggest proposing this on the mailing list.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,closed,2014-06-23 09:41:33,1013.05,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,2,2014-06-22 16:48:30,73.9,,1,,"b""b' Why close it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,reopened,2014-06-23 10:15:40,34.12,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,3,2014-06-22 16:48:30,33.35,,1,,"b'b"" @laanwj only because I noticed it didn\'t compile"," re-opened now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,4,2014-06-22 16:48:30,478.4,,1,,b'b\' Providing more information to identify node misbehavior seems like a good move," but:I\\\'m having a hard time picturing how a running node could modify its behavior in response to misbehavior messages; if a node knows ""I could do X so that my peer won\\\'t increase my banscore"," wouldn\\\'t it be doing X anyway?It seems difficult to impossible to identify what misbehavior warning is in response to what message. Given these difficulties with interpreting and acting on the information, why not treat this more like the ""reject"" message -as an informational message for developers debugging clients, sent with a short string identifying the type of misbehavior encountered?\''
bitcoin	4389	closed	5	sipa	2014-06-22 16:48:30	6.57	+1			b'b"" I think there\'s a general intent to be conservative about offences causing DoS scoring; in particular, anything that can be relayed by older nodes can generally not trigger DoS, as it could lead to network partitioning. They are not random frequently occurring things they are highly exceptional, intended to never trigger for non-attacking nodes, and the only reason they don\'t always cause a  immediately is to limit the impact of a software bug. I consider them to be highly implementation specific, and not useful information that peers should care about or act upon. If you\'re developing a P2P client it\'s useful of course, but you\'ll need more information anyway for that case, and likely need to develop by running against a local node with -debug anyway.""'
bitcoin	4389	closed	6	laanwj	2014-06-22 16:48:30	642.48			+1	b""b' Good point @sipa.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,7,2014-06-22 16:48:30,1005.95,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,8,2014-06-22 16:48:30,916.95,,1,,"b""b' Seems there is no consensus on this"," closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,closed,2014-06-28 13:06:49,171.15,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,9,2014-06-22 16:48:30,172.72,1,,,"b'b"" I have an alternative idea to this which doesn\'t expose as much of the internal state", but is still useful for troubleshooting and network diagnostics: a message. An optional message that can be sent to the peer you\'re about to disconnect with a message why you\'re disconnecting them (ping timeout, ban," etc). The receiving peer would only log this it\'s not possible to act on it but it could be useful when troubleshooting network problems.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,10,2014-06-22 16:48:30,199.27,,,1,"b""b' @laanwj that is a very good idea.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,11,2014-06-22 16:48:30,674.07,1,,,b'b\' @laanwj I did think of that (a message when disconnecting), but that wouldn\\\'t allow nodes to adapt to their misbehavior. A good example of when this might be needed is with the recent pull that has been merged that allows nodes to double-spend. It was only noticed after the merge about a potential attack vector where nodes could be manipulated into being banned. If this patch (and a following patch to modify behaviour) were applied," then this would protect against all future examples of this happening. It would be quite easy to link the misbehave and reject messages. Simply remember the last ""reject"" message and the last message "," and then when a ""misbehave"" message arrives", you\\\'ll have a good idea what it\\\'s referring to. @kazcw Above paragraph addresses your question also.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,12,2014-06-22 16:48:30,928.02,1,,,"b'b"" I have my doubts on to how much a node can intelligently adapt its behaviour to such messages. Also as to whether it should at all. It could open it up to \'bad feedback\' sybil attacks. What if your node is the one that gets it right? In my eyes a message like this would only be useful for troubleshooting by actual human developers. And in that case a message at disconnection works better.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,13,2014-06-22 16:48:30,949.17,1,,,"b'b\' @laanwj How is the ""bye"" message better? It\\\'s effectively the same as this", but less granular.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,14,2014-06-22 16:48:30,1070.65,,1,,"b'b"" OK done arguing this"," I\'m pretty sure neither of both will be implemented anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,15,2014-06-22 16:48:30,846.42,1,,,b'b\' @laanwj Just re-read your message url  above, and I realise the assumption you were making, i.e. that behaviour learned about misbehaviour would apply to more nodes than the node giving the feedback. I don\\\'t think a node should assume all nodes classify the same behaviour as misbehaviour," this would certainly open up to the ""bad feedback"" sybil atack you mention. Instead", nodes should regard any feedback as being applicable only to the node giving it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,16,2014-06-22 16:48:30,884.0,1,,,"b""b' I think we should just get rid of misbehaviour scores entirely all they do is making it harder to debug problems. Things that result in a ban score should just immediately trigger a ban", and others should have no effect at all. The only thing they help with is reduce the chance of accidentally have a relayed network message not immediately partition the network, but if this can happen with a 100-score misbehaviour," it can probably happen ten times with a 10-score misbehaviour.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,17,2014-06-22 16:48:30,1009.55,1,,,b'b\' that would be more efficient, wrt connection management," and eliminate the need for node behavior . it seems that notions of ""misbehavior"" belong in consensus code. Blatant breaches of protocol should just result in a ban", straight-away\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,18,2014-06-22 16:48:30,1387.3,1,,,"b'b"" if a ban disconnect is accompanied by a message as suggested by @laanwj then that could be useful to other clients and their developers", It will also mean that protocol breach is explicitly stated as the reason for disconnect both for specifically challenging unacceptable protocol behavior and to assist client software developers with correcting such incorrect behavior. Yes," client development should still be done via connection to a Satoshi client running with but the cases for punishing peers are quite specific and it would be useful to address such behavior directly and specifically via with a varchar string payload (or perhaps a specific set of error codes) This includes @sipa \'s suggestion to doaway with banscore accumulation. Just ban and disconnect at the initial offense and inform the client of the reason for disconnection with a message.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,19,2014-06-22 16:48:30,1078.0,,1,,b'b\' @sipa Is there some sort of roadmap document for Bitcoin Core? If so," I think your idea to abolish the current misbehaviour model should be added and I am in agreement. I like the ""bye"" message idea also", although technically, it\\\'s not needed as all unknown commands are currently logged so any messages could be sent that way :)  I\\\'d be happy to write a commit now that sends bye messages prior to disconnects and ban 100s. For the ban <100s, what could be used? A reject message? e.g. a reject message is currently sent in response to multiple version messages.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,20,2014-06-22 16:48:30,110.95,1,,,"b""b' This was just a personal opinion", certainly not something that has beenaddressed project-wide, and people may very well disagree. Also," sorry for furthering this. We should hijact a old issue for thisdiscussion.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,21,2014-06-22 16:48:30,893.87,,1,,"b""b' @sipa Given the varying timezones we occupy"," this is a better place to discuss this (for me at least) than the IRC channel.. We really need a better medium to discuss these things. Both IRC and the mailing list seem less than ideal compared to here. Perhaps  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4389,closed,-,-,-,11,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,opened,2014-06-27 13:18:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,title,2014-06-27 13:18:10,00:00,1,,,"b""b' Fix many orphan problem and stuck block download problem'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,body,2014-06-27 13:18:10,00:00,1,,,"b'b"" This has taken me several days to code and test", and I\'ve tested it thoroughly. With the current code, that uses only one syncnode, with these changes, the node will never download orphan blocks. With net debugging enabled, you will get a good view of what it\'s doing. It also downloads the blockchain very fast, and never allows more than 60 seconds (the default) of inactivity to occur, so recovers very quickly from stuck downloads. With my testing, this can safely be reduced to 10 seconds as if a downloads sticks for as long as 10 seconds, it never recovers, so rather than wait two minutes as the current code does (well, tries to do), it quickly switches to a new syncnode. Please do test, and give comments. So far, with the orphan problem, many people are unable to run the node without limiting orphan blocks (which still doesn\'t fix the stuck download anyway). Feel free to copy this branch and improve it. I\'ve included quite a few commits to make it easier to see the development process, but I won\'t always have time to make the changes needed that people ask for," and from experience my pull requests often don\'t get pulled for some reason. I think this functionality is needed now based upon the issues people have been raising.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,closed,2014-07-04 05:04:35,946.42,2,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,reopened,2014-07-04 06:50:14,105.65,2,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,1,2014-06-27 13:18:10,1052.97,1,,,"b'b"" I\'ve removed the debugging messages", and simplified the commits. Also removed the nodeid stuff," and the getblocks changes as these are in separate pulls.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,2,2014-06-27 13:18:10,22.23,1,,,"b'b"" @sipa this pull is much more readable now. Also", I\'ve included the commit that splits MarkBlockAsReceived into two (also MarkBlockAsRequested), as I felt it was confusing that it was being used to mark blocks as requested but which are still in flight. Hope this is ok, but if not," I can remove this commit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,3,2014-06-27 13:18:10,608.52,1,,,b'b\' I hate to tell you after all the time you\\\'ve spent on this," but headers-first will make most of this obsolete. It completely removes the concepts of ""sync node"" or ""orphan blocks"""," and stops using ""getblocks"" altogether (fixing #4387 as well). Decent logic for disconnecting blocks when they\\\'re stalling will still be useful", but many of the apparently stuck problems just caused by us not knowing what to request from whom will be gone.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,4,2014-06-27 13:18:10,32.3,,1,,"b""b' @sipa Is there a PR yet for headers-first feature?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,5,2014-06-27 13:18:10,1.83,,,1,"b""b' @drak Very soon!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,6,2014-06-27 13:18:10,1365.87,,,1,"b""b' I realise some of this pull request may disappear when header-first is merged", but this is still a useful fix to the many orphan problem right now," and also improves  information. Some ACKs would be appreciated. @sipa @gmaxwell @laanwj @drak @gavinandresen @Diapolo thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,7,2014-06-27 13:18:10,386.85,,1,,"b""b' I appreciate you writing up fixes for this. Definitely important. Will this be merged soon? The stalling due to orphans is so bad that IMO"," it makes the client mostly useless. I have to baby sit it and restart it. I finally got it going with lowered max connections.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,8,2014-06-27 13:18:10,2.0,,1,,"b""b' This will almost certantly not be merged.  Issues with orphans are resolved by #4468.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,9,2014-06-27 13:18:10,3.83,,,1,"b""b' @gmaxwell Ah", thanks for linking that one over. Looking forward to seeing that one merged in," then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,10,2014-06-27 13:18:10,1085.92,,1,,"b'b"" @gmaxwell This could have been merged in the mean time though", I\'d have thought. It was pull-requested quite some time before #4468 came about," too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,11,2014-06-27 13:18:10,4.55,,1,,"b""b' @rebroad 4468 is just the latest rebase of it. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,12,2014-06-27 13:18:10,447.5,,,1,"b'b"" @gmaxwell This pull request is ready to merge (or at least has been at several stages)", whereas #4468 isn\'t, and has never been so far it currently breaks re-orgs, so it\'s clearly still under development, and no one knows when it will be ready to test. The issues this pull fixes are urgent, and have been for some time now the amount of bandwidth being wasted by duplicate blocks and orphans is unimpressing quite a few people who\'ve downloaded the software and expected better. What\'s the reason for not merging this now? #4468 can provide the benefit it provides when it\'s finally developed and ready," but I don\'t see why that should delay these urgent issues from being fixed now...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,13,2014-06-27 13:18:10,13.1,,,1,"b'b"" #4468 is ready to merge except the testing infrastructure has not been updated to accommodate it", if not for that it would already be merged. Even with the it would already be merged except breaking pull tester in master would make all other pulls fail. It has no currently known problems and is suitable for testing, and I have several nodes running on it without issue. When I looked at this patch previously it was performing a number of risky behaviors like disconnecting peers on low arbitrary timeouts. A partial adjustment that introduces new vulnerabilities and doesn\'t address the larger performance problems is not a good use of review or testing resources. We certantly wouldn\'t be rushing something like that out the door," so the claim of urgency is not helpful here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,14,2014-06-27 13:18:10,40.97,1,,,"b'b"" @gmaxwell The default timeouts were address as soon as they were mentioned", and changed to 2 minutes as requested. I still mantain, however, that 2 minutes is far riskier than my suggested 10 seconds, as at a 2 minute timeout this can significantly cause atypical nodes to delay block propagation by them issuing the latest block inv as quickly as possible (before they\'ve even got the headers), and then ignoring the getdata block request. With my code, this is mitigated significantly," and it\'s highly unlikely and unusual for a node to not start sending a block within 10 seconds of it being requested this is based on over two years of testing. On what are you basing your argument?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,15,2014-06-27 13:18:10,11.4,,1,,"b'b"" I though previously explained in this in adequate detail in your prior pull request that disconnected well behaving nodes: This kind approach makes the network fragile in a multitude of situations", including hosts on even slightly slow links. Effectively a two minute timeout increases the minimum bandwidth that can keep a node running bitcoin by more than 5 fold. This of behavior means that moderate or short lived DOS attacks (or just high utilization) can cause disconnection potentially allowing an attacker to partition the network. Yes\\xe2\\x80\\x94 malicious nodes attacking the network can potentially slow down receiving blocks (and thats still true with your change). This is part of why the standard advice (and widespread practice) for mining nodes is to not expose them to the public network directly. Increasing partition risk," or reducing the ability to run slow or overloaded links at all isn\'t a good trade-off. I\'d really encourage you to spend time testing headers first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,16,2014-06-27 13:18:10,5.6,1,,,"b'b"" @gmaxwell Strawman arguments aren\'t helping no one is suggesting disconnecting well-behaving nodes. A node that doesn\'t start sending a block within 2 minutes of it being requested", I think we can both agree, is not a well-behaving node. Since the default behaviour in this pull is set to 2 minutes, I\'m confused as to why you\'re focusing on this point. Is there anything in this pull or for that matter, the nine commits that this pull comprises of," that you have any objections to?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,17,2014-06-27 13:18:10,2.95,,,1,"b'b"" It may be wortking fine\\xe2\\x80\\x94 could even be the only honest node you\'re connected to. Start is the wrong description of what the changes do", they may have sent immediately, and you\'ve received 99.9% of it by the time two minutes pass.  This is also a tangent," the changes here are not primarily related to steady state block relay. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,18,2014-06-27 13:18:10,5.78,1,,,"b'b"" @gmaxwell Are you saying you want me to change the code so that it disconnects nodes if they haven\'t managed to send an entire block within two minutes? Surely if it\'s send 99.9% then it would be counterproductive to start the download from scratch from another node. I\'m sorry"," I\'m not understanding what your issue is still. Can you just state simply what you would need to see changed in this pull request before you\'d be happy to ACK it?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,19,2014-06-27 13:18:10,3.77,1,,,"b'b"" @rebroad this is a fairly large patch for something which will be entirely irrelevant when url  is merged I appreciate the work to improve orphans that stall IBD (it\'s annoying to me too!) but really making these changes with headers first right around the corner is unnecessary NACK""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,20,2014-06-27 13:18:10,1.57,,1,,"b'b\' @pstratem Hasn\\\'t headers first been ""right around the corner"" for over 2 years now?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,21,2014-06-27 13:18:10,4.02,1,,,"b""b' headers-first is the consensus direction.  It is not directly apparent", but many headers first-related patches are already in the tree, merged in tiny bites. Any notable work in this area should be based on top of headers-first," to avoid wasting work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,22,2014-06-27 13:18:10,5.23,,1,,"b""b' Two years? no way. It was originally slated for 0.9 but it was too big to review and test all at once"," so it was split up and missed that release. As Jeff notes much of it has already been merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,23,2014-06-27 13:18:10,27.3,,,1,"b""b' Automatic sanity-testing: FAILED ", see url  for binaries and test log. This could happen for one of several reasons:1. It chanages paths in -mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in -tester)2. It  tests which test network rules (thanks for doing that), which conflicts with a patch applied at test time3. It does not build on either Linux i386 or Win32 (via MinGW cross compile)4. The test suite fails on either Linux i386 or Win325. The block test-cases failed (lookup the first bNN identifier which failed in url  If you believe this to be in error, please ping BlueMatt on freenode or TheBlueMatt here. This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,24,2014-06-27 13:18:10,207.23,1,,,"b""b' @rebroad Instead of impatiently complaining how slow headers-first is being merged you could also help testing and reviewing it. Or even build on top of it. You know the code is available as pull request #4468 and it fully works?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,closed,2014-09-03 06:21:29,1411.25,11,8,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,25,2014-06-27 13:18:10,29.53,,1,,"b'b"" @laanwj I am testing it and building on top of it", however, I\'d always understood that we were supposed to submit pull requests built on-top of master," so I\'m not sure how you would want me to submit patches without including the entirity of #4468 along with every pull request I make.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,26,2014-06-27 13:18:10,245.37,,1,,"b'b"" @rebroad You could submit patches to @sipa directly. Otherwise"," just make sure that you don\'t conflict with him or do duplicate work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4431,closed,-,-,-,11,10,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,opened,2014-06-27 18:46:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,title,2014-06-27 18:46:58,00:00,,1,,"b""b' Transactions in TCP FIN packets appear to be ignored'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,body,2014-06-27 18:46:58,00:00,,,1,b'b\' # Problem description: On June 21," sending transaction 43f1c3e735560f7b1e4c396a55a2e62d2e83b7c4ed1efc5a7d29358c84ca7807 using ""sx sendtx-node"" to my bitcoin node running Bitcoind 0.9.1 _~~0.9.2~~_ failed. The log showed the connection"," but no errors (default log level) **Update:** _enabling \\\'net\\\' debuging also showed no errors (included below)_The transaction was considered valid by both ""sx validtx"" and my bitcoin node when I used bitcoin-cli to send it manually.I came up with 3 possibilities: 1. bug in sx sendtx 2. bug in Bitcoind 3. ISP using DPI to selectively block transactions (but allow initial connection) **Update:** _It appears that option 3 is out (not that it was ever likely) (packet capture: Linked in the first comment.)_ Edit: Bitcoin reported version: ""version"" : 90100Package: bitcoin-daemon-0.9.1; FreeBSD 9.2-RELEASE-p3Sx reported version: ??? ""/libbitcoin:2.0.0/: version 60000"" pulled from log below.# Experimental design: My plan is to run tcpdump on both hosts while I try to resend the transaction. If the transaction is truly being blocked", it won\\\'t matter that it was sent already. If it goes through, bitcoind should log it as a duplicate. Because my Bitcoin node has many connections, I will want to filter as many packets as possible. Because the computer with the sx tools also has several network connections, a similar filter should be used to capture only Bicoin-related packets.# TCPdump options:## On Casey (Bitcoin node)  ## On Torchlight (sx client)  # Logs: Approximate end-time:Wed Jun 25 11:57:04 MDT 2014## Bitcoind log note: no errors, libbitcoin line cut-off## sx sendtx log  ## Repeated test with more bitcoind debuging: Approx start time:Wed Jun 25 19:05:32 MDT 2014 Approx interesting time:2014-06-26 01:05:45 accepted connection 70.74.233.146:37540 Approx end time:Wed Jun 25 19:05:55 MDT 2014 (trimmed a bit) Note the size of the first received tx does not match the tx under test (761 bytes Edit: finally found the comment edit button!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,1,2014-06-27 18:46:58,3.32,,,1,"b""b' Screen-shot (nearly 300kB) actual capture is less than 2kB.![jun2014_sx_send_1bitcoin]url  ### Edit: Packet capture files: Receive first transaction (_casey_):url Send first transaction (_torchlight_):url Receive second transation (_casey_):url Send second transaction (_torchlight_):url Bonus: Sending invalid version of second transaction (_torchlight_)url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,2,2014-06-27 18:46:58,204.65,,1,,"b""b' # Second investigation The last report involved re-sending the transaction", even after it was buried in the block-chain. For this report, I will send a new transaction with debugging turned up, and recording the bytes on the wire. That way, I eliminate the possibility that the behavior changes with subsequent sends. Note that this appears to be a regression: I had successfully sent a similar transaction approximately one month ago. Unfortunately, during that time, I have upgraded both Bitcoind (from 0.8.6) and the sx tools. My maintenance logs are spotty, though I do try to actually make a habit of taking notes. Maybe I can find version hints in automated logs. ## TCPdump options Same as above," with new filenames. ## sx sendtx-node log ## bitcoind log Approximate start-time:Sat Jun 28 16:15:21 MDT 2014 Approximate interesting time:2014-06-28 22:15:24 accepted connection 70.74.233.146:40870 Approximate stop time:Sat Jun 28 16:15:32 MDT 2014 ### bitcoin-cli After sx sendtx-node: After sx sendtx-bci (sends to  web interface): ### bitcoind log Note: first received tx after connection from _torchlight_ is again the wrong size (4541 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,closed,2014-06-29 22:14:56,207.97,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,reopened,2014-06-29 22:15:00,0.07,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,3,2014-06-27 18:46:58,1212.63,1,,,"b'b"" I\'m not sure this is a bitcoind bug. It looks like bitcoind would discard a message if ThreadSocketHandler reads a close and sets fDisconnect before ProcessMessages has read the message", but closing right after a send can cause the data to be discarded at the TCP level anyway; why add guarantees at the application level the transport level won\'t reliably uphold? Sx needs to ensure the tx has been received before closing the connection," by e.g. send tx -""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,4,2014-06-27 18:46:58,130.47,,1,,"b'b\' This is the first I heard that the TCP layer will discard data in a FIN packet. I Tried searching for ""TCP discards data in fin packet"" and came up with this as a result:url  The only answer listed there is that RFC 739 says it is allowed. ~~I believe that RFC also says that stateful fire-walling is not a thing either", so YMMV.~~ (That was the IP RFC)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,5,2014-06-27 18:46:58,146.47,,1,,"b'b"" TCP stacks that implement half-duplex close (notably"," Linux\'s) may discard unread data when close() is called [url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,6,2014-06-27 18:46:58,186.57,,1,,"b'b"" If the close at the TCP level happens before the data of the FIN packet is processed", that is a bug. In your bug report against sx tools you mention that the Bitcoind node may want to send more information to the client. That is still possible with a half-open connection, but not if the client\'s stack did a half-duplex close as described in the link. According to that link," data is only aggressively discarded after seeing a RST packet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,7,2014-06-27 18:46:58,203.02,,1,,"b'b"" The RST packet is sent by the host discarding data to indicate that data has been discarded. We could be careful not to call close() with any unread data", and to continue processing certain messages even after fDisconnect is set (or delay setting fDisconnect). Those would probably be positive changes, because they\'d prevent losing a tx sent by a terminating node every once in a while. Such a behavior change would not really affect what one-shot clients like sx would need to do, assuming they\'ll want to support existing versions of bitcoind. Even if everyone running bitcoind upgraded to a new version compatible with push-and-run," sx should use the ping approach to see if the tx has been rejected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,8,2014-06-27 18:46:58,209.55,1,,,"b'b"" After looking at it some more"," I don\'t think we\'re calling close() when there could be pending data in this case; the lost messages due to disconnect must just be due to the fDisconnect check in ProcessMessages.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,9,2014-06-27 18:46:58,502.18,,1,,"b'b"" With TCP", close() should not result in loss of information. You can close the connection immediately after sending data, and the other end will be able receive all the data. This is because of states such as CLOSE_WAIT, in which a connection lingers as \'zombie\' for a while making sure that everything was sent. Otherwise," HTTP servers (for ex.) would have to keep open the connection to wait whether the client has got everything. This is luckily handled by the OS. So my guess is that there is some  in bitcoind here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,10,2014-06-27 18:46:58,533.43,1,,,"b'b"" I think there\'s a fDisconnect race where:1: ThreadSocketHandler pushes data into vRecvMsg2a: ProcessMessages checks vRecvMsg", or aborts if fDisconnect2b: the other end closes the socket, so ThreadSocketHandler reads 0 bytes and sets fDisconnect Either 2a or 2b can happen first; if 2b is first, messages not yet processed will be discarded. This race has probably been overlooked because there is no point in handling many messages from a node that is shutting down and there\'s only a limited window at the end of a connection when messages would be lost, but some should still be handled (addr, tx, block, alert," reject).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,11,2014-06-27 18:46:58,1190.22,,1,,"b""b' @theuni Is this fixed since #9441?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,12,2014-06-27 18:46:58,1340.9,1,,,b'b\' @sipa No," as I\\\'m not sure what behavior would be considered ""fixed"" here.  We obviously don\\\'t process an arbitrarily long message queue after a node has disconnected", but it makes sense to guarantee _some_ depth, to allow for use-cases like nodes that would like to connect, push a tx, and disconnect.  So.. maybe process a single message after remote disconnect?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,13,2014-06-27 18:46:58,896.38,,1,,"b""b' What I was expecting was that the data in the last packet would processed. In the absence of jumbo frames or fragmentation"," this would be generally limited to 1460 bytes. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4432,open,-,-,-,4,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,opened,2014-07-10 16:15:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,title,2014-07-10 16:15:36,00:00,,1,,"b""b' Create Proof(OfWork) class'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,body,2014-07-10 16:15:36,00:00,,1,,"b'b"" Continues #4377The goal of this PR is to make easier to experiment on alternative proofs and at the same time improve bitcoind\'s modularity.  IT is very possible that this will never make it into master", and that\'s fine, but ideally it would be very easy to maintain the branch by continuously rebasing on top of .I open this as a PR to get some feedback on what\'s acceptable for master and what is not, and maybe also to improve the code (specially the ugly hack for the serialization," which apparently doesn\'t work anyway).It should also help understand #4377 better. @jaromil is going to work on an alternative using function pointers.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,1,2014-07-10 16:15:36,52.33,,1,,"b'b"" I got some feedback on #4377 and other places"," I\'m closing since this is not acceptable for bitcoind and people have already seen it. I will reopen it with new version still uses a class but without polymorphism.Feedback is still welcomed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,closed,2014-07-11 17:07:56,52.33,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,2,2014-07-10 16:15:36,279.95,,,1,"b'b"" It is not completely encapsulated because the attributes are public.No polymorphism now. Less interesting for experimentation because there\'s no factory", but it should still be useful and in my opinion makes the POW code more clear.For those who may want to see it," I left the polymorphic version here: url  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,reopened,2014-07-11 21:47:53,279.95,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,3,2014-07-10 16:15:36,7.77,,,1,"b'b"" In general cleaning things up is pretty nice", and POW class seems to do that.  Specific comments:some places seem to get less clean," not more:  The Hash(block header) code appears to be slower and more complex.  Not the right direction for such a speed-sensitive area.  That may be a problem for a cleanup we like but don\'t need...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,4,2014-07-10 16:15:36,11.83,,1,,"b'b\' Updated removing a bunch of unnecessary #include ""pow.h""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,5,2014-07-10 16:15:36,44.02,,1,,"b'b"" Updated CBlockHeader::GetHash() with @sipa \'s suggestion", which removes the extra complexity concern. I haven\'t measured the performance hit, but I expect it to be small.@jgarzik I agree the call to GenerateProof is quite ugly," but nothing comes to mind to make it prettier...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,6,2014-07-10 16:15:36,35.83,,1,,"b""b' CBlockIndex could gain a CheckWork() method that just calls (GetBlockHash()).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,7,2014-07-10 16:15:36,1265.25,1,,,"b'b"" I created the CheckProof() method for CBlockHeader and CBlockIndex.I could have also added GenerateProof to CBlockHeader or CBlock", but the ugly call is only on  (which could disappear in the future," who knows) so I don\'t think it\'s worth it. It doesn\'t feel like it belongs to a core library since it is only for the miner (which is only used for testing). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,8,2014-07-10 16:15:36,149.15,,1,,"b""b' Commits reordered so that the PR is easier to read (by creating the Proof class early on and then slowly encapsulating things).I left the proof generation part (mining) for later", so GetChallengeUint() method is needed for now SetSolutionUint()  is also used in ," but that was already used miner_.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,9,2014-07-10 16:15:36,912.08,,1,,b'b\' I have left the last two commits with multiple small changes for later," after I know what\\\'s the most acceptable way to encapsulate the pow around miner. I will continue that discussion in #4423. But the ""final touches"" will depend on that", so there\\\'s no reason to include them before or stop this PR until that is resolved. Also the last commit was quite noisy.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,10,2014-07-10 16:15:36,256.07,,1,,"b""b' mhmm"," I wonder if nBits and nNonce should be uint32_t instead of unsigned int... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,11,2014-07-10 16:15:36,132.92,,1,,"b'b"" Yes", I believe all integers being serialized anywhere should eventually be turned into (u)intN_t\'s," but let\'s do that separately. There may already have been some PR for (part of) that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,12,2014-07-10 16:15:36,731.22,,1,,"b""b' It needed rebase because #4180 was merged so I just changed unsigned int to unit32_t too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,13,2014-07-10 16:15:36,629.78,,1,,"b""b' Rebased.Since timedata was moved from core to server"," I needed to decouple pow from timedata to be able to move pow from server to core.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,14,2014-07-10 16:15:36,435.8,1,,,"b""b' Needs rebase. Also"," can you replace the error messages with the function name in them with  ? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,15,2014-07-10 16:15:36,944.25,,1,,"b""b' Done"," should I squash the commit somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,16,2014-07-10 16:15:36,912.72,,,1,"b'b"" It\'s fine as a separate one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,17,2014-07-10 16:15:36,765.62,,1,,"b""b' Should I divide this further to make it easier to review?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,18,2014-07-10 16:15:36,12.87,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,19,2014-07-10 16:15:36,1046.97,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,20,2014-07-10 16:15:36,498.43,,1,,"b""b' I like the changes"," I did have a thought that maybe CProof is at slight risk of ambiguity (E.g. SPV proof vs block proof).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,21,2014-07-10 16:15:36,108.18,,1,,"b""b' I think CProof should be split in its core data structure (which can go in core", or be included by it)," and validation functions that take a CProof and perform the various checks on them (which can be in server). Not doing that will for example result in libscript contain block PoW validation...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,22,2014-07-10 16:15:36,81.35,1,,,"b'b"" Having the class in core with only the serialization and using it with the functions is incompatible with making the fields "," which is the final goal of this series of PRs.After thinking about this a lot there\'s doesn\'t seem to be any solution compatible with both goals that isn\'t ugly one way or another.I guess I should just keep moving functions here first and leave the class for later when we have a  solution that doesn\'t make anyone unhappy.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,23,2014-07-10 16:15:36,5.5,,1,,"b'b\' ""Not doing that will for example result in libscript contain block PoW validation""Not necessarily", only if you want to put Transaction and BlockHeader in the same module, script doesn\\\'t need BlockHeader\\\'s at all.There could be a xxx.o with only COutPoint, CTxIn, CTxOut and CTransaction, which is everything  needs. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,24,2014-07-10 16:15:36,3.22,,,1,"b'b"" I\'m fine with splitting core into a transaction and a block part", and that would indeed suffice for now, but it would still mean that anything that uses block headers will depend on its validation code to. I don\'t like it, but I can\'t immediately come up with an example of something that would use headers parsing," but not need the ability to verify proofs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,25,2014-07-10 16:15:36,958.47,,1,,"b'b"" I reduced the scope of the PR again.Now it only creates a minimal CProof class independent from pow.o.It\'s built on top of #5100 and #4793.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,26,2014-07-10 16:15:36,1206.7,,1,,"b""b' Rebased on top of the latest #5100 and without depending on #4793 (if that get merged first I can update this with the older version).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,27,2014-07-10 16:15:36,1310.63,,1,,"b""b' Rebased to make it more readable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,28,2014-07-10 16:15:36,411.9,,1,,"b""b' Closing in favor of  #5171"," without a class.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,closed,2014-10-29 21:13:42,1405.82,3,23,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4506,closed,-,-,-,3,23,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,opened,2014-07-12 19:48:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,title,2014-07-12 19:48:07,00:00,,1,,"b""b' Check for missing undo files at startup"," making the check somewhat more ...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,body,2014-07-12 19:48:07,00:00,,1,,"b""b' ...efficient. This is also an incremental step in making an index pruner for #4481'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,1,2014-07-12 19:48:07,24.83,,1,,"b'b"" What if the first encountered block with file N doesn\'t have undo data"," but the second one does? You\'d skip checking it. EDIT: fixed""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,2,2014-07-12 19:48:07,964.53,,1,,"b""b' Closing this", as it has been rebased," refactored and pushed as part of #4481.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,closed,2014-07-16 12:17:29,989.37,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,3,2014-07-12 19:48:07,596.37,,1,,"b""b' I simplified this code. Reopening.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,reopened,2014-07-17 22:13:51,596.37,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,4,2014-07-12 19:48:07,1178.88,,1,,"b""b' Feedback addressed", and some bugs were fixed," and some things improved along the way. Would this be mergeable?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,5,2014-07-12 19:48:07,1218.2,,1,,"b""b' Code style fixed to adhere to current standards.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,6,2014-07-12 19:48:07,1408.55,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,closed,2014-09-18 17:27:25,1153.57,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,7,2014-07-12 19:48:07,1438.87,,1,,"b'b"" I guess this is too late for 0.10", but reopening this anyway as I don\'t expect this code to change (a lot) any further," and it feels like it would make sense merging this independently of #4701.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,reopened,2014-11-20 13:38:21,1210.93,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,8,2014-07-12 19:48:07,206.6,,1,,"b'b"" Looks like this is not necessary for the current autoprune (#5863)"," so I\'m closing this. Let me know if I\'m wrong.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,closed,2015-03-24 17:04:57,206.6,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4515,closed,-,-,-,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,opened,2014-07-18 14:09:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,title,2014-07-18 14:09:58,00:00,,1,,"b'b"" Don\'t pass nHashType down to ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,body,2014-07-18 14:09:58,00:00,,1,,"b""b' -Remove unused function main:VerifySignature (Class CScriptCheck is being used directly instead.)-Remove CScriptCheck::nHashType (was always 0)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,closed,2014-07-18 14:13:12,3.23,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,reopened,2014-07-18 14:20:13,7.02,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,1,2014-07-18 14:09:58,74.72,,1,,"b'b"" Untested ACK. I\'ve always wondered what the nHashType flag was for"," really...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,2,2014-07-18 14:09:58,85.4,,1,,"b""b' Removed nHashType from EvalScript and CheckSig as well. Maybe I can unify some of the commits (all of them?)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,3,2014-07-18 14:09:58,142.0,1,,,"b'b"" @sipa nHashType is useful to determine what hash types are being used in scriptSigs; I\'m actually working on a patch to eliminate a SIGHASH_ANYONECANPAY-related DoS attack that needs it. That said", it might be more useful to have a mechanism the hash types used are added to a list, or for that matter," a generic callback is called to let the callee apply whatever logic they need.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,4,2014-07-18 14:09:58,821.58,,1,,"b'b"" @petertodd I\'m not convinced that\'s currently a use case worth keeping the nHashType parameter for"," especially as the implementation is not certain.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,5,2014-07-18 14:09:58,64.45,,1,,"b""b' @sipa Yeah"," a sighash callback probably makes more sense and keeps more code out of the consensus critical section. So untested ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,6,2014-07-18 14:09:58,156.8,1,,,"b""b' Tested ACK. Did a testnet sync from scratch with it (which likely has more cases of odd hashtypes than mainnet).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,7,2014-07-18 14:09:58,35.78,,1,,"b""b' ~~Blocked until #4692 is merged~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,8,2014-07-18 14:09:58,1239.27,,1,,"b""b' Rebased on top of #4754'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,9,2014-07-18 14:09:58,239.0,,1,,"b""b' Rebased on top of #4755'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,10,2014-07-18 14:09:58,1229.68,,1,,"b""b' Closing until #4754 and #4775 are merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,closed,2014-09-02 10:18:39,1198.43,2,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,reopened,2014-09-08 20:58:59,640.33,2,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,11,2014-07-18 14:09:58,660.6,,1,,"b""b' Tested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,12,2014-07-18 14:09:58,1243.28,,1,,"b""b' Needs rebase (but a rebased version is in #4890).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,13,2014-07-18 14:09:58,539.25,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,14,2014-07-18 14:09:58,8.22,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,closed,2014-09-17 11:44:30,885.52,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4555,closed,-,-,-,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,opened,2014-07-20 20:17:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,title,2014-07-20 20:17:02,00:00,,1,,"b""b' Selective tor usage'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,body,2014-07-20 20:17:02,00:00,,1,,"b""b' Tor can obscure the relationship between a wallet and an IP address", but has high overhead. For a full node, none of the network-intensive activity leaks privacy; it seems like the ideal application of tor in many situations would be to perform all non-wallet network functions normally via direct connections," but use a tor connection for privacy-leaking operations like pushing wallet transactions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,1,2014-07-20 20:17:02,20.52,,1,,"b'b"" Another reason why the wallet should be a separate application. For now (if your goal is to reduce overhead) I\'d suggest to run one of the other wallets over TOR. For example", bitcoinj supports TOR natively. Not sure about Electrum. Do mind that SPV clients inherently leak some information about your addresses through the bloom filters that they submit. But behind TOR that may matter less. At most the adversary can correlate which addresses belong together," not whom they belong to.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,2,2014-07-20 20:17:02,1014.42,,1,,"b'b\' Not sure this is an (Github) ""issue"" really. But what about relaying TXs for example", one will know your IP, if your node does this without Tor, no?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,3,2014-07-20 20:17:02,17.02,1,,,"b'b"" @Diapolo Not if you push your own transactions to other nodes through TOR or submit them some other way. I understand @kazcw\'s point but the answer is simply \'Don\'t use the full node wallet\'. There is no reason why you couldn\'t run a full node on the open net", and use another SPV wallet that is not pointed at your own full node, but connects to peers over TOR. There is your separation, and much more water-tight than trying to handle it in the same process with some hacky exceptions and rules (remember kids," opsec is very hard to get right). So I\'m closing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,closed,2014-07-21 13:48:59,1051.95,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,reopened,2014-11-27 11:28:32,1299.55,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,4,2014-07-20 20:17:02,1302.07,1,,,"b'b"" Reopening this. Submitting transactions through a different mechanism than the normal P2P networking _can_ make sense for privacy. I\'m still of the opinion that this needs to be thought through very well before implementation to avoid making dangerous assumptions (ie", exposing oneself to fingerprinting attacks for example," if you connect to both Tor and directly these will reveal you).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,5,2014-07-20 20:17:02,21.25,,1,,"b""b' As of #5951"," this use case can be addressed using then taking care of the transaction broadcast manually or through an external script.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,closed,2015-05-18 08:29:47,1261.25,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4564,closed,-,-,-,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,opened,2014-08-07 04:51:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,title,2014-08-07 04:51:51,00:00,1,,,"b'b"" Move message processing to new \'procmsg\' module.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,body,2014-08-07 04:51:51,00:00,,1,,"b""b' Compiles and passes tests.  Could use some refinement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,1,2014-08-07 04:51:51,774.13,1,,,b'b\' Updated such that each message is a method.  It is recommended to review each commit rather than the sum of all commits," as this patch series follows the ""equivalent transformation"" method of refactoring code into a more useful form. This should be suitable for updating to use signals or similar (possibly moving back outside of the class if necessary).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,2,2014-08-07 04:51:51,12.87,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,3,2014-08-07 04:51:51,1003.67,,,1,b'b\' Oh, yes," please!untested and undiffed ACK. The diffed ack will come later. Maybe the last un-indent commit can be replaced with a ""Pass clang to the new files"". Now that we have a way to automatically format the code", it can be useful for after-diff-sensible commits like that one, should be faster to review just by reproducing it locally.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,4,2014-08-07 04:51:51,137.58,,1,,"b'b"" Idea ACK"," but this code is pretty much in flux still (/...); I\'d propose to delay this until close to the next major release.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,closed,2014-09-03 13:05:49,493.97,2,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,5,2014-08-07 04:51:51,343.57,,1,,"b""b' After headersfirst has been merged"," can we reopen this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,reopened,2014-10-19 08:06:19,1140.5,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,6,2014-08-07 04:51:51,810.23,,1,,"b""b' No objection against just moving things like this", but things like #4831 conflict probably with less, and actually go further, as it actually splits processing up completely," rather than just moving it as a whole.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,7,2014-08-07 04:51:51,1.02,,1,,"b""b' Things like  handling and alert handling can probably be split off in a way similar to #4831.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,8,2014-08-07 04:51:51,152.32,,1,,"b""b' Suggestion: Why not let the clang-script fix coding style for this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,9,2014-08-07 04:51:51,1153.03,1,,,"b""b' I really like how url  (Split up P2P message processing into MessageEngine methods) improves the readability of the p2p messages.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,10,2014-08-07 04:51:51,454.33,,1,,"b""b' I felt that this was a good step towards the direction we want to go longer term", which is registering processing methods (), so that the message processing implementation is more de-coupled from network message dispatch. It sounded like @sipa did not like this as an intermediate step," though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,11,2014-08-07 04:51:51,123.37,,1,,"b""b' I would absolutely be in favor of this as intermediate step if not for the review overhead and the fact that it will break existing pull requests that already go further. Afterwards I think we can definitely do this for the non-trivial pieces after the trivial ones have been moved out.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,12,2014-08-07 04:51:51,1304.2,,1,,"b'b"" Needs rebase...Would this be easier to merge if it only contained one commit equivalent to url  but doing the separation directly in  and using regular functions instead of method of a new class?They can even be static inline functions in which case the commit should produce an identical build unless I\'m missing something (meaning no risk with low review overhead).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,13,2014-08-07 04:51:51,279.2,,1,,b'b\' Closing.  I still think this is worth merging and @jtimon seems to agree.  However it has not gained sufficient momentum to get merged for whatever reason. As usual, it is easy to re-open a PR if this turns out to be in error, ACKs suddenly appear," etc.  Applying the ""close old PRs"," easy to reopen"" pattern. This code movement change is too large to continue rebasing if it is not getting merged.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,closed,2015-07-23 18:01:22,595.05,3,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,14,2014-08-07 04:51:51,449.83,,1,,b'b\' I really think this kind of PR opens the door to many modularity improvements. And I understand that code movements are a burden to reviewers because they need to keep up to date with them after they\\\'re merged. This is a very big move on  that everybody is touching.But I seriously don\\\'t understand why breaking breaking an overly-nested switch into new functions of a too-large function like ProcessMessage is so difficult when (as you have proven) it can be done with a minimal and review-friendly single commit url  ). I believe this can be done in a way that results in an identical gitian just prefixing all the new functions with  , but I\\\'ve never tested it. When I tried to do something similar in #5153 for EvalScript  @gmaxwell tested it and the build hash wasn\\\'t identical. I didn\\\'t add that prefix because, I thought, theoretically, the compiler should be smart enough to tell by itself, but as @sipa  explained me later," non-static (or in an anonymous namespace) things are effectively ""public"" to the compiler", because it doesn\\\'t have a per-file way to tell whether you\\\'re using somewhere else or not. I really think we should break both EvalScript and ProcessMessage with an identical-build single commit. With an identical build you don\\\'t even need any tested ACK, utACKS should be enough.If I remember correctly @petertodd started a bounty on a python script to check whether the last commit produces an identical build hash or not. I proposed it and I didn\\\'t needed the bounty as motivation, but I never did  is the tutorial by @laanwj that I was going to use: url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,15,2014-08-07 04:51:51,678.83,,1,,"b""b' @jtimon I agree.  It is however difficult to produce identical hashes due to minor compiler build differences such as the ones that sipa mentions. You could probably perform some #include tricks to accomplish the first file movement step with equivalent hashes", if you keep ProcessMessage() intact.  Once the individual code blocks move to their own ," the hashes will unavoidably differ. A line-by-line source code comparison tool would be better than a hash check.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,16,2014-08-07 04:51:51,692.75,1,,,"b'b"" I have nothing against changes like this", except I think that:1) The resulting temporary state is worse than the start due to circulardependencies (you don\'t claim it is, but:)2) It does not help anything towards achieving the IMHO correct solution,which is separate handler modules, like @laanwj\'s  transactionhandling. In fact, it interferes with it. I would like to see moving bits of processing out to well-encapsulatedhandler modules," and would have expected such changes to have happened bynow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,17,2014-08-07 04:51:51,1152.88,,,1,b'b\' I was talking about doing the equivalent to that commit without moving anything first.Shouldn\\\'t be enough to in practice keep the code where it was (in ProcessMessage)? We already have that with git. And by not correcting the indentation at first, the commit can be very readable (specially if the new class is not introduced). But the identical hash eliminates the need for  testing, which is nice. @sipa would you oppose to just doing the function separation in  ? That wouldn\\\'t create any circular dependencies and I believe it would help with the later modularization that you want (apart from making ProcessMessage much, much," much more readable [I don\\\'t use eclipse anymore but I believe some checkstyle plugins can segfault just by trying to analyze this function {if you first disable the typical ""too long function"" check", obviously}]).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,18,2014-08-07 04:51:51,1187.52,,,1,"b'b"" I\'m talking about something along this lines: url  But I now realize that for the build to be identical the return true; at the end of every new function should be introduced before that commit. That little preparation would also be trivial to review", but I\'m not sure having an identical build commit would be a great benefit anymore... EDIT:Updated the branch, now there\'s a preparation commit and a second one that I believe should result in an identical hash, so please, correct me if I\'m wrong. @laanwj assuming it produces an identical hash," would that make it more mergeable or it would be better to squash it with the preparation commit from the beginning?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,19,2014-08-07 04:51:51,1201.58,,1,,"b""b' No problem with splitting up processing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,20,2014-08-07 04:51:51,1266.52,,,1,"b'b"" @sipa Great", I will eventually open what I started there then, although I believe it would be good to make more things like #6163 first," so that we don\'t have to work more later (having to add more parameters to the new functions). Thoughts on the identical build? Could url  theoretically produce an identical build? Is it worth it (given that you need a previous commit at least for the return trues)?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,21,2014-08-07 04:51:51,1283.42,1,,,"b'b"" I think that for refactors like this", you shouldn\'t aim for identical builds. The only way to achieve that is by forcing the compiler to inline things," which for such large blocks of code is probably a bad idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,22,2014-08-07 04:51:51,254.68,1,,,b'b\' Thanks, @sipa that\\\'s useful. But I don\\\'t see why inlining all those new static functions is a bad idea. First, it is no worse than what we currently have, and second," the inline can be removed in a fixup! commit (to be squashed together after ""testing""", just like the preparation commit). In any case, maybe is still not worth it, but what about doing something similar in consensus code, more concretely in EvalScript? To remind you, #5153 was considered too risky url  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,23,2014-08-07 04:51:51,273.7,,1,,"b'b"" @jtimon I mean _forcing_ the compiler to inline things just putting the \'inline\' keyword may not be enough for that (it may need compiler flags", for example), and even then, the order in the binary may end up being different. Just saying that IMHO that\'s not a good use of your time, but if you think you can make the build identical, so much the better. I\'m much less concerned about changes here than in script evaluation, as getting some  wrong in message handling should result in immediate failure (some messages not being processed)," in script evaluation it could lead to very subtle differences.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,24,2014-08-07 04:51:51,396.93,,1,,"b'b"" Basically the inlining doesn\'t produce any value.  It doesn\'t generate identical hashes.  Might as well make them separate .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,25,2014-08-07 04:51:51,252.82,,,1,"b""b' Thank you very much both of you: this is very helpful.When (if nobody does it before me) I reopen the discussed subset of this PR", I will forget about the identical build. I guess I was too much worried about reusing the IsIdenticalBuild tool for  url  , but this seems definitely less risky and more of a priority.  But, as said, I would like to see more of those disappear," and some of those and moving up first.The most current and finished thing I have on this will be in url  until I open it as a PR in case you want to take a look or cherry pick for finishing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4646,closed,-,-,-,6,16,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,opened,2014-08-09 13:38:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,title,2014-08-09 13:38:59,00:00,,1,,"b""b' [Qt] small cleanups in transactiontablemodel'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,1,2014-08-09 13:38:59,856.3,,,1,"b""b' Just saying", I am going to submit a pull for adding a new dynamic column to the transactions-list. That way you can filter and sort by watch-only. In the overviewpage, I just wrote watch-only before the address," that way its a little easier to grasp.The blue color may make the watch-only txs look more important than the normal ones.What do you think? ![watchonly_column1]url  ![watchonly_column2]url  ![watchonly_column]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,2,2014-08-09 13:38:59,492.68,,1,,"b""b' @cozz I just chose blueish", because I thought watch-only should visually be different. By adding a new column this is also achieved :). But I think for adresses with and without label (watch-only) should be appended," not prepended (on the overviewpage as in tooltips). Otherwise I like your solution better.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,3,2014-08-09 13:38:59,1198.45,,1,,"b""b' I missed this one somehow. Does #4673 include all the changes here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,4,2014-08-09 13:38:59,309.72,,,1,"b'b"" @laanwj I\'m going to remove the watch-only stuff from this"," so it can be merged. Updated!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,5,2014-08-09 13:38:59,478.95,,1,,"b""b' @laanwj Should be ready now"," can you take a look?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,6,2014-08-09 13:38:59,38.47,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,closed,2014-09-05 07:25:15,1066.27,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,7,2014-08-09 13:38:59,750.17,,1,,"b""b' @diapolo eh", closed," what about the other changes?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,8,2014-08-09 13:38:59,36.87,,,1,"b""b' Uuups"," that was not intentionally... re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,reopened,2014-09-05 11:00:35,215.33,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,9,2014-08-09 13:38:59,0.58,,1,,"b""b' @laanwj If you want"," you can merge this now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,10,2014-08-09 13:38:59,1396.4,,1,,"b""b' @laanwj Ping"," can we please get this merged after your ACK :)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,closed,2014-09-18 10:08:55,1388.33,0,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4667,closed,-,-,-,0,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,opened,2014-08-13 14:07:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,title,2014-08-13 14:07:29,00:00,,1,,"b'b"" Don\'t hash what you\'re not going to sign""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,body,2014-08-13 14:07:29,00:00,,1,,"b""b' A tiny optimization in place that is not performance critical"," but in my opinion the end result is also more readable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,1,2014-08-13 14:07:29,8.23,1,,,"b""b' Having two Solvers() that do different things is ugly.  Thanks for cleaning that up. This probably conflicts with #4692 as will anything that touches script.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,2,2014-08-13 14:07:29,274.93,,,1,"b'b"" Thanks"," I hadn\'t seen that PR and it definitely interests me since I\'m almost exclusively working on refactor script lately. I don\'t mind to rebase all my work on top of that since the hardest part was funding out the changes I wanted to make.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,3,2014-08-13 14:07:29,1100.47,,1,,"b""b' Dependent on #4692'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,4,2014-08-13 14:07:29,640.5,,1,,"b""b' Rebased on top of #4754'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,5,2014-08-13 14:07:29,874.08,,1,,"b""b' Rebased on top of #4755 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,6,2014-08-13 14:07:29,1191.67,,1,,"b""b' Closing until #4754 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,closed,2014-09-02 10:17:25,1209.93,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,reopened,2014-09-08 20:36:50,619.42,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,7,2014-08-13 14:07:29,967.77,,1,,"b'b"" I haven\'t reviewed fully"," but this seems like it could be simplified on top #4890.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,8,2014-08-13 14:07:29,962.45,,1,,"b'b"" I have already a version rebased on top of that"," but I don\'t see the simplification...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,9,2014-08-13 14:07:29,2.82,,1,,"b'b"" You don\'t need to pass txTo and nIn around just pass the SIgnatureHasher around instead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,10,2014-08-13 14:07:29,2.78,1,,,"b""b' Oh no", sorry you still need it as the function updates the transaction itself," not just produce the signature. Nevermind.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,11,2014-08-13 14:07:29,137.48,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,12,2014-08-13 14:07:29,1320.13,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,13,2014-08-13 14:07:29,133.13,,1,,"b""b' Closing until 0.10'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,closed,2014-10-29 21:03:56,27.1,2,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4694,closed,-,-,-,2,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,opened,2014-08-13 14:13:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,title,2014-08-13 14:13:54,00:00,,1,,"b""b' Strictly hash what is going to be signed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,body,2014-08-13 14:13:54,00:00,1,,,"b'b"" Continues #4694.Again", more important than the optimization, I think the end result is more readable.It could be a little bit nicer by joining SignHash and Sign," but then multisig\'s performance would be hurt.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,1,2014-08-13 14:13:54,1381.48,,1,,"b""b' Dependent on #4692 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,2,2014-08-13 14:13:54,636.65,,1,,"b""b' Rebased on top of #4754'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,3,2014-08-13 14:13:54,874.18,,1,,"b""b' Rebased on top of #4755 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,4,2014-08-13 14:13:54,1190.7,,1,,"b""b' Closing until #4754 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,closed,2014-09-02 10:16:55,1203.02,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,reopened,2014-09-08 20:37:34,620.65,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,5,2014-08-13 14:13:54,650.87,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,6,2014-08-13 14:13:54,583.17,,1,,"b'b"" I think I\'ve changed my mind"," at least on removing SignN. Closing for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,closed,2014-09-15 06:50:57,613.38,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4695,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,opened,2014-08-13 17:16:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,title,2014-08-13 17:16:28,00:00,,1,,"b""b' [Wallet] Improve ReorderTransactions(..)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,body,2014-08-13 17:16:28,00:00,1,,,"b""b' ReorderTransactions is never called", unless someone would load a very old wallet. I couldnt even trigger ReorderTransactions by experimenting with zapwallettxs. And if it gets triggered somehow, it causes problems, see #3894. The function doesnt even write back txs to disk, if they have nOrderPos == -1, looks like a bug to me. The worst thing that could happen, is that some  have nOrderPos = -1. But I dont see any problems with this," even if happen. At least those old transactions would always appear behind new ones.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,1,2014-08-13 17:16:28,917.15,,1,,"b'b"" Not sure about this.For wallets it\'s extremely important to keep compatibility", even with the oldest possible ones.But if you say that multiple transactions having the same orderpos (or an orderpos<0) doesn\'t give problems then it may not be so important to keep around," especially if the current implementation makes it even more broken.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,2,2014-08-13 17:16:28,10.53,,1,,b'b\' This worked when I wrote it. Maybe there\\\'s a bug introduced by the zap wallet stuff," but that shouldn\\\'t be ""fixed"" by breaking compatibility with old wallets.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,3,2014-08-13 17:16:28,4.18,,1,,"b""b' I will do some more testing and report back.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,4,2014-08-13 17:16:28,2.47,,1,,"b""b' In principle ReorderTransactions is a quite simple function. Not some Satoshi monster code that we have to get rid of asap. So my preference would go to fixing it as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,5,2014-08-13 17:16:28,359.53,,1,,"b'b\' Updated the title from ""Remove"" to ""Improve"" now. I think we should write all changes to nOrderPos back to the database.Currently txs and nOrderPosNext are not written back", only in-memory. This means thatReorderTransactions(..) is run everytime you start the wallet andhave -1 ids.  If you only had AccEntrys with -1, this could result in a bug,because they are written back with higher ids, but nOrderPosNext is not written back.If you restart now, you would start with the lower nOrderPosNext from before.Though this bug is not really a real world scenario, because someone would havetxs with -1 as well. @luke-jr Could you take a look at the code changes?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,6,2014-08-13 17:16:28,1.75,,1,,"b'b"" I think that looks safe", but it\'s been a while... Writing nOrderPosNext should be sufficient to fix it," no?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,7,2014-08-13 17:16:28,11.4,,,1,"b""b' Yes", but if we dont write the txs back, they have nOrderPos=-1 again, next time you start the wallet.Unless you trigger a () somehow else, through rescan for example. This means that ReorderTransactions(..) is called everytime you load the wallet.But it should be a one time thing. I am fine with closing this pull request too, if you prefer that," as this code is 2 years old now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,8,2014-08-13 17:16:28,6.08,,,1,"b'b"" @cozz It\'s okay to redo it every time: the results should be the same. :) But writing it back should be harmless too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,9,2014-08-13 17:16:28,18.98,,,1,"b""b' Closing in that case"," thanks for helping here anyway.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,closed,2014-08-14 15:28:34,1332.1,1,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,10,2014-08-13 17:16:28,2.15,,1,,"b'b"" I don\'t think it makes sense to do it every time. Fixing an old wallet should be a one-time thing after that it should behave like a new wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,11,2014-08-13 17:16:28,8.1,,1,,"b""b' Reopening in that case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,reopened,2014-08-14 15:38:48,10.23,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,12,2014-08-13 17:16:28,129.67,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,13,2014-08-13 17:16:28,916.88,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,closed,2014-09-08 09:07:09,1048.35,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4697,closed,-,-,-,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,opened,2014-08-15 21:31:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,title,2014-08-15 21:31:13,00:00,,1,,"b""b' replace int with size_t in stream methods'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,body,2014-08-15 21:31:13,00:00,,1,,"b""b' Thus the read(...) and write(...) methods of all stream classes now have identical parameter lists.This will bring these classes one step closer to a common interface.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,1,2014-08-15 21:31:13,611.67,,,1,"b'b"" Looks good to me"," although before merging it must be verified that we\'re not passing in numbers that are potentially negative anywhere. After this change that would result in an integer overflow or undefined behavior.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,2,2014-08-15 21:31:13,636.63,,1,,"b'b"" @laanwj I took a look and it seems that these methods are only ever used by various **** functions and methods. In some of them", the size parameter is acquired through **sizeof** operator. In other, the size is calculated in a trivial manner," or at least trivial anough to warrant usage of **size_t** in every other streamlike object\'s **(..)** or **(..)**  method.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,3,2014-08-15 21:31:13,22.9,1,,,"b'b"" Ok thanks for checking. I\'d prefer not use anything with virtual methods", though. Serialization is performance-critical," and having vtables (which are essentially function pointers) are known to make it easier to write exploits so may be worse from a security viewpoint.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,4,2014-08-15 21:31:13,4.48,,1,,"b'b"" Yes", I really want to avoid introducing runtime lookups for serialization. The effective amount of code is huge, and it only really works so well because the compiler can optimize pretty much everything away. Of course, I haven\'t benchmarked," and numbers may convince me otherwise.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,closed,2014-08-18 18:55:29,1284.27,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,reopened,2014-08-18 18:55:30,0.02,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,5,2014-08-15 21:31:13,182.8,,1,,"b""b' Untested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,6,2014-08-15 21:31:13,41.32,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,7,2014-08-15 21:31:13,209.77,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,8,2014-08-15 21:31:13,289.8,,1,,"b""b' tested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,closed,2014-08-21 06:51:26,715.93,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4706,closed,-,-,-,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,opened,2014-08-23 11:14:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,title,2014-08-23 11:14:47,00:00,,1,,"b""b' Move code from script to wallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,body,2014-08-23 11:14:47,00:00,,1,,"b""b' Continues #4754'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,1,2014-08-23 11:14:47,12.05,,1,,"b'b"" Why do you keep moving CTxDestination to key? IMHO it doesn\'t belong there at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,2,2014-08-23 11:14:47,16.7,1,,,"b'b"" Since this one depends on the other", I\'ll be showing more controversial things like that one.And abandon the ones that don\'t get acked.I still think CTxDestination doesn\'t belong to script. CTxDestination is related to CKeyID, CScriptID (in key.h) and CBitcoinAddress (in base58.h). I thought the changes in the includes would make it more clear than the first time I tried it (#4698).In particular, I want to avoid scriptutils.h including  and that\'s the only type impeding it.Another way to  do that would be by separating CTxDestination to its own file, but when I do that I feel I need to put it in key.h instead," maybe base58.h with CBitcoinAddress ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,3,2014-08-23 11:14:47,2.13,,1,,"b""b' How can scriptutils.h not include script.h? It needs the CScript type...?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,4,2014-08-23 11:14:47,0.77,1,,,"b""b'   as shown in the controversial commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,5,2014-08-23 11:14:47,4.88,1,,,"b'b"" Ah. So", my opinion about this: using forward declarations and .h files including fewer things than the corresponding .cpp file is nice for one thing only: speeding up compilation. For all other purposes, I consider it ugly. It hides dependencies between modules, and may cause breaking in case of reorganizations that change types. As far as I\'m concerned, the most important thing (and the only thing worth doing refactoring effort to obtain) is dependencies between modules, where a module is defined as the combination of the .h and .cpp file. You can\'t use the .h file without the .cpp file (typically), so including the .h file means you\'re depending on that code. Moving CTxDestination to a place where it makes no sense semantically (scripts, and their identifiers, are much higher level constructs than keys) is IMHO a bad idea, but if the only goal is dropping an #include (without even breaking a module dependency)," it\'s unacceptable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,6,2014-08-23 11:14:47,29.8,,1,,"b'b"" Of course it all comes down to whether or not it makes sense semantically there.The includes are just the clues that have led me to believe that an the destination may belong to key.h or base58.h. To be honest I didn\'t had much hope that the particular commit was going to be accepted", just wanted to present it in a way in which my reasoning is more clear. Re: forward declarations: I guess if there weren\'t so many definitions in .h files," forward declarations wouldn\'t save that much compiling time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,7,2014-08-23 11:14:47,19.2,,1,,"b'b"" Key is a wrapper around ECDSA", and has types for private and public keys, and support signature generation and verification [key].Script defines a higher-level crypto system. It has private keys consisting of a CKeyStore plus a CScript redeem script, public keys consisting of just the CScript redeem script, and signatures consisting of CScript sigScripts [script].In order to help signing in this script crypto system, template matching on redeemscripts is supported, and particular subsets of such scripts can be referred to using a CTxDestination (which encodes a few possible templates in a concise way). [script ]Base58 is built on top of that, providing support for encoding some of the cryptographic data of the layers below in a human-readable way [base58] Yes, it may seem that moving CTxDestination to CKey simplifies things, but that\'s just because you ignore the code in the script utils cpp file that is intimately using CTxDestination, while nothing relying on key is. Really," just consider the .h and .cpp always as a whole when deciding boundaries of responsibilities.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,8,2014-08-23 11:14:47,1313.12,,1,,"b'b"" Agree that CTxDestination doesn\'t belong in key.h. We\'ve had this discussion before"," please don\'t keep doing that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,9,2014-08-23 11:14:47,347.13,1,,,"b'b"" I\'m sorry I shouldn\'t have pushed that again. I should have at least used the separated destination.h instead of just mentioning it while pushing the change that had been rejected again", or better yet, not push that commit at all since the PR wasn\'t finished.Anyway," I also moved ExtractDestination() and ExtractDestinations() to  and added a few more commits.At this point the only thing preventing me from moving scriptutils to libbitcoin_wallet is that script_P2SH_tests and multisig_tests would break when disable-wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,10,2014-08-23 11:14:47,323.0,,1,,"b""b' Rebased on top of #4788 Maybe I should rename scriptutils.o to ismine.o or just move it to wallet.o?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,11,2014-08-23 11:14:47,653.98,,1,,"b'b"" @jtimon I\'d say if it is only used by the wallet"," move it to the wallet. On the other hand the  is growing quite a lot lately so maybe it makes sense to keep it split up. But make it clear in the name (and build system) that it\'s part of the wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,12,2014-08-23 11:14:47,107.47,,1,,"b""b' What about wallet_ismine.o?Maybe ?I mean", probably wallet should have its own directory too," and although that seems to belong to another PR it makes no sense to rename scriptutils.o to wallet_ismine.o and then wallet_ismine.o to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,13,2014-08-23 11:14:47,17.13,,1,,"b'b"" I wouldn\'t worry too much about  names for now. Justencapsulate where possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,14,2014-08-23 11:14:47,6.55,,1,,"b""b' Yeah"," it is bike-shedding but better do it before I do the rename.Anyone opposed to ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,15,2014-08-23 11:14:47,33.28,,1,,"b'b"" @jtimon I\'d say wallet_ismine.o. Moving it to a directory can always be done later and should happen along with the other files libbitcoin_wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,16,2014-08-23 11:14:47,9.03,,1,,"b""b' Fair enough"," wallet_ismine.o then'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,17,2014-08-23 11:14:47,97.0,,1,,"b'b"" Rebased on top of #4754 \'s latest  after #4788 has being merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,18,2014-08-23 11:14:47,427.53,1,,,"b'b"" @jtimon Sorry for not looking closer at the code wrt the CTxDestination question earlier. I didn\'t realize that CScript itself used CTxDestination. I think that the easiest solution is moving CTxDestination to scriptutils.h (or whatever it\'s called after renames)"," and convert the CScript methods SetDestination and SetMultisig to functions in scriptutils.h as well. The CScript data structure has no need to know about standard script types.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,19,2014-08-23 11:14:47,246.52,,1,,"b'b"" Don\'t worry if I hadn\'t insisted on moving it to key.h only by following the includes and I had fully separated instead (depending on key.h but being a script.h dependency)", the responses would have been different I think.What you say seems right, it\'s not that  and  independently depend on  (allow me the redundancy): is that I was right in the sense that CTxDestination doesn\'t belong in  but I was wrong pushing it down, since it belongs to a higher layer with SetDestination and SetMultisig, didn\'t saw that.Anyway, since #4754 needs rebase and rereview I\'ll write a PR for destination on top of it.My plan is the following: 1) Create a new PR with preparations for #4754, a couple of commits with non-move-only stuff.2) Rebase #4754 on top of the previous one including all the move-only things that were here.3) Rebase this one on top of #4754 with the movements of code from script to wallet4) Rebase all my other script-related card castle on top of #4754 instead of this one, the building movements to wallet are independent from the rest.5) Come back to CTxDestination and see how high can be lifted. Postscript: I know that my network of PR is getting messy: I\'m slowly cleaning it up.Btw, nice merge 4737," I was considering to rebase 4796 on top of that already. It also solves that inconvenience with clang.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,20,2014-08-23 11:14:47,602.97,,1,,"b""b' Closing until #4754 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,closed,2014-09-02 10:26:23,1391.6,5,17,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,reopened,2014-09-08 21:08:33,642.17,5,17,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,21,2014-08-23 11:14:47,646.8,,1,,"b""b' I can squash the alphabetical fix into one of the other commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,22,2014-08-23 11:14:47,593.1,,1,,"b""b' utACK"," verified code move.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,23,2014-08-23 11:14:47,685.2,,,1,"b""b' Looks good to me. Agreed about moving out the wallet tests as a next step.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,24,2014-08-23 11:14:47,60.58,,1,,"b'b"" Updated with the ifdef in the includes of the tests fix.I\'m not sure about what\'s the correct alphabetic order in the makefile.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,25,2014-08-23 11:14:47,6.08,1,,,"b""b' @jtimon In case of doubt about the sorting you could run the lines through sort. In vim this is a matter of selecting the range with V then  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,26,2014-08-23 11:14:47,3.95,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,27,2014-08-23 11:14:47,227.65,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,28,2014-08-23 11:14:47,689.48,,1,,"b""b' Merged via fd1caa0 (added the #ifdef)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,closed,2014-09-10 11:40:05,871.53,6,23,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,29,2014-08-23 11:14:47,248.83,,,1,"b'b"" Thanks @laanwj. I don\'t use vim but emacs has the equivalent M-x sort-lines. I could have thought of that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4755,closed,-,-,-,6,23,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,opened,2014-08-30 10:10:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,title,2014-08-30 10:10:31,00:00,,1,,"b""b' Pow: Refactor: Encapsulate miner-related pow in GenerateProof (was ScanHash) and use it for regtest mining'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,body,2014-08-30 10:10:31,00:00,,1,,b'b\' Continues #4506.Following @laanwj \\\'s advice of only moving ScanHash, I found another solution to encapsulate the miner\\\'s pow without removing the miner\\\'s optimization," which was rejected in #4423 But I would like to slightly change the behavior.Commit ""Replace  >= 0xffff000 with an iteration counter"" should be either rejected or squashed into "" >= 0xffff0000 -""Small miner optimization"" also should be rejected or rebased in ""Remove testnet\\\'s special case from "".I think these 2 functional changes are meaningless enough that can be safely accepted.I would also be happy to just remove the hashmeter and the resulting PR would be simpler.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,1,2014-08-30 10:10:31,550.1,,1,,"b""b' Closing as it is included in #4794 with only one commit more.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,closed,2014-09-01 19:20:37,550.1,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,2,2014-08-30 10:10:31,967.62,,1,,"b""b' Reopened as independent from #4506 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,reopened,2014-09-02 11:28:14,967.62,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,3,2014-08-30 10:10:31,14.22,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,4,2014-08-30 10:10:31,1304.3,,,1,"b'b"" @gavinandresen that\'s the reason why I wanted to get rid of the optimization (which doesn\'t really help much in regtest mode) in #4423 but I\'m happy removing the hashmeter.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,5,2014-08-30 10:10:31,668.1,,1,,"b""b' The last commit (Remove gethashespersec() from rpcmining) is completely optional and can be moved to another PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,6,2014-08-30 10:10:31,13.02,,,1,"b""b' Concept ACK and code looks good. We may want to deprecation period for gethashespersec() though"," and just having it return 0 is not really acceptable. Having it return an error would be fine to me as nobody should really be depending on it anymore.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,7,2014-08-30 10:10:31,650.88,,1,,"b""b' utACK. I dont think we need a deprecation period for anything related to the internal miner.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,8,2014-08-30 10:10:31,581.35,,,1,"b""b' Waiting to get more consensus before changing the rpc stuff (in case we decide to leave it as it is now).I prefer to just remove it but I have no strong opinion on this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,9,2014-08-30 10:10:31,880.95,,,1,"b'b"" So counting opinions on the RPC stuff... A) Just remove gethashespersec RPC call in this PR ( TheBlueMatt", jtimon ) total 2B) Leave gethashespersec but throw an error when somebody calls it (sipa) total 1C) Let gethashespersec return always 0 and leave the RPC for another PR (nobody) total 0 I don\'t really have a strong opinion on this. I\'m not in a hurry to remove the RPC call.Please," more opinions are greatly appreciated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,10,2014-08-30 10:10:31,4.63,,,1,"b'b"" I think gethashespersec is more or less worthless. I don\'t think I\'ve heard of anyone using it in a long time. (IIRC it was even broken for a while).  I don\'t really have a strong opinion"," but I think this is an unimportant enough RPC that removing it shoudl be fine. @jgarzik has had opinions about the internal miner before.  @luke-jr often has mining opinions""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,11,2014-08-30 10:10:31,46.55,,,1,"b'b"" Remove it  "," as long as the internal miner is working I\'m fine with that ;).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,12,2014-08-30 10:10:31,4.7,,,1,"b'b"" As said before", sometimes I wonder why we don\'t just nuke the internal miner," instead of death by a thousand cuts. Anyhow yes I\'m fine with removing  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,13,2014-08-30 10:10:31,837.57,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,14,2014-08-30 10:10:31,147.73,,1,,"b""b' Pushed one additional commit to avoid using boost on ScanHash().Instead it returns false"," and just after that was called anyway.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,15,2014-08-30 10:10:31,973.8,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,16,2014-08-30 10:10:31,206.23,,1,,"b'b"" That makes sense", I can squash it there as soon as I get some more acks for the latest commit.In fact, the commits are very separated to simplify review," but they\'re all very localized so I think I wouldn\'t oppose to collapse them all into a single commit once we\'re ready to merge.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,17,2014-08-30 10:10:31,1074.38,,1,,"b""b' PingAlso"," should I squash already?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,18,2014-08-30 10:10:31,1325.28,,1,,"b""b' Squashed into 2 commits.The step by step version can still be found here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,19,2014-08-30 10:10:31,434.22,,1,,"b""b' Squashed and rebased with some corrections"," but closing at least until #5599 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,closed,2015-01-04 20:17:48,529.57,0,14,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,reopened,2015-01-24 18:24:18,1326.5,0,14,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,20,2014-08-30 10:10:31,1334.78,,1,,"b'b"" After #5599 has been merged I reopened this.I also make regtest use the new generateProof (was ScanHash) function as discussed in #5275 after it was merged.This should slightly improve regtest mining performance but I haven\'t tested.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,21,2014-08-30 10:10:31,727.33,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,22,2014-08-30 10:10:31,1365.17,,1,,"b'b"" Squashed the 2 commits. It didn\'t really help much to review to have them separated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,23,2014-08-30 10:10:31,662.55,,1,,"b""b' Needed rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,24,2014-08-30 10:10:31,342.58,,1,,"b""b' @jtimon #5957 includes something similar to this (but goes further). I forgot you had a PR still open for this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,25,2014-08-30 10:10:31,3.48,,1,,"b""b' Closing in favor of #5957"," although waiting for some nits to be solved.I plan to remove the CheckProofOfWork() warnings as part of the libconsensus work to expose VerifyBlockHeader() soon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,closed,2015-04-08 22:12:06,227.8,0,20,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,reopened,2015-04-10 08:53:14,641.13,0,20,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,26,2014-08-30 10:10:31,696.37,,1,,"b""b' Rebased and reopened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,27,2014-08-30 10:10:31,627.48,,1,,"b""b' Needed rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,28,2014-08-30 10:10:31,1129.93,,,1,"b""b' Most of the comments in this PR do not seem to apply to the actual code change here anymore.  What is the motivation for this change?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,29,2014-08-30 10:10:31,31.97,,,1,b'b\' @laanwj instead of checking for the overflow of the nNonce, the magic 1000 is used. This does not check all possible values of the nonce before changing the extra nonce, but that shouldn\\\'t be a problem.It can be make a constant," sure. I was hoping that @sipa @luke-jr or someone less lazy than me for base conversions and hexadecimal would say something like ""since ScanHash returns false when you can safely change the 1000 for X and we will still exhaust all the possibilities with the 32 bits of the nonce""..We should probably make that 0xfff a constant as well. Any suggestions for the constants are welcomed. The PR has many comments about the removal of the hashmeter", which was originally part of this, but was already merged separately.This was part of the effort to encapsulate the proof of work and it reduces the number of places in mining where nBits and nNonce are used.It should also make regtest slightly faster, but I haven\\\'t tested that. It also makes regtest and non-regtest mining more similar.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,30,2014-08-30 10:10:31,228.02,,1,,"b""b' ping'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,31,2014-08-30 10:10:31,881.45,,1,,"b""b' Needed rebase. Also"," I stopped using multiple threads for mining with regtest.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,32,2014-08-30 10:10:31,484.45,1,,,"b""b' Closing this old PR.  This was a very confusing PR as @laanwj notes", as the associated commits keep changing, garnering ACKs, getting closed, getting re-opened. Please open a new PR with a specific focused change," and a fresh PR summary description.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,closed,2015-07-23 18:11:43,558.48,1,24,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4793,closed,-,-,-,1,24,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,opened,2014-08-30 20:27:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,title,2014-08-30 20:27:16,00:00,,1,,"b""b' Move CBlockIndex"," CChain and related code out of main'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,body,2014-08-30 20:27:16,00:00,,1,,"b""b' After these changes main.h has only 603 lines"," and  only 4344 lines.One step at a time...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,1,2014-08-30 20:27:16,190.33,,1,,"b'b"" I\'d rather keep mapBlockIndex in main"," as it\'s a data structure protected by its cs_main lock. Idea ACK on moving the definitions out though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,2,2014-08-30 20:27:16,85.77,,1,,"b'b"" It needs rebase so maybe I incorporate the @gmaxwell idea of including a typedef for map (more flexibility if we want to  another structure)", but yeah, I\'ll keep the critical sections and the couple of related functions I thought moving here (CBlockIndex \\\\* InsertBlockIndex(uint256 hash) and bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos& pos)) in main. I think this 2 could be easily unified, but I failed my first lazy attempt and just left them on main," just mentioning.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,3,2014-08-30 20:27:16,578.57,,1,,"b""b' Closing until corrected and rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,closed,2014-09-02 10:41:56,854.67,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,reopened,2014-09-03 09:04:57,1343.02,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,4,2014-08-30 20:27:16,1344.98,,1,,"b""b' Rebased leaving mapBlockIndex in main.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,5,2014-08-30 20:27:16,453.07,,1,,"b""b' Verified 13d6bf187b5d969a4c661733a3e0502190f1f0e4 as code-movement only.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,6,2014-08-30 20:27:16,201.43,1,,,"b'b"" Thank you @theuni and I\'m sorry but it\'s the second time I\'m going to have to rebase after you verify the diff. Apparently last time with the script PR wasn\'t really necessary and it was just a little lie from github (@sipa told me it was still a clean rebase).But somehow I didn\'t noticed locally so I did the rebase and the squash"," so that was my fault.I\'ll rebase soon.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,7,2014-08-30 20:27:16,124.82,,1,,"b'b"" @jtimon As you had to rebase anyway"," I hope #4838 doesn\'t make things too much harder.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,8,2014-08-30 20:27:16,6.92,,,1,"b'b"" @jtimon Thanks for the heads up. I\'ll  again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,9,2014-08-30 20:27:16,54.95,,,1,"b'b"" @theuni cool thanks", I hope this one is the last one, script doesn\'t have as much activity as main has. @sipa no problem, I\'ll reabase this tomorrow.A fast glance at #4838 reminds me @gmaxwell\'s suggestion of having a typedef for mapBlockIndex, I\'m thinking a class with at least cs_nBlockSequenceId in it. I don\'t like these globals, maybe a singleton factory for mapBlockIndexClass instead with all its CCriticalSection inside?Of course that would be another PR," but it\'s kind of related (remember I was moving mapBlockIndex to chain at first) and I keep thinking about it... ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,10,2014-08-30 20:27:16,6.47,,1,,"b'b"" The globals all have to go if we ever realistically want to use this code as a library... but eliminating them requires a _lot_ of plumbing. (Not that you can\'t have globals in a library\\xe2\\x80\\x94 but you can\'t both have globals in a library and show your face in public afterwards :P)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,11,2014-08-30 20:27:16,460.23,,1,,b'b\' I mean just make it an attribute of the class for the map, and the functionthat uses it becomes a method. I understand that other critical sectionsare not going to be so easy to hide...On Sep 5, 2014 1:15 AM,"Gregory Maxwell"" notifications@ wrote:\''
bitcoin	4796	closed	12	laanwj	2014-08-30 20:27:16	1155.12	+1			b'b"" Moving away from global state is a sensible goal. But I\'m heavily opposed to anything involving singletons. That just moves from one way of having side effects and hiding dependencies between modules to another one. It looks \'object oriented\' and allows some more flexibility in  order but in the end it is the same thing. For that reason, the singleton pattern has become quite controversial.""'
bitcoin	4796	closed	13	jtimon	2014-08-30 20:27:16	920.4		+1		b'b"" Whatever, let\'s do what we do with the global variable that Params() returns, almost indistinguishable from a singleton factory function. Or just keep the variable name of the global as it is. The main point encapsulate the type in a class and move the functions and critical sections that make sense inside (maybe only cs_nBlockSequenceId and a couple of methods). ""'
bitcoin	4796	closed	14	BitcoinPullTester	2014-08-30 20:27:16	182.62		+1		b""b' Automatic sanity-testing: PASSED, see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,15,2014-08-30 20:27:16,212.1,,1,,"b""b' ACK. Verified move-only (e8b5f0d549b1b76611c7374bed9ceec7d09fa847).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,16,2014-08-30 20:27:16,524.38,,,1,"b""b' ut ACK"," seems like a good unit to move out of main.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,closed,2014-09-29 04:07:19,1142.37,2,13,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4796,closed,-,-,-,2,13,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,opened,2014-08-31 21:06:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,title,2014-08-31 21:06:58,00:00,,1,,"b""b' Remove CChainParams::NetworkID()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,body,2014-08-31 21:06:58,00:00,,1,,"b""b' Continues #4801 (and #3823 #3824 #4333).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,1,2014-08-31 21:06:58,746.9,1,,,"b'b"" Removed the gui specific flag in favor of using the bip70 string id.If there\'s nothing controversial with the checkpoints in #4801 I can just close it as it is included here (also close this one since it is included in #4804 ).I probably shouldn\'t have open so many of them in the first place...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,2,2014-08-31 21:06:58,1216.58,1,,,"b'b"" I\'m not sure this code is really more readable. Comparing to TESTNET to set a testnet flag is very readable (also", why are you saying testnet is deprecated?). Comparing to a string always seems worse than comparing to a constant to me," and I\'m not convinced moving the checkpoint data to a separate file just to #include it in one cpp file is a good idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,3,2014-08-31 21:06:58,27.92,,1,,"b'b"" Testnet is not going to be deprecated", but the call is (and the field on it). Ever since we support three chains, having a boolean is not enough anymore. returns much more information about the current chain.  And well," I can understand that the idea behind this is to have all the chain-specific data in a parameter data structure without \'identity\'. But the GUI and the deprecated flag needs to know the network identity so there\'s an inherent conflict there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,4,2014-08-31 21:06:58,160.8,,1,,b'b\' Yeah," comparing to the testnet id was very readable so it\\\'s the new flag. The difference is that when people see ""NetworkID() == something"" they think they can use that too", while FlagWithLongNameIncludingTheWordDeprecated() is not as likely to be used or that\\\'s my hope.@laanwj explained the deprecation thing, but basically, RPCs can just use bip70\\\'s networkidstring()For the string, I was going to create another flag but @laanwj wants to keep chainparams clean of GUI-related things. Of course comparing to an enumerator is better than comparing to a string, again, the goal is that people don\\\'t see the comparation to the enumeration and think they can call CChainParams::NetworkID(), hopefully the comparison with a string will make people use that approach less, but we need the string for BIP70 anyway. With respect to the checkpoints,t his way we avoid the calls to Params().NetworkID() in .If at some point we\\\'re going to read the chainparams from data files, we probably want to put the checkpoint data there as well.At that point writing a new mode should be as simple as writing a json or xml file. So in summary, the goal here is not readability, is to maintain readability by killing NetworkID(), which shouldn\\\'t be used. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,5,2014-08-31 21:06:58,14.82,,1,,"b'b"" With regard to the GUI comparing directly against the string", that doesn\'t have to stay that way in the future. Best would be to have a style sheet class name based on the network name or something like that. Anyhow," it\'s exceptional usage and only affects visuals.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,6,2014-08-31 21:06:58,570.07,,1,,"b""b' Since I had to squash the fix addressing @laanwj suggestions and the first two commits"," I just rebased on top of the current master. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,7,2014-08-31 21:06:58,12.63,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,8,2014-08-31 21:06:58,1266.07,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,9,2014-08-31 21:06:58,600.48,,1,,"b'b"" I\'m going to defer to @laanwj\'s opinion on the concept here; I personally don\'t consider string matching better than identifier matching... I do like the movement of the checkpoint data to chainparams"," though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,10,2014-08-31 21:06:58,1.13,,,1,"b""b' Code is fine", movement of checkpoint is good.  The comparison with the string seemed unusual for our codebase," but perhaps it makes sense in the context of the GUI. Whatever wumpus wants.  Conditional-ACK-on-Wumpus'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,11,2014-08-31 21:06:58,9.13,,,1,"b'b"" If you provide a GUITestNetFlag and use that in getinfo too"," I\'ll be happy to ACK here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,12,2014-08-31 21:06:58,342.0,,,1,"b'b"" @sipa @gmaxwell The string matching will at most be temporary as I said", it makes much more sense to have a stylesheet (or image directory name) with the name of the network (and that will be necessary to have different theming for  anyway). That hasn\'t been implemented yet. It is a presentation-only attribute so I\'m not concerned with having a string match here. Please do not add a a GUITestNetFlag to chain parameters, I\'ve tried to get rid of GUI-specific flags in the core all the time. You **cannot** use the same flag for getinfo because the testnet has a different interpretation: regtest is not testnet according to getinfo," where it is for the GUI (right now!).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,13,2014-08-31 21:06:58,5.4,1,,,"b'b\' ""If you provide a GUITestNetFlag"" I did that previously but @laanwj doesn\\\'t want anything gui-specific in chainparams", which makes a lot of sense. Making an ismainet flag defeats the purpose of removing networkID().Thus we used the bip70 string. The performance penalty is meaningless," specially in the context of a GUI. ""and use that in getinfo too"". No", the testnet flag is a deprecated flag that has to be removed when it is possible, thus it shouldn\\\'t be reused for anything else. Future  interface should use the string instead. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,14,2014-08-31 21:06:58,0.8,1,,,"b'b"" If the string match in the GUI is such a big problem", I\'ll go refactor that right now...Edit: uh... didn\'t mean to close this," sorry.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,closed,2014-10-09 08:01:42,654.73,4,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,reopened,2014-10-09 08:02:15,0.55,4,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,15,2014-08-31 21:06:58,74.32,,1,,"b""b' See #5066.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,16,2014-08-31 21:06:58,475.17,,1,,"b""b' Rebased on top of #5066"," no more string comparison.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,17,2014-08-31 21:06:58,813.12,,1,,"b""b' @jtimon can you please cherry-pick laanwj@afd2a6b into my commit here? (small fix after nit by @theuni)Tested ACK apart from that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,18,2014-08-31 21:06:58,137.95,,1,,"b""b' @laanwj cherry picked and squashed '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,closed,2014-10-10 09:57:13,114.97,4,13,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4802,closed,-,-,-,4,13,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,opened,2014-09-13 00:48:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,title,2014-09-13 00:48:32,00:00,,1,,"b""b' Issue#1643: Coinselection prunes extraneous inputs from ApproximateBestSubset'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,body,2014-09-13 00:48:32,00:00,,1,,"b""b' Improvement for [Issue#1643]url A further pass over the available inputs has been added to ApproximateBestSubset after a candidate set has been found. It will prune any extraneous inputs in the selected subset"," in order to decrease the number of inputs and the resulting change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,1,2014-09-13 00:48:32,2.2,,1,,"b""b' This is the first time I am trying to collaborate on an open-source project"," please feel free to point out when I am doing something wrong.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,2,2014-09-13 00:48:32,12.12,,1,,"b""b' Automatic sanity-testing: PASSED", see url  for binaries and test log.This test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test," please check timestamps to verify that the  is moving at url Contact BlueMatt on freenode if something looks broken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,3,2014-09-13 00:48:32,35.27,,,1,"b'b"" I was made aware by @sipa that a candidate set that ended up matching the targetValue with the addition of a dust UTXO would still be picked immediately. That seems to be correct. However", unless one is trying to make a minuscule payment, it seems that the likelihood to add a bigger UTXO at some point that would exceed the target should be sufficiently larger, than the chance that you\'d only add inputs that inch closer and closer to the target to match it finally without exceeding it. It should rather be unlikely to even happen in 1000 iterations (gut feeling)," so the patch should work fine in the majority of situations.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,4,2014-09-13 00:48:32,1253.85,1,,,"b'b"" Have you simulated this", e.g. how a wallet progressed over time?  I would expect this to result in grinding down the wallet into lots of dust change over time even worse than the current approach.  Generally, so long as it doesn\'t result in bloating things up to the point where the transaction confirms slowly, we should generally prefer to make transactions bigger (under the rational that transaction fees will increase over time or at worst stay constant).  E.g. If you already have a change output," a pass that looks at the scriptpubkeys you\'re spending and keeps adding more inputs assigned to the same pubkeys until the fee increase is some threshold or the change exceeds 2x the payment value (or something like that) would probably result in lower total transaction fees over time. (and better privacy)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,5,2014-09-13 00:48:32,759.12,,1,,"b'b"" @gmaxwell I had not simulated it in advance. I will do so though", just haven\'t gotten around to it yet. Perhaps I\'ll get around to it this evening," otherwise I will probably get around to it tomorrow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,closed,2014-09-18 11:11:05,622.55,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,reopened,2014-09-18 11:11:21,0.27,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,6,2014-09-13 00:48:32,1278.08,,1,,"b'b"" @gmaxwell So", I have done some simulations. My approach was:\\xe2\\x80\\xa2 To recreate the wallet logic in Python. \\xe2\\x80\\xa2 To add the pruning feature conditionally\\xe2\\x80\\xa2 To have a wallet of each type, starting wtih the same utxopool, execute and receive a number of payments.\\xe2\\x80\\xa2 They obviously end up with the same amount, and I can compare the number and sizes of final utxo. So far I have tried a few different scenarios, but I ended up being limited at around 10k utxo and 1000 operations, as my python implementation was not as fast as I had hoped.My initial experiments suggest that the pruning wallet does end up with a slightly bigger number of utxo, but it\'s only slightly bigger than the regular wallet. (I\'ll be adding the results later," when I am on the right computer.)I have started implementing the simulation in a compiled language to speed it up in order to do some more and bigger experiments.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,7,2014-09-13 00:48:32,1430.25,,1,,"b'b"" Please keep us updated on your progress. If you\'d like some more eyes on your testing code"," feel free to point it out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,8,2014-09-13 00:48:32,287.72,1,,,b'b\' @gmaxwell The code for my simulation can be found here: url  It is working now, and can be executed in bearable time, but the code could be a bit clearer. I am currently in my exam period and haven\\\'t had as much time to work on it, as I would like. I have tried a few different strategies to select coins," and have been experimenting with different distributions of incoming and outgoing payments. Different strategies:""Regular Wallet"" implements the algorithm currently in use as I understand it"," to be used as a baseline.""Pruning Wallet"" selects the coins just like the regular wallet"," but afterwards discards inputs that are smaller than the remaining change in the order they were selected.""Pruning Wallet with minimum number of Inputs""", like PW," but when pruning keeps at least the miminum number of Inputs.""Double Wallet"": Like PW", but when unable to directly match the target, aims for twice the target, in order to create change in the magnitude of what the user was trying to transfer instead of dust. Some results: Experiment 1: Start: 5000 random UTXO from range(2500, 250000) satoshis10000 transactions (randomly 50/50 distributed ) in the range(540,250000) satoshisRegular Wallet: 4853 changes created, in range(1,1591) satoshis, average change 63.01\\xc2\\xb197.78 satoshi, spent (1,12) inputs per transaction sent, average 1.44\\xc2\\xb11.15 ... writing up my results I realize that I will want to create a .csv instead of the current text-form result, sorry gonna go back to studying now, but I\\\'ll probably be able to do it in the next break. Some questions I haven\\\'t been able to answer satisfyingly:What would constitute realistic data for incoming and outgoing transactions of one wallet (how many  transactions, what average size and distributions for each direction, is it necessary to regard the change in value over time)?Haven\\\'t researched yet: When does the required transaction fee increase?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,9,2014-09-13 00:48:32,1432.5,,,1,"b'b"" Hi",Finished with my exams for this semester, finally had time to pick this up again. (When I created the .csv files with my output, I realized that my random models would sometimes generate spending instructions that asked for more than the wallet\'s current value. While those were were ignored as impossible, they still got into the statistics, so I wanted to fix that first.) I\'ve been thinking about what one might want to be optimizing for. This is what I got so far:1. **Non-dust change**: The creation of small change outputs should be avoided. They bloat the blockchain and are expensive to spend.-2. **Privacy**: UTXO should be picked non-deterministically, and as few different pubkeys as possible should be involved.3. **Minimize transaction fee** A transaction input set should be preferred when it costs less to send.-1. **Consolidate small UTXO?** Once created, very small UTXO are in the blockchain anyway.  Is it preferable to spend very small UTXO, in order to remove them from the UTXO-pool," or to ignore them until they become valuable enough to spend in their own right? Here are the statistics from my latest experiment.![ex19]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,10,2014-09-13 00:48:32,1128.83,,,1,"b""b' Very interesting results!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,11,2014-09-13 00:48:32,10.87,,1,,"b'b"" It\'s preferable to spend them: since it reduces the storage for a minimal full node (see the pruning patches in #4701)... subject to the restriction that you don\'t want someone to be able to gratitiously increase your transaction costs by sending you tiny utxo.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,12,2014-09-13 00:48:32,395.43,,,1,"b'b"" Perhaps I can help. I have data from \'s hot wallet which you can use for simulation: url  The positive amounts are amounts deposited", the negative amounts are sends. The data is sorted over time  (oldest at the top, newest at the bottom) denominated in bitcoins.  Things to note:deposits are only added to the list when they get 1 confirmation (so they tend to come in batches) and send amounts are added to the list instantlyAt various times, the cumulative total dips below 0. This happens when people have won enough money to be able to withdraw more than the total people have put in the site. For the purpose of simulation, you might want to assume there is an additional 50 BTC input at the very start," to avoid this case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,13,2014-09-13 00:48:32,220.75,,1,,"b""b' This PR has been open for a while", but garnered no ACKs.  The author seems to have put a fair amount of time and thought into it.  However, this definitely needs more review and testing. Ping," ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,14,2014-09-13 00:48:32,192.75,,,1,"b'b"" @jgarzik: Hi Jeff",Thanks for the ping. I had lost track of this," but I see now that @RHavar posted data that might help to explore what the patch would do with some realistic data for transaction sizes. I\'ll have a look this weekend.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,15,2014-09-13 00:48:32,623.88,,,1,"b'b"" I\'ve created another testcase using the  data. On that one", I get different results yet again, this time the Regular wallet has the least UTXO in the end. Looking over the results, I noticed that all wallets created a change output in the single digit satoshis. Do I remember correctly that the wallet shouldn\'t create Dust Outputs? Shouldn\'t the change be at least 540 satoshis? If so, I should probably fix that behavior still and then have another look. However, if it ends up looking as promising as today," I would propose to just expire this Pull-Request.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,16,2014-09-13 00:48:32,88.4,,1,,"b'b\' @Xekyo:Wouldn\\\'t ""extraneous inputs"" imply an issue in the coin selection algorithm which should be fixed instead? I invite you to look at #6696 which is a different approach. I am happy to shoot up some simulations if anyone is interested. (Ping me at the other PR)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,17,2014-09-13 00:48:32,380.87,1,,,"b'b\' From what I understand ApproximateBestSubset is an approximate algorithm for the following: The ""approximate"" part means that it may select a solution which is not the optimal one (e.g. sum(X)-nTargetValue is not really as small as possible). Your fix drops elements i from the result X for which sum(X)-i is still >= nTargetvalue", which if possible leads to a trivially better solution. From what I understand this can improve the result because vValue is sorted from low to high, and elements are added in that order, it can happen that an element is added to get the sum above nTargetValue, but makes earlier-added small elements redundant.What about moving the post-processing step to the end? This removes the performance impact per checked subset, and still makes sure redundant outputs are removed from the final result. I\\\'ve managed to reproduce this as well. For e.g. these input values: ApproximateBestSubset sometimes selects  . Postprocessing like this can drop the redundant inputs. Concept ACK this cannot make things worse. Would be nice to have a unit test.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,18,2014-09-13 00:48:32,29.42,,,1,"b""b' @laanwj Great that you had a look at this.Guess I missed that during review.@Xekyo are you still working on this? Should I take over?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,19,2014-09-13 00:48:32,1219.6,,,1,b'b\' Hi," Am 20.11.2015 11:11 schrieb ""MarcoFalke"" notifications@:I\\\'d be interested to take another look", but I\\\'m currently traveling. Pleasefeel free to take over. Otherwise, I\\\'ll check it out in December. Xekyo\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,20,2014-09-13 00:48:32,537.17,1,,,b'b\' @laanwj I\\\'ve edited my fork to move the post-processing step to the end of ApproximateBestSubset. However," this patch may cause fewer dust outputs to be spent which contradicts [Greg\\\'s assessment]url  above. Are you sure about ""cannot make things worse""? I feel my simulations have been somewhat inconclusive on that point.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,21,2014-09-13 00:48:32,63.2,1,,,b'b\' @MarcoFalke I realized my mistake and fixed it. After all my commits, I did the rebase as you suggested," and pushed to ""Fix-#1643"". I hope I did that right. :)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,22,2014-09-13 00:48:32,55.5,1,,,"b'b"" I\'ve added a simple test with with an expected on one iteration. Sorry", I\'m not sure how I would run the test on my machine right now," so I figured I\'d just push it. I\'ll check back tomorrow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,23,2014-09-13 00:48:32,1029.32,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,24,2014-09-13 00:48:32,2.97,1,,,"b""b' I rebased and used fixup on the commits that only fixed previous mistakes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,25,2014-09-13 00:48:32,153.52,1,,,"b'b"" @laanwj Travis had cleared my patch just when I realized that I had also messed up the indentation on the test. I\'ve rebased it into two commits", one commit for the code," and one for the test. I expect this to turn green again momentarily. Sorry for keeping Travis so busy. :( Is there anything else that needs to be done about this PR? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,closed,2015-12-08 09:23:06,1331.75,8,11,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,26,2014-09-13 00:48:32,1069.65,,,1,"b""b' Wallet code itself looks good! Post-merge Tested ACK. @Xekyo Thanks for sticking with this so long! There seems to be a small issue with the test code but I will create another PR for this... Note @laanwj: vValue is **not** sorted from low to high but from high to low but I think you meant it the right way. ;)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,27,2014-09-13 00:48:32,1078.02,1,,,"b""b' Oh", and you mentioned this will improve cases such as #1643. Which is not true, at least for this very transaction mentioned in #1643. Still," I assume pruning will help for really large wallets (like the ones of exchanges or heavy users) when they have a odd distribution of input amount sizes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4906,closed,-,-,-,9,11,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,opened,2014-09-28 04:00:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,title,2014-09-28 04:00:04,00:00,,1,,"b'b\' Build error: ""libtool: link: unable to infer tagged configuration""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,body,2014-09-28 04:00:04,00:00,1,,,"b'b"" I always compiled Bitcoin from git"," but now I get the following error (I\'m using libtool 2.4.2): CXXLD  CXX  -bitcoin.o  OBJCXXLD -qtlibtool: link: unable to infer tagged configurationlibtool: link: specify a tag with ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,1,2014-09-28 04:00:04,620.02,,1,,"b""b' @theuni Can you have a look here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,2,2014-09-28 04:00:04,618.95,,1,,"b'b\' what OS and toolchain? Could you please redo the above using ""make V=1"" and paste that", so we can see what\\\'s going on?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,3,2014-09-28 04:00:04,1.53,1,,,"b'b"" ah wait I see", it\'s probably that pesky OBJCXXLD that @luke-jr mentioned a while ago. I\'ll track down the cause of that and fix it," and I\'m guessing it\'ll fix your problem as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,4,2014-09-28 04:00:04,19.8,,1,,"b'b"" @DanielFragaBR Would you mind seeing if this fixes your build problem? I\'m not sure what the cause is just yet"," but I believe that should cure the symptom.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,5,2014-09-28 04:00:04,76.95,,,1,"b""b' @theuni yes"," this patch solved the problem! Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,closed,2014-09-30 02:17:19,1337.25,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,6,2014-09-28 04:00:04,6.85,,,1,"b'b"" @DanielFragaBR Please reopen. I\'d like to track down why this is happening and push a real fix (or at least this work-around) before we call this closed. Thanks for reporting and testing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,reopened,2014-09-30 03:15:08,57.82,2,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,7,2014-09-28 04:00:04,56.52,,,1,"b""b' @theuni thanks. If you need more testing"," just ask.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,8,2014-09-28 04:00:04,827.08,,1,,"b'b"" @DanielFragaBR Thanks. Could you please pastebin your ? I suspect that we\'re picking up something from the environment. I\'m assuming you\'re on osx"," btw? Do you happen to dev on other projects that require env changes?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,9,2014-09-28 04:00:04,47.48,,,1,"b'b"" @theuni you\'re right! I messed with the environment with the CXX flag the wrong way. Now I fixed that. So I\'m closing this entry. Thank you very much!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,closed,2014-09-30 17:55:15,880.12,2,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,10,2014-09-28 04:00:04,132.07,,,1,"b""b' Great"," now we know. Thanks for confirming.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,11,2014-09-28 04:00:04,1266.75,,1,,"b'b"" @DanielFragaBR Could you elaborate on what you\'d done to your environment to cause this error? I\'m seeing the same thing on another machine.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,12,2014-09-28 04:00:04,1307.28,,1,,"b'b"" @fanquake I put some flags in CXX environment variable which shouldn\'t be there. Maybe it\'s not your case. Now I just use the correct LDFLAGS and CPPFLAGS. What flags are you setting?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,13,2014-09-28 04:00:04,26.38,,1,,"b'b"" @fanquake It\'ll be CC or CXX that\'s set. That causes automake\'s tag deduction to fail for OBJCXXLD. Since several people are seeing this now"," I suppose it\'s best to go ahead and push the work-around while we track down the real culprit. Could you please verify that url  works for you as well?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,14,2014-09-28 04:00:04,1018.63,,,1,"b""b' @theuni That fix works fine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,15,2014-09-28 04:00:04,988.22,,1,,"b""b' ~/$ make -j4 -qt  OBJCXXLD -qtlibtool: link: unable to infer tagged configurationlibtool: link: specify a tag with '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,4993,closed,-,-,-,2,9,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,opened,2014-10-02 03:16:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,title,2014-10-02 03:16:54,00:00,,,1,"b""b' Reindex initiated by Bitcoin-Qt leaves 293 byte zero-padded gap in blk00000.dat'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,body,2014-10-02 03:16:54,00:00,1,,,"b'b\' After setting up a bitcoind server I found that the file """" had a293 byte zero-padded gap immediately flowing the genesis block. This is not aproblem for bitcoind since the LoadExternalBlockFile() routine in  hasa mechanism to scan for the message start sequence if blocks are notcontiguous. It is a problem for other programs (e.g. blockparser) which assumethat ""nSize"" points to the next block. I apologize in advance if this is already a knownissue. The issue can be demonstrated as follows:1) bitcoind and bitcoin-qt version v0.9.2.1 on Linux", disconnected from internet.2) create empty ~/.bitcoin directory and cd to it.3) bitcoind &   exits because no  and default arg -server=1 and no rpc setup4) create  with these entries:   reindex=0   txindex=1   server=05) bitcoin-qt &  Click OK in popup about rebuilding block database  File->exit6) copy beginning ~1kB of  to ~/.bitcoin7) bitcoin-qt &   File->exit~/ should contain this:2014-09-30 03:52:40 LoadBlockIndexDB(): last block file = 02014-09-30 03:52:40 LoadBlockIndexDB(): last block file info: CBlockFileInfo(blocks=2, size=586, heights=0...0, time=2009-01-03...2009-01-03)2014-09-30 03:52:40 LoadBlockIndexDB(): transaction index enabled $ od -A x -t x1  | head -40000000 f9 be b4 d9 1d 01 00 00 01 00 00 00 00 00 00 00000010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00000020 00 00 00 00 00 00 00 00 00 00 00 00 3b a3 ed fd000030 7a 7b 12 b2 7a c7 2c 3e 67 76 8f 61 7f c8 1b c3000040 88 8a 51 32 3a 9f b8 aa 4b 1e 5e 4a 29 ab 5f 49000050 ff ff 00 1d 1d ac 2b 7c 01 01 00 00 00 01 00 00000060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00000070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff000080 ff ff 4d 04 ff ff 00 1d 01 04 45 54 68 65 20 54000090 69 6d 65 73 20 30 33 2f 4a 61 6e 2f 32 30 30 390000a0 20 43 68 61 6e 63 65 6c 6c 6f 72 20 6f 6e 20 620000b0 72 69 6e 6b 20 6f 66 20 73 65 63 6f 6e 64 20 620000c0 61 69 6c 6f 75 74 20 66 6f 72 20 62 61 6e 6b 730000d0 ff ff ff ff 01 00 f2 05 2a 01 00 00 00 43 41 040000e0 67 8a fd b0 fe 55 48 27 19 67 f1 a6 71 30 b7 100000f0 5c d6 a8 28 e0 39 09 a6 79 62 e0 ea 1f 61 de b6000100 49 f6 bc 3f 4c ef 38 c4 f3 55 04 e5 1e c1 12 de000110 5c 38 4d f7 ba 0b 8d 57 8a 4c 70 2b 6b f1 1d 5f000120 ac 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00000130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00*000240 00 00 00 00 00 00 00 00 00 00 f9 be b4 d9 d7 00000250 00 00 01 00 00 00 6f e2 8c 0a b6 f1 b3 72 c1 a6000260 a2 46 ae 63 f7 4f 93 1e 83 65 e1 5a 08 9c 68 d6000270 19 00 00 00 00 00 98 20 51 fd 1e 4b a7 44 bb be000280 68 0e 1f ee 14 67 7b a1 a3 c3 54 0b f7 b1 cd b6000290 06 e8 57 23 3e 0e 61 bc 66 49 ff ff 00 1d 01 e30002a0 62 99 01 01 00 00 00 01 00 00 00 00 00 00 00 000002b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 000002c0 00 00 00 00 00 00 00 00 ff ff ff ff 07 04 ff ff0002d0 00 1d 01 04 ff ff ff ff 01 00 f2 05 2a 01 00 000002e0 00 43 41 04 96 b5 38 e8 53 51 9c 72 6a 2c 91 e60002f0 1e c1 16 00 ae 13 90 81 3a 62 7c 66 fb 8b e7 94000300 7b e6 3c 52 da 75 89 37 95 15 d4 e0 a6 04 f8 14000310 17 81 e6 22 94 72 11 66 bf 62 1e 73 a8 2c bf 23000320 42 c8 58 ee ac 00 00 00 00 f9 be b4 d9 d7 00 00Note: zero-padding from 293(0x125) to 585(0x249) \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,1,2014-10-02 03:16:54,93.15,,1,,"b'b"" This is known behavior", there\'s nothing really saying that a block can\'t have huge gaps filled with Shania Twain," the software is designed to handle that if necessary. I\'d call this a block parser bug rather than a Bitcoin Core one. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,2,2014-10-02 03:16:54,51.47,,1,,"b""b' As the person who implemented the current block file storage logic"," Iconsider this a bug.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,3,2014-10-02 03:16:54,26.82,,1,,"b""b' Even if it was a bug that caused some zero bytes to be written to the file", so what? The parser is going to have to be altered to handle non-contiguous files anyway," I hardly think that every single node is going to rewrite their blocks on disk to get rid of 293 bytes. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,4,2014-10-02 03:16:54,3.28,,1,,"b'b"" Nothing needs to be rewritten. It is working is a fully compatible way. But if this report is correct"," the code is not doing what it is intended todo. That\'s a bug.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,5,2014-10-02 03:16:54,1117.4,,,1,"b""b' The two application programs that I use", which both failed to load my blk00000.datfile, have now been fixed. I think that bitcoind functionality takes precedence here,so I do not expect to see any changes to the bitcoind code. However, to avoid thisturning into a recurring issue," could someone please add a few comment linesat the start of :LoadExternalBlockFile() to inform future code sleuths thatthis is the expected behavior.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,6,2014-10-02 03:16:54,821.82,,,1,"b""b' I got a third application that failed"," so I decided it was just easier to fix the block file.dd bs=1 if=blk00000.dat of= count=293dd bs=586 if=blk00000.dat of= skip=1cat  >blk00000.dat'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,closed,2014-10-19 14:30:50,673.93,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,7,2014-10-02 03:16:54,293.37,,1,,"b""b' @trevelocity Please do not close this bug if you have fixed it yourself", it is a still a bug in Bitcoin Core," even if a low priority one with the workaround you gave.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,reopened,2014-10-27 20:45:41,374.85,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5028,open,-,-,-,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,opened,2014-10-07 18:22:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,title,2014-10-07 18:22:30,00:00,,1,,"b""b' Add Paper Wallet Generation in Bitcoin Core'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,body,2014-10-07 18:22:30,00:00,,1,,"b'b"" Ported by @andymeows and @whitj00 from @andymeows\' dogecoin implementation. Tested on Mac", Windows, and Linux with qt4 and qt5 Includes warning if computer is connected to Internet. While not optimal," it is better than using a website like  and anything that makes cold storage easier for the average user is good IMO. This is likely controversial and I am open to discussion on how to improve this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,closed,2014-10-07 18:48:20,25.83,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,1,2014-10-07 18:22:30,26.02,,1,,"b'b"" I\'ll fix the missing image ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,2,2014-10-07 18:22:30,57.32,,,1,"b""b' NACK",  we add this, it should be a real paper wallet, not a single ECDSA private key. It would also be good to have paper wallet support merged before we start making them," too...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,3,2014-10-07 18:22:30,139.28,,1,,"b'b"" I\'m assuming you mean deterministic paper wallets?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,reopened,2014-10-07 23:59:03,310.72,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,4,2014-10-07 18:22:30,117.57,,1,,"b'b"" @whitj00 I\'m not aware of any other way to make actual paper wallets. A single  is not a wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,5,2014-10-07 18:22:30,3.28,1,,,"b'b"" @luke-jr ok", makes sense.  I think I did see HD paper wallets before, but thats useless in bitcoin core until we implement it. What is the objection to including it?  I understand that there are more optimal ways to do it, but until those are practical," wouldn\'t any feature that makes it easier to secure their coins be beneficial.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,6,2014-10-07 18:22:30,3.25,,1,,"b'b"" Users are not supposed to ever work with individual keys", and there is no safe way for them to do so. Even if one foolishly ignores the [many issues with address reuse]url  micromanaging individual keys requires a strong understanding of the Bitcoin system. For example," I wouldn\'t even trust myself to  manage individual keys.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,7,2014-10-07 18:22:30,411.23,,,1,"b'b"" I do like the concept. But in any case", due to its insistence on being synced to the network, Bitcoin Core is not a good  wallet. Its utility for something like paper wallets is very limited," as any paper wallet you create will already be potentially \'spoiled\' by being connected to the internet. Have you looked at armory?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,8,2014-10-07 18:22:30,1.45,,1,,"b""b' Maybe we should turn this into a separate key generation + printing utility? An external utility that you can run on a non-internet-connected PC. This idea has been brought up before"," but now that we have an implementation this is easier to do.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,9,2014-10-07 18:22:30,574.35,,,1,"b'b"" An external one exists", bitaddress, and breainwallet.  The current main issue with paper wallets in my opinion is that they\'re to complicated to do safely for the average user.  They end up using an online service, that has ma vulnerabilities. This is why it should be built into core, and not armory, which is aimed at advanced users.  This WArns you that you should disconnect from the internet," and this works (and is preferred) on a offline PC""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,10,2014-10-07 18:22:30,74.65,,1,,"b'b"" Don\'t forget that Bitcoin Core is _also_ aimed at advanced users. Average users would better use multibit"," or electrum.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,11,2014-10-07 18:22:30,354.95,,1,,"b""b' paper wallet may require BIP or a standard to discussed", such as format, storage, etc.," as there are many parties take care of this standard.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,12,2014-10-07 18:22:30,10.87,,1,,"b""b' @imharrywu Already exists"," see url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,13,2014-10-07 18:22:30,62.0,,,1,"b'b"" @luke-jr", the issue is that bitcoin core doesn\'t support mnemonics.  A similar feature like this would be great in electrum, but until bitcoin core does," it doesn\'t make sense to use bip-39""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,14,2014-10-07 18:22:30,1.8,,1,,"b'b"" @laanwj agreed", but bitcoin core is not exclusively used by advanced users. Many merchants I\'ve spent BTC at use bitcoin core, because of issues with multi bit or another spv wallet," or because they need a full chain for whatever reason. I\'ve never seen a merchant using armory (i\'m sure theres a few though) Would it be preferable to make this feature only accessible offline?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,15,2014-10-07 18:22:30,24.17,,1,,"b'b"" @whitj00 Yes"," that was my original point: it doesn\'t make sense to have this in any form in Bitcoin Core right now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,16,2014-10-07 18:22:30,376.07,,1,,"b'b"" @whitj00 But it doesn\'t really make sense to use Bitcoin Core offline. It\'s a full node", it needs to be online. You\'d never run it on a computer that is not connected to the internet. That\'s why I suggested a separate tool. It could still be packaged and released as part of Bitcoin Core," but it would be a separate executable that has no network connectivity at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,17,2014-10-07 18:22:30,656.18,,,1,"b""b' @laanwj it would be interesting to see what percentage of people use bitcoinpaperwallet online.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,18,2014-10-07 18:22:30,1094.12,,1,,"b""b' I also think this should not go into bitcoin-core. A standalone paper wallet generation app would def. make much more sense. It makes no sense to generate a offline paper wallet within a app that  as a full node. Should be closed IMO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,closed,2015-03-18 13:52:55,833.87,1,14,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,19,2014-10-07 18:22:30,62.32,,1,,"b'b"" Exactly. It\'s useful functionality"," but just doesn\'t fit in the goal of this software.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5058,closed,-,-,-,1,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,opened,2014-10-18 00:26:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,title,2014-10-18 00:26:54,00:00,,1,,"b""b' Initial Block Download optimisations'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,body,2014-10-18 00:26:54,00:00,,1,,"b'b"" I\'ve been developing these improvements in parallel with headersfirst8. It\'s now been optimised for use with early to late block chain so adapts to the block sizes and also the bandwidth of each node to make optimal use of the connections available. The sipa disconnect code has been disabled as it usually disconnected the most important node (with my changes)", but it will still display when the logic would have executed. Please do test and compare download times with before this test and I\'m sure you\'ll see improvements.  It\'s not yet optimised for use with earlier blocks (which were small enough to download in batches of 500 each)," but that will be coming shortly. Raising the pull request so that people can view and comment on some of the changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,1,2014-10-18 00:26:54,482.43,,1,,"b'b\' There are probably some commits in here that can be removed. I\\\'ve kept it fairly granular so that some of the changes are easily optional. The big change is the commit called ""Track partial download progress...""", and I\\\'ve recently updated this so that it now changes the window size per node based upon the bandwidth each note is achieving. @laanwj Is it worth tagging members of the core development team in a comment to draw their attention to this?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,2,2014-10-18 00:26:54,141.6,1,,,b'b\' @rebroad Possibly. But it could be that this list of change is too intimidating for one pull," and it may be better to trickle the changes instead of having one umbrella ""Headersfirst8 improvements"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,3,2014-10-18 00:26:54,939.1,,1,,"b""b' _tumbleweed_'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,4,2014-10-18 00:26:54,1255.93,,1,,"b'b"" I don\'t know what travis is talking about it seems to be running an old version that isn\'t present in the current branch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,closed,2014-11-12 11:44:39,677.75,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,reopened,2014-11-12 11:47:55,3.27,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,5,2014-10-18 00:26:54,601.05,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,closed,2015-07-10 13:08:08,80.22,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5099,closed,-,-,-,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,opened,2014-10-18 00:37:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,title,2014-10-18 00:37:46,00:00,,1,,"b""b' MOVEONLY: Split Transaction and Block from core'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,body,2014-10-18 00:37:46,00:00,,1,,"b'b"" The main goal is to separate minimal core dependencies for . CFeeRate shouldn\'t be there"," but that won\'t be move only. This should help with #4692 and it\'s related to #4981 among other PRs""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,1,2014-10-18 00:37:46,47.43,,1,,"b'b"" Missing some files. Any reason not to go ahead and move  while you\'re at it"," as discussed on IRC?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,2,2014-10-18 00:37:46,57.72,,1,,"b'b"" Ok", I\'ll do a more complete PR," closing for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,closed,2014-10-18 02:22:55,105.15,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,3,2014-10-18 00:37:46,11.07,1,,,"b'b"" Can you move CTxOutCompressor either along with CTransaction (it doesn\'t depend on anything block", right?)," or directly to coins.h.Can you move the remaining part to a ? coins.h and  is a bit strange.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,4,2014-10-18 00:37:46,90.27,,1,,"b'b"" 1) I don\'t want to put compressor in  since  doesn\'t need it.2) undotx depends on txcompressor but not on the rest of coins.o That means txcompressor goes on its own (maybe take  with it?) 3) I don\'t like to have compressor in chain4) I don\'t want to be responsible for putting more stuff in main Does that mean txundo goes on its own as well?I think so"," but please debate 3 and 4. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,5,2014-10-18 00:37:46,9.33,,1,,"b'b"" logically the compressor stuff is part of coins-its the fancy", locally specific highly compressed seralization used only in the utxo set representation. Is there any reason it can\'t just go into ? Undo seem logically best placed with chain.\\\\*  though it\'s a bit different since undo data (like the compressor) is only locally significant," most of chain.\\\\* is actually locally specific storage stuff for the chain in any case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,6,2014-10-18 00:37:46,1.92,,1,,"b""b' Never mind"," coins.o also depends on CTxInUndo so they both belong in their own files.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,7,2014-10-18 00:37:46,790.63,,1,,"b'b"" CChain and CTxUndo don\'t depend on each other"," why should they go together?About moving it to  am of the opinion that main should bedismembered in many small pieces and this wouldn\'t help to move in thatdirection.I\'m generally in favor of many small files over a few big ones. It is morereadable to me and it\'s also more flexible for later refactors.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,8,2014-10-18 00:37:46,8.73,,1,,"b""b' Oh"," and coins depends on CTxInUndo but not in chain or main.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,reopened,2014-10-18 17:36:51,913.93,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,9,2014-10-18 00:37:46,36.62,,1,,"b'b"" Mhmm"," blockundo can get out of main too.Should txundo and blockundo go together in undo.h or each separated (ie undotx and undoblock) so that coins doesn\'t have to include undoblock ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,10,2014-10-18 00:37:46,6.93,,,1,"b'b"" So undo data (CTxInUndo", CTxUndo, CBlockUndo) is is not directly depended on by chain, but CBlockIndex (in chain) contains references to where undo data is on disk, which makes it sort-of related. I\'m fine with a separate file too. To avoid coins from depending on undo (or chain)," CCoins::Spend could become a method (or function) on CTxInUndo. I think that method doesn\'t logically belong in coins anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,11,2014-10-18 00:37:46,17.07,,1,,"b'b"" Ok"," so here\'s the plan:1) Decouple coins from undo as suggested by @sipa2) Move txundo to undo3) Move TxCompressor and  to coins4) Move blockundo to undo  I also want to decouple txout from feerate and move it out of  (to  ?) but I\'ll leave that for a later PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,12,2014-10-18 00:37:46,814.22,,1,,"b""b' Can you move CBlockUndo to undo as well?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,13,2014-10-18 00:37:46,161.13,,,1,"b""b' Suggestion: After this is confirmed to be move-only etc. create a last pull"," which does the clang-formatting!?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,14,2014-10-18 00:37:46,917.57,,1,,"b'b"" I ended up starting with moving  CFeeRate and the Amount constants to amount.o so I had to rebase and I included the nits. I added a last clang commit as suggested.CBlockUndo depends on CDiskBlockPos", so I\'ll leave that for another PR.There\'s something that is not purely move-only," so someone reviewing the move-only should notice.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,15,2014-10-18 00:37:46,46.03,,,1,"b'b"" An alternative would be moving the undo stuff to chain.h (it\'s about auxiliary data about chain validation). I prefer to have all undo stuff together :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,16,2014-10-18 00:37:46,880.87,,1,,"b'b"" Agree with the changes in general. Might be easier to drop the Amount change from here and do that as a separate pull. I\'ll verify the code movement  there are a few more ACKs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,17,2014-10-18 00:37:46,126.38,,1,,"b""b' I think the Amount constants belong in amount.Doing the Amount change here makes the PR more readable IMO"," since otherwise you would move CFeeRate to  only to move it later to amount.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,18,2014-10-18 00:37:46,14.97,,1,,"b""b' Fixed alphabetial nits. Since nobody had verified the moveonly and clang changes yet I just rebased instead of piling up nit commits. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,19,2014-10-18 00:37:46,196.5,,,1,"b'b"" Verified move-only with one exception: That seems fine to me"," any reason it wasn\'t done already?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,20,2014-10-18 00:37:46,1.0,,1,,"b'b"" clang changes verified as well. Note that some objects aren\'t exactly equal because assert line-numbers changed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,21,2014-10-18 00:37:46,39.2,,,1,"b""b' Great", thanks for verifying. Yes, those two int64_t -Re: misplaced squash? Probably, I rebased this too many times I guess.Sadly I have to rebase and the verification becomes outdated," but I can fix the CFeeRate::ToString() leak.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,22,2014-10-18 00:37:46,2.75,,1,,"b'b"" Go ahead"," I\'ve got your branch cached. I can just verify that it remains identical to your new push.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,23,2014-10-18 00:37:46,16.5,1,,,"b""b' Rebased solving the CFeeRate::ToString() mistake.Ready for verification again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,24,2014-10-18 00:37:46,8.87,,1,,"b""b' Heh", rebasing on top of master kinda defeats the purpose :p. I re-did the rebase locally though, and the diff is clean. Verified move-only. Edit: spoke too soon," looks like the rebase on master caused a build problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,25,2014-10-18 00:37:46,31.93,,,1,"b""b' I needed to rebase on top of master due to some minor include conflicts.Then I needed to fix some missing includes: git is smart but not enough to figure includes by itself.The latest couple of commits should solve it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,26,2014-10-18 00:37:46,214.1,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,27,2014-10-18 00:37:46,463.33,1,,,"b'b"" The clang fix included here makes the result much harder to review. Can you remove that? We\'ll do the clang fixes all at once before release", without mixing it with other changes. Sorry," @Diapolo we\'ll get to it!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,28,2014-10-18 00:37:46,3.18,,1,,"b'b"" Also", feel free to rebase & squash. As long as all commits are move-only," it\'s easy to check with git diff merge~::dest.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,29,2014-10-18 00:37:46,43.65,,1,,"b'b"" Left the clang change out. Not sure if it\'s worth it to make a separate PR though. Aren\'t we applying clang to everything just before 0.10 ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,30,2014-10-18 00:37:46,2.42,,1,,"b'b"" @jtimon yes", that\'s what I meant let\'s not bother with clang fixes now," as we\'ll do it all at once right before the 0.10 release.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,31,2014-10-18 00:37:46,8.23,,1,,"b""b' ACK verified move-only. Do you plan on moving CBlockUndo to undo.h as well (after turning its  methods into  functions) ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,32,2014-10-18 00:37:46,3.52,,1,,"b""b' sipa Since too many of my open PRs depend this I plan to do that in a later PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,33,2014-10-18 00:37:46,0.72,,,1,"b""b' Sure"," a later PR sounds good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,34,2014-10-18 00:37:46,126.97,,1,,"b""b' Done"," CBlockUndo is moved to undo.h as part of #5111.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,35,2014-10-18 00:37:46,462.18,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,36,2014-10-18 00:37:46,557.47,,1,,"b""b' @laanwj comments?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,37,2014-10-18 00:37:46,228.07,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,closed,2014-10-28 12:27:59,1131.13,3,29,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,38,2014-10-18 00:37:46,808.25,1,,,"b'b\'   I think it\\\'s a bad practice to name  simply ""core"" (this breaks automatic coredumps on many systems) can we call it something else?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,39,2014-10-18 00:37:46,811.25,,1,,"b""b' On Unix-like systems core is a semi-magical file name since coredumps get written to it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,40,2014-10-18 00:37:46,1369.2,1,,,"b'b\' I suspect this wouldn\\\'t be a problem if we didn\\\'t had executables at /src but...What about ""datatypes""",core_structs,"serializable"" or something along these lines?We should have bikeshed before but we need to do it now as well...\''
bitcoin	5100	closed	41	luke-jr	2014-10-18 00:37:46	1393.17		+1		b""b' datatypes +1'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5100,closed,-,-,-,5,31,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,opened,2014-10-21 07:32:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,title,2014-10-21 07:32:26,00:00,,1,,"b""b' Policy: Move CTxOut::IsDust() to policy.o'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,body,2014-10-21 07:32:26,00:00,,1,,"b""b' Built on top of #5100.Decouples CTxOut from CFeeRate.Related to #5071 "," now IsDust can become a method of CNodePolicy.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,1,2014-10-21 07:32:26,359.4,,1,,"b""b' Rebased to make it more readable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,2,2014-10-21 07:32:26,125.27,,1,,"b'b"" If you\'re moving it"," can you move it to main instead? It really doesn\'t belong in core..""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,3,2014-10-21 07:32:26,1251.65,,1,,"b""b' Moved it to policy.o"," where I think it belongs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,4,2014-10-21 07:32:26,66.22,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,5,2014-10-21 07:32:26,1269.57,,1,,"b""b' We have to take into account that this will conflict with #5071.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,6,2014-10-21 07:32:26,413.1,,1,,"b""b' Needed rebase (was including  instead of ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,7,2014-10-21 07:32:26,994.37,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,8,2014-10-21 07:32:26,240.7,,1,,"b""b' Added a couple of potential improvements to comment on (moving global minRelayTxFee from main to policy and hiding it for IsDust() calls).Also it needed a small include rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,9,2014-10-21 07:32:26,848.28,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,10,2014-10-21 07:32:26,683.25,1,,,"b""b' Sorry for touching it again"," moved to 2 commits instead of 3. Now it shares the first commit with #5180.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,11,2014-10-21 07:32:26,1415.07,,1,,"b""b' Untested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,12,2014-10-21 07:32:26,1342.1,1,,,"b'b"" I am very sorry for delaying this again"," but I\'m closing until it\'s clear how the first step for policy should be. Something I invite reviewers to discuss at #5595 where I\'ve placed some examples. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,closed,2015-01-21 13:41:24,368.97,2,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,reopened,2015-07-12 14:20:39,39.25,2,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,13,2014-10-21 07:32:26,42.28,,1,,"b'b"" Reopened. I was waiting for ~~#5595~~ #6068"," but no real reason to keep waiting.I\'m also moving CFeeRate out of consensus to  (previously was necessary for ).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,14,2014-10-21 07:32:26,253.02,,1,,"b'b"" Needs rebase and I\'m thinking about moving the functions to the fee estimator () instead of "," so closing for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,closed,2015-07-20 18:36:42,256.05,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5114,closed,-,-,-,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,opened,2014-10-24 19:06:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,title,2014-10-24 19:06:56,00:00,,1,,"b""b' Headers-first sync never gets going'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,body,2014-10-24 19:06:56,00:00,1,,,"b'b"" I ran into this writing a regression test; it is a weird edge case with the headers-first logic. The setup: Create a 200-block blockchain with blocks that have \'old\' timestamps  (see url  for code to do that) Start up two nodes", both of which read in that 200-block chain.Connect node_b to node_a.Have node_b generate a new block.  RESULT: node_a ignores it. Here\'s -debug=net output from node_b: and from node_a: I think the bug is because since both nodes just started up and read blocks from disk, pindexLastCommonBlock is NULL -it should be block 200. I think. Anyway, fFetch is never set to true on line 4422:  ... because  is NULL," and 0+144 < 201 Writing this all down... would it make sense to fix this by always fetching when  is NULL ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,1,2014-10-24 19:06:56,25.0,,1,,"b""b' Possible patch that fixes the problem for me"," not sure if it will cause other problems:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,2,2014-10-24 19:06:56,7.07,,1,,"b'b"" That patch will just make you download from all peers at startup (until you have something). That won\'t hurt", but it\'s not really the intended effect. What it\'s trying to do is only fetch from non-outbound if we\'re synced up to less than 144 blocks (a day) from the best known headers synced already. The problem is really just the lack of outbound connections. If there are no such connections," we should probably just fetch from all peers.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,3,2014-10-24 19:06:56,470.65,,1,,b'b\' Relatedly," the ""()->GetBlockTime() This causes immediate node divergence", as headers-first sync never gets going either. The patch corrects this, but I wonder whether the conditional logic needs revisiting too.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,4,2014-10-24 19:06:56,737.9,1,,,"b'b"" @sipa : is there a higher-level description somewhere of how peers figure out what chains they have in common? I\'m having trouble following the logic in . Also", I get the feeling there might have been some premature optimization here; in particular, just looking at the data structures I expected that CNodeState->pindexLastCommonBlock should be non-null not too long after a peer has completed the  sequence, but I guess that is not true? Seems to me upon connection peers should always tell each other what their best blocks are," even if they are at the same height.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,5,2014-10-24 19:06:56,353.73,,1,,"b""b' I ran into this again today writing a regression test.  Here is a distilled test case that will fail: Reversing the connection direction in the last and the test succeeds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,6,2014-10-24 19:06:56,87.5,,,1,b'b\' I went through the logic of this. When the connection direction is reversed," node3 is an outbound connection of node0 and is therefore a ""nice"" peer (fPreferredDownload is true).  But in the connection direction of your test case", node3 is inbound and so its not preferred and since node0 has another preferredDownload peer (it made an outbound connection to node1) it does not feel the need to sync headers with node3.  See at line 4520.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,7,2014-10-24 19:06:56,857.4,,1,,"b""b' ~~Should be fixed by #5157~~ (turns out to be not the case)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,closed,2015-01-08 13:26:11,1099.25,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,reopened,2015-01-08 14:59:46,93.58,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,8,2014-10-24 19:06:56,125.82,,1,,"b'b"" As discussed on irc", @gavinandresen\'s test in his Nov 14 comment still fails.  The problem is that if an inbound peer is multiple blocks ahead of you and you have other outbound peers, the download logic tries to download the intermediate blocks from one of the outbound peers.  If the outbound peers haven\'t announced the block, then you\'ll never request them. That\'s true even if an inbound peer continued to announce blocks that continue to build on its chain, you wouldn\'t ever advance your tip to catch up, because you\'ll be held up by not requesting the intermediate blocks," since you have no one to request them of.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,9,2014-10-24 19:06:56,1041.43,,1,,"b""b' Should be fixed by #5662'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,closed,2015-06-01 08:53:27,1073.68,2,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5138,closed,-,-,-,2,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,opened,2014-10-30 22:33:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,title,2014-10-30 22:33:55,00:00,,1,,"b""b' WIP: Policy: Separate standard and testing policies'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,body,2014-10-30 22:33:55,00:00,,1,,b'b\' EDIT: This prepares AcceptToMemoryPool to be decoupled from Params() and creates a -policy command-line option to select the standard or test policy independently of the chain mode (ie main, testnet3, regtest). It\\\'s based on #6068.@petertodd already acked the concept here: url  OLD:Instead of being based on #5071 as initially, it doesn\\\'t go as far as that PR. A rebased version of #5071 on top of this PR can be found here: url Instead of being based on #5071 it is based on #5521 (plus one doubt-commit). Please let\\\'s not delay policy.o even if it\\\'s only with  .Later proposals to expand policy.o become more readable once the first step has been walked.Even better," later proposed changes to main.o may become proposed changes to policy.o!!In my opinion the biggest development bottleneck is reviewing changes to main.o. /EDITIt\\\'s based on #5071 and eliminates Params().RequireStandard() by separating two policies for the 4 networks accessible with Params() as discussed in that PR.It also includes a couple of ""squashme"" commits that solve my complains on #5071 in case you @luke-jr want to take them.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,1,2014-10-30 22:33:55,15.82,,1,,"b""b' Since I touch chainparams"," my version needed rebase...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,2,2014-10-30 22:33:55,44.08,,,1,"b""b' Disagree with per-network policies and global Policy() function; the former overcomplicates modifications for no real benefit", and the latter would make multiple policies more difficult to add in circumstances where they would actually be desirable (ie," within the same running instance).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,3,2014-10-30 22:33:55,1277.07,1,,,b'b\' It\\\'s not a per-network policy, please, read the code. It\\\'s quite the opposite actually: it\\\'s decoupling policies from networks.Previously the user can only select 4 {policy, network} pairs: {standard, mainnet}, {test, testnet}, {test, regtest}, {standard, unitest}With 2 separate policy classes the available combinations are 8: {standard, test} x {mainnet, testnet, regtest, unitest}.It also simplifies modifications. A pointer to an abstract class is by all means more flexible than a reference to a an extern object when it comes to support multiple policies.With Policy::Factory() you can make as many of them as you want, as shown in the example.If you want to avoid managing memory manually, Policy::Pool() can be used instead.Of course, its interface can be simplified to Policy::FactoryPool() (hiding CPolicyPool class).If we\\\'re not going to have several policies with different states for the same policy type, Policy::Simple() is enough..You can even hide CNodePolicy, exposing the abstract class is enough.In fact, what is the point in exposing the abstract class if you\\\'re not going to use polymorphism?  I will of course clean this up, but I hope this can convince you that CNodePolicy::fRequireStandardTx," exposing CNodePolicy and the extern CNodePolicy in main are mistakes.  I\\\'m indifferent to ""coins: GetTxFees method"" because I don\\\'t see it as specially useful"," but if the new method is not even going to be used (as in ""SQUASHME: actually use GetTxFees method"") I would say NACK. It seems completely orthogonal to the rest of the PR anyway.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,4,2014-10-30 22:33:55,279.18,,1,,"b""b' Updated initial description.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,5,2014-10-30 22:33:55,840.65,,1,,"b""b' Updated code and description again without IsDust() this time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,6,2014-10-30 22:33:55,452.5,,1,,"b""b' Rebased after #5521 has been merged for easier review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,7,2014-10-30 22:33:55,77.72,,1,,"b""b' Closing in favor of #5652 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,closed,2015-01-21 11:31:22,777.45,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,reopened,2015-05-13 23:12:18,700.93,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,closed,2015-05-13 23:21:25,9.12,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,reopened,2015-06-06 18:43:02,1161.62,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,8,2014-10-30 22:33:55,184.03,,1,,"b'b\' Updated after #6068 has been updated. Now the addition of the -policy option is left for the end as an optinal ""squasheable"" commit.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,9,2014-10-30 22:33:55,966.97,,1,,"b""b' Closing until some version of #6068 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,closed,2015-06-25 19:31:58,48.93,1,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,reopened,2015-06-26 16:07:52,1235.9,1,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,closed,2015-06-26 16:35:56,28.07,1,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,10,2014-10-30 22:33:55,1275.17,,1,,"b""b' Updated opening description after rebasing and re-closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,reopened,2015-07-06 22:05:58,330.03,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,11,2014-10-30 22:33:55,1187.53,,1,,"b'b"" Updated without deprecating anything.Now -policy overwrites the chain selection but -acceptnonstdtxn overwrites -policy (at least for policies standard and test", other policies may not even have a -acceptnonstdtxn option).I don\'t care about keeping -acceptnonstdtxn even if you can just use -policy=test instead of -acceptnonstdtxn=1 (so keeping it is redundant)," to me the important thing is decoupling policy from Params() and having a factory to make the creation maintenance of custom policies easier.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,12,2014-10-30 22:33:55,1417.87,,1,,"b'b"" I only reopened to show and discuss the updated version. But", again," closing until there\'s a CPolicy interface class.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,closed,2015-07-11 12:12:30,846.53,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5180,closed,-,-,-,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,opened,2014-11-04 13:17:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,title,2014-11-04 13:17:27,00:00,,1,,"b""b' [Qt] Payment request via Tor and BitPay a NO go'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,body,2014-11-04 13:17:27,00:00,1,,,b'b\' Most likely this is a no-issue for us, because we can\\\'t solve it, but perhaps we can brainstorm some ideas if we can extend error messages or reporting stuff to users. This is what happened," I tried to pay via BitPay using my Bitcoin Core wallet while connected to the network via Tor. After clicking the payment button on the BitPay site I got this warning displayed to me (this is from my ):  I know that BitPay is using Cloudflare as hoster or technical base and that Cloudflare is blocking Tor exit nodes! This is ""only"" annoying if visiting their site via browser", as they offer a (stupid) captcha. But it get\\\'s totally stupid if using payment requests on their site, because of not being able to proceed. I had to reconnect with Tor disabled to do my payment, which sucked! Any ideas, for how we could handle such a case or error situation from a UX view?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,1,2014-11-04 13:17:27,1195.93,1,,,"b'b"" Even with Bitpay you can get the  and pay manually. But it\'s kind of stupid that you can\'t get the payment request through tor. You should file an issue with them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,2,2014-11-04 13:17:27,137.22,,1,,"b""b' Done...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,3,2014-11-04 13:17:27,429.07,1,,,b'b\' It\\\'s the cause of CloudFlare IP-based reputation system," which blocks Tor because ""plenty of spam and malware uses Tor"""," so ""few bad actors on Tor have made using Tor difficult for legitimate users"". IMHO their system is fucked when using Tor and I told em exactly that. It seems they want to improve things", dunno how and when. @laanwj Anything for us that could be done for the users from us!?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,4,2014-11-04 13:17:27,145.77,,1,,b'b\' @Diapolo From a quick test," cloudflare returns a 403 in this case. I\\\'m not sure how common it is that we would see that. Maybe it\\\'s worth adding a msgbox with a hint that this may be the cause for the ""tor + 403"" case?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,5,2014-11-04 13:17:27,567.68,,1,,"b'b"" @theuni Right", I had the same idea, but I\'m unsure how to quickly tell that the set proxy is indeed a Tor proxy (and we not only set derived it from -proxy," which doesn\'t need to be a Tor one)...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,6,2014-11-04 13:17:27,117.2,,1,,"b'b"" @diapolo No need to be sure of that. You could add the hint either case"," the user will know if he\'s using Tor or not so whether to regard it or not.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,closed,2015-10-31 11:28:51,1331.4,3,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,7,2014-11-04 13:17:27,183.78,,1,,"b""b' I think this is still an issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,reopened,2017-12-31 08:36:18,1267.45,3,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,8,2014-11-04 13:17:27,1269.33,,1,,"b'b"" I\'ve heard reports that this is still an issue", and it became more serious now that bitpay has no way to manually specify  anymore. Even when not using tor," the cloudflare protection might trigger. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,9,2014-11-04 13:17:27,386.0,,,1,"b""b' I think the appropriate fix is to encourage more wallets to use tor to send payment requests and default to using tor if there is a tor proxy configured ourselves. Not being able to send a payment request over Tor is an issue the provider needs to fix"," not us.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,10,2014-11-04 13:17:27,431.03,1,,,"b'b\' They have started using ""Payment Protocol"" (BIP 70) recently", it\\\'s hurting my business, because my customers can\\\'t pay without a specific wallet, I\\\'ll be switching to another payment processor. BitPay is only getting worse and worse... \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,11,2014-11-04 13:17:27,453.55,,1,,"b""b' They have published an article today", explaining why this issue happens for TOR users, and a possible workaround," worth reading.  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,12,2014-11-04 13:17:27,247.67,,1,,"b""b' New problem: even payments using a supported wallet do not work anymore. Obviously has something to do with the cloudflare DDoS protection", wich prevents wallets from getting the payment details.  BitPay. I have now installed the wallet from bitpay itself, going to test if that works. And will also reccomend to the merchant to switch to another payment processor. This is a major setback to bitcoin as a whole," because many merchants used BitPay.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,13,2014-11-04 13:17:27,227.88,1,,,"b'b\' This is still an issue as of a few days ago. As pointed out above made worse by BitPay\\\'s BIP-70 enforcement.  One solution could be to if a request fails offer the user to redo the request without Tor (default ""No""). That\\\'s arguably better than telling users to turn Tor off. Perhaps the message could clarify that if they alrady use a non-Tor browser to place the order", there\\\'s probably not much downside, while at the same time reminding them that combining Tor with non-Tor is problematic in general.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5204,open,-,-,-,5,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,opened,2014-11-06 17:55:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,title,2014-11-06 17:55:31,00:00,,1,,"b""b' Chainparams: Generic chainparam selection with -chain='""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,body,2014-11-06 17:55:31,00:00,,1,,"b'b"" Continues #4804.Deprecate -testnet and -regtest in favor of -network=testnet and -network=regtest.When the old args are used a warning will be logged.The repetition of the invalid combination error string is also avoided.Additionally"," the chainparam networkID is removed since it\'s not used anymore (as it shouldn\'t).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,1,2014-11-06 17:55:31,53.2,1,,,"b""b' The value of removing -testnet and -regtest is unclear. Also"," please test and make sure bitcoin-cli and bitcoin-tx utilities remain consistent with bitcoind.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,2,2014-11-06 17:55:31,253.28,,1,,"b'b"" @jgarzik -testnet and -regtest still work", I\'m just logging a warning to discourage its use.I thought that we can remove them later.About the errors," I will catch them (like in the qt case) and return false for consistency.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,3,2014-11-06 17:55:31,642.35,,1,,"b""b' NACK on  -testnet and -regtest. Selecting the network is a primary function of the client"," so it can be a top-level option.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,4,2014-11-06 17:55:31,10.15,1,,,b'b\' I think it has been a misunderstanding. This PR doesn\\\'t disable -testnet and -regtest," just allows using -network instead. #5238 does disable them.Maybe I should replace ""is deprecated"" with ""will be deprecated"" (maybe that only makes sense after we have at least one more network [since unitest is unlikely to be selected on startup]).As said in #5238"," we cannot disable these flags without first providing the alternative and warning about the old flags for a while (maybe one release? next major release? 0.12? 1.0? 5 years from now? I don\\\'t know). This is just a first step which also makes it easier to add new networks.I\\\'ve always used ""deprecated"" as ""still enabled but with a recommended alternative"," will eventually disappear"""," like the java anotation @deprecated. It seems everyone else means ""disabled"," it used to be enabled in the past"". \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,5,2014-11-06 17:55:31,10.33,,,1,"b'b"" I just don\'t want them to be deprecated. People rely on them"," and they work fine. Forcing people to use another option seems like a boondoggle. I\'m not against _also_ adding but do we really plan on adding more networks in the future? What is the use-case here for Bitcoin?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,6,2014-11-06 17:55:31,6.07,1,,,b'b\' So are you against the warning messages?For bitcoin," right now it only adds the ability to select ""unittest"" which I admit may not be very useful.I don\\\'t know if we will add another mode anytime soon", but it makes it easier to do so in the future.It also simplifies things for people maintaining their own custom modes locally.Finally, If the final goal is to load chainparams from files I think this is a step in the right direction. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,7,2014-11-06 17:55:31,11.33,1,,,"b""b' Indeed"," remove the warning messages. It makes sense to keep those quick shortcut option to select regtest and testnet (but not for more obscure networks like unittest).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,8,2014-11-06 17:55:31,225.02,,,1,"b'b"" Warnings removed. I\'m fine just not adding new network shortcuts from now on.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,9,2014-11-06 17:55:31,1260.77,,1,,"b""b' Should I squash already?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,10,2014-11-06 17:55:31,278.5,,1,,"b""b' NACK on  -testnet and -regtest.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,11,2014-11-06 17:55:31,211.23,1,,,b'b\' @petertodd I told @jgarzik and then @Diapolo that this does not disable -testnet or -regtest.Then @laanwj complained about the warnings saying they are deprecated and I removed the warnings too. Please, read the code," or at least the thread.Maybe it is less clear due to all the ""squashme"" commits", I\\\'ll squash now...\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,12,2014-11-06 17:55:31,2.27,,1,,"b""b' Closing until #5598 gets merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,closed,2015-01-04 19:20:01,84.5,5,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,reopened,2015-01-07 23:43:36,263.58,5,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,13,2014-11-06 17:55:31,267.58,,1,,"b'b"" Reopened and rebased after #5598 has been merged. Now it\'s easier to review.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,14,2014-11-06 17:55:31,12.78,,1,,"b'b\' Rather that having the argument be ""-network"" why don\\\'t we rename it to ""-chain""? Network is a term that\\\'s already overloaded in multiple contexts. After all", we called it _chain_ params rather than network params. On 7 January 2015 18:48:08 GMT-05:00,"Jorge Tim\\xc3\\xb3n"" notifications@ wrote:\''
bitcoin	5229	closed	15	jtimon	2014-11-06 17:55:31	1054.05		+1		b'b\' Yes, I also thought about ""mode"" and ""chain"". Technically main and unittest are the same chain, since they share the same genesis block and all, so I decided for ""network"". But that\\\'s the only exception so probably ""chain"" still makes sense.Let\\\'s wait for other people to decide the color of the bike shed and I\\\'ll make the change to whatever is more popular.\''
bitcoin	5229	closed	16	jtimon	2014-11-06 17:55:31	1352.62		+1		b""b' Needed rebase so I squashed the nits.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,17,2014-11-06 17:55:31,1347.13,,1,,"b'b"" I\'m still not convinced that this is necessary. The reason for this change seems very academic;   versus  "," meh.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,18,2014-11-06 17:55:31,802.5,,1,,"b""b' @laanwj FWIW I always use testnet and regtest in my command-line tools.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,19,2014-11-06 17:55:31,314.3,,1,,"b""b' This also needs changes to the qt autostart functionality", #5793, which relies on passing through -regtest/-testnet at the moment. But at least that is a simplification," you could just pass with %s the current chain name.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,20,2014-11-06 17:55:31,846.03,,1,,"b""b' @laanwj could you give a line number link on where is that passed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,21,2014-11-06 17:55:31,35.37,1,,,b'b\' @petertodd as discussed those options will remain usable and not deprecated.Given that unittestnet has disappeared," it\\\'s really mainly an extensibility and altchain friendly patch so I understand if it remains in limbo until it is more directly useful for bitcoin.It won\\\'t be hard to maintain unmerged anyway. Whenever somebody thinks about adding a third harforktestnet or whatever this PR will be here to remind us that N is better than 2 + 1 (+ the implicit default ""main"" or ""bitcoin"").We can label it low priority or I can put an uppercased word at the beginning of the tittle to clarify that people shouldn\\\'t get very distracted by this unless there\\\'s nothing else to merge or the somebody reanimates it [by proposing an additional chainparam option in the command line].Paint it black and let it be"," or something.I can add a compilation error for a red cross to be shown.But keeping it open I remember to rebase it and ""police"" this part of the code in some sense.I can also just set an alarm to rebase it with the PR closed.Not a strong opinion besides ""if a chainparam option has to be added"," it must be generic"".Sorry for the wall of text.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,22,2014-11-06 17:55:31,1132.15,,1,,"b'b"" Updated with @laanwj \'s suggestion for replacing the enum with strings"," and added a new GetParamsHelpMessages() function. Note that it could be used in too but I wasn\'t sure if we wanted that depending on ui_interface.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,23,2014-11-06 17:55:31,1026.25,1,,,b'b\' Sorry," I forgot to deal with the qt autostart functionality as pointed out by@laanwj.It is done now. I also stopped using the bip70 nomenclature for the string constants since that changes ""testnet"" for just ""test""", which wouldn\\\'t have worked very well with the qt part.Is there any possibility to correct bip70 in that sense?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,24,2014-11-06 17:55:31,84.9,1,,,"b'b"" Oopss", thanks @laanwj ," fixed.Also adding a commit in which also uses GetParamsHelpMessages() [and also ui_interface].Thoughts on that commit? @theuni is there an specific reason for bitcoin-cli not to use ui_interface that I\'m missing?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,25,2014-11-06 17:55:31,6.52,,1,,"b'b"" I mean"," the last commit would be kind of undoing url  That\'s why I\'m assuming people may not lie the idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,26,2014-11-06 17:55:31,151.45,,1,,"b""b' Never mind about the SQUASHME commits", I rebased on top of #6022," which is what I think makes most sense.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,27,2014-11-06 17:55:31,1087.08,,1,,"b""b' Closing until #6022 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,closed,2015-04-24 10:00:44,617.13,8,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,reopened,2015-05-01 08:32:00,1351.27,8,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,28,2014-11-06 17:55:31,1359.37,,1,,"b""b' Rebased after url  ( #6022  )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,29,2014-11-06 17:55:31,154.13,,1,,"b""b' Needed rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,30,2014-11-06 17:55:31,1039.45,1,,,b'b\' Added 3 commits to hopefully make it more interesting.The added tests are kind of redundant," but won\\\'t hurt.I\\\'m specially interested on @theuni \\\'s opinion on (~~url ~~) commit named ""Chainparams: Use a regular factory for creating chainparams""] (since I know he wants to eventually separate the state-related functions out", but ParamsFactory() doesn\\\'t rely on any state).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,31,2014-11-06 17:55:31,304.78,,,1,"b'b\' Removed url  since is now a proposal for the trivial branch url  To better read commit ""Chainparams: The hash of the genesis block it\\\'s the genesis checkpoint and chain id""", please rgrep hashGenesisBlock All mentions of it are whether to:Its own asignments, of course.Make sure the genesis block is in a block index we\\\'re maintaining, like in ./:1112, of course.Asserts in  (no need to aditionally check ), let\\\'s keep this, why not?Avoid unnecessary checkpoints for the genesis block, in case we want to apply what\\\'s inside it somewhere, for example: ./:1708, ./:2641, ./:2732, ./:3385, ./:3400, ./:3495 Why the heck are we trying to check the genesis block in the first place?The genesis block is not something to test, it is actually the first rule of the chain, it has to be right or the chain rules are broken (softforks and hardforks will come at a later nHeight). But what about checkpoints? The logic of checkpoints can always safely rely on the first checkpoint being true.The last point may not be true if three\\\'s a reorg behind it," otherwise you\\\'re ready to optimize.We could introduce a configurable third layer of ""this is my new genesis no matter what""", which would be good for pruning and skipping all validations on blocks that are too old to believe they can be reorg-ed, but this would only really make sense with some form of utxo commitment (did I say that append-only-txo + append-only-confirmed is enough for this?). Therefore, we should not:Disperse hardcoded values.Double-check hashes of hashesLeave checkpoints without the only true first safe checkpoint: the genesis block\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,32,2014-11-06 17:55:31,10.05,1,,,"b""b' Sorry", pushed too fast. Now I use containers instead of those ugly ClearSelectedParams functions," and the first commit actually compiles (now all of them do).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,33,2014-11-06 17:55:31,153.95,,1,,"b""b' Closing for now"," I will open a version with some of the changes but without adding the new option.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,closed,2015-05-27 12:22:28,230.47,10,22,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,reopened,2015-06-04 09:55:35,1293.12,10,22,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,34,2014-11-06 17:55:31,1309.5,,,1,"b""b' This is the promised version with some of the improvements but without adding the new option: #6229Opened for discussion.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,closed,2015-06-04 10:11:58,16.38,10,22,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5229,closed,-,-,-,10,22,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,opened,2014-11-08 19:03:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,title,2014-11-08 19:03:18,00:00,,1,,"b'b"" Don\'t show wallet options in the preferences menu when running with -dis...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,body,2014-11-08 19:03:18,00:00,,1,,"b""b' See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,1,2014-11-08 19:03:18,1035.3,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,2,2014-11-08 19:03:18,36.15,,1,,"b""b' ACK @sinetek Can you close the original pull request?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,3,2014-11-08 19:03:18,118.78,,1,,"b""b' Tested.ACK with some ideas for optimize the code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,4,2014-11-08 19:03:18,246.68,,,1,"b""b' feel free to improve it :-) closing both my issues.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,closed,2014-11-10 19:00:14,1436.93,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,5,2014-11-08 19:03:18,38.77,,1,,"b""b' why did you close it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,6,2014-11-08 19:03:18,2.73,,,1,"b'b"" @jonasschnelli I suggested to use the constructor parameter", it\'s fine. Wallet or not is not an option (like the others)," so doesn\'t belong on the options model either.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,reopened,2014-11-10 19:43:08,42.9,0,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,7,2014-11-08 19:03:18,10.93,,1,,"b""b' Merged via 83f5daf2fe6e2f42c81576097f4084d2788b454b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,closed,2014-11-10 19:52:39,9.52,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,8,2014-11-08 19:03:18,0.87,,1,,"b""b' Okay"," i see. Options has nothing to do with  args. Right.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,9,2014-11-08 19:03:18,731.72,1,,,"b'b"" @jonasschnelli Well it\'s a grey area in this case. It\'s sort of an option", but one that switches the entire identity of the program. For OptionsDialog it\'s a matter of \'what version of the UI to show\'," and I think it\'s more transparent to just pass a flag.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,10,2014-11-08 19:03:18,735.25,,1,,"b""b' +1 laanwj'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5245,closed,-,-,-,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,opened,2014-11-12 13:56:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,title,2014-11-12 13:56:12,00:00,,1,,"b""b' show scriptSig signature hash types in transaction decodes. fixes #3166'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,body,2014-11-12 13:56:12,00:00,,1,,b'b\' show scriptSig signature hash types. fixes #3166 Please give this a look and let me know if you\\\'d like it changed or if I mis-understood the issue request. The fix basically appends the scriptSig signature hash types, within parentheses," onto the end of the signature(s) in the various ""asm"" json outputs. That\\\'s just the first formatting idea that came to my mind. Added some tests for this too.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,1,2014-11-12 13:56:12,57.7,,1,,"b'b"" NACK This will definitely break things"," and I don\'t see a need given how easy the SIGHASH flags are to remember. All the standard ones can be interpreted by thinking in terms of upper and lower nibbles: Upper nibble == 0: Upper nibble == 8: That\'s it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,2,2014-11-12 13:56:12,42.45,,1,,"b'b"" @petertodd That\'s not really fair. Why was this an open issue"," if this is not desirable? Where is the risk of breakage? It doesn\'t affect consensus code. Do people rely on the exact format of the dumped script format?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,3,2014-11-12 13:56:12,9.63,,,1,"b'b"" @laanwj They sure do! Granted", maybe we don\'t want that, in which case we should delibrately break it. (make a note in the release notes please)Well, I\'m telling people why I think it\'s not desirable. If I\'m outnumbered on this," then I\'ll at least ask if we could drop the \'SIGHASH_\' prefix on this; having the full string is kinda long if it\'s not meant to be parsed by anyone other than humans.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,4,2014-11-12 13:56:12,33.93,,,1,"b'b"" @petertodd Yes"," let\'s see what the others think here. I generally like it when people solve an actual open issue :) Agree on dropping the prefix and adding mention to  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,5,2014-11-12 13:56:12,46.93,,,1,"b'b\' @petertodd @laanwj thanks for the feedback. I have removed the ""SIGHASH_"" from the text due to your feedback that it was too verbose. I was back and forth on that before I pushed it up", so I\\\'m happy for your opinions. I can see @petertodd\\\'s concern about this being a breaking change for people scripted against it. It\\\'s something to weigh. I don\\\'t know that adding more flags is the answer. From working on another pull request," my understanding is that the JSON is equivalent to ""verbose"". FWIW", I kind of like the extra decoding output myself because it\\\'s one less thing I have to think about. It\\\'s a simple decode like @petertodd said, but having it just there in plain sight means I don\\\'t have to remember, or go look it up. I will add some release notes comments in in a little bit after waiting to hear what other feedback is.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,6,2014-11-12 13:56:12,55.9,,1,,"b""b' Added some release notes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,7,2014-11-12 13:56:12,3.3,,1,,"b""b' @mruddy Mind squashing those commits?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,8,2014-11-12 13:56:12,17.57,,1,,"b""b' sure thing"," done'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,9,2014-11-12 13:56:12,52.4,,1,,"b'b"" I don\'t think we should be adding this to the existing \'asm\' output"," but perhaps an alternate decoding that goes into lower level detail.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,10,2014-11-12 13:56:12,173.83,,,1,"b'b"" ok", thanks. if nobody pops up and says that they want this within a day or so," i\'ll go ahead and close this. it probably fits better somewhere else.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,11,2014-11-12 13:56:12,605.47,,1,,"b'b"" @sipa What if the \'asm\' format grew a way to specify comments?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,12,2014-11-12 13:56:12,35.2,,1,,"b""b' @gmaxwell can you comment here? You created #3166"," so maybe you can illuminate how it should work'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,13,2014-11-12 13:56:12,753.93,,,1,"b'b"" Hm. I don\'t have a strong opinion about how it would work.  I would have normally assumed some annotation on the asm output", or an additional lower level asm view. My goal was mostly that it would be clearly indicated in some manner stronger than squnting at bytes. In particular, squinting fails when you only barely know there is something you need to squint at. An expliact flag list would be much more obvious and discoverable. WRT compatiblity of the ASM output, we\'ve certantly never promised to hold that encoding constant... it\'s fine if things are reading it," but they\'ll need to be revised if it changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,14,2014-11-12 13:56:12,947.97,,1,,"b'b\' Closing because there doesn\\\'t seem to be much demand for this fix with the possibility that it breaks things scripted against the ""asm"" output value.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,closed,2014-11-18 13:12:25,1396.22,0,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,15,2014-11-12 13:56:12,315.43,1,,,"b'b"" @mruddy Actually", I was just asking around," and it looks like people are getting the message and not depending on the asm output format as much as before. As an example Counterparty switched to using python-bitcoinlib for that on my advice. Maybe we should reopen this for v0.11 and simultaneously drop the \'OP_\' prefix from the opcode names in the asm output? That\'d likely break the remaining stuff pretty thoroughly in a clear way.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,16,2014-11-12 13:56:12,1293.53,,1,,b'b\' @petertodd sure," re-opened. I have not gone through and made the ""OP_"" prefix changes yet. I figure that I\\\'ll have to do a bunch of reference checking to see what all I\\\'m impacting", and then update or make some unit tests when I do that. So, more changes to come for that.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,reopened,2014-11-19 16:01:23,168.97,1,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,17,2014-11-12 13:56:12,216.82,,,1,b'b\' @mruddy Great," thanks! FWIW a ""OP_"" prefix dropping change should definitely be in a separate commit so it can be debated separately. Also", if changing stuff like that _doesn\\\'t_ break any tests, keep in mind it\\\'s a sign that maybe depending on the exact format of the asm output is a bad idea. :) (yeah, the more I think about this, the more I think my original objection was wrong...)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,18,2014-11-12 13:56:12,178.73,1,,,"b'b\' @petertodd sorry for my delayed response... i just made #5392 for the ""OP_"" prefix changes. also", i rebased this request\\\'s commit so that it\\\'ll merge into the upstream once again.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,19,2014-11-12 13:56:12,782.38,,1,,"b""b' Eh"," not important enough to keep open and keep re-basing the commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,closed,2014-12-11 11:39:19,1177.93,2,13,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,20,2014-11-12 13:56:12,13.32,1,,,b'b\' I still think this makes sense," but after 0.10 obviously.If this is closed unfixed with ""don\\\'t bother"" then so should #3166.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,reopened,2014-12-11 11:55:06,15.78,3,13,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,21,2014-11-12 13:56:12,130.57,,1,,"b'b"" I really don\'t like a script show function to make assumptions about the data inside it. It feels like a layer violation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,22,2014-11-12 13:56:12,13.75,1,,,"b'b"" @sipa you could argue that", but in practice that\'s what disassemblers do, given incomplete semantic information they have to make guesses. As long as the information is only shown in what is an informative comment for the user," I don\'t think it hurts.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,23,2014-11-12 13:56:12,123.08,,1,,"b""b' @laanwj ready for review. i added a couple more test cases"," and re-squashed the commit after re-basing to the latest upstream.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,24,2014-11-12 13:56:12,1252.77,,1,,"b""b' While doing more testing"," I found that I was able to make some OP_RETURN data look like a signature and cause an erroneous decode.I added some handling for that and did a little re-factoring at the same time.I also changed the parentheses to square brackets for consistency with an existing error case that would output square brackets.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,25,2014-11-12 13:56:12,669.87,,1,,"b""b' Tightened up a couple more cases and added unit tests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,26,2014-11-12 13:56:12,677.95,,,1,"b'b"" @Diapolo thanks for the review. I\'ve addressed your three comments in the latest updated commit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,27,2014-11-12 13:56:12,52.55,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,28,2014-11-12 13:56:12,104.68,,1,,"b""b' Rebased", incorporated latest feedback about the function signature," and decided to actually replace the sighash byte on signatures when the decode occurs instead of just appending the decode after the sighash byte.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,29,2014-11-12 13:56:12,226.93,,,1,"b""b' @jtimon your two feedback items are incorporated into this latest commit"," thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,30,2014-11-12 13:56:12,24.68,,1,,"b""b' Leaning towards closing (with the associated  on the related issue).  Generally agree w/ the comment that this seems like a layering violation. The intent is understandable"," but it seems like the script show function is not the right place.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,31,2014-11-12 13:56:12,20.05,,1,,"b'b"" Yes", it should probably be closed. The more I worked on these changes," the less I liked them. I suppose I\'ll wait a day and close it unless someone objects.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,32,2014-11-12 13:56:12,434.27,,,1,"b'b"" I agree the intent is good", and it can be done, just in  rather than .If closing this PR and reopening another one that does the same in another file is clearer," let\'s do that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,33,2014-11-12 13:56:12,228.13,,1,,"b""b' TxToUniv() dumps both script hex and script asm. I wonder if an optional argument to () would suffice? Printing out the flags somewhere is certainly useful.  bitcoin-tx utility and RPC both call TxToUnix() when dumping the script verbosely.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,34,2014-11-12 13:56:12,798.13,,1,,"b'b"" I don\'t see how an optional argument to CScript::ToString would solve the layering concern. That is caused by the script object needing to know if a piece of itself is a signature with a valid hash type. Right now", that logic is in the interpreter. I spent some time looking at the layering. I think IsValidSignatureEncoding could be moved over to  since it is entirely consensus-critical since BIP66. Since the sig hash type is not part of consensus, only part of determining if a sig is standard, I think move IsDefinedHashtypeSignature and the sig hash types over to  and .h respectively. IsLowDERSignature is effectively dead code. Then, CheckSignatureEncoding could also go to  since it\'s not consensus and does not seem like it could only ever be used by the interpreter. I think at that point the layering concern is covered. Next, what lead to the klutziness in my code, that I wound up not really liking, was the need to answer the question of if the current script was a scriptSig. A lot of what I did to ValueString was to avoid mis-interpreting non-scriptSig data as a signature. It seems like a flag could be set on the script object, or more object oriented, just use a SignatureScript type object when these objects are created (and PubKeyScript objects in other cases). Then this decode ticket would be an override to SignatureScript::ToString. But, refactoring all that would obscure this change and is a lot of work for this seemingly low-value sighash decode. It\'d turn into a train of refactoring tickets followed by the last ticket to actually do the simple decode. There\'s also probably a reason why all that refactoring would be misguided or error-prone that I don\'t foresee yet. All my hacking to avoid refactoring is what makes me think this should just be closed. Also, TxToUniv is only used by bitcoin-tx, CScript::ToString is the common dependency of RPC and bitcoin-tx.The RPC dependencies go through, TxToJSON (decoderawtransaction and getrawtransaction) and ScriptPubKeyToJSON (decodescript).That reason, and thinking that a script should know how to  itself," is why I targeted CScript::ToString as the place to make these changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,35,2014-11-12 13:56:12,94.72,,1,,"b'b"" It is in ", so it\'s already part of libconsensus, see: url The sighash types and CheckSignatureEncoding are definitely part of consensus (and are used by the interpreter), please," just leave them there.The only thing you need to move is the new code for converting to string to  and I think all layering concerns are gone.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,36,2014-11-12 13:56:12,905.32,1,,,b'b\' That\\\'s true. I was just thinking that determining whether a signature is validly encoded is generic enough that it could be useful without including the interpreter. Personal preference, I guess.I was assuming that to begin with, but IsDefinedHashtypeSignature is only called when the flags include SCRIPT_VERIFY_STRICTENC. The comment for SCRIPT_VERIFY_STRICTENC even states,"not used or intended as a consensus rule"". The best I found was that scripts with a bad sighash type would fail to eval (and thus be non-standard), but that if they got into valid blocks we\\\'d still have to accept those blocks. I suppose I could try it and see, but that\\\'s what made me say that the sig hash type is not actually part of consensus. Maybe we\\\'re using the word consensus in two different ways here.Oh, you mean move ValueString and mapSigHashTypes over to  and add the CScript as an argument to ValueString? Yes, that may make sense. And, if we move the sighash stuff from interpreter over to standard, then it\\\'ll all be in the same place.\''
bitcoin	5264	closed	37	sipa	2014-11-12 13:56:12	17.2		+1		b'b"" STRICTENC is indeed not technically consensus-critical, but it is part ofthe interpreter (as we want it for evaluation of standardness), whichconsensus-critical code depends on. I don\'t see how you can disconnect itfrom the interpreter. In general I prefer to have the basic data type definitions (,CScript) to have as little dependencies and functionality as possible, asthey get pulled into everything, including consensus code. Ideally, theyonly provide representatiin, serialization, deserialization, and basicconstruction. Something like ToString() is mostly for debugging purposesIMHO, and should not be used for actual conversion to well-defined otherrepresentation. See for example the core_io module for conversion code.""'
bitcoin	5264	closed	38	jtimon	2014-11-12 13:56:12	578.65		+1		b'b"" Yes. I like this PR, but the code should just be in  instead of  or , it\'s only that.No, the sighash stuff is consensus critical so you don\'t want it in  because you don\'t want the rest of what\'s in there for libconsensus.I wouldn\'t oppose to move the sighash flags, SignatureHash, TransactionSignatureChecker and MutableTransactionSignatureChecker to a different file (still required for consensus), but I don\'t think that\'s a priority and is certainly not needed for this PR (or libconsensus).""'
bitcoin	5264	closed	39	mruddy	2014-11-12 13:56:12	952.48		+1		b'b"" @jtimon OK, I just rebased and made the layering changes that I think we were talking about. I didn\'t squish them into one commit so that you could easily diff. I did look at what @sipa was talking about. I see he added a FormatScript in core_ that I could probably build off of instead (never saw it before because it\'s only referenced by tests). He might be onto something. At quick glance, I think I might be able to make things simpler by going the route he suggested. I\'ll look into it more and may open an alternate pull request to this one. But at least the latest commit here kind of avoids the layering concern now, I think.""'
bitcoin	5264	closed	40	jtimon	2014-11-12 13:56:12	368.68	+1			b'b"" Now it\'s actually worse because you\'re putting the whole  inside libconsensus.In fact, that\'s what is giving you errors on travis url  because you haven\'t adapted  to include  in libconsensus. But you\'re very close, you can just move the rest of CScript::ToString to the new function in . That way you will be able to pass only a const CScript& as parameter (no additional vch param, which is nice) and you will be making libconsensus actually smaller instead of bigger. I\'m not sure how many places CScript::ToString is called, but it is just a mechanical replace for ToString(const CScript&) [or whatever you want to call it]. Sorry if I haven\'t clearer earlier about CScript::ToString: if you want to use the new function in , it cannot be a method of CScript but an independent function instead (because  should not depend on neither  nor ).""'
bitcoin	5264	closed	41	jtimon	2014-11-12 13:56:12	114.17			+1	b'b\' To try to be clearer: if you need to ""de-encapsulate"" anything from CScript by creating a new child class that uses the protected arguments, by creating new getters or even by making a  public to be able to move CScript::ToString up, I\\\'m totally fine with that.I\\\'m happy with any solution that ends up with equal or less code in libconsensus url  anything else is secondary to me with rewards to this PR (it also makes it ""less risky"" [I don\\\'t think your changes are risky even violating the layering]).My preference would be to simply rename to a trivial change using regular expressions or patience (the compiler won\\\'t let you get this little step wrong, anyway: just remove CScript::ToString and make the compiler happy with the new function). But better is better, so my only requirement for an utACK is what I said before: equal or less code in libconsensus (and less is better). EDIT: So, to be completely clear. It\\\'s not your fault that CScript::ToString() is in libconsensus, we just don\\\'t want you to make it worse by improving the  in-place.\''
bitcoin	5264	closed	42	mruddy	2014-11-12 13:56:12	240.07			+1	b'b"" @jtimon that\'s a lot of useful input, thanks! I took that and actually refactored these changes twice. I put each of the two ways into the last two commits. The first commit refactored into a couple of formatter classes. It worked, but the  idea seemed a little cleaner. The second commit does away with the formatter class idea of the previous commit and just moves CScript::ToString out into a function in core_. I think this last commit converges your input with sipa\'s input. I think the last one loops in everyone\'s input, doesn\'t layer violate, and reduces code from the consensus library. I purposefully didn\'t choose to sighhash decode some scriptSigs that were just going to be logged since those usages were tangential to what i was trying to actually update for this ticket. Let me know what you think of the latest. Thanks!""'
bitcoin	5264	closed	43	mruddy	2014-11-12 13:56:12	552.52		+1		b'b"" ... or not. I see the travis windows builds failed because  is still part of libconsensus and references the ScriptToAsmStr for ToString\'ing CTxIn and CTxOut objects. Guess I\'ll have to move those around too.""'
bitcoin	5264	closed	44	jtimon	2014-11-12 13:56:12	60.38			+1	b'b"" You are welcomed. I\'m fine with putting new things in core_io as @sipa suggested, just not in libconsensus. now calls so instead of putting  in libconsensus, now you\'re putting core_io instead. The important thing is this: independently of where you chose to put the new code outside of libconsensus, you cannot include that new code from libconsensus. That\'s why I keep posting a link to the list of files that are part of libconsensus: url If you include more things in any of those files, travis will complain (unless you adapt the makefile properly to include the new file, in which case we will complain). So, either don\'t adapt CTransaction::ToScript to the new code (seems the simpler solution) or also take CTransaction::ToString out of consensus (seems better but also more work). ""'
bitcoin	5264	closed	45	jtimon	2014-11-12 13:56:12	5.95		+1		b'b"" Another possibility is to leave the new code in libconsensus like you had at the beginning (not my preference), but it still couldn\'t be in  since you need  and that would cause a circular dependency. So even leaving the new code in libconsensus, you always need to rename CScript::ToString and move it our of .""'
bitcoin	5264	closed	46	mruddy	2014-11-12 13:56:12	707.98		+1		b'b"" It turns out that resolving that last dependency was pretty easy.I simply stopped using that script assembly formatting in the CTxIn and CTxOut ToString methods.Those ToString\'s were only called by very low value debug and log print statements and the formatted scripts were being truncated immediately too. So, converting to hex instead in those cases isn\'t losing much, if anything at all, in my opinion. Doing it this way allowed the removal of the original CScript::ToString from libconsensus.""'
bitcoin	5264	closed	47	jtimon	2014-11-12 13:56:12	612.03		+1		b'b"" This looks like a reasonable solution.Apart from the latest little nits, consensus-safe-review ACK (I also slightly reviewed the new functions, but didn\'t look much at the tests).""'
bitcoin	5264	closed	48	mruddy	2014-11-12 13:56:12	166.2			+1	b""b' @jtimon You are correct about those latest nits. I made the updates and squashed+rebased everything back down to the one latest commit. I also updated the release notes description at the same time. Should be all good now. Thanks for the help, it was good working with you on this!'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,49,2014-11-12 13:56:12,9.1,,,1,"b""b' Thanks to you for your patience when improving this. Everything looks good"," re-utACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,50,2014-11-12 13:56:12,1371.65,,1,,"b""b' Untested ACK"," but the tests look convincing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,51,2014-11-12 13:56:12,751.72,,1,,"b""b' @sipa nit addressed. I also added a new test case just to cover a specific low probability case related to the nit to make sure it was covered.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,52,2014-11-12 13:56:12,1028.32,,1,,"b""b' ut ACK looks ready to merge'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,closed,2015-09-25 17:19:27,324.35,6,34,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5264,closed,-,-,-,6,34,14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,opened,2014-11-12 22:43:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,title,2014-11-12 22:43:11,00:00,,1,,"b""b' Fix coinbase-spend mempool inconsistency after reorgs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,body,2014-11-12 22:43:11,00:00,,1,,"b'b"" We were previously not removing transactions from mempool during reorg if they spent a coinbase. While this broke the mempool-invariant of safe-to-put-in-next-block it doesnt matter as mining code double-checks anyway (unless you\'re running with -debug or -regtest during a 100-block reorg", then you will assert-crash). This takes the expensive solution of checking transactions for this case during a reorg-off (these transactions will not be resurrected after the reorg completes, as they should, however), though alternatively we could redefine the mempool invariant to safe-to-put-in-next-block-but-may-include-immature-coinbase-spends (but only do so /during/ a reorg, not before or after, unless someone added an rpc or otherwise forced a reorg to a block, which we should probably add at some point anyway or so, see my mempoolfix2 branch for a maybe-ok proposal to implement that one instead). Also includes a new block-tester which will crash master (because -regtest implies CTxMemPool::check," as does -debug).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,1,2014-11-12 22:43:11,964.63,,1,,"b""b' @TheBlueMatt Can you get this in a state where the tests pass (perhaps by delaying the enabling of large-reorg)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,closed,2014-11-18 00:40:46,117.58,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,reopened,2014-11-18 01:24:19,43.55,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,2,2014-11-12 22:43:11,97.0,,1,,"b'b"" Upon review... it seems to me the first immature-coinbase-in-the-mempool bug is due to this code: AcceptToMemoryPool calls CheckInputs()", which does check for coinbase maturity.Seems to me just moving UpdateTip() to before the resurrect-into-mempool loop would fix that bug. Coinbase spends right at the maturity threshold would get dropped from the mempool, but I don\'t think I care (our wallet code should rebroadcast the spend if it doesn\'t stay in a block). The other bug, a coinbase spend in the mempool that becomes immature when DisconnectTip() happens:  I think I\'m ok with the proposed fix, but it feels like there might be a simpler and more robust solution-maybe the mempool should keep a list of all coinbase-spending transactions inside it (add to that list in addUnchecked())," and remove-then-AcceptToMemoryPool all of them (and any dependents) after a DisconnectTip(). ACK on the work queue optimization.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,3,2014-11-12 22:43:11,186.25,,1,,"b""b' @gavinandresen re: first bug: its not about transactions that are in the block", its about transactions in mempool, so calling AcceptToMemoryPool on anything that is within that loop wont help," afaict.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,4,2014-11-12 22:43:11,618.2,,1,,"b'b"" You don\'t need a large reorganization. Just connect some peers and start mining", then send some of the coinbase to each of the peers and keep mining," you will see it. The problem and solution is clear since this issue has been known since 5 years ago. :+1: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,5,2014-11-12 22:43:11,20.93,,,1,"b'b\' @john-connor I\\\'d love to know what issue you\\\'re referring to here. There is certainly no way to ""send some of the coinbase to each of the peers"" and", in #2821 you seem to think it is a locking issue, but the proper locks appear to be taken in the block creation code.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,6,2014-11-12 22:43:11,854.37,,,1,"b'b"" FYI: I\'m working on tests for these cases using @sipa\'s excellent invalidatblock: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,7,2014-11-12 22:43:11,1173.37,,1,,"b""b' Fails a test case I wrote:1. Spend a coinbase at depth 100+2"," only in mempool (not confirmed)2. Re-org back to depth 99  (spend_101 is the transaction that is being left in the mempool)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,8,2014-11-12 22:43:11,1034.08,,1,,"b'b\' @TheBlueMatt I never mentioned ""locks"". Setup a testnet of N peers and start mining"," let the coinbase mature spend it around to the ""loosely organized"" peers (addresses)", when N or more nodes generate a block a reorganization will possibly happen leaving some of the mempool\\\'s full of (now) invalid transactions. gavinandresen\\\'s latest test results confirm my theory. So, just remove them from the mempool during a reorganization and the assert should never be hit. If do not have the mining thread running you will never hit the assert either which masks the problem. These transactions also seem to make it into the  and they should not. I\\\'ve confirmed this because the problem follows the  file.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,9,2014-11-12 22:43:11,977.25,,1,,"b'b"" @john-connor \'re referring to the bug that both of these pulls fix in different ways?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,10,2014-11-12 22:43:11,378.22,,1,,"b'b"" Note that the failures here are only from the test-update. I spent a while trying to get it to not overrun travis\' memory", and while I have one I think should work, I miscompiled it and then left and forgot to even push the  its gonna be till next week before I can get that updated. In any case, its been passing locally for a while," and I also added gavin\'s tester from #5368 on a branch with this at url  (which passes as well)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,11,2014-11-12 22:43:11,1080.05,,,1,"b'b"" @TheBlueMatt These don\'t fix the entire problem(s) but is a  invalid transaction will make it into the mempool long enough to get broadcasted out to the network where it will cause further mempool pollution. So"," it\'s still going to waste global network bandwidth. Luckily the wallet is smart enough to not allow the invalid transaction onto the network during a resend so it stops with the mempool.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,12,2014-11-12 22:43:11,33.77,,1,,"b'b"" Huh? The transactions are valid", but become invalid during a reorg (not even after)... Each node is responsible for keeping its mempool valid, not its peers. Again, I\'m really not sure what bug you\'re talking about.  On November 27, 2014 8:47:40 PM EST," John Connor notifications@ wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,13,2014-11-12 22:43:11,1052.97,,1,,"b'b"" @TheBlueMatt then we are talking about two very similar but different bugs. I\'ll open an issue that shows the full problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,14,2014-11-12 22:43:11,979.88,,1,,"b'b"" @gavinandresen @TheBlueMatt Just to be clear about the off-by-one: a transaction that made it into block N", can be spent at block N+100," which means with 101 confirmations (as the block it\'s in already counts for 1).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,15,2014-11-12 22:43:11,342.83,1,,,"b'b"" Hmm? The confusion actually wasn\'t about which block can spend an output", but about the definition of the memorial mempool\'s spendability requirement.  On November 29, 2014 7:14:16 AM EST," Pieter Wuille notifications@ wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,16,2014-11-12 22:43:11,970.17,,1,,"b'b"" I rebased on top of master", allowing me to pull in @gavinandresen\'s test from #5368 without depending on another pull req, fixed the block-tester issues, and removed the commit which got rid of the removed-tx tracking (that @dgenr8 had issues with," though I\'m still not able to \'ll reintroduce that in a separate pull req).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,17,2014-11-12 22:43:11,318.32,,1,,"b'b"" @TheBlueMatt If you can get Travis to succeed here", I\'ll reconsider," but right now this is just not mergable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,18,2014-11-12 22:43:11,286.23,,1,,"b'b"" @sipa I said the failures are just the test-update", could easily merge without , I removed that commit," I\'ll add it again via another pull.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,19,2014-11-12 22:43:11,2.78,1,,,"b'b"" @TheBlueMatt Sorry", missed that. I knew that the problem was just in the tester, but really if Travis doesn\'t pass," I tend to ignore it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,20,2014-11-12 22:43:11,346.38,,1,,"b""b' Untested ACK; I prefer this approach over #5368"," and it seems to pass the same tests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,21,2014-11-12 22:43:11,22.37,,1,,"b""b' Untested ACK"," I have no preference on which version of this makes it in.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,22,2014-11-12 22:43:11,1183.38,1,,,"b""b' Rebased for dumb merge conflict (new tests in rpc-).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,23,2014-11-12 22:43:11,4.0,,1,,"b'b"" Oh"," and resolved sipa\'s nit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,24,2014-11-12 22:43:11,970.72,,1,,"b""b' Which one?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,25,2014-11-12 22:43:11,1027.35,,1,,"b'b"" utACK commithash 34318d7fad7922ce56ff47908ff70e2c8a42ee56.  I have no preference which one makes it in either"," #5267 or #5368. Which I suppose means that @sipa\'s preference for this one is the tie-breaker.([signature]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,26,2014-11-12 22:43:11,2.45,,,1,"b'b\' @sipa the ""while(!())"" vs ""while (())"" one.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,closed,2014-12-11 14:24:12,779.88,3,21,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5267,closed,-,-,-,3,21,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,opened,2014-11-23 07:05:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,title,2014-11-23 07:05:09,00:00,,1,,"b""b' depends: Qt fails to build on osx 10.9.5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,body,2014-11-23 07:05:09,00:00,,,1,"b""b' Compilation is fine up until Qt. Which fails with","  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,1,2014-11-23 07:05:09,617.32,,1,,"b'b"" I can\'t reproduce this. The line in question comes from qt\'s configure:QT_VERSION=  Edit:$relpath is: defined above as:relpath= relpath=  @fanquake is it possible that you have some odd version of grep installed that may be the root cause of some of your problems?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,2,2014-11-23 07:05:09,462.17,,1,,"b'b"" @theuni I\'ve found the cause. Not a bitcoin issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,closed,2014-11-25 01:04:38,1079.48,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,3,2014-11-23 07:05:09,18.92,,1,,"b""b' I spoke to soon. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,reopened,2014-11-25 01:23:34,18.93,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,4,2014-11-23 07:05:09,656.3,,1,,"b""b' As far as i know this is a common Qt issue when building Qt on 10.10.Try to install Qt over homebrew.You can also install multiple Qt Versions like  and Qt 5.2.x. Homebrew supports version switching over symlinks (check url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,5,2014-11-23 07:05:09,0.32,,1,,"b'b"" Because it\'s a Qt Bug i think this can be closed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,6,2014-11-23 07:05:09,8.93,,1,,"b'b"" @jonasschnelli I\'m building on 10.9.5. My regular build does use homebrew (5.3.2) without issue. The build that is failing is for the depends system..""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,7,2014-11-23 07:05:09,437.6,,1,,"b'b"" @fanquake You\'ll need to specify an older SDK", it looks like QT doesn\'t like building with 10.10. IIRC there\'s a configure option in qt\'s build for that. Something like -sdk 10.9. I suppose we should hard-code the SDK that gets used for the depends system, but that\'s tough on native OSX builds, because it may not exist. For example," 10.7 sdk which we currently use for releases isn\'t likely to be installed on 10.10 systems.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,8,2014-11-23 07:05:09,1364.45,,1,,"b""b' This is fixed here: url  It contains the upstream fix"," backported to 5.2.1:url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,9,2014-11-23 07:05:09,299.53,,,1,"b""b' Nice. Tested Fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,closed,2015-01-01 23:30:41,1327.12,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5353,closed,-,-,-,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,opened,2014-11-28 14:25:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,title,2014-11-28 14:25:02,00:00,,1,,"b""b' [Wallet] Wallet-pruning'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,body,2014-11-28 14:25:02,00:00,,1,,b'b\' Wallet pruning can be used to speed up and shrink large wallets. Transactions will only be removed, if this for sure does not affect your balance. RPC prunewallet(n) removes transactions older than n days (n >= 1). Or adding prunewallet=n to  prunes on startup. Note that the latter is required to prevent rescan from readding the transactions. A transaction is pruned, if the following conditions are metat least 100 confirmationsolder than n days according to block-timestamp (n >= 1)our outputs must be completely spent and also the spending transaction must  have at least 100 confirmationsthe inputs we spent are also  transactions, so that they dont require us as a spent-flag anymore A new class STXO has been introduced, which loops over the last 100 blocks and builds a temporary recently-spent-outputs index.Its only used on rescan," if wallet pruning is enabled. This is necessary to answer the question""has the spending transaction at least 100 confirmations?"".Because if not", a rescan wants to always add the transaction to the wallet, and not skip.This is because, when we rescan, we dont have the spending transaction anymore in the wallet, to check how many confirmations it has.Also a rescan checks if spent or not in our coins-utxo, because the wallet does not know if spent or not while rescaning. Note that the feature is disabled if someone uses the account-feature. I could add support for this, but I am not bothering if our plan is to remove the account-feature. Because pruning as is, would destroy account-balances.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,1,2014-11-28 14:25:02,1091.58,,,1,"b'b"" Interesting concept.  It\'s a good observation that it is possible to \'freeze\' transactions that are fully spent and no longer count toward the balance. They can be excluded from GetBalance() computations and such. You could hide them in default views. I\'m not so sure about actually deleting them though storage is cheap so it doesn\'t really make much sense to remove old transaction data for storage concerns. And for privacy", well, the transactions are still there in the block chain. You could delete the metadata, but not much more.(if no-address-reuse was rigorously enforced in Bitcoin one could also prune old keys and have some plausible deniablity," i suppose... but right now that would be foot-shooting waiting to happen)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,2,2014-11-28 14:25:02,118.9,,1,,"b""b' Ok"," closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,closed,2014-12-02 10:35:31,1210.48,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,3,2014-11-28 14:25:02,22.03,,,1,"b'b"" I didn\'t mean that as \'go close this!\'. I just wanted to get a discussion started. There could be other people for which this may be just what they needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,reopened,2014-12-02 10:58:16,22.75,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,4,2014-11-28 14:25:02,203.97,,,1,"b""b' The reorging of the data to avoid needlesly iterating over them sounds interesting.  I agree that deleting is less exciting.  An additional thing to contemplate is deleting only the data which is in the chain"," e.g. keeping any metadata. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,5,2014-11-28 14:25:02,1302.12,1,,,"b""b' Our wallet by design loads everything in memory", including all transactions. So you reduce memory usage, disk space and speed up many wallet operations. Of course maybe nobody even has a wallet that big, where things make difference.But the feature doesnt hurt anybody, and just in case someone complains about performance or memory issues with a large wallet, we could point him to this. Or if people make regular wallet online-backups, they might want to trim down the wallet. Besides useful, to me at least its kind of a cool feature to see all transactions disappear," except those actually holding your coins.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,6,2014-11-28 14:25:02,242.75,,,1,"b""b' @cozz Absolutely. We should improve the scalability", but I think permantly deleting irrecoverable finiancial information is a cost too great. Instead we should be making possible to load some of this data only on demand," or archiving it off without deleting it completely. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,7,2014-11-28 14:25:02,5.38,,1,,"b""b' Ultimately", I think the correct solution is considering the UTXO set and the transaction  as separate entities, and maybe just occasionally check for consistency between them," rather than constantly computing one from the other. Doing that probably means pretty much a total rewrite.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,8,2014-11-28 14:25:02,310.78,,1,,"b'b\' @gmaxwell agreed about ""loading on demand""", but I dont think anybody will redesign the wallet anytime soon," so I was just trying to find a rather simple solution which fits in the current design.For archiving you can simply use backupwallet. About ""irrecoverable finiancial information""", not sure what you mean. Wallet-pruning is disabled when using the account-feature, and payment-request is not even exposed to rpc and we only show the merchant in the gui in the tx-details.So there is only the actual bitcoin transaction, which I dont consider as irrecoverable.(simple rescan will do) Our wallet grows forever by design, so I just thought that a simple straighforward pruning feature might be useful to someone.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,9,2014-11-28 14:25:02,937.2,,1,,"b'b"" Agree with comments that we should just hide and optimise"," not delete. Especially not delete on the basis of what is to users essentially random (the UTXOs created when a userside-transaction is received don\'t remain associated to that userside-transaction).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,10,2014-11-28 14:25:02,248.93,,1,,"b'b"" We have been researching this possibility of deleting fully-spent transactions in an effort to improve performance and reliability of backups with very large wallets. Finding this patch was quite pleasant as it has implemented the solution exactly as we had imagined it might work. The main idea behind this is rather simple. It would greatly improve performance for large wallets containing many hundreds of thousands of transactions where a majority portion of transactions are fully-spent and have many hundreds or thousands of confirmations. Another reason for this patch would be to alleviate the stress of handling wallet backups. While storage is not a concern"," creating backups that get quite large(and will continue to grow) is time consuming and can be rather concerning. It would seem reasonable that a task requiring more time to complete would also have more time to fail. We believe this feature to be exactly what we need. We are experiencing these issues now and it\'s obvious that the problem will only worsen with continued use.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,11,2014-11-28 14:25:02,1055.67,,,1,"b'b"" We\'re in almost the same situation as @mchatham. We\'ve been researching to develop this functionality ourselves", and are delighted to see that it has been already done. Thank you, @cozz. Some of bitcoind\'s functionality does depend on the fact that the involved addresses are in the wallet. For high-throughput installations (e.g., merchants), this was always a problem: one had to chose between having the functionality and facing the absolute non-scalability of the wallet, or implement the whole wallet functionality separately. This patch allows one to use bitcoind for high-throughput installations again, which is very useful. Has anyone used this patch in production yet? @cozz," does this play ball with #4702?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,12,2014-11-28 14:25:02,625.77,,,1,"b""b' @arnuschky not yet"," you would also need to delete from mapOrderedTxItems. But that would be easy. I think it would be good to have a final decision on both patches.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,13,2014-11-28 14:25:02,383.4,,,1,"b""b' @cozz: Ok"," thanks. I am going to deploy this PR on a test instance and see how it behaves. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,14,2014-11-28 14:25:02,1342.2,1,,,b'b\' We agree that it\\\'s like @arnuschky has stated, this patch will allow bitcoind to be used in high-throughput situations again. We would add that for those already using bitcoind and finding themselves needing this patch, it will be a godsend. In an article by Mike Hearn wrote back in December 2013, he made the statement about server wallet problems saying,"As far as I know exchanges and major payment processors have all had to implement lots of custom code to work around the lack of scalability of Bitcoin-Qt""url  In our research of the topic we\\\'ve learned that this issue has largely gone unaddressed. While he specifically is referring to wallets with large numbers of keys we feel the same applies to wallets with lots of transactions. It\\\'s our belief this decreases stability in the Bitcoin world if every exchange or payment processor must develop their own wallet software versus simply using the default wallet implementation.\''
bitcoin	5389	closed	15	gmaxwell	2014-11-28 14:25:02	29.5	+1			b'b"" @mchatham The lobbying isn\'t helpful.  If you\'re interested in this you could work on an alternative which does not destroy information and instead just skips loading it when a switch is set, as that would address the concern. I believe the project is not interested in a workaround that creates any data loss risk. ""'
bitcoin	5389	closed	16	arnuschky	2014-11-28 14:25:02	353.27	+1			b'b\' @gmaxwell: I don\\\'t really get this ""loss of financial information"" argument. All information is contained in the blockchain and can be recovered anytime with a rescan, or am I wrong here? On the other hand, I think it is very reasonable to allow the user to decide to which extend the wallet  information on past transactions. Especially as this functionality allows users to use the current wallet implementation for addresses with large amounts of transactions.\''
bitcoin	5389	closed	17	sipa	2014-11-28 14:25:02	117.83	+1			b'b"" It does not contain all information. It misses timing data, comments thatmay have been added, data due to the usage of the payment protocol, andeverything from unconfirmed transactions (which isn\'t a consideration herespecifically). Worse, it is incompatible with blockchain pruning which we\'d very much liketo get in the next release. Please, the memory usage problem is trivial to solve in a much lessinvasive way.""'
bitcoin	5389	closed	18	cozz	2014-11-28 14:25:02	576.07		+1		b""b' It seems like this is going nowhere anyway, so closing it, saving us further pointless discussion.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,closed,2015-02-18 19:52:23,534.12,5,8,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,19,2014-11-28 14:25:02,41.63,1,,,"b'b"" We\'re in agreement", the risk of data loss is apparent, but it\'s always a risk. For those in our situation, the risk of data loss increases with wallet database size. Because of this, managing backups for these wallets is a genuine concern for us. We make backups every 100 addresses. How often would you recommend wallet backups be created? We\'ve seen one recommendation recently that indicated every 90 transactions. If we followed this recommendation we\'d be creating a backup of our wallet many times a day. This overall would not be an issue if it were not for the sheer size of the wallet on disk. Ours is currently at 1.2GB, and as we all know for sure, will continue to get larger. In the case of this patch, what\'s the real concern with losing data? As far as we see, there\'s nothing in this patch that would in effect destroy any value that we own. No coins could be destroyed. Not by normal operation. If the concern is with losing meta-data, be reminded that we can already provide -zapwallettxes with 2, and it will simply not restore the old meta-data after rescan. While an alternative to destroying data would improve performance for large wallets, it completely ignores the other issue: ALL data forever being stored in a single, very important file. @gmaxwell What else to do when a wallet file gets this large? Your recommendations for an alternative only solve one half of the current problem and this patch solves both. We\'ve given this feature a lot of thought and we\'re well aware of the risks involved. Just the same as we\'re aware of the risks involved with other features available in the client, which some," with improper use could actually result in losing bitcoins.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,20,2014-11-28 14:25:02,47.68,,1,,"b""b' @mchatham The correct (initial) coarse of action would be to fix the issues causing your wallet to become 1.2GB.  What version of the software are you using that is creating wallets that large? (I ask because some issues that caused wallet bloat were previously fixed).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,21,2014-11-28 14:25:02,61.98,,1,,"b""b' @gmaxwell We have been in 0.9.4 for quite sometime.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,22,2014-11-28 14:25:02,862.12,,1,,"b'b"" @gmaxwell  Same here", our is Once the wallet is this big, it becomes extremely slow it doesn\'t scale at all. currently takes 2-3 seconds, a rescan is accordingly an operation that takes a 1-2 weeks.  Now, one might claim that we\'re an edge case, pushing bitcoin core beyond it\'s limits. I agree that this is the case at the moment, but over time, more and more users will reach similar wallet sizes if there\'s no pruning. This PR might not be the solution and just a temporary workaround (a quite acceptable one for us, but maybe not for the general public). However, the scalability problem of the wallet needs to be addresses at some point. @cozz Tested your patch. goes away and does something for a long time and claims to have pruned a few thousand tx. However," there\'s nothing in the debug log and didn\'t shrink at all. Am I missing something obvious here?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,23,2014-11-28 14:25:02,267.33,1,,,"b""b' @arnuschky I fixed the biggest wallet-bottlenecks here #4805 #4712 and #4702. However the last one has recently been closed", because a guy is eventually going to redesign the wallet at some unknown point in the future, but still going to load the whole wallet in memory on startup. To me wallet-pruning is a feature as obvious as blockchain-pruning. Making the two compatible would not be a problem. The argument that you should shrink your 1.2GB wallet by upgrading, is not an argument to me. Even if there is wallet-bloat and he can shrink his wallet to 120MB, what if bitcoin scales to 10MB blocks, or his company by factor 10, or he just keeps using his wallet for years. We must assume scale. There should be an option to be able to delete old transactions from the wallet somehow for sure. The potential performance boost is just a side-effect here, because our wallet design is bad. There is another patch which improves wallet performance here #5411, this has been closed, because its a little hacky. But with this patch and the other 2 closed ones, even the current wallet design could be used on larger scale. Its just 3 simple patches, as long as we have the current wallet design and they are making such a drama. The whole wallet is hacky, as most might agree, so I am just adapting to what is there, but improve performance. I hope that they are not thinking of removing the wallet completely to solve problems, as they do with the account features. As why the patch didnt work for you, I dont know. There should be lots of EraseFromWallet in . I hope you compiled the branch as is, and did not apply the patch to some other branch like master or 0.10.Back in the day, when I tested it, I actually saw the transactions disappear in the GUI, and I also saw the  file to actually shrink from 20MB to like 100kb. However, I am not going to spend anymore time on this patch," if the bitcoin core developers disagree with it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,24,2014-11-28 14:25:02,292.83,,,1,"b'b"" Which is part of why why addressing performance problems by irrecoverably deleting financial information is just not considered acceptable here. We\'re happy to work on features that improve scale and efficiency", but not ones where the system forces (or strongly encourages) behavior which is irresponsible. I consider deleting transaction data to be irresponsible, and I think there is a general consensus around this among comitters on this point.  People are, of course, free to run their own wallet software if they wish to adopt this kind of behavior (see also: mtgox).  Part of the value the reference wallet can provide is sticking to responsible, safe behavior even when it stands in the way of commercial expedience. Instead we should adopt designs that accomplish a goal of scaling without compromise (as Pieter suggested in his first response). A 2.5GB wallet is just outright broken-assuming that it\'s not somehow responsible for 5% or more of all Bitcoin transactions which have ever happened," and we should figure out whats causing that. This ecosystem has enough irresponsible behavior from people patching over issues instead of fixing things. We don\'t need to add more.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,25,2014-11-28 14:25:02,739.7,,1,,"b'b"" @arnuschky Nobody is saying that scaling problems shouldn\'t be addressed. The reason the wallet is slow is not because the file is large", but because all transactions are loaded into memory, and almost all operations iterate over all of them. It\'s been suggested  to remove old fully-spent ones from memory at loading time," which is much less invasive instead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,26,2014-11-28 14:25:02,998.25,1,,,b'b\' Yes, sorry for taking this discussion further than needed. I keep forgetting that these are PRs for merging into the bitcoin core mainline, and this kept arguing that this patch has merit for some  applications. Regarding a more constructive direction of discussion: is someone working on a new wallet implementation? If yes, ? Is there a featureor task-list? Can we contribute? I guess you are referring to the work of @jonasschnelli and #5752, #5758, #5744, #5761, #5745, no? @gmaxwell What\\\'s a normal wallet size for, say," 1 million transactions? What\\\'s ""normal"" unbroken use for you? @cozz Thank you for your work and your reply. I\\\'ll have a look at the other PRs and debug this one. It might be hacky", but it\\\'s the only way how we can keep running in the current situation even if this solution is only temporary.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,27,2014-11-28 14:25:02,489.13,,1,,"b'b"" @arnushky: I\'m willing to spend around 20-30h a week in  the wallet. #5761 should be the ticket to discuss wallet related improvements. I don\'t have a final wallet concept in my mind. Regarding this issue", I\'d prefere to write scripts or preforget regtests-wallet-and-blocks-datadir with huge amount of transaction to track down the problems and find solutions to handle such sizes.IMO a 2.5GB wallet must be totally unoptimized. Please have a look at the logdb wallet storage work. There is also a rewriting function. With this new storage backend," the wallet file should not be much bigger then all wtx serialized (+count(wtx)*(keysize+8bytechecksum)).Of course you have to add the amount of keys and metadata to the calculation. And handling a 1mio wtx wallet should not be the main scope. It should work but could require large amount of free ram and probably a slowdown of some wallet related functions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,28,2014-11-28 14:25:02,834.67,,,1,b'b\' @jonasschnelli thanks for your answer and all your effort. We will have a look at your logdb wallet as soon as we resolve our current scalability issues. However," I do not understand what you mean by ""I\\\'d prefere to write scripts or preforget regtests-wallet-and-blocks-datadir ""? On the long run", I think a wallet must be able to handle 1mio transactions, even though it might not be the main scope right now.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5389,closed,-,-,-,8,13,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,opened,2014-12-27 17:40:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,title,2014-12-27 17:40:58,00:00,,1,,"b""b' rename checkwork'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,body,2014-12-27 17:40:58,00:00,,1,,"b""b' not sure if this isupposed to be going one way or the other"," so i renamed it to match'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,1,2014-12-27 17:40:58,1042.0,,1,,"b""b' Is that function used anywhere? The build should break if you just rename it??'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,2,2014-12-27 17:40:58,607.65,,1,,"b'b"" The declaration of is in only. It is not defined at all. See #4603 for more details. The new function is used in only", and only after its definition," we do not need it there at all... I\'d just delete the line.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,3,2014-12-27 17:40:58,726.65,,1,,"b""b' ACK The current defined function in ( ) as no implementation because it was renamed in #4603 (but header was not updated).This PR makes totally sense.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,4,2014-12-27 17:40:58,41.97,,1,,"b""b' @bitcreditscc Even better would be to completely remove the definition in the header.There is no use outside of .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,5,2014-12-27 17:40:58,56.63,,1,,"b'b"" ok i\'ll do that however on my own tree i still keep getwork ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,closed,2014-12-29 10:57:10,1036.2,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,reopened,2014-12-29 10:57:34,0.4,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,6,2014-12-27 17:40:58,336.45,,,1,"b""b' Good catch", but I went for removal + make static instead," see 269d8ba'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,closed,2015-01-02 16:37:21,339.78,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5549,closed,-,-,-,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,opened,2014-12-29 20:51:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,title,2014-12-29 20:51:02,00:00,,1,,"b""b' Updated license date'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,body,2014-12-29 20:51:02,00:00,,1,,"b""b' Changed 2014 to 2015 in preparation for new year'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,1,2014-12-29 20:51:02,245.35,,1,,"b'b"" It\'s not yet 2015"," and we\'re planning to get rid of those year markers anyway (they don\'t seem to be legally required).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,closed,2014-12-30 00:56:24,245.37,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,2,2014-12-29 20:51:02,3.12,,1,,"b'b"" I didn\'t notice that this was in the COPYING file", and not one of the source files. We do want to update it there," I suppose.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,reopened,2014-12-30 00:59:30,3.1,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,3,2014-12-29 20:51:02,333.75,,1,,"b'b"" Yes", we\'ll want to keep this in COPYING. But indeed," don\'t do this on the source files anymore.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,closed,2014-12-31 08:40:50,461.33,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5566,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,opened,2015-01-03 15:50:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,title,2015-01-03 15:50:04,00:00,,1,,"b""b' Policy: Create CPolicy interface and CStandardPolicy class implementing it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,body,2015-01-03 15:50:04,00:00,1,,,"b'b\' First steps for encapsulating the policy code.An interface (abstract class) CPolicy and a concrete implementation CStandardPolicy are created.""Users"" (people capable of modify and build Bitcoin core) can implement alternative policies and select them with the option -policy=. They can define new policy options and make their help messages be accesible to the users without having to touch ", only modifying  is enough for all this. The help messages can also be accessed (per available policy) as a vector of string pairs to make it easier to implement a GUI to configure those options (although I don\\\'t plan to do that myself).As more parts of the policy code move to ," this encapsulation gets more useful. To start using it. The function ::IsStandard() is turned into a method: ApproveScript().Many more policy-related improvements can be cleanly proposed after this first steps are merged. OUTDATED:This is an attempt to get a first commit for moving policy-related code together as proposed in #4943.The main purpose of this PR is therefore discuss the commit ""Policy: Create CPolicy interface and CStandardPolicy implemention"" url  which may change with suggestions.The commit ""Policy: MOVEONLY: ::IsStandard() -The commit ""Policy: Refactor: Move datacarrier policy logic to policy.o"" url  is an example of adding an attribute to CStandardPolicy without exposing it on CPolicy or exposing CStandardPolicy itself.An example of a crazy custom policy that a user could implement for its local node can be found in url  The commit ""Policy: Refactor: Move datacarrier policy logic to policy.o"" may be considered too risky and may be left for later to avoid delaying the first step. Maybe url  is not welcomed. It is only necessary if you want to make InitPolicyFromArgs() and CPolicy::InitFromArgs() param mapArgs const and don\\\'t want to duplicate code. I am very sorry for letting the ut acks rot.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,1,2015-01-03 15:50:04,1406.98,,1,,"b""b' Untested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,2,2015-01-03 15:50:04,208.22,,1,,"b""b' @Diapolo Added a squashme commit to fix the include nit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,3,2015-01-03 15:50:04,285.2,,,1,"b'b"" Squashed @diapolo\'s nit. Also rebased.Does people agree that InitPolicyFromCommandLine() is a good idea to squash its commit?@luke-jr ?Now there\'s 3 more commits from #5180 that I think you can agree with. You also moved main::IsStandardTx() and main::AreInputsStandard() in the more advanced policy branch you showed me (luke-).The difference is that I\'m also moving some  they use to policy.o at the same time and that I\'m moving things to InitPolicyFromCommandLine() from .Well", and that I\'m moving these two functions before creating the class, while you create 4 new  when you create the class.Our main disagreements seem to be in the way we access the class and the abstract , as well as on policy.o depending on main.o.But since this PR is about an uncontroversial start on policy.o, I think I could extend this PR with those movements and it will still make #5114, #5180, a rebased version of #5071 and any other policy-related PR easier to review.What do you think," should I bring more commits from #5180 here? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,4,2015-01-03 15:50:04,986.9,,1,,"b'b"" ACK"," although I don\'t think we ought to be claiming copyright on policy.h yet as it contains no copyrightable content.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,5,2015-01-03 15:50:04,272.28,,,1,"b""b' Thanks.Well"," making later commits smaller is the whole point and putting the copyright text already serves that purpose.Should I squash the second commit then?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,6,2015-01-03 15:50:04,1307.7,,1,,"b""b' Squashed to a single commit. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,7,2015-01-03 15:50:04,462.92,1,,,"b'b\' I\\\'m sorry for changing the PR again but the goal was always to find a common base and hopefully make later policy-code movements cleaner.I think IsStandard(CStript) with luke\\\'s commits is a good example that will likely be easy to maintain.All those functions and interfaces like Policy(""standard"") allow you to easily create your own crazy policy and activate it with as shown in the example url  without causing the tests to fail .\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,8,2015-01-03 15:50:04,602.33,1,,,"b'b"" Well", I\'m sorry," the latest version is actually failing on windows... ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,9,2015-01-03 15:50:04,79.2,,1,,"b""b' There was a bug in . I updated the code and the initial description.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,10,2015-01-03 15:50:04,189.42,,1,,"b""b' Rebased on top of #5696 and updated the initial description adding new links to commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,11,2015-01-03 15:50:04,219.43,,1,,"b'b"" @dexX7 this is just a proof of concept branch to make sure everyone is in the same page when it comes to the interface (the abstract class)", the functions to initialize the policy," etc.It is not complete. See #5768 for a more complete branch (which includes your suggestion).I\'m mostly waiting for @luke-jr  on the interface to rebase and reduce the scope of this PR to something relatively trivial (leave  d66803e for later).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,12,2015-01-03 15:50:04,1154.43,,1,,"b'b"" Updated with @luke-jr \'s suggestions: 1) Replace ValidateX with ApproveX2) Added a method to the CPolicy interface to make GUI-based policy configuration easier. This is no longer a Proof of concept"," this is ready to be merged. For more examples on how this will be used see #5768 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,13,2015-01-03 15:50:04,427.25,,1,,"b""b' Fixed the redundancies but MANDATORY_SCRIPT_VERIFY_FLAGS remains in @luke-jr is that a nack for you?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,14,2015-01-03 15:50:04,1237.0,,1,,"b'b"" As discussed on IRC"," I\'ll just leave MANDATORY_SCRIPT_VERIFY_FLAGS in  for now.I believe all the nits have been solved now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,15,2015-01-03 15:50:04,201.57,,1,,"b""b' ACK 9ddf5e5f84c9450b6125d9124866d8d50c116959'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,16,2015-01-03 15:50:04,1258.0,,1,,"b""b' Needed rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,17,2015-01-03 15:50:04,327.33,,1,,"b""b' Closing until #5696 is resolved'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,closed,2015-04-23 00:56:15,546.18,3,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,reopened,2015-04-24 17:29:48,993.55,3,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,closed,2015-04-24 17:29:53,0.08,3,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,18,2015-01-03 15:50:04,819.12,1,,,"b'b"" I\'m sorry but I can\'t reopen this", more explanations and the rebased equivalent (needed rebase and it will also get slightly simpler after a reduced version of #5696 has been merged) to this PR in: #6068. I\'m very sorry," @luke-jr when I created this PR competing with #5071 it wasn\'t my intention to slow things down with policy. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5595,closed,-,-,-,4,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,opened,2015-01-06 23:04:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,title,2015-01-06 23:04:17,00:00,,1,,"b'b"" Windows client can\'t handle sudden shutdown or system reboot""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,body,2015-01-06 23:04:17,00:00,1,,,"b""b' If client is running in Windows and system experiences a hard reboot or shutdown"," the entire block chain needs to be re-downloaded next time application is launched.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,1,2015-01-06 23:04:17,720.63,1,,,"b'b"" That has nothing to do with windows.Switching off the computer at unexpected times can result in disk corruption at the hardware", OS or application level. It is possible to build in some robustness to this, e.g. by writing in log-like format and limiting the amount of write buffering," but in the general case something can go awfully wrong and require a rebuild.This is why important computing equipment is protected by UPSes and such. One correction though: you don\'t generally need to re-download the blockchain. Using -reindex to rebuild the block and utxo databases should be enough.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,closed,2015-01-07 11:04:55,720.63,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,reopened,2015-01-08 08:45:51,1300.93,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,2,2015-01-06 23:04:17,1301.55,,1,,"b""b' Reopening this as it could be a real issue. What version of Bitcoin Core are you using? Was this during the initial sync or was the node synchronized?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,3,2015-01-06 23:04:17,155.53,,1,,"b""b' A similar report: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,4,2015-01-06 23:04:17,691.02,,1,,"b'b"" I\'m using 0.10.0rc1 for Windows 7 (64 bit system).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,5,2015-01-06 23:04:17,885.02,,1,,"b'b\' To clarify ""real issue"" from my perspective;  especially on random consumer  we cannot reasonably expect that it will _never_ become corrupted on an unclean power off; because there has been quite a bit of broken stuff out there that scribbled randomly on the disk in the case.  But at the very least it should be rare.  If it isn\\\'t rare it may indicate another problem.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,6,2015-01-06 23:04:17,84.68,1,,,"b'b"" I was surprised to find write-ahead caching to be enabled by default on Windows 8.1 on an ordinary office computer.  I\'m guessing that would increase the chances of lots of data loss from a system crash or unexpected power off.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,7,2015-01-06 23:04:17,283.45,,1,,"b'b"" I\'m running 0.10.2 and it is the chainstate that gets corrupted. That was also the case with 0.10.x but not with 0.9.x.Log: Since multiple files are used for the DB shouldn\'t only the latest be rebuilt?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,8,2015-01-06 23:04:17,592.85,,1,,b'b\' Are you talking about  or bitcoin-? The GUI version takes a countermeasure," if you are doing a ""normal"" shutdown while the client is running", it prevents shutdown until the client has exited (WinShutdownMonitor).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,9,2015-01-06 23:04:17,16.18,,1,,"b""b' FWIW", since switching from 0.8 to 0.10, any unclean shutdown at the hardware level (ie," more than kill -9) has resulted in a corrupt index needing rebuild... on Linux.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,10,2015-01-06 23:04:17,1076.65,1,,,"b""b' bitcoinand this happened due to power loss.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,11,2015-01-06 23:04:17,1115.23,1,,,"b""b' Running 0.11rc2 on Windows 7 64bit. Had a power loss. 2015-07-06 18:21:14 \\\\* Using 2.0MiB for block index database2015-07-06 18:21:14 \\\\* Using 32.5MiB for chain state database2015-07-06 18:21:14 \\\\* Using 65.5MiB for in-memory UTXO set2015-07-06 18:21:14 init message: Loading block index...2015-07-06 18:21:14 Opening LevelDB in C:\\\\Users\\\\PRabahy\\\\AppData\\\\Roaming\\\\Bitcoin\\\\blocks\\\\index2015-07-06 18:21:15 Opened LevelDB successfully2015-07-06 18:21:15 Opening LevelDB in C:\\\\Users\\\\PRabahy\\\\AppData\\\\Roaming\\\\Bitcoin\\\\chainstate2015-07-06 18:21:15 Corruption: error in middle of record'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,12,2015-01-06 23:04:17,5.53,,1,,"b'b"" This happens while reading the log: Could this be the leveldb short writes issue again? We\'ve recently enabled paranoid checks (#4177)", which shouldn\'t trigger in case of incomplete writes in case of leveldb 1.15+," but maybe there is something else too where paranoid checks are too paranoid. @luke-jr what error do you see on LInux?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,13,2015-01-06 23:04:17,115.62,,1,,"b""b' Could it be that LevelDBs development is dead? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,14,2015-01-06 23:04:17,800.55,,1,,"b""b' Closing this in favour of #7233"," which has more extensive & recent discussion.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,closed,2016-10-10 09:48:47,62.93,5,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5610,closed,-,-,-,5,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,opened,2015-01-09 16:08:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,title,2015-01-09 16:08:52,00:00,,1,,"b""b' bug in DateTimeStrFormat?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,body,2015-01-09 16:08:52,00:00,,,1,"b""b' Who can explain it to me? Using 0x7FFFFFFFFFFFFFFF (9223372036854775807"," maximum of int64_t) prints:1969-12-31 23:59:59 0x7FFFFFFFFFFFFFFF + 1 prints:1970-01-01 00:00:00 0xFFFFFFFFFFFFFFFF prints:1969-12-31 23:59:59 0 prints:1970-01-01 00:00:00'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,1,2015-01-09 16:08:52,37.83,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,2,2015-01-09 16:08:52,353.75,1,,,"b""b' @jonasschnelli Are you sure that we suffer from that problem or is it something different here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,3,2015-01-09 16:08:52,42.48,,,1,"b'b"" When the int64 0x7FFFFFFFFFFFFFFF is converted to a 32-bit time_t", it becomes 0xFFFFFFFF," which is -1. so you\'re really passing -1. 1 second before Epoch is 1969-12-31 23:59:59.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,4,2015-01-09 16:08:52,2.55,,1,,"b""b' I really had the impression Bitcoin Core would be using real 64 bit values for time or is that a Boost limitation currently? My compiler is a x64 one (MinGW).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,5,2015-01-09 16:08:52,589.23,,,1,"b'b"" We use int64_t for time internally", but that doesn\'t mean that e.g. the OS or dependency libraries for time formatting and parsing can handle the full range. E.g. in this case takes a  , as it says on the tin.So in theory if your build environment has a 64-bit std::time_t (this is the case here), it should handle 0x7FFFFFFFFFFFFFFFLL. But I get the same result. So this may be a bug in boost," or somewhere else down the line.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,6,2015-01-09 16:08:52,182.42,,1,,"b""b' Is it this one url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,7,2015-01-09 16:08:52,40.5,,1,,"b""b' Huu.. opened 4 years ago"," last edit 3 years ago.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,8,2015-01-09 16:08:52,1424.92,,1,,"b""b' From what I can tell", this has been fixed in date_time (Boost ticket 4543), and the changes have been merged into Boost as part of 1.64.0," which we are now using.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,closed,2018-03-09 03:44:32,695.67,1,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,9,2015-01-09 16:08:52,1187.7,,1,,"b""b' @meshcollider I don\\xe2\\x80\\x99t think this will actually be fixed until Boost 1.67.0?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,reopened,2018-03-09 08:30:15,285.72,1,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,10,2015-01-09 16:08:52,1147.68,,1,,"b'b"" Can this be closed? We\'re not using DateTimeStrFormat after #12973""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,closed,2018-09-10 03:39:18,1149.05,1,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5631,closed,-,-,-,1,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,opened,2015-01-14 08:19:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,title,2015-01-14 08:19:11,00:00,,1,,"b""b' [OSX] 0.10.0 rc3 osx probably has issues with special chars'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,body,2015-01-14 08:19:11,00:00,,1,,"b""b' Focus on the balance value fields. ![bildschirmfoto 2015-01-14 um 09 18 15]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,1,2015-01-14 08:19:11,6.52,,1,,"b""b' related to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,2,2015-01-14 08:19:11,36.55,,,1,"b""b' on osx 10.7 and 10.9 it looks okay: ![bildschirmfoto 2015-01-14 um 10 00 44]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,3,2015-01-14 08:19:11,651.72,,1,,"b'b"" We\'ve tracked this issue down to the sdk used to build qt. When built with >= 10.8 sdk", qt uses new apis to discover fonts, rather than the old unreliable methods. For master, we should bump up to a newer SDK. For 0.10, we have a few options. Some background info on SDKs: url  Options:Remove the thin-space stuff for 0.10, possibly only for osx 10.10. That wouldn\'t address #5165.Build 0.10 against 10.8Track down the font loading failure and attempt to insert a work-around like 292cc072f3bada256bc6af9970512eb9dec8d93a I\'d prefer to do the last one," if it\'s possible. Looking into it now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,4,2015-01-14 08:19:11,29.33,,1,,"b'b"" I\'ve pushed up a possible fix for 0.10"," but I\'m unable to test: url  A binary is here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,5,2015-01-14 08:19:11,312.03,,1,,"b""b' Tested on OSX 10.10.1"," does NOT fix the problem (boxes instead of thin spaces if I set display to uBTC).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,6,2015-01-14 08:19:11,392.35,,1,,"b""b' As reported on IRC url  same issue on my osx 10.10 Retina with  I was always a friend of dropping old os version from the support matrix. 10.8 was released in Feb 2012. 10.7 in Juli 2011.But i assume others wish better backward compatibility and dropping 10.7 will probably make people whine about it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,7,2015-01-14 08:19:11,11.15,,1,,"b'b"" I\'m not a fan of dropping support for a four year old OS just for a cosmetic glitch. But a shorter support cycle is inevitable if they wildly change the API every release. The extra work for supporting a certain release quickly outweighs the gain. Win32 is full of holes otherwise but at least extremely backwards compatible. But for 0.10 it\'s too late to change supported OSes. Could bump the minimum to 10.8 for 0.11. Can we package a fallback font in the OSX dmg? For the THIN SPACE I\'m not worried"," but I would like to support Chinese (e.g. #5165).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,8,2015-01-14 08:19:11,10.08,,1,,"b""b' related: url and: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,9,2015-01-14 08:19:11,10.8,,1,,"b'b\' @theuni:didn\\\'t went deep on that. But i saw you did gave a font substitute for the internal ""special"" OS font:  After a quick research i came to the point that this special . font your substituting could have a different font map. I saw that others create replacement for this .OS font url  Maybe the substitute for this font should also be in the same format?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,closed,2015-01-15 08:39:43,20.53,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,10,2015-01-14 08:19:11,0.5,,1,,"b""b' sry. wrong button'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,reopened,2015-01-15 08:40:13,0.5,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,11,2015-01-14 08:19:11,636.03,1,,,"b'b"" @laanwj That build was just a test to see where the floor for fixed builds was. @jonasschnelli also confirmed that the build against 10.8 with 10.6 back-compat worked: url  . @gavinandresen Could could you verify? I\'d rather not bump to using the 10.8 sdk for 0.10 now that the build process is settled", but I\'m not sure what choice we have if it fixes #5165 as well. @laanwj Looking into shipping the fonts. I suppose I\'ll go ahead and upgrade to 10.10 in order to test," seems that\'s the major trouble-case these days.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,12,2015-01-14 08:19:11,198.82,,1,,"b""b' e0cd2f55 fixes the issue for me on OSX 10.10.1.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,13,2015-01-14 08:19:11,55.63,,1,,"b'b"" @gavinandresen hmm? I\'m not seeing the connection.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,closed,2015-01-19 11:32:05,171.87,1,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5657,closed,-,-,-,1,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,opened,2015-01-15 18:12:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,title,2015-01-15 18:12:56,00:00,,1,,"b""b' ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too large'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,body,2015-01-15 18:12:56,00:00,,1,,"b""b' Client info 2015-01-15 18:15:21 Bitcoin version v0.10.99.0-4f73a8f-dirty (2015-01-09 20:21:19 -0800)2015-01-15 18:15:21 Using OpenSSL version OpenSSL 1.0.1f 6 Jan 20142015-01-15 18:15:21 Using BerkeleyDB version Berkeley DB 5.3.28: (September  9", 2013)2015-01-15 18:15:21 Default data directory /2015-01-15 18:15:21 Using data directory /2015-01-15 18:15:21 Using config file /2015-01-15 18:15:21 Using at most 200 connections (1024 file descriptors available)2015-01-15 18:15:21 Using 0 threads for script verification2015-01-15 18:15:21 Binding RPC on address ::1 port 8332 (IPv4+IPv6 bind any: 0)2015-01-15 18:15:21 Binding RPC on address 127.0.0.1 port 8332 (IPv4+IPv6 bind any: 0)2015-01-15 18:15:21 Using wallet 2015-01-15 18:15:21 init message: Verifying wallet...2015-01-15 18:15:21 CDBEnv::Open : LogDir=/ ErrorFile=/2015-01-15 18:15:21 Bound to [::]:83332015-01-15 18:15:21 Bound to 0.0.0.0:83332015-01-15 18:15:21 init message: Loading block index...2015-01-15 18:15:21 Opening LevelDB in /2015-01-15 18:15:22 Opened LevelDB successfully2015-01-15 18:15:22 Opening LevelDB in /2015-01-15 18:15:28 Opened LevelDB successfully2015-01-15 18:15:32 LoadBlockIndexDB: last block file = 2182015-01-15 18:15:32 LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=274, size=115501816, heights=338812...339085, time=2015-01-13...2015-01-15)2015-01-15 18:15:32 Checking all blk files are present...2015-01-15 18:15:32 LoadBlockIndexDB(): transaction index disabled2015-01-15 18:15:32 LoadBlockIndexDB(): hashBestChain=0000000000000000188de542fd76b1676c4be6c380b39ddea119358c290cebd7 height=339085 date=2015-01-15 18:07:14 progress=0.9999872015-01-15 18:15:32 init message: Verifying blocks...2015-01-15 18:15:32 Verifying last 288 blocks at level 3 log before crash 2015-01-13 22:15:27 UpdateTip: new best=0000000000000000159e7d66c954312bccb5f12de808f2991b3859205665c442  height=338819  log2_work=81.997891  tx=56658614  date=2015-01-13 22:14:41 progress=0.999999  cache=69692015-01-13 22:15:58 ResendWalletTransactions()2015-01-13 22:17:06 receive version message: /Satoshi:0.9.2/:0.1/: version 70002, blocks=338819, us=84.215.171.162:8333, peer=28552015-01-13 22:17:25 receive version message: /libbitcoin:2.0/: version 60000, blocks=0, us=10.0.0.1:8333, peer=28562015-01-13 22:17:25 Added time data, samples 200, offset -5 (+0 minutes)2015-01-13 22:18:06 socket recv error Connection reset by peer (104)2015-01-13 22:18:13 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=84.215.171.162:8333, peer=28572015-01-13 22:18:31 receive version message: /:0.1/: version 70002, blocks=338818, us=84.215.171.162:8333, peer=28582015-01-13 22:19:16 receive version message: /Satoshi:0.9.3/: version 70002, blocks=338817, us=84.215.171.162:8333, peer=28592015-01-13 22:19:16 Added time data, samples 200, offset -2 (+0 minutes)2015-01-13 22:19:32 receive version message: /Snoopy:0.1/: version 60001, blocks=0, us=84.215.171.162:8333, peer=28602015-01-13 22:19:47 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=84.215.171.162:8333, peer=28612015-01-13 22:22:36 receive version message: /:0.1/: version 70002, blocks=338819, us=84.215.171.162:8333, peer=28622015-01-13 22:22:44 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:22:45 receive version message: / Mapper:0.01/: version 60000, blocks=230000, us=84.215.171.162:8333, peer=28632015-01-13 22:22:47 receive version message: /BitCoinJ:0.11.2/MultiBit:0.5.18/: version 70001, blocks=338819, us=127.0.0.1:8333, peer=28642015-01-13 22:22:47 Added time data, samples 200, offset +10 (+0 minutes)2015-01-13 22:23:00 receive version message: /Satoshi:0.8.4/: version 70001, blocks=338819, us=84.215.171.162:8333, peer=28652015-01-13 22:23:00 Added time data, samples 200, offset -7 (+0 minutes)2015-01-13 22:23:53 receive version message: /Satoshi:0.8.2.2/: version 70001, blocks=336635, us=84.215.171.162:8333, peer=28662015-01-13 22:23:53 Added time data, samples 200, offset +14 (+0 minutes)2015-01-13 22:24:13 receive version message: /Satoshi:0.9.3/: version 70002, blocks=338735, us=84.215.171.162:8333, peer=28672015-01-13 22:24:13 Added time data, samples 200, offset -5 (+0 minutes)2015-01-13 22:25:06 receive version message: /Snoopy:0.1/: version 60001, blocks=0, us=84.215.171.162:8333, peer=28682015-01-13 22:25:49 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=84.215.171.162:8333, peer=28692015-01-13 22:26:33 UpdateTip: new best=00000000000000001829e20898eaff72aa667d3715a94535afae5ae7ada07bc0  height=338820  log2_work=81.997947  tx=56659414  date=2015-01-13 22:25:41 progress=0.999999  cache=95962015-01-13 22:26:35 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:26:43 ERROR: AcceptToMemoryPool : nonstandard transaction: dust2015-01-13 22:26:48 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:26:58 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:27:01 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=84.215.171.162:8333, peer=28702015-01-13 22:27:20 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:27:22 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:27:46 UpdateTip: new best=000000000000000008b332686e0043a4b95ca7e46d1b0785536981b543dfc755  height=338821  log2_work=81.998004  tx=56659415  date=2015-01-13 22:36:09 progress=1.000013  cache=97062015-01-13 22:28:29 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:28:34 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:28:48 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:28:52 receive version message: /:0.1/: version 70002, blocks=338819, us=84.215.171.162:8333," peer=28712015-01-13 22:29:22 ERROR: AcceptToMemoryPool : inputs already spent2015-01-13 22:30:29 ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too large2015-01-15 18:02:07 '"""
bitcoin,5668,closed,1,2015-01-15 18:12:56,807.55,,1,,"b""b'   means there was a read from a block file on disk"," which is larger than 32 MiB. I dunno why that can happen to be honest...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,2,2015-01-15 18:12:56,68.58,,1,,"b'b"" I\'ve used the version that comes with  Ubuntu 14.04", I can do an upgrade ifthat is the cause of the problem. -fOn Fri, Jan 16, 2015 at 8:41 AM," P. Kaufmann notifications@wrote:##  Mvh-fredrik-normannSent from my Gmail Account""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,3,2015-01-15 18:12:56,2.32,,,1,"b'b"" @diapolo  NOOOOOO don\'t go around telling people to upgrade their OpenSSL. Remember it\'s 1.0.1k that _breaks_ things.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,4,2015-01-15 18:12:56,1.17,,1,,"b""b' BTW: this looks like disk corruption in the block files ( ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,5,2015-01-15 18:12:56,4.15,1,,,"b""b' @laanwj Sorry"," removed the comment! You are right!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,6,2015-01-15 18:12:56,4.97,,1,,"b""b' @laanwj Back to the actual error", IMHO (after looking through the code) I dived down until reaching in serialize.h. There is called which contains check. Am I right, that this means we tried to read a chunk larger that 32MiB, which fails this check? Addition: You also mind checking where is used in our code," do we need some  limits there???'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,7,2015-01-15 18:12:56,12.02,1,,,"b'b"" That\'s a belt-and-suspenders sanity check. Blocks are never larger then 1 MB at the moment", so if there is data on disk that pretends to be a >32MiB chunk, something is corrupted and it\'s correct to throw an error.(better than, say, trying to read 4GB of data and running out of memory before throwing an error, or worse, overwriting other parts of memory)Unless you spot critical issues I\'d argue against making changes to MAX_SIZE handling," it\'s deeply entwined with block handling and thus consensus.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,8,2015-01-15 18:12:56,91.43,,1,,"b'b"" @laanwj IMHO it seems we use MAX_SIZE (remember thats 32MiB) also in  "," and  . Isn\'t that a bit large for these things?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,9,2015-01-15 18:12:56,39.07,1,,,"b'b"" @diapolo IMO it\'s exactly the right size. It allows some breathing room. E.g. if block sizes would increase"," or if other protocol messages would encode for larger objects. As said let\'s not change this unless necessary by a concrete issue. It _is_ a bit weird that the same constant is used for both P2 message checking and HTTP limitations.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,10,2015-01-15 18:12:56,1409.27,,1,,"b""b' So then why not have separate constants for these that coincidentally have the same 32MB value?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,11,2015-01-15 18:12:56,134.05,1,,,"b'b"" this could be or usb controller bugs. The node runs in a vm on a disk thatis connected with usb 3.0 I\'ve had problems with this before", but it\'s hardto tell from the error message. On Fri, Jan 16, 2015 at 9:53 AM," Wladimir J. van der Laan <notifications@##  Mvh-fredrik-normannSent from my Gmail Account""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,12,2015-01-15 18:12:56,413.67,1,,,"b""b' Still getting this. Disk is stable now. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,13,2015-01-15 18:12:56,5.85,,1,,"b'b"" It is accepting blocks succesfully. AcceptToMemoryPool aren\'t an issue"," they are errors in a transaction that a peer is sending.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,14,2015-01-15 18:12:56,2.72,,,1,"b'b"" Thanks"," then I\'ll close it. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,closed,2015-01-19 20:09:45,116.82,5,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,15,2015-01-15 18:12:56,1377.63,,1,,"b'b"" I\'ve hit this a couple times now running Bitcoin Core Daemon version v0.10.0rc3 on Debian 7.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,16,2015-01-15 18:12:56,221.68,,1,,"b'b\' My bitcoind crashed a third time this week now on ""ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too large"". I\\\'m running a pretty vanilla setup: v0.10.0rc3 on an EBS-backed AWS instance whose only job in life is to run bitcoind", which does nothing but act as a relay node with the default params. I\\\'ll take the opportunity of my bitcoind being down to upgrade to rc4, which I see was released yesterday, and see if that helps. Please let me know if there\\\'s anything I can do to provide information about this recurring failure mode in the release candidate.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,17,2015-01-15 18:12:56,805.5,1,,,"b'b"" Assert  Info from init I\'ve run fsck on host drive. Bitcoin node is running in kvm guest. No bad blocks. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,reopened,2015-02-15 12:14:33,964.8,6,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,18,2015-01-15 18:12:56,762.5,,1,,"b""b' I have had this error 3 times now over the past few weeks.  I am using the BitcoinXT fork though url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,19,2015-01-15 18:12:56,1012.5,,1,,"b""b'   Exit status from bitcoind  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,20,2015-01-15 18:12:56,1433.87,,1,,b'b\' Reporting in: just experienced the same error," also on an EBS-backed AWS instance. The node in question was built from the 0.10.0 release and was completely synced. ""ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too large"" No errors reported by the AWS instance that indicate any issues with EBS.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,21,2015-01-15 18:12:56,213.8,,1,,"b""b' We really need to see the directory when this happens to be able to analyse this...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,22,2015-01-15 18:12:56,7.22,,1,,"b""b' What do you mean? What do you need access to? ssh? On Fri", Feb 20, 2015 at 10:17 PM," paveljanik notifications@wrote:##  Mvh-fredrik-normannSent from my Gmail Account'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,23,2015-01-15 18:12:56,15.02,,,1,"b'b"" No! directory only. But I can\'t help here because of my connectivity ;-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,24,2015-01-15 18:12:56,2.75,,1,,"b'b"" Not a big deal with giving you ssh access. It\'s just a vm and I can set a random password for that user. But maybe I can help with checking out the dir. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,25,2015-01-15 18:12:56,2.12,,1,,"b""b' url  <-This is what it looks like'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,26,2015-01-15 18:12:56,1353.05,,1,,b'b\' My AWS node crashed on this error again and is currently in its post-crash state. Is there any information I can provide that would help to debug the issue? Alternatively," should I set debug logging on ""db"" and start the node up again?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,27,2015-01-15 18:12:56,47.58,,,1,"b'b"" Digging more into the  for the recent crash: 2015-02-21 05:08:50 UpdateTip: new best=00000000000000000e0d175f7f6c657d6dce5e0d909cafeb643b82d776110f25  height=344475  log2_work=82.281381  tx=60272692  date=2015-02-21 05:08:53 progress=1.000000  cache=5508[SNIP peers connecting]2015-02-21 05:18:21 ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too large Without actually having a stack trace to reference", my best guess based upon the timing of the crash was that bitcoind was in the ConnectTip function of  at line 2061. This is because the crash occurred right when Block #344476 was announced: url  However, it also makes sense that it\'s occurring at :3377: void ProcessGetData(CNode*) if this is some sort of race condition. Perhaps bitcoind is handling a GetData request for this block before it has been completely stored to disk? The timing seems too coincidental. Aside from the fact that there seems to be a bug in the logic that streams the blocks from disk," is it really the appropriate behavior for this error to result in a shutdown of bitcoind? It seems like we could handle the error more gracefully.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,28,2015-01-15 18:12:56,34.12,,1,,"b""b' Just out of curiosity"," what happens if you fsck your EBS volume?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,29,2015-01-15 18:12:56,16.22,,1,,"b""b' @ajweiss I get;cloudimg-rootfs: clean", 94748/3932160 files, 11933728/15725626 blocks I have even gone as far as provisioning a new ebs disk," re-syncing to the new disk and I will still occasionally get the crash.  Nothing has shown up in a fsck yet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,30,2015-01-15 18:12:56,0.82,,1,,"b""b' fsck reports that the file system is clean'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,31,2015-01-15 18:12:56,11.25,,,1,"b'b"" This is very interesting.  It hasn\'t shown up on any of our nodes"," but none of ours are on .  Are all of you that are seeing this on ?  Which AMI?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,32,2015-01-15 18:12:56,8.97,,1,,"b'b"" This has only occurred to me on nodes running AWS where bitcoind\'s data directory is on an EBS volume. This instance is using the ubuntu-trusty-14.04-amd64-server-20150123 AMI""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,33,2015-01-15 18:12:56,8.93,,1,,"b""b' ubuntu-trusty-14.04-amd64-server-20140927 (ami-3d50120d) on my AWS install.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,34,2015-01-15 18:12:56,649.95,,1,,"b""b' libvirt-bin and kvm virtulized on a Intel NUC @ home. fsck both on host andguest reports that filesystem is clean. On Mon", Feb 23, 2015 at 11:25 PM," Neil Fincham notifications@wrote:##  Mvh-fredrik-normannSent from my Gmail Account'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,35,2015-01-15 18:12:56,745.72,1,,,b'b\' Update: We created a new EBS volume on the machine that was crashing from this error and rsynced the block chain data over to it. We then ran bitcoind while pointing to that data. It experienced the same error and crashed every 12 24 hours. We then took the original EBS volume and rsynced block chain data from a different AWS machine (also running 0.10) that has not been crashing. We started bitcoind pointing to this data and it has been running solidly for nearly a week without crashing. Conclusions: while this issue may be somehow related to EBS," it doesn\\\'t appear to be due to a specific EBS volume being ""bad."" The problem appears to be in the block chain data itself. We have a copy of this data that we can make available if any core developers want to look at it.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,36,2015-01-15 18:12:56,599.03,,1,,"b'b"" I\'m having the same issue.  I\'m running bitcoind v0.10 (no GUI", no wallet compiled in) on a Raspberry Pi 2 running the latest Raspbian.  I know the issue appears disk-related but I don\'t believe my root filesystem or  to it are the problem.  Root has been moved off the micro sdcard and onto a Sandisk Extreme Pro USB drive.  When the problem occurs (every 12-24 hours typically) I simply restart bitcoind, it catches up on the blockchain and it continues processing.  fsck has not found any corruptions.  Latest instance of the issue: 2015-03-04 10:26:40 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=118.208.160.171:8333, peer=79252015-03-04 10:27:11 ERROR: AcceptToMemoryPool : inputs already spent2015-03-04 10:27:18 receive version message: /Snoopy:0.1/: version 60001, blocks=0, us=118.208.160.171:8333, peer=79262015-03-04 10:27:23 receive version message: /Satoshi:0.8.6/: version 70001, blocks=346126, us=118.208.160.171:8333, peer=79272015-03-04 10:27:38 ERROR: AcceptToMemoryPool : inputs already spent2015-03-04 10:27:53 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=118.208.160.171:8333, peer=79282015-03-04 10:28:05 receive version message: /bitcoinseeder:0.01/: version 60000, blocks=230000, us=118.208.160.171:8333," peer=79292015-03-04 10:30:18 ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too largebitcoind: :3335: void ProcessGetData(CNode*): Assertion ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,37,2015-01-15 18:12:56,836.7,,1,,"b""b' You can grab our block data here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,38,2015-01-15 18:12:56,1393.28,,1,,"b""b'   Will it be usefull to have a look at this file? On Thu", Mar 5, 2015 at 10:37 PM," Jameson Lopp notifications@wrote:##  Mvh-fredrik-normannSent from my Gmail Account'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,39,2015-01-15 18:12:56,1314.93,,1,,"b""b' For those who have run into this: have you previously re-indexed? If so"," it could be related to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,40,2015-01-15 18:12:56,24.05,,1,,"b""b' Our nodes do index all transactions"," though to my knowledge no re-index was performed on the node that was experiencing this issue; it was a brand new node that began crashing within a few days of us bringing it online.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,41,2015-01-15 18:12:56,34.92,,1,,"b""b' Just got this on  setup as well.  @theuni  i can confirm we use indexed as well"," but have never re-indexed.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,42,2015-01-15 18:12:56,18.08,1,,,"b""b' No re-index here either BUT i have added a new EBS volume"," mounted it at /home and have done a full sync of the blockchain. For the past 5 days it has been stable whereas the original has gone down 3 times (I run daemontools so it has not been a huge issue).  I am about to switch to using it for my apps and will report back if there are any issues.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,43,2015-01-15 18:12:56,5.17,,1,,b'b\' @jlopp / @rromanchuk It\\\'d be very useful if you could run @laanwj\\\'s script from here: url  on the block files in order to narrow down the problem. I\\\'d really like to look at the block files, but it\\\'ll take me forever to download the whole thing. Steps to run:wget url untar and cd into the dir./list/ You\\\'ll need to do that for each .dat file, so it\\\'d probably be quicker to write up a quick script. In the output," you\\\'re looking for ""Overlap with last block"" or ""Block doesn\\\'t start at expected position"". If you find one of those", we could start by analyzing that file rather than the entire set.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,44,2015-01-15 18:12:56,35.48,,1,,"b""b' @MineForeman  you might be on to something"," i totally forgot I _ALSO_  detached and remounted a volume (resized)  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,45,2015-01-15 18:12:56,1.15,1,,,"b'b"" We\'ve uploaded the bad block files to url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,46,2015-01-15 18:12:56,27.88,,1,,"b""b' @theuni  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,47,2015-01-15 18:12:56,27.02,,,1,"b""b' @rromanchuk interesting"," blk00023.dat looks to be pretty well clobbered (notice the hashes). Can you make that file available somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,48,2015-01-15 18:12:56,15.22,,1,,"b""b' @theuni url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,49,2015-01-15 18:12:56,7.08,,,1,"b""b' Interestingly", the datadir that @jlopp posted also shows bogus hash values... Even more interestingly," they match!  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,50,2015-01-15 18:12:56,12.47,,,1,"b""b' @ajweiss whoa.. really nice catch. Ok", @rromanchuk and @jlopp," where did you get your initial blocks? Did you bootstrap from somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,51,2015-01-15 18:12:56,4.08,,1,,"b""b' Synced normally over the network using the 0.10 release.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,52,2015-01-15 18:12:56,5.55,,1,,"b""b' Also did not bootstrap '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,53,2015-01-15 18:12:56,8.52,,1,,"b'b"" Ok", false alrm. A quick look shows the magic bytes repeated several times very close together. See tx 4ce5a9b7141543cd8bb0a18caa94087f8d87356559e00c823f4493ef0826ef77 . The script thinks that\'s the start of a block," but those should just be ignored.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,54,2015-01-15 18:12:56,1.82,,1,,"b'b"" No bootstrap here either BUT I am using non-standard fork (BIP 64 UTXO\'s) so take everything I say with a grain of salt.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,55,2015-01-15 18:12:56,10.85,,,1,"b""b' I just compared the values from @rromanchuk and @jlopp against my own"," and there are several instances of magic bytes that we need to ignore. The ones still unaccounted for are:@rromanchuk: blk00027.dat@jlopp: blk00075.dat It would be great if we could get those hosted somewhere.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,56,2015-01-15 18:12:56,3.6,,1,,"b""b' @theuni You can grab my blk00075.dat from url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,57,2015-01-15 18:12:56,89.15,,,1,"b'b"" Something interesting in blk00075.dat:The following blocks are repeated: The hashes appear to be the same and correct correct for each duplication. The first repeat (252262) comes directly after the overlapping one. Edit: if anyone\'s curious"," here\'s more detail  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,58,2015-01-15 18:12:56,22.08,,1,,"b""b' url you can ping me on #bitcoin if you need something faster from me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,59,2015-01-15 18:12:56,3.7,,1,,"b'b"" Same thing with @rromanchuk\'s:repeated blocks:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,60,2015-01-15 18:12:56,22.0,1,,,"b'b"" Here\'s a quick and dirty script that will dump all the blockpos data from the leveldb.  I had trouble getting Core to read jlopp\'s data so I threw this together.  Hope it\'s helpful.  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,61,2015-01-15 18:12:56,3.7,,1,,"b'b"" @ajweiss could you paste the result of the dump? I\'m unable to grab his whole .tar.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,62,2015-01-15 18:12:56,8.22,,1,,"b'b\' url  Format is ""offset hash"" followed by a line that prints out the details of the CDiskBlockIndex (in case you want to see the status).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,63,2015-01-15 18:12:56,114.55,,,1,"b'b"" Based on @jlopp\'s db and blocks (using @ajweiss\'s dump", thanks!), here\'s the analysis:blk00075.dat has the following added (duplicated) blocks: and the db expects to find the following blocks, but they\'re missing: It looks as though in each of these cases of corruption (including @laanwj\'s)," this pattern of duplicated  blocks is present. I\'m still not able to explain why the wrong  are being inserted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,64,2015-01-15 18:12:56,936.45,,1,,"b""b' @jlopp @rromanchuk do you have ebs snapshots enabled? if so"," has this data been restored from a shapshot?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,65,2015-01-15 18:12:56,7.85,,,1,"b""b' @theuni yeah"," almost positive this is the one common thread.  I accidently launched an instance with the default ebs size so i had to generate  Here is roughly the steps1. ran ./bitcoind -d -txindex -daemon2. Ran for a couple hours3 ./bitcoin-cli stop4. Stopped instance5. snapshot ebs and relaunched with 150G EBS standard ssd6. ./bitcoind -daemon '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,66,2015-01-15 18:12:56,0.07,,1,,"b'b"" @theuni No", we don\'t use EBS snapshots. It seems to me that the block files became corrupted during our initial sync from peers on the network and once other peers began requesting blocks contained in the corrupted files," the node began crashing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,67,2015-01-15 18:12:56,6.62,,,1,"b'b"" @rromanchuk Thanks. I\'m not sure how much of that is necessary though"," if @jlopp managed to hit the issue without a . @jlopp I agree with that. I\'m trying to determine how the blocks can become corrupt under normal circumstances.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,68,2015-01-15 18:12:56,48.85,,1,,"b'b"" @jlopp How many ? Which AWS tier? I\'ve set one up and I\'m trying to reproduce with testnet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,69,2015-01-15 18:12:56,8.22,,1,,"b""b' @theuni Zone us-west-2a; we used a c4.8xlarge for the initial syncing and then dropped to a t2.med once it was at the current tip.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,70,2015-01-15 18:12:56,79.6,,1,,"b""b' @jlopp did you ever restart the machine when the daemon was running? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,71,2015-01-15 18:12:56,16.43,,1,,b'b\' Nope.On Mar 10, 2015 5:19 PM,"Ryan Romanchuk"" notifications@ wrote:\''
bitcoin	5668	closed	72	theuni	2015-01-15 18:12:56	381.75			+1	b'b"" I spent quite a while trying to reproduce this on a c4.8xlarge setup to match @jlopp\'s with no luck. 32cores is definitely out of the norm and could be a contributing factor, though. I synced 100% normally, sync\'d with some clean shutdowns, sync\'d with some kill -9\'s... nothing. @rromanchuk was your original sync on a high-core machine as well?""'
bitcoin	5668	closed	73	rubensayshi	2015-01-15 18:12:56	372.13			+1	b""b' 0.10 is running fine for us on ec2, but we just upgraded instead of a full resync.  maybe the problem happened after detaching and attaching the disk to the new instance'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,74,2015-01-15 18:12:56,341.7,,,1,"b""b' @jlopp"," @rromanchuk were these nodes running with listen=1 and the appropriate hole punched in the amazon firewall or did they only have outbound connections?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,75,2015-01-15 18:12:56,6.4,,1,,"b'b"" Our nodes have port 8333 open and accept inbound connections. I\'d be surprised if that makes a difference though"," because I thought a node doesn\'t advertise its address while it is still performing the historical sync.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,76,2015-01-15 18:12:56,3.43,,1,,"b'b"" They\'re not supposed to", but the block files aren\'t supposed to be corrupted," either. : )""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,77,2015-01-15 18:12:56,104.28,,1,,"b'b"" @theuni surprisingly i started syncing on a micro to just start configuring the ami and then i detached volumes"," and relaunched into the medium class. The machine was also opened and when occasionally checking netstat didn\'t see any active connections until after the sync @jlopp were you running magnetic or ssd ebs?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,78,2015-01-15 18:12:56,3.78,,1,,"b""b' @rromanchuk Our EBS volumes are SSD'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,79,2015-01-15 18:12:56,232.93,,,1,"b'b\' @rromanchuk This is starting to make some sense. I just did a reindex on a micro and it took ~40min to get to blk00027.dat. Does that sound like roughly the amount of time you left your sync running before detaching and moving to the medium class? Edit: I see above that you mentioned ""Ran for a couple hours"" before creating the snapshot and stopping the instance. Any chance it was ~40min? If not", did anything interesting happen at about that point?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,80,2015-01-15 18:12:56,45.87,1,,,b'b\' @theuni  It was something like that, i wish i would have had detailed cloudwatch events being logged so I could have played back exactly what I did," it would help reveal what really  incase i did something loose and fast with ebs .  @theuni if i were to do a ""fresh install"" is the best way to just shut down and wipe out my  directory?  This really shouldn\\\'t be a factor but i\\\'m going to say it anyways", after i synced, i ran insight\\\'s sync, which is 100% not compatible with 0.10.0 unless you manually send in a forced RPC flag. Of course they don\\\'t document this except for a closed issue. They load their db by reading the indexed blocks, i can\\\'t imagine  they would do anything but read, but programmers are programmers. The fact that anything is accessing data from that folder besides bitcoind makes me a bit suspicious. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,81,2015-01-15 18:12:56,16.75,,,1,"b'b"" Another note on @jlopp \'s datadir: The undo data seems to lag the block data by about 44 minutes", and this seems to suggest to me that a reindex took place. The time delta disappears on the problematic block file, implying that this is where it resumed downloading blocks: This really smells like the issue @theuni fixed in the write position accounting, but I still don\'t have a satisfying explanation.  It seems it would have to ignore the perfectly valid looking repeated blocks while scanning the block file, but then pick up the missing blocks after.  I was thinking maybe something that looks like a magic could be written out in some corruption followed by a skip length followed by the missing blocks, but then there should be evidence of the corruption still in the block file. Also," why is it reindexing when people think it hasn\'t?  What do the timestamps look like on the  files in others\' datadirs?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,82,2015-01-15 18:12:56,6.77,,1,,"b""b' I should also note that I tried reproducing this by syncing on a c4.8xlarge and then remounting on a t2.med.  I also played with taking snapshots during busy points in sync and remounting", no dice," I was able to validate at level 0 in all cases.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,83,2015-01-15 18:12:56,7.28,,1,,"b""b' @ajweiss i just looked at my aws console and it looks like i threw another wrench into the situation by taking a magnetic EBS volume -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,84,2015-01-15 18:12:56,2.82,,1,,"b""b' @rromanchuk did your first EBS disk get 100% full before you noticed and switched?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,85,2015-01-15 18:12:56,5.77,,,1,"b'b"" @theuni good catch!  I can hardly remember that fateful night"," but maybe that\'s when i made the switch. It would make sense if a new node on t1.micro would fill the default 8G around the time my blocks got trashed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,86,2015-01-15 18:12:56,8.73,,,1,"b'b"" @rromanchuk ok. I\'m doing a fresh sync now on an 8gb disk", and I\'m up to blk00024.dat and 70% full. Assuming you installed some other stuff and dumped some more data on the drive before sync, that does indeed seem to line up with your point of corruption. It would also make sense since (I believe) everyone that\'s seen this has moved data from one drive to another before continuing the sync. Maybe the common element is filling up the drive, moving, then continuing. I\'ll see if I can get it to blow up when this gets full. @ajweiss the timestamps there are also very interesting," nice catch there. It does seem to strongly imply that @jlopp\'s db was re-indexed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,87,2015-01-15 18:12:56,1130.05,,,1,"b'b"" No luck", no matter how I try to corrupt the data. @jlopp @rromanchuk what filesystems are you using? @jlopp are you absolutely certain that you did a fresh sync with no existing data, starting with the final 0.10 release? There are many avenues for issues that are introduced when migrating blocks, so if we can truly rule those out then we have a more narrow scope. Also, as @ajweiss points out, it really looks as though a reindex was performed. Are you 100% certain that\'s not the case? It would be great if someone could reproduce this so that we have more data to go on. It\'s pretty clear by now that the initial sync is the problem," and not the crash that could occur  later. So I\'m not sure that we\'ll get anywhere with this until someone manages to hit it on purpose.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,88,2015-01-15 18:12:56,13.1,,1,,"b'b"" I wish I could be more help. We definitely didn\'t perform a reindex and I don\'t know how to reproduce this issue we built two 0.10 nodes from scratch at the same time with the exact same configurations. One of those nodes ended up having this corruption issue while the other node has been running solidly for a month.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,89,2015-01-15 18:12:56,131.13,,,1,"b'b"" Just got another shutdown yesterday"," this is the same node so don\'t panic :P ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,90,2015-01-15 18:12:56,633.6,,1,,"b""b' Just received the same error. Fresh install on a Debian box running 0.10. ~/bitcoin-0.10.0/bin$ bitcoind: :3335: void ProcessGetData(CNode*): Assertion '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,91,2015-01-15 18:12:56,547.62,,,1,"b'b"" Hello", Just to add that I\'m also seeing the same error, which prevents me to boot my bitcon-qt. My block database is stored on a Truecrypt encrypted external disk.My system is a Kubuntu 14.10.I\'m running bitcoin-qt v0.10.0.0-g047a898 (64-bit) I suppose rebuilding the database will do me no good," right?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,92,2015-01-15 18:12:56,338.35,,,1,"b""b' One of our other nodes that has been running fine for over a month just crashed from the same error. 2015-03-21 15:11:06 ERROR: ReadBlockFromDisk : OpenBlockFile failed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,93,2015-01-15 18:12:56,16.48,,1,,"b""b' can you make the datadir available please? On Sat", Mar 21,2015," 5:49 PM Jameson Lopp notifications@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,94,2015-01-15 18:12:56,1163.63,1,,,"b'b"" I\'ll post the bad block files soon. The output from the check blocks tools is quite similar:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,95,2015-01-15 18:12:56,1186.68,,,1,"b""b' One question to the others who are having this problem: you talk about your nodes crashing. But are you even able to start it?My node fails on startup. I simply cannot start it with the current blockchain copy I have on my encrypted drive. This is the error: 2015-03-23 13:13:18 Verifying last 288 blocks at level 32015-03-23 13:13:18 ERROR: ReadBlockFromDisk : Deserialize or I/O error ReadCompactSize() : size too large2015-03-23 13:13:18 ERROR: VerifyDB() : **\\\\* ReadBlockFromDisk failed at 331486"," hash=0000000000000000101c32bf9fd355ac2754fa56ef44db1f98c89e3783e9a2df2015-03-23 13:13:20 Aborted block database rebuild. Exiting. Is there anything I could do in order to start my node? Does rebuilding the database help? Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,96,2015-01-15 18:12:56,4.98,,,1,"b'b"" @EhVedadoOAnonimato It seems your corruption is in the last 288 blocks (which get checked at startup)", so it fails immediately. Otherwise there doesn\'t really seem to be a difference with the other reports. Yes, rebuilding the database will fix it," but that will wipe information from your data dir at this stage would be welcome for debugging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,97,2015-01-15 18:12:56,9.08,,,1,"b'b"" Thank you for the reply", Pieter. Actually it seems the corruption is on the very last block I havestored on this volume. I used the -checkblocks and look: 2015-03-23 13:27:00 Verifying last 1 blocks at level 32015-03-23 13:27:00 ERROR: ReadBlockFromDisk : Deserialize or I/Oerror ReadCompactSize() : size too large2015-03-23 13:27:00 ERROR: VerifyDB() : **\\\\* ReadBlockFromDisk failedat 331486, hash=0000000000000000101c32bf9fd355ac2754fa56ef44db1f98c89e3783e9a2df Is there no way to bypass this check? I think I might end rebuilding it eventually. But if there\'s anythingI should keep or send you to so that this could be better analyzedplease let me know. On 3/23/15," Pieter Wuille notifications@ wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,98,2015-01-15 18:12:56,3.62,,1,,"b'b"" @EhVedadoOAnonimato You could bypass the check"," but you\'ll likely fail shortly afterwards. It would be useful if you could run @ajweiss\'s script on your datadir: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,99,2015-01-15 18:12:56,8.98,1,,,b'b\' Hum, I tried but as I\\\'m not a bitcoin developer," my environment seemsto lack the necessary libraries. See: Traceback (most recent call last):  File ""./gistfile1.py""", line 3, in   import leveldbImportError: No module named leveldb I don\\\'t know python. Is there a simple set of commands I can executeto install all necessary libraries? On 3/23/15, Pieter Wuille notifications@ wrote:\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,100,2015-01-15 18:12:56,366.38,,1,,"b""b' can you post a tarball of the whole datadir? On Mon", Mar 23, 2015 at 12:25 PM," Jameson Lopp notifications@wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,101,2015-01-15 18:12:56,25.48,,1,,"b'b"" I can"," though this morning I performed reindexes on our nodes that have been crashing. I just ran your block checking script after the reindex and it\'s finding the same corruption shouldn\'t the reindex clean that up? Edit: I guess I want to use -checkblocks=0 instead?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,102,2015-01-15 18:12:56,22.38,,,1,"b'b"" No", in fact there\'s evidence that reindexing may cause the problem. A couple of notes here: 1) When you see this issue, if at all possible, please take a snapshot ofthe full datadir before restarting.  It helps a great deal in not justlooking at the corruption, but also trying to figure out why it occurred inthe first place. 2) Right now, it\'s looking like something is going wrong either duringinitial sync or during a reindex.  Running a reindex with released 0.10 isnot advised for resolving this issue as @cfields found a bug in thereindexing code that can be triggered when there is block file corruption. 3) Run bitcoind -checkblocks=0 -checklevel=0 to verify block locations inthe block index.  I\'d run this now on your reindexed node to see if itsucceeds.  If it doesn\'t, the reindex failed and you will need to wipe outthe datadir and start over.  If you do start over, run this at the end toensure it succeeded.  (Please do take a snapshot before you wipe, ifpossible) Does this make sense? On Mon, Mar 23, 2015 at 4:14 PM," Jameson Lopp notifications@wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,103,2015-01-15 18:12:56,11.98,,1,,"b""b' The issues encountered here should be caught by -checklevel=0 as it reads each block and verifies the data hashes to what it should.  Setting a higher -checklevel will slow things down significantly.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,104,2015-01-15 18:12:56,85.68,,1,,"b""b' The rest of our data files are available here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,105,2015-01-15 18:12:56,19.55,,,1,"b""b' Hi Jameson", Can you please also include the block index?  Or to make things simpler,wipe out the ,  and anything sensitive in the configfile and post a tarball? Thanks! adam On Mon, Mar 23, 2015 at 6:15 PM," Jameson Lopp notifications@wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,106,2015-01-15 18:12:56,713.33,,1,,"b'b"" @jlopp I wouldn\'t pay too much attention to those overlapping blocks. Look at the unrealistic ranges", those are misidentified I\'ve created a repository here url  for these troubleshooting tools. Let\'s try to maintain them there. It contains a newer version of without this problem, a version of as well as everything needed to build the module for python for that (as the default distro py-leveldb will corrupt your database due to compression," see my [this]url  comment).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,107,2015-01-15 18:12:56,167.18,,,1,"b'b"" Thanks @laanwj"," I\'ll check out those tools. I\'ve posted the full contents of our recently crashed node\'s data here:url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,108,2015-01-15 18:12:56,161.2,,,1,"b""b' @jlopp Thanks for posting this!  At first glance at the block index and ", it looks like either the snapshot was taken in the middle of the reindex," or the reindex crashed.  Do you know which is true?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,109,2015-01-15 18:12:56,5.63,,1,,"b'b"" mid-index I started a reindex on the node yesterday morning and it\'s ongoing. Once it completes I\'ll run checkblocks. Update: ran checkblocks and then ran the block checker tool and it says the files are all fixed. Will report back if we experience any more crashes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,110,2015-01-15 18:12:56,686.03,,,1,"b""b' My node fails with the same error. I was running perfectly well for around a week.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,111,2015-01-15 18:12:56,0.52,,,1,"b""b' My node fails with the same error. I was running perfectly well for around a week.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,112,2015-01-15 18:12:56,606.67,,1,,"b'b"" Anyone still digging into this? I\'m no longer experiencing the ReadCompactSize() error on the nodes I repaired"," but I have a completely different node on a VPS (not AWS) that has started to crash several times per week with a similar error: 2015-05-14 07:53:39 ERROR: ReadBlockFromDisk: OpenBlockFile failed""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,113,2015-01-15 18:12:56,50.08,,,1,"b'b"" I downloaded the blockchain again and didn\'t see this problem again. Anyway"," I think it is just a matter of time before it crash again because the node worked perfectly well for a month before the crashing. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,114,2015-01-15 18:12:56,686.35,,1,,"b""b' I had this issue and I also moved my blockchain from disk to disk and have my OS on a seperate disk than the blockchain.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,115,2015-01-15 18:12:56,1185.57,,1,,"b'b"" I\'m running on a Raspberry Pi", and had moved my blockchain between disks as well.  I\'ve been seeing this error over the past few days," and have had to restart bitcoind to restore functionality. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,116,2015-01-15 18:12:56,1374.23,,1,,"b'b"" I haven\'t had any issues on my AWS instances in months", but I recently had my Bitnodes node crash with: 2015-10-15 20:04:28 ERROR: ReadBlockFromDisk: Deserialize or I/O error ReadCompactSize(): size too large at CBlockDiskPos(nFile=356," nPos=43062353)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,117,2015-01-15 18:12:56,61.67,,1,,"b'b"" @jlopp most likely purely coincidence", but I had a USA east node die yesterday for the first time since this  haven\'t investigated why yet. When I looked at the tail briefly," I didn\'t see anything in the tail besides a get version. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,118,2015-01-15 18:12:56,6.22,,1,,"b""b' @jlopp what software are they running"," precisely?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,119,2015-01-15 18:12:56,7.32,1,,,"b'b"" @rromanchuk exact same here.Last message was a get version. **edit:** To clarify", I did not receive the error above, I didn\'t receive any error at all.  My situation mirrored that of @rromanchuk\'s last comment though," so I figured I\'d weigh in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,120,2015-01-15 18:12:56,35.25,1,,,"b'b"" @gmaxwell I\'m actually suspecting it\'s a hardware error; I\'m seeing other I/O errors now (the storage in question is a microSD card.) Disregard for now; I\'ll report back if I rule out hardware.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,121,2015-01-15 18:12:56,885.88,,1,,"b'b"" I\'m also seeing this a few times a week on a dedicated server: Restarting bitcoind fixes the problem until the next occurrence"," usually several days and several hundred blocks later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,122,2015-01-15 18:12:56,110.4,1,,,"b""b' While I am running bitcoind on a dedicated server with a physical hard drive"," I failed to mention that bitcoind runs from within a docker container and that the data is on a docker volume.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,123,2015-01-15 18:12:56,1187.53,,,1,"b'b"" @TimCinel Apparently (some of) your block files are corrupt. Restarting bitcoind only appears to solve the problem until it tries to access the same block again. You could reindex"," although as a block in early file 4 is failing it\'s better to a) redownload entirely or b) copy the bitcoin folder (excluding wallet) from a known good node.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,124,2015-01-15 18:12:56,28.97,,,1,"b'b"" @laanwj You were spot on. I bootstrapped this node by copying its blocks from another node", something must have gone wrong. Since redownloaded everything," it\'s been running without an issue.  Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,125,2015-01-15 18:12:56,537.2,,1,,"b'b"" I haven\'t experienced this problem on any of my nodes in a long time"," but just had a crash on a Raspberry Pi node: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,126,2015-01-15 18:12:56,727.78,,1,,"b""b' Is this issue still open. ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,127,2015-01-15 18:12:56,202.02,,1,,"b""b' This is simply disk corruption (block file was truncated)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,closed,2016-11-02 11:41:30,1406.95,16,77,36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,128,2015-01-15 18:12:56,1166.18,,1,,"b'b"" would you plz tell me what\'s the problem ? a fatal error has occurred...  2017-07-20 06:42:55 ERROR: ReadBlockFromDisk: Deserialize or I/O error CAutoFile::read: fread failed at CBlockDiskPos(nFile=78", nPos=8734624) 2017-07-20 06:42:55 *** Failed to read block 2017-07-20 06:43:02 Loading addresses from DNS seeds (could take a while) 2017-07-20 06:43:04 Failed to connect best blockImported mempool transactions from disk: 0 successes, 0 failed," 0 expired 2017-07-20 06:43:04 tor: Thread interrupt 2017-07-20 06:43:04 opencon thread exit 2017-07-20 06:43:04 addcon thread exit 2017-07-20 06:43:04 scheduler thread interrupt 2017-07-20 06:43:04 Shutdown: In progress... 2017-07-20 06:43:04 torcontrol thread exit 2017-07-20 06:43:04 msghand thread exit 2017-07-20 06:43:05 net thread exit 2017-07-20 06:43:06 118 addresses found from DNS seeds 2017-07-20 06:43:06 dnsseed thread exit 2017-07-20 06:43:07 Shutdown: done ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,129,2015-01-15 18:12:56,238.53,,1,,"b""b' @CnaBhr almost certainly disk corruption"," possibly due to unclean shutdown on consumer-grade drives or OSes which lie to applications about having fully stored data.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,130,2015-01-15 18:12:56,449.4,,1,,"b'b"" Hi guys", I\'m writing a parser for bitcoin core and now at the file blk 976 I have an error, into type verInt. I\'m using a library bitcoin core and I using serialize.h for decode a data, and I\'using a readCompactSize for reading a var int but into when I go read the blk00976.dat I have this error  But The node bitcoin core run ok," when the ReadCompactSize thow this exception?  Is there something I\'m missing?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5668,closed,-,-,-,16,80,36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,opened,2015-01-23 12:36:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,title,2015-01-23 12:36:39,00:00,,1,,"b""b' MOVEONLY: Move constants to consensus.h'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,body,2015-01-23 12:36:39,00:00,,1,,"b'b"" This is blocking #6051 and #5595 There\'s no way to start moving consensus and policy code effectively out of main without creating a first .h file. UPDATE:It was initially a tiny first step to sepearate consensus and policy but afer a lot of discussion it ended up being a tiny step towards separating only more consensus. The motivation for this PR is stop blocking the 2 PRs mentioned in line 1. OUTDATED (for archive): While we discuss what the CPolicy interface should be #5595"," we can start by just moving constants and globals to consensus.h and policy.o.This will also open the door to some cleaning up on the includes.nMaxDatacarrierBytes and MAX_OP_RETURN_RELAY are not moved from  to policy.o because policy.o is in server while  is in common and wouldn\'t link. Please propose any other constant or global variable related to consensus or policy that I may have missed. New but irrelevant:Are you still reading? This PR is so simple that the following comments are equivalent:utACKACKI didn\'t tested it but I did finally read the code.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,closed,2015-01-23 12:36:49,0.17,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,reopened,2015-01-23 12:57:19,20.5,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,1,2015-01-23 12:36:39,1435.3,,1,,"b""b' Updated adding MANDATORY_SCRIPT_VERIFY_FLAGS to consensus.h and STANDARD_SCRIPT_VERIFY_FLAGS and STANDARD_NOT_MANDATORY_VERIFY_FLAGS to policy.h'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,2,2015-01-23 12:36:39,433.45,,1,,"b""b' Needed rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,3,2015-01-23 12:36:39,77.6,,1,,"b""b' Rebased adding LOCKTIME_THRESHOLD to consensus.h'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,4,2015-01-23 12:36:39,43.47,,1,,"b""b' Moved MANDATORY_SCRIPT_VERIFY_FLAGS to policy as suggested by @TheBlueMatt and @sipa '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,5,2015-01-23 12:36:39,1306.7,,1,,"b""b' Renamed policy.o to  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,6,2015-01-23 12:36:39,1075.18,,1,,"b""b' Not exactly sure why"," but it needed rebase. Ping @laanwj @theuni This is quite trivial and the best first step for any consensus and policy code movements IMO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,7,2015-01-23 12:36:39,221.08,,,1,"b'b"" Rebased with @laanwj \'s fix that should make travis happy again""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,8,2015-01-23 12:36:39,722.95,,1,,"b""b' utACK. I like the direction this is going towards.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,9,2015-01-23 12:36:39,446.45,,1,,"b'b"" Rebased without @laanwj \'s fix after #5883 has been merged""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,10,2015-01-23 12:36:39,483.53,,1,,"b'b"" I really don\'t like the introduction of globals into policy.h", but I understand that they\'re a temporary measure. utACK," with the assumption that the globals will be removed fairly quickly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,11,2015-01-23 12:36:39,855.9,,1,,"b""b' @theuni All globals and constants should ideally become attributes of CStandardPolicy and thus encapsulated and not exposed to the rest of the code.Rebased moving the from consensus.h to policy.h as pointed out by @theuni '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,12,2015-01-23 12:36:39,378.62,,1,,"b'b"" I improved the includes (ie not including  and  from main.h): even if there\'s going to be an include cleanup commit later", there\'s no reason not to do things right from the beginning here.After that, github says that this needs rebase but it\'s not true," I rebased it to master locally just fine.I\'m not sure about what should I do  I still rebase? wait for other people to confirm that I\'ve only changed includes from last time? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,13,2015-01-23 12:36:39,7.12,,1,,"b""b' Never mind"," it does need rebase now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,14,2015-01-23 12:36:39,1112.27,,1,,"b""b' Needed rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,15,2015-01-23 12:36:39,73.77,,1,,"b""b' Closing in favor of #5669 and #5595. The first commit will be in both"," the second commit only on the policy PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,closed,2015-04-01 13:10:02,12.72,0,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,reopened,2015-04-23 00:28:57,678.92,0,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,16,2015-01-23 12:36:39,680.23,,1,,"b""b' Reopened as suggested by @theuni '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,17,2015-01-23 12:36:39,15.83,,1,,"b""b' Updated only with the consensus constants but not the policy constants and globals.This should be hyper-mergeable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,18,2015-01-23 12:36:39,153.35,1,,,"b'b"" ACK. I asked @jtimon to re-open this (and slim it down to what it is now) in an effort to focus some of the current tangled PRs. I\'m hoping we can serialize some of this work to get it in faster"," so I\'ll take the blame for blowing up everyone\'s mailboxes with  PRs today :). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,19,2015-01-23 12:36:39,1034.9,,,1,"b'b"" I like the idea of going ahead and getting some of this reorganization out of the way if we\'re going to do it.  I reviewed this and did some basic testing and it looks good to me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,20,2015-01-23 12:36:39,799.97,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,closed,2015-04-26 12:42:30,733.55,1,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5696,closed,-,-,-,1,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,opened,2015-01-23 13:03:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,title,2015-01-23 13:03:05,00:00,,1,,"b""b' Includes: Cleanup includes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,body,2015-01-23 13:03:05,00:00,,1,,"b""b' Separated from #5681 (as explained there) to also include #5696 and to become a single commit cleanup (after those two and maybe other preparations have been merged).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,1,2015-01-23 13:03:05,407.2,,1,,"b""b' closing for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,closed,2015-02-13 19:50:18,407.22,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,reopened,2015-07-05 01:51:25,361.12,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,2,2015-01-23 13:03:05,365.17,,,1,"b""b' I know this will be more interesting after #6051 and #6335 but why keep waiting?This is good already.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,3,2015-01-23 13:03:05,290.85,,1,,"b""b' @jtimon But it fails Travis :-/.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,4,2015-01-23 13:03:05,238.98,,1,,"b""b' Fixed disable-wallet build.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,5,2015-01-23 13:03:05,113.97,,1,,"b""b' Updated. Now also cleaning up net.h and wallet/ a little bit. Of course"," adding the missing includes that are discovered.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,6,2015-01-23 13:03:05,525.2,1,,,"b""b' Sorry"," updated again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,7,2015-01-23 13:03:05,119.57,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,8,2015-01-23 13:03:05,26.42,,1,,"b""b' concept ACK however this sort of PR needs constant rebasing.  Usually better to break it up into even smaller chunks than modifying 40+ files in one go.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,9,2015-01-23 13:03:05,473.37,,1,,"b'b"" Yes", that\'s why I try to avoid making these cleanups after the code moves that make them possible and not at the same time (so that the moves are less painful). But they keep accumulating...The need for constant rebases and lack of review is why I closed it last time, and When I get bored of I will likely close it once again. But, yes, smaller pieces (maybe small enough to get into the trivial branch while keeping the trivial branch itself maintainable) is a good suggestion," although I would really prefer that one day it just got merged once and for all (innocent me).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,10,2015-01-23 13:03:05,6.98,,1,,"b'b"" I always think this is a valuable work", but doesn\'t get much review time or seems to trivial for getting reviewed. Perhaps the trivial branch is the better place," but IMHO the trivial cycles should be shorter also.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,11,2015-01-23 13:03:05,664.3,,1,,"b""b' ACK.  Merge or close.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,12,2015-01-23 13:03:05,18.02,1,,,"b'b"" Sorry"," I didn\'t realized this needed a trivial rebase (a near a newly added in ).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,closed,2015-07-27 12:40:35,649.17,2,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,13,2015-01-23 13:03:05,1049.4,,1,,"b'b"" ACK but let\'s do this only once per major release""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,14,2015-01-23 13:03:05,923.82,,1,,"b'b"" Limiting to at most one big include cleanup per major release sounds reasonable.I\'m not sure I will ever do another one as big as this one though (and smaller ones can be made part of the relevant PR or via the trivial branch).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5697,closed,-,-,-,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,opened,2015-01-23 13:25:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,title,2015-01-23 13:25:50,00:00,,1,,"b""b' Code vulnerable to segfault after a network fork'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,body,2015-01-23 13:25:50,00:00,,,1,b'b\' Hello, I\\\'m Evan Duffield, the lead developer of Darkcoin. We recently re-forked from Bitcoin 0.9.3 away from litecoin and after which we had a minor network fork, with 2 valid chains for a period of time. This lead many clients getting segfaults, after hitting this line of code: url  I\\\'ve looked through updates done to Bitcoin since 0.9.3 and this looks like an unknown issue in the Bitcoin codebase. This is important and must get fixed, because a good portion of the network is on vulnerable versions and my understanding is they\\\'ll all segfault when a fork condition is met.  Here\\\'s the stack trace from Darkcoin. darkcoind 0.11.0.11 (gdb) bt#0  0x000000000046a83e in ToString (this=) at uint256.h:343#1  CheckForkWarningConditions () at :1749#2  0x000000000047e3d5 in AddToBlockIndex (block=..., state=..., pos=...) at :2734#3  0x000000000047e9d0 in AcceptBlock (block=..., state=..., dbp=dbp@entry=0x0) at :3065#4  0x000000000047f991 in ProcessBlock (state=..., pfrom=pfrom@entry=0xb6ed40, pblock=pblock@entry=0x7fffdeffc460, dbp=dbp@entry=0x0) at :3184#5  0x000000000048475f in ProcessMessage (pfrom=pfrom@entry=0xb6ed40, strCommand=..., vRecv=...) at :4468#6  0x0000000000486b53 in ProcessMessages (pfrom=0xb6ed40) at :4780#7  0x000000000050a71f in operator() (a0=, this=) at /:760#8  m_invoke (connectionBody=..., this=0x7fffdeffca60) at /:368#9  operator() (connectionBody=..., this=0x7fffdeffca60) at /:345#10 dereference (this=) at /:82#11 dereference, int, std::less, boost::function, boost::function, boost::signals2::mutex>::slot_invoker, std::_List_iterator >, boost::signals2::slot1 >, boost::signals2::mutex#12 operator\\\\* (this=) at /:643#13 operator(), int, std::less, boost::function, boost::function, boost::signals2::mutex>::slot_invoker, std::_List_iterator >, boost::signals2::slot1 >, boost::signals2::mutex#14 operator()boost::signals2::optional_last_value, int, std::less, boost::function, boost::function, boost::signals2::mutex>::slot_invoker, std::_List_iterator >, boost::signals2::slot1 >, boost::signals2::mutex#15 boost::signals2::detail::signal1_impl, int, std::less, boost::function, boost::function, boost::signals2::mutex>::operator()(CNode*) (this=, arg1=arg1@entry=0xb6ed40) at /:246#16 0x00000000004f0155 in operator() (arg1=0xb6ed40," this=0xb240d8) at /:695#17 ThreadMessageHandler () at :1529#18 0x00000000004f7bee in TraceThread (name=0x74f2d1 ""msghand""", func=0x4effa0 ) at util.h:575#19 0x00007ffff7f55629 in ?? () from /#20 0x00007ffff6839b50 in start_thread () from /-linux-#21 0x00007ffff65837bd in clone () from /-linux-#22 0x0000000000000000 in ?? ()\'',,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,closed,2015-01-23 18:55:48,329.97,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,reopened,2015-01-23 20:46:29,110.68,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,1,2015-01-23 13:25:50,443.33,,,1,"b""b' Notice the segfault is hitting pindexBestForkBase->phashBlock and trying to turn that into a String"," the vulnerability still is present is 0.9.4 and 0.10. #0 0x000000000046a83e in ToString (this=) at uint256.h:343#1 CheckForkWarningConditions () at :1749 url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,2,2015-01-23 13:25:50,261.98,,,1,b'b\' I believe you\\\'ve misunderstood the behavior. No block can be in the block index there without a hash, if one is there is an error elsewhere. See : AddToBlockIndex. (Also-I\\\'m unable to reproduce," the warnings act fine.) As an aside your response of posting something you believed to be a ""vulnerability"" on reddit instead of reporting it to the security contact is irresponsible.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,3,2015-01-23 13:25:50,652.03,,,1,"b'b"" I didn\'t submit it to reddit all", I just made an issue and a pull request. I didn\'t believe this was incredibly serious, due to requiring a 12 hour long fork to cause issues on the Bitcoin network. However, there\'s no checks at all in 0.9, so regardless of how you patch it," it needs to get patched. Thanks. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,closed,2015-01-24 12:03:12,916.72,0,1,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,4,2015-01-23 13:25:50,227.53,,,1,"b""b' Feel free to keep reporting problems you find"," nonetheless!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5698,closed,-,-,-,0,1,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,opened,2015-01-25 12:31:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,title,2015-01-25 12:31:27,00:00,,1,,"b'b\' fix crash: RPC ""createmultisig"" and ""addmultisigaddress""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,body,2015-01-25 12:31:27,00:00,,1,,"b'b\' Bug description:1) Open Bitcoin-Qt(or bitcoind)2) Open ""Debug window""3) Enter  or 4) Result![createmultisig]url or![addmultisigaddress]url  About the fix:1) function **_createmultisig_redeemScriptCScript** has line (file ) 2) function **GetScriptForMultisig** has lines (file ) and 3) function **EncodeOP_N** has the assert(file ) 4) We don\\\'t need check **nRequired** because it checks here: 5) English is not my native", so ,maybe, error message should be improved... similar to url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,1,2015-01-25 12:31:27,1337.08,,,1,"b'b"" Thanks for reporting this in such detail. I\'m not sure this limitation is intended"," so we may go for a different fix.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,2,2015-01-25 12:31:27,3.42,,1,,"b""b' Pretty sure it should fail with >15 due to the P2SH limitations.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,3,2015-01-25 12:31:27,11.07,1,,,"b""b' Right", I remember now, we already check the resulting script against MAX_SCRIPT_ELEMENT_SIZE for that later. The issue is that some assertion before that fails while constructing the script In any case, the proposed fix to hardcode a limit at 16 (because the underlying code fails) is not so bad then. Though it may make sense to move the check down to GetScriptForMultisig instead of in the RPC code," so that potential other usages of it get a clear error.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,4,2015-01-25 12:31:27,0.47,1,,,"b""b' **luke-jr:**Yes"," it should.if  equal 16 then  error message looks like: But I left a restriction on 16 because may change in the future'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,5,2015-01-25 12:31:27,55.72,,1,,"b'b"" Not likely"," that\'d be a hardfork.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,closed,2015-02-08 14:42:15,130.8,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,reopened,2015-02-08 14:44:55,2.67,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,closed,2015-02-20 08:51:53,1086.97,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5706,closed,-,-,-,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,opened,2015-02-02 07:23:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,title,2015-02-02 07:23:42,00:00,,1,,"b""b' Change Time in  from UTC to local time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,1,2015-02-02 07:23:42,8.07,,1,,"b""b' What is the motivation for this? I consider it pretty undesirable"," as it makes it much harder to correlate logs from multiple hosts when helping people with problems (e.g. requires asking users for their timezone and them getting it right).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,closed,2015-02-02 07:37:52,14.17,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,2,2015-02-02 07:23:42,7.6,1,,,"b""b' ok"," sorry. I didnt think so much.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,reopened,2015-02-02 07:39:22,1.5,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,closed,2015-02-02 07:40:45,1.38,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,3,2015-02-02 07:23:42,3.48,1,,,"b'b"" sorry for the stupidness"," I\'m not familiar with the github interface.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,4,2015-02-02 07:23:42,223.27,,1,,"b'b\' @gmaxwell This argument is based on the situation where user has several Bitcoin Core nodes running around the world. There are other situations where user has to ""re-count"" the time in the bitcoind\\\'s file to compare it to the other logs from other  from his (only) system.My personal preference would be to log in local time (as other services on my machines are doing) and have an option (turned off by default) to log in UTC.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,5,2015-02-02 07:23:42,449.68,,1,,"b""b' If anything this should be optional", indeed," though I have little preference for the default.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,6,2015-02-02 07:23:42,14.25,,1,,"b""b' Or print both.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,7,2015-02-02 07:23:42,648.97,,1,,"b""b' Excuse me"," should I reopen this pull request or create another one to printboth or set one of them as default and the other as optional? 2015-02-03 3:10 GMT+08:00 Gregory Maxwell notifications@:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,8,2015-02-02 07:23:42,47.07,,1,,"b'b"" I really don\'t like adding an option for something trivial"," debug related as this. We should just pick something that makes sense.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,9,2015-02-02 07:23:42,9.92,1,,,"b""b' Then I reopen this pull request to let you guys choose"," sorry for the disturbance.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,reopened,2015-02-03 06:56:00,1395.25,3,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,10,2015-02-02 07:23:42,15.05,,1,,"b'b"" In this case", both use cases are valid and the user has to decide, so I think the extra added option makes sense.... or we can add -syslog option," change the default to local time and then users with several bitcoind\'s around the world can syslog to one place to make it easier to correlate. This is the way how other daemons solve this (but there are exceptions).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,11,2015-02-02 07:23:42,606.68,,1,,"b'b"" Using anything but UTC for things like this can cause many", many headaches. If the user _really_ wants non-UTC," it\'s rather trivial to convert everything in the log to it manually.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,12,2015-02-02 07:23:42,820.02,1,,,"b'b"" @paveljanik people are already using bitcoind with other logging backends. As I learned the hard way when I tried to fiddle with it", that\'s what is used for. It prints the log messages to stdout, so it is trivial to make the output per line end up in a system log. Some init service management systems will even do that by default. This is another example of something that has been done and forgotten 1000\'s of times, since the 80\'s, no need to spend time building, reviewing or testing any additional log-fu in bitcoind. You can do logging, externally, any way you want, bitcoind just has to provide the messages. Which it does. BTW: I\'d think it is  much easier to correlate multiple instances in different locales if times are in UTC, not local time. If you then want to find out what happened at a certain time of the day you\'d convert that time into UTC once and look up that timestamp in all the other logs. If all logs are in their local times," that\'s a lot more involved. @ianks Agreed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,13,2015-02-02 07:23:42,20.75,1,,,"b'b"" I use myself", yes. No need for additional option, right.To paraphrase your last paragraph:BTW: I\'d think it is much easier to correlate multiple system apps in different log files if times are in local time (as other system apps\' logs already do), not UTC. If you then want to find out what happened at a certain time of the day you do not have to convert from UTC at all and look up that timestamp in all the other logs. If the bitcoind log is in UTC," that\'s a lot more involved. Two use cases. We make it hard for the other one right now. And we are the only app that is doing so... At least I\'m not aware of any other app doing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,14,2015-02-02 07:23:42,68.42,1,,,"b'b"" @paveljanik Yes", in the end everything is a compromise. The are valid reasons for logging in local time just as well, no argument there. But for the built-in logging I\'d say we stick with UTC. For anything else, use external tools.(could take the hardline stance that was a bad idea in the first place and we should have left tacking on timestamps to external tools, but meh," let\'s just stop the argument here and work on more productive things)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,closed,2015-02-04 08:26:55,90.92,6,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,15,2015-02-02 07:23:42,689.0,,1,,"b'b"" Just to add another point of view", I do run multiple servers in different timezones and the \'common practice\' when you do that is to set all of your timezones to UTC so you can easily merge you logs if wanted. As such," this change would have no effect.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5735,closed,-,-,-,6,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,opened,2015-02-12 00:00:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,title,2015-02-12 00:00:12,00:00,,1,,"b""b' update instructions for Debian 7.8.0 net install'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,body,2015-02-12 00:00:12,00:00,,1,,"b""b' Updates the link to point to the 7.8.0 net install cd and the sha256hash for the same.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,1,2015-02-12 00:00:12,4.45,,1,,"b""b' This change has already been made in the trivial repo"," see url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,closed,2015-02-12 00:23:36,23.4,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,reopened,2015-02-12 00:24:01,0.42,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,closed,2015-02-12 00:24:11,0.17,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,2,2015-02-12 00:00:12,21.1,1,,,"b'b"" @fanquake", sorry, didn\'t know about that branch," since the changes are already merged (making this redundant) I\'m closing this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5788,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,opened,2015-02-20 12:43:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,title,2015-02-20 12:43:17,00:00,,1,,"b'b"" Please put back the RPC function \'getwork\'""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,body,2015-02-20 12:43:17,00:00,,,1,"b'b"" Much good miners do not use the gbt call", only \'getwork\'," please put it back.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,1,2015-02-20 12:43:17,31.85,,1,,"b""b' Examples of such miners?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,2,2015-02-20 12:43:17,9.18,,1,,"b""b' PoclbmDiabloMinerPhoenixMiner 2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,closed,2015-02-20 13:24:19,41.03,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,reopened,2015-02-20 13:24:28,0.15,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,3,2015-02-20 12:43:17,1.28,,1,,"b""b' All of those are GPU miners", as far as I know," which are totally irrelevant now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,4,2015-02-20 12:43:17,7.62,,,1,"b'b"" Well", much people mines bitcoin only for fun and study," why can\'t put \'getwork\' back? Because bitcoin core will be 1kb bigger?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,5,2015-02-20 12:43:17,2.28,,,1,"b""b' No", because of review and maintenance time to keep old code working. For fun and study you can use regtest mode," which has built-in mining.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,closed,2015-02-20 13:35:35,11.12,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,6,2015-02-20 12:43:17,372.45,,1,,b'b\' @ajcj151 BFGMiner also supports mining if you really need that. If you prefer the  GPU miners," you can also run BFGMiner in a getwork-proxy mode to serve as a ""middle man"" between Bitcoin Core and getwork miners.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5808,closed,-,-,-,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,opened,2015-03-09 18:39:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,title,2015-03-09 18:39:20,00:00,,1,,"b""b' configure: BITCOIN_SUBDIR_TO_INCLUDE: Improve compatibility with paths including space and multiline cpp output'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,body,2015-03-09 18:39:20,00:00,,1,,"b'b"" This fixes a number of bugs in the BITCOIN_SUBDIR_TO_INCLUDE macro:tr was deleting all \'n\' and \'r\' characters in addition to the backslash", due to too much escaping.Escaped spaces in paths were ignored, parsing the space as a delimiterMultiline output from cpp (used when there are a number of includes being listed) weren\'t handled correctly. The new sed takes two steps:1. Translate escaped newlines into a space," to work with single lines.2. Search for the file we want and return the complete path for it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,1,2015-03-09 18:39:20,1154.13,,,1,"b'b"" WFM ACK.  I need to re-review all the escapes to make I\'m happy with it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,2,2015-03-09 18:39:20,864.67,1,,,"b'b"" @luke-jr That\'s pretty hard to read so I\'ll take your word that it\'s correct. Can you verify that it\'s portable"," though? Non-gnu sed (*bsd) tends to choke pretty easily.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,3,2015-03-09 18:39:20,286.95,,1,,"b'b"" Except for the -E option for extended regex syntax", I took care writing the rest avoiding anything that wasn\'t part of POSIX. As for the -E," it\'s been used in BFGMiner\'s configure script for a while including at least one BSD user testing it (and reporting other compatibility issues) although I\'m not certain it was triggered in that scenario. It would be best to have someone verify this on BSD before merging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,4,2015-03-09 18:39:20,72.38,,1,,"b""b' @koobs on freenode tested the sed expression on FreeBSD 9/10/current and confirmed the -E parameter is supported by 8.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,5,2015-03-09 18:39:20,44.53,,1,,"b'b"" Does it really need all this complexity? If so", I\'d prefer something that is more written-out so easier to verify.Not that I don\'t trust you to get this right," but other people may have to maintain it at some point.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,6,2015-03-09 18:39:20,1.98,,1,,"b""b' Is there anyone that can review this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,7,2015-03-09 18:39:20,1277.32,,1,,"b'b"" I\'ve tried in different ways to find reviewers for this", to no avail. No one can review the code as-is, let alone maintain it. Please try to find a simpler solution e.g. break it up into multiple," documented steps.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,8,2015-03-09 18:39:20,581.62,1,,,"b""b' Sadly"," agree with @laanwj  Closing due to failing to garner review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,closed,2015-09-15 18:02:55,1403.58,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,reopened,2016-06-08 22:42:21,279.43,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,9,2015-03-09 18:39:20,281.17,,,1,"b""b' Added detailed comments and otherwise improved readability. @theuni and anyone else", can you review? Nothing has changed that should break BSD compatibility," but a BSD tester would be appreciated as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,10,2015-03-09 18:39:20,1347.97,1,,,"b'b"" @luke-jr Sorry I didn\'t get to this before leaving. I\'m going to have to clear my head", make peace with the universe, accept mortality, and review this craziness while fresh. But more likely, bored on a plane. The comments are a big help, thanks. Though I have to say, I\'m still uneasy relying on something so cryptic," even if it is correct.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,11,2015-03-09 18:39:20,870.67,,1,,"b""b' What issues does this solve? @theuni can you review?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,12,2015-03-09 18:39:20,339.98,,1,,"b""b' Compatibility with more compilers"," and build paths with spaces in them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,13,2015-03-09 18:39:20,840.07,,1,,"b""b' That sounds fairly important.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,14,2015-03-09 18:39:20,597.93,,1,,"b'b"" Here\'s an alternative that I\'m more comfortable with: url  That completely does away with bitcoin_subdir_to_", as it was only used to find bdb. Instead of building, asking the compiler what the resulting path was, and adding it to the flags, instead just cut off the subdir that worked and concat it back with the include. Since it already build that way in configure," we can be sure that it will work again during build. Is there any obvious disadvantage?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,15,2015-03-09 18:39:20,138.63,1,,,b'b\' Besides being an ugly hack," I\\\'m not sure if that will be practical to make compatible with absolute paths as needed for bdb-include-dir (every Google result for whether absolute paths are acceptable in includes resulted in advice saying basically ""don\\\'t do that"," use -I"")\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,16,2015-03-09 18:39:20,111.27,,1,,b'b\' I\\\'m not sure what you mean, this wouldn\\\'t change the semantics at all.Example: Say bdb lives at /  or  configure tries a bunch of paths, and lands on this working combo:: and Now as a result," it exports:BDB_LIB=db/BDB_CPPFLAGS=So the result is the same. I\\\'m not sure what you mean by ""whether absolute paths are acceptable""", everything in the above example is standard usage.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,17,2015-03-09 18:39:20,9.12,,1,,"b'b"" I see", so you\'d combine -I and #define to find the file. (It\'s certainly not standard to use a #define in an #include," or you\'d not have to jump through 5 extra LOC to do it.. :p) But your solution may still be less uglier than doing this right... especially if nobody is willing to review it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,18,2015-03-09 18:39:20,1084.03,,1,,"b'b"" @luke-jr Not that I\'m unwilling to review", simply unable. That sed program needs its own unit I don\'t like url  either," but at least it\'s relatively straightforward.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,19,2015-03-09 18:39:20,1353.4,,1,,"b""b' Going to close this"," as this has been open for more than a year and there is no real progress toward it getting merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,closed,2016-11-02 14:17:09,934.8,4,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5872,closed,-,-,-,4,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,opened,2015-03-16 10:01:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,title,2015-03-16 10:01:46,00:00,,1,,"b""b' Close button missing on the debug window.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,body,2015-03-16 10:01:46,00:00,,,1,"b""b' ![close mising]url See the picture for more information.This is the German version of the dialog"," but for the missing button the language is irrelevant.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,1,2015-03-16 10:01:46,9.65,,1,,"b""b' What OS is that?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,2,2015-03-16 10:01:46,0.22,,,1,"b""b' I have the button at current master(I have Windows 7x64)![close]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,3,2015-03-16 10:01:46,1.0,,,1,"b""b' Could you give us some more information about your environment?OS", Window Manager," etc. Just tested 0.10.0 on ubuntu. Looks good.It seems like your window manager is removing the standard window buttons. ![bildschirmfoto 2015-03-16 um 11 11 44]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,4,2015-03-16 10:01:46,15.55,,,1,"b'b"" No", all dialog\'s has an extra  button. But only her it will be missing.For example the the about bitcoin dialog, there exits an button which close the dialog.![ok]url  I don\'t mean the button at the dialog title box.Because it is Qt default," that this don\'t exits an button must be added.See: url Part Qt::DialogBy default no button are shown on the title bar. OS: Fedora 20/21 using Gnome.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,5,2015-03-16 10:01:46,8.33,,1,,"b""b' Agreed with @tuxmaster. The rpcconsole should be a QWindow currently it is a QWidget.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,closed,2015-05-18 08:56:24,1374.63,0,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,reopened,2015-05-18 08:57:09,0.75,0,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,6,2015-03-16 10:01:46,374.95,,1,,"b""b' @tuxmaster: would you mind retesting this issue with #6155 on top? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,7,2015-03-16 10:01:46,841.03,,,1,"b""b' Tested"," now the debug window is part of the main window?![bildschirmfoto von 2015-05-19 08 51 39]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,8,2015-03-16 10:01:46,3.47,,1,,"b'b"" @tuxmaster: did you used during or as startup arg?Also mind that i\'ll probably add another change to #6155 (change from QDialog to QWindow).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,9,2015-03-16 10:01:46,4.68,,1,,"b""b' Hi","  I used: -disablewallet like shown in the help:Wallet options:  -disablewallet   Do not load the wallet and disable wallet RPC calls'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,10,2015-03-16 10:01:46,381.53,,,1,"b""b' @tuxmaster: I just tested this (nightly build) on Fedora Workstation 21. Looks all good also without #6155. Are you sure this is a real issue? Can you try again with the official 0.10.2 release: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,11,2015-03-16 10:01:46,153.22,,,1,"b""b' Tested with 0.10.2. The same error as the original. No close button.![bildschirmfoto von 2015-05-19 17 53 27]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,12,2015-03-16 10:01:46,242.58,,1,,"b""b' @tuxmaster: Right. I could reproduce the issue on Fedora 21. The current master looks okay. Do you mind retesting this with a nightly build: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,13,2015-03-16 10:01:46,641.7,,,1,"b""b' Yes the nightly looks ok.Tested on F20.![bildschirmfoto von 2015-05-20 08 38 10]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,14,2015-03-16 10:01:46,12.12,,1,,"b""b' @theuni: was there a Qt version change between 0.10.X and current master?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,15,2015-03-16 10:01:46,8.93,,1,,"b""b' As far I can see"," from 4.8.6 to 5.x.x.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,16,2015-03-16 10:01:46,3.32,,1,,"b'b\' Okay. Than it was a probably Qt4.X ""bug"".@tuxmaster: If you like you can build bitcoin-qt yourself with Qt4. Add #6155 on top and see if it fixes your issue.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,17,2015-03-16 10:01:46,185.0,,,1,"b""b' Result of rebuild with Qt4 of F20 (using my own openssl)So I think is no Qt bug.build openssl with: ./config prefix=/ openssldir=/ enable-ec enable-ecdh enable-ecds -fPIC sharedAnd run with:LD_PRELOAD=/:/ ./bitcoin-qt![bildschirmfoto von 2015-05-20 12 05 50]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,18,2015-03-16 10:01:46,49.1,,1,,"b'b"" Before closing this i\'d like to find the change which fixes this bug.Maybe someone can help by checking the changes between 0.10.0 and 0.10.2. I couldn\'t find anything related to this issues behavior. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,closed,2015-11-11 10:02:12,65.05,0,11,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,19,2015-03-16 10:01:46,1384.38,,1,,"b""b' Closing (inactivity)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5908,closed,-,-,-,0,12,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,opened,2015-03-22 18:30:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,title,2015-03-22 18:30:11,00:00,,1,,"b""b' [RPC] Add optional locktime to createrawtransaction'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,body,2015-03-22 18:30:11,00:00,,1,,"b""b' A non-zero locktime also causes input sequences to be set to non-max"," activating the locktime.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,1,2015-03-22 18:30:11,6.5,1,,,"b'b"" So... an extra parameter is kind of a pain because if we add any additional ones after it it becomes a pain to have to dummy out this one; so we should take care to make sure that this is really the order that we want the arguments in"," and that maybe we don\'t want something else first.  One way around this would be to take an array for additional named arguments. Is there a reason that the locktime=N parameter of bitcoin-tx doesn\'t already accommodate this functionality? You can createrawtransaction then use bitcointx to set the locktime. Though right now it doesn\'t set the sequence numbers but perhaps it should.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,2,2015-03-22 18:30:11,50.23,1,,,"b'b"" Locktime is the only thing left at the same level as vin and vout", so it seems logical that it should be adjacent to them.  Wouldn\'t more complex scripts, for example, be accommodated by adding flexibility in params[1]? I would like to use this in a python test," where adding in bitcoin-tx would be kind of messy.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,3,2015-03-22 18:30:11,4.72,1,,,"b'b"" Transaction version is as well (and consider"," upcoming anti-malleability BIP that makes the choice of transaction version an important decision). There may be other-meta-parameters like controls over ordering (e.g. the output address array is unordered.).  I\'m not sure how much this matters.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,4,2015-03-22 18:30:11,969.25,,1,,"b""b' Perhaps we should have support in the python test framework to use bitcoin-tx instead of createrawtransaction.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,5,2015-03-22 18:30:11,4.77,1,,,"b'b\' ""weak NAK""  (that is", NAK," unless somebody can talk me out of it) 1) bitcoin-tx can already do this. 2) The ""pure function"" RPCs are on the road to removal long term.  We should not be extending pure-function RPCs.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,6,2015-03-22 18:30:11,68.87,1,,,"b""b' @jgarzik I just needed this"," and thought it was harmless. No problem if I was mistaken.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,7,2015-03-22 18:30:11,36.93,,1,,"b""b' Ping #5503"," #5524.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,8,2015-03-22 18:30:11,1187.15,,1,,"b""b' @sipa Or just depend on a more featureful Bitcoin library would be pretty trivial to do in python-bitcoinlib...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,9,2015-03-22 18:30:11,533.17,,1,,"b'b\' I\\\'m with @jgarzik on this. We shouldn\\\'t extend ""pure function"" calls. Bitcoin-tx can handle locktime modification already. @dgenr8: For RPC tests i would recommend to fiddle with the hex-/byte-stream to change the lock_time\\\'s uint32_t. Isn\\\'t it always at the end of the serialized data?Or you can follow @sipa\\\'s advice and use bitcoin-tx within a rpc tests (this is possible already through some python shell ). @petertodd: Adding a bitcoin library for tests would be possible however i think it would be a overkill and tests-environments should be lightweight to avoid test result displacement IMO. so I tend to NACK\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,10,2015-03-22 18:30:11,503.5,,1,,"b'b"" This PR is a bugfix imho since the rawtx API is now incapable of producing a tx that mimics the locked txes that the wallet generates. If this is closed"," I\'ll get the job done one of those other ways in #5881.  bitcoin-tx requires changes to be able to set nSequence compatibly with the wallet  and nSequence also needs fiddling-with in the manual route.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,11,2015-03-22 18:30:11,478.37,1,,,"b'b"" I agree with regard to no longer extending pure-utility functions. On the other hand this is trivial. So weak NACK only.Yes", I\'d prefer to do it in the test code itself too. It\'s quite easy to manipulate a transaction from Python.See e.g. url  for some transaction and block surgery code I wrote for a test a while ago," but haven\'t got around to integrating.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,12,2015-03-22 18:30:11,19.13,,1,,"b'b"" Hmm", it is unfortunate that createrawtransaction is unable to haveidentically to sendtransaction now. I would consider that a bug, but I\'mnot sure how to fix it. An extra field is an option, but has the problems already discussed. We could make it behave identical to sendtransaction wrt locktime bydefault," but that is 1) not really in the spirit of createrawtransaction 2)not replicatable in bitcoin-tx  due to it not knowing the current height.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,13,2015-03-22 18:30:11,920.47,,1,,"b""b' ut implementation OK (although I agree it is better not to extend utility RPC in principle)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,14,2015-03-22 18:30:11,209.13,,,1,"b""b' Updated 1-line help to indicate locktime is optional.  Thanks Luke.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,15,2015-03-22 18:30:11,753.38,,1,,"b'b\' Closing this.  ""The wind is blowing negative"" based on comments", and the long term direction is to remove pure function RPC calls; you don\\\'t need to call a server to achieve what is better left to a lib or bitcoin-tx.  Just as easy to use bitcoin-tx as it is to use bitcoin-cli from the command line.  And if it\\\'s custom code, just use a lib.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,closed,2015-09-15 18:15:45,1425.57,6,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,16,2015-03-22 18:30:11,31.02,,,1,"b""b' Recap:@gmaxwell Was concerned that future rawtx RPC upgrades are so important", this one should wait for themOthers stated that rawtx RPC upgrades are not only unimportant, but are discouragedIn spite of this," rawtx upgrade #6346 was happily merged Conclusion: [ERROR] internal consistency failure'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,17,2015-03-22 18:30:11,2.85,,,1,"b'b\' Happy to re-open this if people think it will get merged in the short term.  ""easy to close"," easy to reopen"" is the more general goal.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,18,2015-03-22 18:30:11,350.88,,1,,"b""b' IMO it makes more sense to merge this than #6346 did'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,19,2015-03-22 18:30:11,83.95,,1,,"b'b"" Is there a document referencing general direction for these things?  If the above is true (ref @dgenr8\'s comments)",  then,"  why did #6346 get merged?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,20,2015-03-22 18:30:11,511.68,1,,,b'b\' Reopnening this. Even though I\\\'d like to move away from internal utility functions as well, it has only very  local code impact but there are a lot of people asking for it," so may as well merge it in the ""doesn\\\'t hurt"" category.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,reopened,2015-09-27 10:36:13,980.47,7,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,closed,2015-10-23 10:47:31,11.3,7,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5936,closed,-,-,-,7,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,opened,2015-04-03 16:47:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,title,2015-04-03 16:47:26,00:00,,1,,"b""b' Alter assumptions in CCoinsViewCache::BatchWrite'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,body,2015-04-03 16:47:26,00:00,,1,,"b""b' Previously it would break if you flushed a parent cache while there was a child cache referring to it.  This change will allow the flushing of parent caches. It also modifies the unit test to include flushing of intermediate caches.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,closed,2015-04-23 19:28:02,160.6,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,reopened,2015-04-23 19:29:55,1.88,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,1,2015-04-03 16:47:26,1317.9,,1,,"b""b' Untested ACK"," but the unit test should cover it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,2,2015-04-03 16:47:26,68.03,,1,,"b""b' Needed rebase (nit fixed)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,3,2015-04-03 16:47:26,395.37,,1,,"b""b' @morcos This needs an ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,4,2015-04-03 16:47:26,221.15,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,5,2015-04-03 16:47:26,931.43,,1,,"b""b' Code review & lightly tested ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,6,2015-04-03 16:47:26,1413.75,,1,,"b""b' This was rebased to modify the new unit test added from #6932 as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,closed,2015-11-27 11:45:04,975.15,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5967,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,opened,2015-04-04 01:15:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,title,2015-04-04 01:15:11,00:00,,1,,"b""b' DEPENDENT: Globals: Avoid calling Params()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,body,2015-04-04 01:15:11,00:00,1,,,"b'b"" Passing CChainParams explicitly as parameter when possible facilitates testing and refactoring. Dependencies:[X] Chainparams: Refactor: Decouple IsSuperMajority from Params() #5968[X] Chainparams: Remove redundant getter CChainParams::SubsidyHalvingInterval() #5996[X] Chainparams: Refactor: Remove redundant HashGenesisBlock() getter #5997[X] Chainparams: Refactor: Remove redundant AllowMinDifficultyBlocks() getter #5998[X] Cleanup: Delete CChainParams getters to attributes from Consensus::Params #5999[X] Chainparams: Explicit CMessageHeader::MessageStartChars to functions in main: #6173[X] Chainparams: Explicit Consensus::Params arg for almost all remaining functions #6163[X] Globals: Make AcceptBlockHeader static (Fix #6163) (AcceptBlockHeader) #6982[X] Globals: Don\'t call Params() from  #6986 [global-chainparams-miner][ ] Blocksize: Turn MAX_BLOCK_SIZE and MAX_BLOCK_SIGOPS into functions #6625 ~~[ ] Chainparams: Explicit Consensus::Params arg in consensus functions #6024~~[ ] Consensus: Adapt declarations of most obviously consensus functions [closed for now] #6591 [consensus-params-0.12.99][ ] Globals: Explicit CChainParams in main.o (not touching the interface with net.o)[ ] Globals: Explicit CChainParams in net.o (voluntaries required", ideally someone heavily touching net.o for any other reason)[ ] Globals: Remove SelectParams() EDIT Initial description: After the struct Consensus::Params was created in #5812, there are some redundant getters in CChainParams. This depends on all the PRs that help remove them and continues passing CChainParams and Consensus::Params more explicitly, mainly in main.o, miner.o and .The rpc\'s, net.o, rest.o and base58.o are left with direct Params() calls. In the tests," Params(CBaseChainParams::MAIN) is preferred.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,1,2015-04-04 01:15:11,851.62,,1,,"b""b' Note that AcceptToMemoryPool is ignored because the calls to Params() there will be replaced with policy initialization in .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,2,2015-04-04 01:15:11,1293.65,,1,,"b""b' Closing for now"," although I will keep updating the dependencies and rebasing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,closed,2015-04-23 13:00:27,705.27,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,reopened,2015-05-19 23:07:31,607.07,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,closed,2015-05-19 23:08:10,0.65,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,reopened,2015-08-27 06:25:06,436.93,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,3,2015-04-04 01:15:11,1050.28,,,1,"b'b\' Rebased and reopened. #6024 replaced with #6591.voluntaries required for the step ""Chainparams: Explicit CChainParams in net.o"" which is not coded here.Hopefully someone heavily touching net.o for any other reason (please tell anyone you know doing that about this PR) doesn\\\'t mind to take that part.The final step ""Chainparams: Remove SelectParams()"" is not coded either", but I\\\'m more than happy to do that myself once it\\\'s possible.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,4,2015-04-04 01:15:11,75.82,,1,,"b""b' Comparison URL to review this PR independently of its dependent: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,5,2015-04-04 01:15:11,987.6,,1,,"b""b' Rebased on top of #6591 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,6,2015-04-04 01:15:11,737.75,,1,,"b""b' Rebased after #6163 and #6982 have been merged"," opened #6986.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,7,2015-04-04 01:15:11,1400.85,,,1,"b'b\' Replaced by #7053. Since I think it was extremelyuseful to group many related PRs under one big ""DEPENDENT"" one and coordinate how many of them are opened at the same time; at somepoint after 0.12 is forked I will open and analogous PR to continuethis one. But even if I believe that is a great example of anapparently-hard-to-remove global", the next PR will be more generic: there\\\'s more globals to passdown explicitly not just (mempool, mapBlockIndex,chainActive, pindexBestHeader...). So ideally we would make this workper-function rather than per-global. That\\\'s also more parallelizablein terms of people. Explicitly passing all its variables to afunction is in principle a simple task, but I think it would be agood opportunity for new developers to get familiarized with thedevelopment process (rebases, nits, utACKs, re-utACKs, etc) while thechange they\\\'re doing is (while not a priority) something generallydesired in the long term, so they can see their PR eventually merged.In any case, the main point of doing it with globals in general istouching function declarations less total times to make the processless disruptive for other unrelated PRs. In addition, this was never complete but as new functions are createdin main it becomes more incomplete as time passes. Without goingfunction by function, one that I thought only neededConsensus::Params, may need now the full CChainParams while I missthe change in blind rebase. It is not an unsolvable problem, but itwould make the refactor more disruptive than needed. I will post here to link to that new DEPENDENT PR. In the meantime,if you were interested in this PR, you can review #7053, which is this the last part of this PRthat will be opened independently (apart from #6625 which is more partof #6382).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,closed,2015-11-18 11:53:44,328.63,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5970,closed,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,opened,2015-04-08 04:40:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,title,2015-04-08 04:40:08,00:00,,1,,"b""b' Direct headers announcement'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,body,2015-04-08 04:40:08,00:00,,,1,"b'b"" Currently", on a new block we send an inv out with the hash of the new tip (and, after #5307, of all new blocks). With headers-first sync, we could instead just send out the headers immediately (they\'re only 2.5 larger, and the peer would likely be fetching those anyway). To do so," we need several changes:1) Have a means of negotiating that the peer wants headers instead of block invs.2) Modify the code to send out the headers immediately and bypass sending invs.3) Be able to trigger the direct-download fetch strategy based on learned headers. @sdaftuar Are you interested in this? You\'ve been doing other block relay improvements.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,1,2015-04-08 04:40:08,552.48,,,1,"b'b"" Yep I agree this would be good; I\'ll think about this for a bit and likely come back to you with a few questions...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,2,2015-04-08 04:40:08,597.35,1,,,"b'b"" For negotiating headers versus inv\'s", I guess the method that occurs to me is to bump the protocol version number, is that what you had in mind? It seems to me that the chief problem to solve is making sure that when we send headers to a peer, they will be accepted -not rejected because of a missing prior header.  As I understand the code, none of the state we\'re currently keeping would tell us what headers a given peer has already seen.  The approach I\'m working on now would be to start keeping track of the last header we\'ve sent a peer, and combine that with pindexBestKnownBlock (best block that the peer has announced to us) to estimate our peer\'s best header.  Then, in the places where we currently inv a block, I\'d send headers to the peer, the range of which I\'d calculate by starting at the block being inv\'ed, and walking back until I either get to the last header I\'ve sent that peer (pindexLastHeaderSent), or pindexBestKnownBlock, or an ancestor of either (ie in the event of a reorg). And I was also thinking that in the event that either pindexBestKnownBlock & pindexLastHeaderSent are both NULL or that the above algorithm would generate a too-long headers chain (not sure what value to use here, maybe only be willing to send up to 8 or 16 headers or something?), I\'d revert to just sending an inv, and letting the peer figure out what to do.  If we let that value be too large, then a node doing initial block download would be inundated with headers from all its peers if a block is announced during the download, which seems undesirable.  On the other hand," I want it to not be so small as to be useless during a reorg. Any thoughts on this approach?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,3,2015-04-08 04:40:08,615.87,,,1,"b'b"" You\'re going further than I imagined", nice :) So, for the negotiation: either a protocol version bump, or sending some new and optional (thus otherwise ignored) message type to indicate being fine with being fed headers for block propagation. In either case, this probably requires a small BIP (like BIP 35 or BIP 61). I was just thinking about relaying whatever new block index entries become part of _our_ new best block chain (see the code touched by #5307, but send a headers message rather than an inv). Assuming peers actively try to synchronize with us, typically just sending our new best chain entries should suffice to let them keep up. Trying to figure out which headers they already have may help of course, but we should avoid trying to push headers to a node that is still in initial sync mode, as that would just slow them down. Also," there is currently no infrastructure for avoiding duplication in headers announcement (while there is for inv messages). Perhaps the inv code should be . This may not be necessary if the handling logic is good enough to keep track of which headers a peer has.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,4,2015-04-08 04:40:08,240.08,,1,,"b""b' Another random idea: if you want to try to keep track of which headers a peer knows about"," you can probably process the entries in the CBlockLocator objects sent in getheaders commands.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,5,2015-04-08 04:40:08,14.12,,,1,"b'b\' @sipa Thanks -that ""random idea"" was actually pretty important"," I overlooked it initially. I believe I have a working implementation of this (it\\\'s still a work in progress but you can see it here: url  -I introduced a new ""sendheaders"" p2p message which requests that a peer announce blocks with headers rather than invs). I ran into one issue I wanted some advice on; it seems to me that we wouldn\\\'t necessarily want to initiate headers-announcements with all our peers", because if a node has a lot of connections, the additional overhead from sending headers will at some point exceed the savings from eliminating getheaders messages (I think at around 15 or 16 peers). One option to address this could be to limit requesting headers announcements to, say, just our outbound peers, which would be a simple way of ensuring we haven\\\'t added any overhead.  But that\\\'s not really optimal at all, as I think what we\\\'re really interested in is having the peers that we\\\'re most likely to send a getdata be the ones that announce blocks with headers, which may or may not be our outbound peers. An alternative idea would be to track peer getdata requests, so that if a peer\\\'s requests are below some threshold (maybe something like, they\\\'ve requested less than 4 blocks from us out of the last 64), we revert to sending them inv\\\'s rather than headers, even if they have requested headers announcements. But before I go down this road too far I wanted to see if this is a reasonable direction to go at all?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,6,2015-04-08 04:40:08,233.38,,1,,"b""b' Superseded by #6494.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,closed,2015-09-24 18:13:25,813.28,1,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,reopened,2015-09-24 18:14:06,0.68,1,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,7,2015-04-08 04:40:08,1.0,1,,,"b""b' Oops"," I forgot this was only an issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,8,2015-04-08 04:40:08,1091.62,,1,,"b""b' Could be closed"," because #7129 is merged?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,9,2015-04-08 04:40:08,1.65,,1,,"b""b' Fixed by #7129 (#6494).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,closed,2015-11-29 12:27:41,1093.58,2,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5982,closed,-,-,-,2,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,opened,2015-04-09 11:56:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,title,2015-04-09 11:56:04,00:00,,1,,"b""b' Bugfix: Fix testnet-in-a-box use case'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,body,2015-04-09 11:56:04,00:00,,1,,"b""b' Remove testnet checkpoint and allow for older tip blocks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,1,2015-04-09 11:56:04,75.88,,1,,"b""b' ut ACK"," though it needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,closed,2015-06-23 08:36:05,1240.02,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,reopened,2015-06-23 08:37:58,1.88,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,2,2015-04-09 11:56:04,1166.13,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,3,2015-04-09 11:56:04,241.48,,1,,"b""b' Any thoughts on the nits and proposed changes to this PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,4,2015-04-09 11:56:04,341.9,,1,,"b'b"" Along the lines of @jtimon \'s comments a genesis checkpoint does not appear to be needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,5,2015-04-09 11:56:04,39.75,,,1,"b'b"" @jgarzik I\'m actually saying the opposite: the genesis checkpoint that can be trusted (genesis block) is good"," but why remove any existing checkpoint in testnet3 ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,6,2015-04-09 11:56:04,65.65,,1,,"b'b\' @jtimon That was covered in the opening PR description?  ""allow for older tip blocks"" If we don\\\'t want that then sure", keep the checkpoint.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,7,2015-04-09 11:56:04,28.65,,1,,"b""b' The op says: why?I want this (like in url  jgarzik seems not to want this for some reason.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,8,2015-04-09 11:56:04,11.3,,1,,"b""b' I have no real opinion.  Just moving things along.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,9,2015-04-09 11:56:04,225.8,,1,,"b'b"" Checkpoints beyond the genesis block are a problem because testnet-in-a-box networks won\'t have those blocks. MaxTipAge is needed because otherwise mining the first (non-genesis) block is impossible on such a network.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,10,2015-04-09 11:56:04,478.58,,,1,"b'b"" I see. They could also disable checkpoints in their test"," but I don\'t havea strong ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,11,2015-04-09 11:56:04,437.13,,1,,"b'b"" @jtimon I don\'t care about that proposed change"," but it\'s certainly not a bugfix or in the scope of this PR...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,12,2015-04-09 11:56:04,28.72,,1,,"b'b"" Instead of removing the checkpoint", users of testnet-in-a-box could specify the option  right? I don\'t see a simple alternative solution for the tip age," though I still think having it per network is hacky.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,13,2015-04-09 11:56:04,72.67,,,1,"b'b"" +1 on @laanwj \'s suggestion to avoid removing testnet3\'s checkpoint. @luke-jr I\'m just asking to add the genesis checkpoint in main", just like you are adding it to testnet (and already exists on regtest), but if you want to leave that for later (see #6382)," that\'s fine too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,14,2015-04-09 11:56:04,173.25,,1,,"b""b' @laanwj If I remove the checkpoint changes here"," can we merge the other part with an understanding it will go away when a better solution is found?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,15,2015-04-09 11:56:04,1229.17,,,1,"b""b' @luke-jr fine with me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,16,2015-04-09 11:56:04,1174.55,,1,,"b""b' @luke-jr ping'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,17,2015-04-09 11:56:04,440.62,1,,,"b""b' Sorry for the delay"," done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,18,2015-04-09 11:56:04,875.58,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,19,2015-04-09 11:56:04,103.97,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,closed,2015-10-01 12:12:38,214.67,1,16,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,5987,closed,-,-,-,1,16,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,opened,2015-04-13 17:31:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,title,2015-04-13 17:31:27,00:00,,1,,"b""b' Consensus: Turn CBlockIndex::GetMedianTimePast into independent function'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,body,2015-04-13 17:31:27,00:00,,1,,"b""b' ContextualCheckBlockHeader() [which is needed to verify a block header] depends on CBlockIndex::GetMedianTimePast but the goal is for verify block header is to be independent from chain.o and CBlockIndex C++ class [which cannot be exposed in the consensus C API].This is also contained in #5995.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,1,2015-04-13 17:31:27,138.35,,1,,"b""b' Needed rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,2,2015-04-13 17:31:27,1106.17,,1,,"b""b' Needed rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,3,2015-04-13 17:31:27,992.82,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,4,2015-04-13 17:31:27,489.08,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,5,2015-04-13 17:31:27,22.97,,1,,"b'b"" @sipa I know"," but I\'m waiting for #6051 to be merged since it will require another rebase after that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,6,2015-04-13 17:31:27,1301.32,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,7,2015-04-13 17:31:27,978.12,,1,,"b""b' Modulo nit"," (somewhat tested) ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,8,2015-04-13 17:31:27,713.6,,1,,"b'b"" @petertodd \'s nit fixed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,9,2015-04-13 17:31:27,1249.93,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,10,2015-04-13 17:31:27,593.1,,,1,"b'b"" Closing for now EDIT: as said on #6051 I\'m not convinced anymore that is a good idea to create  and  instead of just .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,closed,2015-07-15 23:59:12,387.75,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,reopened,2015-08-26 08:21:56,502.73,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,11,2015-04-13 17:31:27,507.47,,1,,"b""b' Rebased and reopened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,12,2015-04-13 17:31:27,516.82,,1,,"b""b' Rebased on top of #6591. Still had merging conflicts so rebased on top of master after that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,13,2015-04-13 17:31:27,616.45,,1,,"b""b' utACK for c85ded0 after nit is addressed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,14,2015-04-13 17:31:27,996.72,,1,,"b""b' Closing in favor of #6672 . '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,closed,2015-09-14 19:54:21,692.42,0,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6009,closed,-,-,-,0,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,opened,2015-04-15 17:34:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,title,2015-04-15 17:34:46,00:00,,1,,"b""b' Signedness of an Enum is undefined in standard C++'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,body,2015-04-15 17:34:46,00:00,1,,,"b'b"" I am reviewing code", and came accross the following in chain.h. Now I don\'t think there is a problem per se, but from what I can see the standard says that nUpTo may be either signed or unsigned. Is this a problem when combined with the various bitwise operations," or even comparison operator < ? My compiler complains. Edit:Here\'s what the C++03 standard ( 14882:2003) document says in 7.2-5 (Enumeration declarations):""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,closed,2015-04-15 20:04:56,150.17,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,reopened,2015-04-15 20:04:59,0.05,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,1,2015-04-15 17:34:46,1117.32,,1,,"b'b"" Right. May make sense to change the passed-in type to instead. On the other hand", with C++11 it is possible to define the type of an enumeration and this problem goes away," so as this doesn\'t cause any immediate problems may be better to wait for that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,2,2015-04-15 17:34:46,1401.32,,1,,"b'b"" This could be addressed now that we\'ve started using c++11.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,3,2015-04-15 17:34:46,73.67,,,1,"b""b' Awesome. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,closed,2016-05-02 11:08:24,903.42,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6017,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,opened,2015-04-22 22:36:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,title,2015-04-22 22:36:41,00:00,,1,,"b""b' MOVEONLY-ish: Move most block header validation function defintions to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,body,2015-04-22 22:36:41,00:00,,1,,"b""b' Right after #5975 is merged I would open this PR so I think it makes sense to open it already in case both things can be merged at once"," and also to simplify #6051 dependecies. Note that this is no longer depedendent on #5696 nor #5669 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,1,2015-04-22 22:36:41,136.8,,1,,"b""b' Closing until #5696 is resolved'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,closed,2015-04-23 00:53:29,136.8,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,reopened,2015-04-23 13:02:23,728.9,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,closed,2015-04-23 13:17:32,15.15,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,reopened,2015-04-24 22:23:35,546.05,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,2,2015-04-22 22:36:41,1297.12,,1,,"b""b' Reopened as independent from #5696'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,3,2015-04-22 22:36:41,49.1,1,,,"b'b"" NACK. Why? #5696 has several ACKs and is likely to be merged very quickly. Those changes have gone through half a dozen iterations", but never been merged because they\'re constantly moving in and out of PRs. Now you\'ve tacked it on to something else that will need more review, essentially putting the brakes on it again. Worse yet, it fails to build. Please," just wait for one chunk at a time. This is getting out of hand.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,4,2015-04-22 22:36:41,570.32,1,,,"b'b"" I\'m sorry", I just wanted to show that this (and everything necessary to expose VerifyHeader) is independent from #5696, from whether MANDATORY_SCRIPT_VERIFY_FLAGS is consensus, policy, or none of them. And if the includes in #5696 (not so many now that the policy stuff is left out) trigger a rebase (like they have done many times before), this could still not need rebase and have an older commit ID the replacement of url I also wanted to show additional motivation for  #5975 (or maybe merge both together, it\'s not that big of a change), for example, to support the argument for merging #5975 before #6055. About the building error, I don\'t know why forgetting .h files in the makefile doesn\'t fail in my computer, but fixed. Anyway, even if it\'s independent from #5696, merging one would trigger a trivial rebase on the other," so closing until #5696 and #5975.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,5,2015-04-22 22:36:41,12.68,,1,,"b'b\' Try ""make distcheck""", which builds a source package abd rebuilds from that.If you don\\\'t do that (and this has bitten me as well), you risk that thebuild uses files from the repository which are not listed as source filesin the build system.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,6,2015-04-22 22:36:41,23.62,,,1,"b""b' Thank you @sipa . Oh"," I forgot to actually close the PR'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,closed,2015-04-25 09:26:19,662.73,2,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6048,closed,-,-,-,2,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,opened,2015-04-22 23:12:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,title,2015-04-22 23:12:44,00:00,,1,,"b""b' MOVEONLY: Consensus: Move most of consensus functions (pre-block)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,body,2015-04-22 23:12:44,00:00,1,,,"b'b"" Dependencies:~~MOVEONLY: Move constants to consensus.h #5696~~~~Separate CValidationState from main #5669~~~~Consensus: Refactor: Separate CheckFinalTx from main::IsFinalTx #6063~~~~Consensus: Decouple ContextualCheckBlockHeader from checkpoints #5975~~~~Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs #6061~~ I\'m sorry for killing commit ids and creating new PRs so easily around this", but I really needed to explore different ways this. And my conlusion is that everything gets more readable if we do the moveonly first, it is specially important for libconsensus API proposals and how could they potentially change bitcoin core\'s storage more readable.Since Script is already exposed, I think the remaining types to be verified by libconsensus are: Transaction, BlockHeader and Block. For each one of them we will want to expose a full verification function. Additionally, we may want to expose checks in phases, for example, in the way that is already separated in bitcoin core, mostly to prevent DoS attacks and to put policy checks in between (ie: context-less checks before storage-dependent checks, expensive script validation the last thing, etc). I don\'t think the intermediary checks will generate a lot of discussion, since if we can reach the full validation version for each of the types with proper C APIs, exposing any subset of the checks will probably be easy. So I will focus on the full validation functions for now and calling them VerifyTx, VerifyHeader and VerifyBlock respectively. But this is not moving everything necessary for libconsensus. Before it is possible for libconsensus to expose full block verification, it has to be able to verify block headers and transactions independently. So we know VerifyBlock comes after VerifyTx and VerifyHeader, but we don\'t know whether VerifyTx or VerifyHeader will be ready first. Because they depend on discussions about CCoinsViewCache andCBlockIndex respectively about how to expose its storage, which may require or fit well with structural changes in how bitcoin core stores them, for example, if UTXO commitments are going to be softforked in some way, the API for VerifyTx should be forward compatible with that, which may delay its exposure. And because we don\'t want to unnecessarily make libbitcoin bigger unless something more it\'s going to be exposed, I thought that having two cpp files could be useful, I named them  and  but it\'s open to bikesheding. The point is that when one is ready you can add it to libconsensus while leaving the other in the server building module.  Once they\'re both ready, a last moveonly commit after this one will be required to expose a C API for full block rule validation, that new code can go in  The intention of moving all the function declarations that we know we will need (for example, main::CheckBlock) without moving the actual code to a cpp in the same commit is to minimize the number of include restructuring commits, they can all be done right after this PR.Alternatively the block declarations can be delayed, but I believe that it\'s worth it to move all transaction and header declarations in the same commmit since it doesn\'t take that much to move it all fast (see the non-moveonly commits in this PR," they\'re quite trivial).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,1,2015-04-22 23:12:44,102.8,,1,,"b""b' Closing until #5696 is resolved'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,closed,2015-04-23 00:55:32,102.8,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,reopened,2015-04-23 13:02:16,726.73,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,2,2015-04-22 23:12:44,792.12,1,,,"b'b"" Are you sure is not part of consensus? e.g. it\'s used in to determine the total amount of work on a chain. It\'s the only function left in which is kind of unfortunate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,3,2015-04-22 23:12:44,129.58,,1,,"b'b"" The highest level function I\'m contemplating would be VerifyBlock and that\'s not necessary for it. It\'s certainly not necessary for VerifyHeader. That\'s used to chose the longest chain", so it\'s seems more part of the index than validation rules. Maybe in the future we can expose that too somehow," but one step at a tine...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,4,2015-04-22 23:12:44,1233.42,,1,,"b'b"" But (computed using  ) is used in e.g.  "," which choose the best chain.@theuni what\'s your opinion here?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,5,2015-04-22 23:12:44,2.58,,1,,"b'b"" Depends on whether we define consensus as (conceptually) a black box that just says whether a particular chain is valid or not", or whether we include the mechanism for determining which of possible valid chains as well. I don\'t really have an opinion here," apart from that I think separating these two concerns in the code makes sense whether we expose that in libconsensus or not.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,6,2015-04-22 23:12:44,6.62,,1,,"b""b' Ok fair enough. But I do think this destroys the purpose of  / . The goal was to have the proof-of-work functions in one place. Now _one function_ is left in that file...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,7,2015-04-22 23:12:44,1123.32,,1,,"b'b"" well yes", my plan was to destroy pow and move the remaining function to chain.o," but zince there\'s more stuff being created there...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,8,2015-04-22 23:12:44,635.02,,,1,"b'b"" Built and ran tests ACK edit: happy to do more", but I wasn\'t sure where to begin testing this," aside from writing my own tests""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,9,2015-04-22 23:12:44,1195.28,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,10,2015-04-22 23:12:44,16.45,,1,,"b""b' Rebased with one less dependency (2 commits less).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,11,2015-04-22 23:12:44,1248.2,,1,,"b""b' Rebased again. Only 2 PR dependencies to go"," ping  #5975 and #6061.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,12,2015-04-22 23:12:44,483.72,,1,,"b""b' Needed rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,13,2015-04-22 23:12:44,1257.72,,1,,"b""b' Rebased. All PR dependencies merged or replaced with equivalent commits.Now this is purely move only.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,14,2015-04-22 23:12:44,1017.97,,1,,"b""b' Squashed the 2 moveonly commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,15,2015-04-22 23:12:44,842.48,,,1,"b'b"" Confirmed move-only with the exception of which is obviously fine. I didn\'t bother checking includes and function prototypes though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,16,2015-04-22 23:12:44,1412.18,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,17,2015-04-22 23:12:44,744.73,,1,,"b'b"" I\'m having second thoughts about  +  vs .If we don\'t care about exposing verifyTx or verifyHeader before verifyBlock is ready", then we can just have  and we can move more things at the same time (CheckBlock, ContextualCheckBlock and GetBlockSubsidy," for example). Do we care about being able to expose VerifyTx without being prepared to also expose VerifyHeader and VerifyBlock?Do we care about being able to expose VerifyHeader without being prepared to also expose VerifyTx and VerifyBlock? Thoughts?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,18,2015-04-22 23:12:44,759.6,,1,,"b""b' Closing for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,closed,2015-07-15 23:59:17,657.02,2,16,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6051,closed,-,-,-,2,16,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,opened,2015-05-12 08:46:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,title,2015-05-12 08:46:46,00:00,,1,,"b""b' Autoprune: Do relay blocks if possible'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,body,2015-05-12 08:46:46,00:00,1,,,"b""b' Currently we dont relay blocks in prune-mode", which seems to be very bad, as such a negative side-effect is not even mentioned in the help-message. So with this pr we still relay if the peer has at least up to our pruning threshold.I added another 6, to give a little more room for preventing the unlikely case that we are pruning the blockwhile the request is in flight. This means that we still relay," if the guy is not more than 282 blocks behind.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,1,2015-05-12 08:46:46,32.75,,1,,"b'b"" We should do something like this", but it won\'t help without also havingsome means of advertizing that we can relay blocks, as right now," nobodyshould even be connecting to pruned nodes (which advertize as spv nodes).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,2,2015-05-12 08:46:46,10.07,,1,,"b""b' @sipa Can you point me to the code", where we dont connect to pruned nodes," please?Because I assumed we dont distinguish on service-bits in the connection logic.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,3,2015-05-12 08:46:46,39.12,,1,,"b'b"" Unsure", addnode may work," but automatic discovery shouldn\'t.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,4,2015-05-12 08:46:46,12.33,1,,,"b""b' So you dont know the code? Didnt you write the address-manager? Well", I will go bother and test now, if a node without NODE_NETWORK announces his ip, and whether or not we add it and connect to it with the address-manager. Because exactly that is," what I was assuming.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,5,2015-05-12 08:46:46,184.1,1,,,"b""b' So I dont know how to test this NODE_NETWORK thing. The address-manager does not care about nServices", so from my understanding, there is no difference between NODE_NETWORK-nodes and non-NODE_NETWORK-nodes.We make a difference after we have connected in the version message, but not before. I any case this pull request does not hurt. Block relay is highest priority, and I believe we really should always announce the block, whenever possible. Lets say someone runs a bunch of full nodes, because he wants to contribute to the network, thenour -prune feature is really bad, if suddenly all those nodes dont relay blocks anymore.The guy thinks that he is doing something good for the network and himself (with pruning) whileits not. If what you are saying is true, that nobody connects to pruned nodes, this would be also bad, becausethis is not even mentioned in the help-message. If so, there is a big fat warning missing. But again," I can not even find this behavior in the source code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,6,2015-05-12 08:46:46,74.57,,1,,"b'b"" ACK concept. I don\'t think this pull-req should be gated on whether or not we advertise that other nodes should connect to us; relaying is always valuable to ensure the P2P network is well connected. Note how if you start a node with -listen=0 you\'ll never have anyone connect to you", yet we still relay blocks. The same logic should apply here. What I don\'t get is why make this dependent on the peer\'s advertised starting height? Why should their height (which may be out of date) have any relevance to whether or not we relay a block? Instead I think this should be based only on our height," with an appropriate window to prevent stalls. As for the size of that window... isn\'t this code only triggered when _we_ get a new block? You\'d have to get a burst of >288 blocks in a row in non-initial-download mode to run into that problem seems rather unlikely. I\'m not sure it\'s really worth having extra code for such an unlikely case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,7,2015-05-12 08:46:46,97.08,1,,,"b""b' @petertodd The code I added only cares about the height of the other node", for both nStartingHeight and pindexBestKnownBlock. The reason is that this avoids, that the other node asks us for blocks we dont have.  If we know, that the other has at least what we have (minus 288), nothing can go wrong. The code already is executed for (!fInitialDownload), which is based on our height. So there must have been a reason why it has been disabled in the first place. So I added, to also care about the other nodes height. I am just very unhappy, with block relay being completely disabled for pruning. To me," this is a bug.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,8,2015-05-12 08:46:46,24.22,1,,,"b""b' @cozz Whoops", yeah, brainfart on my part. That exception is reasonable, although the fact we need it is annoying. :( Pity that we still deal with stalling peers so badly. Definitely agree re: the total disabling. Heck," I even argue that SPV nodes should be forwarding blocks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,9,2015-05-12 08:46:46,156.3,1,,,b'b\' I made a couple code comments," but in reviewing this I noticed another issue. I think pruning nodes should respond to a ""getblocks"" message differently than non-pruning nodes", so that they don\\\'t ever generate an inv for a block they don\\\'t have on disk.  I haven\\\'t generated this scenario in a test yet, but I believe it\\\'s possible to be in a situation where an 0.9 (or earlier) node could send a getblocks message to a pruning node, and if the 0.9 node is far enough behind, that could result in a pruning node serving up inv\\\'s for blocks it doesn\\\'t have (which the 0.9 node would then request, but not be able to receive, and then eventually disconnect). Assuming we agree that behavior should change, then I think perhaps this pull could be much simpler, where we don\\\'t need to bother with the special case here in the event that we\\\'re pruning (ie we just remove the  ) on line 2286.  My reasoning:0.10 and later nodes will not download non-inv\\\'ed blocks except from NODE_NETWORK peers (there\\\'s a guard around the call to  )0.9 and 0.8 nodes rely on inv\\\'s, including those generated in response to a getblocks, to determine what to ask for from a peer (I\\\'m not all that familiar with the p2p behavior of 0.9 and 0.8 nodes though, hopefully someone more familiar can confirm that the above is correct.) I guess one thing I am not sure how to consider is the p2p behavior of even older bitcoin core clients (which I haven\\\'t looked at) and non-bitcoin-core clients.  But my first thought is that if we\\\'re advertising ourselves as not being NODE_NETWORK and we\\\'re only generating inv\\\'s for blocks that we have (and are likely to still have for some reasonable time window), that this ought to be acceptable network behavior.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,10,2015-05-12 08:46:46,17.33,,1,,"b'b"" @sdaftuar Sounds very reasonable to me. 0.8 and 0.9 should never fetchanything that was not inv\'ed", as far as I know. For 0.10, we should only inv in case the last common ancestor ofpindexLastCommonBlock and the block being inved is not pruned (otherwise wemay trigger an async fetch that crosses pruned block ranges). That isprobably a safe mechanism in any  if the code already does this,reviewing is currently hard for me. @cozz Yes, I understand. I think the current pruning facility is extremelylimited in usefulness (e.g. you can\'t even -addnode within a privatenetwork to it and expect a useful result)," and I agree the relaying issueis independent from the .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,11,2015-05-12 08:46:46,157.23,,1,,"b'b\' Fixed nits. So I believe this pruning feature might be better to be declared as ""experimental"" for 0.11", if there is such limited usefulness and potential negative side effects. For example besides block relay, if a lot of nodes decide to use this feature," then the address-manager gets ""spammed"" with pruned nodes.Non-pruned nodes should have priority over pruned ones", as for address-relay and address-selection, which is not even implemented currently. As for this pull, I\\\'d also say we can just always inv, because we dont call FindNextBlocksToDownload for pruned nodes. But then again, its unclear why it was even disabled in the first place.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,12,2015-05-12 08:46:46,134.5,,1,,"b'b"" Hmm", @sdaftuar mentions that 0.10 does not download from fClient nodes. That\'s not entirely true the direct fetching loop (in immediate response to an inv) may fetch from anyone who sends an inv, but the asynchronous fetching won\'t. That means that even with this code," 0.10 and up will not be able to retrieve a reorg from a pruned peer.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,13,2015-05-12 08:46:46,22.25,1,,,"b'b"" @sipa Sorry if I was unclear but yes that was what I was referring to when I said 0.10 wouldn\'t download non-inv\'ed blocks except from NODE_NETWORK peers.  I agree that it seems unfortunate that 0.10 clients specifically wouldn\'t be able to retrieve a reorg from a pruned peer (while 0.8/0.9 would", via their getblocks logic).  Perhaps we should consider #5307 with some small cap on the number of blocks to inv," so that small reorgs would be successfully relayed from a pruning node to an 0.10 node (though with the n^2 overhead mentioned in that pull)?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,14,2015-05-12 08:46:46,765.28,1,,,b'b\' EDIT: the suggestion I posted in this comment doesn\\\'t actually work; inv\\\'s received for blocks that are already in mapBlockIndex don\\\'t get directly fetched," so this approach wouldn\\\'t help 0.10/0.11 nodes receive reorg\\\'s after all.  #5307 may still be an option if we think this is important... ~~Another idea: perhaps pruning nodes could behave differently when they\\\'re responding to a ""getheaders"" message", so that in addition to returning headers, they would also send an inv if the headers being requested are for blocks that are all on disk and unlikely to be pruned (just as we would do for getblocks in #6130)?  This could serve as a hint to a peer that it can download those blocks from us, and would assist a peer in either handling a reorg or completing a small-ish sync (after, say, being down for less than 2 days).~~ ~~This feels a little ugly, and I\\\'m guessing not how we\\\'d want to behave in the long-run, but maybe this could be a workaround for the time being.~~\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,15,2015-05-12 08:46:46,1122.02,,1,,"b""b' Continued in #6148'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,closed,2015-05-16 08:15:55,1409.15,8,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,16,2015-05-12 08:46:46,1.08,,1,,"b""b' OH misundertood", #6148 is not based on this," but is a different implementation reopening.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,reopened,2015-05-16 08:17:01,1.1,8,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,17,2015-05-12 08:46:46,203.65,,1,,"b""b' Closing for #6148  We only announce what we have and not delete that soon anyway. And the asynchronous fetching is not called for pruned nodes. So what I did here is not even necessary.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,closed,2015-05-16 11:40:39,203.63,8,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6122,closed,-,-,-,8,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,opened,2015-05-25 17:25:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,title,2015-05-25 17:25:58,00:00,,1,,"b""b' Pruning code does not currently prune'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,body,2015-05-25 17:25:58,00:00,,1,,"b'b"" This one downloads the entire blockchain before pruning and destroys my vps"," debug sees my 25gb limit as usual but it just continues. I can\'t finish but it does hit 30gb before killing my vps.  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,1,2015-05-25 17:25:58,3.02,,1,,"b""b' This one works correctly but is getting old url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,2,2015-05-25 17:25:58,23.0,,1,,"b""b' @BitpopCoin Can you post your ? What  -target  did you set?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,3,2015-05-25 17:25:58,63.12,,1,,"b'b"" prune=25000 I deleted the debug"," I can try again if you think it should be working and it\'s on my end.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,4,2015-05-25 17:25:58,28.82,,1,,"b""b' It had Autoprune configured to use less than 25000MiB on disk for block files'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,5,2015-05-25 17:25:58,4.03,,1,,"b""b' @BitpopCoin you are aware of that the 25GiB are only for the blockstore (not including utxo set which should be around 761MB"," etc.)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,6,2015-05-25 17:25:58,21.57,,,1,"b""b' Yes the working version hits 26gb which is fine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,closed,2015-05-26 05:54:52,748.9,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,7,2015-05-25 17:25:58,1309.37,,1,,"b""b' I still have the issue. I tried the latest snapshot. Xxx'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,8,2015-05-25 17:25:58,29.37,,,1,"b""b' Thanks for the log.Could you run again with and upload the  again?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,9,2015-05-25 17:25:58,458.25,,1,,"b""b' @jonasschnelli Xxx'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,10,2015-05-25 17:25:58,536.97,1,,,"b""b' @laanwj i think this should get reopened.It looks after a real issue:Found the following in the logs (partial output of  ):  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,11,2015-05-25 17:25:58,2.72,,,1,"b""b' @jonasschnelli Fine with reopening"," but then the issue should get a relevant title'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,reopened,2015-05-28 10:46:11,291.32,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,12,2015-05-25 17:25:58,2.2,,1,,"b""b' @BitpopCoin: could you rename the issue title? Something that reflects the problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,13,2015-05-25 17:25:58,137.52,,1,,"b'b"" @BitpopCoin Thanks for reporting this; I think I see the problem. The pruning code enforces a requirement that the block files it keeps be contiguous", so that blockfile N will only be considered for pruning if blockfiles 0, ..., N-1 were already pruned. There is also a requirement that no block file will be pruned if there\'s a block in the file with a height that is too close to the height of the tip.  What appears to be happening here is that some peer likely inv\'ed you a block at the tip while you were syncing (this is normal behavior); that block was stored in block file 5, and since its height is so large, it effectively stops pruning from taking place.  From the : For what it\'s worth, if the node were able to fully sync, I believe eventually the pruning targets would be respected again.  This is certainly undesirable behavior though. I think the best fix may be to relax the restriction that files be contiguous," which will complicate the logic slightly but seems likely to be worth it to avoid this outcome.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,14,2015-05-25 17:25:58,294.05,,,1,"b'b"" For what it\'s worth"," I\'ve tried it many times. Last few times I\'ve used 2.5 gb to speed things up. But I\'ve originally used 25gb and it continues past 30gb breaking my droplet. I think pruning will be used for limited disks and going over at all will break things. Can you add a quit for now? So when I do test I don\'t have to spend an extra hour imaging the machine and restoring because the disk filled up and other things could have broke. I run many nodes and upgrading will double my costs so I need pruning. I was going to move to vultr large storage but they don\'t have imaging. Thanks guys.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,15,2015-05-25 17:25:58,319.63,,1,,"b""b' Indeed", there appears to be a bug here.  Just out of curiosity," are you using the relay network client with your pruned nodes?  I was able to reproduce something similar locally using the relay network during initial sync.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,16,2015-05-25 17:25:58,78.83,,1,,"b""b' Yes the relay node is connected. addnode=-:8335'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,17,2015-05-25 17:25:58,26.08,,,1,"b'b"" Good.  That makes sense.  I was wondering how a failure like this would have slipped through all the testing that has taken place thus far.  There is definitely a bug here and there are a few routes for fixing it with varying levels of risk.  There will be a patch forthcoming. In the meantime", if you want to test pruning, disable the relay node during initial sync (and catchup syncs if your nodes go offline," or just altogether).  It\'s a difficult to trigger corner case if the relay node isn\'t involved. Thanks for reporting!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,18,2015-05-25 17:25:58,69.18,,1,,"b'b"" I was trying to think of anything odd about my node but I kept only thinking about the permissions. Another Bitcoin created .bitcoin but it ran as root and could write so I ignored the permissions issue"," which was correct but I forgot I was using the relay network. I\'ll wait to try it again until a possible patch so let me know and I\'ll test. I went back to Luke\'s version but it\'s getting old. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,19,2015-05-25 17:25:58,492.02,,1,,"b""b' Can you help testing #6221? It should solve this issue by also pruning when blocks are non-contiguous.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,20,2015-05-25 17:25:58,8.68,,1,,"b'b"" I tried the nightly on 6-5 which didn\'t help. Should I try tonight\'s?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,21,2015-05-25 17:25:58,41.85,,1,,"b""b' Trying url  now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,22,2015-05-25 17:25:58,51.72,,1,,"b'b"" FYI #6221 hasn\'t been merged yet"," so that build won\'t help (I believe that\'s just what was in master).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,23,2015-05-25 17:25:58,7.92,,1,,"b'b"" Just started a build for #6221 url  @BitpopCoin: you should test this build. It\'s the master with 6221 on top. Ready in about 30mins.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,24,2015-05-25 17:25:58,6.28,,,1,"b""b' @jonasschnelli Thanks! Also if you and @BitpopCoin are up for it"," #6224 goes further to make pruning more effective when using the relay node.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,25,2015-05-25 17:25:58,32.02,,,1,"b'b"" Ok will both be in today? I already started"," I\'ll stop and wait. Thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,26,2015-05-25 17:25:58,14.22,,1,,"b'b"" I\'m trying url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,27,2015-05-25 17:25:58,704.68,,,1,"b'b"" It worked! Will you tell me when it\'s in the nightly then the rc? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,28,2015-05-25 17:25:58,722.7,,1,,"b""b' It has been merged into master so it will be in any nightlies from ~ 5 days ago"," and it has been backported to 0.11 so will also be in next rc (rc2).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,closed,2015-06-16 12:55:46,129.58,1,21,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,29,2015-05-25 17:25:58,994.35,,,1,"b""b' Thanks guys"," great work'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6184,closed,-,-,-,1,21,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,opened,2015-05-30 02:52:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,title,2015-05-30 02:52:47,00:00,,,1,"b""b' Restore minimum feerate to 10000 satoshis'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,body,2015-05-30 02:52:47,00:00,,1,,"b'b"" Only the minimum relay fee was intended to be reduced to 1000 satoshis", but due to mempool bugs, nodes can\'t handle divergent relay and mining fee rates properly yet.A quick workaround was merged for 0.9 by using the relay fee for mining (PR #3838), but without any consensus for the actual mining default to be dropped.Unfortunately, many miners seem to still run with default policies, and this fee rate makes spamming too cheap still.This brings the minimum fee rate back to up 10000 satoshis," which reflects the last consensus for standard mining fee rate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,1,2015-05-30 02:52:47,540.02,,1,,"b""b' ACK Reflects what wallets do as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,2,2015-05-30 02:52:47,381.52,,1,,"b""b' ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,3,2015-05-30 02:52:47,26.17,,1,,"b'b\' This effectively also bumps max. ""absurd"" fee to 1 BTC. Do we really want it?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,4,2015-05-30 02:52:47,27.37,,1,,"b""b' utACK.You also need to take care of the test at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,5,2015-05-30 02:52:47,25.78,,,1,"b""b' @jonasschnelli Fixed"," thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,6,2015-05-30 02:52:47,648.38,,,1,"b'b"" @paveljanik Good point; I agree that the absurd fee should stay the same. We probably should decouple those two constants"," especially as in the future it\'s likely that the min fee will be floating anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,7,2015-05-30 02:52:47,24.97,,,1,"b""b' Absurd fee rate split off to its own value", and Qt fixed to actually use it(!). Design decision: I did not add a CLI option to adjust this value independently due to the present string freeze. @wumpus," let me know if I should add this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,8,2015-05-30 02:52:47,402.57,,,1,"b'b"" Did I miss a discussion of this somewhere?  I\'m not sure I understand what is wrong with the current 1000 satoshi feerate.  Why does it need to be changed?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,9,2015-05-30 02:52:47,7.57,,1,,"b""b' @morcos Indeed There appears to be a large"," unspoken component to this? Reaction to stress test?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,10,2015-05-30 02:52:47,153.72,,1,,"b'b"" @jgarzik So", the math is that at 10 at current prices you need $2.5 worth of BTC to flood mempools. That seems kinda low to me, especially when the supermajority of wallets aren\'t using rates that low. Obviously a floating minfee  eviction would make more sense," but until that\'s implemented this is a decent and easily understood workaround.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,11,2015-05-30 02:52:47,16.58,,1,,"b'b"" @morcos @jgarzik This was never intended to be changed to 1000sat in the first place. I\'m not sure what more to explain than what is in the ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,12,2015-05-30 02:52:47,104.45,,1,,"b'b"" I think I could be convinced this makes sense.  But it definitely needs more public discussion.  Some wallets will potentially send transactions that\'ll never be relayed now.  Even before the min relay fee was reduced to 1000sat", transactions with small fees were effectively relayed anyway (they were subject to a rate limiter that hardly ever kicked in).  But with changes to 0.10," low priority transactions now are not relayed at all if they don\'t meet the min relay fee. It\'s also not clear to me that it makes sense to change the mining minimum.  There isn\'t an issue as long as the mining minimum is below the relay minimum right?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,13,2015-05-30 02:52:47,63.77,,1,,"b'b"" @morcos This just restores the default to what was already the expected behaviour. I\'m not sure what more there is to discuss in the scope of this PR? If someone wants a change to the expected defaults"," that IMO belongs in a new PR focussed on changes (although I think the time discussing further changes is better spent convincing miners not to use defaults).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,14,2015-05-30 02:52:47,3.48,,1,,"b""b' Can anyone spend a minute or so to find where exactly was the change of expected values? What PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,15,2015-05-30 02:52:47,4.87,,1,,"b""b' @paveljanik As linked in OP", #3838; note the actual change of policy was _not_ discussed," just the workaround for the bug being addressed at the time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,16,2015-05-30 02:52:47,2.1,,,1,"b""b' @luke-jr url  shows 10000...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,17,2015-05-30 02:52:47,4.97,,1,,"b'b"" Isn\'t it this change? url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,18,2015-05-30 02:52:47,12.28,,,1,"b""b' @paveljanik  mikehearn@037b4f1 modified the mining code to use nMinRelayTxFee (1000) rather than nMinTxFee (10000).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,19,2015-05-30 02:52:47,0.35,,,1,"b'b"" @luke-jr how are you defining the expected behavior?  Don\'t people expect the network to continue to behave the same way 0.9 and 0.10 nodes do?  And i think even before 0.9", low priority low fee transactions would have still been relayed, so they would probably eventually be mined in the free section of blocks.  This will be the first time that low priority transactions of feerate >1k sat have no chance of getting mined," I\'d say thats a pretty big change in expected behavior.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,20,2015-05-30 02:52:47,20.48,,1,,"b'b"" @morcos I am defining the expected behaviour in this regard", as the last default value to receive discussion and agreement. #3838 was a temporary workaround to avoid delaying the 0.9 release, and was not meant as a permanent change to the default miner policy. 0.9 and 0.10 nodes will probably be around for a while, so if someone wishes to finally fix the  divergence issues, it should be possible to reduce the relay fee back to 0.01mBTC by 0.12. In any case, low priority transactions will still eventually become high priority transactions, get relayed," and then mined so there\'s no major issue there that I can see.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,21,2015-05-30 02:52:47,394.22,1,,,b'b\' That\\\'s one way of looking at it, but people have been using a 1,000 fee rate for some time now (without any reason to believe that it was unintended), so from their point of view, this is a 10x fee raise," and calling it ""just restoring the default""", while perhaps technically correct, is a bit insensitive. Off the top of my head, some services / wallets that make use of < 10,000 feerates:Breadwallet cc. @voisine (default feerate)Mycelium (non-default feerate)@BlockCypher \\\'s micro-transactions service\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,22,2015-05-30 02:52:47,468.25,,1,,"b'b\' The most relevant details are:1. What are the market prices experienced in the current market?2. What is the _behavior delta_ for those market participants? It seems dishonest to describe an arbitrary price increase as ""restore expected behavior""", and it seems unprofessional to spring an unexpected price increase on the market without warning.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,23,2015-05-30 02:52:47,1084.32,,,1,"b'b"" @jgarzik If a supermarket discovered its computer was only charging 10% of the expected price for items", would fixing that bug so the correct amount is charged be a price increase? The last time this default was discussed, it was decided on the amount restored here. The details you describe as relevant are for _changes_. I guess if we want to open a conversation about changing it, that\'s fine, but I thought the same factors leading to this default have remained the same. Looking at price graphs, I see I am wrong: price has risen 5x since 2013 Mar. So maybe instead of restoring the default here, we should change to 0.00002 BTC? Maybe not worth the time to discuss, at that small a difference, though. Either way, this probably is the wrong place for discussing a change," so I\'m closing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,closed,2015-06-02 04:30:57,98.17,1,15,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,reopened,2015-07-08 04:07:11,1416.23,1,15,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,24,2015-05-30 02:52:47,1417.13,,1,,"b""b' Reopening this"," may have become relevant as a temporary workaround for the recent mempool flooding @gmaxwell.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,25,2015-05-30 02:52:47,3.98,1,,,"b'b"" I think it shouldn\'t be off the table. I considered the prior reduction a mistake. Though it should be considered with some care.  Eyeballing actual behavior even outside of the recent flood attacks looks to me like the actual competitive fees are higher than this already"," but numbers should be more carefully crunched.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,26,2015-05-30 02:52:47,417.9,,1,,b'b\' ACK," to quote Gavin:""Bitcoin is not appropriate for transactions less than a penny or three.If Moore\\\'s Law continues to hold"," then one day it might be."" Currently bitcoin core allows 0.14 cent transactions. With the new minimum  and a  tenfold price increase it would be 0.14$. Witch is still accpetable and resonable. If people disagree we can easily lower the number if the price passes 1000$ again.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,27,2015-05-30 02:52:47,7.98,1,,,"b""b' According to arhuaco on IRC"," android wallet uses a fee of 0.00005. So going back to 0.0001 could exclude quite some legitimate transactions. Maybe 0.00005 is high enough though to stop the worst spam. As @gmaxwell says this does need some deliberation. (in the meantime you can override it with e.g. on your own node)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,28,2015-05-30 02:52:47,18.83,,1,,"b""b' @laanwj in all fairness rolling out updates to Android wallets is trivial and it might encourage wallet authors to add fee controls.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,29,2015-05-30 02:52:47,0.73,,1,,"b""b' I think we should also be giving some thought additionally to #1536 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,30,2015-05-30 02:52:47,1.27,,1,,"b'b"" @laanwj An alternative client implementation shouldn\'t be the criteria for any decission about relay policy. A single dev shouldn\'t have that power. Andreas can easily change the fee and most Android users update their apps quite regularly. @btcdrak Agreed"," should be reconsindered. At least the faucet argument is out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,31,2015-05-30 02:52:47,39.57,,,1,"b'b"" That\'s not a very good argument as one could say the same about bitcoin core\'s devs. Then it\'s up to the user to specify their own they are comfortable with. The only requirement on the default is that it\'s not broken or harmful. I\'ve reopened this issue because there was some talk that this may be the case.  My own nodes are working fine", but were reporting  ~50MB for the mempool size which indicates spamming is possible (and if there is no upper bound, that is bad). Using -minrelaytxfee=0.00005 brought this down to ~5MB. Of course this would not be a permanent fix hence \'temporary workaround\'. At least for 0.12 we should aim to have proper mempool limiting," discarding transactions based on relative criteria instead of hardcoded absolute limits.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,32,2015-05-30 02:52:47,21.75,1,,,"b'b"" I\'m in favor of this change", but I think we should modify []url  to continue using a smaller minimum.  This would make it hard to relay low fee transactions unless they are above the AllowFree priority threshold, and for those that got relayed, they\'d stand a chance of being included in a block because of their fee (which would get them in a lot quicker than their priority). I think this should give us the effect of preventing spamming," but still allowing economically valuable transactions for a low fee (although not very reliably unless you do some priority calculations).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,33,2015-05-30 02:52:47,20.75,,1,,"b'b"" @laanwj Situation with the core dev\'s is a little bit better since there are multiple and almost all changes are discussed. @morcos What is the point of unreliable transactions. Most  want certainty that their tx goes through (fee bumping hasn\'t been included in a single wallet yet). Only a spammer would try to get his tx directly to the miner (maybe using the relay network).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,34,2015-05-30 02:52:47,3.9,,,1,"b'b"" I just want to say this transaction b5c44cc69b9f6b5c48933f16be58b54f6f09aa6d4f088882b3dbddde969f6df8 from my Airbitz wallet to a destination was \'economically useful\' and that the 1000 Satoshi fee was appropriate in this case. There are real-world small value transactions which are useful. At 10","000 Satoshi my fee would have been like 25% of the transaction.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,35,2015-05-30 02:52:47,40.63,,1,,"b'b"" @coinx-ltc You could make it reliably relay by either using a feerate higher than the new higher minimum or taking the time to correctly estimate if your priority is above the AllowFree threshold. @julian-smith-code There is a tradeoff here.  If we\'re allowing (by policy) low value and low fee transactions to relay", then it is easy to spam.  This PR would require the feerate to be 10x higher.  I\'m suggesting that the feerate only need to be higher for low priority transactions, as that should be just as effective in preventing spam but allow a few more use cases through for low fee transactions.  That is what would happen by default with this PR, except those transactions though now relayed," would be prioritized for mining by their priority instead of their fee and would only be allowed in a priority section of a block if it exists.  I\'m suggesting to allow them in the fee section provided they still have some fee.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,36,2015-05-30 02:52:47,47.2,,1,,"b'b"" @julian-smith-code I agree", but we\'re not arguing economic  here. In the current conditions such a transaction would never be included in a block, so hence raising the minimum relay fee so that it is rejected in the first place makes sense. The block chain isn\'t very suitable for very small transactions," and the threshold is determined by fee pressure.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,37,2015-05-30 02:52:47,31.55,1,,,"b'b"" @laanwj Android Wallet changed default fee to 0.0001.url  Besides making spam more expensive the minimum should be raised to prevent wallet bloating (e.g. voat and wikileaks). If you want to get ride of 543 satoshi transactions you can pay a max fee of 2715 per KB without making a loss (not counting  loss). These are very unlikely to get confirmed any time soon. If we continue to hit the 1 MB cap", probably not before the block size fork. You are stuck with them for a while. 0.0001 minrelaytxfee works with , Bitcoin Wallet Android, Circle App, Electrum, MultiBit," Copay and Breadwallet (if users chose max fee). Don\'t see why this shouldn\'t go into 0.11/0.12.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,38,2015-05-30 02:52:47,1361.67,,1,,"b'b"" The mempool has about a 4x in memory overhead", so 250MB of txs takes up about 1GB. At 0.1 and $290/BTC you\'re looking at $7k worth of BTC to make many 32bit nodes crash; at the previous 0.01 this is a trivial $700," and $7k will be crashing even 64bit nodes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,39,2015-05-30 02:52:47,4.4,,1,,"b""b' Also", another way of looking at this is from the perspective of miners: 1MB \\\\* 0.01 = 0.01BTC," a truly insignificant 0.04% of the block reward.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,40,2015-05-30 02:52:47,814.68,1,,,b'b\' I wish to make a brief comment here that this pull request will prove to be unnecessary.  However, beyond that note," I wish to note the following: @morcos noted that ""Some wallets will potentially send transactions that\\\'ll never be relayed now. Even before the min relay fee was reduced to 1000sat", transactions with small fees were effectively relayed anyway (they were subject to a rate limiter that hardly ever kicked in). But with changes to 0.10," low priority transactions now are not relayed at all if they don\\\'t meet the min relay fee."" and  ""we should modify  to continue using a smaller minimum. This would make it hard to relay low fee transactions unless they are above the AllowFree priority threshold", and for those that got relayed, they\\\'d stand a chance of being included in a block because of their fee (which would get them in a lot quicker than their priority).I think this should give us the effect of preventing spamming," but still allowing economically valuable transactions for a low fee (although not very reliably unless you do some priority calculations)."" I\\\'d like to hear @luke-jr and / or @laanwj\\\'s thoughts on that as it seemed that there is already a problem (correctly identified by @morcos) where already transactions aren\\\'t going to be relayed", and this pull request (as currently written) would have the effect of making it worse. Furthermore," I think that there is an opportunity here to re-examine ""dust / spam"" and re-envision it as a ""giving opportunity"," or as ""microgiving potential.""  Although @gavinandresen has stated (as @coinx-ltc pointed out earlier), ""Bitcoin is not appropriate for transactions less than a penny or three.If Moore\\\'s Law continues to hold, then one day it might be,"" it is my feeling that there are ways to re-evaluate the possibilities of microgiving in bitcoin. Thanks for reading and considering these points.ABISprotocol  url \''
bitcoin	6201	closed	41	petertodd	2015-05-30 02:52:47	1003.75		+1		b""b' FWIW it looks like a significant amount of hashing power has already done this, F2Pool, AntPool, BTCChina, Eligius(?), etc.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,42,2015-05-30 02:52:47,371.27,1,,,"b'b"" @petertodd Simply because F2Pool", AntPool, BTCChina (and possibly others) may have done this (implemented restoration of minimum feerate as currently proposed), does not mean it is right, it only means they have made a bad situation worse.  See my remarks above. I am eager to see the replies from @luke-jr and @laanwj to my [earlier points]url  which emphasized some of @morcos\'s remarks," and I look forward to their thoughts on that. Notes:  See also my thoughts in #6402 and #1536. ABISprotocolurl ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,43,2015-05-30 02:52:47,481.12,1,,,"b""b' @ABISprotocol not sure which wallet still sends out 0.00001 fees besides Airbitz. See my list above.I think the recent stress test and SPV mining showed that we are not there yet. The network is not yet able to handle all kind of transactions.Actually having a different policy on nodes than on miners makes the situation worse. See the recent double spend attacks and the slowly clearing mempool.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,44,2015-05-30 02:52:47,711.72,1,,,b'b\' @Mirobit If you can\\\'t have end users of declining bitcoin nodes be able to set their own policy (note there is presently [no one minimum relay fee]url  then I would see this as a problem.  Further, bitcoin development presently is trending in a manner which is excluding an increasing number of people in the developing and underdeveloped world from ever being able to take part in it. I will make the point here, as has been made elsewhere by @matthieu on July 8th," that ""[The minimum fee required to have your transactions included in the #bitcoin block chain has been multiplied by 24 in 2 days.]url "" However", this is not just an issue with getting one\\\'s transaction accepted, but it is also an unfortunate trend in bitcoin development that I have seen. (Recall #2577 from 2013 and the huge discussion that ensued on @gavinandresen\\\'s proposal to treat dust outputs as non-standard, un-hardcode TX_FEE constants ~ it created a lot of community anguish, made certain tiny transactions impossible, and here we are again.)  Right now, I could very easily spend a dime anywhere in USD, but if I were to spend the equivalent in BTC, there is not a guarantee that it would be accepted as a transaction.  This is already a problem and it is not because the minimum fee rate has not been restored (here) to 10000 satoshis.  (For those who didn\\\'t participate in the discussion on #2577 in 2013 2014, I encourage you to view [a comment of mine on the issue here]url Some of the discussion here makes me wonder if everyone forgot [floating fees]url  and the nature of that work.  In observing this sad trend of gradual fee increases and what I see as censorship of small transactions, in a year\\\'s time, given what happened in 2013 with #2577 and what is now happening with this issue here in 2015, it is entirely likely that further transaction and fee policies will be adopted which will edge out even those who are trying to make BTC transactions equivalent to 0.20 USD.  Sharp currency declines (in the USD, euro, other currencies) and increases in value of BTC would create situations in which one might need to purchase small quantities of BTC, but paradoxically such policies as those proposed in this pull request might stymie entry-level buyers in the marketplace.  In addition, the potential for microgiving in bitcoin is reduced by these kind of development proposals, and microgiving is one of the most significant developments to come to finance.  It is one that cannot be adequately implemented by legacy systems in no small part due to their burdensome fees, which up to this point, bitcoin has not had.  However, this appears to be changing rapidly. As a consequence, a large number of people in the developing and underdeveloped world will be edged out by policies created by people who create and develop this new economic system without consideration of the voices of those who are least likely to be heard here.  This implies that the billions who potentially could have been helped by this technology, now, will not.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,45,2015-05-30 02:52:47,151.7,1,,,b'b\' Got mentioned so I guess I\\\'ll chime in. Just about the form, @luke-jr, a workaround that\\\'s over a year old isn\\\'t a workaround anymore. It stratified in. I\\\'m a little concerned but actually not overly worried about microtransactions. For the western world, there\\\'s still a lot of space above 5c. Only a minority of use cases will suffer from this (one could argue still important use cases but who knows). I\\\'m more concerned about the general price of transacting on the Bitcoin network. Look at us," we\\\'re a bunch of affluent white males discussing ad nauseam on a github pull request an issue that\\\'s likely to make your average Indian worker unable to use Bitcoin. And it\\\'s one of several issues that are pushing in that direction. Is that the ""financial revolution"" we want? Decentralization for who? I\\\'m also worried about miner greed (no offense @luke-jr", don\\\'t really have you in mind here). Bitcoin is pretty secure right now, as far as mining is concerned. Yet we spend significant time discussing how to micro-optimize miner profitability, rather than worry about inclusiveness and keeping network access cheap. I realize this comment is pretty poor form on a pull request. But I believe it to be relevant, and a plea to consider other levers than expensive transactions.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,46,2015-05-30 02:52:47,36.85,,1,,"b""b' @ABISprotocol The technology is fundamentally unable to support microtransactions directly on the blockchain. The fact that miners have been reverting the minimum relay fees drop is solid evidence of this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,47,2015-05-30 02:52:47,6.83,1,,,"b'b\' It\\\'s important to be specific in what you\\\'re talking about when you say microtransactions. In some contexts it means value transfers under ""$10"" in others"," under ""$1""  in others under ""$0.01"" and in yet other under ""$0.00001"".  There is _some_ level under which just simply cannot be supported: because a single attack at moderate cost could saturate the bandwidth of a substantial portion of the network (keep in mind Bitcoin is a broadcast system"," and any system that can\\\'t keep up can\\\'t participate). Also keep in mind that the relay limit is not ""the fee""", it\\\'s a floor below which the fee is so low that it\\\'s only worth considering the transaction according to the free transaction rules. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6201,closed,48,2015-05-30 02:52:47,36.92,,,1,b'b\' @petertodd Incorrect, it has always been able to.  However, development trends have been gradually been migrating away from supporting microtransactions, thus, as I pointed out earlier, inclining towards excluding billions of persons.  That is something that should be handled differently from a development approach. @gmaxwell Generally agreed," though an important point to add to this is that the definition of what an acceptable ""microtransaction"" might look like in bitcoin appears to be getting bigger and bigger due to changes in development trending upwards over time", thus emphasizing the concern I mentioned.  Here I am not speaking of value transfers of approximately or just under BTC amounts equivalent to today\\\'s USD 10.00, but rather, amounts which fall in the smaller figures area you mentioned.  I also am making the assumption that no-fee dust transactions would have to be handled as off-chain transactions and would not be able to be handled on-chain, for the reasons I pointed out [here]url I am also assuming that on-chain dust could be viable on the chain if development methods would be inclusive of it, see for example [Blockcypher\\\'s approach to microtransactions]url I am aware of the Confidence Factor issues and how they have resolved them recently.  And in light of [this trend I have identified]url  and in light of the fact that no-one has addressed @morcos\\\'s concerns which I quoted above in an earlier comment, and in light of the fact that bitcoin\\\'s use is growing (but with the incremental and gradual cost to transact in a way that shuts out [much of the world]url  there is no question that this development trend in bitcoin could and should indeed change in the context of both short and long-term bitcoin-development strategy. But if it does not, as @matthieu aptly stated,"Is that the ""financial revolution"" we want? Decentralization for who?""  My hope is that this will be for everyone, not just for some.  I look forward to your thoughts and insights on how this can happen.\''
bitcoin	6201	closed	49	petertodd	2015-05-30 02:52:47	204.17	+1			b'b"" @ABISprotocol We are working towards genuine scaling of Bitcoin in multiple ways, for instance my own #6351, CLTV, pull-req to make payment channels more practical, and the Blockstream-sponsored work on the Lightning network, among many other things. But note how these efforts are to fundamentally change how you use Bitcoin the blockchain protocol itself has poor scaling. Anyway, as Luke-Jr has mentioned elsewhere, developers have no power over transaction fees; the min relay fee is simply a sane minimum that is set based on what miners are willing to mine. If miners are mining transactions with significantly higher fees than the minimum, then it only makes sense to increase that minimum. If we don\'t, we\'re just letting network bandwidth be pointlessly used up relaying transactions that won\'t get mined anyway. Future work such as the various memory limited mempool proposals out there may eventually allow the fixed minimum relay fee to be removed, to be replaced by an automatically calculated limit, but for now, we should merge this pull-req. (and backport it for v0.11.1)""'
bitcoin	6201	closed	50	LeMiner	2015-05-30 02:52:47	100.03			+1	b'b"" I honestly believe it\'s time to back up and think for a second the direction we\'re moving in. Moving ahead with this change (and many other changes that have already been phased in) we\'re essentially excluding a large part of the worlds population in participating in this decentralized project that was setup specifically to liberate and empower them. Essentially pushing them into hands (or rather mercy of) commercial companies (I\'m looking at you Blockstream) to provide them with solutions that other commercial companies haven\'t been able to do for decades.  Do we really want to push through changes that will make offchain transactions a necessity rather than an opt-in-option? From my experience people always move to the cheapest and most trustworthy alternative, if the blockstream guys truly believe in their company and the solution it provides people will utilize your offchain solution because it\'s better, not because they HAVE to. Besides that I believe we\'re all smart people and intelligent enough to realize that once this change get\'s phased in it will NEVER be reduced ever again, not even at 100k$/coin. Examples you ask? The blocksize limit was meant to be temporary as well. And even tough the majority of miners agreed with increased blocksizes of 8MB this hasn\'t been changed either. I think this raises the question move and more whose interest some devs are really defending here. @petertodd , if some nodes are unable to handle the bandwidth or traffic that the network requires let them adjust their minrelay to be inline with their connections and computers capacity. And if miners do  mine certain transactions because of a limited blocksize then let them decide which ones rather than developers (see my previous points). Given all this I\'ll make sure to  this comment seeing as previous constructive comments I\'ve made on other pull requests have gotten censored (deleted) in favor of comments that are inline with the opposing parties.""'
bitcoin	6201	closed	51	jtimon	2015-05-30 02:52:47	72.55		+1		b'b\' @LeMiner Your comment contains several logical fallacies and irrelevant points. Furthermore, it doesn\\\'t contain a single technical argument and it\\\'s written in an very confrontational style.The comment is certainly not constructive for this discussion and if you persist I wouldn\\\'t be surprised that this or later comments get ""censored"" again.I think bitcointalk or reddit are probably better places for this type of comment.\''
bitcoin	6201	closed	52	ABISprotocol	2015-05-30 02:52:47	810.55			+1	b'b\' @petertodd  In brief response to your last comment that ""Future work such as the various memory limited mempool proposals out there may eventually allow the fixed minimum relay fee to be removed, to be replaced by an automatically calculated limit, but for now, we should merge this pull-req(...)"" to me, this seems to contradict an earlier statement you made, in which you clearly commented that, and I quote, ""Obviously a floating minfee  eviction would make more sense(...)"" Indeed it would. I also want to note the following as alternate suggestions. While I am personally supportive of solutions that work towards helping people realize on-chain, truly p2p transactions with the lowest possible cost, including microtransactions (as [generally defined in my earlier comment]url  I don\\\'t want to ignore other points of view (even if they are not what I would prefer), and I\\\'m including here in my remarks some alternative thoughts which were offered up by reddit user // ~ which I\\\'ve quoted here as follows: While I do disagree that off-chain is the only solution (e.g. see BlockCypher\\\'s approach to microtransactions) I wanted to include more points of view to this discussion. Finally I want to note that, as I have emphasized before indirectly, there are a large number of persons in the world getting by on the equivalent of 1 to 2 USD per day if salaried.  At one time I lived abroad for several years for less than fifty USD per month.  This is much of the world.  These are statements of fact which cannot be ignored and which are as relevant to the discussion as subsidy, cost of mining, and other vital factors.  The trend of upward cost of transacting in the bitcoin network is not going to reverse if the status quo continues, but developers do have a choice in how they proceed right now and moving forward.  I do not recommend this pull request be approved. Thank you for considering these remarks. ABISprotocolurl \''
bitcoin	6201	closed	53	rnicoll	2015-05-30 02:52:47	17.18	+1			b'b"" We\'re not setting costs here, we\'re drawing conclusions on what will happen next based on costs vs income. Right now, the network generates 25 BTC per block, 6 blocks an hour, 24 hours a day, for a total of 3,600 . At 3 transactions per second, or 259,200/day, that\'s a cost per transaction of 0.139BTC or thereabouts. With fees set to 0.001 BTC, the network is subsidising each transaction to the tune of 0.138 BTC (better part of $3/transaction). That\'s okay now, but that subsidy is going to come down soon (and if it didn\'t, you\'d be Dogecoin, and we\'ve got a whole different set of economic challenges from being inflationary). If we increase block size to 10MB and pack that block full, we might get that down to 0.129. To get the two to meet, and totally ignoring mining infrastructure costs as a result, you would need 139MB blocks fully packed with transactions, causing the block chain to expand at 20GB per day. Fixing this is not about poking at some minor changes with numbers, it\'s a research topic to find if there are any solutions. As I believe virtually everyone has told you, it\'s highly unlikely that there is a solution that involves pushing more transactions through a single stream. We see the problem, we\'re telling you the only solutions we can see. We can\'t help that you don\'t like them.""'
bitcoin	6201	closed	54	ABISprotocol	2015-05-30 02:52:47	37.62		+1		b'b\' @rnicoll As I think I noticed someone comment elsewhere, the development team focuses primarily on ensuring bitcoin works whereas research issues might be a different matter.  You mentioned subsidies as did I.  It\\\'s one piece of the puzzle.  In [this research paper]url  posted in June of 2014, titled ""Near Zero Transaction Fees Cannot Last Forever,"" you can also see a brief discussion of various issues where the author examines fees and microtransactions.  Kerem Ka\\xc5\\x9fkalo\\xc4\\x9flu, the author, points out, ""In the long run, the policy on transaction feesshould be set so that enough many miners haveincentive to run clients having a good enoughcombined hash power to protect the network.But on the other side of the coin, the fees thatminers collect should not be any higher thansufficient in order not to discourage users fromusing Bitcoin as a means of transferring money."" Note that last point, and consider it in light of the billions of people that I was referring to earlier. The author notes that creating a fixed transaction fee would make microtransactions under that amount too expensive to process, and goes on to suggest he will ""refrain from proposing a specific transaction fee settingmethodology whether a percentage of theamount of BTC sent or a fixed fee plus a percentage"" Note:  While the paper doesn\\\'t indicate what a micro-transaction is for the purposes of that paper\\\'s analysis, by way of reading it closely (see for example pg. 97), it seems that the author is referring mostly to amounts under 40 cents USD of value at that time in June of 2014.  Obviously this should be even further concerning to anyone who is using bitcoin and wants to see its use spread on a global scale; it simply can\\\'t unless the development direction changes to include the billions in developing and underdeveloped world who live on 1 to 2 (USD equivalent) per day. Another way to think of it is this:  Let\\\'s say that this currency becomes even more adopted than it is today, which is likely to be the case, and gradually permeates much of world culture, in a manner similar to the introduction of the internet.  Yet in order to participate, given upward fee trends and other issues contributing to costs to transact in bitcoin, very soon you would have to give up a day\\\'s salary to enter the system, or more (remember many people are being paid equivalent of 1-2 USD per day if that).  To put that even further in perspective, imagine if you are paid 25,000 a year for a job in the USA, and thus a day\\\'s worth of your salary is about 100 USD.  Imagine if someone suggested that you should spend that to buy into a new currency being introduced in your area, and further imagine that someone would tell you that fees from 80 to 100 USD would be expected per transaction. Now keep in mind the vast number of people making 1 to 2 USD per day.  There is simply no motivation for entry into such a market in the developing world if the cost to transact is as high as high as what they get paid per day.  As the cost to transact goes higher and higher based on this observable trend (due to all the factors mentioned in this thread), then people who are affected by these rising costs to transact will do one of three things with respect to bitcoin (and virtual currencies generally): 1) Ignore bitcoin (an unlikely possibility, but it is one that would occur), 2) adopt alts which are more inclined to allow people to perform microtransactions, 3)  use bitcoin increasingly off-chain, which is likely to come with its own set of problems for the network. I see the problem, and I can\\\'t help that you don\\\'t like that I\\\'m providing you with alternatives to the perspectives that you currently have.  I have included relevant thoughts and considerations in my prior comments for review.  Thank you for your consideration and for your time in reading these remarks. Respectfully, ABISprotocolurl \''
bitcoin	6201	closed	closed	 - 	2015-07-18 08:17:49	250.63	13	29	14
bitcoin	6201	closed	55	laanwj	2015-05-30 02:52:47	573.62			+1	b'b\' Closed this again. Mempool limiting and dynamic fee determination are superior to a static parameter change. I opened this as a temporary workaround for 0.11.0, but as 0.11.0 is already released (with simply an ""important note"" in the release notes regarding this parameter) we should aim for a proper solution in 0.11.1.\''
bitcoin	6201	closed	-	-	-	-	13	29	15
bitcoin	6235	closed	opened	jtimon	2015-06-04 20:02:51
bitcoin	6235	closed	title	jtimon	2015-06-04 20:02:51	00:00		+1		b""b' Chainparams: Translations: DRY: options and error strings'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,body,2015-06-04 20:02:51,00:00,,1,,"b'b"" Make some strings translatable when they weren\'t.Don\'t duplicate error or help translation strings related to chainparams. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,1,2015-06-04 20:02:51,1006.15,,1,,"b""b' Needed rebase. Also replaced GetParamsHelpMessages with AppendParamsHelpMessages"," which optionally takes a showDebugHelp boolean.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,2,2015-06-04 20:02:51,364.25,,1,,"b""b' @theuni this may interact with your code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,3,2015-06-04 20:02:51,152.33,,1,,"b""b' Closing for now to reduce noise'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,closed,2015-06-25 21:25:35,82.73,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,reopened,2015-07-06 14:07:08,1001.55,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,4,2015-06-04 20:02:51,8.87,,,1,"b""b' Great. MAX_NETWORK_TYPES is removed in the second commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,5,2015-06-04 20:02:51,530.5,,1,,"b""b' Ack (tested).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,6,2015-06-04 20:02:51,21.33,1,,,"b'b"" General approach OK.  Comments:Still repeating a chain lookup in  & Only now it is worse because it is a more expensive (now duplicated) string comparisonSeeing this duplication hints that a table-driven approach", with each string inside the param struct, is superior to manually administered case statements (& duplicated) of chain strings. Seems like you want find_chain_by_string(), returns id," which can be passed around efficiently as \'network\' -which is consistent with what the rest of the code does now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,7,2015-06-04 20:02:51,30.6,,1,,"b'b"" @jgarzik since each param has a strNetworkID which is exactly the same as the CBaseChainParams constants introduced", I think a set would be the simplest. Re-introducing an intermediate type would defeat the point of these patches for me, which is to allow me to easily create a new testnet.  I\'ve been hacking bitcoind to run a megablocks testnet," for example. But I like the simplicity of the patch\'s mechanical translation; easy to review.  A lookup mechanism on top could work well as a new patch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,8,2015-06-04 20:02:51,41.52,,,1,b'b\' Yes, the string comparison is more expensive, but it\\\'s done on init or tests," so I think it\\\'s fine.What do you mean by ""now duplicated"". Can you point out what exactly am I duplicating here?@jgarzik I\\\'m not sure I understand your suggestion.You mean a function like  ?That doesn\\\'t remove the duplicated  for chainparams and basechainparams. The problem here with that duplication is having base chainparams in the first place. This is not doing anything against or in favor to that. I believe we could move the datadir to regular chainparams and have users select the bitcoin-cli port manually instead of indirectly through -testnet and -regtest. Anyway", that would belong in another PR.Anyway, this PR was open without replacing the enum with a string. I could reopen that again, but it\\\'s cleaner this way and there\\\'s many other things that require that replacement in #6382 .\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,9,2015-06-04 20:02:51,541.7,,1,,"b'b"" EDIT (after reverting #6077 ):~~This (and thus #6382) should fail the compilation if merged after #6077"," I will rebase both: but don\'t merge this now.~~""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,10,2015-06-04 20:02:51,386.65,,1,,"b'b"" ping @theuni . This should be useful for #6526 just like it\'s useful for #6382 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,11,2015-06-04 20:02:51,8.25,,1,,"b""b' Rebased and fixed (see url  ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,12,2015-06-04 20:02:51,57.07,,1,,"b""b' Untested ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,13,2015-06-04 20:02:51,1073.5,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,14,2015-06-04 20:02:51,60.88,,1,,"b'b"" Fixed @sipa \'s nit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,15,2015-06-04 20:02:51,1188.02,1,,,"b""b' ut ACK though this pushes the bounds of my refactor size-o-meter for end-user utility versus source code disturbance ;p'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,16,2015-06-04 20:02:51,773.73,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,17,2015-06-04 20:02:51,580.3,,1,,"b""b' For more context on more long-term utility of this change see #6382 (needs rebase on top of #6672 ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,18,2015-06-04 20:02:51,1378.73,,1,,"b""b' ping'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,19,2015-06-04 20:02:51,116.88,1,,,b'b\' ut ACK. I\\\'m not concerned about string comparisons on init. With #6382 NACK\\\'d there is less direct utility to this patch," but I like the deduplication of the error handling. (The whole ""selecting chainparams"" area of the code can be frustrating to read because it has a lot of redundancy like this.)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,20,2015-06-04 20:02:51,1249.38,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,21,2015-06-04 20:02:51,58.45,1,,,"b'b"" Updated without translating errors or messages that are only shown when debugHelp is true (solved @laanwj and @MarcoFalke \'s nits).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,closed,2015-10-20 15:06:37,59.48,4,17,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6235,closed,-,-,-,4,17,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,opened,2015-06-07 19:12:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,title,2015-06-07 19:12:30,00:00,,1,,"b""b' Fix Qt build on arch by setting -fPIC'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,body,2015-06-07 19:12:30,00:00,,1,,"b'b\' Without -fPIC you get /:1050:4: error: #error ""You must build your code with position independent code if Qt was built with -reduce-relocations. "" ""Compile your code with -fPIC (-fPIE is not enough).""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,1,2015-06-07 19:12:30,0.47,,,1,"b""b' Theres probably another way to do it (I know @theuni wanted to build with different flags for release"," but it would be good to at least fix build).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,2,2015-06-07 19:12:30,1021.63,,,1,"b'b"" We discussed this on IRC. I don\'t think -fPIC should be the default"," for executables -fPIE is superior option. See e.g. url  Though I\'m fine with enabling it as a fallback if you can add a check to autoconf that is broken on a platform.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,3,2015-06-07 19:12:30,476.85,,1,,"b""b' Many distros force PIC anyway"," so this actually wont change anything for most builds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,4,2015-06-07 19:12:30,4.6,,1,,"b'b"" After researching the issue some over the weekend", I agree with @laanwj. To clarify, this is an issue with gcc5 and newer clang+lto when qt is built with -reduce-relocations. Upstream GCC discussion is [here]url We have a few options:Do nothing. I think I\'d prefer this, reasoning below.use -PIC instead for known-problematic compilers. This would mean maintaining a black-list since I don\'t believe this can be easily tested.Use -PIC instead only when building bitcoin-qt _and_ using a problematic compiler _and_ when qt was built with -reduce-relocations (this can be tested via preprocessor).Default to -PIC everywhere and override with -PIE when creating release binaries. 2 and 3 would be necessary only for building bitcoin-qt, but we\'d end up having to disable PIE for bitcoind as well, to avoid building 2 sets of objects. I believe that the root issue here is that distros are shipping qt libs with -reduce-relocations, which is known to violate abi specs and makes assumptions about how downstreams will use their libs. That abi spec violation became a real-world issue with the latest compilers. So IMO," the more reasonable thing to do here would be to try to convince Arch to disable -reduce-relocations for their qt build. We can\'t be the only downstream with this issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,5,2015-06-07 19:12:30,13.18,,1,,"b""b' OK"," @theuni I filed a bug at url  lets see what the maintainers there say.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,6,2015-06-07 19:12:30,576.63,1,,,b'b\' @cfields I\\\'m ok with all those options," except ""Default to -PIC everywhere and override with -PIE when creating release binaries."" Let\\\'s not have everyone suffer because a distro builds libraries with broken options. Either we work around this specific case when it happens", or we do nothing and have Arch users provide an extra option as workaround (could be documented in  ).Would be even better if the problem could just be solved upstream.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,7,2015-06-07 19:12:30,156.02,,1,,b'b\' @cfields would you mind discussing with the arch maintainer @ url  ? On June 9, 2015 11:06:00 PM PDT,"Wladimir J. van der Laan"" notifications@ wrote:\''
bitcoin	6248	closed	8	dankeder	2015-06-07 19:12:30	259.82		+1		b""b' This issue is present on Fedora 22 as well.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,9,2015-06-07 19:12:30,87.4,,1,,"b'b"" I have a fix for this in the works. I\'ll try to push it up in the next few days.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,10,2015-06-07 19:12:30,525.22,,1,,"b""b' Arch changed their build settings and this is no longer an issue there"," is it still on Fedora? Can we file a bug there? @dankeder '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,11,2015-06-07 19:12:30,1158.0,1,,,"b""b' Yes"," the problem is still present on F22: In my bitcoin repo (checkout tag v0.10.2): I have these QT5 packages:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,12,2015-06-07 19:12:30,239.55,,1,,"b'b"" I\'m unsure what to do here. I have a rather complicated patch that changes around the PIC flags for qt objects if it was built with -reduce-locations", but since Arch elected to quit doing that," I\'m somewhat hopeful that we can lobby the other distros to do the same. That really is the correct fix.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,13,2015-06-07 19:12:30,905.92,,1,,"b'b"" I asked a friend who is a contributor to the Fedora Project what he thinks about this issue. His opinion is that bitcoin build logic shouldn\'t set compiler options on its own", it should rather make use of qmake to get the flags of the particular platform. Also, it seems that is set as the default directly in qt build scripts. So if you think that the flags need to be changed, they should be changed upstream," not in each and every Linux distribution that has this problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,14,2015-06-07 19:12:30,1164.12,1,,,"b'b"" We\'re setting custom compiler options because of  ", which sets some (relatively) obscure options to improve worst-case security. With this problem it just uses the suggested flags and I don\'t think this problem exists. I do like having hardening enabled by default, though. @theuni Can we add a test to configure that detects this problem," and disables or falls back to other options if it fails?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,15,2015-06-07 19:12:30,370.3,,1,,"b'b"" Well", reviewing PIE vs. PIC," no immediate security issue jumps out (via hardening) at the introduction of PIC.  It\'s just a bit slower.  Capturing the flags from qmake seems reasonable?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,16,2015-06-07 19:12:30,53.3,,1,,"b""b' Building with PIC instead of PIE means the [Address Space Layout Randomization]url  & [features from Grsecurity / PaX are less effective]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,17,2015-06-07 19:12:30,1310.1,,1,,"b""b' In Alpine Linux is built with &  / are still built with  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,18,2015-06-07 19:12:30,1355.35,1,,,"b'b"" Right", detecting this would be the right way to solve this. Although the logic is quite ugly, it\'s not that much worse than other auto\\\\* checks. And agree it would be even better if was not provided to the Qt build upstream. That\'s the root issue, not PIE versus PIC. Still NACK on setting by default," so going to close this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,closed,2015-10-06 12:30:57,1038.45,4,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,reopened,2015-11-02 14:57:21,146.4,4,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,19,2015-06-07 19:12:30,147.98,1,,,"b""b' Bleh"," getting the same on Ubuntu 15.10 now.Seems a lot of distributions are compiling Qt with that awful option.We do need to detect it somehow in configure. @theuni can you take a look at this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,20,2015-06-07 19:12:30,1413.32,,1,,"b""b' Closing in favor of #6978'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,closed,2015-11-10 14:32:15,1414.9,5,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6248,closed,-,-,-,5,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,opened,2015-06-08 04:57:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,title,2015-06-08 04:57:13,00:00,,1,,"b'b\' Falsely triggered ""check your network connection"" error while catching up. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,body,2015-06-08 04:57:13,00:00,,1,,"b""b' One of my nodes on master was catching up with the block chain (~200 blocks behind) and triggered the following error", which remained even after maintaining sync with the network for a few hours. Misfiring is understandable," leaving it lingering after catching up feels a little buggy. Error was cleared after a restart.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,1,2015-06-08 04:57:13,179.93,,,1,"b'b"" Thanks for reporting. There seems to be an issue with the computation causing it to trigger more often than intended"," also reported in #5947. @gavinandresen can you take a look? We should probably disable this on the 0.11 branch and rc2 until it\'s fixed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,2,2015-06-08 04:57:13,6.07,,1,,"b""b' Another problem reported by @gmaxwell on IRC:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,3,2015-06-08 04:57:13,234.97,,1,,"b""b' @laanwj Just asking (without looking at the code) is this warning also displayed in the GUI at all?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,4,2015-06-08 04:57:13,179.6,,1,,"b'b"" I\'ll make some time to try to reproduce. The fix is probably to look at timestamps on the best headers-only chain (instead of the main chain).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,5,2015-06-08 04:57:13,1055.32,,1,,"b""b' Should be fixed by #6256'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,closed,2015-06-15 08:33:19,216.1,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,6,2015-06-08 04:57:13,296.55,,1,,"b'b"" I get the exact same error after initial sync using latest git master (586a2925)"," shows last UpdateTip was just ~30 seconds ago (and it\'s been fully synced for at least 6 hours). Do I open a new ticket?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,7,2015-06-08 04:57:13,1106.85,,1,,"b""b' Same here on version 0.11.2 and I see this quite often which is why I finally decided to report it. @Diapolo", yes," the warning also shows in output although the blockchain is to date and shows the latest block which is as recent as 4 minutes ago. ![image]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,8,2015-06-08 04:57:13,275.62,,1,,"b'b"" I think @gmaxwell reported this problem as well recently on IRC after laptop came back from sleep. Looks like the error doesn\'t go away when the problem goes away. Reopening.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,reopened,2015-12-07 12:32:07,238.8,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,9,2015-06-08 04:57:13,1142.35,,1,,"b""b' This seems to be still unfixed. Once triggered the warning never disappears.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,10,2015-06-08 04:57:13,258.02,,1,,"b""b' @l0rb What version are you running? This warning was removed in #8275'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,closed,2018-07-10 11:52:30,1400.38,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6251,closed,-,-,-,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,opened,2015-07-03 11:51:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,title,2015-07-03 11:51:59,00:00,,1,,"b""b' Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,body,2015-07-03 11:51:59,00:00,,1,,"b'b"" Windows uses backslashes (\\\\) in paths. An option has been added to allow setting which type of slash to be used. By default the forward slash (/) is used. Also updated the example configuration with the respective option. I added \'self.\' in front of a few variables since without it the script didn\'t work for me. Minor fixes for README.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,1,2015-07-03 11:51:59,4.07,,1,,"b""b' seems reasonable'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,2,2015-07-03 11:51:59,30.55,,,1,"b'b"" Python has excellent path manipulation utilities. Instead of making the path character configurable"," why not use Python\'s  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,3,2015-07-03 11:51:59,124.05,,1,,"b""b' slightly tested ACK (not on windows).Would recommend to squash to purge out the reverts and the non way.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,4,2015-07-03 11:51:59,1339.02,,1,,"b""b' ACK after squashing commits into one'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,closed,2015-07-10 16:17:22,265.38,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,reopened,2015-07-10 16:28:59,11.62,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,closed,2015-07-17 20:03:06,214.12,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6372,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,opened,2015-07-06 09:45:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,title,2015-07-06 09:45:41,00:00,,1,,"b""b' rpc: Accept strings in AmountFromValue'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,body,2015-07-06 09:45:41,00:00,,1,,"b""b' Accept strings containing decimal values"," in addition to bare values. note: untested'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,1,2015-07-06 09:45:41,395.48,,1,,"b'b\' Context?  Zero explanation of ""why""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,2,2015-07-06 09:45:41,36.57,,1,,"b'b"" Useful from JSON-RPC implementations where it\'s not possible to have direct control over the text of numbers (e.g. where numbers are always doubles)"," and it\'s still desired to send an exact value.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,3,2015-07-06 09:45:41,1.78,,1,,"b'b"" See also  #3759 for previous discussion I hadn\'t thought any more context was necessary here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,4,2015-07-06 09:45:41,16.88,1,,,"b'b\' @laanwj Someone looking at the git commit will have no idea about any of that background context... Commit messages should answer ""why?"" not just ""what?""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,5,2015-07-06 09:45:41,60.32,,1,,"b'b"" Ok", don\'t feel like this discussion," closing...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,closed,2015-07-06 18:16:43,511.03,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,6,2015-07-06 09:45:41,26.22,,1,,"b""b' Hmm.. i think this is useful.For the new wallet i did implement something similar (  see -This would allow users to post JSON content with encoded numbers like instead of which some  encoders wrap into  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,7,2015-07-06 09:45:41,36.45,,1,,"b'b"" @jonasschnelli Yes"," that\'s exactly the idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,reopened,2015-07-06 19:19:23,62.67,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,8,2015-07-06 09:45:41,304.7,,1,,"b""b' As a reminder", the conclusion from #3759 was to use  Numbers," not to stringify...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,9,2015-07-06 09:45:41,450.83,,1,,"b""b' @luke-jr But that would be a major API change"," while this could be used today and does not introduce any 1 satoshi versus 1 BTC magnitude risk.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,10,2015-07-06 09:45:41,28.03,,1,,b'b\' I think using Satoshis for all values in RPC would make sense. But as @laanwj said," this would be a major API change with many risks. And i also think that people are ""thinking"" in BTC rather then in Satoshis. Somehow this is a legacy we have to deal with. Nevertheless this PR would also be a slightly API change. In the current releases (before UniValue) and in the current master", numbers encapsulated in string did made bitcoind throwing an exception. UniValue internally stores everything as a string, that\\\'s why i think this PR makes sense and can be seen as a save solution. The only risk i see is that it could be possible that API  expect that sending a string where a btc value is required should throw an error.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,11,2015-07-06 09:45:41,395.05,,,1,"b'b"" I like this pull as well.  We fixed the JSON parsing in #6379 "," but what\'s to say somebody won\'t be dealing with a broken JSON composer on their end.  This provides a nice safe alternative. ACK""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,12,2015-07-06 09:45:41,2.1,,,1,"b""b' ACK.  Thanks for updating the commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,13,2015-07-06 09:45:41,337.67,,1,,"b'b"" ACK. We shouldn\'t forget to mention this in release notes if it gets merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,14,2015-07-06 09:45:41,1011.78,,1,,"b""b' Yes"," and needs to be exercised at least once in the RPC tests as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,15,2015-07-06 09:45:41,353.97,,1,,"b""b' Tested ACK.RPC test extension for : url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,16,2015-07-06 09:45:41,1123.88,,,1,"b'b"" Cherry-picked @jonasschnelli \'s test. Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,17,2015-07-06 09:45:41,1318.0,,1,,"b""b' Added small mention in release notes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,18,2015-07-06 09:45:41,1.43,,1,,"b""b' reACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,closed,2015-07-27 12:22:55,1023.53,1,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6380,closed,-,-,-,1,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,opened,2015-07-07 06:02:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,title,2015-07-07 06:02:01,00:00,,1,,"b""b' Refactor user-agent handling to be more extensible'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,body,2015-07-07 06:02:01,00:00,,1,,"b""b' A global vector keeps track of involved codebases.New items can be added by patches"," by repeating a 3-line comment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,1,2015-07-07 06:02:01,0.88,,,1,"b'b\' Inspired by Bitcoin XT and @petertodd\\\'s ""Satoshi RBF"" merely renaming the base codebase rather than appending on to the end or adding comments.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,2,2015-07-07 06:02:01,45.67,1,,,"b""b' Personally I would only do half of this:  Create the FormatUserAgent() wrapper.  Then drop the rest. That way forks have a very easy way to change the UA change one modular function without us having to worrying about a struct with a single use case inside the core code itself.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,3,2015-07-07 06:02:01,6.02,,1,,"b'b"" @jgarzik That doesn\'t make sense to me. The FormatUserAgent function doesn\'t do anything except handle the structs... Do you mean UAInitialiser?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,4,2015-07-07 06:02:01,1.58,,1,,"b""b' Oh", and I forgot the original reason I started doing this: so the alert code can be compared to each codebase component individually. Eg, an alert targeting Satoshi 0.10.2 ought to be picked up by minor forks by default," without having to make a special alert for each variant.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,closed,2015-07-07 06:56:10,54.15,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,reopened,2015-07-07 06:56:12,0.03,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,5,2015-07-07 06:02:01,3.88,,1,,"b""b' @luke-jr vUserAgentCodebases is static this basically adds complexity that is not needed for this codebase. A less intrusive change centralizing the user version composition makes sense for all codebases", and would be a useful cleanup. Other codebases can append to the version string without all this complexity," either.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,6,2015-07-07 06:02:01,28.37,,1,,"b'b"" Agree with @jgarzik. I\'m not convinced that we need the extra complexity and boilerplate here.What is the use of a vector of involved codebases inside one codebase? You\'re at most in one codebase at a time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,7,2015-07-07 06:02:01,109.2,1,,,"b'b\' @laanwj Derived codebases such as my ""ljr"" forks and (at present) Mike Hearn\\\'s Bitcoin XT should be using /Satoshi::ver/", rather than discarding the hierarchy entirely. Peter Todd\\\'s RBF forks should be using a simple comment (since it\\\'s just policy). These kinds of modifications are at present unnecessarily complex and conflicting (eg, RBF+ljr+XT don\\\'t merge cleanly). Furthermore, alerts currently need to target very specific user-agent strings," so having them split in a logical vector makes it possible (in a ""step 2"" PR) to match an alert for /Satoshi:/ against all derived codebases it affects", rather than need to sign an independent alert for every possible variant.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,8,2015-07-07 06:02:01,135.82,,1,,"b""b' Concept ACK.How would this intersects with url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,9,2015-07-07 06:02:01,246.62,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,10,2015-07-07 06:02:01,1307.38,,,1,b'b\' I would love to see _just_ the FormatUserAgent() transformation in a 1st commit.  That seems immediately mergeable.  Still unconvinced about the overall change -the default is static always in master," and users who need this are likely knowledgeable enough to accomplish the same thing more easily. Usually FLOSS source code bases of all stripes simply create a single ""version_extra"" metavariable and leave it blank", always, in master.  Then downstream projects patch version_extra.  That analogy seems applicable here. No need for additional machinery.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,11,2015-07-07 06:02:01,1336.95,,,1,"b'b"" I agree again with @jgarzik. Let\'s just make the extra version easy to patch", but the extra machinery around it doesn\'t seem worth the extra complexity just to avoid a trivial merge conflict. As for alerts, if the alert system in its current form survives at all it\'s not going to be used for anything that fine-grained," just network-wide alerts. Specific software can have its own mechanisms (this has been discussed in various other issues).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,12,2015-07-07 06:02:01,18.78,,1,,"b""b' Closing this for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,closed,2015-09-24 12:03:10,306.97,2,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6385,closed,-,-,-,2,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,opened,2015-07-14 07:42:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,title,2015-07-14 07:42:02,00:00,,1,,"b""b' Remote third parties are able to create accounts in your wallet file'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,body,2015-07-14 07:42:02,00:00,,1,,"b'b\' By typing listaccounts in the console i found an account called ""Refund from """, i received a refund from  and the transaction somehow was able to write an account to my wallet file. I found that it was very invasive and not compliant with privacy considering you can\\\'t even delete accounts. Version 0.10.0\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,1,2015-07-14 07:42:02,724.57,,,1,b'b\' That is a label interpreted as account name. The GUI doesn\\\'t use accounts," but uses the same database fields for labels. You cannot use both the GUI and accounts in bitcoind interchangably safely..Note that accounts are deprecated and will be removed in a future release (#3816).  I do not see how this affects privacy. Both labels and and accounts are not exposed to the outside world. (if you don\\\'t like the label you can  probably change it under ""receiving addresses"" in the GUI)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,closed,2015-07-17 19:46:36,724.57,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,2,2015-07-14 07:42:02,553.7,,1,,b'b\' It does not even show the label in the GUI, but it is shown in the console. It is actually exposed to the outside world at the moment they have physical or RPC access to your machine and a password will not even be required in the first hypothesis. Just a simple example," imagine one\\\'s wife type listaccounts in husband\\\'s wallet and read ""Refund from "" I think this is a real issue and should be reopened if it is not possible to delete those labels.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,reopened,2015-07-21 11:03:14,916.63,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,3,2015-07-14 07:42:02,369.82,,1,,"b'b"" Fair enough", but then the issue is not that \'a third party creates a label\' but that the information is hidden and uneditable in the GUI. Labeling the refund is useful in practice. Also: if you use payment requests, the payment request itself will also be added to your wallet information may still be salvageable from unallicated blocks in the database There is no expectation right now of privacy against people that can directly examine your wallet file.In that case the way to hide it would be to use a second wallet, say," on an encrypted USB stick.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,4,2015-07-14 07:42:02,15.37,,1,,"b""b' @breymoz Note that Bitpay did not generate the account or address themselves; that is just something built-in to the process of sending them a payment. Whenever you pay via BitPay (or anyone else using the payment protocol)"," you give them a refund address upfront in case they wish to return the funds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,5,2015-07-14 07:42:02,401.53,,1,,"b'b"" I don\'t think this needs to remain open considering the comments above""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,closed,2018-03-07 18:07:01,423.78,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6431,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,opened,2015-07-15 23:30:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,title,2015-07-15 23:30:15,00:00,,1,,"b""b' Optimizations: Consensus: In AcceptToMemoryPool", ConnectBlock," and CreateNewBlock'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,body,2015-07-15 23:30:15,00:00,1,,,"b'b"" In all the 3 functions"," reject transactions creating new money earlier.Consensus::CheckTxInputs gets nTxFee as output parameter and is separated from main::CheckInputs [renamed CheckInputsScripts]. This continues #6061. Detailed optimizations:Consensus::CheckTxInputs (called by the rest): Don\'t calculate nValueOut twiceDon\'t check nFees < 0 twicemain::Don\'t call CCoinsViewCache::HaveInputs 3 timesminer::Don\'t call CCoinsViewCache::HaveInputs twicemain::""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,1,2015-07-15 23:30:15,1394.4,,1,,"b""b' Have you benchmarked these optimisations?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,2,2015-07-15 23:30:15,566.27,,,1,b'b\' @NanoAkron Actually, no, I haven\\\'t. I don\\\'t really think the improvement will be that great, but hopefully it will be obvious to reviewers that performance can only be better, not worse (and the code is also cleaner IMO).One thing is not easy to benchmark is changing the order of checks, for example," moving the check that impedes transactions from creating new money before checking the ""standard-ness"" of input scripts. Is that better? Well", that depends on how many of the transactions checked by acceptToMempool don\\\'t have standard scripts and how many are attempting to create new money, etc. So it basically depends on the test set and benchmarking that is not really that interesting. I can move those checks less if I\\\'m asked to though. But benchmarking the other changes (less repeated operations if the transaction is accepted) would be great. @sipa do you have some advice (or maybe a code snippet to copy) on how to benchmark this?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,3,2015-07-15 23:30:15,500.25,,1,,"b""b' Needed rebase after #6077 . I also removed the checks in  as suggested by @sipa '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,4,2015-07-15 23:30:15,14.35,,,1,b'b\' Note that this is now kind of a de-optimization," since the cache has not being properly adapted (and thus the Consensus::CheckTxInputs calls are not using the cache anymore).I\\\'m not sure anymore which version is faster. This may not be faster than master after #6077 so benchmarks would be appreciated.Or maybe I can just close this and ""start"" again. Something like  url  can\\\'t be a ""next step"" to this anymore", and url  (very outdated) now looks more far away in the future than ever... Yeah, probably closing unless someone really wants it open. Mhmm, this was the last consensus PR I had open...\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,closed,2015-07-28 16:47:39,1037.4,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,5,2015-07-15 23:30:15,32.8,,1,,"b""b' Maybe I should open one just removing the checks in  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,reopened,2015-07-29 11:28:02,1120.38,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,6,2015-07-15 23:30:15,1114.17,,1,,"b""b' Rebased and reopened after #6077 has been reverted. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,7,2015-07-15 23:30:15,676.17,,,1,"b'b"" Needed rebase after #6519 (which by the way it\'s a step forwards for completing libconsensus"," thanks @laanwj ).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,8,2015-07-15 23:30:15,1424.58,,1,,"b""b' Closing until one of #6526/#6625 gets merged and probably also until #6557 / url  gets merged as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,closed,2015-09-06 22:53:21,685.32,1,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6445,closed,-,-,-,1,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,opened,2015-07-22 13:40:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,title,2015-07-22 13:40:50,00:00,,1,,"b""b' OSX Still displays as qt in spotlight'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,body,2015-07-22 13:40:50,00:00,,1,,"b'b"" Per url  still shows as bitcoin qt in spotlight. I located url  which appears to have fixed it everywhere else", but it looks like this was missed. I believe it\'s url  that\'s causing it," but I\'m not a mac programmer and don\'t feel safe opening an untested PR. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,1,2015-07-22 13:40:50,25.58,,,1,"b'b"" Nice catch.Changing the CFBundleName is not possible with breaking other things.I think it\'s possible to fix this because if you search with spotlight after application which also uses localization (like Disk Utility) it works also.Will have a look at it soon.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,2,2015-07-22 13:40:50,1147.6,,1,,"b""b' I could locate the root cause of this problem.It looks like", that our  (localization base instead of directly using , etc.) does not work for spotlight url  A fix would be to copy the  folder to serval supported languages (, , ," etc.). We could take the transfix supported ISO codes as folder name source.What do you think @theuni ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,3,2015-07-22 13:40:50,1281.85,1,,,"b""b' Sounds to me like overkill for a silly naming issue. And to have to to enumerate every possible language is a rabbit hole with no end.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,4,2015-07-22 13:40:50,100.48,,1,,"b'b"" Yeah. Agree. It\'s a overkill to fix a upstream bug.OSX\'s Spotlight should also respect the  localization.I\'ll file a bug upstream.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,5,2015-07-22 13:40:50,16.93,,1,,"b""b' Upstream Apple OSX Bug number: 21978972'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,6,2015-07-22 13:40:50,131.87,,1,,"b'b"" @jonasschnelli Given that it\'s not possible to browse other peoples Apple bug reports"," could you check in and see what the status of it is?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,7,2015-07-22 13:40:50,541.45,,1,,"b""b' @jonasschnelli Reviewing my old open Issues"," is still active?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,8,2015-07-22 13:40:50,915.52,,1,,"b'b"" Can\'t find BUG 21978972 anymore. Maybe they deleted it. Bug is still present in OSX 10.12.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,9,2015-07-22 13:40:50,258.82,,1,,"b""b' Any update? You can close if you want.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,closed,2017-04-27 03:10:59,810.15,1,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,10,2015-07-22 13:40:50,1365.9,,1,,"b""b' Well if it is still an issue it should not be closed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,11,2015-07-22 13:40:50,10.47,,1,,"b'b"" I don\'t know if it still is", and I don\'t use Bitcoin on macOS anymore so can\'t test. I was just tired of looking at it in my list," it\'s nearly 2 years old with no activity. I\'ll leave it open then.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,reopened,2017-04-27 14:17:18,666.32,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,12,2015-07-22 13:40:50,213.45,,,1,b'b\' Not sure if I miss something, but is there a reason why we can\\\'t rename the binary from Bitcoin-Qt to Bitcoin-Core (during DMG packaging) and set the corresponding  ? Ah. I remember," we wanted to keep the ""replicability feature"" (when you drag\\\'n\\\'drop a new Bitcoin-Core version into the /Application folder). If we rename", there will be suddenly two Bitcoin-Core apps.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,13,2015-07-22 13:40:50,1320.05,,1,,"b""b' Any update on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,14,2015-07-22 13:40:50,1388.65,,1,,"b'b"" This is a 4 year old bug. I don\'t use Bitcoin anymore", I\'m not sure if Spotlight is even a thing still. If anyone still finds this an issue," they can open a new Issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,closed,2019-04-30 14:59:27,42.15,1,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,15,2015-07-22 13:40:50,31.0,,1,,"b'b"" It\'s still an issue"," but we don\'t want to rename the bundle (I don\'t know if that\'s really unavoidable).  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,16,2015-07-22 13:40:50,45.47,,1,,"b'b"" Ok"," I guess I\'ll leave it open then. :sigh:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,reopened,2019-04-30 16:15:55,76.47,1,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6463,open,-,-,-,1,15,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,opened,2015-08-28 23:35:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,title,2015-08-28 23:35:11,00:00,,1,,"b'b"" Chainparams: Don\'t check the genesis block""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,body,2015-08-28 23:35:11,00:00,,1,,b'b\' The genesis block is the truth: don\\\'t check it.Apart from being a minimal optimization," this removes the necessity of ""mining the genesis block"" when new testchains are created. This is a necessary step for #6382 (which creates new testchains).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,1,2015-08-28 23:35:11,113.4,,1,,"b""b' How is this an optimization?  You are now comparing the blocks hash against the genesis block every time is called?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,2,2015-08-28 23:35:11,7.63,,1,,"b""b' By saving some checks for the genesis block.The check in ConnectBlock was already there"," now is not called if the block being checked is the genesis block (ie the checks has just been moved below the genesis block check).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,3,2015-08-28 23:35:11,4.27,,1,,"b""b' In any case"," benchmarking welcomed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,4,2015-08-28 23:35:11,1278.67,,1,,b'b\' Rebased and simplified. Looking at it again," @dcousens was right that many of the changes would have affected performance negatively. Besides they were (or at least they currently seem to be) unnecessary for #6382 (or for facilitating the creating of testchains in general by not requiring tester to ""mine"" the genesis block of their testchains: the genesis block is correct by definition).Now it should be clear that we\\\'re just optimizing the genesis block case in ConnectBlock() without adding any work to the other cases", and we\\\'re only affecting negatively the performance of CBlockTreeDB::LoadBlockIndexGuts by comparing two hashes right before returning and error (only if CheckProofOfWork had previously failed), which I think is very acceptable.So I don\\\'t think benchmarking this makes sense anymore.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,5,2015-08-28 23:35:11,13.85,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,6,2015-08-28 23:35:11,6.85,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,7,2015-08-28 23:35:11,134.4,,1,,"b""b' Care to pass in the params from above like #6986?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,8,2015-08-28 23:35:11,91.92,,1,,"b""b' @gmaxwell you mean passing it explicitly to CBlockTreeDB::LoadBlockIndexGuts()?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,9,2015-08-28 23:35:11,175.9,,1,,"b""b' @jtimon Right. Do you agree it would be the correct and consistent thing to do?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,10,2015-08-28 23:35:11,325.65,,,1,"b'b"" Sure", using the local variable is in preparation for that at some point later (see #5970)," but I\'m happy to do it here directly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,11,2015-08-28 23:35:11,147.22,,1,,"b'b"" Updated with @gmaxwell \'s nit solved.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,12,2015-08-28 23:35:11,1393.65,,1,,"b""b' Still ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,13,2015-08-28 23:35:11,970.23,,1,,"b'b"" still ping", I\'ve been thinking about closing this and reopen it whith a test that makes sure a new non-mined chain wold work (that means another chain in master),"'
bitcoin	6597	closed	closed	 - 	2015-12-18 05:18:49	343.63	0	14	1
bitcoin	6597	closed	14	dcousens	2015-08-28 23:35:11	1091.98			+1	b""b' re-ACK e4037dd,  @jtimon test sounds good too :+1: '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,reopened,2015-12-18 23:38:07,1099.3,0,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,15,2015-08-28 23:35:11,1205.53,,1,,"b'b\' From experience elsewhere: if you introduce a new chain with an ""invalid"" genesis block and this change", it will fail to reindex, as the check is still done in that case. Suggested fix: see url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,16,2015-08-28 23:35:11,1031.27,,,1,"b'b"" Mhmm", why #6382 seems to be working just fine with reindex then? Have you actually reproduced the error you claim would appear? This shouldn\'t be necessary, certainly not in CheckBlockHeader(). In AcceptBlockHeader, it won\'t be called for the genesis block, see url Maybe it is required on TestBlockValidity() or something else that calls CheckBlock() (which calls CheckBlockHeader())," but I would prefer to leave the genesis block check out of the consensus function CheckBlockHeader(). Probably a good test for this would be to create a new regtest-like chain with a genesis block that doesn\'t satisfy the proof of work and run it for a few blocks both with and without reindex from the python tests. But without #6907 and something like url  it seems like the testing would be much more than the change itself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,17,2015-08-28 23:35:11,190.52,,1,,"b'b"" Let\'s try to get agreement here @sipa @jtimon""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,18,2015-08-28 23:35:11,12.5,,1,,"b'b"" @jtimon Because Bitcoin\'s genesis block does actually pass PoW checks. What I mean is that this patch is effectively removing the invariant thatgenesis blocks have to be valid. However", if you actually try with aninvalid genesis block, reindex fails. Technically not a concern for Bitcoin at this point, so this is not ablocker for merge. Just some advice that if we\'d actually want to startcreating invalid genesis blocks (which makes creating test chains mucheasier)," this patch isn\'t enough.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,19,2015-08-28 23:35:11,1157.92,,,1,"b'b"" Genesis blocks are valid by definition and should never be checked (whether they pass pow or not). In any case", IIRC last time I tested #6382 it worked just fine even when reindexing the chain, therefore I disagree with sipa that this patch isn\'t enough. As said the very fact that we disagree on whether or not this is enough for its stated goal, means IMO that this should be introduced with  tests that verify this is enough and will keep being enough in the future (make sure nobody undoes this without noticing).I believe the best way to test this is through a new chain whose genesis block doesn\'t  pass pow (regtest2 ?) And test boh with and without reindex. Does that make sense? Addionally, I don\'t  plan to create a new chain without #6907 (and generic selection with -chain, also part of #6382 ),and that\'s  why I\'m  closing this for now.Anyone feel free to take over this if you can\'t  wait for the factory. I\'ve  personally been wanting this factory for almost two years, I can wait more for #6907 to be merged (was supposed to happen before forking 0.12," I really hope it will happen before forking 0.13.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,closed,2016-01-19 11:29:23,711.27,0,17,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,reopened,2016-01-21 12:25:22,55.98,0,17,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,20,2015-08-28 23:35:11,57.55,,,1,"b'b"" I\'m not against merging this! I was simply giving a suggestion for further work towards its stated goal.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,21,2015-08-28 23:35:11,18.6,,,1,"b'b"" And I\'m  saying I believe this is enough for fulfilling its stated goal", but the fact that we disagree means we should introduce tests here to make sure the goal is achieved (and later merges don\'t  ruin it).But as said I don\'t  plan to write those tests until #6907. This was not merged before forking 0.12 so I\'m  not in a hurry anyway. As long as I reopen it before 0.13 is forked I\'m happy closing it for now.I can leave this opened as incomplete, but I wanted people interested  in making new testchains easier (most of what #6382 was about) to focus on #6907 first. #6907 was supposed to be merged before 0.12 and is also more costly to maintain rebased," can we please do that first?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,closed,2016-01-28 15:56:32,211.17,0,17,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6597,closed,-,-,-,0,17,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,opened,2015-08-31 12:23:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,title,2015-08-31 12:23:10,00:00,,1,,"b""b' Blockchain sync failure'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,body,2015-08-31 12:23:10,00:00,,1,,"b'b"" I\'m on Bitcoin core v0.11.0 windows x64.OS is Windows Server 2012 R2. I\'ve been using bitcoin core for years without significant problems", but last month something happened. Database got corrupted. I tried to delete all but , resync database. Tried ~5 times," put datadir to different hard drives. At random position sync stops with error. After process relaunch same error is displayed and program crashes with assertion. ![bitcoin_read_database]url ![1]url ![2]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,1,2015-08-31 12:23:10,93.85,,1,,"b'b"" Same thing happens to bitcoind. C:\\\\Program Files\\\\Bitcoin\\\\daemon>  -datadir=H:\\\\bitcoinError: Error reading from database", shutting down. This application has requested the Runtime to terminate it in an unusual way.Please contact the application\'s support team for more information.  : 2015-08-31 12:39:34 LevelDB read failure: Corruption: block checksum mismatch2015-08-31 12:39:34 Corruption: block checksum mismatch2015-08-31 12:39:34 Error: Error reading from database," shutting down.2015-08-31 12:39:34 Error reading from database: Database corrupted""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,closed,2015-08-31 13:57:01,93.85,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,reopened,2015-08-31 13:57:16,0.25,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,2,2015-08-31 12:23:10,26.65,,1,,"b'b\' ""Error reading from database: Database corrupted"" levelDB corruption is usually caused by disk or memory corruption (while writing to disk).You could try using to restrict syncing to one thread and then  . Sometimes this helps when", for example, the CPU is overheating.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,3,2015-08-31 12:23:10,87.35,1,,,"b""b' Unlikely this is RAM or DISK problem. OS runs stable for weeks"," memtest report nothing.No bad block events in the event log. One of the disks I tried to put db on is several days old.Ram problems are mostly random. Here I have 100% failure result each time.Any ways to further diagnose the source of the problem ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,4,2015-08-31 12:23:10,974.77,,,1,"b""b' I reproduced exact same behavior in VM with Windows Server 2003 X64.Pls someone try to resync the whole db ! Am I alone with this ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,5,2015-08-31 12:23:10,101.5,,,1,"b'b"" I\'d be interested to know if the same happens in that VM with Bitcoin 10.2.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,6,2015-08-31 12:23:10,3.0,,1,,"b""b' You are able to reproduce the failure on other hardware?What about bitcoind or bitcoin-qt for Linux in a VM?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,7,2015-08-31 12:23:10,3.82,1,,,"b'b\' Additional notice. Both 0.10.2 and 0.11.0 cannot start db sync when empty datadir is on ""\\\\\\\\vmware-host\\\\shared folders"" and successfully do when datadir is on windows network drive. 2015-09-01 09:51:55 init message: Loading block index...2015-09-01 09:51:55 Opening LevelDB in Z:\\\\home-h\\\\Bit2test\\\\blocks\\\\index2015-09-01 09:51:55 Corruption: no meta-nextfile entry in descriptor2015-09-01 09:52:23 init message: Loading block index...2015-09-01 09:52:23 Wiping LevelDB in Z:\\\\home-h\\\\Bit2test\\\\blocks\\\\index2015-09-01 09:52:23 Opening LevelDB in Z:\\\\home-h\\\\Bit2test\\\\blocks\\\\index2015-09-01 09:52:23 Corruption: no meta-nextfile entry in descriptor2015-09-01 09:52:25 Shutdown: In progress...2015-09-01 09:52:25 StopNode()2015-09-01 09:52:25 Shutdown: done\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,8,2015-08-31 12:23:10,66.92,,,1,b'b\' I have one guess. Trouble can be in memory mapped files. I know bitcoin core uses them," it can be seen in RamMap utility.I also run BURST coin pocminer. It extensively uses mapped files. Because of that kernel paged pool grows very large up to more than half of the physical memory (its gigabytes). Huge pooltag is ""MmSt""", it contain PTEs. Detailed subject description is here : url I\\\'m on 24 GB system and set the PoolUsageMaximum to 10 (its 10 percent of RAM, 2.4G in my case). This measure effectively limit MmSt growth and it worked great until... what changed in last weeks ?I replaced failing hard drive which contain 3 TB of BURST miner plots. This time I formatted NTFS volume with 64K cluster size (was 4K).And probably from that point bitcoin db corruptions started.Now i killed pocminer and trying to sync bitcoin both on the host and in VM.Without pocminer bitcoin could start sync on vmware-host shared folder.Will report after my guess is confirmed or no. PS. Bitcoin 0.11.0 linux x86, runs on different hardware node without VM. Already synced till 1 year old, still no problem.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,9,2015-08-31 12:23:10,1049.7,1,,,"b""b' Yes"," trouble was triggered by BURST miner. Without it sync was successful.Running with almost exhausted paged pool cause errors not only in bitcoin core but also have other negative effects and having large cluster volume seem to harden them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,closed,2015-09-02 04:30:55,873.65,3,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,10,2015-08-31 12:23:10,358.03,,,1,"b'b"" Thanks for looking into this so deeply. This issue could be useful for other people that experience issues on windows. I still wonder how the combination of hw and sw caused corruption"," but it\'s likely the problem lies outside bitcoin core if it affects other software negatively as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,11,2015-08-31 12:23:10,522.15,1,,,"b'b"" One of the negative effects was the following.Attempts to start db sync from bitcoin core running in vmware guest to vmware host drive were failing just at the start. Then I tried to mount network drive from vm guest to vm host using virtual network (regular \'net use \\\\\\\\192.168.1.5\') and sync db to that drive.Start was successful but after some time I saw messages in the tray stating that windows could not flush data to network drive and data could be lost. Obviously", bitcoin core cannot display such messages,  displays them. Event source is guest os kernel not being able to get  success confirmation from the server side.  Thus the lanmanserver (The \'Server\' service) component on the host was experiencing problems in exhausting paged pool condition probably IO-related.Its all very strange because in the task manager on the host I see that pool is being trimmed from 2.8G to 800M after its exhaustion and then again grows to 2.8G.I can suppose some paged pool allocations or some map-view-of-file operations fail before MmSt trim actually happens. Kernel components are written well-checked to not crush in any possible condition, but still denial-of-service exists.Windows architecture problem ? I know burst miner is badly designed. It should not map terabytes of data files to memory. But also OS should not behave bad in this condition. If MmSt pool is like cache it must be trimmed transparently without alloc fails. From bitcoin core perspective may be some checks are missing or db engine lack enough atomicity to rollback failing changes ? At the moment I can state : BURST miner can kill bitcoin db in some conditions," possibly when burst plots are on a large cluster volume.This is not HW related at all. Its mainly the OS problem not being too resistant to some conditions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6606,closed,-,-,-,4,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,opened,2015-09-02 04:29:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,title,2015-09-02 04:29:40,00:00,,1,,"b""b' Fee estimate patch'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,body,2015-09-02 04:29:40,00:00,1,,,"b""b' Fee estimation uses a threshold for the fraction of recent transactions of a given fee rate that must have been confirmed within the target number of blocks in order for that fee rate to be considered high enough such that a new transaction with that fee rate will be likely to be confirmed within the target. This patch changes the threshold to 95% (from 85%) for all targets other than 1 block. 85% was previously used because higher thresholds were too hard to meet for a target of 1. However the recent stress test has shown that 85% is not conservative enough"," so a target of 1 is special cased and a higher threshold is used. This is a simple change that is meant to be backported to 0.11. Further improvements for fee estimation will hopefully be possible for 0.12. EDIT:  Please note that this will in general cause higher fee estimates to be returned.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,closed,2015-09-09 17:29:28,779.8,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,reopened,2015-09-09 17:31:31,2.05,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,1,2015-09-02 04:29:40,783.33,1,,,"b""b' oops"," was trying to bump travis'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,2,2015-09-02 04:29:40,332.73,,1,,"b'b"" Are you aware of anyone reporting missed targets? (Haven\'t searched"," excuse my laziness)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,3,2015-09-02 04:29:40,1394.28,,1,,"b""b' @MarcoFalke Yes.  During the mid-July stress tests I had several reports of people placing transactions in accordance with fees returned by the estimation algo and waiting much longer than the expected number of blocks. This patch is not going to completely solve the problem that the current fee estimation logic can only provide a rough answer of what has happened historically"," but its actually a very simple change and is worth it for the improvement.  Better logic is waiting for a sorted mempool (and ideas about what to do with it).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,4,2015-09-02 04:29:40,612.05,,1,,"b""b' concept ACK if some data can be provided to demonstrate tip-over points'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,5,2015-09-02 04:29:40,814.2,1,,,"b'b"" @dcousens sorry"," what\'s a tip-over point?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,6,2015-09-02 04:29:40,645.13,,,1,"b""b' @morcos good question! I meant to ask if you had any data related to the quote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,7,2015-09-02 04:29:40,530.37,1,,,"b'b"" @dcousens This is the kind of data analysis I\'ve looked at.  Here\'s some data showing fee estimates in early July when one of the spam attacks started.  The green line represents a much more recent history of transaction confirmation times (half-life of 36 blocks or so).  You can see from the green line that once the attack starts around block 364130", you pretty immediately need a significantly higher fee to be confirmed within 5 blocks.  However the old fee estimates don\'t really start increasing for about 50 blocks.  The new fee estimates react much quicker.  This is because if, historically, close to 100% of your transactions were being confirmed within the target, even if the number all of a sudden becomes 0%, it can take some time for the moving history to drop below 85% over the time horizon we use.  Dropping below 95% happens much more quickly.  I experimented with using a shorter time horizon but there was a lot of noise in the data.  In the absence of this effect," I think its kind of an arbitrary choice as to what percentage of recent transactions should have been confirmed within the target number of blocks is the right answer to the fee estimate question.![fee estimation changes]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,8,2015-09-02 04:29:40,475.7,,,1,"b""b' I assume the bottom axis is the block height"," and the left is the fee estimate?Why is the new 95% fee estimate higher before the peak (assumed peak at ~364140)?Or is there a subset of the data that I am not aware of? **edit:** thanks for going into detail on this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,9,2015-09-02 04:29:40,651.02,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,10,2015-09-02 04:29:40,58.35,,1,,"b'b\' @dcousens Correct on the axes. It\\\'s not surprising that the estimate can be higher even in the ""steady state"".  It\\\'s answering a slightly different question.  It may be that at block 364050 about 86% of transactions of feerate around 14K are being confirmed within 2 blocks.  Passes the old test and not the new.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,11,2015-09-02 04:29:40,31.23,,,1,"b'b\' @morcos thanks for the explanation.However I feel the ""steady state"" being higher to start with doesn\\\'t agree with the statement you made earlier:I don\\\'t necessarily have a strong opinion on this",  as the intent seems to be to improve UX,  but noticeably at the cost of higher fees by default.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,12,2015-09-02 04:29:40,79.98,,1,,"b'b"" @dcousens Fair enough"," perhaps that is worth pointing out.  I edited the initial PR comment.  By arbitrary I just meant it\'s not clear what more closely maps to what people expect the answer for fee estimation to mean.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,13,2015-09-02 04:29:40,1420.82,,1,,"b'b"" I\'d like this to be merged"," but I\'m going to include it in a new and improved #6134 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,closed,2015-10-15 14:58:53,1287.37,4,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6618,closed,-,-,-,4,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,opened,2015-09-02 23:26:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,title,2015-09-02 23:26:24,00:00,,1,,"b""b' without removing  [#6526 alternative]'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,body,2015-09-02 23:26:24,00:00,,1,,"b""b' This is a replacement for #6526 with my nits integrated in the commits where they were more relevant.It has a smaller diff (138 additions and 65 deletions VS +116 \\xe2\\x88\\x9295) is more amenable to any block size change proposal (many of them will need a function)", to #6382 (adding new test chains for block size tests) and to libconsenusus-related #6591 (which is also part of the process of making chainparams less global #5970).I will rebase #6382, #6591 and #5970 on top of this. Please," @theuni close #6526 in favor of this if it passes your review. Blocking:Consensus: Adapt declarations of most obviously consensus functions #6591 [-params-0.12.99]Chainparams cleanup #5970 [chainparams_cleanup](depends on #6163)Chainparams: Introduce std::numeric_limits::max() new testnet chains to test different block sizes #6382 [chainparams-sizetest-0.11.99]'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,1,2015-09-02 23:26:24,131.03,,,1,"b'b"" @jtimon can you summarize why? #6526 was relatively concise already","  and manually diffing that against this doesn\'t sound like a great use of time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,2,2015-09-02 23:26:24,59.62,,1,,"b'b"" In summary", this doesn\'t destroy  (doesn\'t undo costly refactor work #5970), this doesn\'t ().GetConsensus()/consensusParams/ when it\'s not necessary (because the function depends on CChainParams, see #XXXX)," and it goes further in relation to facilitate implementations of consensus block size changes by creating MaxBlockSize() and MaxBlockSigops() (which is diff-free when you\'re replacing MAX_BLOCK_SIZE with  anyway).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,3,2015-09-02 23:26:24,1061.2,,1,,"b""b' Force pushed with a fix in (for those who found the time to fetch a). was being used more than once in  and that caused problems in #6382 .  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,4,2015-09-02 23:26:24,304.2,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,5,2015-09-02 23:26:24,142.48,,1,,"b'b"" Added a squashme commit that should solve @dcousens\' nits (ie gets instead of  ). EDIT: Here\'s the squashed version: url  (also declaring Consensus::CheckTxInputs in consensus.h and adding some documentation to the function).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,6,2015-09-02 23:26:24,675.3,,1,,"b""b' Updated with the squashed version.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,7,2015-09-02 23:26:24,311.02,,1,,"b""b' Closing in favor of #6672.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,closed,2015-09-14 20:11:16,1244.87,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,reopened,2015-10-20 16:00:43,1189.45,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,8,2015-09-02 23:26:24,1190.12,,1,,"b""b' Rebased and reopened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,9,2015-09-02 23:26:24,583.93,1,,,"b'b"" re-ACK","  but the constant shifting of code to different [but almost the same] PRs is getting insane. I\'d rather not have to ACK this again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,10,2015-09-02 23:26:24,727.32,,,1,"b""b' @MarcoFalke Thanks"," rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,11,2015-09-02 23:26:24,57.32,,1,,"b""b' New uses of MAX_BLOCK_() were introduced in #6622. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,12,2015-09-02 23:26:24,1435.88,,1,,"b'b"" Rebased with a tiny fix that would have break the build (if this has been merged without the fix).I haven\'t squashed the new commits (from what was contained and reviewed in #6672) to facilitate re-review.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,13,2015-09-02 23:26:24,415.35,,1,,"b""b' re-ACK"," only did a once over though'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,14,2015-09-02 23:26:24,1068.48,,1,,"b'b"" Rebased and squashed. @theuni @laanwj @sipa @gmaxwell @jgarzik @gavinandresen Does this have any chance to get into 0.12 as it is?I think it is disruptive enough that if we decide to do so", it would be good to make it happen asap.Otherwise I would like to close it as an independent PR. It is included in both #6382 and #5970 anyway so it won\'t be lost, but having it synchronized in both branches plus an independent one is more annoying than it needs to be. BIP102, for example, can be maintained on top of #6382 instead. But at the same time, if it is unlikely that it gets merged for 0.12 as it is, It would be very nice to at least create another one with the 2 or 3 commits that are suitable for 0.12 and keep maintaining the rest just as part of #6382 and #5970," at least until 0.12 is forked.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,15,2015-09-02 23:26:24,23.32,,1,,"b'b"" utACK as-is for 0.12. This doesn\'t move much code and is unlikely to conflict with other PRs apart from a few simple variable renamings. I do hope that we\'ll soon move the functions now declared inside  to their respective "," though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,16,2015-09-02 23:26:24,4.98,,,1,"b""b' Great"," I was thinking about leaving ::CheckTx declared in main.h if we were going for the 2/3 commits option and that was a problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,17,2015-09-02 23:26:24,1.6,,1,,"b'b"" I agree with @sipa"," it doesn\'t look too disruptive as-is.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,18,2015-09-02 23:26:24,1289.42,,1,,"b""b' Needed trivial rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,19,2015-09-02 23:26:24,526.45,,1,,"b""b' utACK 82b2443'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,20,2015-09-02 23:26:24,26.67,,1,,"b""b' utACK '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,21,2015-09-02 23:26:24,1382.95,,1,,"b""b' Rebased(6)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,22,2015-09-02 23:26:24,259.47,,1,,"b""b' Re-ACK"," @laanwj anything holding this back?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,23,2015-09-02 23:26:24,593.45,1,,,"b""b' Rebased(7)Like I said the only disruptive commit is the last one and is the one that is requiring rebase all the time. Prediction: Next time this PR requires rebase", it will probably be due to the last commit and url  will remain without conflicts. The third commit is somewhat disruptive too, so I may be wrong, but if I am right, I will just drop the last commit," sorry @theuni '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,24,2015-09-02 23:26:24,645.72,1,,,"b'b\' @gmaxwell This would make it much easier to maintain those ready ""patches"" (even the simple bip102 has rapidly bitrot). If ithad been merged for 0.12 like was supposed to be the plan (according to sipa and btcdrak comments)", that would have also make those pat hes easier to backport to 0.12.Many people including you reviewed this as part of the closed #6672 , only a few small changes required for rebase has been added.I\\\'m sorry if I sound repetitive but I can\\\'t really understand what is holding this for so, so long.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,25,2015-09-02 23:26:24,80.22,,1,,"b'b"" This was ACK\'d for a while ago","  it should still be able to make it in right?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,26,2015-09-02 23:26:24,8.7,,1,,"b'b"" Yes", if this get\'s merged in master," at least the first three commits should be ~~backported~~ (can be merged as is).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,27,2015-09-02 23:26:24,1132.62,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,closed,2015-12-18 05:13:26,792.72,3,23,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,28,2015-09-02 23:26:24,620.73,,1,,"b""b' Structure seems reasonable"," with the caveat that MaxBlockSize() and MaxBlockSigOps() will inevitably be modified depending on what state they examine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,29,2015-09-02 23:26:24,391.38,,1,,"b'b"" Yeah", when I changed the variable in the Consensus::Params struct (what @cfields had initially) to a function I wasn\'t sure on whether to use  or ()," certainly not . If we can finally agree on that somewhere I don\'t mind to change it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,30,2015-09-02 23:26:24,94.55,,1,,"b""b' ut ACK"," for the record'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,reopened,2015-12-18 19:56:07,882.68,3,26,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,31,2015-09-02 23:26:24,1054.35,,1,,"b'b"" Replaced by #7238 (a subset of this) with @rustyrussell \'s nit fixed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,closed,2015-12-21 07:06:13,670.1,3,27,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6625,closed,-,-,-,3,27,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,opened,2015-09-03 18:23:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,title,2015-09-03 18:23:18,00:00,,1,,"b""b' could new proof of work be pifs?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,body,2015-09-03 18:23:18,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,1,2015-09-03 18:23:18,199.82,,,1,"b""b' lol'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,2,2015-09-03 18:23:18,774.33,,,1,"b""b' Good idea. And why just PoW", think of all the space saved by storing the block chain in \\xcf\\x80," instead of on disk!Please post your BIP proposal to the mailing list as an offset into \\xcf\\x80.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,3,2015-09-03 18:23:18,551.52,,1,,"b""b' k. waiting for approval on the listUPDATE:accepting me on the list seems to take long time(accidental close)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,closed,2015-09-10 17:41:10,1397.87,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,reopened,2015-09-10 17:41:12,0.03,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,4,2015-09-03 18:23:18,22.63,,1,,"b""b' Closing this"," this is not the place to discuss network-wide changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,closed,2015-09-22 20:11:36,150.4,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,5,2015-09-03 18:23:18,18.53,,1,,"b""b' I think I saw one of you guys as admins for the list I submited my application but no reply of approval I guess you guys are busy'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,6,2015-09-03 18:23:18,34.1,,1,,"b'b"" The mailinglist is not moderated. You only need to sign up first (whichdoesn\'t have moderation either). If you\'re accidentally subscribing to theold sourceforge mailinglist", you should get a message saying that you needto subscribe to the linux foundation one instead. Also, to avoid giving you false requiring it. And pifs is considered a proof-of-concept joke," even by itsauthor.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,7,2015-09-03 18:23:18,42.15,,,1,"b""b' :-) I did not have high hopes that all of bitcoin people would bet a farm on pifs tomorrow I just wanted to submit idea who knows there might be altcoin that uses pifsI was subscribing to the source forge thing and I did not find or spot the other one'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6632,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,opened,2015-09-07 23:41:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,title,2015-09-07 23:41:32,00:00,,1,,"b""b' Obfuscate chainstate'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,body,2015-09-07 23:41:32,00:00,1,,,"b'b"" Fixes url  (discussion here: url  Obfuscate the leveldb-stored chainstate with a simple XOR to avoid spurious detection by anti-virus software. Chainstate obfuscation will happen atomically", i.e. either all or none of the database will be obfuscated. ~~A runtime error will be thrown if a user attempts to invoke with existing, unobfuscated chainstate data.~~ On reindexing, all new chainstates will be obfuscated. until then," we specify a degenerate obfuscation key ( ) that has no effect when XOR\'d with existing data.### TODO after Concept ACK[x] write tests covering  [x] write tests covering obfuscation ops with  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,1,2015-09-07 23:41:32,29.22,,,1,"b""b' Concept ACK"," this looks pretty good already.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,2,2015-09-07 23:41:32,7.12,,,1,"b'b"" Concept and approach ACK.  Obviously this will need a fair amount of testing. (In particular we should get an AV afflicted system and confirm this fixes it). I think it should be on by default. The people who need this won\'t know they need it"," anyone who doesn\'t need it will quickly figure it out.  (Do other people have opinions?) I\'m not even sure if we should support turning it off?  It\'s easy enough to support (as your code shows) that maybe we just should; but I\'d like to hear an argument for it. Thank you for working on this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,3,2015-09-07 23:41:32,3.05,,1,,"b'b"" @gmaxwell The only argument against supporting unobfuscated is 1) it would need upgrading code (but I think that\'s pretty simple"," though supporting  in the middle is not trivial) 2) it would break backward compatibility.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,4,2015-09-07 23:41:32,2.05,1,,,"b""b' @gmaxwell I agree that having the obfuscation enabled is a sane (and safe) default"," but is it acceptable for that to be thrown on upgrade for everyone with an existing chainstate? Seems harsh. Is it desirable to find a more gentle way of doing the migration?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,5,2015-09-07 23:41:32,5.88,,,1,"b""b' This is why supporting mixed  is nice: no slow upgrade process. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,6,2015-09-07 23:41:32,54.82,,1,,"b'b"" @luke-jr I do think the mixed migration is a better option if we\'re going to enforce this (or even make it the default behavior). Will implement if @gmaxwell"," @laanwj agree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,7,2015-09-07 23:41:32,67.03,,1,,"b""b' As noted in url  a mix of cleartext and obfu-text does not actually fix the problem seem in the field for active users. Users reporting this problem will still see the problem after upgrading to a release with this feature.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,8,2015-09-07 23:41:32,117.23,,1,,"b'b"" I\'ve integrated @gmaxwell\'s suggestion and I think it\'s looking much better.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,9,2015-09-07 23:41:32,158.27,,,1,"b'b""   needs a good refactoring at some point... unless there\'s something I\'m not seeing", it should probably be absorbed into  .That may be out of scope for this PR," though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,10,2015-09-07 23:41:32,1.88,,1,,"b""b' Now that I think about it"," the refactoring may be more contained than I thought. Anyone have qualms with me doing it in this PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,11,2015-09-07 23:41:32,1267.92,,,1,"b'b"" Okay", I think this is in a good place. Obfuscation now happens automatically whenever the chainstate is initialized (either via or otherwise). The degenerate key that we use ( ) _isn\'t_ persisted, but it\'s specified during class construction in the case that we can\'t do real obfuscate due to existing data. IMO this is ready to go," modulo the addition of a few unittests.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,closed,2015-09-09 05:16:37,335.08,2,6,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,reopened,2015-09-09 05:16:41,0.07,2,6,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,12,2015-09-07 23:41:32,226.78,,,1,"b'b"" OK", unittests here are done. If anyone would like to see additional testcases, let me know," but I think I\'ve covered the two important cases: 1. No existing data (obfuscation)2. Existing data (no-op obfuscation) It\'d be great if we could get some testers who are affected by anti-virus software (@KyrosKrane ?) trying out this changeset.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,13,2015-09-07 23:41:32,24.42,,,1,"b'b"" I\'d be more than happy to test"," but I\'m new to testing with Bitcoin off Github. Do I need to download and compile from source?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,14,2015-09-07 23:41:32,28.47,,,1,"b'b"" @KyrosKrane if your comfortable with", and are able to compile from source then the github-merge script in / is an easy way to test pull requests. Once you\'ve cloned the repo, cd in to the directory and run That will pull in the code changes from this pull request, and you can then compile as normal. Otherwise," @jonasschnelli has gitian buillt binaries for certain pull requests available from url  He can probably spin up a build for this pull once he gets a chance.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,15,2015-09-07 23:41:32,96.13,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,16,2015-09-07 23:41:32,137.32,,1,,"b'b"" Thanks for the build; that will make this much faster for me. :) Here\'s what I\'ve done so far. 1) Backed up my existing bitcoin config directory.2) Backed up my existing bitcoin exe files.3) Downloaded the test build from @jonasschnelli \'s site4) Deleted everything in my config dir other than the basic config file (just has my connection info and settings)5) Replaced the exes in my Program Files directory with the exes from the test build.6) Removed the antivirus exclusion from the bitcoin config directory.7) Started the test exe. I\'m now waiting for it to download the blockchain (I have a second node on my local network", so it shouldn\'t be too slow) and rebuild the chainstate and index files. Once that completes," I\'ll do a manual scan of the config dir and see if Norton yells at me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,17,2015-09-07 23:41:32,358.88,,,1,"b""b' @KyrosKrane that sounds great"," thanks for your help.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,18,2015-09-07 23:41:32,11.18,,1,,b'b\' @KyrosKrane If you have the time," could you also test with the ""infected"" data directory", verify that by just running the current bitcoin core version does not fix the AV alert?Afterward," you could check if a fixes the AV problem on the ""infected"" data directory.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,19,2015-09-07 23:41:32,33.6,,,1,"b'b"" You read my mind. :)  That\'s exactly what I\'m going to do when this current run ends. It will probably be tomorrow", though; the re-download is taking longer than I thought," even though my other node is locally connected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,20,2015-09-07 23:41:32,1296.18,1,,,"b'b"" OK", update for today. The re-download completed overnight. No antivirus alerts.  I manually scanned the bitcoin data dir. No alerts. This is as expected. Next, I stopped bitcoinand renamed the data directory.  I copied my original (unobfuscated) blocks and chainstate folders, and the  file from my backup into the now-empty data directory. I tested it by scanning that freshly-copied directory no antivirus alert. This isn\'t good. It should be alerting at this point. I tried renaming the files from *.ldb to *.sst, but that didn\'t help. I even tried renaming them to *.exe, which got Norton to actually scan the files in depth," but still no alerts. I\'m going to continue testing the debug build to see if it behaves as expected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,21,2015-09-07 23:41:32,3.53,,1,,"b'b\' Do you know if your AV ""fixed"" the ""infected"" data directory back when it originally happened?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,22,2015-09-07 23:41:32,6.95,1,,,"b'b"" Well", it certainly broke bitcoin-qt and caused it to crash. It wouldn\'t restart afterwards until I did a -reindex, which promptly broke a second time. Then I wised up and added the exclusion to my antivirus," and a second -reindex worked.  I\'ll try doing a reindex in a bit; I want to start bitcoin-qt normally first and see if it will read the (unobfuscated) files correctly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,23,2015-09-07 23:41:32,26.15,,,1,b'b\' bitcoin-qt happily opened with the unobfuscated files. I tested with an old wallet file I had, and it quickly rescanned the blockchain and updated the balance. (I now have three satoshis more than this morning, yay me!)  Next, I exited bitcoin-qt, opened a command prompt, and ran bitcoin-reindex. This errored out. I repeated, in case this was a one time thing," and it gave me the same error. The message is ""Error opening block database"". I attached a screenshot. ![block database error]url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,24,2015-09-07 23:41:32,24.18,,1,,"b""b' @KyrosKrane can you check your log file for anything that might indicatewhat went wrong", e.g. a stacktrace? On Sunday, September 13,2015," KyrosKrane notifications@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,25,2015-09-07 23:41:32,13.18,,1,,b'b\' I\\\'m slowing down in my old age ... I should have thought of that. file below. The chainstate directory was deleted, as was the index directory under the blocks directory. Under my main bitcoin data dir," there was a new directory named ""database"" with a single file in it named . The contents appear binary.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,26,2015-09-07 23:41:32,420.03,1,,,"b'b"" @KyrosKrane sorry it\'s taken me a bit to respond; I finally have some time to sit down and take a look. I\'m going to add a testcase that simulates a at the layer to see if that will reproduce this failure for me locally. Thanks again for putting in the work to test this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,27,2015-09-07 23:41:32,196.37,,1,,"b'b"" @KyrosKrane dang", can\'t reproduce with a unittest. Any chance that running with the flag yields any more information? e.g.  ? If not, I\'ll have to try to reproduce on my end with a full dataset. As a side-note," I wonder why the behavior you\'re seeing isn\'t reflected in  ...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,28,2015-09-07 23:41:32,273.78,1,,,"b'b"" OK", now this is weird. I ran  , and it worked like a champ. It took almost as long as re-downloading the entire blockchain again; I had to leave it running overnight. But it didn\'t give any errors and it seems to have completed successfully.  The  file is a whopping 335MB uncompressed, so I\'m not going to post that unless someone really needs it. I\'m going to restore my original, unobfuscated data directory, then try running -reindex -debug on it to see if it causes the error.  If that works, I\'ll restore once again," then do just -reindex to see whether I get the error once more.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,29,2015-09-07 23:41:32,99.42,,1,,"b'b"" OK", I\'ve tested this twice now. With my original, unobfuscated data directory, if I do  , it will work successfully.  If I only do  ," it fails with the error I posted above.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,30,2015-09-07 23:41:32,941.78,1,,,"b'b"" @KyrosKrane very odd... the presence of the flag doesn\'t materially affect the reindexing one way or the other on my platform (ubuntu 14.04). Wondering if there\'s anything in this changeset that would explain showing different behavior on a windows system.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,31,2015-09-07 23:41:32,1137.42,,,1,"b""b' Thanks both for the clarifications!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,32,2015-09-07 23:41:32,964.8,,,1,"b""b' Looks good to me apart from the mentioned small things. Will start testing this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,33,2015-09-07 23:41:32,165.18,,,1,"b""b' BTW; seems to work great. I have encountered no problems while testing this"," either with an old chainstate or after a reindex (also tested with pruning).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,34,2015-09-07 23:41:32,948.73,,1,,"b'b"" ACK after squash. I do think we need to mention this concisely in release_: a database built on 0.12+ cannot be used with older versions", but downgrading an existing install is not a problemthird-party tools that parse the UTXO database (I don\'t know of any," I have url  but that only reads the block db) have to be updated""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,35,2015-09-07 23:41:32,6.82,,1,,"b""b' We should also describe"," how to continue having unobfuscated database...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,36,2015-09-07 23:41:32,102.05,,1,,"b'b"" Given that there were several issues with using so far", I\'m wondering, whether something else may be used instead, such as  ," to prevent potential pitfalls altogether?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,37,2015-09-07 23:41:32,289.07,,,1,"b'b"" @paveljanik any new chainstate databases (including those built via  ) will be obfuscated; it\'s not optional. See discussion above. @dexX7 I think that\'s a great suggestion"," and I\'ve been inclined to try something like that. @laanwj are you in favor of making a in lieu of a  ? I think it\'ll make things much less awkward.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,38,2015-09-07 23:41:32,3.13,,1,,"b'b"" @jamesob I\'m in favor of turning it into a  . No reason why it would be a string.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,39,2015-09-07 23:41:32,25.68,,1,,"b'b""   is now a  ", which feels much better. If no one else has any outstanding issues," I\'ll squash.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,40,2015-09-07 23:41:32,20.43,,,1,"b""b' making it a (or equivalently",  ) is a great idea," it avoids the initializer issue completely'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,41,2015-09-07 23:41:32,19.38,,1,,"b""b' Squashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,42,2015-09-07 23:41:32,90.38,1,,,"b'b"" I tested the obfuscation in regtest mode", and started with unobfuscated 0.10 DBs. It works mostly as expected, though I faced a few potential issues:the block index database isn\'t obfuscated (probably not needed?)client  after the first reindexing (this was not reproducible)after that, the DBs were corrupted, potentially due to the freeze + forced shutdown (also not reproducible)the first time I disabled the with an obfuscated  ," the DB was appearingly in a bad state (not not reproducible) I took some notes here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,43,2015-09-07 23:41:32,84.72,,,1,"b""b' @dexX7 thanks for the detailed notes; very helpful.Yeah this is by design", and per discussion in the issue thread.Is that a typo," or do you actually mean they were reproducible issues?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,44,2015-09-07 23:41:32,8.78,1,,,"b""b' Sorry", this was probably a bit confusing! :) I noticed each issue only once, and unfortunally (or fortunally? hehe) I was not able to reproduce them. All subsequent attempts went fine," and I successfully disabled and enabled the multiple times. I also reindexed more than once unobfuscated 0.10 based databases with the patched client.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,45,2015-09-07 23:41:32,8.45,1,,,"b'b"" May be similar to what @KyrosKrane was reporting earlier", though I have to admit I\'m mostly stumped. I thought it may have something to do with  ing  s that haven\'t been written out to leveldb (in the case of the block index db), but after looking at the code I really doubt that\'s the case. If anyone has guesses for likely trouble spots," I\'m glad to push more changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,46,2015-09-07 23:41:32,703.55,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,47,2015-09-07 23:41:32,529.73,,1,,"b'b"" I went over the code a few times and cannot find any changes that would cause it to hang or get in an infinite loop.Also haven\'t been able to reproduce any such behavior.So I\'m just going ahead and merge this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,closed,2015-10-06 15:51:04,634.38,10,22,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,48,2015-09-07 23:41:32,14.78,,1,,"b""b' Can you still reproduce with ? Maybe this should go into a new issue then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,49,2015-09-07 23:41:32,225.68,,1,,"b'b"" @MarcoFalke I used the test build from here:  url File name bitcoin-0.11.99-win64.zip The behavior has now changed. -reindex still crashes as before", but now so does -reindex -debug. This is new. Just to make sure this isn\'t because of some error in my process, I want to document how I got to this point. I started with my normal production environment, which I got by using the Windows x64 setup file. I ran this, completed the installation normally, started bitcoin-qt using the Start menu shortcut, and downloaded the blockchain normally, until it was all updated. Then I completely exited bitcoin-. I downloaded the test build from the links in this thread and unzipped them. Then I just replaced the exe files in my program files directory bitcoin-, , and bitcoin-. I left everything else unchanged. Then I opened a command window, switched to the bitcoin directory under program files, and ran the executable from the command line as above. If it would be helpful, I can upload my data directory somewhere, minus the wallet file. I\'m zipping it up now," and I\'ll see if I can find a file upload site that can take a file that big.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,50,2015-09-07 23:41:32,1057.6,,1,,"b'b"" I\'m throwing up the file into my Dropbox now", if anyone wants it.  This is my bitcoin data directory, with minimal changes (wallet removed, conf file modified to change my RPC username and password). It\'s about 33GB," so it may take a bit of time to finish uploading. You can download it here. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,51,2015-09-07 23:41:32,1359.35,,,1,"b'b"" I really appreciate your effort", @KyrosKrane! Unfortunally, and to be honest, I\'m not sure where to go from here. I saw DB corruption once too, while testing this PR, but I\'m not able to reproduce it. Since you mentioned causes the crashes, I\'m wondering, whether this is also the case with a version without obfuscation? As far as I can see the [nightly build from 2015-10-06]url  should be the latest nightly build before this PR was merged. If this turns out to be the case, then it\'s an issue with the master, and not with the obfuscation," which would be good to know.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6650,closed,-,-,-,10,25,18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,opened,2015-09-10 22:43:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,title,2015-09-10 22:43:19,00:00,,1,,"b""b' Building requires >1GB memory'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,body,2015-09-10 22:43:19,00:00,,1,,"b""b'   CXX  -script_tests.og++: internal compiler error: Killed (program cc1plus) script_tests requires more than 1GB memory to build"," killing a lot of VMs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,1,2015-09-10 22:43:19,340.82,,1,,"b'b"" I don\'t think an ICE is really our concern. I assume clang manages ok?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,2,2015-09-10 22:43:19,2.52,,1,,"b'b"" Hmm? I\'d say it being impossible to build Bitcoin Core by default on many VPSes is our concern. On September 11", 2015 12:24:16 AM EDT," Cory Fields notifications@ wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,3,2015-09-10 22:43:19,2.8,,1,,"b""b' Internal Compiler Errot'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,4,2015-09-10 22:43:19,2.02,,1,,"b'b\' @TheBlueMatt Try using CXXFLAGS=""param ggc-min-expand=1 param ggc-min-heapsize=32768""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,5,2015-09-10 22:43:19,0.7,,1,,"b""b' The ICE in question is OOM killer eating g++. On September 11", 2015 12:29:35 AM EDT," Pieter Wuille notifications@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,6,2015-09-10 22:43:19,1.12,,,1,"b""b' @Luke-Jr: I can get it to build fine (disable-tests)", I just care that we fix the actual issue. On September 11, 2015 12:31:36 AM EDT," Luke-Jr notifications@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,7,2015-09-10 22:43:19,1.53,,,1,"b'b"" I\'d be concerned if no compiler could build on that VPS. However", I\'d be willing to bet that it\'s just a matter of an inefficient gcc version. If clang dies the same way," I\'ll buy you a beer this weekend :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,8,2015-09-10 22:43:19,0.52,,1,,"b""b' @TheBlueMatt Memory use is not an issue"," if it correctly builds with the appropriate CXXFLAGS... IMO'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,9,2015-09-10 22:43:19,3.32,,,1,"b'b\' This is a default gcc on a relatively recent Debian. I really don\\\'t think the response to ""I can\\\'t build Bitcoin Core on a vps with 1GB of memory with default parameters"" should be ""oh"," but if you set these flags you can!"" On September 11", 2015 12:34:57 AM EDT, Cory Fields notifications@ wrote:\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,10,2015-09-10 22:43:19,465.02,,1,,"b'b"" 0.11 does require more RAM and in my experience doesn\'t help. 0.10 could be built on systems with 512MB of RAM (with and without  ). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,11,2015-09-10 22:43:19,20.4,,1,,"b'b\' Any instrumentation on why script_test takes so much memory?  Would prefer to discern ""why"" before taking any action. In general we should be able to build Bitcoin Core on a 1GB VPS.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,12,2015-09-10 22:43:19,0.83,1,,,"b'b"" Y\'all being overly pedantic.  Matt identified a usability problem: User obtains and attempts to compile the software with normal instructions on a common and reasonable platform type", and it crashes.  If you want to suggest that the docs should have instructions with low mem cflags or whatnot, OKAY, but without that it doesn\'t stop being an issue because just us experts can work around it. Our memory usage is kind of obnoxious during compile time IMO," and if we could do some minor tweaks to reduce the peak that would be nice too-but at the very least we should provide some instructions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,13,2015-09-10 22:43:19,722.13,1,,,"b'b"" This is actually known and documented: url  (feel free to add the recommendation for low-memory build flags tho!) I would have expected that no longer using boost::spirit (for JSON) and boost::asio (for RPC) would reduce compilation memory usage unfortunate to hear that it became worse.  Anyhow: cross compilation and pseudo-static compilation is extremely easy with the depends system"," I\'d recommend using that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,closed,2015-09-18 00:47:02,123.72,2,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,14,2015-09-10 22:43:19,9.4,,1,,"b""b' Oh wait", the compilation of that file _uses_ more than 1GB of memory?Ok, reopening," that is definitly not good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,reopened,2015-09-18 00:56:26,9.4,2,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,15,2015-09-10 22:43:19,1130.37,,1,,"b""b' Yes", the VPS in question has a total of 1.5GB memory (1GB ram + .5 swap)," and nothing else of note was running at the time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,16,2015-09-10 22:43:19,967.75,1,,,"b""b' I measured using gcc 4.8.4 (64 bit): Top 10 memory usage during build:  source | elapsed | maxresident (kB)  1.  0:36.58 | 1248524  2.  0:24.24 | 964136  3.  0:22.11 | 896096  4.  0:19.44 | 859708  5.  0:18.85 | 813836  6.  0:14.16 | 727956  7.  0:13.48 | 719388  8.  0:12.42 | 697660  9.  0:11.26 | 680500  10.  0:11.44 | 666548 | Will try with clang some other time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,17,2015-09-10 22:43:19,549.18,1,,,"b""b' Same information", but for clang 3.6.0 (also 64-bit):  source | elapsed | maxresident  1  0:28.34 | 723960  2  0:15.93 | 522068  3  0:19.06 | 517080  4  0:14.36 | 428924  5  0:11.53 | 357224  6  0:10.16 | 356792  7  0:12.73 | 342376  8  0:08.79 | 333660  9  0:08.21 | 326100  10  0:09.19 | 322376 | The contenders are the (mostly) same," although it is faster and uses significantly less memory in all cases. So we should add a recommendation to use clang on lower-memory systems.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,18,2015-09-10 22:43:19,661.25,1,,,"b'b\' I\\\'m not sure why it is this ""bad"". and have huge complex implementation files", but of you\\\'d say it isn\\\'t that bad just 1016 lines. Possibly it has to do with embedding the test data as includes:  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,19,2015-09-10 22:43:19,1017.33,1,,,"b'b"" @laanwj I suspect you\'re right about the test data. Maybe older gcc re-reads that each time it\'s needed and balloons in size as a result. @TheBlueMatt Could you test with url  and see if that helps? That moves the test data into cpps instead.Edit: Whoops. Here\'s one that actually works: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,20,2015-09-10 22:43:19,1400.55,1,,,"b""b' Hmm", the VPS has since been upgraded to have more memory (yay pruning means I get more memory and less disk space...) and doesnt kill script_tests anymore :( What may have been happening is the host may have been retroactively killing processes after some other process had casued the VM to hit some high memory bar. In any case, it is just Debian Jessie," so gcc 4.9.2-10.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,21,2015-09-10 22:43:19,1401.57,1,,,"b""b' Still", main max resident of 1.2GB will probably not build on most VPSes today, but sadly thats a harder one to fix," and probably a very long-term thing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,22,2015-09-10 22:43:19,1403.65,,1,,"b""b' Rather than recommending clang (which would send more hosts into a less tested and potentially consensus inconsistent config) we could recommend compiler flags that reduce memory usage.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,23,2015-09-10 22:43:19,205.87,,1,,"b'b"" I ran a comparison test yesterday measuring the peak memory consumption of the Bash shell session in which I was working. gcc 835 MB", clang 823 MB (32-bit Raspbian OS). Not a big saving. (I don\'t know how @laanwj measured RAM consumption, otherwise I would have used his approach). People low on RAM could use binary builds if they don\'t have enough RAM to build, or build without tests. Not everyone should be able to build from source on their system (or, in most hosting environments, they can upsize their RAM, build," and then downsize?).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,24,2015-09-10 22:43:19,396.07,,,1,"b'b"" @gmaxwell Possibly both we\'re using clang for OSX builds already"," so it\'s not that much of an unknown. I\'ve switched to clang for my run-of-the-mill builds on Linux to save time. @cfields The solution in url  to use the directive is also quite nice create a file blob.S: which can just be compiled with along with the rest of the source files. This avoids any kind of conversion. @unsystemizer see url  In general I recommend to use cross-compiling to build for resource-constrained systems. This a) avoids having a compiler toolchain on the target b) is much faster c) Bitcoin Core\'s depends system makes this easy.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,25,2015-09-10 22:43:19,216.67,,1,,"b'b"" After tripping up on this initially", I succeeded in applying Luke-jr\'sworkaround by giving the CXXFLAGS at configure time: On a Raspberry Pi 2 building with a single core: The memory use seemed to stay below 500 MB throughout," but I didn\'t measurethat precisely.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,26,2015-09-10 22:43:19,821.8,1,,,"b""b' Also having trouble compiling  on a Raspberry Pi. Perhaps this file can be split in two?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,27,2015-09-10 22:43:19,556.3,,1,,"b""b' @sipa noticed that with recent compilers (gcc 5.3.1 in his case)", enabling (link time optimization) reduced compile-time memory usage for  to 850 MiB," without unduly raising link-time memory requirements.This may be another useful suggestion for limited-memory compiling.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,28,2015-09-10 22:43:19,26.62,1,,,"b""b' On gcc 4.9.2", after #9260, objects which fail to build on a kvm host with 1GB of memory (with wallet," no GUI):  libbitcoin_server_a-init.o libbitcoin_server_a-validation.o libbitcoin_server_a-net_processing.o -rawtransaction.o -rpcdump.o -rpcwallet.o -wallet.o'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,29,2015-09-10 22:43:19,152.32,,1,,"b""b' Note that the above list is the same on gcc 6.2.0.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,30,2015-09-10 22:43:19,178.8,1,,,"b'b""  This is in contrast to: before #9260? So splitting up main makes this *worse*? That\'s not what I would have expected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,31,2015-09-10 22:43:19,192.97,,1,,"b'b"" I\'m sure its better"," but not better enough that both halves dont both end up needing >1GB.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,32,2015-09-10 22:43:19,810.17,,1,,"b""b' I wonder how much less memory it will take once we start eliminating boost in earnest?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,33,2015-09-10 22:43:19,1009.62,,1,,"b""b' Considering net_processing only took >1GB of memory after I re-added "," probably a lot.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,34,2015-09-10 22:43:19,514.67,,1,,"b""b' I am also unable to build on a 1GB VPS running Ubuntu 18.04. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,35,2015-09-10 22:43:19,940.3,,1,,"b'b"" On a related note", as I\'m compiling on a Nano Pi with 1 GB RAM and 4 cores, I initially tried  , but there are a number of files where that eats into swap and everything grinds to a halt. seems the only way to go, but this seems wasteful for the many files that don\'t require much RAM.  I did use  . Is there a way to make the compiler use less than e.g. 200 MB RAM per process? Or perhaps it\'s possible to exclude a specific list of files, run with (or  )," and then do those more challenging files with  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,36,2015-09-10 22:43:19,1019.07,1,,,"b'b"" Sorry to say", but 1GB of RAM and 4 cores is not useful for compilation. In my experience reserving memory for VMs, 1-1.5GB per -jX parallelism works, more is pushing it," it can be done with lots of swap space but you won\'t win time! For ARM I (still) strongly recommend to use cross-compilation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,37,2015-09-10 22:43:19,1046.63,,,1,"b'b"" I\'m looking at [Armian builds]url  since I might as well just build the rest of the OS and sync the chain along with cross compiling bitcoind :-)  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,38,2015-09-10 22:43:19,1104.97,,1,,"b'b"" Considering that uses a lot less memory compared to gcc"," why don\'t we mention as an alternative in url Should I create a pull for this?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,39,2015-09-10 22:43:19,983.07,,1,,"b""b' @MarcoFalke:  @gmaxwell said above: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,40,2015-09-10 22:43:19,1005.2,1,,,"b'b"" well if clang", a compiler many, many people use, generates consensus incompatible code, bitcoin has a huge problem.  (to be clear, no," I don\'t think this is an issue worrying about here let\'s focus on finding configurations that reduce memory usage)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,41,2015-09-10 22:43:19,1012.98,1,,,"b'b"" To be honest", I myself use clang (along with ccache) but that\'s only because all my work involves running in regtest," so I don\'t have to worry about consensus compatibility.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,42,2015-09-10 22:43:19,1015.5,,,1,"b'b"" I mean", it might have been a good argument in 2012, but at this point, many platforms are clang-only (MacOSX, FreeBSD, OpenBSD," at least). There\'s nothing that binds bitcoin to gcc specifically.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,43,2015-09-10 22:43:19,887.33,,1,,"b""b' Just wanted to leave an update here", that building Bitcoin Core v0.16.2 is possible\\xc2\\xb9 on Raspberry Pi Zero W," which has 512MB RAM + default of 100MB SWAP.   \\xc2\\xb9 It did take a **very** long time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,44,2015-09-10 22:43:19,924.2,,,1,"b'b"" @meeDamian hahaha nice", that\'s quite a thing," building with less than a GB RAM+SWAP""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6658,open,-,-,-,14,25,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,opened,2015-09-19 10:13:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,title,2015-09-19 10:13:04,00:00,,1,,"b""b' libbitcoinconsensus issue with  and spongycastle'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,body,2015-09-19 10:13:04,00:00,,1,,"b'b"" In before: this is all new territory for me", so I\'ll just describe what I think that might be relevant. I\'m [experimenting]url  with BitcoinJ and libbitcoinconsensus. When using the compiled libbitcoinconsensus of the 0.11  build, it seems to work as expected, and the BitcoinJ tests ( ) pass.  However, when I use a locally build library, based on the current master (d5d1d2e65a1c3b91452d2428410f701bca1e53cc), then there seems to be some kind of conflict, and the tests break, followed by a core dump: Full error report: url  This also happens, when I use the 0.10 branch. BitcoinJ currently uses [Spongy Castle 1.51]url  which is a stripped down version of Bouncy Castle. I assume this might be related to the OpenSSL version I currently use: On: If this is indeed related to OpenSSL, and basically out of scope of Bitcoin Core, then I\'m wondering, whether there might be a check during the build process," to reject incompatible versions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,1,2015-09-19 10:13:04,991.43,,1,,"b'b"" It\'s possible that the libs conflict"," but I don\'t know enough about  to speculate about how its symbols are resolved.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,2,2015-09-19 10:13:04,360.82,,1,,"b""b' The relevant difference between the release version of libbitcoinconsensus and your locally-built one is probably that the former statically links openssl", and the locally-built one dynamically links one on your system (you could check this using  ). Likely this gives a symbol collision with one of the libraries used by java possibly it uses another version of libcrypto internally. This can be avoided by using the depends system: This will create a fully self-contained libconsensus," as from the release.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,3,2015-09-19 10:13:04,37.87,,,1,"b'b"" Ahh"," I see. is indeed listed in the dynamic section of the locally build version: Whereby it\'s missing in the release version: Thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,closed,2015-09-22 09:23:11,1390.12,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,4,2015-09-19 10:13:04,623.53,,1,,"b'b"" Eh"," you shouldn\'t _need_ to static link it... so IMO keep this open even if that workaround helps.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,5,2015-09-19 10:13:04,967.25,,1,,"b""b' Sure @luke-jr: do you have an idea how to tackle this"," or do you need additional information from me?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,reopened,2015-09-24 11:53:58,150.78,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,6,2015-09-19 10:13:04,47.95,,1,,"b'b"" I\'d say this is low priority as a) we know how to mitigate it b) this will go away once secp256k1 is used for verification""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,7,2015-09-19 10:13:04,706.72,,1,,"b""b' Can be closed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,8,2015-09-19 10:13:04,59.17,,1,,"b'b"" @dcousens Well"," it\'s not fixed ... yet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,9,2015-09-19 10:13:04,1.52,,1,,"b'b"" @luke-jr I\'d say it is; am I missing something?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,10,2015-09-19 10:13:04,175.32,,1,,"b'b"" You mean with in master with libsecp256k1", libconsensus no longer  OpenSSL? I suppose if that\'s true, then this specific one is fixed," but probably it will just pop up again when someone wants to use libsecp256k1 themselves...?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,11,2015-09-19 10:13:04,208.57,,1,,"b""b' Yes", in master," libconsensus no longer links with OpenSSL.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,12,2015-09-19 10:13:04,415.15,,1,,"b'b"" The initial issue as described in the first post does indeed not occure anymore. I\'m going to close this and leave it to a maintainer to reopen"," if needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,closed,2015-11-18 14:48:21,174.38,0,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,13,2015-09-19 10:13:04,176.07,,,1,"b'b"" @sipa for reference", this is what I was referring to when requesting refcounting for secp256k1 -init (thanks for adding that," btw). It\'d be great to verify that this scenario works as intended.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6699,closed,-,-,-,0,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,opened,2015-09-22 07:26:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,title,2015-09-22 07:26:39,00:00,,1,,"b""b' Fix spelling of Qt'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,body,2015-09-22 07:26:39,00:00,,1,,"b""b' QT is considered a typo"," Qt is the proper term.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,1,2015-09-22 07:26:39,20.27,,1,,"b'b"" IIrc you\'d need to update the translations via Transifex"," not going to work if you commit here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,2,2015-09-22 07:26:39,5.35,1,,,"b""b' @MarcoFalke is right. The changes are useless. They need to be made at url  Also please use url  for trivial non-code changes to avoid trivial PR overflow in the main repository.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,3,2015-09-22 07:26:39,11.68,1,,,"b""b' Sorry"," restored the files to the previous state.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,4,2015-09-22 07:26:39,2.08,,,1,"b""b' @diegoviola: mind closing the PR and reopening on url We should really try to reduce such non-benefit PRs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,5,2015-09-22 07:26:39,1.22,,1,,"b""b' @jonasschnelli OK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,closed,2015-09-22 08:07:17,40.63,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,reopened,2015-09-22 08:22:18,15.02,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,closed,2015-09-22 08:33:18,11.0,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6709,closed,-,-,-,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,opened,2015-10-02 00:43:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,title,2015-10-02 00:43:22,00:00,,1,,"b'b\' Net: Remove ""Address refresh broadcast"" logic.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,body,2015-10-02 00:43:22,00:00,,1,,"b""b' addrKnown is now a CRollingBloomFilter which forgets about entries every 5000 inserts'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,1,2015-10-02 00:43:22,40.73,1,,,"b""b' This seems like it would degrade service on networks like testnet with a low level of addresses / address traffic"," where the local address would be broadcast far less frequently (versus current code). A time based rotation (clearing) is not equivalent to a traffic based rotation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,2,2015-10-02 00:43:22,7.15,,1,,"b""b' @jgarzik The local address is broadcast to all outbound connected peers on connect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,3,2015-10-02 00:43:22,618.03,,,1,"b'b"" Agree with @jgarzik. I\'m not convinced that this is a good idea", specially rebroadcasting our own address once in a while is useful," I don\'t think we should rely on the implementation details of the rolling bloom filter to do this as a side-effect.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,closed,2015-12-03 11:49:17,665.92,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,4,2015-10-02 00:43:22,26.95,,1,,"b'b"" I guess I\'ll remove this part from #7125 as well then. EDIT: #7125 only removes the wipe-the-filter logic"," not the rebroadcast logic.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,5,2015-10-02 00:43:22,16.63,1,,,"b'b"" @sipa Well unless you think our reasoning is wrong? Is there some privacy compromise here?(at some point we might replace the rolling bloom filters with something else again", and we may have forgotten the decision to remove this," hence I\'m somewhat in favor of doing it explicitly)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,reopened,2015-12-03 12:37:02,47.75,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,6,2015-10-02 00:43:22,20.08,,1,,"b'b"" I guess there are a few ways forward:Keep as-is", drop the entire filter every 24 hours + rebroadcast.Don\'t drop the filter, but still rebroadcast your own address periodically in a forceful way (bypassing the filter).Don\'t drop the filter, but still rebroadcast periodically (subject to the filter, which means no rebroadcast if there was not enough noise to hide the data in).This PR (no drop," no rebroadcast). I think I prefer 3.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,7,2015-10-02 00:43:22,757.9,,1,,"b""b' @sipa how about randomly settings bits in the filter to 0 instead of completely clearing it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,closed,2015-12-08 01:09:17,752.25,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6745,closed,-,-,-,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,opened,2015-10-06 01:20:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,title,2015-10-06 01:20:29,00:00,,,1,"b""b' [univalue] Different get_int() behavior versus json_spirit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,body,2015-10-06 01:20:29,00:00,,,1,"b'b\' IRC:""listunspent 0 9999999999 [stuff]  fails because 9999999999 is too big."" Both json_spirit and univalue call .get_int() from listunspent()", and .get_int() method is defined to return \\\'int\\\' in both cases. It appears the out-of-range behavior is different for univalue, which is noticeable via RPC user interface.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,1,2015-10-06 01:20:29,23.27,,1,,"b""b' A patch: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,2,2015-10-06 01:20:29,345.23,1,,,b'b\' How does json_spirit handle out of range integeres?I\\\'d say there is only one sane way to handle it: reject the input? Yeah," that screams ""too big for 32 bit signed integer"" to me.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,3,2015-10-06 01:20:29,2.6,,1,,"b""b' static_cast will just _truncate_ the number to 32 bit"," NACK on that We should however document the new behavior.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,4,2015-10-06 01:20:29,21.67,,1,,"b""b' Agree with @laanwj. What about if UniValue would throw an exception in case of a detected out-of-range int?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,5,2015-10-06 01:20:29,23.57,,1,,"b'b"" @jonasschnelli That\'s what it does now"," and is tested behavior. And the attached patch disables it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,6,2015-10-06 01:20:29,909.28,,1,,"b""b' @laanwj The patch precisely mimics json_spirit behavior", thus restoring the old RPC interface behavior. The user (@gmaxwell) complained about the exception being thrown, as that causes a trickle down impact of making a previously-working RPC call now not work. If we are to keep the new behavior, which _is cleaner and more type specific_, every .get_int() must be audited. In theory the current get_int() call inside the RPC function is wrong," and an audit will fix that and any others.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,7,2015-10-06 01:20:29,137.85,1,,,b'b\' The old situation was clearly wrong to me large numbers should not be silently ignored, let alone silently ANDed with  . This was a much larger risk than just rejecting the value. @gmaxwell was lucky that his arbitrary big value mapped to another large number in 32 bit integers. It could just as well have mapped to 1," or even -1 instead. The result would be much more ""WTF"" than a \\\'number too large\\\' error. The error signals a clear wrong input. Yes", this may mean people have to change cases where this happens in their interface, but this may help them isolate pesky hidden bugs.  The new behavior is more strict but not _wrong_ in any way. Working around it by restoring the previous broken behavior is not acceptable to me. If this means auditing uses of get_int, that is what should be done (although as said, any \\\'failure scenario\\\' here is preferable to silently chopping off numbers).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,8,2015-10-06 01:20:29,5.3,,1,,"b'b"" NACK on restoring the broken behaviour.Agreed with @laanwj that just because it might break an existing API", doesn\'t mean we should revert [the behaviour]. @jgarzik if you feel strongly,"  maybe it should be noted in a ? This [xkcd]url  comes to mind.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,closed,2015-10-20 09:00:06,459.62,2,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,9,2015-10-06 01:20:29,637.98,,1,,"b""b' This issue is not resolved.  Do not close until it is solved / release noted / audited.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,reopened,2015-10-20 12:27:14,207.13,2,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,10,2015-10-06 01:20:29,28.6,1,,,"b'b"" I don\'t regard it as an issue. You\'re providing a large number where a 32 bit integer is parsed. The only sane action is to reject the input. Truncating was extremely ill-advised. This is an improvement not a reversion!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,11,2015-10-06 01:20:29,40.73,,1,,"b""b' (pasting from IRC for the record)The issue isuser visible breakage occurredit was noticed in the field by usersother get_int() calls should be checked for further unexpected behavior changes I agree it is an improvement but we cannot simply assume it is a bug-free improvement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,12,2015-10-06 01:20:29,43.0,,1,,"b""b' NACK. I agree with @laanwj '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,13,2015-10-06 01:20:29,45.53,,1,,"b""b' @gmaxwell What is your expected behaviour here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,14,2015-10-06 01:20:29,49.88,,,1,"b'b"" Folks", this is an issue not a PR.  There is nothing to NAK :) This issue is open until the user visible breakage is fully analyzed and documented ,which I\'ve assigned to myself.  All .get_int() calls should be examined, not just this one. The new behavior throws an exception, versus prior behavior of returning a range bound number and _not_ throw an exception.  This new behavior is more correct," but does produce user visible interface changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,15,2015-10-06 01:20:29,240.48,1,,,b'b\' We have APIs where there is no way to provide an \\\'infinite\\\' but where one is really expected.  Examples are the depths that listunspent and list transaction go back.  The positional arguments _require_ you to provide something in these places, even when you really just want the default. As far as I can tell, what just about everyone does is mashes the button to get a really big good-as-infinite value. So far so good.  They bake these values into their command-lines and scripts etc. And the new behavior now fails with these values that worked before-just because they hit 10 nines instead of 9. For most of these things," I think saturating is appropriate. Yes-it\\\'s not the most ""type safe"" behavior (though a saturating integer is a type that these could be defined as!)"," but JSON is not type safe. This was also the previously effective behavior.  Consequence of not doing something here is that the interfaces becomes harder to use-because now you have the mental load of the largest permitted value. Consequence of saturating is that users who\\\'ve become confused and sent in some totally crazy wrong field and up getting the ""effectively infinite"" default behavior instead of what they really wanted.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,16,2015-10-06 01:20:29,330.68,,,1,"b'b"" I think saturation would be good in this specific case", as it concerns a limit (and max is more-or-less infinite). It should definitely not be the default behavior of  . But adding a (@gmaxwell\'s idea) and using it in listunspent would be a valid option. To be clear," the previous behavior was _not_ saturation: The saturating parser would have to actually detect an overflow (or underflow) and  return INT_MIN or INT_MAX respectively. I remember implementing some of this in but not sure what\'s done with it... think it just returns a generic error""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6765,open,-,-,-,4,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,opened,2015-10-11 07:16:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,title,2015-10-11 07:16:32,00:00,,1,,"b""b' [tests] Add basic coverage reporting for RPC tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,body,2015-10-11 07:16:32,00:00,,1,,"b'b"" After the missed-unobfuscation snafu of #6777", I realized that we don\'t have comprehensive coverage of the RPC commands, nor do we have a method of determining which RPC calls are or aren\'t covered. I\'d like to start writing more RPC tests, but first I\'d like to have an easy way of figuring out which tests to write. In this PR I\'ve provided a basic method of getting a binary coverage report for each RPC command, which should be useful to guide adding tests until we have full coverage of the RPC interface. After we\'re exercising every RPC command, we can possibly gate builds on that full-coverage invariant using a mechanism like this," if that\'s preferable. The report looks as follows:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,1,2015-10-11 07:16:32,48.77,,1,,"b'b"" Is it required to have the coverage tempdir? Couldn\'t this be done in memory without disk io?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,2,2015-10-11 07:16:32,452.68,,1,,"b'b"" @MarcoFalke I can\'t see how that would work given that we call the individual test scripts [in separate subprocesses]url  but agree that would be preferable if possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,3,2015-10-11 07:16:32,76.18,,1,,"b""b' Yargh... build failure due to url  Going to try rerunning.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,closed,2015-10-12 16:54:32,578.0,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,reopened,2015-10-12 16:54:34,0.03,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,4,2015-10-11 07:16:32,1012.9,,1,,"b""b' Concept ACK"," although there seems to be overlap (at least in purpose) with #6813 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,5,2015-10-11 07:16:32,504.5,,1,,"b""b' Merge conflict resolved here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,6,2015-10-11 07:16:32,69.63,,,1,"b""b' Rebased (thanks again @MarcoFalke).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,7,2015-10-11 07:16:32,48.73,,,1,"b'b"" @laanwj @dexX7 how are you two feeling about this PR? I still think it\'d be useful"," but if you have reservations I\'m happy to close it out for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,8,2015-10-11 07:16:32,1062.1,1,,,"b'b"" I personally have no preference to be honest. I think it could be handy", if new users dive into Bitcoin Core and start with adding additional tests, and I also like the cleanup and documentation. Then again, it\'s unclear," whether users really are going to use it. Mini-ACK from my side.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,9,2015-10-11 07:16:32,2.33,1,,,"b""b' @dexX7 yeah"," apologies for conflating some of the cleanup & doc with this feature. Would this PR be more useful if we enabled it by default for travis builds?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,10,2015-10-11 07:16:32,2.08,,,1,"b'b"" That\'s a very interesting idea!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,11,2015-10-11 07:16:32,46.47,,,1,"b""b' The Travis build now reports coverage by default: ![selection_041]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,12,2015-10-11 07:16:32,0.08,,,1,"b'b"" That\'s pretty cool imho: url  edit: you beat me"," hehe. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,13,2015-10-11 07:16:32,116.92,,1,,"b""b' The overview of untested RPC commands is confronting. We should definitely have it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,14,2015-10-11 07:16:32,8.03,1,,,"b""b' Nit: Would it be hard to unfiddle into two commits?CleanupNew feature Regardless of that: Concept ACK"," I think we could make it fail as soon as all commands are covered.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,15,2015-10-11 07:16:32,1366.42,,1,,"b'b"" @MarcoFalke", going forward I\'ll certainly be more diligent about separating cleanup changes from new functionality -unfortunately I think in this case it\'ll be tough to tease out the distinction between cleanup and coverage here, as there isn\'t a clean way to do it in terms of git chunks, so I\'d have to basically rewrite the PR with that separation in mind. This is test code, and so the commit separability doesn\'t seem to me to be as important as in other parts of the system (though I understand in general this is what we should aim for). That said," if you think it\'s important I\'d be happy to try.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,16,2015-10-11 07:16:32,57.37,,,1,"b'b"" Aside from any further feedback"," I\'m happy with where this is.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,17,2015-10-11 07:16:32,159.57,,1,,"b""b' Ping here -any further feedback?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,18,2015-10-11 07:16:32,25.88,,1,,"b""b' utACK  37f4481'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,19,2015-10-11 07:16:32,1372.57,,1,,"b""b' ACK after squashing into one commit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,20,2015-10-11 07:16:32,39.6,,1,,"b""b' reACK  b5cbd39'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,21,2015-10-11 07:16:32,720.37,,1,,"b""b' Squashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,closed,2015-11-12 07:22:38,868.07,3,14,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6804,closed,-,-,-,3,14,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,opened,2015-10-23 02:52:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,title,2015-10-23 02:52:22,00:00,,1,,"b""b' Fix pre-push-hook regexes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,body,2015-10-23 02:52:22,00:00,,1,,"b""b' Seems I was very out of it and wrote some backwards regexes. Shouldnt actually matter at all"," but might as well fix them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,closed,2015-10-23 02:53:56,1.57,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,reopened,2015-10-23 09:06:05,372.15,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,1,2015-10-23 02:52:22,374.08,,1,,"b""b' Oh"," and gotta whitelist two commits now that Pieter revoked his key (sigs are still checked on those)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,2,2015-10-23 02:52:22,9.58,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,3,2015-10-23 02:52:22,610.5,,1,,"b""b' ut ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,4,2015-10-23 02:52:22,281.77,,1,,"b'b"" Added yet another commit which adds Pieter\'s new PGP key. The commit is signed by one of my keys"," and the PGP key will be signed later this evening (though it is already signed by Greg).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,closed,2015-10-28 01:22:09,976.07,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6875,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,opened,2015-10-29 15:07:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,title,2015-10-29 15:07:50,00:00,,1,,"b""b' LevelDB Fixes and Enhancements'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,1,2015-10-29 15:07:50,9.02,,1,,"b'b"" @jgarzik please advise since you didn\'t originate this request.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,2,2015-10-29 15:07:50,27.15,,,1,"b""b' Would be nice to have a bench utility to compare this PR agains the leveldb version.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,3,2015-10-29 15:07:50,23.57,,1,,"b'b"" I intentionally avoided creating a pull request because we don\'t yet know if sqlite has adequate performance for our needs. Based on preliminary @jmcorgan input", it sounds like sqlite is too slow. Recommendation:  Close pull request," but request @jmcorgan paste his test results here for issue tracking purposes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,closed,2015-10-29 16:09:46,61.93,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,reopened,2015-10-29 16:09:49,0.05,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,closed,2015-10-29 16:09:59,0.17,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,4,2015-10-29 15:07:50,15.83,,1,,"b'b"" My tests were entirely informal and subjective.  We\'d actually have to define a benchmark that could be part of an A/B test in order for the results to be interpreted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,5,2015-10-29 15:07:50,60.12,,,1,"b'b\' @jmcorgan Informal is still informative :)  ""It took Y hours to reindex with sqlite""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,6,2015-10-29 15:07:50,234.62,,1,,"b""b' @LordOfTheCoin was this PR in working order such that the above could easily be tested?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,7,2015-10-29 15:07:50,360.22,,1,,"b""b' Why not use url  ? Its insanely fast and opens up options for the future"," ie. multi-threads in multiple processes. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,8,2015-10-29 15:07:50,798.83,,,1,"b'b"" Tried on Win 10", Compiled and Ran," Didn\'t Thoroughly Test Though""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,9,2015-10-29 15:07:50,817.52,,1,,"b'b"" @jgarzik I\'ll see if I can provide that information ~~soon~~.Is there any specific metrics you\'d prefer?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,10,2015-10-29 15:07:50,863.88,,1,,b'b\' @dcousens The first metric is initial sync time," which is sometimes ""approximated"" with a reindex.  A/B testing for current master leveldb versus sqlite.  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,11,2015-10-29 15:07:50,876.47,,1,,"b""b' Also"," running with -debug=bench will give a breakdown of time per activity.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,12,2015-10-29 15:07:50,1022.48,,1,,"b'b"" BTW"," AeroSpike doesn\'t have a c++ implementation""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,13,2015-10-29 15:07:50,1109.8,,1,,"b""b' I think the client library doesnt exist in C++"," but should easily support it.  Question is what our aim here is? Speed? Future in-ram processing ideas? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,14,2015-10-29 15:07:50,1253.2,,,1,"b""b' @LordOfTheCoin C++ works just fine with C libraries. @cryptomarc speed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,15,2015-10-29 15:07:50,1320.07,,1,,"b'b"" To my understanding Aerospike pretty much kills in all the benchmark tests done vs other No-SQL db\'s. I will try to run a couple of tests myself and post them here. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,16,2015-10-29 15:07:50,1.87,,1,,"b""b' Aerospike is AGPL...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,17,2015-10-29 15:07:50,1237.62,,1,,"b'b"" Its\' AGPL", compatable with GPL," but with MIT?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,18,2015-10-29 15:07:50,1387.05,,1,,"b""b' Using an AGPL library in Bitcoin Core would require Bitcoin Core itself tobe licensed under AGPL or compatible terms. Even if we would want to do that", it would be nearly impossible toaccomplish. Every contributor in the past would need to give consent aboutthis," as they hold copyright over the code they wrote.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,19,2015-10-29 15:07:50,2.58,,1,,"b""b' There are about ~ 6000 Contributors"," so I get it....'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,20,2015-10-29 15:07:50,75.5,1,,,"b""b' Its a shame"," and something I missed out when looking at Aerospike. Shame because it seems to be much on par with some interesting functionality that we could utilize in the future for Bitcoin. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,21,2015-10-29 15:07:50,78.75,,1,,"b'b"" I really don\'t think this database should be or needs to be distributed with the core source (as leveldb currently is).  There are no licensing issues when linking against an external library.  This should be an external dependency"," whose correctness can be verified using UTXO commitment hashes as I describe here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,22,2015-10-29 15:07:50,84.73,,1,,"b'b"" Linking against a library is usually considered a derivative work", inparticular when the library\'s .h file are under the same license. Including the source code of our database engine inside the source tree ornot is an artifact of using git subtrees. Even if we didn\'t, we would stillneed to specify an exact version to prevent bugfixes that break consensusby users who link against different versions. Using subtree or not is notrelevant in this discussion. UTXO commitments do not fix this," as they need a different trust model(miners not committing to incorrect data).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,23,2015-10-29 15:07:50,98.15,1,,,"b'b"" That\'s just not true regarding derivative works. Bitcoin links against e.g. boost and is not a derivative of boost.  Its header files are distributed separately.  It\'s easy to specify specific versions of external dependencies. Verifying correctness of database operation is not a trust model change.  I\'m thinking of it mostly in an advisory  notify node operators that something has gone horribly wrong.  Note that the UTXO commitment scheme I describe doesn\'t actually require those hashes to be committed to in a block.  Nodes can locally compute them simply to verify their own correctness of operation (and not communicate them at all). So one has potentially 3 sources of these hashes: computed during block ingest", computed by database query," and committed in the block.  Nodes that detect such an error could e.g. refuse to mine blocks (at the discretion of the operator -obviously blindly trusting the hash in the block IS a trust model change).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,24,2015-10-29 15:07:50,150.2,,1,,"b""b' @mcelrath In my understanding", Bitcoin binaries are a derivative work of the Boost headers, and if linked statically, a derivative work of the Boost C++ code too. If we were to make Bitcoin Core depend on an AGPL library, we could not distribute binaries without also providing the Bitcoin Core source code under AGPL-compatible licensing. If the AGPL library would be an optional dependency, things are potentially different we could ship Bitcoin Core binaries that do not need the library for correct operation," but load them at runtime if available in that case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6904,closed,-,-,-,2,19,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,opened,2015-10-29 18:28:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,title,2015-10-29 18:28:32,00:00,,1,,"b""b' Use constants and minor fixes by luke-jr'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,body,2015-10-29 18:28:32,00:00,1,,,"b'b"" Not sure if #6349 finds its way out of rebase hell anytime soon. Those three commits can be merged without rebase (I preserved the commit hashes) They already got some sort of code review as part of #6349 so it\'s better to merge them without rebase"," imo.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,closed,2015-10-29 18:52:48,24.27,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,1,2015-10-29 18:28:32,53.77,,,1,"b""b' I think this is a good idea.utACK. Miner and Wallet init help strings could also slowly migrate into wallet/ miner/ classes. I once did this for the wallet", but it requires rebase and maybe more small," reviewable PRs: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,reopened,2015-10-29 23:25:20,272.53,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,2,2015-10-29 18:28:32,633.08,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,3,2015-10-29 18:28:32,276.8,,1,,"b""b' utACK besides my .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,4,2015-10-29 18:28:32,7.82,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,closed,2015-11-04 10:45:52,680.53,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,6905,closed,-,-,-,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,opened,2015-11-14 16:39:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,title,2015-11-14 16:39:52,00:00,,1,,"b""b' Master will not compile on Windows7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,body,2015-11-14 16:39:52,00:00,,1,,"b'b\' Failing to compile.  I can get it to compile by doing: -#include """"+#include ""../"" It\\\'s obviously not finding the header"," but not sure if that\\\'s really where it should be fixed  make[3]: Leaving directory  /-\\\'gcc -I./ -g -O2 -Wall -Wextra -Wno-unused-function -c  -o gen_context.o:10:31: fatal error: : No such file or directory #include """"           ^compilation terminated.make[3]: **\\\\* [gen_context.o] Error 1make[3]: Leaving directory  /-\\\'make[1]: **\\\\* [all-recursive] Error 1make[1]: Leaving directory \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,1,2015-11-14 16:39:52,106.93,1,,,"b'b"" This is strange... It looks like the  \'s pwd is in  ...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,2,2015-11-14 16:39:52,46.97,,1,,"b""b' What do you use? Please show us  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,3,2015-11-14 16:39:52,21.72,,1,,"b""b' $ gcc version (i686-posix-dwarf-rev1", Built by MinGW-W64 project) 4.9.2Copyright (C) 2014 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. same as i always use... On 15/11/2015 11:14 AM," paveljanik wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,4,2015-11-14 16:39:52,110.1,,1,,"b""b' Can you please run In and paste result (especially lines starting with and following)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,5,2015-11-14 16:39:52,88.28,,1,,"b'b\' @paveljanik ran this in the  directory as you requested. /$ gcc -I./ -g -O2 -Wall -Wextra -Wno-unused-function -c  -o gen_context.o:10:31: fatal error: : No such file or directory #include """"           ^compilation terminated.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,6,2015-11-14 16:39:52,0.77,1,,,"b""b' Oops"," sorry missed to print paths...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,7,2015-11-14 16:39:52,39.8,1,,,b'b\' @paveljanik  $ gcc -I./ -g -O2 -Wall -Wextra -Wno-unused-function -c -v  -o gen_context.oUsing built-in specs.COLLECT_GCC=c:\\\\mingw32\\\\bin\\\\Target: i686-w64-mingw32 GNU C (i686-posix-dwarf-rev1, Built by MinGW-W64 project) version 4.9.2 (i686-w64-mingw32)    compiled by GNU C version 4.9.2, GMP version 6.0.0, MPFR version 3.1.2-p9," MPC version 1.0.2warning: MPFR header version 3.1.2-p9 differs from library version 3.1.2-p10.GGC heuristics: param ggc-min-expand=100 param ggc-min-heapsize=131072ignoring duplicate directory ""c:/mingw32/-w64-mingw32/4.9.2/include""ignoring nonexistent directory ""C:/mingw492/i686-492-posix-dwarf-rt_v3-rev1/mingw32C:/msys64/mingw32/-w64-mingw32/4.9.2/../../../../include""ignoring duplicate directory ""c:/mingw32/-w64-mingw32/4.9.2/include-fixed""ignoring duplicate directory ""c:/mingw32/-w64-mingw32/4.9.2/../../../../i686-w64-mingw32/include""ignoring nonexistent directory ""C:/mingw492/i686-492-posix-dwarf-rt_v3-rev1/mingw32/""ignoring nonexistent directory ""./""#include ""..."" search starts here:#include  search starts here: c:/mingw32/-w64-mingw32/4.9.2/include c:/mingw32/-w64-mingw32/4.9.2/include-fixed c:/mingw32/-w64-mingw32/4.9.2/../../../../i686-w64-mingw32/includeEnd of search list.GNU C (i686-posix-dwarf-rev1", Built by MinGW-W64 project) version 4.9.2 (i686-w64-mingw32)    compiled by GNU C version 4.9.2, GMP version 6.0.0, MPFR version 3.1.2-p9," MPC version 1.0.2warning: MPFR header version 3.1.2-p9 differs from library version 3.1.2-p10.GGC heuristics: param ggc-min-expand=100 param ggc-min-heapsize=131072Compiler executable checksum: e8d9439611eb1674b755b61bb39cd06b:10:31: fatal error: : No such file or directory #include """"           ^compilation terminated.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,8,2015-11-14 16:39:52,448.98,,1,,"b""b' This is it: Does work?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,9,2015-11-14 16:39:52,487.65,,,1,"b""b' yup", you got  works :) On 15/11/2015 11:04 PM," paveljanik wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,10,2015-11-14 16:39:52,297.42,,1,,"b""b' Seems to be solved. Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,closed,2015-11-16 20:08:29,208.62,3,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,11,2015-11-14 16:39:52,17.3,,1,,"b""b' Issue is solved"," but it should be closed by PR fixing it ;-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,12,2015-11-14 16:39:52,12.37,1,,,"b""b' Aiik. Sorry"," thought it was a local issue. Reopening.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,reopened,2015-11-16 20:38:09,29.67,4,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,13,2015-11-14 16:39:52,2.2,,1,,"b""b' Probably removing at the end of this line url  @ptschip Can you please try it and then PR it against secp256k1 so @sipa can merge it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,14,2015-11-14 16:39:52,695.45,,1,,"b""b' ~~@theuni can you take a look here?~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,closed,2015-11-25 10:32:11,834.03,4,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,15,2015-11-14 16:39:52,499.65,1,,,"b'b"" im having an issue similar to this in ubuntu: CXX  libbitcoinconsensus_la-uint256.lo  CXX  libbitcoinconsensus_la-make[3]: Entering directory \'/\'I. -Wall -Wextra -Wno-unused-function -c  -o gen_context.o/: I.: command not foundMakefile:make[3]: [gen_context.o] Error 127 (ignored)gen_context.o -o gen_context/: gen_context.o: command not foundMakefile:make[3]: **\\\\* [gen_context] Error 127make[3]: Leaving directory \'/\'Makefile:7366: recipe for target \'secp256k1/libsecp256k1.la\' failedmake[2]: **\\\\* [secp256k1/libsecp256k1.la] Error 2make[2]: Leaving directory \'/\'Makefile:6870: recipe for target \'all-recursive\' failedmake[1]: **\\\\* [all-recursive] Error 1make[1]: Leaving directory \'/\'Makefile:636: recipe for target \'all-recursive\' failedmake: **\\\\* [all-recursive] Error 1 i got past this last night", but it was late and i was tired and now i cant remember what i did to fix it," however i remember this issue helping me. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,16,2015-11-14 16:39:52,516.52,,,1,b'b\' output of manual verbose gcc attempt in libsecp256k1: testb0x@testb0x-VirtualBox:~/$ gcc -I. -v -g -O2 -Wall -Wextra -Wno-unused-function -c  -o gen_context.oUsing built-in specs.COLLECT_GCC=gccTarget: x86_64-linux-gnuConfigured with: ../ -v with-pkgversion=\\\'Ubuntu 4.9.2-10ubuntu13\\\' with-bugurl=file:///-4.9/ enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ prefix=/usr program-suffix=-4.9 enable-shared enable-linker-build-id libexecdir=/ without-included-gettext enable-threads=posix with-gxx-include-dir=/++/4.9 libdir=/ enable-nls with-sysroot=/ enable-clocale=gnu enable-libstdcxx-debug enable-libstdcxx-time=yes enable-gnu-unique-object disable-vtable-verify enable-plugin with-system-zlib disable-browser-plugin enable-java-awt=gtk enable-gtk-cairo with-java-home=/-1.5.0-gcj-4.9-amd64/jre enable-java-home with-jvm-root-dir=/-1.5.0-gcj-4.9-amd64 with-jvm-jar-dir=/1.5.0-gcj-4.9-amd64 with-arch-directory=amd64 with-ecj-jar=/enable-objc-gc enable-multiarch disable-werror with-arch-32=i686 with-abi=m64 with-multilib-list=m32,m64,mx32 enable-multilib with-tune=generic enable-checking=release build=x86_64-linux-gnu host=x86_64-linux-gnu target=x86_64-linux-gnuThread model: posixgcc version 4.9.2 (Ubuntu 4.9.2-10ubuntu13) COLLECT_GCC_OPTIONS=\\\'-I\\\' \\\'.\\\' \\\'-v\\\' \\\'-g\\\' \\\'-O2\\\' \\\'-Wall\\\' \\\'-Wextra\\\' \\\'-Wno-unused-function\\\' \\\'-c\\\' \\\'-o\\\' \\\'gen_context.o\\\' \\\'-mtune=generic\\\' \\\'-march=x86-64\\\' /-linux-quiet -v -I . -imultiarch x86_64-linux-gnu  -quiet -dumpbase gen_context.c -mtune=generic -march=x86-64 -auxbase-strip gen_context.o -g -O2 -Wall -Wextra -Wno-unused-function -version -fstack-protector-strong -Wformat-security -o /GNU C (Ubuntu 4.9.2-10ubuntu13) version 4.9.2 (x86_64-linux-gnu)  compiled by GNU C version 4.9.2, GMP version 6.0.0, MPFR version 3.1.2-p11," MPC version 1.0.3GGC heuristics: param ggc-min-expand=100 param ggc-min-heapsize=131072ignoring nonexistent directory ""/-linux-gnu""ignoring nonexistent directory ""/-linuxlinux-""#include ""..."" search starts here:#include  search starts here: . /-linux/ /-linuxfixed /-linux-gnu /End of search list.GNU C (Ubuntu 4.9.2-10ubuntu13) version 4.9.2 (x86_64-linux-gnu)  compiled by GNU C version 4.9.2", GMP version 6.0.0, MPFR version 3.1.2-p11, MPC version 1.0.3GGC heuristics: param ggc-min-expand=100 param ggc-min-heapsize=131072Compiler executable checksum: 1dc035b74fe1af7d4b0e8c704cd33984COLLECT_GCC_OPTIONS=\\\'-I\\\' \\\'.\\\' \\\'-v\\\' \\\'-g\\\' \\\'-O2\\\' \\\'-Wall\\\' \\\'-Wextra\\\' \\\'-Wno-unused-function\\\' \\\'-c\\\' \\\'-o\\\' \\\'gen_context.o\\\' \\\'-mtune=generic\\\' \\\'-march=x86-64\\\' as -v -I . 64 -o gen_context.o /GNU assembler version 2.25 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.25COMPILER_PATH=/-linux-/:/-linux-/:/-linux-gnu/:/-linux-/:/-linux-gnu/LIBRARY_PATH=/-linux-/:/-linuxlinux-gnu/:/-linux-/:/-linux-gnu/://:/-linux-gnu/://:/-linux-/../../../:/lib/://COLLECT_GCC_OPTIONS=\\\'-I\\\' \\\'.\\\' \\\'-v\\\' \\\'-g\\\' \\\'-O2\\\' \\\'-Wall\\\' \\\'-Wextra\\\' \\\'-Wno-unused-function\\\' \\\'-c\\\' \\\'-o\\\' \\\'gen_context.o\\\' \\\'-mtune=generic\\\' \\\'-march=x86-64\\\'testb0x@testb0x-VirtualBox:~/$ \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,17,2015-11-14 16:39:52,518.97,,1,,"b'b\' so obviously the problem is ""I. -Wall -Wextra -Wno-unused-function -c  -o gen_context.o/: I.: command not found"" its thinking I. is the command instead of gcc\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,18,2015-11-14 16:39:52,529.35,1,,,"b""b' strange", so i ran that manually, but the .o file didnt have permissions, so it wasnt recognized. i ran gcc manually, gave the output file permissions," and was able to continue. strange.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,19,2015-11-14 16:39:52,537.08,,1,,"b""b' still though", i dont see why it didnt use gcc before -I. i get alot of permissions errors after cloning," and have to chmod +x alot of stuff.. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7018,closed,-,-,-,6,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,opened,2015-11-19 12:13:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,title,2015-11-19 12:13:43,00:00,,1,,"b""b' build: Make networking work inside LXC builder in gitian-'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,body,2015-11-19 12:13:43,00:00,,1,,"b""b' These are changes I needed to get gitian building to work with a fresh Debian 8.2 VM", which is the version we tell to use.Set up NAT and forwarding," so that LXC container can access network beyond hostRemove explicit cgroup setup these are mounted automatically now Also needed a change to gitian: url [skip ci]'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,1,2015-11-19 12:13:43,1.98,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,2,2015-11-19 12:13:43,9.58,,1,,"b""b' It also looks like we now need and as dependencies in the descriptors for LXC gitian builds. Apparently for KVM they are added to the base image"," but not for LXC.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,3,2015-11-19 12:13:43,5.65,,1,,"b'b"" Can you also give this a try @theuni? Want to make sure that I\'m not crazy (or somehow have a subtly different environment) that I need these changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,4,2015-11-19 12:13:43,311.12,,,1,"b'b"" @laanwj I can\'t try until tomorrow", but I believe i\'ve ended up doing similar things to get it somewhat working in the past. I never got it reproducibly working 100% though, so if this does the trick," that\'s great!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,5,2015-11-19 12:13:43,873.35,,,1,"b'b"" There were three major issues in my case:LXC container couldn\'t reach the internet (solved by setting up ", as well as the gitian change to set \'auto\' gateway)TLS certificates couldn\'t be verified (solved by adding ca-certificates package)Python missing error (I think during MacOsX build, adding python package) We need gitian-building instructions that work. If this too doesn\'t solve it reproducibly," then switching the VM image to Ubuntu may be the best plan (though it\'s nice if Gitian works from Debian as well). I\'m not actually sure that these problems don\'t exist with an Ubuntu VM.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,6,2015-11-19 12:13:43,246.5,,1,,"b""b' Ideally this should work on any linux with the right hardware?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,7,2015-11-19 12:13:43,1246.45,,,1,b'b\' For gitian itself you\\\'re right. Though with all the possible things that may be different between setups," a single ""follow these steps"" plan cannot work on any linux. To make sure it is actually tested and reproducible (which even now is lacking!) I\\\'m just targeting one distro with this guide.(same answer to questions like ""why not KVM"" etc this is not meant to be a comprehensive book on all the capabilities of gitian", just one tested way to get from a VM to built executables)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,8,2015-11-19 12:13:43,989.43,,,1,"b'b"" We really need to be going the opposite direction here. gitian build environments should be banned from accessing the network at all"," both because they shouldn\'t need it and its good hygene to not allow it and because we really should be supporting building on airgapped machines and always denying network access is a good way to ensure we continue to do that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,9,2015-11-19 12:13:43,368.13,1,,,"b'b"" My goal was just to get the guide working as it is specified now.I agree with you long term @TheBlueMatt but right now", having a broken guide is more harmful than one that isn\'t perfect. Feel free to write it as you think is better. But if it isn\'t fixed before 0.12, I\'d rather just remove it than leave it in a broken state. I mean, people follow these steps exactly and it doesn\'t work," can you think of anything more frustrating?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,10,2015-11-19 12:13:43,220.7,,1,,"b""b' Agree with @laanwj Or mark it _[outdated]_?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,11,2015-11-19 12:13:43,892.4,,1,,"b""b' Is it no longer possible to build without network access? If so", can we just change the documentation to disallow network access instead of allow it? If not," when did we merge something with such a huge regression? Would it be easy to fix?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,12,2015-11-19 12:13:43,376.45,,1,,"b'b"" If someone wants to resurrect it it\'s in git history.It is possible", to be precise it\'s even mentioned in the guide in a separate section: url  However it requires extra steps," building with network access in the container is easier.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,13,2015-11-19 12:13:43,49.5,,,1,"b""b' @theuni Can you go through this one time to test it please? Would be nice to have this up-to-date before we start building 0.12 RCs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,14,2015-11-19 12:13:43,1118.15,,1,,"b""b' @laanwj Yep"," will do in a few hours.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,15,2015-11-19 12:13:43,54.63,1,,,"b'b"" Sadly I didn\'t make it to this today. I\'ll revisit asap after the conference.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,16,2015-11-19 12:13:43,25.4,,1,,"b'b"" @laanwj Just stepped through a 0.12 build for win32/linux and hit no snags. I haven\'t tried osx or the offline path (followed the guide from top to bottom"," whoops). I\'ll get those going in the background next.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,17,2015-11-19 12:13:43,325.02,,1,,"b""b' From top to bottom makes a lot of sense :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,closed,2016-01-18 09:56:32,1302.82,2,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,reopened,2016-01-18 09:57:06,0.57,2,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,18,2015-11-19 12:13:43,1394.6,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,19,2015-11-19 12:13:43,5.53,,1,,"b'b"" Tested ACK regarding adding the python package to the OS X descriptor. That let it work for me when it failed before (building in LXC on Ubuntu Trusty). I don\'t know if adding it is necessary for the non-OS X builds", and I haven\'t tried any of the network changes. In response to @TheBlueMatt, I don\'t think it\'s actually needed. I don\'t actually know if my container can access the Internet, but afaik it only needs it to download the depends files," and we have a step in releasethat downloads the files and seeds them into the gitian cache.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,closed,2016-01-20 12:25:20,148.23,2,14,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7060,closed,-,-,-,2,14,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,opened,2015-11-19 15:10:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,title,2015-11-19 15:10:15,00:00,,1,,"b'b\' [Wallet] Add RPC call ""rescanblockchain  ""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,body,2015-11-19 15:10:15,00:00,,1,,"b""b' A RPC rescan command is much more flexible for the following reasons: * You can define the start and end-height * It can be called during runtime * It can work in multiwallet environment'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,1,2015-11-19 15:10:15,3.78,,1,,"b'b"" I\'d rather have it that the API is such that an explicit rescan is never needed. Wasn\'t there some work on a multi-import w/ timestamps?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,2,2015-11-19 15:10:15,5.8,,1,,"b""b' Yes. There is a PR (see PR description). I agree that it would be better to avoid rescans at all"," although it might be complicated to catch all edge-cases and a manual trigger can help in situations where someone needs to deal with  imports (you only want to do one rescan). And I think some people will cancel a rescan because they want to do other stuff  had not considered that a rescan can take a long time. Afterward calling (from genesis) is a time consuming option.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,3,2015-11-19 15:10:15,15.63,,1,,"b'b"" But manually specifying a block # to rescan from is extremely fragile... it\'s very easy to get this wrong. Also"," rescanning doesn\'t interact with pruning which will be more and more common in the future.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,4,2015-11-19 15:10:15,294.4,,1,,"b""b' @lannwj I thought thats part of what  the height parameter here was for-addressing pruning comparability? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,5,2015-11-19 15:10:15,93.62,,1,,"b""b' How about we call this rescanfromheight instead", to make it possible to add a rescanfromtime later if users demand? Equally," some kind of RPC call that finds the first block with a nTime after a specific time might be useful here. Do we have a way of querying what block # is the oldest non-pruned block?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,6,2015-11-19 15:10:15,1.1,,,1,"b'b"" It also occurs to me that for this usecase we might instead want to have pruning not happen automatically"," but rather be an  on-demand thing where the user specifies the oldest time they\'re interested in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,7,2015-11-19 15:10:15,39.58,1,,,"b'b"" So the biggest negative I personally see here is that it furthers this misunderstanding that rescan is some thing users generally need to be doing.  Until we added these non-rescan imports a user initiated rescan is something that never should have been needed (and indicated a serious bug we\'d like to know about if it was).  As a result of the -rescan argument there is now this whole cargo cult of people that rescan every time they\'re scarred by a shadow. I hate to further that. But I can\'t deny how really useful this will be.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,8,2015-11-19 15:10:15,83.47,,1,,"b'b\' @gmaxwell A possible way around that would be to make the rescan check if you have any addresses that haven\\\'t yet been scanned in that range and error out if not. (basically make it say ""no rescan needed"")\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,9,2015-11-19 15:10:15,1326.25,,1,,"b""b' Hm. this could also take a stop argument", allowing you to scan single blocks or avoid rescan overlap.  Also, I think all the wallet re-scanning should traverse its interval backwards-for more instant gratification;  though this would dork with the wallet transaction ordering... actually import at all breaks that," I should go talk to luke-jr about that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,10,2015-11-19 15:10:15,843.67,,1,,"b""b' agree with gmaxwell that this should scan a range of blocks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,11,2015-11-19 15:10:15,5.42,,1,,"b""b' Agree with the stop parameter. Working on a implementation....'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,12,2015-11-19 15:10:15,6.87,,1,,"b""b' I would still prefer an approach that imports with birthdate instead of explicit rescanning.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,13,2015-11-19 15:10:15,193.1,,,1,b'b\' Added a commit that allows providing a optional parameter with a height where the rescan should stop. @sipa: I agree that rescan height over a  birthday would be nice to have (see #6570). But a explicit rescan RPC call can be useful IMO. It\\\'s trivial to maintain and it can save lots of rescan-time on the user side. But agree," it has to be considered as ""experts"" feature. What about implementing a threshold for autodetecting wether the parameter is a blockheight or timestamp (similar to  )?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,14,2015-11-19 15:10:15,14.93,,1,,"b""b' @jonasschnelli see url  regarding your last comment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,15,2015-11-19 15:10:15,891.35,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,16,2015-11-19 15:10:15,670.12,,,1,"b'b\' If this is still moving forward I tested it a bit (including pruned mode) and it looks fine to me.  One suggestion is to make the start-height a required parameter so that the user specifies ""rescanblockchain 1"" to scan from genesis.  If the start-height is < 1 or higher than current height", throw an error. Otherwise, ACK. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,17,2015-11-19 15:10:15,1139.65,,1,,"b""b' Rebased. I think there are still reasons to consider that PR. At the moment"," it would really be useful. Even once we have url  ( ) it could see use cases for  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,18,2015-11-19 15:10:15,1434.43,,1,,"b'b"" This seems better #7984"," but I still prefer not furthering the usage of various rescans. We need APIs that don\'t require users to keep track of the concept of rescanning IMHO.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,19,2015-11-19 15:10:15,4.82,,1,,"b""b' I agree. Ideally", there will be no need to rescan. But in practice," rescans are sometimes required (I guess everyone who gave some users support has encountered that). IMO a rpc rescan commend with an optional hight is much more flexible then as a startup argument.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,20,2015-11-19 15:10:15,1.53,,1,,"b""b' I think we should work on instead (or at least an importprivkey that takes a key birthdate as parameter)"," not on more ways to rescan.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,21,2015-11-19 15:10:15,0.78,,1,,"b""b' Yes. I can agree with that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,22,2015-11-19 15:10:15,1229.15,,1,,"b""b' Another thing where this could be useful is restoring hd wallets'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,23,2015-11-19 15:10:15,863.37,,1,,"b""b' Since importmulti  #7551  is merged"," some use cases are covered by that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,24,2015-11-19 15:10:15,861.82,,1,,"b""b' Tend to agree. Closing this for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,closed,2016-11-02 14:14:53,1384.63,1,22,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,25,2015-11-19 15:10:15,356.62,,1,,"b""b' IMO something like that would be very handy if you rescan a HD wallet (old backup). -rescan does not allow direct user feedback IMO rescanning an old HD backup should by default start at the height where we introduces HD (optional down to genesis).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,reopened,2017-05-24 12:36:23,1341.5,1,23,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,26,2015-11-19 15:10:15,988.83,,1,,"b""b' Reopened and overhauled. ~~This now does replace the startup argument with a new RPC call  . The reasons for that are:~~ * You can define the start and end-height * It can be called during runtime * It can work in multiwallet environment  Using will cancel the startup with an error referring to the new RPC call.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,27,2015-11-19 15:10:15,301.03,,1,,"b""b' This needs rebase (probably just wait till after 15 at this point). I think outstanding objections to the idea have all largely been removed", Concept ACK from me," at least.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,28,2015-11-19 15:10:15,853.37,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,29,2015-11-19 15:10:15,822.63,,1,,"b""b' If #10941 goes first then the test can be extended to do a and assert the notified blocks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,30,2015-11-19 15:10:15,1275.57,,1,,"b'b"" Rebased and addressed @ryanofsky \'s comments on my branch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,31,2015-11-19 15:10:15,21.3,,1,,"b""b' Cherry picked @luke-jr rebased / overhauled version. Still needs an RPC test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,32,2015-11-19 15:10:15,325.65,,1,,"b""b' Rebased and overhauled. This no longer evicts the startup option. Also added a RPC test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,33,2015-11-19 15:10:15,879.6,,1,,"b""b' Also not sure makes sense for this one.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,34,2015-11-19 15:10:15,812.4,,1,,"b'b"" Addresses @jnewbery\'s points. Agree with @luke-jr that it should be in and not in (moved it there).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,35,2015-11-19 15:10:15,1422.35,,1,,"b'b"" Adressed @kallewoof\'s points.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,36,2015-11-19 15:10:15,1380.13,,1,,"b'b"" Fixed @jnewbery and @promag\'s nits.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,37,2015-11-19 15:10:15,640.98,,,1,"b""b' Looks good. One style nit"," but ACK bdae58ebcd274629bc57f790ef3e1c9e13e1c91f with or without.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,38,2015-11-19 15:10:15,196.28,,1,,"b'b"" @JeremyRubin the current implementation does scan the block defined with the parameter. I\'ll update the parameter documentation to make this more clear.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,39,2015-11-19 15:10:15,23.8,1,,,"b""b' I think the range handling is correct but change the RPC help to  .  Reverted the conditional ?: op abbreviation due to the fact that this requires a GNU extension. The fix for the misleading return value of ScanForWalletTransaction and comment (#11450) should be handled outside of this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,40,2015-11-19 15:10:15,132.47,,1,,"b""b' Also", more generally," it seems we could fail to scan many blocks in the range and still return that we scanned the range.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,41,2015-11-19 15:10:15,7.3,,1,,"b""b' @JeremyRubin: Why do you think would not scan block at height 20? I just re-checked"," re-tested and it looks like it does scan block 20.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,42,2015-11-19 15:10:15,44.02,,1,,"b'b"" I understand @JeremyRubin concern now. It\'s about corrupted blocks (when fails). The current startup do sort of tolerate this.  Added a fix that now leads to an error thrown when detecting a corrupted block url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,43,2015-11-19 15:10:15,323.4,,1,,"b'b"" Concept ACK. This seem like moving in the right direction"," even if in the long term we want to avoid the need for rescans completely. I don\'t see this in the code. Shouldn\'t we at least deprecate the startup argument at the same time? (I would not oppose to directly remove it as an exception to the general policy instead of waiting for 0.17). Perhaps note in the release notes that this is also supposed to be temporary. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,44,2015-11-19 15:10:15,63.42,,1,,"b""b' >Perhaps note in the release notes that this is also supposed to be temporary.  This was removed from the PRs description (but not from a later comment"," now added a strike-through attr.)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,45,2015-11-19 15:10:15,351.88,,1,,"b'b"" IMO this is ready to merge even though there are some concerns that need to be addressed in follow ups:  Rescan continues even if a corrupted block is detected but the RPC *fails* to the caller;  can be refactored a little to avoid the cs_main and cs_wallet locks;  I also would like to discuss the option to make this RPC asynchronous so the caller doesn\'t wait for the rescan to complete", it only asks for a rescan. There is a big chance the caller interrupts the call," but I believe in server side the rescan continues.  utACK 559542a.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,46,2015-11-19 15:10:15,26.5,,1,,"b""b' re-utACK url  modulo comments above'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,47,2015-11-19 15:10:15,607.05,,1,,"b""b' Fixed @MeshCollider nits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,48,2015-11-19 15:10:15,136.27,,1,,"b'b"" I still think it\'s worth it to handle 1.  Invalid Start Height: no negative heights 1.  Invalid Stop Height: No negative heights  and 1.  Invalid Start Height: Beyond what\'s been synced 1.  Invalid Stop Height: Beyond what\'s been synced  differently. Specifically"," the latter calls could still be handled and processed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,49,2015-11-19 15:10:15,972.25,,,1,"b'b"" Tested ACK 35e7fd1147c64a286f778c7740fa735a16d448c5 These already fail with and  . Yes", we can always provide more detailed error messages or logging," but lets not hold this PR up on that. It\'s already been very heavily reviewed.  I\'ll happily review follow-up PRs if you want to change error logging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,50,2015-11-19 15:10:15,1032.28,,1,,"b'b"" @jnewbery to be clear  1. I don\'t think it\'s fair to say it was heavily reviewed and I\'m needlessly holding it up", I found a major bug in the implementation which required a (imo) pretty significant change to the semantics of the return value.  1. I\'m not suggesting a change in error reporting, I am suggesting a functional change to the ranges which are handled by this call. Specifically," I would like for the cases where  1. Invalid Start Height: Beyond what\'s been synced   1. Invalid Stop Height: Beyond what\'s been synced  to not throw an error and return a successful scan range (if possible).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,51,2015-11-19 15:10:15,294.27,,1,,"b'b"" @JeremyRubin sorry if that came off as a personal criticism. That\'s not what I meant. This PR was re-opened in December last year and has been reviewed by 9 people so far. It\'s very useful functionality and it\'d be great to see it merged. And yes you did catch a subtle bug in your review which the rest of us missed. Thank you!  re: your suggested change to the interface if is beyond what\'s been sync\'ed", then there\'s nothing to rescan and we should return an error to make it clear to the user that the call was a no-op. If is beyond the sync height," then it\'s safer to return an error and let the user call the method again with a valid  . If the call succeeded then a user who\'s not paying close attention to the return value may incorrectly assume that the wallet is rescanned up to the requested  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,52,2015-11-19 15:10:15,394.23,,1,,"b""b' Fixed @ryanofsky points with the >= check. Lets merge this now","... I think the ranges cleanup (if we want to do this) could be PRed by @JeremyRubin after this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,53,2015-11-19 15:10:15,58.5,,1,,"b""b' utACK 7a91ceb5e0c9d29dddf7b6ae4cbba802b790924c. Only change since last review was >= fix'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,54,2015-11-19 15:10:15,25.48,,1,,"b""b' reACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,closed,2017-10-13 22:23:35,587.2,2,49,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,55,2015-11-19 15:10:15,156.87,,1,,"b""b' \\xf0\\x9f\\x8e\\x89'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7061,closed,-,-,-,2,50,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,opened,2015-11-20 11:54:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,title,2015-11-20 11:54:00,00:00,,1,,b'b\' [Trivial,"Doc] Add missing ""blocktime"" description to listtransactions help", fix formatting.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,body,2015-11-20 11:54:00,00:00,,1,,"b""b' blocktime field described"," two small formatting fixes (spaces moved).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,1,2015-11-20 11:54:00,18.58,1,,,"b""b' utACK but still"," we should finally get rid of this hard coded formatting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,2,2015-11-20 11:54:00,1.88,,1,,"b""b' Yes. There are more problems I left there types are not aligned etc.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,3,2015-11-20 11:54:00,3.35,,1,,"b'b"" Yes"," but let\'s do this after Dec 1 to prevent conflicting with features waiting to get in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,4,2015-11-20 11:54:00,19.27,,1,,"b""b' I do not plan to do it at all 8)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,5,2015-11-20 11:54:00,1256.82,,1,,"b'b"" Let\'s cut down on the number of space-massaging commits. I understand it\'s well-meant", but there are plenty of real issues to solve," at some point this is just commit noise.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,closed,2015-11-24 09:33:54,1299.9,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,6,2015-11-20 11:54:00,20.42,1,,,"b""b' Oh I missed that this actually adds help for a field. Sorry. ACK.(see now you accidentally hid your own", useful change," between the noise :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,reopened,2015-11-24 09:54:19,20.42,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,closed,2015-11-24 09:55:52,1.55,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7066,closed,-,-,-,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,opened,2015-11-20 15:58:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,title,2015-11-20 15:58:24,00:00,,1,,"b""b' Move maxTxFee out of mempool'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,body,2015-11-20 15:58:24,00:00,1,,,"b""b' The mempool is not the right place for this single hard coded value. should move out of the mempool. Future PRs may use this and remove the misleading on-off-only logic from the rpc interface or set a different value for the wallet"," etc. This should be an uncontroversial refactor only commit not holding back a more sophisticated solution (like a dry-run  ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,1,2015-11-20 15:58:24,346.93,,1,,"b'b"" As this is a safety thing", I\'m weakly inclined to NACK this based on the likelyhood that AcceptToMempool() will be called with an inappropriate max fee. Basically, you\'re taking the code that does that and splitting it in half, with one half duplicated. A better design might be to make a single function in the wallet that does the task of accepting a transaction: verifying sanity checks," then sending it via AcceptToMempool()""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,2,2015-11-20 15:58:24,1142.02,1,,,"b""b' utACK modulo nits and unifying with #7084. My preferred solution would be to take the absurd fees check to a new function that gets called just before AcceptToMemoryPool (unless they used to call with fRejectAbsurdFee=false). But that duplicates the calculation of the fees and hurts performance"," so maybe not everybody likes it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,3,2015-11-20 15:58:24,11.38,,1,,"b'b"" @jtimon The reason it\'s done inside AcceptToMemoryPool in the first place is because elsewhere we don\'t have access to the input amounts (which are necessary to compute the fee)"," at least not without significantly duplicating logic.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,4,2015-11-20 15:58:24,0.93,1,,,"b'b"" Hmm.... what about making ATMP just return the fee"," so the caller can check if it\'s insane?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,5,2015-11-20 15:58:24,22.97,,1,,b'b\' Yeah, well duplicating logic is not strictly necessary, but I pointed out the performance hit (from duplicated calculations).I like the solution of passing a ref CAmount& nTxFee to AcceptToMemoryPool like in #6445.By the way," that PR is closed because ""was going to interfere with mempool work"" as well...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,6,2015-11-20 15:58:24,259.1,,1,,"b'b"" I can\'t see how returning the fee helps here. When ATMP returns the fee it\'s already too late to abort ATMP adding the tx.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,7,2015-11-20 15:58:24,0.12,,1,,"b""b' Closing for now...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,closed,2015-11-29 21:41:51,343.45,3,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,8,2015-11-20 15:58:24,28.32,,1,,"b'b"" @MarcoFalke You are right", returning the fee doesn\'t help at this point because AcceptToMemoryPool() does more than just checking.For what is worth, I like this approach to at least remove one more use of the global ::minRelayTxFee (modulo nits," specially unifying with the other PR).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,9,2015-11-20 15:58:24,706.72,,1,,"b""b' @jtimon rebased on #7084. Old PR: 73d275f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,reopened,2015-11-30 09:59:17,737.43,3,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,10,2015-11-20 15:58:24,120.1,,1,,"b""b' utACK (modulo nits). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,11,2015-11-20 15:58:24,572.85,,1,,"b""b' utACK fa79db2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,closed,2016-02-04 13:54:31,235.23,3,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7070,closed,-,-,-,3,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,opened,2015-11-23 19:36:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,title,2015-11-23 19:36:38,00:00,,,1,"b""b' mempool: Replace maxFeeRate of 10000*minRelayTxFee with maxTxFee'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,body,2015-11-23 19:36:38,00:00,,1,,"b""b'   is the absolute upper bound on fees of transactions created by the wallet.= 0.1 = 0.1 BTC _Further info:_This check was initially only added to the mempool to reject high fee raw transactions by default ( ) but was later extended to also check wallet transactions. may not be the best config param to adjust fee behavior so switching to the already used could make sense. This fixes the issue:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,1,2015-11-23 19:36:38,361.18,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,2,2015-11-23 19:36:38,890.08,,1,,"b'b"" Maybe you prefer to pass it to AcceptToMemoryPool explicitly directly. That would be a little bit more disruptive though. Anyway", better is better, utACK. Bike-shedding: Can the global be named globalMaxTxFee ?You could also add the following to the beginning of AcceptToMemoryPool() as a preparation for making it a explicit parameter to AcceptToMemoryPool. EDIT: never mind the bike-shedding nit," the name maxTxFee has to be preserved because it\'s currently used like that in the wallet. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,closed,2015-12-01 19:30:12,1433.57,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,reopened,2015-12-01 19:31:33,1.35,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,3,2015-11-23 19:36:38,92.0,,1,,"b""b' Rebased (trivial)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,4,2015-11-23 19:36:38,43.83,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,5,2015-11-23 19:36:38,1293.15,,1,,"b""b' @laanwj Anything holding this back?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,6,2015-11-23 19:36:38,1209.02,,1,,"b'b"" You should also move in init; it\'s still under the wallet options"," whereas it now applies to transactions submitted over RPC too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,7,2015-11-23 19:36:38,784.58,,1,,"b""b' utACK faa1b1f","  but waiting on fix for init option as specified by @laanwj above.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,8,2015-11-23 19:36:38,566.07,,1,,"b""b' I have also fixed the doxygen comments in  . Let me know if this is not wanted.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,9,2015-11-23 19:36:38,99.88,,,1,"b'b"" I\'m ok with that", but let\'s limit the amount of new changes from here on," as they keep people busy with reviewing and commenting :) I\'m trying to get this ready for merge.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,10,2015-11-23 19:36:38,17.38,,1,,"b""b' re-utACK fa1193e25440671300f428670c14dd15110f7714'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,closed,2016-02-02 14:18:21,1126.8,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7084,closed,-,-,-,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,opened,2015-11-23 23:52:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,title,2015-11-23 23:52:31,00:00,,1,,"b""b' Mac Gatekeeper security prompt every time'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,body,2015-11-23 23:52:31,00:00,,,1,b'b\' ## Environment: Mac OS X 10.11.1 El CapitanBitcoin Core 0.11.2## Problem: Every time I open Bitcoin Core, I get prompted by Apple\\\'s Gatekeeper security: ![screen shot 2015-11-24 at 10 27 13]url ## Temporary Solutions:### Option 1 Specifically remove the app from quarantine:  ### Option 2 Disable Gatekeeper.### Option 3 Edit permissions.## Cause: I believe the actual cause is the permissions on the file. Bitcoin Core has 0555 permissions, but all the other applications I have installed myself have 0755 permissions. I verified, by changing the permissions to 0755, opening Bitcoin Core," clicking ""open""", quitting Bitcoin Core, and opening Bitcoin Core again, and I no longer receive the Gatekeeper security prompt. ~~**However**," Bitcoin Core is now prompting me that I ""need to rebuild the databse using -reindex to change -txindex""", but I\\\'m guessing this is because it may not be reading my  properly anymore because of a permissions issue that I have caused.~~ Edit: I think this is user error.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,1,2015-11-23 23:52:31,494.9,,1,,"b""b' @theuni can you take a look here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,2,2015-11-23 23:52:31,18.82,,1,,"b""b' Just tested on OSX 10.11. Confirmed.Executing cured the issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,3,2015-11-23 23:52:31,5.45,,1,,"b""b' Only the application folder needs 755 ( ; requires owner write permission) permissions:  The folder has 555 ( ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,4,2015-11-23 23:52:31,187.75,,1,,"b'b"" I think the first mkdir is accountable for the 555 permission. Maybe a gitian umask issue?url But i\'ll wait for @theuni before i try a fix.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,5,2015-11-23 23:52:31,486.53,1,,,"b""b' Odd. Looking now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,closed,2015-11-25 09:02:19,549.8,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,6,2015-11-23 23:52:31,506.83,,1,,"b""b' This issue has been reintroduced in v0.12.1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,reopened,2016-06-08 11:10:37,128.3,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,7,2015-11-23 23:52:31,426.67,,1,,"b'b\' Yes. Confirmed. Just double checked v0.12.1 from url  and Indeed the problem is still present. Although the issue is not present with a gitian nightly build  url  ""Official"" v0.12.1 release has: Nightly build:  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,8,2015-11-23 23:52:31,3.57,,1,,"b""b' @theuni: is it possible that the gitian detatched signer accidentally changes the folders permission?Because the nightly build I have compared against is unsigned.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,closed,2016-06-09 08:51:13,1300.6,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7085,closed,-,-,-,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,opened,2015-11-24 15:07:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,title,2015-11-24 15:07:02,00:00,,1,,"b""b' Consensus build package'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,body,2015-11-24 15:07:02,00:00,1,,,b'b\' Although the encapsulations necessary to expose VerifyScript in libbitcoinconsensus were done, we\\\'re still building it in different packages. Creating an independent consensus package will make much more clear which files are currently part of libbitcoinconsensus. Furthermore, other libconsensus-ready files like  arith_uint256.o, ,"  and  can be moved to that package already. This will make it harder to ""undo"" consensus encapsulation work while having travis happy.Every executable that depends on the util and common packages now depends on the consensus package too.Also", every executable depending on the consensus package seems to depend on the crypto package too, and libbitcoin_consensus only dependencies are crypto and libsecp256k1, so it doesn\\\'t seem to be of harm if we unify the crypto and consensus packages.If we are going to eventually move all the libconsensus code to a subtree, this will make clearer which files need to be moved. I\\\'m specially interested in @theuni \\\'s and travis\\\' opinion before I make some squashes  reduce the scope of the PR.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,1,2015-11-24 15:07:02,549.28,,,1,"b'b"" After making travis happy url  thanks to @theuni ) I force push with some squashes", some suggestions (not all yet) collected from @theuni on IRC and one of the commits nacked and deleted (unifying the crypto and consensus packages).Interestingly enough, travis thinks that new branch is utterly wrong unless you use mac (see url  ).  Building locally on xubuntu-0.14," it is clear to me that I\'m not using the following commands efficiently when touching : Advice welcomed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,2,2015-11-24 15:07:02,1057.7,1,,,"b'b"" Sorry for abusing travis but I got really paranoid while trying to find the needles url I really don\'t understand why the order of the packages in", for example, bitcoind_LDADD matters at linking time (including the local desperate random over-cleaning mentioned before).@sipa said on IRC that it shouldn\'t matter too. If anyone else can bring some light to this," it would be very welcomed. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,3,2015-11-24 15:07:02,1141.28,,1,,"b'b"" To clarify: it\'s my understanding that the problem is that autotools generate both the command-line arguments to the linker", and the emitted rules in the makefile in the same order, based on the order of things in LDADD. The order of arguments to the linker does matter (needs to be in order from dependers to dependencies), but for fast-failure behaviour, @jtimon wants them to be build in order from dependency to depender," which seems reasonable. @theuni Any idea about this?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,4,2015-11-24 15:07:02,21.38,,1,,"b'b"" Yes", @sipa, that\'s what I would like: that packages are built in the opposite way they have to be listed for linking (ie lowest level things first). I was going to ask something like that in url  but your explanation is more complete.In any case, if that is possible," I think it would probably make sense to do that in a separate PR and leave this one as it is (module ).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,5,2015-11-24 15:07:02,4.33,,1,,"b""b' By the way"," the building order discussion is related to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,6,2015-11-24 15:07:02,582.72,,1,,"b""b' Rebased(1).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,7,2015-11-24 15:07:02,1354.57,,1,,"b""b' Rebased(2).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,8,2015-11-24 15:07:02,1112.02,,1,,"b'b"" @theuni and I plan to peer program this to also avoid building the objects in the consensus package twice like it\'s being done now (once for libconsensus and once for the rest). So this will hopefully be replaced with something better. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,closed,2015-12-03 16:10:19,63.28,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,reopened,2015-12-08 06:07:32,837.22,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,9,2015-11-24 15:07:02,838.92,,1,,"b""b' Reopened and updated (I had missed the new prevector [which by the way could have been created in the consensus folder directly instead of having to move it later]).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,10,2015-11-24 15:07:02,704.1,,,1,"b""b' ACK Looks good", and I tested linking with a trivial main function. Should also separate out the unit tests," but that could be postponed to a follow up PR.  Let me know if you want me to take that on.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,11,2015-11-24 15:07:02,72.85,,1,,"b'b"" At some point it would be ideal to separate the tests for the things in the consensus  to the consensus directory (just like wallet and qt).But I haven\'t checked whether those tests have undesirable dependencies yet", and I didn\'t plan to do any of that on the near future. So, yes, if you want to work on that," I\'m happy to review.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,12,2015-11-24 15:07:02,5.78,,,1,"b'b"" OK"," cool.  I\'ll wait for this to be merged first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,13,2015-11-24 15:07:02,24.98,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,14,2015-11-24 15:07:02,662.15,,1,,"b'b"" ut ACK. Objections withdrawn. Lumping everything together is non-ideal"," but it\'s still an improvement. Makes sense as a step forward.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,15,2015-11-24 15:07:02,568.87,,1,,"b'b"" @theuni I\'m also eager to see it building the modules on the consensus package being built only once instead of once", but I\'ll leave that in your hands.In the meantime, all the pictures on my promised document for a libconsensus encapsulation plan will make a lot more sense after I rewrite them after this is merged. Otherwise I\'ll just have to refer to this PR (which I\'ll do in any case)," but it\'s fine because there\'s things that will need to be backported anyway (ie csv and segwit) to the main implementation branch which will be based on top of last-0.12.99 3cd836c1 instead of master for easier consensus backports.Sorry for the unrelated .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,16,2015-11-24 15:07:02,1424.47,,1,,"b""b' anything holding this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,17,2015-11-24 15:07:02,35.47,,1,,"b""b' Not really"," going to test...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,18,2015-11-24 15:07:02,90.8,,1,,"b""b' ACK cf82d05'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,closed,2016-02-02 18:03:09,715.62,2,15,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7091,closed,-,-,-,2,15,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,opened,2015-11-27 14:03:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,title,2015-11-27 14:03:14,00:00,,1,,"b""b' Mempool: Decouple CBlockPolicyEstimator from CTxMemPool (fix #6134)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,body,2015-11-27 14:03:14,00:00,,1,,"b'b"" As mentioned repeatedly in #6134", the PR request has introduced an unnecessary circular dependency: Befere CTxMemPool depended on CBlockPolicyEstimator, but CBlockPolicyEstimator didn\'t depend on CTxMemPool until #6134 was merged. The first commit would have been practically free diff-wise if it had been squashed in #6134. The second are additional simplifications that wouldn\'t have been free," but include here for discussion. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,1,2015-11-27 14:03:14,24.85,1,,,"b""b' Reluctant ACK. Code ACK", agree about avoiding the circular dependency, and agree about avoiding GetArg calls to determine the mempool max size the whole time. I dislike moving more policy knowledge into the mempool itself (its size limit), though. It will complicate a more generic memory limiting approach, where there is not a single memory size limit," but one that depends on the UTXO size and perhaps other buffers. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,2,2015-11-27 14:03:14,20.42,,1,,"b'b"" Complicate it by putting it into a single attribute in the class that makes more sense?Although I\'m not sure how what you have in mind would interact with the current mempool limiting", can\'t we just create a simple setter when we need it?I mean, putting it as an attribute there is not the only solution. We can also make it a global in main that the mempool takes as parameter.About having policy code in the mempool, now that #6871 has been merged I\'m eager to also decouple the CTxMemPool from CBlockPolicyEstimator (making them completely independent of each other). I expect it to be harder than last time I did it though.Unless we don\'t want anything else related to policy encapsulation in 0.12," in that case I can just leave that for Bitcoin JT 0.12...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,3,2015-11-27 14:03:14,10.07,,1,,"b'b"" @jtimon It\'s a philosophical point. The CTxMempool data structure IMHO should not make policy decisions at all. It shouldn\'t even know there is something like a size limit", it\'s just a data structure. It should provide methods to query its state and indexes and make mutations to it, but not be involved in what data should be in it. That\'s the caller\'s responsibility. That\'s just separation of concerns, and is easier to reason about if you know what responsibility is located where in the code. Just because moving a variable somewhere makes the code easier doesn\'t mean it\'s the right place for it. As I said, ACK. I don\'t know a better solution right now," and I agree that the actual problem you\'re after (the circular dependency) needs to be solved.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,4,2015-11-27 14:03:14,7.42,,,1,b'b\' And I agree. But we\\\'re very far from that. Right now CTxMempool has a CBlockPolicyEstimator," which is a policy class.But I would like to understand your point about ""a more generic memory limiting approach"" better.The main goal is not simplifying the code but removing the circular dependency", and this is not the only way to do it. As said another option is to make it a global instead of an attribute of CTxMempool.I\\\'m fine doing that instead if that is preferred.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,5,2015-11-27 14:03:14,3.88,,1,,"b'b"" Well", ideally (but that would require significant changes, which I\'m not suggesting now) is that the mempool has generic hooks that inform listeners about changes, and that the policyestimator registrers itself there. The code that manages the mempool (currently main) would tell the policyestimator what the memory limit is," if any. The -maxmempool option would only be parsed there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,6,2015-11-27 14:03:14,39.72,,,1,"b'b"" Here\'s another option without the new attribute in CTxMemPool: url  If that is preferred", I\'m happy with that too. I believe I disagree with your ideal solution with generic hooks.As said I would prefer to just make CTxMempool  and CBlockPolicyEstimator completely independent, and only parse  -maxmempool in CBlockPolicyEstimator\'s or CStandardPolicy\'s constructor (it would become an attribute instead of a global). But that also requires more changes. Last time I did it, it included things as disruptive as #6068, so it\'s almost certainly too much for 0.12. Jokes aside," this is the less outdated preparations for the complete decoupling I have at hand in case anyone is interested url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,7,2015-11-27 14:03:14,39.53,,,1,"b'b"" NACK for now. @sipa Why does this circular dependency have to be solved right now? I\'m all for cleaning up the code design", but I think the proper next step is to make the mempool unaware of the policy estimator not the other way around. I think it would make sense for the mempool to be aware of it\'s current state, so when TrimToSize is called with an argument, the mempool should remember what size it has now been trimmed to, thus GetMinFee would no longer need an argument.  I think thats cleaner and makes more sense than having two TrimToSize functions just for testing purposes as in this pull.  I\'m happy to do that as soon as I\'m in front of a computer again. More importantly, the bigger problem with this pull is it has now put logic inside of the CTxMemPool::estimate functions which were previously just dumb pass throughs.  When those functions go away (because the block policy estimator is used directly), then that logic will have to be repeated at all calling sites.  I don\'t see why calling code should need to understand that you have to ask the mempool for its min fee in order to call estimate fee.  I think all the logic thats required to do smart fee estimation should be contained in one place, and the policy estimator makes sense to me as that place. Even further, future developments in the policy estimator are surely going to require it to be aware of the mempool, I just don\'t see a way around that.  The most obvious next direct step is to asses how much current back log there is in the mempool and make sure a fee is not returned which is lower than could be reached in the target number of blocks. These concerns have been raised with @jtimon previously," and it would been nice if this pull would have referenced them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,8,2015-11-27 14:03:14,3.35,,1,,"b'b"" @morcos Ok", I hadn\'t considered that the estimator likely will need more access to the mempool anyway. Seeing circular dependencies in the code still makes me cringe," though...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,9,2015-11-27 14:03:14,40.63,,1,,b'b\' Because you just introduced it without the need to do so?The question could be rather, why this circular dependency needed to be introduced in  #6134?I agree with that next step," but ""the other way around"" was already done until #6134. You don\\\'t have to chose one or the other"," they can be completely independent.I highly dislike that ""solution"" (what is this solving exactly?)"," the default if not provided being ""the same that was used in the last call"" is a twisted interface.It is really dumb logic", but as you say that can be solved when those functions go away. For example, if GetMinFee() was part of the estimator rather than the mempool, it could be called internally CBlockPolicyEstimator::estimateSmartFee()Agreed, but this has nothing to do with CBlockPolicyEstimator depending on CTxMemPool.I\\\'ve done it once, I will do it again, and I\\\'m convinced it is completely possible to make the mempool and the policy fully independent no matter the functionality.If you are skeptic," that\\\'s fine. But please don\\\'t put obstacles in the way just because you don\\\'t think is possible. I\\\'ll gladly rewrite all that whenever ""is time"" for #6068 and friends again (a signal I\\\'m waiting to hear from @sipa", btw, since he insisted that policy encapsulation would get in the way of mempool work).I very explicitly and repeatedly referenced #6134 where those discussions where happening.But for better reference: url  url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,10,2015-11-27 14:03:14,1.87,,1,,"b""b' I should have been more explicit and just nacked #6134 instead of coding a nit to be ignored... @sipa did you looked at the option without moving anything to mempool.o ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,11,2015-11-27 14:03:14,1262.58,,,1,"b'b"" @jtimon but it\'s not a default", that\'s exactly what that attribute is meant to represent.  It\'s used only for GetMinFee which only cares about how much the mempool has shrunk since the last time you trimmed it.  If we ever changed to some algorithm with dynamic mempool sizes and we had an attribute for the new mempool size," we would also need a separate variable tracking the last size we were trimmed to.  Would be nice if that variable were perhaps limited to the GetMinFee code itself I suppose. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,12,2015-11-27 14:03:14,305.22,,1,,"b'b"" @sipa I really disagree re: CTxMemPool having knowledge of its size limit", etc. Bitcoin Core has a number of places where we\'ve made similar decisions and the result is a simple data structure that has almost no encapsulation with callers left to do all the work. The mempool limiting stuff as written already suffers from this and it adds a number of lines to main that could otherwise be hidden away from the already-monolithic code there. On November 27, 2015 9:28:13 AM EST," Pieter Wuille notifications@ wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,13,2015-11-27 14:03:14,5.3,,1,,"b'b"" Heh", fully agree about all that. But I don\'t think we should have let acircular dependency in, so absent a better plan to fix that, I\'d be finewith at least temporarily localizing that information to the mempool. It seems @morcos does have a better plan though," so let\'s go for that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,14,2015-11-27 14:03:14,1.52,,1,,"b""b' Sure", I was commenting more generally, not really in response to this specific pull. On November 29, 2015 2:28:12 PM EST," Pieter Wuille notifications@ wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,15,2015-11-27 14:03:14,20.23,,1,,b'b\' So which of the two branches is preferred? The attribute or the global?On Nov 29, 2015 8:30 PM,"Matt Corallo"" notifications@ wrote:\''
bitcoin	7115	closed	16	morcos	2015-11-27 14:03:14	142.05		+1		b'b"" Unfortunately we\'re talking about two separate issues addressed in this pull. 1) I have a different idea about how the size attribute should be stored in that I think the attribute should be called lastTrimmedSize and set from TrimToSize.  This preserves a bit more flexibility for how we do mempool trimming in the future, but both my approach and Jorge\'s approach just eliminate repeated calls to  .  They don\'t solve the circular dependency. 2) Jorge and I both agree that CTxMemPool should not depend on the policy estimation code.  This is a larger change not addressed in this pull.  The other half of the circular dependency is where we disagree in that I actually think the policy estimation code should depend on the mempool.  I don\'t particularly understand why its bad to temporarily have introduced this circular dependency if the side that was recently added is the side that we think will persist.  But if everyone feels it has to be removed immediately, then the solution Jorge has for that in this pull (putting a tiny bit of the logic in the pass-through estimation functions) is probably as good as it gets.  When we eliminate the other side of the dependency, then we can figure out how to fix that up. ""'
bitcoin	7115	closed	17	jtimon	2015-11-27 14:03:14	37.32			+1	b'b\' @morcos Yes, it is two separate things, that\\\'s why I proposed url  because what we\\\'re discussing is where to put the maxsize command-line option (not dynamic).Right now it\\\'s in the global url  I initially moved it to a CTxMemPool attribute but @sipa complained so I proposed it to just move it to main.o like most of the other globals in that other branch. I could have left the all around, but I had already grep that...I think we can all agree that doing it in init like most command line options is a reasonable and simple refactor.It seems we disagree on whether this is passed too much as a parameter or it should be part of CTxMemPool or CBlockPolicyEstimator or CDefaultPolicy.I think going from mapArgs to its own independent global is clearly a step forward. But if people disagree, I can easily write a third patch that removes the circular dependency while maintaining all the verbosity.Yes, but it seems that your plan to do so is by making CBlockPolicyEstimator (and ?) dependent on CTxMemPool instead. This is not necessary.And moving in that direction at the cost of creating a new circular dependency was clearly not necessary in #6134, and that\\\'s all what this PR is about. We can discuss the future of  policy code encapsulation. Although I won\\\'t be able to  a branch completely decoupling CBlockPolicyEstimator and CTxMemPool anytime before 0.12 relase, but I assure you that you can always place the code wherever you want without affecting what the code itself does. In the meantime I\\\'m happy to review any fee  encapsulation specific PR you may have (but I warn you, I will always be adverse to gratuitously make CBlockPolicyEstimator dependend on CTxMemPool, and I firmly believe I can always proof that it is being done ""gratuitously", just by providing a similar alternative that doesn\\\'t, like I did in #6134).Policy and fee encapsulation is something of interest for both of us and that\\\'s great.Finding out where we agree and disagree is, I believe, in our mutual interest.But please let\\\'s find a solution for this PR first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,18,2015-11-27 14:03:14,225.52,1,,,"b'b"" In bitcoin JT-0.12 CTxMemPool and CBlockPolicyEstimator will be completely independent", and I believe this may come with a performance improvement that I\'m not sure will ever be closer than 6 commits away from .Closing," @morcos you won whatever we were fighting for.Long live circular dependencies!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,closed,2015-12-01 02:34:46,751.53,2,13,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,19,2015-11-27 14:03:14,590.35,,,1,"b'b"" @morcos was suggesting to reverse the dependency that existed from mempoolon policy estimator", because it is more natural, and I agree. I don\'t likethat this (temporarily, apparently) resulted in a circular dependency. You\'re arguing that because it\'s possible to remove both dependencies, thatis what should be done. @morcos complained that it means moving theresponsibility of knowing there is something like a mempool limit to everycaller of the estimation code. I was fine with that approach as a simplesolution for now, but do you not agree it\'s natural for a mempool estimatorto depend on the mempool," instead of making callers responsible for tellingone about the other?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,20,2015-11-27 14:03:14,6.07,,,1,"b'b"" No I\'m arguing that because it can\'t be done and we disagree", I don\'t like that we\'re deciding a priori in going towards morcos preferred direction when it is clearly not necessary at this point. And yes I disagree on making the estimator dependent on the mempool being a good design decision.But if I\'m alone there," let\\xe2\\x80\\x99s just move in favor of morcos without ever seeing the two competing options.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,reopened,2015-12-01 16:04:38,809.87,2,13,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,21,2015-11-27 14:03:14,216.32,1,,,"b'b"" Sorry for the confusion", although @morcos disagrees with removing the circular dependency, he wasn\'t nacking the first commit in concept," he was just nacking it because I left some code on  by mistake.Updated the PR with the first commit properly separated from the others. I have left some more commits to comment on before definitely discarding them or squashing the uncontroversial ones.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,22,2015-11-27 14:03:14,100.53,,1,,"b'b"" e2a9957 Alex was here30ac1d3 NACK2e32923 NACK0dc47a0 NACK But if you would please consider 2b455fb then you could accomplish what you\'re trying to do with 30ac1d3 and 2e32923.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,closed,2015-12-01 18:28:20,143.7,3,14,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,23,2015-11-27 14:03:14,488.88,1,,,b'b\' url  ACKWow," spending a lot of code to avoid just letting the mempool have a ""always limit to X"" field. Unless someone wants to write code to make it actually clean"," just add one. Making CTxMemPool a ""dumb datastructure"" with absolutely 0 knowledge of anything is a really poor goal IMO anyway.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,24,2015-11-27 14:03:14,592.07,,1,,b'b\' At the same time, unlike the max size of the mempool, nothing seems to be wrong about minReasonableRelayFee, lastRollingFeeUpdate, blockSinceLastRollingFeeBump and rollingMinimumFeeRate being created as attributes of CTxMemPool for some reason I\\\'m still not able to understand. But as said this PR was never about turning the global to an attribute," that was just one way to remove the circular dependency. But as shown removing the verbosity around ""-maxmempool"" is not strictly necessary to reach that goal: the first commit is enough. I\\\'m not interested in maintaing a PR to remove the circular dependency if it\\\'s not going to be a fast fix of the recently-merged #6134. This has proven not to be a fast fix PR and thus I have closed it. But the code is there quite fresh if anybody else wants to continue this. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,25,2015-11-27 14:03:14,596.33,1,,,"b""b' utACK on url  Undecided about the others.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7115,closed,-,-,-,5,15,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,opened,2015-12-01 10:46:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,title,2015-12-01 10:46:46,00:00,,1,,"b""b' Travis: Test build against system libs (& Qt4)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,body,2015-12-01 10:46:46,00:00,,1,,"b""b' Also removes now-unnecessary dependency from other builds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,1,2015-12-01 10:46:46,43.32,,,1,"b'b"" Concept ACK on testing with qt4", but I\'m not entirely happy about adding yet another build for this," Travis is slow enough these days.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,2,2015-12-01 10:46:46,27.9,,1,,"b""b' Concept ACK.Agree with @laanw but IMO another build is more valuable then a speedy CI.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,3,2015-12-01 10:46:46,3.27,,1,,"b'b"" @jonasschnelli I wonder if there\'s a compromise"," if we can combine the qt4 build with one of the existing builds""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,4,2015-12-01 10:46:46,23.05,,1,,"b'b\' We only have one linux ""full"" Qt5 build ""32bit + dash"". The other linux QT5 build does not build the wallet. Maybe it would be worth to change one of the windows builds (Win32) to build with Qt4? On the other hand", Qt4 mostly makes sense on Linux, but even though, a Win32 Qt4 build should at least detect most Qt4 incompatibilities.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,5,2015-12-01 10:46:46,5.58,,1,,"b'b"" Yeah. That may work.Anyhow this is up to @theuni. Another option would be to combine this build with something else that we wanted to test already"," so that it\'s not just added for qt4.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,6,2015-12-01 10:46:46,877.77,1,,,"b'b"" @theuni Can\'t seem to get this to build with Qt any ideas? Shouldn\'t with-qt=qt4 configure _fail_ if it has a problem? :/""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,7,2015-12-01 10:46:46,196.57,,1,,"b'b"" @laanwj Oh"," an idea if Travis time is a concern: make this build use _only_ system libraries (no depends). That\'s probably better test coverage anyway...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,8,2015-12-01 10:46:46,180.07,1,,,"b'b"" Not a bad idea because of the extra test coverage with old libraries"," but I don\'t think that will save much time as the depends are supposed to be built once and cached anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,9,2015-12-01 10:46:46,79.3,,1,,"b'b"" Does travis cache between builds"," I don\'t think so?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,10,2015-12-01 10:46:46,42.08,,1,,"b""b' No", not between builds," I think. In most cases this would make no sense as they have different flags or even a different platform.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,11,2015-12-01 10:46:46,414.97,,1,,"b'b"" Right. To clarify", depends are cached and re-used for subsequent builds of the same config. Each config is an island though. Personally, I don\'t think this is worth adding another build for. If anything," I\'d rather do as @laanwj said and combine it with another.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,12,2015-12-01 10:46:46,1228.0,,1,,"b'b"" Travis PR test is quite slow lately. I\'d certainly prefer not to add another config. Testing more obscure platforms and library versions (like Qt4) may be better suited for something like a nightly extended build (e.g. #7148)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,13,2015-12-01 10:46:46,534.88,,1,,"b""b' Once #7339 is merged"," I suggest this can be extended to test without-libevent as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,14,2015-12-01 10:46:46,620.05,,1,,"b""b' Closing"," this is part of #7148 now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,closed,2016-01-16 10:03:34,1396.8,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,reopened,2017-05-25 18:39:26,515.87,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,15,2015-12-01 10:46:46,84.58,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,16,2015-12-01 10:46:46,697.87,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,17,2015-12-01 10:46:46,568.18,1,,,"b""b' Rebased"," sorry for the delay'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,18,2015-12-01 10:46:46,549.32,,1,,"b""b' Concept ACK. Only concern is are we willing to add more jobs to travis? Can we pay them to make things go faster?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,19,2015-12-01 10:46:46,1030.75,,1,,"b""b' @TheBlueMatt According to apache", it is possible to increase the number of concurrent builds. url Though, I am slightly worried that this makes it harder for developers to fork the project and enable travis on their fork. After switching to the paid infrastructure, we might have faster machines or even extended timeouts for the build times. By forking the project, the new limits no longer apply and builds might time out or fail," which is a nuisance for new contributors.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,20,2015-12-01 10:46:46,1.93,,1,,"b""b' Is this still WIP or ready for review?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,21,2015-12-01 10:46:46,1376.8,,1,,"b""b' Fixed issues", rebased," and removed from the other builds too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,22,2015-12-01 10:46:46,124.05,,1,,"b""b' There", tests pass now," and it tests against more system dependencies as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,23,2015-12-01 10:46:46,596.57,,,1,"b""b' utACK 6d2aac8bb142adc1e5cff9dd91ddd1d91403b33c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,closed,2017-09-12 19:53:46,74.33,3,20,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7142,closed,-,-,-,3,20,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,opened,2015-12-03 12:40:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,title,2015-12-03 12:40:15,00:00,,1,,"b""b' Launch and immediate quit crashes Bitcoin-Qt on OS X'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,body,2015-12-03 12:40:15,00:00,1,,,"b'b"" Reported by @msgilligan via url  To reproduce:1. Launch OmniCore-Qt by double-clicking2. As soon as the start screen with the \'Verifying Blocks\' message appears", type Command-Q (quit)3. It will take a while before the quit command is received and acted upon, but when it is the app crashes. Attached is the crash log. []url  Tested with Bitcoin Core 0.10.2 and 0.10.4," not explicitly tested with 0.11 or master.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,1,2015-12-03 12:40:15,0.97,,1,,"b""b' Please test with 0.11.2Note that this is not a support forum for altcoins"," post your issues with them to their respective issue tracker.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,2,2015-12-03 12:40:15,119.7,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,closed,2015-12-08 14:40:56,120.68,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,3,2015-12-03 12:40:15,1088.97,1,,,b'b\' Sorry, @laanwj ," @dexX7 and I had verified that this was an ""upstream"" bug in 0.10.2 and he had asked me to try with 0.11.2. I just updated to 0.11.2 and the crash is still there. Crash log: [Bitcoin_Qt-0.11.2-]url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,4,2015-12-03 12:40:15,12.83,,1,,"b'b"" @msgilligan: I can\'t reproduce this error. Could you give more details? Exact Platform"," steps to reproduce?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,reopened,2015-12-09 09:25:52,1124.93,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,5,2015-12-03 12:40:15,24.08,,1,,"b""b' What is at the end of ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,6,2015-12-03 12:40:15,46.4,,1,,"b'b\' Steps to reproduce:1. Double-click on the ""Bitcoin Core"" icon2. Wait till you see ""Verifying Blocks: 1%""3. Press Command-Q4. Wait The problem does not happen every time", but about 2 out of 3. I am on Mac OS 10.10.5 on a Macbook Pro Mid 2012. :  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,7,2015-12-03 12:40:15,1311.37,,1,,"b""b' A Cmd-Q during startup can lead to a segfault. Confirmed.(could only reproduce with the whole mainnet chain", seems not to happen with a fresh," tiny mainnet or testnet chain) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,8,2015-12-03 12:40:15,755.53,,1,,"b""b' Yes", I have a full main net chain," too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,9,2015-12-03 12:40:15,986.77,,1,,"b""b' Tried to reproduce this on OS X", using latest master. Same as above," hitting Command-Q during startup.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,10,2015-12-03 12:40:15,1189.55,,1,,"b""b' OS X Crash Report  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,11,2015-12-03 12:40:15,77.5,,1,,"b""b' I can no longer reproduce this. OS X 10.12"," using 0.13.1 with a full main-net chain.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,closed,2016-11-11 10:13:55,48.05,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7163,closed,-,-,-,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,opened,2015-12-03 14:17:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,title,2015-12-03 14:17:43,00:00,,1,,"b""b' build: Enable C++11 in build"," require C++11 compiler'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,body,2015-12-03 14:17:43,00:00,,1,,"b'b\' Implements #6211. Just meant for testing for now. Probably doesn\\\'t pass Travis.I\\\'m running into an issues with boost 1.55 locally: url  TODO:Travis fails on ""This is not a C++11 compiler"" Possibly TODO:Make sure ++ is compiled with c++11 in depends?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,1,2015-12-03 14:17:43,637.9,,,1,"b'b"" Concept requete-ACK", of course," I don\'t think anybody will dare to nack this (besides tested nits [and making travis happy]).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,2,2015-12-03 14:17:43,22.1,,1,,"b""b' concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,3,2015-12-03 14:17:43,1339.52,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,4,2015-12-03 14:17:43,114.62,1,,,"b'b"" Concept ACK"," but only when it\'s determined to be safe (especially against possibly invisible consensus failures) and can be supported on all stable distros with standard OS libraries...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,5,2015-12-03 14:17:43,33.22,1,,,"b'b"" For reference", that list of distros:[x] Arch[ ] Debian[x] Fedora[ ] Gentoo stable[x] OS X[ ] RHEL[ ] Slackware[ ] Ubuntu Those ticked have native support of in the latest stable release (AFAIK).  Please let me know if any corrections need to be made. This doens\'t necessarily act as a block," assuming url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,6,2015-12-03 14:17:43,9.17,,,1,"b'b"" @dcousens Don\'t forget Windows (well", MinGW)! I guess this one\'s a little tricky since the Windows build is cross-compiled. I think Ubuntu 14.04 will be fine, although 16.04 (LTS) will be necessary if GCC 5 features are required, I suppose," due to Gitian requirements.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,7,2015-12-03 14:17:43,1.87,,1,,"b""b' That sounds OK to me"," it seems like a realistic timeline too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,8,2015-12-03 14:17:43,3.35,1,,,"b'b"" @dcousens Sorry for editing what you replied to. :) But yeah", maybe aim for throwing the switch around the time 16.04 comes out if, for whatever reasons," it\'s decided that GCC 5 support is  desirable. 15.10 has it but I think Gitian officially supports only LTS releases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,9,2015-12-03 14:17:43,104.22,1,,,"b'b"" ~~Fedora can\'t be fully supported due to the ECDSA mess they\'ve made. Disagree with it not being a blocker.~~ Is GCC 5 now known to solve all the ABI issues", or at least the ones that could potentially affect Core? Edit: Forgot we switched to libsecp256k1," nevermind re Fedora.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,10,2015-12-03 14:17:43,619.52,1,,,"b'b"" Ok", getting kind of tired of this, but postponing this another major release," I\'m not going to push for this again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,closed,2015-12-17 14:23:11,5.47,5,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,11,2015-12-03 14:17:43,1.53,,1,,"b""b' @luke-jr No reason why Fedora cannot be supported.  A fedora programmer added the following commit to picocoin"," illustrating a Fedora-compatible approach: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,12,2015-12-03 14:17:43,86.2,,1,,"b""b' @jgarzik That seems unrelated to C++11?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,13,2015-12-03 14:17:43,25.57,,,1,b'b\' I\\\'m working on a fork off of Bitcoin core to implement zerocash. We require C++11 due to dependencies (eg [ ]url  It\\\'s not much effort to make C++11 compile, link, run, and pass  . Hidden changes to consensus are another matter which we don\\\'t have a solid grasp on. We\\\'ve been working on a fork off of both v0.10.0 and v0.11.2 with g++  . This has required a few modifications to the upstream bitcoin code, different in each of these branches. Here are some notes (though I may be forgetting details). First, some strong caveats:Our only testing of consensus changes has been  , so the following notes are only a starting point for C++11 support in bitcoin core. (**Edit:** -because we haven\\\'t done rigorous consensus regression testing. Any advice here would be greatly appreciated.)On top of this, on our branch atop v0.10.0, we disabled many tests that had hard-coded test vectors (such as serialized structures from production main-net) rather than correctly fixing the tests.On v0.11.2 we have not disabled any upstream tests," and have only added C++11 mode and linked in our extra dependencies. (The v0.10.0 is a messy proof of concept. Now we\\\'re starting fresh with more rigour.)We only  on debian or arch linux with non-""default\\\' packages installed. Furthermore we only build with the depends system", something close to  No one on our team has a strong C++ background. :-< So, I scanned through our deltas from upstream to hunt down changes I believe are necessitated by C++11 support:We\\\'ve found that upgrading to boost 1.57.0 atop v0.10.0, or to either boost 1.57.0 or 1.59.0 atop bitcoin v0.11.2 resolves the linker error in @laanwj \\\'s original comment.  The patches in do not apply to boost 1.57.0 (and we haven\\\'t tried them 1.59.0). I examined the 1.57.0 code to see if I could update the patches, but couldn\\\'t find relevant target code after about an hour of effort, so I gave up and _deleted these patches_! (I asked in about this and at least one person told me that\\\'s _probably_ ok because upstream _probably_ addressed the same patched issue.)Boost\\\'s syntax didn\\\'t work (for boost 1.57.0 atop bitcoin v0.10.0), so we switched to C++11 initializer syntax  .In bitcoin v0.11.2 there is one unit test that relies on exceptions propagating out of a dtor: [  L52-L58 at  ]url  In C++11 this causes a process to abort unless you explicitly add an attribute to the dtor as in  . I hope this helps. If I had time I\\\'d work on this PR directly, but I can\\\'t promise anything.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,14,2015-12-03 14:17:43,1.53,,1,,"b'b"" @sipa It is directly related to luke\'s comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,15,2015-12-03 14:17:43,3.33,1,,,"b'b"" @jgarzik Oops", I missed that. @luke-jr That\'s irrelevant. We don\'t use OpenSSL\'s EC code anywhere anymore. I am really in favor of C++11 and don\'t understand the fuss at this point.There are potential problems when mixing C++ code compiled againstdifferent versions of the std library, but as far as I can tell," those arethings that result in link-time errors? I would like to see this reopened.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,16,2015-12-03 14:17:43,170.03,,1,,"b""b' Agree urge re-opening this this is not a big risk.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,reopened,2015-12-17 19:58:30,335.32,6,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,17,2015-12-03 14:17:43,134.02,,,1,"b'b"" Thanks for reopening", @laanwj. One thing I would like to say is that some IBLT simulation code (non-Core) was written in C++11. I believe the plan is to try to recycle some of it for the eventual Core commit. It would be nice to know if C++11 will be acceptable so that everybody working on the Core patch(es) can use or modify code as necessary. Also, I agree with @sipa. AFAIK, any library issues would come up as linker errors. I\'m not aware offhand of any massive gotchas that would come with a switch to GCC 5 and a bit of time for distros to recompile everything. (AFAIK, Ubuntu did most of that before releasing 15.10, although it sounds like more work is needed for 16.04.) If anybody\'s aware of any specific issues," I\'m all ears.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,18,2015-12-03 14:17:43,25.57,,1,,"b'b"" This was discussed in the weekly IRC meeting. It seems we\'ll aim for C++11 in 0.13", by first adding build configuration and testing for C++11 on some targets (but not all), and if no problems appear," switch everything to C++11 and start using C++11 features.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,19,2015-12-03 14:17:43,0.42,,1,,"b""b' Looks like the only remaining issue in that list should be the throwing dtor.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,20,2015-12-03 14:17:43,138.68,1,,,"b'b\' The patch for the dtor ""fix"" is: This allows test to pass (link in my prior comment). However", it makes me uncomfortable because I don\\\'t understand if both enabling c++11 _and_ adding this attribute will lead to identical behavior as before. This patch is enabling a mechanism used for _test verification_, but we may not want that behavior in the application code. The only use I see is in [  L73 at  ]url  ([latest on branch  ]url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,21,2015-12-03 14:17:43,311.55,,,1,"b""b' c++11 for 0.13? I should miss more meetings so things go more my way...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,22,2015-12-03 14:17:43,805.83,,1,,"b'b"" what\'s the latest status on this?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,23,2015-12-03 14:17:43,32.75,,1,,"b'b"" @theuni has been chasing Travis about dependency caching support on the VMs that support c++11 (Ubuntu 14.04+)We could in principle do without it", disabling qt builds or using the distro\'s native qt development headers," but if possible it\'d be preferable to keep using the current system.That\'s what holding it up.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,24,2015-12-03 14:17:43,1020.23,,1,,"b'b"" Wouldn\'t you need to bump travis to trusty as part of this pull?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,25,2015-12-03 14:17:43,1343.1,,1,,"b""b' @theuni is working on that'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,26,2015-12-03 14:17:43,63.5,,1,,"b""b' Travis failure: Maybe retrigger after the cache for is populated? Otherwise a  commit is needed because travis is not building against master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,27,2015-12-03 14:17:43,148.45,,1,,"b""b' Okay"," rebased to master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,28,2015-12-03 14:17:43,436.15,,1,,"b""b' @laanwj url  Should get this up and going. clang needs an explicit for darwin.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,29,2015-12-03 14:17:43,796.35,,,1,"b""b' @theuni thanks"," cherry-picked'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,30,2015-12-03 14:17:43,351.48,,,1,"b""b' Woohoo"," ACK!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,31,2015-12-03 14:17:43,2.67,,,1,"b""b' Nice! Code looks good to me. Untested ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,32,2015-12-03 14:17:43,17.42,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,33,2015-12-03 14:17:43,45.53,,1,,"b""b' ACK url  output diff on OS X: and the build log contains millions of added as expected.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,34,2015-12-03 14:17:43,132.93,,1,,"b""b' No longer the latest version of the C++11 macro (see url  Do we want to update?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,35,2015-12-03 14:17:43,71.82,,,1,"b""b' Tested ACK with the latest C++11 macro", as pointed out by Matt. Compiles fine on the latest OS X (10.11.4) and Xcode (7.3), _make check_ passes," and I get the same output as Janik.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,36,2015-12-03 14:17:43,191.83,,1,,b'b\' ACK. builds, tests," runs. Throws a new build warning "":255:36: warning: \\xe2\\x80\\x98auto_ptr\\xe2\\x80\\x99 is deprecated ...""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,37,2015-12-03 14:17:43,285.8,,1,,"b""b' @randy-waterhouse What compiler do you use please? Edit: Travis has the warning here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,38,2015-12-03 14:17:43,13.38,,1,,"b'b"" @paveljanik That\'s a legitimate warning. We\'ll need to auto_ptr -""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,39,2015-12-03 14:17:43,111.97,,,1,"b""b' Tested on OSX 10.11.4 & Xcode 7.3. compiles fine"," make check passes. Same configure diff as above.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,40,2015-12-03 14:17:43,66.0,,,1,"b'b"" removed WIP: tag", added commit that updates ax_cxx_compile_stdcxx (thanks @TheBlueMatt  for noticing) @randy-waterhouse Indeed, the auto_ptr should be replaced," let\'s do that in a later pull.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,41,2015-12-03 14:17:43,20.38,,1,,"b""b' reACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,closed,2016-04-28 08:52:08,773.63,7,25,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7165,closed,-,-,-,7,25,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,opened,2015-12-08 19:45:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,title,2015-12-08 19:45:07,00:00,,1,,"b""b' Keep reorgs fast for SequenceLocks checks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,body,2015-12-08 19:45:07,00:00,,1,,"b""b' Builds on #7184  Adds a commit to keep the mempool consistent with respect to sequence locked txs in the event of a reorg'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,closed,2015-12-08 20:03:22,18.25,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,reopened,2015-12-08 20:03:24,0.03,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,1,2015-12-08 19:45:07,118.28,,1,,"b""b' Since #6312 has gne through a lot of review already"," I would prefer that this branch builds on top of that to more easily review the differences. We can always squash things before merging for a cleaner history.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,2,2015-12-08 19:45:07,11.75,1,,,"b""b' ~~@jtimon That was the first thing I created: maaku@:refactorb~~(misunderstanding of what he was asking) But I think #7184 is a cleaner implementation of BIP 68 on its own.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,3,2015-12-08 19:45:07,10.65,,1,,"b'b"" as said squashes to clean up the history can happen after review.As mentiooned before"," I still don\'t see how maaku@ achieves its alleged goal.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,4,2015-12-08 19:45:07,287.12,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,5,2015-12-08 19:45:07,61.62,,1,,"b""b' I think this PR is too complicated for fixing the perf issue", if url  is correct," it would be simpler to review. Regardless if we use #7184 or not.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,6,2015-12-08 19:45:07,93.83,,1,,"b""b' @NicolasDorier I agree. Maybe more importantly"," all the extra complexity is outside of the consensus critical code. Maybe you should consider opening a PR for your solution?In this thread we should focus on the code of this PR. We have #7176 to discuss the different solutions more generally.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,7,2015-12-08 19:45:07,55.03,,1,,"b""b' Is this supposed to fix the performance issues of CNB without touching "," or are this just preparations without the actual performance solution?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,8,2015-12-08 19:45:07,295.97,,1,,"b""b' @jtimon This fixes the performance issues by never introducing them into CNB in the first place.  #7184 on its own has performance issues with reorgs. @NicolasDorier You think just the second commit here is significantly more complicated than your final commit in #7190?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,9,2015-12-08 19:45:07,51.45,,1,,"b'b"" squashed a bug fix (wasn\'t actually skipping the work it was supposed to)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,10,2015-12-08 19:45:07,178.52,,1,,"b'b"" I like the fact you separate CheckLockTime (if you rename IsFinalTx) and CheckSequenceLockTime", but I really don\'t like the LockPoints structure. I\'m still reviewing if commit 2 might not result in mempool finality corruption," I really don\'t find it obvious.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,11,2015-12-08 19:45:07,9.45,,1,,"b""b' btw can you rename IsFinalTx to CheckLockTime as you said you wanted to do ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,12,2015-12-08 19:45:07,55.25,,1,,"b'b"" @NicolasDorier My approach and yours are not that different.  You are storing the hash at which the calculation of the sequence lock time and height happened and using the fact that if that hash is still on the chain that the calculation must still be valid and the comparison to the current time and height must be valid because they can not have gone below what they were at the hash you saved.I\'m storing the lowest height hash at which the calculation of the sequence lock time and height would necessarily still be valid (which is the hash of the highest height input with a sequence lock", b/c if none of the inputs changed height then the calculation is trivially the same) and the result of the calculation. But in the case of my code, I have to redo the comparison part because the current time and height maybe be lower than they were at the time I originally did the comparison. So I will redo comparisons for every tx on every reorg, but that is extremely fast," and I save redoing the expensive calculations for many more txs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,13,2015-12-08 19:45:07,40.3,,1,,"b'b"" Ok I\'m getting it. Seems like it can work.You forget to check SequenceLockTime in "," .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,14,2015-12-08 19:45:07,85.28,,1,,"b'b"" @NicolasDorier I left that out on purpose.  See #7184. It might need to be added back in but it wasn\'t really clear to me how that code ever gets hit.  I\'ve tried asking about it on IRC a couple of times. But it doesn\'t seem possible to me to generate a wallet tx which is sequence locked except in the event of a reorg"," at which point the tx won\'t be in your mempool anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,15,2015-12-08 19:45:07,723.63,,1,,"b'b"" Ok"," I don\'t really understand those implication yet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,16,2015-12-08 19:45:07,1.55,,1,,"b""b' Will you rename to IsFinalTx to CheckLockTime and CheckSequenceLocks to CheckSequenceLockTime ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,17,2015-12-08 19:45:07,970.43,,1,,"b'b"" Updated for the updated #7184 and took @sdaftuar\'s suggestion""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,18,2015-12-08 19:45:07,1344.32,,1,,"b""b' This has been rebased and updated now that #7184 is merged. @laanwj Ideally this would be backported to the 0.12 branch when the soft fork for BIP68 code is merged.  Otherwise the code for reorgs could be particularly slow.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,19,2015-12-08 19:45:07,68.28,1,,,"b'b"" I remember having done this remark already: and I was still not too much convinced by your response", I\'m saying it here so other reviewer can dig in about it: My main doubt is that there is a case where the  of LockPoint should be invalidated but is not. Imagine you have a tx spending unconf coin C1 when tip is B1 and height X. MaxInputHash would be equals to hash(B1). Now if B2 is found at height X+1, C1 still unconf," since B1 is still in the chain the LockPoint is not invalidated. My worry is that LockPoint SHOULD be invalidated as the prevHeights vector for calculating the LockPoint would not be the same anymore (the assumed height of C1 would be X+2 instead of X+1). The value of  in the LockPoint would be impacted by it.I am still not entirely clear if it would have a chance of corrupting the mempool with an invalid tx though. (which would give problem to GBT which now rely on a coherent mempool)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,20,2015-12-08 19:45:07,310.78,1,,,"b'b"" @NicolasDorier Yes sorry I hate the way those get lost.Here is your old comment: url  I ended up punting on building the infrastructure to accept sequence locked txs that were not yet final.  I have the code written to do it"," but it requires slight changes to the BIP 68 code and I didn\'t want to hold up merger for something of dubious value. But then I forgot to go back and clarify why the code here is safe. I\'ve now added a commit with what is hopefully a detailed explanation.  And in the process I actually made it more efficient by eliminating the mempool input heights instead of capping them which will make recalculations on reorg even less frequent.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,21,2015-12-08 19:45:07,173.08,,,1,"b'b"" Good explanation", seems ok to me," I\'ll test a bit though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,22,2015-12-08 19:45:07,616.53,,1,,"b""b' just changed a couple words in the comment'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,23,2015-12-08 19:45:07,673.03,,1,,"b""b' you may optimize even more: Only take the heights which correspond to an input who has a LockSequence for maxInputHeight calculation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,24,2015-12-08 19:45:07,886.78,,1,,"b'b"" @NicolasDorier that\'s already done.  CalculateSequenceLocks already sets heights for non sequence locked inputs to 0.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,25,2015-12-08 19:45:07,1414.68,,1,,"b""b' Code review ACK (apart from comment nit).  Testing...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,26,2015-12-08 19:45:07,41.72,,1,,"b""b' Tested ACK (hacked up some extra tests to to exercise the reorg logic) 5912944f4d5eeb4078a5bb658ad09ef7eabbf53b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,27,2015-12-08 19:45:07,27.85,,1,,"b""b' @sdaftuar Would you mind  those extra tests? Maybe they could be added to this PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,28,2015-12-08 19:45:07,138.3,,1,,"b""b' comment nit addressed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,29,2015-12-08 19:45:07,473.88,,1,,"b""b' Kicked Travis'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,30,2015-12-08 19:45:07,1086.67,1,,,"b'b"" If I\'ve done something wrong it was by mistake I\'m new and trying to learn. Sorry if I messed up""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,31,2015-12-08 19:45:07,2.75,1,,,"b""b' Please explain all my mistakes please as this should help the future '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,32,2015-12-08 19:45:07,695.93,,1,,"b""b' utACK ddb4dab'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,33,2015-12-08 19:45:07,20.83,,1,,"b""b' What happened exactly? If you have specific questions about development and review process feel free to mail me on laanwj@'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,34,2015-12-08 19:45:07,267.57,,1,,"b""b'  review ACK ddb4dab'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,35,2015-12-08 19:45:07,14.35,,1,,"b""b' Concept ACK"," started reviewing more deeply.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,36,2015-12-08 19:45:07,27.25,,1,,"b""b' @laanwj ok done. If you think this has sufficient review I can squash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,37,2015-12-08 19:45:07,216.25,,1,,"b'b"" Squashed from e6cc06b which contained the switch to CBlockIndex*\'s""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,38,2015-12-08 19:45:07,3.88,,1,,"b""b' utACK 982670c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,closed,2016-03-16 20:20:15,16.85,5,34,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,39,2015-12-08 19:45:07,36.18,,1,,"b""b' @laanwj this PR has been backported in 7543.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,40,2015-12-08 19:45:07,1035.2,,1,,"b'b"" Removed \'needs backport\' label per previous comment""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7187,closed,-,-,-,5,36,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,opened,2015-12-16 20:06:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,title,2015-12-16 20:06:10,00:00,,1,,"b""b' RPC: Indicate which transactions are signaling opt-in RBF'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,body,2015-12-16 20:06:10,00:00,,1,,"b'b"" I\'m not sure how users of bitcoind are expected to figure out which transactions could be replaced via opt-in RBF", so I took a first stab at exposing that via RPC.  I\'ve started by adding it to when called with the verbose=true argument.  I\'ve also exercised that code with some small modifications to the rpc test. I\'d appreciate some specific feedback on the following:Which RPC calls should return this information?Would it be helpful to distinguish between a transaction signaling RBF itself (with on one of its inputs), versus inheriting the signal from some unconfirmed parent?The answer can only be definitive for transactions that are in the mempool; transactions that are not in the mempool might have unknown parents which could signal RBF and we wouldn\'t know it.  Is it worth trying to answer this question for transactions not in the mempool, and if so," what information should be returned?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,1,2015-12-16 20:06:10,43.33,,1,,"b'b"" Concept ACKI think at least  ", (wallet functions) should also support this.Yes. This would be useful IMO.I don\'t see a use-case for getting the RBF signal for confirmed transactions (maybe for potential reorgs risk calculations?). But I agree, without  ," parents RBF signal is probably unknown.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,2,2015-12-16 20:06:10,289.28,,1,,"b'b"" I don\'t see any use case for exposing this information.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,3,2015-12-16 20:06:10,361.18,,1,,"b'b"" NACK Very high risk of naive users attempting to use this to do risk mitigation and accepting zeroconf txs in cases where they\'re risking losses; if you care about whether a tx can be replaced you\'re in a position where you should be using specialist services. Note how easy it is to send replacable in practice txs by just having an ancestor tx have a low fee.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,4,2015-12-16 20:06:10,63.6,1,,,"b""b' @petertodd: for wallet users ( ","  ): I think there is a use case for self created wtxs where a user likes to know whether he did enable RBF or not.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,5,2015-12-16 20:06:10,29.98,,1,,"b'b"" True", but for those users knowing if a tx is RBF is already trivial just check nSequence. Equally, we haven\'t even merged my obvious set RBF flag option, so what\'s the usecase? On 17 December 2015 00:44:28 GMT-08:00," Jonas Schnelli notifications@ wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,6,2015-12-16 20:06:10,8.62,,1,,"b""b' Right. This (an option to set the RBF flag when creating a wtx) would be required first. Either your overall-setting PR (#7132) or the one that supports rawtx (#7159). GUI option might follow soon.IMO this is basically what this PR does.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,7,2015-12-16 20:06:10,179.48,,1,,b'b\' No, this pull-req checks ancestors too," a critical difference thats applicable to ""risk-scoring"" BS but has little applicibility to your own transactions.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,8,2015-12-16 20:06:10,143.63,,1,,"b'b"" @petertodd  I don\'t agree", but I can understand your concern about offering a feature that could mislead users.  So rather than change existing RPC calls as I initially proposed, what about just adding two new RPC calls, one that would return the txid\'s of unconfirmed parents of a transaction and one that would return txid\'s of in-mempool descendants?  That seems to me to be more broadly useful and basically addresses my underlying concern," that users who want to do calculations relating to whether a transaction might be replaced would have to reinvent the wheel to efficiently trace mempool chains.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,9,2015-12-16 20:06:10,1.23,,1,,"b'b"" I should add -I think exposing mempool  is also useful for code that would seek to use RBF efficiently (I\'m not sure how else you\'d figure out what fee to use", or whether you\'ll get rejected because you\'re replacing too many transactions," etc).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,10,2015-12-16 20:06:10,548.85,1,,,"b'b"" Is efficiency in that case actually a concern? I\'d rather see that version proposed in conjunction with code that actually needs it"," and benchmarks showing how badly it\'s needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,11,2015-12-16 20:06:10,49.2,,1,,"b'b"" How would an application even calculate what fee to use to rbf two transactions down to one? The only thing I can think of would be to call getrawmempool and recursively search for transactions which depend on the given transactions. Dumping a 300mb mempool over rpc sounds like a losing proposition to begin with"," never mind reimplementing the logic bitcoind already has for iterating.  Is there a simpler approach I\'m missing? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,12,2015-12-16 20:06:10,1260.43,,1,,"b'b"" Concept ACK.  The arguments against making this (or any basic tx attribute information) available to a user who is explicitly looking for it are beyond unconvincing.  As users", we want to see what we just did. And we want to see details about the tx that just arrived that pays us.  RPC\'s to return ancestors and descendants would be extremely useful too. Re: throwing a runtime error in  , maybe make it three-valued (yes, no," unknown)?  Caller will probably end up doing that anyway.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,13,2015-12-16 20:06:10,1345.18,,1,,"b""b' needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,14,2015-12-16 20:06:10,62.43,,1,,"b""b' Closing in favor of #7292.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,closed,2016-01-04 21:12:37,66.45,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,reopened,2016-01-18 15:50:52,1118.25,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,15,2015-12-16 20:06:10,1127.05,,1,,"b'b"" Pardon my tardy response. With due respect to the prior arguments", they\'re more strongly an argument against showing unconfirmed transactions at all by default. Not against this. An indicator for BIP125 (in particular, in listtransactions) would be both labor saving for users, and also make it more likely that parties looking at it get it right (and, for example, don\'t consider confirmed transactions to be BIP125 mempool replaceable). Moreover, it was always my expectation that it would work this way-and this small affordance is an aspect of how I explained BIP125 to others without getting any protest so I expect many also expected this. Importantly, while many people do objectively confused things with unconfirmed transactions, the elegance of BIP125 was that it avoided the difficult task of educating people which so far many have failed with; by providing something that allowed their activities to continue without conflict. But it doesn\'t do so if getting access to the information is too burdensome. Because of this I consider this a release blocker. I was concerned that the patch for this would be complex," but it turns out to be quite clean... which I think makes this a no-brainer. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,16,2015-12-16 20:06:10,6.08,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,17,2015-12-16 20:06:10,256.23,,1,,"b""b' Rebased and updated to extend this information to and  .  I also updated the rpc test to exercise this code. This appears to merge cleanly into 0.12 as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,18,2015-12-16 20:06:10,415.38,,1,,"b'b"" On further thought I\'ve removed the opt-in RBF signaling information in  . I  timed that RPC call -without this change -on a node with a large mempool and it took over 6seconds. Potentially multiplying that by the average chain length (limit of 25 by default) seems like a bad performance hit to suddenly introduce. I had an issue with the build not working after pulling the code out of  ; the second commit which moves to seems to be a workaround.  I imagine there may be a better way of fixing the build"," but leaving it here for now to make travis happy and so the rest of this pull can be reviewed.  We can replace or squash the second commit as appropriate... @cfields Thanks for looking at this; let me know if you figure out a better way to make everything work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,19,2015-12-16 20:06:10,502.48,1,,,"b'b\' Sorry for the churn -changed the name of the field in the RPC output to be ""bip125-replaceable""", and fixed the handling of confirmed transactions.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,20,2015-12-16 20:06:10,95.18,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,21,2015-12-16 20:06:10,24.48,,1,,"b""b' Rebased (trivial conflict with #7164 in  ).  Also squashed down to one commit"," and verified this still merges cleanly into 0.12.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,22,2015-12-16 20:06:10,1381.22,,1,,"b""b' utACK eaa8d27'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,closed,2016-01-20 12:50:49,1259.95,3,21,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7222,closed,-,-,-,3,21,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,opened,2016-01-12 06:32:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,title,2016-01-12 06:32:06,00:00,,1,,"b""b' Update  website link'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,body,2016-01-12 06:32:06,00:00,,1,,"b'b"" The Bitcoin Core project now has it\'s own website. [ci skip]""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,1,2016-01-12 06:32:06,26.95,,1,,"b'b\' Is the website intended to be copyrighted? Otherwise ""\\xc2\\xa9 2016 Bitcoin Core."" should be removed no?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,2,2016-01-12 06:32:06,7.6,,1,,"b'b"" @Aquentus Copyright is inalienable and exists by default", every line of code, image, or text written has a copyright assignment by default (to the author unless under employment with no specific agreement otherwise). What is important is the license. In any case," it\'s not a subject for this ticket or this repository.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,3,2016-01-12 06:32:06,214.33,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,4,2016-01-12 06:32:06,0.75,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,5,2016-01-12 06:32:06,3.78,,1,,"b'b"" Concept ACK (as in", whatever the new Core site\'s URL is," we should be pointing to it rather than )""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,6,2016-01-12 06:32:06,0.65,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,7,2016-01-12 06:32:06,1.07,,1,,"b'b\' Why is this necessary? We already have url  The new website seems ""hardcoded"". Why not fork from url  ? Who is responsible for the domain and content. Is the process transparent? Edit: It looks like the source code is available here: url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,8,2016-01-12 06:32:06,10.4,,1,,"b'b"" @MarcoFalke We need our own voice because \'s policies are their own. People conflate  with Bitcoin Core. You can read about the relationship and how it evolved [here]url  but this text is not enough", there needs to be physical separation. The domain is owned by Wladamir," the contributing process is similar to Bitcoin Core see the [contribution process]url  in repository.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,9,2016-01-12 06:32:06,4.0,1,,,"b""b' Concept ACK"," but please link from the website to the GitHub source code repo. Otherwise it is really misleading and hard to verify where the content came from.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,10,2016-01-12 06:32:06,2.22,,1,,"b""b' It is linked in the contribution document.linked from my comment"," maybe we crossed streams :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,11,2016-01-12 06:32:06,54.27,,1,,"b'b\' Would you also need to update the website in """"?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,12,2016-01-12 06:32:06,77.73,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,closed,2016-01-12 13:20:58,408.87,1,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,13,2016-01-12 06:32:06,6.13,,1,,"b""b' @MarcoFalke done'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,reopened,2016-01-12 13:21:59,1.02,1,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,14,2016-01-12 06:32:06,153.77,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,15,2016-01-12 06:32:06,813.35,,1,,"b""b' ... why?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,16,2016-01-12 06:32:06,319.7,,1,,"b""b' FYI:  transfer is still in progress", all the necessary steps have been followed," the estimate from  is that it will be finished next monday'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,17,2016-01-12 06:32:06,164.38,,1,,"b""b' Concept ACK. I think the domain looks fishy though. If  is going to be used for the new site"," it would be better.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,18,2016-01-12 06:32:06,262.08,1,,,"b'b"" @laanwj Lets wait if it\'s just a few more days; no need to cause a lot of confusion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,19,2016-01-12 06:32:06,119.62,1,,,"b""b' @btcdrak It is my understanding that  was very purposefully setup to NOT be run by the people who are making most of the changes to the bitcoin reference implementation. The people writing the software are not the people hosting the binaries. This was very much a conscious decision for the purpose of ensuring checks and balances in a decentralized development process. Having a portion of the site website that the developers control the content of is good -it has allowed us to make the statements and FAQs which have been beneficial to community relations. But changing the reference website to be something under our control is eliminating checks and balances that were set in place to protect the user. I fear for where this project is going if we think that is a good or even just expedient idea.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,20,2016-01-12 06:32:06,8.32,,,1,"b'b"" @maaku: hosting the binaries could still be done on ", though, with gpg signatures and gitian," the importance of the binary hosting is not that big anymore. Changing the reference website makes sense IMO. I guess some of the core devs do not agree with every action the owners of  took (enabling google analytics (!) / probably enabling ads / de-listing certain wallets).I guess it\'s important to have a independent website that will be maintained by the same people who are contributing to the bitcoin core code (and this should be the reference website).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,21,2016-01-12 06:32:06,35.12,,1,,"b'b"" @maaku to clarify there is no intention to move the binaries from ", however," the project needs it\'s own project website.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,22,2016-01-12 06:32:06,983.03,,1,,"b'b"" Right: there are no plans to move binary hosting. But making the  refer to the project website makes sense"," though there\'s no hurry.We should link the general  site as well as part of talking about the  in general.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,23,2016-01-12 06:32:06,1188.58,,1,,"b""b' Updated for new URL"," '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,24,2016-01-12 06:32:06,54.22,,1,,b'b\' I still think this needs a reference to ," for example in the ""What is bitcoin"" section.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,closed,2016-01-20 12:29:04,1387.08,3,22,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,25,2016-01-12 06:32:06,484.8,1,,,"b""b' I think it would be better to explain a little about why there are 2 websites in the readme file"," just plonking  at the top and having a different site just a few lines down is a bit odd.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,26,2016-01-12 06:32:06,496.33,,,1,"b'b\' It already says ""For more information"," as well as [binaries]"" ... Though", you are welcome to improve it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,27,2016-01-12 06:32:06,419.67,,1,,"b""b' @conor123  is about bitcoin in general","  is specifically about this project'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7328,closed,-,-,-,4,23,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,opened,2016-01-22 14:48:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,title,2016-01-22 14:48:00,00:00,,1,,"b""b' Get this thrown at compile with ./configure enable-hardening'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,body,2016-01-22 14:48:00,00:00,,1,,"b'b\' At global scope:cc1plus: warning: unrecognized command line option ""-Wno-self-assign"" [enabled by default]\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,1,2016-01-22 14:48:00,6.0,,,1,"b'b"" That\'s a clang-only warning", which is disabled," but doesn\'t exist on gcc. Perfectly harmless.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,closed,2016-01-22 14:54:00,6.0,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,reopened,2016-02-04 14:09:11,1395.18,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,2,2016-01-22 14:48:00,552.48,1,,,"b'b"" \'Tis confusing (without enable-hardening too).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,3,2016-01-22 14:48:00,363.73,,1,,"b""b' This is even an error on some older gccs as said in url  We have it hardcoded in  :  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,4,2016-01-22 14:48:00,11.53,,1,,"b'b"" I wrote a fix for this a while back (as well as some that @morcos pointed out on osx)"," but I guess I never PR\'d it. I\'ll see if I can dig that out.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,5,2016-01-22 14:48:00,0.73,,,1,"b'b"" @theuni OK. I have just started checking what warnings get printed by each of this -W.. So I\'ll wait :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,6,2016-01-22 14:48:00,10.52,,1,,"b""b' We really need this warning on clang though"," I remember I added it because every single file was generating a warning (code generated by macros tends to have self-assignments).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,7,2016-01-22 14:48:00,12.22,,1,,"b'b"" FWIW: Removing doesn\'t add new warnings here with clang 7.0.2 with the current master. I have just double-checked...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,8,2016-01-22 14:48:00,18.25,,1,,"b""b' OK", no clue then," in any case we need a mechanism for clang or gcc specific warnings.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,9,2016-01-22 14:48:00,16.52,1,,,b'b\' @laanwj Yea," the trick is to run an autoconf check with ""-Werror -Wno-self-assign"" or so (we have macros for that). The annoying part is that gcc only warns on -Wno-foo when there\\\'s another warning present", so there a few other things needed. I had it nailed down to be a completely portable test, I believe. I\\\'ll dig it up.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,10,2016-01-22 14:48:00,6.53,,1,,"b'b"" Found this in my reflog: url  . I\'m unsure if that was the best version"," will give it a try tomorrow. @paveljanik feel free to play with that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,11,2016-01-22 14:48:00,50.05,,,1,"b""b'   and are new compared to the current master. Do we need them at all? I commented them out to make comparison of build logs easier and the only change here is output: This should fix this issue and also part of #7902. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,12,2016-01-22 14:48:00,8.55,1,,,"b'b"" The deprecated-register was necessary when testing c++11"," we can add it later if it comes up again. I believe the unused-local-typedef comes from boost in some cases. That might\'ve been the one bothering @morcos.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,13,2016-01-22 14:48:00,6.65,,1,,"b""b' But even adding them is no problem here. Will you PR the change?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,14,2016-01-22 14:48:00,1247.82,,1,,"b""b' Yes"," will do.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,15,2016-01-22 14:48:00,329.43,,1,,"b""b' Closing"," fixed by #7954'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,closed,2016-04-28 10:49:01,1239.83,3,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7394,closed,-,-,-,3,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,opened,2016-02-03 20:30:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,title,2016-02-03 20:30:41,00:00,,1,,"b""b' salvagewallet fails verification'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,body,2016-02-03 20:30:41,00:00,1,,,"b""b' This is somewhat rare but still worth to take a look sometime. I can reproduce locally and [travis complains]url  in  : Edit: This will now show up as  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,1,2016-02-03 20:30:41,1001.95,,1,,"b""b' Another one at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,2,2016-02-03 20:30:41,50.1,,1,,"b'b"" I\'ve noticed that this mostly happens on the 32 bit travis build (.3)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,3,2016-02-03 20:30:41,1211.92,,1,,"b'b"" I don\'t think we\'re even sure whether -salvagewallet terminates. In this case every time the last line seem to call some bitcoin-cli command with -rpcwait. In case the client would crash", or exit," it would just wait forever.I so wish we had full access to the VM image that runs the tests in these cases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,4,2016-02-03 20:30:41,69.67,,1,,b'b\' The client does not crash nor exit," iIrc. salvagewallet returns some sort of error and the client tries to shutdown. Somehow this fails and the ""writethread"" just continues to run. Haven\\\'t had the time  to look into that yet...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,5,2016-02-03 20:30:41,1.72,1,,,"b""b' ~~So you managed to reproduce this locally?~~dohh you say so in the OP'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,6,2016-02-03 20:30:41,3.58,,1,,"b""b' You can just run and come back 20 minutes later to dig through the dumps.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,7,2016-02-03 20:30:41,30.4,,1,,"b'b"" I did a similar thing", I put the part of  that does the salvage in an infinite loop. Managed to make it hang after ~100 iterations. Looking at the  it didn\'t hang during the salvage, but manages to go into normal operation. And the node didn\'t start shutting down at all. I could even succesfully send it a stop command and it stopped running. This won\'t set the python script in motion again though. Curious. ~~At least it looks like a problem in the script framework, not in the salvage process itself, that does put my concerns to rest a bit.~~ Oh," I didn\'t notice it spawns three nodes. The third one indeed has:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,8,2016-02-03 20:30:41,32.37,,1,,"b'b"" Ok", I was right in my gist above. I can reproduce this 100% of the time now with a specific wallet:After the salvage goes wrong (for whatever reason) the node will just exit. The test framework somehow doesn\'t detect this sudden exit. I think it will try to send a stop command (with -rpcwait) which never arrives, because the node is not running anymore in the first place. It will try forever to send it. This makes the test hang 100% of the time: That, of course, leaves the question _why_ the wallet ends up in a non-salvageable state. But at least the test should not hang in this case," but fail with a clearer error.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,9,2016-02-03 20:30:41,134.45,,,1,"b'b"" #7744 solves the test framework issue.The underlying problem is weird. It seems that randomly", after exit, the wallet database fails verification with but otherwise works fine. E.g. returns  .However, the wallet works as normally. Non doesn\'t see any problems at all.Unlike the error message would have you believe," the salvage successfully recovers the entire wallet. Here\'s an example wallet that triggers this: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,10,2016-02-03 20:30:41,1126.45,,1,,"b""b' This test will be disabled in #8038 until this is be fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,closed,2016-05-12 09:48:50,798.15,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,reopened,2016-05-12 09:48:52,0.03,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,11,2016-02-03 20:30:41,818.28,1,,,"b'b"" I\'ve been digging into this failure over the last couple of days. This is what I\'ve found so far:  This is fairly easy to reproduce. Just uncomment the test and set BASE_SCRIPTS in test_ to be a list  . In a run of 50", I usually get one failure.  the problem is caused by running Berkeley DB\'s with the flag. The documentation for that is (emphasis mine): (from the BDB 4.8.30 docs)  Running with agressive set causes the output to be corrupt (more details below). I\'ve tried this with the most recent version of Berkeley DB from url  and an aggressive verify still corrupts the database.  you can repro the corruption manually by running the utility function, which is bundled with BDB. runs salvage and runs salvage with aggressive.  This is the  file that I was using in my tests (renamed  as github has rules about file types): []url  If I run db_dump on this .dat file with -R, the output ends:   if I run with  , then I don\'t see the message.  piping through to rebuilds a database. If I use on db_dump, then this fails, because the database dump is corrupt. If I use  , on db_dump, then it succeeds, and most (all?) of the key-value pairs appear to be intact.  Digging a bit more into the corruption, if I look at the output of  , it\'s a superset of the output of  . There are some extra rows that look like normal , but there are also a bunch of these:   is ascii for  . You can see where that string is output in  in the BDB source.  Critically, in the first group, we have (with my commentary): the output format for BDB should be key in one row followed by value in the next row. You can see here that the final key is followed by  , which is actually another key row (for a bitcoin public key). That means that the output of db_dump is out of alignment there\'s actually an odd number of rows, so after this line, parsing  gets mixed up.  I added some logging into in bitcoind and see exactly the same thing when running with  . The  get misaligned when re-reading after calling  :  (you can see at the end that it\'s reading keys as values and vice versa).  After running with  , the file is empty. *All* key-value pairs have gone. The wallet backup file contains the db from before the salvage operation so still has all the key-value pairs.  #### Next steps:  should be changed to not set the aggressive flag. Note the documentation for that flag: **the output will almost certainly require editing before being loaded into a database**. Currently the salvagewallet operation just directly reads that output, so it\'s not entirely surprising that it occasionally fails. we may want an option to run salvage wallet with the aggressive flag set, but that should only be once we have the bitcoin_wallet_tool from #8745. once #8745 is merged," we should add targeted testing of salvagewallet (rather then the incidental testing we have in ). Gavin had some testing here: url  / url  which we might use as a start. TBD whether we want to merge my extra logging on BDB reads. We could also add extra logging on writes. we should try to figure out what BD writes are causing the DB to get into a state where with the flag fails. Additional logging will help there. I can also add an option to the integration tests which verifies the  files of every node at the end of every test.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,12,2016-02-03 20:30:41,337.65,,1,,"b""b' Proposed fix here: #10540 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,13,2016-02-03 20:30:41,333.85,,1,,"b""b' Just linking to related comments for reference: url  and #10991'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,14,2016-02-03 20:30:41,1424.2,,,1,"b'b"" I had somehow missed @jnewbery\'s investigation here. Thanks for looking at this closely and figuring out the underlying issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7463,open,-,-,-,3,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,opened,2016-02-05 02:25:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,title,2016-02-05 02:25:46,00:00,,1,,"b""b' Potential deadlock assertion in net code on 0.12RC3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,body,2016-02-05 02:25:46,00:00,,1,,b'b\' I was running 0.12RC2, I downloaded 0.12RC3 (b1f031d) today and did a configure make (without a clean). This caused my mainnet and testnet nodes to crash within 1s. I tried to do a reindex on the mainnet node," and that did nothing (I shouldn\\\'t have). I did a ""make clean""", and rebuilt, now the testnet node appears okay  (didn\\\'t try a reindex) however now the mainnet node crashes in minutes (but it sometimes takes a while, so I don\\\'t see it) with the following error: Crash error: bitcoind: :112: void potential_deadlock_detected(const std::pair&, const LockStack&, const LockStack&): Assertion \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,1,2016-02-05 02:25:46,30.82,,1,,"b'b"" This is an error that only appears with  ", which is enabled by  . Did you perhaps enable this recently? Haven\'t checked whether this is a real issue or not, but the try_lock deadlock detection seems to sometimes give false positives.No," this looks like an issue in the networking code redownloading the block chain shouldn\'t have a single effect on this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,2,2016-02-05 02:25:46,8.73,,1,,"b""b' Changes to  in rc3 versus rc2: Changes to  in rc3 versus rc2: As far as I see it"," nothing with the locks in question changed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,3,2016-02-05 02:25:46,0.3,,1,,"b'b\' I have two aliases for configuring: alias configurestd=""./configure prefix=\\\'$\\\'""alias configuredev=""./configure enable-debug program-prefix=dev prefix=\\\'$\\\'"" I ran ""configurestd"" before ""make && make install"" so I figured that\\\'d disable ""enable-debug"". Other than that", I don\\\'t have any debugging flags anywhere.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,4,2016-02-05 02:25:46,13.47,,1,,"b""b' Is it possible the issue existed before but never came up because I never reindexed? Should I try to build older commits?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,5,2016-02-05 02:25:46,1.13,,1,,"b""b' Yes", that is possible. Try cleaning your tree then rebuildilng without enable-debug," then reindexing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,6,2016-02-05 02:25:46,3.72,,,1,"b'b"" Okay"," already doing that! BTW I\'m running Debian Jessie 64bit. Just in case that ends up being relevant.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,7,2016-02-05 02:25:46,3.5,1,,,"b'b"" I have trouble parsing _which_ locks are conflicting from that log message. It\'s supposed to detect A->B  B->A lock conflicts", but it looks like, except cs_main the two sequences have nothing in common? @TheBlueMatt @cfields you touched that deadlock detection code most recently AFAIK," any idea what is going on here?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,8,2016-02-05 02:25:46,154.6,,,1,"b""b' Seems to run fine now anyways"," no crash yet!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,9,2016-02-05 02:25:46,681.32,,1,,"b""b' Other issues about locking in net code:Potential deadlock on {cs_main"," pnode->cs_vSend} #4493locking inconsistencies in the network code #4091Missing cs_main lock in ProcessMessage() #5678'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,10,2016-02-05 02:25:46,1347.0,,1,,"b""b' Travis is running ( url  )  I should try to see if it triggers this bug report on the extended suite maybe...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,11,2016-02-05 02:25:46,1100.87,,1,,"b""b' Just hit this in travis too:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,12,2016-02-05 02:25:46,436.45,,1,,"b""b' Just got one that looks similar here:url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,13,2016-02-05 02:25:46,1136.28,1,,,"b""b' This is", unfortunately," one of the most frequent travis random false positives.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,14,2016-02-05 02:25:46,251.88,,1,,"b""b' From the report:This means the lock detection code is thinking that pnode->cs_vRecvMsg and pto->cs_inventory are the same variable. They are not however"," and my assumption is that there are enough CNode objects being created and destroyed that the address of a cs_inventory at one point ends up being occupied by a cs_vRecvMsg later. A fix requires deleting the lockorders in the table involving a lock that gets destroyed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,15,2016-02-05 02:25:46,1276.07,,1,,"b""b' Hopefully fixed by #7846"," closing for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,closed,2016-04-14 13:51:54,686.13,2,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,16,2016-02-05 02:25:46,1130.82,,1,,"b""b' Travis will still fail the extended tests due to url  This happens consistently on travis but I could not yet reproduce locally.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,17,2016-02-05 02:25:46,0.52,,,1,"b""b' Thanks for reporting"," reopening'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,reopened,2016-04-15 08:43:15,1131.35,2,14,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,18,2016-02-05 02:25:46,80.52,,1,,"b'b"" Hmm", travis tells that sipa\'s fix was already merged yesterday evening, unfortunately  #7798 was not merged as of yesterday," so there is no way to verify that. I have retriggered #7148 and it run just fine. Need to keep an eye on that pull on the coming days... Edit: Seems to be still an issue:url url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,19,2016-02-05 02:25:46,77.97,,1,,"b""b' Fixed by @gmaxwell  in #8082.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,closed,2016-06-02 11:21:44,158.48,2,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7470,closed,-,-,-,2,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,opened,2016-02-08 21:37:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,title,2016-02-08 21:37:10,00:00,,1,,"b""b' Render icons from SVG'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,body,2016-02-08 21:37:10,00:00,,1,,"b'b"" This probably doesn\'t make sense to merge to Core itself due to the added dependencies (rsvg & imagemagick; and icnsutils for Mac) and risks (of installed rsvg mis-rendering the SVG)"," but posting it here (insta-close) for potential review  cherry-picking.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,closed,2016-02-08 21:37:14,0.07,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,reopened,2016-02-08 21:40:37,3.38,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,closed,2016-02-08 21:40:40,0.05,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,reopened,2016-02-08 22:23:49,43.15,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,1,2016-02-08 21:37:10,47.32,,1,,"b""b' (Leaving it open for final branch  testing)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,2,2016-02-08 21:37:10,524.73,,,1,"b""b' Ok"," this seems to be working good now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,closed,2016-02-10 07:09:13,525.4,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,3,2016-02-08 21:37:10,1090.38,,,1,"b'b"" Why the instaclose? If it\'s good enough for Knots", then why wouldn\'t it be good enough for Core? And if it\'s not needed for Core," then why is it needed for Knots?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7483,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,opened,2016-02-11 08:32:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,title,2016-02-11 08:32:24,00:00,,1,,"b""b' Misattributed authorship in commit log here on Github'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,body,2016-02-11 08:32:24,00:00,,1,,"b'b"" If you look here (current page for earliest commits in Bitcoin)", url  you can see that commits done by sirius-m are attributed to Greg Maxwell. This does not seem to be a problem with the import from SVN, as the committers show up correctly in a \'git log\'. This also matches the info in the old SVN (still available on sourceforge). Rather," it seems to be an issue or a misconfiguration on github. I didn\'t check whether there are more issues like this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,1,2016-02-11 08:32:24,14.12,,1,,"b'b"" The only way to solve this is to contact github. The problem is that anyone can claim ownership of any mail address. At the repository level there\'s no way to remove that binding. Those people are not on github"," so I think this will remain a problem forever.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,2,2016-02-11 08:32:24,1.53,,1,,"b'b"" It\'s very possible that @gmaxwell claimed those addresses to prevent them from being claimed by someone else.Maybe we could set up a dummy account and move them there...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,3,2016-02-11 08:32:24,0.05,1,,,b'b\' Yep," this happened while trying to figure how ""saracen"" was being attributed all s_nakamoto commits and reproducing them. It was reported to github and discussed in the #bitcoin-dev logs a while back. It looks like github fixed the one set and not the other. 19:29  looks like github may be compromised or badly broken: url 19:34  i thought that was an artifact of the conversion process19:37  gmaxwell", it\\\'s always been like that19:37  (i had the same thought to once)19:38  it\\\'s consistent with my (extensive) experience with scm->scm conversion tools that were badly-written19:39  hard to see how thats possible, since that account is much newer than the commits in question.19:39  gmaxwell, timestamps on commits are not verified by github19:39  the commits don\\\'t have to have the right time19:39  you can set your clock back a decade and commit19:40  argh does github order by date or by git log order..?19:40  by date it sucks19:43  whoah!!19:43  yea, okay. I reproduced the stupidity.19:45  url < see bottom19:46  first commit in bitcoin core repo is now from me.20:13  [02:37:19]  gmaxwell, it\\\'s always been like that <-+120:14  Thats not actually true.20:14  Unless you think it was also always like this: url 20:15  gmaxwell: it was, but with a different user20:15  (disclaimer: I did not view that exact page before)20:16  perhaps we should change the merge script to refuse to merge commits that don\\\'t have dots in their email addresses.20:16  do we have any recent like that?  20:16  Luke-Jr: it was messed up like that from whatever moment saracen added sirius-m@1a98c847-1fd6-4fd8-948a-caf3550aa51b to their email list.20:16  Thus my latest example, I just went and reproduced using sirius-m@1a98c847-1fd6-4fd8-948a-caf3550aa51b20:17  gmaxwell: sure, but that was a long time ago20:17  oops I ment s_nakamoto@1a98c847-1fd6-4fd8-948a-caf3550aa51b in the penultimate case.20:18  I noticed it at least as early as when we were contacting devs to sign that joint letter  20:18  in any case, I went and reserved all the other dotless names in the history. .. looks like it only lets a single github user claim them, first come first serve. Obviously it doesn\\\'t change the content of git itself, just what the text on the website shows. I\\\'ll see if I can get github to fix the other ones and make them non-usurp-able like they did the first one I reported. Cheers.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,4,2016-02-11 08:32:24,10.08,1,,,"b'b"" I only reported the s_nakamoto one. I\'m not sure how they resolved it. But it is a losing battle if anyone that wants to troll can just go re-claim them.Makes sense until a better solution can be found for them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,5,2016-02-11 08:32:24,35.2,,1,,"b'b"" A better solution might be to create a github user like  \'Bitcoin Unknown Author\' and attribute all commits resp. email addresses that are not from the team on github to him.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,6,2016-02-11 08:32:24,148.9,,1,,"b'b"" \'Non-Github Bitcoin author\' would be a more suitable name"," since some like Martti Malmi are known.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,7,2016-02-11 08:32:24,0.72,,1,,"b""b' What did github assign s_nakamoto to? or is it free to claim again?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,8,2016-02-11 08:32:24,869.57,,1,,"b'b"" it\'s fixed"," github has now made them nonassignable. (please close)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,closed,2016-02-12 12:15:41,223.28,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,9,2016-02-11 08:32:24,583.72,,,1,"b""b' Awesome.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,10,2016-02-11 08:32:24,374.37,,1,,"b""b' There is more: url url  This is all I could find in the early history.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,11,2016-02-11 08:32:24,61.12,,1,,"b'b"" I have no clue-I\'ll have to re-nag github; unless it\'s just caching. None of them are configured in my account. (The only two configured there are my gmail and  email addresses)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,12,2016-02-11 08:32:24,757.92,1,,,"b""b' Re-opening this issue as it was messed up again recently.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,reopened,2017-02-16 08:09:41,1194.0,3,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,13,2016-02-11 08:32:24,85.48,,1,,"b""b' What is the problem this time?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,14,2016-02-11 08:32:24,370.07,,1,,"b'b"" Same as before", old Satoshi commits are misattributed to saracen: url  I\'ve written Github twice about this," but it\'s taking long to fix this time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,15,2016-02-11 08:32:24,1340.03,,1,,"b'b"" The first time I did this I remember notifying somebody. I can\'t find the chat transcript now", I thought it happened in the bitcoin dev IRC channel, but maybe not? I also reported the problem to Github, although it may have been specifically to a developer I know that works there.  At some point, the problem appeared fixed, I was no longer the author. A few  ago I was able to attribute myself again as the author, using exactly the same method as the first time.  What you want to do about this is up to you. You could create a new account," or assign it to one of your own accounts. Or wait for Github to fix the issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,16,2016-02-11 08:32:24,50.5,,1,,"b""b' I think github fixed it. They attribute all commits with an invalid emailaddress to url  On Sun", Apr 2, 2017 at 4:05 PM," Arran Walker wrote:>'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,17,2016-02-11 08:32:24,4.78,,1,,"b'b"" @MarcoFalke It\'s still an issue: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,18,2016-02-11 08:32:24,0.18,,1,,"b'b"" @MarcoFalke No", they didn\'t. The earliest commits made by sirius-m are still misattributed: url It seems that they have only marked satoshi\'s commits as invalid-email-address," not sirius\'s  Maybe sirius should claim his email so there is proper attribution? He has an account on github: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,19,2016-02-11 08:32:24,10.6,,,1,b'b\' The invalid-email-address account is pretty interesting. Has Github just attributed it to this account in the same way I have? I guess that\\\'s a manual process," rather than them automatically assigning invalid email addresses.  url Contacting support and asking them to assign it to that account is the ""fix"" I suppose. It might be worth finding commits with other addresses too. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,20,2016-02-11 08:32:24,440.03,,1,,"b""b' @saracen I made @non-github-bitcoin so that we can attribute those commits to that account. Could you please unassociate those email addresses from your account so that I can add them to the dummy account?  I also contacted github support to see if they  do anything about it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,21,2016-02-11 08:32:24,321.07,,1,,"b'b"" @achow101 I\'m not really sure that fixes the issue.  I\'ll wait for a member of the bitcoin repo to reply here or for Github to assign it to the account.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,22,2016-02-11 08:32:24,478.1,,,1,"b'b""  I think they did. It\'s not something we can do ourselves at least"," so would need to contact them with a list. It seems like a nice solution from them though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,23,2016-02-11 08:32:24,411.18,,1,,"b""b' Github allowed me to add all three of the emails (s_nakamoto", sirius-m," laszloh) to the @non-github-bitcoin dummy account so now those commits are properly attributed. Control of the account has been handed over to @laanwj. This issue can now be closed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,24,2016-02-11 08:32:24,186.78,1,,,b'b\' It\\\'s a shame this is Github\\\'s solution," I don\\\'t think it\\\'s ideal.  Now I just need to add those emails to another repository and then message Github in a month\\\'s time telling them they\\\'ve been assigned to the wrong user ""non-github-bitcoin""", and whether they\\\'d be able to reassign them for me.  Maybe they should only link to an account for verified email addresses. Anyway, I guess that\\\'s beyond the scope of the issue here :). \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,25,2016-02-11 08:32:24,453.27,,1,,"b""b' The real shame is that people abuse the attribution mechanism in this way", no matter whether it is possible or not. This seems the simplest solution. On the other hand," what if you committed something using an old email that you no longer have (e.g. at a company where you used to work). Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,closed,2017-04-25 05:22:34,1272.88,4,20,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,26,2016-02-11 08:32:24,431.7,1,,,"b'b""  I can\'t help but feel this was a little bit of a dig at me :) Probably correctly so... but", for what it\'s worth," I did reach out to Github about this and have been up front about the issue when people have mistakenly pointed out that I might be the author.  It sucks that this  an issue at all. I apologise that it took up time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,27,2016-02-11 08:32:24,479.67,1,,,"b'b""  Right", seems mostly a miscommunication issue, I was not aware that you were communicating with Github about the same thing. I complained to them so many times," I couldn\'t help becoming a bit annoyed to see your name associated with the commits time after time. Anyhow let\'s be happy it\'s solved.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7512,closed,-,-,-,6,20,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,opened,2016-02-11 15:49:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,title,2016-02-11 15:49:56,00:00,,1,,"b""b' test: script_error checking in script_invalid tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,body,2016-02-11 15:49:56,00:00,1,,,"b""b' Check the returned script_error. Add expected script_error for generated as well as custom tests. The specific error is not part of consensus", however it could avoid unclear reporting issues such as #6862 in the future. It also makes it easier to verify that all potential error conditions are checked. It also reveals that overflow conditions return  ," there appears to be no specific error code for that. Fixes #7513. Changes are best reviewed using  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,1,2016-02-11 15:49:56,12.78,1,,,"b""b' These are not returned in any of the script tests:( )( ) ( )(  BIP65)(  BIP65)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,2,2016-02-11 15:49:56,1266.85,,1,,"b""b' Ping @cfields @sipa @gmaxwell'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,closed,2016-03-02 14:01:42,1331.77,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,3,2016-02-11 15:49:56,718.0,,,1,"b'b"" @laanwj Closed on purpose? I didn\'t see this before"," but sounds like a good idea for sure.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,4,2016-02-11 15:49:56,744.88,,,1,"b'b"" @theuni Closed because I\'ve been asking for review a few times for this"," but never received any answer (neither positive nor negative) so I was assuming it was too much review work relative to some extra testing coverage. Happy to reopen though!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,reopened,2016-03-03 13:32:27,1410.75,2,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,closed,2016-03-14 10:30:16,1257.82,2,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7517,closed,-,-,-,2,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,opened,2016-02-12 05:41:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,title,2016-02-12 05:41:46,00:00,,1,,"b""b' Bugfix: Only use git for build info if the repository is actually the right one'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,body,2016-02-12 05:41:46,00:00,,1,,"b""b' Also adds ability to disable check with BITCOIN_GENBUILD_NO_GIT=1 in the environment @theuni @Flowdalic @laanwj  I believe this addresses all the possible use cases correctly. (This commit is based on branch-0.10", so should merge cleanly into 0.10, 0.11, 0.12," and master branches.)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,1,2016-02-12 05:41:46,602.58,,1,,"b""b' @theuni can you take a look here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,2,2016-02-12 05:41:46,468.18,,,1,"b'b"" To save others the digging: This verifies that  exists at the git root. If it exists at a path that isn\'t at the git root", the check fails. For out-of-tree builds, that\'s fine because  would only exist in the source, not in the build dir. However, this breaks for nested builds where the source is copied into a subdir, because  _does_ end up existing there. We currently build that way for Gitian and Travis because out-of-tree builds don\'t work. Which is why the Gitian descriptors needed to be changed. So.. ACK, but I would very much prefer to get the out-of-tree build changes merged first," and  fixed up accordingly. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,3,2016-02-12 05:41:46,18.53,,1,,b'b\' Well, specifically it makes sure the script itself () is part of the git repository it\\\'s about to get information from. If the source is simply copied into a subdir, it _shouldn\\\'t_ be using git (by default)," so the ""breaks"" @theuni mentions is in fact a bug fix. The Gitian descriptor change tells git to basically use the git repo even for the differing source dir.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,4,2016-02-12 05:41:46,358.72,,1,,"b""b' Huray :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,5,2016-02-12 05:41:46,0.97,,1,,"b""b' The out-of-tree build changes have been merged a while ago. Anything left to do here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,6,2016-02-12 05:41:46,789.43,,,1,"b""b' @theuni So all good to merge now?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,7,2016-02-12 05:41:46,280.95,,,1,"b'b"" I just fixed up the rest of the out-of-tree stuff", and switched Travis to use it. After that," the changes here don\'t play nice with VPATH builds. @luke-jr Mind having a look? I\'ll PR those changes now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,8,2016-02-12 05:41:46,39.15,,1,,"b'b\' @theuni What is a ""VPATH build""? If the changes here break it"," then ""VPATH builds"" are already buggy and should probably be fixed before merging anyway...?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,9,2016-02-12 05:41:46,502.6,,1,,"b""b' #8113 went in.What is the status of this now?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,10,2016-02-12 05:41:46,525.28,,1,,"b'b"" Current status is that url  suggests this PR doesn\'t fix the problem in practice"," so I will need to review why.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,11,2016-02-12 05:41:46,832.77,,1,,"b'b"" Closing for now as the changes apparently don\'t solve the problem. Ask me to reopen or open a new pull when there is progress on this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,closed,2016-09-29 07:20:56,99.17,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,12,2016-02-12 05:41:46,508.77,,1,,"b""b' Reopen"," as asked for by luke on irc.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,reopened,2016-12-30 15:49:42,508.77,0,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,13,2016-02-12 05:41:46,99.93,,1,,"b""b' Updated to actually fix the issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,14,2016-02-12 05:41:46,1180.6,,1,,"b""b' @theuni can you please take a look at this again? Seems to be the oldest open PR now"," we should either merge it or close it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,15,2016-02-12 05:41:46,378.35,,1,,"b'b""  This seems backwards. Though since it\'s strictly an improvement", utACK for now.  I think we should strive to make sure that building from the tarball results in the correct version string with no need for git," but I\'ll work on that separately.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,closed,2017-05-17 09:07:10,1037.47,0,14,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7522,closed,-,-,-,0,14,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,opened,2016-02-19 13:54:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,title,2016-02-19 13:54:14,00:00,,1,,"b""b' [build-aux] Correct AC_PACKAGE_NAME brackets in bitcoin m4 scripts'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,body,2016-02-19 13:54:14,00:00,,1,,"b""b' Closes #7519@luke-jr can you advise if this was done on purpose or not?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,closed,2016-02-19 14:18:13,23.98,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,1,2016-02-19 13:54:14,35.27,,1,,"b""b' Why close?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,2,2016-02-19 13:54:14,2.45,,,1,"b'b"" Travis failed on all systems: I\'d be happy if someone helps me to understand it 8)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,reopened,2016-02-19 14:46:43,28.5,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,3,2016-02-19 13:54:14,16.78,,1,,"b'b"" @laanwj If this is going to be changed I think it needs to be done another way. I\'d rather find out if it is correct or not.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,4,2016-02-19 13:54:14,32.92,,1,,"b'b"" It\'s intentionally for _de_quoting.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,5,2016-02-19 13:54:14,1162.83,,1,,"b'b"" So is intentional syntax. I\'s unfortunate that searching for such symbols on google is hard"," would love a documentation reference for that.But it works so @luke-jr is likely right (and I don\'t see a need to correct something that is not broken).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,closed,2016-02-24 10:44:53,1198.17,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,6,2016-02-19 13:54:14,3.1,,1,,"b""b' me too 8)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7559,closed,-,-,-,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,opened,2016-02-24 11:12:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,title,2016-02-24 11:12:42,00:00,,1,,"b""b' Sample RPM spec file for Bitcoin 0.12.0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,body,2016-02-24 11:12:42,00:00,,1,,b'b\' RPM is a powerful package management tool used by many distributions. The value of having bitcoin-core in Linux distributions that use RPM should be fairly obvious with the coming SegWit soft-fork and the possible block size hard fork," as it would allow users of distributions that include a Bitcoin RPM to keep up to date automatically. Included in this pull request is a sample RPM spec file that ""works for me"" on CentOS 7 to build Bitcoin 0.12.0 safely using the recommended version of BerkeleyDB statically linked at build time", and running the necessary tests at build time to make sure the build was successful before the packaging succeeds.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,1,2016-02-24 11:12:42,27.25,,1,,"b""b' The failed Travis CI check is a win32 check"," not sure what it was trying... this has nothing to do with win32.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,2,2016-02-24 11:12:42,31.85,,1,,"b""b' Yes the travis faliure was unrelated to your changes"," looks like a server side issue:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,3,2016-02-24 11:12:42,81.55,,1,,"b""b' @btcdrak you can make a  that has the current version created by the autoconf stuff when it creates  but that practice is discouraged because there is no way to accurately track changes in the changelog then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,4,2016-02-24 11:12:42,749.68,1,,,"b'b"" I seem to be having trouble figuring out how to squash", all the docs seem to assume the reader is familiar with some concept I am not. But it\'s not even showing the files I have modified, nor fetching them, no way to do a squash. I\'ts not worth my time to try and figure it out, I\'ve wasted hours on it, I\'m sure it is simple and I\'m just a n00b that doesn\'t know what the dozen or so pages I have looked at assumes the reader knows. So sorry," I can\'t squash.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,5,2016-02-24 11:12:42,86.33,,1,,"b'b""   seems to have worked but I can\'t seem to make that appear here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,closed,2016-02-25 03:53:18,1000.6,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,6,2016-02-24 11:12:42,24.4,,1,,"b""b' I will try again as a single pull request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,7,2016-02-24 11:12:42,411.78,1,,,"b'b"" @laanwj @MarcoFalke I am going to wait until 0.12.1 At that point", the patch won\'t be needed for LibreSSL builds and at that point maybe I won\'t need to specify qt4 to configure and maybe at that point I\'ll have qt5 for  7 working anyway from the Qt packages in EPEL. So I will keep tweaking the spec file on my end but wait until 0.12.1 to try and do a pull request. I also now have SELinux in my spec file on my own system," but I want to study it more to make damn sure it really is right.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,8,2016-02-24 11:12:42,219.88,,1,,"b""b' Okay I am going to re-open this after having done considerable work to make the spec file better. It now defaults to qt5 but allows specifying qt4 or no GUI at build time. And it has SELinux stuff for the bitcoin-server package. I would appreciate comments on anything that still needs tweaking before I try to do the squash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,reopened,2016-02-26 14:25:26,632.13,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,9,2016-02-24 11:12:42,160.83,,1,,"b'b"" Gah I thought I had the squash thing figured out but I clearly don\'t"," and now it is showing a few commits from other people that aren\'t related to this. url  how did my name get into that?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,10,2016-02-24 11:12:42,13.33,1,,,"b""b' @AliceWonderMiscreations fwiw", squashing the merge commits is a pain. It might be easier to just copy the changed files," reset the tree and paste them back :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,closed,2016-02-26 17:27:27,182.02,3,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,11,2016-02-24 11:12:42,18.57,,,1,"b""b' @btcdrak Thank you url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7588,closed,-,-,-,3,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,opened,2016-03-03 06:37:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,title,2016-03-03 06:37:34,00:00,,1,,"b""b' 0.12 default mintxfee too low to slow confirm & how to speed up confirm ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,body,2016-03-03 06:37:34,00:00,,1,,"b""b' Hi ", I upgrade bitcoin core to 0.12 , but 0.12 default tx fee too low to slow confirm transaction (tx fee =url  and the transaction is too slow and reject from  : [[ Transaction rejected by our node. Reason: Transaction was previously accepted but has been pruned from our database. ]] and I fixed mintxfee and downgrade to 0.11.2 , now okay for another transactions ," but is possible fast to confirm the transaction like use miner software to assign the transaction or add more txfee ? ( ...... same blockchain BTCs all been sent ... )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,1,2016-03-03 06:37:34,83.85,,1,,"b""b' I guess your problem is not the fee.Your transaction is trying to spend a unconfirmed input: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,2,2016-03-03 06:37:34,1.13,,1,,"b'b"" Your input had a extrem low static fee:url  That\'s why your is not confirming.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,closed,2016-03-03 08:02:33,84.98,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,3,2016-03-03 06:37:34,19.97,,1,,b'b\' Hi , I show you what the happen and I use bitcoin core 0.12 and please don\\\'t close this ticket original wallet is here url  it receive 200 BTCs and 1 confirm , so I start send to me customer , start with here url  send from 2016-02-29 14:46:42 and confirm 2016-03-01 05:43:47 (897 minutes) and you can trace next transaction url  and next , and next .... over 200 transaction , you can trace to like here url  I send 200+ transaction where I receive 200 BTCs , 20+ in ver 0.12 ," 180+ in ver 0.11.2 so it\\\'s not ""Your transaction is trying to spend a unconfirmed input"" or ""Your input had a extrem low static fee"" ", I use default value of ver 0.12 , if default value too low , it\\\'s a bug\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,4,2016-03-03 06:37:34,18.43,1,,,"b'b"" Sorry. Didn\'t meant to close. Re-opening.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,reopened,2016-03-03 08:40:57,38.4,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,5,2016-03-03 06:37:34,151.15,,,1,"b'b"" @JokerCatz You can refer to the release notes on how to set transaction fees: url  . Please note that and are fee rates () which do not take into account current network conditions. Personally"," I\'d recommend using floating fees by setting or (based on your needs).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,6,2016-03-03 06:37:34,220.85,,,1,"b'b"" @MarcoFalke okay ", I got it , many thanx , dev team :) , and my ver0.12 transactions all confirmed , I don\'t know who help me ,"  thanx :D""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,7,2016-03-03 06:37:34,0.68,,,1,"b""b' Closing now. Thanks for response.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,closed,2016-03-03 14:53:38,372.68,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,8,2016-03-03 06:37:34,78.82,,,1,"b""b' I think there is some benevolent miner crawling the web for reports of unconfirmed low-fee transactions to bump their priority locally and spread happiness. :) (At least"," having a txid showing up on GitHub or reddit is a good indicator that it is not spam)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7634,closed,-,-,-,1,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,opened,2016-03-15 01:14:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,title,2016-03-15 01:14:51,00:00,,1,,"b""b' unconfirmedbalance shows fake amount (50.xxxxx btcs)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,body,2016-03-15 01:14:51,00:00,,1,,"b'b"" Hi", I run a bitcoin server which have acting strange the latest 3-4 days. For some reason the unconfirmed balance when running bitcoin-cli getunconfirmedbalance shows up as 50.589243 BTC which of course isn\'t true. How do I reset this? Why did this occur? Tried both v0.12 and v0.12.99, same problem. Thanks in advance,"Nori""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,1,2016-03-15 01:14:51,355.37,,1,,"b""b' Are you sure the value is wrong? What sort of result are you expecting?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,2,2016-03-15 01:14:51,249.5,1,,,"b""b' Did you try to see if there is anything suspicious. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,3,2016-03-15 01:14:51,71.05,1,,,"b'b\' Yes. I\\\'ve never had this problem before. The volume is exactly the same. It\\\'s been stuck at 50+ bitcoins for about 5 days now. There is no way 50 bitcoins have been sent to my wallet. For example: When someone sends 1 bitcoins getunconfirmedbalance will show as 51 BTC and then go down to 5 BTC again once its confirmed. Yes. Iv\\\'e tried listunspent. Lists lots of transactions saying ""confirmations: 0"" which already have thousands of confirmations. Some dated 2015 with over 25.000+ confirmations and still says ""confirmations: 0"". Like this one: url   ""txid"": ""a34a18358937a5b9a9fff8281491de57a9c7942217d43bb469eef5d5113d50fc""","vout"": 1,  ""address"": ""16F4Bzkk6xaFktqSopACKn18rCRWCWgdW3","account"": ""usedaddress","scriptPubKey"": ""76a91439811d6af01a4337137356cb88488f9f1b6348ed88ac","amount"": 0.23509566,  ""confirmations"": 0,  ""spendable"": true It all started around 3 days after I\\\'ve upgraded from 0.11 to 0.12. My wallet is around 20 MB. Should I rescan?\''
bitcoin	7690	closed	4	MarcoFalke	2016-03-15 01:14:51	6.27		+1		b""b' Conflicted transactions count toward the unconfirmed balance, IIRC.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,5,2016-03-15 01:14:51,4.2,,1,,"b""b' That transaction is a double spend that did not make it into the blockchain. 0.12 deals differently with those; see the release notes for moreinformation. Running with -rescan once will fix the problem", by explicitly marking it asconflicting with the block chain. After that," you can choose to remove suchtransactions from the wallet with  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,6,2016-03-15 01:14:51,6.15,,1,,"b""b' How and why does a transraction become conflicted?  Will do a rescan then. Any idea how long this can take?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,7,2016-03-15 01:14:51,8.78,,1,,"b'b"" You always had these conflicting transactions in your wallet. Up to 0.11they were just not counted towards your balance", as a heuristic wasdetermining they couldn\'t be accepted (they were not accepted into your ownmempool). Due to the large changes that the mempool underwent in 0.12, thatheuristic is no longer usable," so the wallet now tracks conflicts byitself. A rescan will let your wallet go through history and gather thatinformation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,8,2016-03-15 01:14:51,4.3,,,1,"b""b' Thanks!!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,9,2016-03-15 01:14:51,1362.95,1,,,"b""b' Closing this issue as it seems resolved (and you changed the title to something weird).Let me know if this is a mistake.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,closed,2016-03-16 11:43:25,628.57,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,10,2016-03-15 01:14:51,158.53,,1,,b'b\' I recognise this is closed, but we have the same issue here and abandontransaction doesn\\\'t seem to work. Here\\\'s my command output The transaction remains in listunspent," and the balance of \\\'getbalance ""*"" 0\\\' remains the same. I confirm that I have run -rescan already on this wallet. Any ideas what could be going on here? It\\\'s remained in this state at least for 8 hours so far.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,reopened,2016-03-17 14:23:16,159.85,3,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,11,2016-03-15 01:14:51,9.78,,1,,"b""b' @morcos ^ Abandontransaction returns nothing", but still it seems that the transaction is not abandoned," any idea how to further troubleshoot this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,12,2016-03-15 01:14:51,66.9,,1,,"b""b' issue identified"," working on a fix'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,13,2016-03-15 01:14:51,1397.3,,1,,"b""b' @bittylicious #7715 should fix your issue.  and are unreliable and are not fixed.  But you can use and  .  should also be fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,closed,2016-03-23 14:09:15,1425.98,3,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,14,2016-03-15 01:14:51,563.47,,,1,"b""b' @morcos Wow", I am truly impressed by your commitment. Ever since I created this thread (and the weeks before that) I had to accept that I will always see a buggy unconfirmedbalance for some reason. Nor did a rescan or reindex work which was a pity since it took quite some time to redownload the blockchain. So," by coincidence I read the changelog for the latest version 0.12.1 and I saw this thread embedded.  Haha TL;DR: Thanks for solving this!!! I now have 0.000000 as unconfirmed balance because of your fix :D Finally!!! Keep up the good work guys. What you do for this community is truly amazing. Much love to you all. Take care!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,15,2016-03-15 01:14:51,772.58,,1,,"b'b"" You had better be sure you can prove that that balance was fake.I happen to no that it wasn\'t and why would someone question someone else\'s information without consulting with the owner first makes sense doesn\'t it yes it does.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,16,2016-03-15 01:14:51,1057.08,,1,,"b'b"" Please I\'m in need of a fake generator . That can send coins to your block chain and it will show up and later disappear ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7690,closed,-,-,-,3,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,opened,2016-03-18 10:33:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,title,2016-03-18 10:33:54,00:00,,1,,"b""b' Build with (official binary installer) Qt 5.6 on OS X not supported'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,body,2016-03-18 10:33:54,00:00,,1,,"b'b"" Qt 5.6 was released a few days ago url  on OS X (can\'t test other systems right now) fails with:   contains: Qt 5.6 contains only 2 files compared to 89 in e.g. 5.4: Relevant upstream change: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,1,2016-03-18 10:33:54,673.95,,,1,"b'b"" Ready for some hackery? Qt installed from the offline installer"," to /. I\'d be happy if someone replicates this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,2,2016-03-18 10:33:54,6.05,,1,,"b""b' Compare with #5728...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,3,2016-03-18 10:33:54,70.48,,1,,"b'b"" See here: url  Looks like this might not affect us with Homebrew"," and  builds aren\'t affected either. @paveljanik mind testing with an updated Homebrew?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,4,2016-03-18 10:33:54,413.23,,1,,"b'b"" I use Macports. And Qt from the binary installer"," so I can\'t test it myself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,5,2016-03-18 10:33:54,25.6,,,1,"b""b' I can confirm that Homebrew is unaffected. Just compiled master + Qt 5.6.0 with no issue.![qt56]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,6,2016-03-18 10:33:54,9.88,,,1,"b""b' @fanquake great! Can you please upload all pkgconfig files somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,7,2016-03-18 10:33:54,571.45,,1,,"b""b' @fanquake ping'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,8,2016-03-18 10:33:54,956.02,,,1,"b""b' @paveljanik: Thanks for having a closer look at this. You might want to check:url andurl  I also attached my local Qt5.6 pc files:[]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,9,2016-03-18 10:33:54,37.27,1,,,"b'b"" @paveljanik sorry for not following up. If you don\'t have enough info with what @jonasschnelli has provided"," let me know and i\'ll upload my files.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,10,2016-03-18 10:33:54,493.05,,,1,"b'b"" @fanquake No problem", thank you. Files from @jonasschnelli are enough. So the new summary of problems, redone from clean installation of original binary Qt installer:1. four files are missing:  ,  , and  . The problem is worked around in url 2. \'# Prepare includes HACK\' needed. Again, worked around in already url 3. rpath problems url  Original installer installs libraries with @rpath ID: This can be changed by: This can be fixed in the phase of Qt," with as already done in  . To sum up: you can build with the original installer after these three steps...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,closed,2016-04-01 16:50:53,376.98,1,6,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,11,2016-03-18 10:33:54,66.47,1,,,"b'b"" Two more files missing: added. But there is no in Jonas\' files. This results in this difference in the build log: Strange.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,12,2016-03-18 10:33:54,30.53,,1,,"b""b' After adding (similar to the previous Qt version)"," the build is now complete.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,13,2016-03-18 10:33:54,667.8,,,1,"b'b"" We should probably document this somewhere", for example paste @paveljanik \'s summary into the OSX build doc," until this is fixed in upstream (and it looks like they broke it on purpose :poop:) I don\'t think you\'ll be the only one stumbling on this""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,14,2016-03-18 10:33:54,8.23,,1,,"b'b"" I\'ll prepare something"," probably in the form of script to fix the local installation coming from the official installer with some documentation...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,reopened,2016-04-02 05:43:55,773.03,2,8,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,15,2016-03-18 10:33:54,674.03,,1,,"b""b' It is not worth the effort to prepare script for this. See #7789 for small doc addition.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,closed,2016-04-02 16:57:57,674.03,2,9,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,16,2016-03-18 10:33:54,69.22,,,1,"b""b' Hi", I have downloaded the Qt5.7 for macOsX and I have the problem discussed here: only Qt5 and Qt5 in my $(QTROOT)/5.7/clang_64/. The links provided by paveljanik on April, the 1st appear to be broken, is this still the path to fix the local installation of Qt coming from the official installer? Can you guys assist with this and point me to the location of the patches?  Thanks,"      Daniele   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,17,2016-03-18 10:33:54,271.03,,1,,"b""b' I have not updated yet. Please try url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,18,2016-03-18 10:33:54,1059.48,,1,,"b""b' OK"," I have tested with 5.7.1:  1. add include links:   2. fix rpath:   3. add pkgconfig files: url It works afterwards... Can you test it? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,19,2016-03-18 10:33:54,1356.58,,,1,"b'b"" Hi paveljanik", this is great, thanks a lot! I have downloaded the Qt5.7 distribution from Homebrew, and patched it withthe instruction and files you have provided. I can now build (with Scons, btw) and run several examples. I am only wondering: you gave me access to a tmp directory with the packageconfiguration (*.pc) files. Why aren\'t these already in the Homebrew , oreven the standard Qt distribution? How did you generate these files? Also, is Qt aware of this problem? I am really surprised that they have notcorrected it in the first place, if this appears to have been around for(at least) the last two releases. Thanks,"      Daniele  2016-12-27 11:37 GMT+01:00 paveljanik :>""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,20,2016-03-18 10:33:54,1242.02,,,1,"b""b' Hi paveljanik",  I am still trying to generate the .pc files for Qt : would you be able to help me with this?  Thanks,"  Daniele '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7714,closed,-,-,-,2,11,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,opened,2016-03-23 01:04:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,title,2016-03-23 01:04:02,00:00,,1,,"b""b' Drop the leading 0. in version numbers'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,body,2016-03-23 01:04:02,00:00,,1,,"b'b"" Why don\'t we just drop the leading 0. in version numbers? AFAICT that field will never be used anyways. The versions would still be the same thing and have the same meaning"," just that they wouldn\'t have the 0. in front of it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,1,2016-03-23 01:04:02,75.13,,1,,"b'b"" It will be used when we reach 1.0. There\'s still a long way to go before we get there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,2,2016-03-23 01:04:02,17.5,,1,,"b""b' well based on this email: url  (and some of the stuff that follows)"," it looks like Bitcoin Core will never reach 1.0.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,3,2016-03-23 01:04:02,313.22,1,,,"b'b"" Like other open source software"," we use a standard versioning scheme. Not worth the bother to change this. [But I guess for marketing reasons you can freely drop the 0. Just don\'t expect changes in the software for this.]""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,closed,2016-03-23 07:49:53,405.85,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,reopened,2016-03-23 10:20:57,151.07,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,closed,2016-06-22 10:44:00,23.05,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,4,2016-03-23 01:04:02,223.28,,1,,"b""b' @achow101 Please find further information on url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7735,closed,-,-,-,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,opened,2016-03-30 10:23:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,title,2016-03-30 10:23:21,00:00,,1,,"b""b' Gitian build should produce macOS dSYM symbol files'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,body,2016-03-30 10:23:21,00:00,,1,,"b'b"" Would be nice if the gitian build", when stripping, wrote the symbols to an external file (see url  ). We get quite a lot of crashdumps, core files, for OSX, Windows and Linux. These generally contain addresses, but not symbols. A recent one is #7765. This is because the executables are stripped w/ make  , but also because  doesn\'t understand gdb\'s symbol format even if it did include them. We don\'t want to ship debug symbols with every download (it\'d waste a lot of space and  server bandwidth remember we\'re static linking every executable, and have quite a lot of executables, and static linking gives lots of symbols, for every executable you have all the dependency symbols as well and c++ symbols like from boost are huuuge).  Currently we have to hack the descriptor (change to  ,  possible hack in  ) to make an executable with symbols to use etc. This is extra work every time (in #7582 I went through the trouble, for ex.). Would be nice to just have the symbol files available after a build. I don\'t plan on uploading these files with releases. But for developers doing their own gitian build," they\'d be extremely useful for troubleshooting problems reported with releases and RCs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,1,2016-03-30 10:23:21,1212.17,,1,,"b""b' Not very familiar with debug-symbols-only files",... but I guess, we could copy out the debug-symbol-information before we do the  . Maybe something like could work?OSX uses .dSYM files," there we might need to call  .I try now to play with the gitian descriptor and see if we can export something useful during the build process.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,2,2016-03-30 10:23:21,46.88,,1,,"b'b"" Agreed. IIRC OSX\'s linker will automatically create a separate file automatically"," with the right flags. I can take this one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,3,2016-03-30 10:23:21,1421.8,,1,,"b""b' @laanwj Fixed by #8167 ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,4,2016-03-30 10:23:21,134.83,,,1,"b""b' Yep!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,closed,2016-06-22 09:19:02,1375.68,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,5,2016-03-30 10:23:21,39.25,,,1,"b""b' Very cool'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,6,2016-03-30 10:23:21,565.53,,1,,"b""b' IMO only partial solved"," we still need to track the missing OSX .dSYM files somewhere (I guess this was not solved by #8167)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,7,2016-03-30 10:23:21,456.95,,1,,"b'b"" @jonasschnelli the new toolchhain produces a version of dsymutil that I hope works for us (seems to work for mozilla). Now that it\'s in"," I can try creating the .dSYMs and adding those to the split-debug script.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,reopened,2016-06-23 11:04:10,105.13,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7770,open,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,opened,2016-04-06 15:15:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,title,2016-04-06 15:15:49,00:00,,1,,"b""b' [Qt] show conflicts of unconfirmed transactions in the UI'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,body,2016-04-06 15:15:49,00:00,,1,,"b""b' Currently", the GUI shows only conflicts with transaction in a block. This results in displaying replaced transaction (RBF) wrong (the replaced transaction is no longer in the mempool, but still in the wallet-transactionlist," conflicts are not detected). This PR will mark unconfirmed transactions that are **not** in our mempool and have conflicts as conflicted.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,1,2016-04-06 15:15:49,1.43,,1,,"b""b' Another option would be to hide these transactions completely.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,2,2016-04-06 15:15:49,4.67,,1,,"b""b' Before this PR: Sending 49.9BTC and RBF with a 40.0BTC transaction. After this PR: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,3,2016-04-06 15:15:49,1.47,,1,,"b'b"" I don\'t think you want to hide wtx without telling the user/ without having the user told you to do so.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,4,2016-04-06 15:15:49,1.53,,1,,"b'b\' Yes. I agree. IMO the ""mark as conflicted"" solution is better.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,5,2016-04-06 15:15:49,48.03,,1,,"b""b' Hmm", so I have a non-rbf transaction back from august: and sendrawt returns  ," but it is not showing the new icon. Need to look into this...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,6,2016-04-06 15:15:49,100.47,,1,,"b'b"" @MarcoFalke: does you non-rbf transaction back from august is in conflict with another transaction in your wallet? Only if it\'s so"," the conflicted state icon will be shown.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,7,2016-04-06 15:15:49,1366.92,,1,,"b'b"" No"," it didn\'t conflict within the wallet. Tested ACK 614073f""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,8,2016-04-06 15:15:49,2.37,,1,,"b""b' One could argue to use another  for this e.g. url  with the conflicted icon (cross) in the lower left.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,closed,2016-05-20 15:48:46,32.95,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,reopened,2016-05-20 15:50:08,1.37,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,9,2016-04-06 15:15:49,1388.5,1,,,"b""b' Rebased and changed the icon for transactions with conflict but not being in the mempool (RBF): '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,10,2016-04-06 15:15:49,354.33,,1,,"b""b' These seem to be two list items referring to the same transaction.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,11,2016-04-06 15:15:49,450.95,,1,,"b""b' @luke-jr: this PR does not focus on hiding out transactions from the wallet (a lot more complexity).At the moment"," a replaced RBF transaction is not listed as conflicted url  This PR is a tiny fix to improve the GUI RBF attribution.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,12,2016-04-06 15:15:49,35.32,,1,,"b'b\' Another solution would be (idea once shortly discusses with @gmaxwell on IRC):directly hide transactions if they are conflicted and **not** in the mempool (RBF)hide transactions that conflicts with a transaction in a blocks with confirmation >6add option in the settings panel to ""display old conflicted transaction"" and turn it off by default.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,13,2016-04-06 15:15:49,183.43,,1,,"b""b' @jonasschnelli Any progress here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,14,2016-04-06 15:15:49,74.7,,1,,"b'b"" @sipa: I\'m working on a option to auto-hide mempool conflicts (transactions that are not in the blockchain and mempool) ( txes).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,15,2016-04-06 15:15:49,1390.73,,,1,"b""b' I think this solution is fine as it is. The auto-hide option can be written in a separate PR.This PR would be a simple change to allow users to easy identify mempool replacments relevant to the wallet. Would be great for 0.13.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,16,2016-04-06 15:15:49,35.57,,,1,"b""b' Removing this from the 0.13 milestone as it missed the feature freeze.Agree", would have been nice, just like #7817. I think we have a lack of GUI ," as useful GUI changes like this linger way too long.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,17,2016-04-06 15:15:49,1304.6,,1,,"b""b' This (simple) PR looks for reviewers...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,18,2016-04-06 15:15:49,63.97,,1,,"b'b\' I think the problem is that it may not be obvious for everyone  to set up  the appropriate transactions to test this. I think it may help to add ""proposed steps to reproduce"" for harder to test pulls in general.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,19,2016-04-06 15:15:49,6.05,,,1,"b""b' 82962bd Works for standard transactions: ![screenshot from 2016-08-10 10-37-01]url ![screenshot from 2016-08-10 10-37-06]url ![screenshot from 2016-08-10 10-37-14]url  Does not work for non-standard transactions: ![screenshot from 2016-08-10 10-34-42]url ![screenshot from 2016-08-10 10-34-45]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,20,2016-04-06 15:15:49,57.78,,1,,"b""b' Closing for now due to inactivity...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,closed,2017-01-06 09:48:38,1078.5,1,18,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7826,closed,-,-,-,1,18,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,opened,2016-04-16 10:46:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,title,2016-04-16 10:46:30,00:00,,1,,"b""b' master: -> crash'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,body,2016-04-16 10:46:30,00:00,,1,,"b""b' Current master (73fc922ed64333d45f18d8a448f30cfa2ae0281e) crashes at the end of processing RPC on OS X:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,1,2016-04-16 10:46:30,7.98,,1,,"b""b' Works ok on testnet. Hmm.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,2,2016-04-16 10:46:30,49.15,,1,,"b'b""   Notice the \'d\'...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,3,2016-04-16 10:46:30,43.7,,1,,"b""b' Keeping the copy of directory for later investigation and doing  ...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,4,2016-04-16 10:46:30,0.33,,1,,"b'b"" That\'s this code I don\'t get it why would a GetKey fail when the cursor is valid?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,5,2016-04-16 10:46:30,2.0,,1,,"b'b"" I extended dbwrapper.h\'s and the exception there is: End of file?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,6,2016-04-16 10:46:30,0.25,,1,,"b'b"" I think the leveldb operation succeeds", but it is unable to deserialize the key: Not sure why this would be the case but unless other people are experiencing this too," I\'d say it\'s database corruption.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,7,2016-04-16 10:46:30,6.35,,1,,"b'b"" Can you put a in the catch() of to see what key can\'t be parsed?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,8,2016-04-16 10:46:30,2.62,,1,,"b""b' Yup. Once the reindex finishes.  is empty.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,9,2016-04-16 10:46:30,113.1,,,1,"b""b' The was transferred from the other system"," where there were some lines about full disk space 8) Edit: the (and other directories) was transferred from other machine. from there is deleted. The file on the new machine is empty. Will investigate further once the reindex locally is finished.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,10,2016-04-16 10:46:30,3.08,,1,,"b""b'  is about bdb'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,11,2016-04-16 10:46:30,0.73,,1,,"b""b' I think the corruption in happened on the source machine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,12,2016-04-16 10:46:30,925.78,,1,,"b'b"" Reindex helped to solve this issue for me. I added @laanwj \'s debug line and it is printed even on the start of  : But it continues there. The crash happens in  :  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,13,2016-04-16 10:46:30,191.2,,1,,"b""b' Closing"," the real source of the problem was database corruption.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,closed,2016-04-17 09:12:47,1346.28,0,14,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,14,2016-04-16 10:46:30,3.43,,,1,"b'b"" On second thought: is there a guarantee that keys always deserialize into the (char",uint256) stanza? \'f\' \\xe2\\x86\\x92 DB_BLOCK_FILES \'d\' \\xe2\\x86\\x92 not listed No, doesn\'t seem to be the case, see for example WriteBatchSync: This serializes a char and integer into the key.So: GetKey can legitimately return  ," it just means that we\'ve reached a different key type. My interpretation of the meaning of the return value in this comment was wrong: Labeling this as bug!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,reopened,2016-04-17 09:16:13,3.43,0,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,15,2016-04-16 10:46:30,2.72,,1,,"b""b' I still have the contents. 3.3GB...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,16,2016-04-16 10:46:30,52.13,,1,,"b""b' @paveljanik see #7904'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,17,2016-04-16 10:46:30,2.87,,1,,"b""b' #7094 was merged"," this was solved'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,closed,2016-04-19 10:13:57,57.73,0,17,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7890,closed,-,-,-,0,17,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,opened,2016-04-17 12:17:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,title,2016-04-17 12:17:14,00:00,,1,,"b""b' : Is locking correctly implemented here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,body,2016-04-17 12:17:14,00:00,,1,,"b""b' What happens when we interleave two threads", one calling GetPubKey() and the other RemoveWatchKey()? GetPubKey() has no locks," so if we call RemoveWatchKey() after and before there is going to be a problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,closed,2016-04-17 12:18:10,0.93,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,reopened,2016-04-17 12:22:28,4.3,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,1,2016-04-17 12:17:14,1107.03,,1,,"b""b' This is true IMO.  at L22 should only be called while holding  .I think running into a concurrency issue is very unlikely because at L21 takes (and releases though)  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,2,2016-04-17 12:17:14,660.15,,1,,"b""b' Are we sure this is completely fixed? In particular", my reasoning is that key  :line30 might not be thread safe, since uses  ::line16, which is a global variable. It seems to me that any concurrent reading and writing will result in a race condition of one kind or another. I might well be wrong about this particular example," but I think we should be sure of the fact that and whatever it happens to call is thread safe.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,3,2016-04-17 12:17:14,16.82,,1,,"b""b' secp256k1_context_sign is safe to use without locking as it is immutableafter initialization (see  formore information).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,4,2016-04-17 12:17:14,6.37,,,1,"b'b"" The relevant documentation isBut it is not acceptable to ignore locking on mapWatchKeys simply because code above it takes and releases a lock. Making a race condition merely unlikely just means that the bugs it would introduce won\'t show up in testing. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,5,2016-04-17 12:17:14,1088.47,,,1,"b""b' Sipa and gmaxwell", thanks for clarifying.Gmaxwell, with the new change from yurizhykin," access to mapWatchKeys lies within the scope of a lock.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,closed,2017-07-22 09:32:28,1270.0,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,7901,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,opened,2016-06-05 19:54:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,title,2016-06-05 19:54:07,00:00,,1,,"b""b' Backport leveldb build integration to 0.12'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,body,2016-06-05 19:54:07,00:00,,1,,"b'b"" This is a cherry-pick of a4625acb with minor conflictresolution. Conflicts:  #  leveldb: integrate leveldb into our buildsystem leveldb\'s buildsystem causes us a few problems:breaks out-of-tree buildsforces flags used for some toolslimits cross builds Rather than continuing to add wrappers around it"," simply integrate it into ourbuild.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,1,2016-06-05 19:54:07,180.53,,1,,"b'b"" I think NACK"," since this doesn\'t actually fix any bugs?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,2,2016-06-05 19:54:07,112.62,,1,,"b'b"" @luke-jr It allows building the 0.12 branch using VPATH builds.  That\'s a major convenience for me to be able to share the same  scripting between master and 0.12; I expect for others as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,3,2016-06-05 19:54:07,17.73,,1,,"b""b' Every feature is a convenience to someone.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,4,2016-06-05 19:54:07,10.7,1,,,"b'b"" Ok"," whatever.  I don\'t think I\'ve ever submitted a pull request here that didn\'t immediately run into weird objections.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,closed,2016-06-06 01:15:42,321.58,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,5,2016-06-05 19:54:07,297.23,,1,,"b'b"" This could be useful to keep the testing the same. However", out-of-tree build support needs more changes for proper support. There was #7925, and one is open even now:  #8133. Backporting just that commit is not enough.(but it\'s all just build system changes," I don\'t think it\'s very risky to backport this)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,6,2016-06-05 19:54:07,3.65,,1,,"b'b"" @jcorgan You don\'t need to close a PR because one person complains. Thingscan be discussed. We typically only backport bug fixes and soft forks to older releases"," butperhaps it makes sense to keep the build system compatible as well. I don\'thave a strong opinion here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,7,2016-06-05 19:54:07,178.07,,1,,"b""b' Agree with @sipa.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,reopened,2016-06-07 13:40:35,744.88,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,8,2016-06-05 19:54:07,272.53,,1,,"b'b"" If you think this is something you\'ll eventually merge", I have no problem working with @theuni to ensure any needed changes from 0.13 make it back into 0.12.  I\'ll go ahead and get #7925 added, and when #8133 is merged, that too. However, I won\'t waste my own or anyone else\'s time if this is not the direction you want to go," though I still find this useful enough for my own purposes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,9,2016-06-05 19:54:07,7.45,,1,,"b'b"" I\'ve added #7925 and #7944 to the backport.  It\'s not clear to me whether #7982 should also go here as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,10,2016-06-05 19:54:07,14.25,,1,,"b'b"" @jmcorgan I have no problem with backporting this and a few others to make life easier", but as @laanwj said, aiming to backport fully-supported VPATH builds is probably over-reaching, given that we\'re still cleaning up minor things in master. As for #7982, no," that shouldn\'t be backported as c++11 won\'t be a requirement for 0.12.x.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,11,2016-06-05 19:54:07,13.52,1,,,b'b\' I\\\'m a little confused thenif the backport is done properly," don\\\'t VPATH builds just come ""for free""?  In other words", is there some extra effort needed other than ensuring any leveldb-build related commits on master get cherry-picked appropriately?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,12,2016-06-05 19:54:07,110.3,,1,,"b""b' @jmcorgan The changes you have here should be enough for most basic VPATH builds", but there are several edge-cases that remain," mostly related to  stuff which we can live without in the backport.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,13,2016-06-05 19:54:07,101.83,,,1,"b'b"" Ok"," great. I\'ll do some testing and A/B comparison between the build artifacts created with and without this branch then.  Do you prefer to have this squashed or have the individual cherry-picks left in?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,14,2016-06-05 19:54:07,853.13,,1,,"b'b"" Let\'s leave those in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,15,2016-06-05 19:54:07,357.38,,1,,"b""b' Tested ACK (including GUI) 9462e79'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,closed,2016-06-28 14:05:17,24.7,2,14,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,16,2016-06-05 19:54:07,31.93,,,1,"b""b' Interesting. Is there any git wrapper that resets the author on cherry-picks?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,17,2016-06-05 19:54:07,48.97,,1,,"b""b' Not aware of one"," at least.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,18,2016-06-05 19:54:07,375.98,,1,,"b'b"" @theuni let me what additional master commits you think apply here EDIT: I\'m already going through #8133 to see what applies and will cherry-.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8148,closed,-,-,-,2,16,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,opened,2016-06-09 14:21:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,title,2016-06-09 14:21:06,00:00,,1,,"b""b' getbalance comment incorrect'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,body,2016-06-09 14:21:06,00:00,1,,,"b'b"" url This appears to not true at least in two cases", at least in regtest:You send funds to yourselfYou send funds to anyone with -spendzeroconfchange=0 For for first case, includes the zero conf change. In the latter case," it seems to differ by the fee amount and coinbase subsidy. Perhaps due to how it accounts coinbase values? I unfortunately don\'t understand the 2nd case well enough to make a proper edit to the comment. Is this known behavior? May be best to simply remove the line.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,1,2016-06-09 14:21:06,1161.17,,1,,"b""b' I think in time we need to get rid of all those different ways to get the balance.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,2,2016-06-09 14:21:06,12.77,,1,,"b""b' Agree", we should just remove the opts to rpc call and return a dict," such that the keys denote how the balance was calculated and the value denotes the balance. (Similar to the emoji chart in #7715.)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,3,2016-06-09 14:21:06,1062.83,,,1,b'b\' Hi," in NTumbleBit the ""Watch-only"" part of Core wallet is used for escrowed multisig timelocked coins", they are part of the total balance but not spendable until later.  So I saw @instagibbs mentioned this PR on IRC and out of curiosity I found that, from my wallet,"getbalance"" only shows balance of the ""Spendable"" coins, but ""getbalance * 1 true"" returns the true balance of the wallet.  Attached is a screenshot of the wallet:  ![getbalance]url  \''
bitcoin	8183	closed	4	TheBlueMatt	2016-06-09 14:21:06	17.45		+1		b'b\' Can we kill getbalance ""*"" for 0.14? It seems super broken (and is broken further by bumpfee, whether that makes it for 0.14 or not).\''
bitcoin	8183	closed	5	TheBlueMatt	2016-06-09 14:21:06	1233.42	+1			b""b' Oops, indeed, the 3rd parameter is include_watchonly this seems to be the only way to get balance of watchonly addresses, so even if we remove the accounts stuff some part of it needs to stay.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,6,2016-06-09 14:21:06,11.5,,1,,"b""b' Can we make an alias for  "," and use the old algorithm for  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,7,2016-06-09 14:21:06,61.05,1,,,"b'b"" +1 for @sipa\'s idea...  i think the question is whether its a bit late to be mucking around with this for 0.14 and risk something accidentally being worse""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,8,2016-06-09 14:21:06,53.28,,1,,"b'b"" After further review", I\'m not sure there was any further regression in 0.14 even with #8456, so lets just fix this properly for 0.15, but perhaps throw an even bigger warning on it for 0.14?  I\'d suggest also making simple new RPC\'s for and ," similar to the existing  . ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,9,2016-06-09 14:21:06,988.33,,1,,"b""b'  The getwalletinfo RPC returns a dict with balance", unconfirmed balance," and immature balance. Maybe we should deprecate getbalance and getunconfirmedbalance RPCs in favor of this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,closed,2018-03-06 19:05:42,284.6,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,reopened,2018-03-06 19:06:12,0.5,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,10,2016-06-09 14:21:06,46.03,,1,,"b""b' closing this since accounts are getting nuked'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,closed,2018-08-27 19:48:57,42.75,3,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8183,closed,-,-,-,3,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,opened,2016-06-22 07:38:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,title,2016-06-22 07:38:31,00:00,,1,,"b""b' [GUI] QT 5.7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,body,2016-06-22 07:38:31,00:00,,1,,"b'b"" Opening an issue to track potential QT5.7 improvements"," so that comments don\'t get lost on closed PRs. QT 5.7 has been [released]url  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,1,2016-06-22 07:38:31,1151.95,,1,,"b'b"" Qt 5.6.1 no longer builds on OS X with Xcode 8. A fix could mean a bump to 5.6.2"," or it could be worth patching if we\'d rather move straight to 5.7.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,2,2016-06-22 07:38:31,112.7,1,,,b'b\' @fanquake We only manage dependencies for gitian, which doesn\\\'t seem to have a problem. What dependencies people use when building themselves is outside of the project\\\'s scope, except for minimum dependencies," which is currently Qt 4.8. While it will hopefully make sense to bump the minimum Qt dep ""soon""*", I doubt 5.7 will be practical for a while: Debian stable is at 5.3. \\\\* Uhh, unless I\\\'m mistaken, does RHEL really not have _any_ Qt5 yet? :(\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,3,2016-06-22 07:38:31,100.08,,1,,"b""b' I think the depends system should work outside of gitian as well. Maybe not on every exotic distro"," but accepting patches that make the depends build system more portable is desirable imo.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,4,2016-06-22 07:38:31,6.73,,,1,b'b\' It\\\'s also the recommended way to do non-gitian cross-compiles, so it\\\'s nice if it works with other (versions of) toolchains as well. Of course there is a limit to this," as there are tons of broken and old toolchains around that we can\\\'t support. But if someone submits a compatibility patch ""we only support gitian"" is no reason to reject it.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,5,2016-06-22 07:38:31,186.5,,1,,"b'b"" Ah"," didn\'t think of that scenario.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,6,2016-06-22 07:38:31,1002.47,,1,,b'b\' QT 5.7.0 is now the default qt5 install via [brew]url  on OS X," it\\\'s currently failing compilation with ""Qt requires C++11 support"".  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,7,2016-06-22 07:38:31,885.85,,,1,"b'b"" @fanquake How do you keep beating me to the punch? :) Was about to report this. My workaround for now is to use to go back to 5.5", which seems to compile without issues. I don\'t know offhand if this is because I did a earlier," which led to  showing up when running  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,8,2016-06-22 07:38:31,322.38,,1,,"b'b"" @fanquake hmm"," looks like the issue there is OBJCXX not using the c++11 flag. I\'m not sure about the cleanest fix for this. Does this quick patch solve the problem?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,9,2016-06-22 07:38:31,426.73,,1,,"b'b"" @theuni That seems to do the trick", compiling works now. Can this be PR\'d as a quick fix," or would you prefer something different?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,10,2016-06-22 07:38:31,10.53,1,,,"b'b"" @fanquake Hmm", let\'s think on it for a day or two. The issue is this: If the osx compiler in the future defaults to a higher std version (c++14/c++17), everything else will be compiled that way, while the .mm\'s are hard-coded to c++11. g++ 6.1+ already does that, so if someone has installed a recent g++ from brew, this will cause issues. Ideally," ax_cxx_compile_ would export OBJCXX as well. We might be better off  that change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,11,2016-06-22 07:38:31,574.25,,1,,"b'b"" @theuni i struggled with this problem today.  your patch fixed it"," but we should PR some kind of fix so people don\'t keep running into this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,12,2016-06-22 07:38:31,359.03,,1,,"b""b' See #9169. Afaik"," that should be future-proof against  compilers that have started switching to different std versions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,closed,2016-11-16 09:01:49,83.3,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,reopened,2016-11-16 09:02:17,0.47,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,closed,2017-01-15 05:43:28,1241.18,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8237,closed,-,-,-,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,opened,2016-06-23 14:34:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,title,2016-06-23 14:34:43,00:00,,1,,"b""b' ASLR seems not to be working as it should on Windows'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,body,2016-06-23 14:34:43,00:00,,,1,"b""b' Had an interesting exchange on twitter today re: Windows security: url  Seems that is not enough and:Something called is necessary for (secure) ASLR on 64-bit.Standard  flags of mingw-w64 prevent ASLR from actually being used"," due to lack of an executable relocation table.Rust worked around some mingw-w64 ASLR bugs here url  and url  (ASLR on Windows breaks thread-local variables) At the least it should be verified using a debugger or something like sysinternals that the base address changes every invocation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,1,2016-06-23 14:34:43,40.35,,1,,"b""b' Apparently to enable high-entropy ASLR [the image-base also needs to be set above 4GB]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,2,2016-06-23 14:34:43,81.07,,,1,"b'b"" I\'ve checked using Process Explorer and VMMap on Windows 10", and it looks like the windows executable is always loaded at the same offset:for the 32-bit versionfor the 64-bit version This is not the base address specified in the .exe (0x400000)," but it doesn\'t seem randomized either.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,3,2016-06-23 14:34:43,442.53,,1,,"b'b"" You can easily check whether an executable has ASLR enabled by doing where dumpbin is a program that comes with MSVC. Ideally you should see something like the following in the output: If only you could use msvc to compile the code"," then you\'d have all that by default.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,4,2016-06-23 14:34:43,604.6,,1,,"b'b"" That just checks the header bits (the same as our security check script already does using  ). It does not actually check whether the address space is randomized in practice", which I did by checking the memory maps at runtime.You can use MSVC to compile the code. There\'s nothing about the code that should be gcc+clang specific (and if it is, that should be fixed). However that doesn\'t help for releases as they need to be able to be built from source deterministically (with gitian). Using a closed source," not freely redistributable compiler is out of the question for that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,5,2016-06-23 14:34:43,947.77,,,1,"b""b' I can confirm that on Windows x64 a bitcoinprocess built from source on WSL is benefiting from ASLR.  Method used to confirm (note that two separate tools are used VMMap and WinDbg to provide additional confidence):  1. Start bitcoin-", 2. Open VMMap and select the bitcoin-qt process, 3. Click on the Image Type and note virtual addresses of certain modules, e.g.   0x190000 f:\\\\temp\\\\bitcoin  0x7FFA06190000 c:\\\\windows\\\\system32\\\\kernel32.dll   0x7FFA038F0000 c:\\\\windows\\\\system32\\\\ws2_32.dll 4. Capture a memory dump of the process using Task Manager->Right Click Process->Create Dump File, 5. Open dump file in windbg, 6. Use lm to list loaded modules and confirm addresses are the same as VMMap,  00000000 01fd4000 bitcoin_qt (deferred)  00007ffa 0623e000 kernel32 (deferred)   00007ffa 0395c000 ws2_32   (deferred)  Now reboot Windows, since ASLR will only reset the module addresses for a process after each OS restart," and repeat the above steps:  VMMap results:  0x820000 f:\\\\temp\\\\bitcoin 0x7FF9D1B00000 c:\\\\windows\\\\system32\\\\kernel32.dll  0x7FF9D18D0000 c:\\\\windows\\\\system32\\\\ws2_32.dll  WinDbg results:  00000000 02664000 bitcoin_qt (deferred) 00007ff9 d1bae000 kernel32 (deferred)   00007ff9 d193c000 ws2_32   (deferred)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,6,2016-06-23 14:34:43,685.25,,1,,"b'b"" Hi", For what it\'s worth, I submitted a patch that fixes the issue on  side: url (Should you want a patch that applies cleanly over binutils 2.31.1 tarball, there\'s also one here: url Hopefully that will be of use :)  edit: Yeah so it makes readpe very happy as far as aslr is concerned, but windows can\'t launch the resulting binary," so... oops.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,7,2016-06-23 14:34:43,41.32,,,1,"b'b"" @chouquette Thanks!  I think this can be closed", now that we\'re building on bionic," is enabled. See #13764.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,closed,2018-07-30 13:57:40,1402.95,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,8,2016-06-23 14:34:43,6.5,1,,,"b'b"" I doubt it is fixed", the patch I proposed is breaking the binaries, and AFAIK it hasn\'t been fixed upstream in another way.  Unless your executable has some explicitly exported symbols, the relocation table will be missing, and this will cause the executable to be flagged with  ," so Windows won\'t enable ASLR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,reopened,2018-07-30 14:16:15,18.58,1,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8248,open,-,-,-,1,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,opened,2016-06-26 13:35:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,title,2016-06-26 13:35:29,00:00,,1,,"b""b' libressl is detected even if openssl is selected on openbsd w/ 0.11'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,body,2016-06-26 13:35:29,00:00,1,,,"b'b"" url  was not merged into 0.11 and ./configure aborted due to detecting libressl even though I\'d installed and pointed ./configure to openssl (by abusing \'s pkg-config detection in my case though setting SSL_(CFLAGS|LIBS) would have the same effect).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,1,2016-06-26 13:35:29,36.9,,1,,"b""b' If #6732 qualifies as bugfix"," you can try to backport it and open a pull'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,2,2016-06-26 13:35:29,202.2,,1,,"b'b"" @MarcoFalke It doesn\'t. 0.11 cannot work with LibreSSL. @ChoHag I don\'t think we have any BSD devs on the project. Care to contribute more information  a fix?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,3,2016-06-26 13:35:29,302.92,,1,,"b""b' Since BIP66 I am much less worried about LibreSSL vs OpenSSL"," though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,4,2016-06-26 13:35:29,690.68,,,1,"b'b"" I agree"," since OpenSSL is no longer used in consensus there\'s no strong reason not not just use libressl.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,closed,2016-06-27 10:19:47,1244.3,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,reopened,2016-06-27 10:33:41,13.9,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,5,2016-06-26 13:35:29,26.07,,1,,"b""b' Oh so it refuses to configure with libressl? Ok", yes," definitely backport #6732'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,closed,2018-03-06 21:43:28,669.78,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8269,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,opened,2016-06-28 14:06:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,title,2016-06-28 14:06:09,00:00,,1,,"b""b' Mempool DoS risk in segwit due to malleated transactions'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,body,2016-06-28 14:06:09,00:00,,1,,"b'b"" Noticed this in my code review: url  Basically it looks like an attacker may be able to send nodes transactions with malleated witness data", which we don\'t consistently mark as possibly corrupted in AcceptToMemoryPool(). Result would be those txids being added to recentRejects, messing up propagation. That said, I haven\'t actually tested this yet; about to go off to a conference," so if someone else wants to confirm for me that\'d be much appreciated! Or if I\'m wrong you\'re welcome to all laugh at my expense. :) CC: @sdaftuar @sipa ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,1,2016-06-28 14:06:09,60.92,,1,,"b""b' Looks like in addition to this problem"," there are several other similar issues where being given the wrong witness could blind a node to a transaction:sigops checks (both the overall sigops check as well as the bytes-per-sigop check) sizereplace-by-fee logic'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,2,2016-06-28 14:06:09,477.55,,1,,"b'b"" Hmm", that\'s a reasonably long list. I know we spoke a bit about how a wtxid-based mempool could work; might be worthwhile writing some of that down for sake of reference," and figuring out what it\'d look like if we released segwit as-is and then added that on later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,3,2016-06-28 14:06:09,341.32,1,,,"b'b"" @petertodd", if the mempool and rejects filter worked based on wtxid, would INV packets also be updated to work based on wtxid? If not, the rejects filter would be useless since the node needs to know to not re-request rejected txs that are listed in INVs (which only use txid). There might still be a solution here to avoid changing the p2p protocol and mempool. The one I\'m thinking of: if the check fails, do a contextual check on the on the tx to verify that the witnesses are actually redeeming witness program coins. If they\'re not, ban the peer but do _not_ add the txid to the rejects filter. Maybe do this for every failure before it gets to the contextual checks. Once it hits the contextual checks in the mempool, AreInputsStandard could check to make sure witnesses are redeeming witness program coins before continuing. Not ideal, but maybe good enough in practice. edit: Hmm," nevermind my idea. I guess an attacker could still mutate real witness transactions without changing the txid. A wtxid mempool+inv-packets might be the only solution. This is rough.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,4,2016-06-28 14:06:09,405.0,1,,,"b'b"" @chjj I hadn\'t written it up yet", but this is what I concluded as well.  Post-segwit, the fee rate check that we perform to determine whether a transaction might be able to enter the mempool can fail, without us being able to tell whether the txid is permanently bad -eg for all you know there exists some slightly smaller witness which causes the feerate to be just high enough to make it in to the mempool. As I think the fee rate check is far and away the most valuable thing to be caching  in  , either we have to scrap that performance improvement, or maybe rework mempool acceptance to not perform these checks until after scripts have been validated (not sure how feasible this would be), or somehow remember and request transactions based on what we remember about the particular witness we previously evaluated.  This last approach -reworking the p2p-layer to be based on wtxid\'s when upgraded peers communicate -seems the most logical to me," but others may have a different view?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,5,2016-06-28 14:06:09,43.87,1,,,b'b\' Some ideas (based on an IRC discussion yesterday):1. Switch to a wtxids based , as well as wtxid-indexed mempool, relay pool, and p2p logic.2. Relay resource cost information along with invs (fees, size, sigops). This would allow the receiver to decide ahead of time whether to accept a transaction, removing this as reason for entering the rejection cache (making it much less needed).3. Alternatively, extend BIP133 (feefilter) to have mandatory behaviour. This effectively does the same as (2)," except the sender is responsible for filtering ahead of time.4. Remove the ""invalid witness does not cause insertion in rejectioncache"" rule entirely. This would simplify the code a lot", and (with the current protocol) does not allow an attacker to do anything they can\\\'t do already (independent from segwit), namely preventing a single peer from hearing about a transaction before it confirms. The rule does not work when transactions have intentionally malleable witnesses anyway.5. Verify all received transactions fully (assuming we requested them), even if we know we won\\\'t accept them due to feerate limits. This would allow us to determine conclusively whether the transaction was invalid (in which case we should never ask for it again) or malleated (in which case we should ban the node that sent it, but ask for it again from other peers). This has been suggested long before segwit as a means to detect other DoS attacks. Since by the time we get this option we\\\'ve done most of the work already anyway (bandwidth was wasted, and UTXO entries were retrieved from the database), doing the actual script validation is not a huge amount of work anymore. My preference is initially just (4), and perhaps (3) and (5) at some point as orthogonal optimizations. Things like (1) and (2) can be incorportated in a future reworked relay mechanism, perhaps one that works based on mempool synchronization rather than individual transaction relay. I expect (4) to be the most controversial option, but it is also the only one that actually simplifies implementation.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,closed,2016-07-14 06:21:28,975.32,3,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,6,2016-06-28 14:06:09,21.63,1,,,"b""b' Oops", this should be reopened," as #8312 ended up just being a workaround for 0.13.0 and not a fix for segwit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,reopened,2016-07-14 12:39:47,378.32,4,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,7,2016-06-28 14:06:09,381.53,,1,,"b'b"" This strikes me as problematic", as it seems like it\'d be very straightforward for an attacker to harm transaction relay across the network by appending junk witness data, causing a transaction to fail to propagate.  It only requires one connection slot to many peers to cause this kind of failure (as opposed to announcing but not delivering a tx, which requires at least taking up numerous connection slots of a peer to be effective, since we try to request a given transaction several times before giving up -also this p2p logic could be improved, say by preferring tx downloads from outbound peers, or disconnecting nodes that have high tx-withholding rates, etc). (3) seems fine in concept, but insufficient to address this issue by itself. (2) might be sufficient now, and may be a reasonable change in our current environment, but it seems to me like there might at some point be a gap between what we announce with the inv and what we use for policy limits, and having to adapt the p2p layer to adjust for policy changes seems like a bad road to go down.  (For instance, if we were to impose a policy rule on the size of the witness stack, then this would be insufficient.) (1) seems like the most obviously correct solution to me, as it directly addresses the issue (namely, whether we have processed the same data before), and is analogous to what we do pre-segwit (use a tx identifier that commits to all the tx data).  (5) seems like it might also be a reasonably robust solution, but with the wide range of scripts now permitted I don\'t have an intuition for whether this could be problematic as a potential CPU-DoS issue, and there\'s an extra mental leap regarding transactions with intentional malleability (no idea if such things exist on the network today though), that makes it slightly harder to reason about. So I\'d propose we do (1)," even though it\'s a bit of a bigger change at the p2p level.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,8,2016-06-28 14:06:09,1129.63,,1,,"b""b' From the august 4 2016 IRC meeting logs url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,9,2016-06-28 14:06:09,294.85,1,,,"b'b"" @sipa So I believe that after #8525", this particular issue has now been addressed, agreed? The remaining items suggested would be optional improvements:[ ] Make feefilter mandatory[ ] Fully validate txs so we can punish peers who send us invalid stuff. If we want to do the first thing, I think it\'d make sense to draft a BIP update to feefilter that details how this would work," and announce it on the mailing list to get feedback in advance of deployment. I think the second thing (fully validating transactions in general and disconnecting bad peers) is something being considered for a future release. See #8593.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,10,2016-06-28 14:06:09,1408.73,1,,,"b""b' @sdaftuar I think 1c0df59 and 9199ff2 in #8499 will also help. They will protect any P2WPKH and canonical multisig P2WSH from malleation attack. #8593 is a long term goal when we have better sighashing protection'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,closed,2017-02-11 11:35:40,1375.88,6,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,11,2016-06-28 14:06:09,180.25,,1,,"b'b\' @laanwj Is this intentionally still under ""Current issues""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8279,closed,-,-,-,6,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,opened,2016-07-11 13:11:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,title,2016-07-11 13:11:51,00:00,,1,,"b""b' Consensus: Rename: Move consensus code to the consensus directory'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,body,2016-07-11 13:11:51,00:00,,1,,"b'b"" It seems to me that version.h shouldn\'t be used by libconsensus", so I left that out. is not used by libconsensus (see #7820 ), also left out of the rename for now. Although pow.o and versionbits.o still depend on chain.o (dependent on storage) and can\'t be moved to the consensus package, they can be moved to the directory already, so they are moved. Although @laanwj believes that the best time to do this kind of refactoring would be right after forking 0.13," I believe that doing it right before has negligible risks and would simplify future backports of consensus code to the 0.13 branch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,1,2016-07-11 13:11:51,111.4,,1,,"b""b' utACK 1e1db2f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,2,2016-07-11 13:11:51,1299.05,,1,,"b""b' Updated adding utilmoneystr", which I forgot will be needed in libconsensus for this line: url (although if many people agree with me," I would prefer to keep it out and just print satoshis).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,closed,2016-07-13 13:21:07,9.27,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,reopened,2016-07-13 13:25:55,4.8,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,3,2016-07-11 13:11:51,240.48,,1,,"b""b' ACK c078fd1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,4,2016-07-11 13:11:51,19.6,,1,,"b'b"" I really don\'t think that we should be moving everything that libconsensus is code-dependent on into the directory.  That does not help clarity of the code base. Things like serialization and basic data structures in probably deserve to be their own library"," which libconsensus links against. Moving them all into the consensus directory doesn\'t help IMHO.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,5,2016-07-11 13:11:51,232.57,,1,,b'b\' I\\\'m all ears for suggestions on other internal packages for the consensus one to depend on besides crypto and libsecp256k1. I think this approach does help the clarity of the codebase by explicitly putting together all the files included (or that are planned to be included) in the same building package (consensus). For example," when I ask ""please don\\\'t include this header from a consensus file""", it would simplify things (not everybody looks at ). Also if we plan for libconsensus to become its own repository eventually, I see this as the most straightforward path. Some people on IRC have expressed that maybe there could be some intermediary libraries that both libconsensus and bitcoin core depend on. So it seems there\\\'s mixing feelings about this and in any case this can be done at any time (in fact, it was phase 4 in my newer published plan). Therefore I\\\'m closing the PR.  Regarding the separation of utilmoneystr in a different commit, it was because I believe it shouldn\\\'t be part of libconsensus. At least @sipa seems to agree with me there, so at some point before exposing verifyTx in libconsensus I will create a PR removing the one line dependency and ping you both. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,closed,2016-07-14 20:54:57,449.03,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8328,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,opened,2016-07-12 04:36:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,title,2016-07-12 04:36:52,00:00,,1,,"b""b' Block postprocessing is (relatively) slow.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,body,2016-07-12 04:36:52,00:00,,1,,"b""b' On a system with high uptime and absurdly large dbcache and maxsigcachesize settings the time to remove conflicts is now approximately 50% of the time to process a new block. This matters for miners time to switch to the new block. Example:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,1,2016-07-12 04:36:52,119.25,,1,,"b""b' I believe that #8313  #7946 may help here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,2,2016-07-12 04:36:52,930.48,,1,,"b""b' This is measured on a bitcoind without a wallet so #7949 wont help"," I will give #8313 a try.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,3,2016-07-12 04:36:52,1433.8,,,1,"b""b' @pstratem So"," have you tried it with #8313? Would be great to know if it makes any difference.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,4,2016-07-12 04:36:52,195.67,,1,,"b'b"" Appears to have improved things significantly. (Ignore the total numbers they\'re skewed by the mempool not being full at start)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,5,2016-07-12 04:36:52,882.7,,,1,"b""b' @eklitzke might find this interesting'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,6,2016-07-12 04:36:52,39.6,,1,,"b""b' Set your dbcache smaller.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,7,2016-07-12 04:36:52,142.15,,1,,"b""b' @pstratem have you retried this since #8515 was merged?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,closed,2018-03-28 19:00:31,863.65,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,reopened,2018-03-28 19:04:29,3.97,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,closed,2019-06-08 01:59:25,414.93,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8333,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,opened,2016-08-05 17:16:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,title,2016-08-05 17:16:23,00:00,,1,,"b'b\' [WIP] ""Lockfree"" Checkqueue Implementation\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,body,2016-08-05 17:16:23,00:00,1,,,"b'b"" This commit introduces a new Checkqueue that should have much better performance than the previous one. Lockfree in scare quotes because the whole checkqueue doesn\'t meet the strict academic definition of lockfree", but it does have lockfree operations. The PR includes 1 new consensus rule, some refactoring of the checkqueue interface, reimplementation of the checkqueue, and tests, and one optional optimization (could be PR\'d separately). Please see url  for more information. edit: forgot WIP label, needs more testing and review. Opening PR for that purpose.edit edit: removed WIP label, terminology confusion, it is indeed ready for testing.# Todo[x] Stronger Testing Suite[x] Figure out better wakeup mechanism[x] Add Benchmarking to the old checkqueue compatible with the new one.[x] cross platform testing (ARM, 32 bit,"...)[x] remove static asserts for lock-free ness""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,1,2016-08-05 17:16:23,60.67,,1,,"b""b' Pull tester failure seems to be semi-related to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,2,2016-08-05 17:16:23,87.5,,1,,"b'b"" @JeremyRubin I don\'t think so. segfaults in Travis with this PR (and all rpc tests fail). In #8425 there is just a failure in one test.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,3,2016-08-05 17:16:23,71.35,,1,,"b""b' @sipa So when I run tests one by one they seem to not fail; when I run them using rpc_ they do fail. Let me know if you have any ideas why this might be the case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,4,2016-08-05 17:16:23,14.73,,1,,"b""b' @JeremyRubin You can try to mimic running them by one by one.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,5,2016-08-05 17:16:23,38.0,,,1,"b'b"" @sipa I\'m flattered that you tagged me (always an honor to be tagged byyou or any other big name in Bitcoin dev)"," but this isn\'t my pullrequest.  :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,6,2016-08-05 17:16:23,206.92,,,1,"b'b"" Thanks @MarcoFalke. Running with all tests pass"," except for rawtransactions which failed with  There\'s nothing in the tmpdir. Rerunning rawtransactions alone (many times) it didn\'t fail so I think it\'s random failure as seen in url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,closed,2016-08-08 22:29:42,313.32,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,reopened,2016-08-08 22:29:44,0.03,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,7,2016-08-05 17:16:23,1298.92,1,,,"b'b"" Randomly noting this won\'t interfere with #8498 at all (well"," probably in obvious-to-resolve ways).utACK main.o is all I can give for now. I heard %10 to 20% benchmark  to benchmark if someone provides dumbed down instructions or they exist already and I missed them. ping @TheBlueMatt ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,8,2016-08-05 17:16:23,21.37,,1,,"b""b' @jtimon in an hour or less i should have a refactored version which has benchmarks added as commit one so you can test benching on all versions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,9,2016-08-05 17:16:23,101.32,,1,,"b'b"" @laanwj I\'d like to get url  and some variant of url  merged if possible before I PR the new version"," otherwise when I push the cleaned up version I won\'t pass tests due to timeouts. You can see the restructured version here if anyone wants to review right away: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,10,2016-08-05 17:16:23,12.28,,,1,"b""b' Some benchmarks from the new version BTW: Before After:  CCheckQueueSpeed is a trivial fake job (benchmark slightly unfair", as the emplacement vs resize call probably costs the time). New code takes 70% of the time. CCheckQueueSpeedPrevectorJob is a job that contains a prevector that (deterministically randomly) is either direct or indirect. My code takes 50% of the time. edit: just noting," there was a small performance bug (using wrong form of emplace_back) and with that the vector test is at 20% :) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,11,2016-08-05 17:16:23,65.82,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,12,2016-08-05 17:16:23,668.58,,1,,"b'b"" @JeremyRubin What\'s the status of this?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,13,2016-08-05 17:16:23,50.72,,,1,"b'b"" @fanquake I think I have a rebased version of this laying around somewhere. Have been doing experimentation to see if there\'s something simpler (read: more reviewable) that accomplishes much of the same. I\'ll try to see if there\'s a reasonable version around. If I recall correctly", most of the benefit of the faster CheckQueue was not observable without the cuckoocache," so I focused on that first (lock free queue doesn\'t matter much if all jobs lock).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,closed,2017-03-07 12:06:12,816.47,2,9,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8464,closed,-,-,-,2,9,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,opened,2016-08-06 01:48:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,title,2016-08-06 01:48:20,00:00,,1,,"b""b' [POC] Introducing property based testing to Core'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,body,2016-08-06 01:48:20,00:00,,1,,"b'b"" This pull request is a proof of concept for introducting [property based testing]url  into Bitcoin CoreThis has been very useful for a Bitcoin library I\'ve been working on and thought it would be worthwhile to develop a POC for Bitcoin Core. The property based library I am using for C++ is called [rapidcheck]url  Here are the [docs]url This pull request currently contains [two properties]url  one testing generation and the other testing serialization symmetry for and  . These are rather trivial properties", but useful for illustrating the power of property based testing if there was a bug inside of Core. I want to solicit some feedback from developers if this is something that would actually be merged into Core. Eventually we could have a large library of [generators]url  that would allow us to quickly prototype, test," and reason about the behavior of new code added to Core. Here is an example of a [library of generators]url  (in Scala) that could give you a little more of an idea of what I am talking about.  Thoughts?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,1,2016-08-06 01:48:20,47.28,,1,,"b""b' This needs a  fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,2,2016-08-06 01:48:20,331.7,,,1,"b""b' I think this approach of testing is interesting and may render usefulfor bitcoin. The user guideurl mentions that the API is not finalized"," so it may be better tointegrate it via a subtree (maybe in /test)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,3,2016-08-06 01:48:20,2.13,,1,,"b'b"" I think this is useful. I\'m not very familiar with property based testing", but this seems to be something that would make sense for consensus and security critical projects. Some thoughts:the rapidcheck dependency should probably only be required if one passes  .I think you can remove the changes in and its header. If others also agree to take this into master," we should probably have a first logical slice of property based tests (maybe serialization). Needs rebase.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,4,2016-08-06 01:48:20,521.0,,,1,"b""b' @theuni Can you help here to decide if using depends is fine or a subtree would be cleaner? (I prefer a subtree per my above comment"," but I am not familiar with the build system. Input is appreciated)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,5,2016-08-06 01:48:20,18.62,,1,,"b'b"" I would probably need help with the build code to get it production ready. I plan to keep on adding properties to this pull request though when time permits. I\'m going to try and get around implementing fanquake\'s comments and figure out how to do the as per jonasschnelli\'s comment this weekend""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,6,2016-08-06 01:48:20,886.13,,1,,"b""b' @Christewart Do you need help to address the feedback from @jonasschnelli?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,7,2016-08-06 01:48:20,286.95,,1,,"b'b"" @MarcoFalke Yeah I\'m not really sure how to get that done""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,8,2016-08-06 01:48:20,997.6,1,,,"b'b"" I like this kind of testing-testing invariants on random test cases", and we use it extensively in libsecp256k1. It\'s one of the answers to my irritation with the way many of the unit tests in Bitcoin core have worked in the past: hard-coding the exact behavior.  Meaning that if you change anything, the tests all fail and you\'re left wondering if you broke something important or if the test was just mandating the behavior you were fixing. In either case, updating the test is often more work than the change.  Taking a dependency for it seems unfortunate; but I\'m not qualified to judge if it does snazzy things that make generating cases easy.  I have had bad experience with test frameworks in the past which had very high overhead making test cases that should have taken seconds take minutes, resulting in less testing.  I see in this one that it uses a excessively slow PRNG based on skein," which makes me a bit dubious-but if thats the only problem it would be easy to fix if we forked it (by replacing it with xorshift128+ or likewise). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,9,2016-08-06 01:48:20,685.9,,,1,"b'b"" It should also be noted that they way the test are currently written they tie in the [boost testing framework]url  if we add rapidcheck as a dependency and decide to remove boost", which #8670 suggests, we will have to rewrite these test cases to be independent of boost. In terms of speed, you would know more than I would about choosing PRNG. Rapidcheck currently defaults to running 100 test cases against every property you have specified. [You can configure this property to be higher or lower depending on the situation]url  I think it would make sense to configure this to lower value for local development, and a higher value for travis builds to try and exhaustively test our invariants. You can read more about configuration of rapidcheck [here]url  @jonasschnelli \'s comment above was interesting I thought, I\'m not super familiar with C++ build systems but only including the rapidcheck dependency if the flag flag was given seems to makes sense. I think the long term value add here is having a library of generators (for various protocol data structures) that we can use to test new protocol changes. I\'m going to be adding some properties about creating tx types in the coming weeks. To get an idea of what I\'m looking to add," you can look at some of the generators I have [created in bitcoin-s]url  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,10,2016-08-06 01:48:20,82.75,,,1,"b""b' Hmm"," looks like travis is failing to build rapidcheck here? Are you interested in rebasing and potentially fixing it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,11,2016-08-06 01:48:20,1305.32,,1,,"b""b' It appears there is a bug with gcc 4.8 that causes a problems with lambdas and parameter packs: url url url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,12,2016-08-06 01:48:20,1153.45,,1,,"b""b' Assigned 0.16"," as we might add gcc to depends by then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,13,2016-08-06 01:48:20,313.4,,1,,"b'b"" An update about commits 56edb65 and d97b980:  1. These commits [add generators for various scriptPubKey types]url  2. Using the script generators", I\'ve created [generators for various transaction types ]url  3. Using the transaction generators, I\'ve created new test cases specifying this invariant: If we use to create a transaction," it should always be valid when run through the interpreter. [Here]url  is the test cases  I\'m hoping this illustrates the power that property based testing can be used for once we you have a small set of primitive generators. You can keep building more and more complex data structures on these primitives and then specify invariants about various functions that use those data structures.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,14,2016-08-06 01:48:20,1162.03,,1,,"b""b' This is using a somewhat outdated version of rapidcheck from March [last year]url  Can this PR be updated to point to a newer version?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,15,2016-08-06 01:48:20,542.08,,,1,"b'b"" Very Strong Concept ACK. I use quickcheck a lot in Haskell land", it\'s amazing how many bugs it can catch," and with shrinking it can find minimal breaking test cases. I\'ll give this PR a spin soon.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,16,2016-08-06 01:48:20,131.27,,,1,"b'b"" @jb55 I am Chris_Stewart_5 on freenode. Feel free to ping. If you want to see something a little more interesting"," I am starting to use this pull request as the basis for testing Mark Friedenbach\'s BIP98/116/117 MAST bips. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,17,2016-08-06 01:48:20,1151.75,,1,,"b'b"" RE: url  I couldn\'t get the current depends build or Marco\'s build to work. RapidCheck install steps seem to be missing so the built rapidcheck tarball is completely empty. Following  changes fix the problem for me and also allow normal builds without RapidCheck to work: ca0dbbd64fba9d31d0ff88984529deb4b87229fc""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,18,2016-08-06 01:48:20,109.37,,,1,"b""b' @ryanofsky Thanks for the autotools fix! Will take a look soon'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,19,2016-08-06 01:48:20,1208.17,,1,,"b""b' I tested ca0dbbd64fba9d31d0ff88984529deb4b87229fc. Some notes:  * The dependency should be mentioned in (linux and windows) * The build still fails on travis"," due to the gcc bug  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,20,2016-08-06 01:48:20,25.32,,1,,"b""b' See url  for a version bump of rapidcheck  I think we can work around the gcc bug by building only when rapidcheck is explicitly enabled. I.e. implement something that does:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,21,2016-08-06 01:48:20,104.52,,1,,"b""b' Please see url  on how to disable rapidcheck by default. This should work around the travis issue (finally)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,22,2016-08-06 01:48:20,8.18,,1,,"b""b' If you like that commit"," you could submit a minimal pull request with only the depends changes and a minimal working rapidcheck example. Merging in baby steps tends to work better.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,23,2016-08-06 01:48:20,1425.27,,1,,"b""b' You should be able to solve the whitespace issues with clang-format: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,24,2016-08-06 01:48:20,21.45,,1,,"b'b"" @MarcoFalke I\'ve tried running the script before"," and I get this error: url I changed to as we want to run over the last 22 commits i\'m guessing? I think it is failing because a bunch of the files in this PR are new in the tree""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,25,2016-08-06 01:48:20,4.55,,1,,"b""b' What does say? Is it properly installed on you system?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,26,2016-08-06 01:48:20,711.9,1,,,"b'b"" Concept ACK"," ditto on @gmaxwell\'s comment regarding hard-coded behavior""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,27,2016-08-06 01:48:20,774.92,,1,,"b""b' Confirmed this works. Tested with: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,28,2016-08-06 01:48:20,440.53,,1,,"b""b' I believe the travis failure here is unrelated? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,29,2016-08-06 01:48:20,888.28,,1,,"b""b' The last travis run for this pull request was 113 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,closed,2018-07-21 17:30:09,941.82,2,22,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,reopened,2018-07-21 17:30:10,0.02,2,22,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,30,2016-08-06 01:48:20,15.38,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,31,2016-08-06 01:48:20,152.77,,,1,"b""b' @Christewart This is excellent work! Do you have time to rebase this and take it to completion"," or do you prefer if someone else takes over this work? It is too good to be left unfinished :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,32,2016-08-06 01:48:20,4.77,,1,,"b""b' Hi @practicalswift it seems like the consensus is moving to #12775 which is a subset of the PR. It includes just the build stuff and a subset of the tests in this PR. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,33,2016-08-06 01:48:20,15.23,1,,,"b""b' @Christewart Oh"," sorry! That one is rebased and nice! Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,34,2016-08-06 01:48:20,1153.53,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,35,2016-08-06 01:48:20,518.48,,1,,"b""b' Moving my review to #14430"," which along with #12775 was extracted from this. @Christewart should this be closed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,36,2016-08-06 01:48:20,129.45,,1,,"b""b' This was superseded by #12775 and #14430.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,closed,2018-10-10 02:39:46,549.6,3,27,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8469,closed,-,-,-,3,27,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,opened,2016-08-08 03:25:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,title,2016-08-08 03:25:09,00:00,,1,,"b""b' More granular debug'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,body,2016-08-08 03:25:09,00:00,1,,,"b'b\' This pull request has been shunk down to size with other changes now to be in separate pull requests. The change request here simply splits moves some of ""net"" debugging into ""net2""","block"" and ""tx"".  This is a cut-down version of #8728 which also seeks to make debug message conform to a style. Sorry for all the pull requests as a result of breaking this up, but I felt there was too much to it in it\\\'s previous format, and therefore was unlikely any of it would be merged.\''
bitcoin	8484	closed	1	sipa	2016-08-08 03:25:09	170.33		+1		b""b' Concept ACK'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,2,2016-08-08 03:25:09,3.33,,1,,"b'b"" Wouldn\'t need  (debugCategories) an update as well?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,3,2016-08-08 03:25:09,415.77,,1,,"b""b' Yes"," needs to be documented in option help.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,4,2016-08-08 03:25:09,707.27,,1,,b'b\' ok," will add a commit to update option help...  shall I list each debug string e.g. ""tx", tx2," tx3""? or is it better to show the level of granularity another way"," e.g. ""tx{",2,"3}"" or ""tx[1:3]""","tx[1-3]""...? not sure if there\\\'s a standard for denoting this sort of thing.\''
bitcoin	8484	closed	5	rebroad	2016-08-08 03:25:09	251.4		+1		b""b' @laanwj  now updated to show usage'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,6,2016-08-08 03:25:09,267.67,1,,,"b""b' On a slightly OT note can someone tell me how one gets notifications when someone comments on a pull request? My currently practice is to scan through my pull requests to see if comments have appeared"," but I suspect there may be a better way!!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,closed,2016-08-28 09:59:19,394.17,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,7,2016-08-08 03:25:09,114.7,,1,,"b""b' @rebroad You already have another pull request from the same branch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,reopened,2016-08-29 04:00:05,1080.77,2,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,8,2016-08-08 03:25:09,1195.37,,1,,"b""b' still testing. will re-open when more done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,closed,2016-08-29 07:30:59,210.9,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,reopened,2016-08-29 07:43:55,12.93,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,closed,2016-08-29 07:44:22,0.45,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,9,2016-08-08 03:25:09,16.67,,1,,"b""b' Can you please stop opening and closing this PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,10,2016-08-08 03:25:09,2.9,,1,,"b""b' @rebroad Just leave this open. You can do as much testing as you want locally"," but be sure to compile and run the tests before you push.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,reopened,2016-08-29 07:50:33,6.18,2,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,11,2016-08-08 03:25:09,1414.1,,1,,"b""b' Click on Details... url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,closed,2016-09-14 18:21:08,630.58,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8484,closed,-,-,-,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,opened,2016-08-10 22:35:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,title,2016-08-10 22:35:46,00:00,,1,,"b""b' In a wallet in pruned mode"," show balance of imported (watch only and active) addresses.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,body,2016-08-10 22:35:46,00:00,,1,,b'b\' If a user is not interested in the history (metadata) of his transactions,"importaddress"" and ""importprivkey"" don\\\'t require a wallet with pruned blockchain to download the whole blockchain again (the utxo set is enough). As I have checked, it is possible in pruned mode to import addresses but they will only show new incoming transactions not the last UTXO value. When this feature is available, it becomes possible in pruned mode to import the private keys of a paper wallet into a hot wallet.  I have first discussed this issue with experts on Reddit here: url  \''
bitcoin	8497	open	1	jonasschnelli	2016-08-10 22:35:46	787.47		+1		b'b\' But I think we should really use clear terms here.**""Pruned Blockchain""** is what we currently support in Bitcoin-Core with the option.**""Pruned wallet""** IMO is something that would remove old wallet transaction with the goal to increase the wallet load and displayer performance (currently not implemented in Bitcoin Core) This feature request is under the term ""Pruned blockchain"". I think it would be possible to use an initial balance calculated through the UTXO set. Although I\\\'m not sure if we want to support a such feature in Bitcoin-Core. Also the missing history could confuse users, it would lead to districting imported key during pruned blockchains, labeling them different on RPC as well as on the GUI level.\''
bitcoin	8497	open	2	laanwj	2016-08-10 22:35:46	14.05		+1		b'b\' I think this would be a useful feature. If the user doesn\\\'t have a need for history, then a scan over the UTXO set suffices to get the balance correct for an -only address. This is faster and works with a pruned block chain. Agree with @jonasschnelli on the clear use of terms. And please, don\\\'t all it a ""pruned wallet"," the word ""prune"" is already over-used in bitcoin-land (ultra-prune #1677", pruned blockchains, ....). And people, for fact," already call a blockchain-pruning Bitcoin Core instance a ""pruned wallet"". Let\\\'s find another name for limited-history wallets. BTW see also #5389.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,3,2016-08-10 22:35:46,89.02,,,1,"b'b"" Thanks a lot and I\'ll be looking forward for this feature! I agree"," wallet in pruned mode or limited-history wallet sounds already much better. Groeten uit Oegstgeest!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,4,2016-08-10 22:35:46,604.4,,,1,"b'b"" This new wallet feature would be perfect in combination with Jonas Schnelli\'s proposal: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,closed,2016-08-20 23:30:42,54.93,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,reopened,2016-08-20 23:32:12,1.5,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,5,2016-08-10 22:35:46,372.73,,,1,"b""b' I think this would be a desirable feature and would love to see it in a future release.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8497,open,-,-,-,0,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,opened,2016-08-24 06:54:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,title,2016-08-24 06:54:12,00:00,,1,,"b'b"" [WIP] Disconnect when a node doesn\'t offer the relevant services.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,body,2016-08-24 06:54:12,00:00,1,,,"b'b"" This pull does three things: A. It displays the version message before any disconnect logic", for  purposes. B.1. It disconnects when it encounters irrelevant services rather than unexpected services. For example, it might have expected BLOOM services or XTHIN services, but these should not be reasons to disconnect. The criteria for disconnection should be the same as for selection, i.e. nRelevantServices, which this pull now uses. It will still log unexpected services, out of curiosity. B.2. It now also make the disconnection conditional on irrelevant services only on OUTBOUND connections. i.e. it restore the functionality to allow clients to connect to us, e.g. SPV nodes. Previously the code did not appear to make the disconnection conditional on an outbound connection. C. It fixes an ambiguity in the code which led me to thinking that nExpectedServices were the services advertised by the node. They were\'nt, they were a subset when ANDed with the nRelevantServices, which made the 2nd commit redundant, and took away the ability to log when services are not as expected," which is now possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,1,2016-08-24 06:54:12,8.95,,1,,"b""b' No", the necessary services are determined before connecting. The code youare removing also does not disconnect whenever the services just differ -they must differ in one of the bits set in nServicesExpected. NODE_NETWORK right now encompasses both the ability to serve historicalblocks and the ability to relay new blocks. We should never make anoutbound connection to nodes that do not have NODE_NETWORK, so if we noticethat an IP we are connecting to actually does not offer it, we shoulddisconnect and try another peer that can give us what we want. In the future, there may indeed be a separation i  flags between theability to relay and the ability to serve old blocks, and we may choose tonot demand the old blocks capability in nExpectedServices anymore afterIBD," but that is still something that can be determined before connecting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,2,2016-08-24 06:54:12,17.92,,1,,"b'b"" Sipa beat me to it here", I was going to point out the same thing.  (And if you look up conversations about pruning it was quite clear that other nodes wouldn\'t make connections to those nodes-just that they\'d relay blocks to those they connected out to) Without first having a definition of what we\'re actually connecting to, we\'d risk wasting our precious outbound slots on peers that aren\'t even claiming to do anything useful at all for us," not a good call. W""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,3,2016-08-24 06:54:12,157.27,,1,,"b'b"" @gmaxwell I see what you are saying", and currently, there don\'t seem to be a shortage of NODE_NETWORK nodes that are contactable my node was easily able to connect to 16 of them within only a few minutes of starting, so yes," we don\'t need to scrape the barrel by connecting to non-NODE_NETWORK nodes yet. Perhaps this discussion is premature I do foresee a future where we might want to make better use of pruned nodes though. Can I go ahead and develop a pull request that allows pruned nodes to be entered into the address database but marks them as pruned?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,4,2016-08-24 06:54:12,10.8,,1,,"b'b"" To do so", you\'ll need a way to advertize on the network that you\'re avalidating and relaying node that does not serve historical blocks. Thatneeds a protocol change," and discussion on the mailing list.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,5,2016-08-24 06:54:12,638.78,,1,,"b'b"" I was hoping that further experience with pruning would help establish what the relevant service flags were.  I was also hoping that we\'d come up with some good schemes for communications bandwidth efficient fractional chain storage.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,6,2016-08-24 06:54:12,746.27,,1,,"b'b"" @gmaxwell Regarding bandwidth efficient fractional chain storage can you elaborate on what this is? It\'s not clear to me from the term itself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,7,2016-08-24 06:54:12,218.1,,1,,"b""b' @rebroad See here for example url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,8,2016-08-24 06:54:12,1139.7,1,,,"b'b"" @sipa @gmaxwell Ok", I have changed this pull to address the issues. It is now two commits as I felt this was appropriate given it achieves two things. Firstly, it displays the version message prior to any disconnection logic. Secondly, it disconnects when an outgoing connection discovered irrelevant (rather than unexpected) services, as I believe was the intention, using the nRelevantServices variable as this is designed for. It also logs when a node provides unexpected services, but as long as those unexpected services are still relevant, it does not disconnect as I can\'t imagine we would want this for example, just because you get a cherry on top of your cake doesn\'t mean you will want to throw away the cake. I hope the logic behind this is clear, but if not," please .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,closed,2016-08-28 07:58:17,64.08,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,reopened,2016-08-28 08:05:11,6.9,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,9,2016-08-24 06:54:12,20.47,,1,,"b'b"" NACK. This will prevent segwit nodes from ever connecting to non-segwit nodes", making a petitioning more likely. nRelevantServices is called that way because they\'re relevant. It is not called nRequiredServices. The reasoning is as follows: when selecting a peer to connect to, we pick based on their assumed services. Then we set the CNode::nServicesExpected based on that knowledge intersected with nRelevantServices. When the node later does not turn out to have all the flags in nServicesExpected, we disconnect, because apparently we did not connect to the node with the properties they claimed to have. This lets us move the decision criteria to the selection loop," rather than decide ad-hoc after connecting.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,10,2016-08-24 06:54:12,1311.27,1,,,"b'b"" ok"," I\'m misunderstanding the code as it is. apologies for this... ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,closed,2016-08-29 06:03:43,1318.53,3,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8571,closed,-,-,-,3,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,opened,2016-08-24 14:09:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,title,2016-08-24 14:09:53,00:00,,1,,"b""b' 0.13.0 is no longer compatible with OSX 10.7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,body,2016-08-24 14:09:53,00:00,,,1,"b""b' Reported by rancor on IRC #bitcoin ", reproduced on my 10.7VM.Works fine on 10.8. fails, ... there is no log output which means," or are failing. Either we analyze and fix it for 0.13.1 or we drop support for OSX 10.7.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,1,2016-08-24 14:09:53,2.82,,1,,"b""b' 10.7 is our build minimum target: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,2,2016-08-24 14:09:53,332.83,,,1,"b""b' Hmm", I just happened to be working on adding a debug symbols output for gitian," so I have a 0.13 gitian build handy. This actually makes for a good test of that process as well. Mind throwing this on the vm and trying to get a backtrace? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,3,2016-08-24 14:09:53,676.42,,,1,"b""b' @theuni That build worked on my 10.7VM!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,4,2016-08-24 14:09:53,1153.05,,,1,"b""b' @jonasschnelli Do we need to follow up here for 0.13.1"," or does the test build now work fine?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,5,2016-08-24 14:09:53,239.77,,1,,"b'b"" Closing. Will make sure I\'ll always test release-candidates on OSX 10.7.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,closed,2016-09-27 06:14:46,964.88,0,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,6,2016-08-24 14:09:53,475.32,,1,,"b""b' 0.13.1 rc2 does not run on OSX10.7ping @theuni  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,reopened,2016-10-21 14:10:05,475.32,0,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,7,2016-08-24 14:09:53,1.42,,,1,"b""b'   seems to run fine","... only failed during init.Runs fine on 10.8.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,8,2016-08-24 14:09:53,404.17,,1,,"b""b' Hmm"," having a look.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,9,2016-08-24 14:09:53,1324.98,,1,,"b""b' Finally reproduced. Tracking it down.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,10,2016-08-24 14:09:53,673.53,,,1,"b'b"" Ok", bad news. I ended up in the bowels of osx, but I have somewhat of a handle on this now.In past releases (pre-0.13) we always used libstdc++, which works everywherelibstdc++ contains only minimal c++11 support. No atomics, for example.libc++ was introduced in 10.7 and made the default in 10.9. It\'s the only option for full c++11 support. From what I can tell, 10.7\'s runtime is buggy in several ways. Or it may be that there are some undefined conditions that it reacts to differently in 10.8+. Here\'s an example of one that crashes in 10.7 but works elsewhere. This is a simplified version of an actual failing test of ours: It appears as though there are several issues relating to text conversion and localization. I didn\'t manage to track down the typeinfo bug that @jonasschnelli pointed out above, but I assume it comes from a small abi difference in 10.8+. I tried all kinds of build combinations, but we\'re too entrenched in c++11 to make libstdc++ work. I\'ve also been able to confirm the above by grabbing my 10.11 libc++ dylibs and forcing 10.7 to use them. These are runs of the test_bitcoin from gitian, on a 10.7 vm: And the same binary, but with a hijacked libc++/libc++abi: bitcoin-qt works fine that way too. So... I don\'t see any good solution here. 0.13.0 must be broken as well, so it wouldn\'t be a regression to release without 10.7 support. The only viable option would be to package a known-good libc++/libc++abi in the dmg, which is commonly done," but has a number of implications for us this late in the release cycle (namely signing related).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,11,2016-08-24 14:09:53,7.53,,,1,"b'b"" I\'m fine with bumping to 10.8 as min OSX version (4 major versions", we are at OSX 10.12).We should just make sure," you can\'t start it on OSX10.7. I think there is some plist magic available... will have a look.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,12,2016-08-24 14:09:53,1.13,,1,,"b""b' I guess... ... should work (along some doc upgrades).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,13,2016-08-24 14:09:53,6.02,,1,,"b""b' Works for me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,14,2016-08-24 14:09:53,162.0,,1,,"b""b' can this be closed now?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,15,2016-08-24 14:09:53,5.5,,1,,"b""b' @btcdrak not quite. Needs a mention in the release notes", as well as some minor doc updates," such as [here]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,16,2016-08-24 14:09:53,1256.08,,1,,"b""b' Closed via #9022'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,closed,2016-10-27 06:12:27,962.37,0,11,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8577,closed,-,-,-,0,11,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,opened,2016-08-27 19:54:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,title,2016-08-27 19:54:06,00:00,,1,,"b""b' p2p sends local-scope addresses when IPv4 is behind NAT'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,body,2016-08-27 19:54:06,00:00,1,,,"b""b' Wireshark tells me I am sending my local-scope IPv6 address"," when connecting over IPv4 (behind NAT)... :/ Context: #8594'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,1,2016-08-27 19:54:06,1096.23,,1,,"b'b"" Added privacy tag. Leaking internal addresses behind a NAT is a serious privacy issue"," see url  .Aren\'t local-scope addresses based on the MAC address? Ouch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,2,2016-08-27 19:54:06,1226.05,,1,,"b""b' @luke-jr Is this an RFC4862 address (fe80::/64) ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,3,2016-08-27 19:54:06,12.27,,1,,"b'b"" Hmm", no. I don\'t seem to actually have the address on any of my interfaces. Begins with fd87. Second-guessing if this is actually IPv6 local," or perhaps some way of encoding a Tor hidden service?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,4,2016-08-27 19:54:06,32.32,,1,,"b'b"" Yes"," that\'s an onioncat address the way Bitcoin P2P encodes onion addresses in IPv6.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,5,2016-08-27 19:54:06,17.65,,1,,"b""b' Closing; feel free to reopen if you see other local addresses being relayed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,closed,2016-09-01 11:38:37,944.52,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,6,2016-08-27 19:54:06,98.93,,1,,"b""b' Sending an onion address as from-address is a privacy breach"," too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,7,2016-08-27 19:54:06,11.78,,1,,"b'b"" Hmm", I believe the logic is that we send the most compatible known local address to peers. That means that you\'d send your onion address to non-tor peers if you don\'t know of any other local reachable non-onion address. Perhaps that logic should be revisited, and we should never send an address out except to peers that are already connected to through that interface. That is complicated," as it means we need a way to identify incoming onion connections as belonging to tor.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,reopened,2016-09-01 13:29:22,110.75,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,8,2016-08-27 19:54:06,5.45,1,,,"b'b"" I think it should leave the address blank in version messages"," full stop. There\'s no need to fill it in at all it if it\'s no longer needed by peers connected to (e.g. #8594).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,9,2016-08-27 19:54:06,6.28,1,,,"b'b"" @laanwj Perhaps"," but that\'s orthogonal. We also announce our own address using messages.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,10,2016-08-27 19:54:06,7.07,,1,,"b'b"" Which is less privacy-sensitive"," at least it\'s hiding among a crowd there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,11,2016-08-27 19:54:06,93.85,,1,,"b'b"" Is anyone working on a PR for this? If I\'m not stepping on anyone\'s toes I\'d like to put a PR together over the weekend.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,12,2016-08-27 19:54:06,1198.95,,1,,"b""b' @EthanHeilman not aware of anyone working on this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,13,2016-08-27 19:54:06,943.38,,1,,"b""b' Partially mitigated by #8740"," removing 0.13.1 milestone.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8616,open,-,-,-,3,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,opened,2016-08-29 05:31:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,title,2016-08-29 05:31:56,00:00,,1,,"b""b' [WIP] Clarify variable names'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,body,2016-08-29 05:31:56,00:00,1,,,"b""b' This code causes no functional difference to bitcoin. The purpose of the pull is also to help make the code more readable by making variable names fit their function. 1. The first commit moves the debug message for version number to before the disconnect logic so that the  will show the version of nodes connected to", however briefly. This seems reasonable given that a version message is received it now ensures it is logged.2. The second commit changed nServicesExpected so that it is what is in the address database," thereby making the variable function closer to the variable name.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,closed,2016-08-29 05:40:50,8.9,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,reopened,2016-08-29 05:49:02,8.2,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,closed,2016-08-29 06:04:48,15.77,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,reopened,2016-08-29 06:07:29,2.68,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,closed,2016-08-29 07:27:00,79.52,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,1,2016-08-29 05:31:56,115.95,1,,,"b""b' sorry... still needs testing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,2,2016-08-29 05:31:56,5.65,,1,,"b""b' Can you please test locally first?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,3,2016-08-29 05:31:56,34.95,,1,,"b'b"" @paveljanik I do.. but not enough sometimes. I\'m a premature pusher it seems :-s Also", as soon as I am happy with my code, I want to push it to my github account, but if I do that while the pull is closed, then I\'m unable to re-open it, so I have to open it before pushing. But if I leave it open, other developers on github complain if it\'s not read enough, which sometime it isn\'t, so I close it until I am sure. If there is a better way to do this," please let me know. The opening and closing seems to be due to a feature in github which locks the pull closed if pushes are done while it is closed :-s""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,reopened,2016-08-29 08:08:51,41.85,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,closed,2016-08-29 08:10:02,1.18,2,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,4,2016-08-29 05:31:56,4.65,,1,,"b""b' @rebroad Leave it open or leave it closed. You already included the [WIP] tag. Otherwise you are sending out about 1200 emails every time you click the button.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,5,2016-08-29 05:31:56,3.6,1,,,"b'b"" @MarcoFalke ok"," I will find a better way to do this. Does changing the title also send as many emails? I don\'t even feel having conversation via comments is the best way either is there no private messaging function on github for example?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,6,2016-08-29 05:31:56,4.87,,,1,"b'b"" Pushing a commit to a PR", changing the title, opening, closing, ... allsend mails. And people who are subscribed to the project receive all thesemails from all pull requests. If you want to actively experiment, why not work in a separate branch,without a PR? Once you\'re happy with the result," you can push the PR\'edbranch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,7,2016-08-29 05:31:56,98.82,,1,,"b'b"" @rebroad I also suggest popping into IRC to ask  ideas. It\'s a lot more efficient to get direction and focus.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,reopened,2016-09-01 07:11:39,1381.62,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,8,2016-08-29 05:31:56,1304.32,,1,,"b'b"" I don\'t understand what you\'re trying to fix here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,9,2016-08-29 05:31:56,17.73,,1,,"b""b' No", as mentioned elsewhere," we definitely can connect to nodes that do not advertize all relevant service bits. Please stop trying find ways to change this before understanding the intention.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,closed,2016-09-01 08:05:21,53.7,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8622,closed,-,-,-,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,opened,2016-09-14 13:22:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,title,2016-09-14 13:22:24,00:00,,1,,"b""b' [Wallet] Add support for flexible BIP32/HD keypath-scheme'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,body,2016-09-14 13:22:24,00:00,,1,,b'b\' This adds the startup argument which allows to set the BIP32 keypath scheme during the creation of a wallet. This PR would allow to use keypath-scheme after BIP44, etc. to be compatible with other wallets. This PR does **not** change the keypool mechanism. Even if the keypath would allow public-key-derivation, we still derive all keys with private-key-derivation and fill up the keypool.Though," a PR that would enable public-key-derivation would be ""in a reviewable size"" once this gets merged.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,1,2016-09-14 13:22:24,1024.67,,1,,"b""b' @dcousens: Yes. I have thought about the split of the two key-chains (). But the current keypool concept make it a bit more difficult. I guess it could be combined with the feature to allow public key derivation. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,2,2016-09-14 13:22:24,94.6,,1,,"b""b' Rebased.I hope we can make some progress regarding the flexibility of our HD wallet feature as well as with pub-child-key-derivation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,closed,2016-10-20 08:01:51,1119.45,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,3,2016-09-14 13:22:24,1.27,,1,,"b""b' Accidentally closed"," reopen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,reopened,2016-10-20 08:02:56,1.08,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,4,2016-09-14 13:22:24,1418.92,,1,,"b""b' Added the 0.14 milestone label. IMO we should support flexible keypaths as well as wallet creation with an initial xpriv.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,5,2016-09-14 13:22:24,578.53,,1,,"b'b"" ACK. It works as is", however, I would like to see either a separate keypath scheme for change keys, or a way of specifying both in the existing one. Of course, you\'d need to actually implement the split in the wallet code.  Wallet creation with an  would be very useful, however, it brings up the question of restoring a wallet from only those (scanning, gap policy, etc.)," vs. a full  file.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,6,2016-09-14 13:22:24,49.6,,1,,"b""b' Concept ACK"," needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,7,2016-09-14 13:22:24,310.9,,1,,"b'b"" There hasn\'t been much activity lately and the patch still needs rebase", so I am closing this for now. Please let me know when you want to continue working on this," so the pull request can be re-opened.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,closed,2018-11-08 23:20:54,917.97,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,8,2016-09-14 13:22:24,565.03,,1,,"b'b"" I think this should be revisited after adding descriptor support to #14491 and the [ambition]url  to turn wallets into descriptor bags. Once that\'s done this should be a simple matter of adding optional descriptor arguments to so users can pick whatever derivation scheme they prefer.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8723,closed,-,-,-,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,opened,2016-09-16 14:48:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,title,2016-09-16 14:48:51,00:00,,1,,"b'b\' [PoC] Add wallet inspection and modification tool ""bitcoin-wallet-tool""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,body,2016-09-16 14:48:51,00:00,,1,,"b""b' **WORK IN PROGRESS**Add another bitcoin-tool called  . Currently it supports creation of wallets (with optional encryption before creating keys)", encryption and some info-dumping. If we agree on this concept, it could be use for creating a HD wallet with a given xpriv.Also, a such tool would probably be required to properly restore a hd wallet.If we once migrate away from BerkleyDB," this could also be helpful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,1,2016-09-16 14:48:51,1047.1,,1,,"b'b"" I like the concept of an external app working on files. I know several use cases where you have many files and with this", you can remove all the notes around the files you have to select between them. I can even imagine ," and such from afterwards. We have to take care of proper file locking when working on the file when is running at the same time. Some travis\' hosts do not build ( configs?).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,2,2016-09-16 14:48:51,309.83,,1,,"b'b"" Yeah", why not. Concept ACK. This is conceptually similar to SQL database\'s external utilities for repair, management, etc.Also I suppose when there needs to be a conversion tool between old and new formats, it would be part of this utility? From a deployment point of view I think we should keep this command-line only. Two Qt-using statically linked monster executables in the distribution is a bit too much, because of size concerns but also because e.g. MacOSX assumes a one-to-one mapping of GUI executables to applications.This is indeed very important," it needs to be prevented (and tested) that it is impossible to fudge a database with this utility while bitcoind is running.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,3,2016-09-16 14:48:51,1088.55,,1,,"b'b"" Yes. The whole -walletupgare (as well as salvage) could go into this tool.Yes. The current Qt app could support similar functions"," It doesn\'t need to be a separate App. Multiwallet support would help in this case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,4,2016-09-16 14:48:51,1353.43,,1,,"b'b"" Another operation that would be useful here: rewriting the wallet. This does the CDB::rewrite step as done after encryption"," but is meant to get rid of no-longer-used \'junk\' blocks in the wallet. Either to make the file smaller or permanently rid of sensitive metadata that has been removed. This cannot be conveniently done from the context of bitcoind (needs restart) but ideally in an external tool.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,5,2016-09-16 14:48:51,195.87,1,,,"b'b"" I think if we\'re going to keep adding more binaries like this"," we really ought to stop using static linking for the gitian bins sooner rather than later... :/""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,6,2016-09-16 14:48:51,289.12,,1,,"b'b"" Can\'t figure out how to solve the gcc linking circular dependencies issue. Maybe @theuni know a way to solve this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,7,2016-09-16 14:48:51,1332.07,1,,,"b'b"" On windows that\'s easy: package the DLLs with the binary", ship them in the same directory. Many software does this. On Linux less so, unfortunately. It\'s possible to ship files but it needs a special script to invoke then, as they won\'t get picked up automatically if they\'re in the directory of the executable. Anyhow this is a tangent: our non-GUI dependencies are really small. E.g. boost is mostly header-only with some small library files, libevent is tiny, berkeleydb is relatively small," etc. It isn\'t too problematic to link them to each executable. Also this tool doesn\'t even need libevent.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,8,2016-09-16 14:48:51,1.92,,1,,"b""b' Agree with @laanwj. The non QT static linked tools should be relatively small"," compared to the disk space required by the .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,9,2016-09-16 14:48:51,507.73,,1,,"b""b' Hmm"," what about RPATH?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,10,2016-09-16 14:48:51,21.13,,1,,"b'b"" Agree with @laanwj/@jonasschnelli above. @luke-jr rpath would work (for linux", you can use a relative path). There are lots of reasons _not_ to do that though, and unless there\'s a better reason than filesize," it doesn\'t seem justifiable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,11,2016-09-16 14:48:51,956.75,,1,,"b""b' Closing for now. Requires some steps in between until this can be revitalized'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,closed,2017-01-24 13:12:21,1343.5,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,reopened,2017-05-26 08:07:57,1135.6,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,12,2016-09-16 14:48:51,1136.82,,1,,"b""b' Reopening. A such tool would make much sense for zapwallet", salvage," wallet-creation with an xpriv (especially with multiwallet).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,13,2016-09-16 14:48:51,280.43,,1,,"b""b' Not sure if you are still seeing issues with circular dependencies"," but a simple way to allow building with circular dependencies during development is to add to LDFLAGS before the relevant libraries like I did here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,14,2016-09-16 14:48:51,548.77,,1,,"b'b"" doesn\'t build for me. Fails at linking:   Travis seems to have the same build failures.  Concept ACK. Once you\'ve fixed the build failures", I\'m very keen to test and review this. As you say," this will be especially useful for multi-wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,15,2016-09-16 14:48:51,1153.68,,1,,"b""b' I can get this to build using the flag as suggested by ryanofsky above. If anyone wants to  this"," then the branch here: url  builds'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,16,2016-09-16 14:48:51,248.3,,1,,"b""b' I have a branch of this rebased on #10762 and #12490 (which remove the wallet  server circular dependencies and allow this to build)  here: url  if anyone wants to play around with it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,17,2016-09-16 14:48:51,1328.4,,1,,"b'b"" I\'ve rebased url  and pushed it (there were lots of silent conflicts with wallet refactors).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,18,2016-09-16 14:48:51,1318.05,,,1,"b'b"" I\'ve rebased url  on top of #12490 (which removed the circular dependency that prevents this branch from building).  @jonasschnelli feel free to take that branch and push it to this PR. Otherwise"," I\'m happy to open my own PR and continue maintaining this feature.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,19,2016-09-16 14:48:51,1350.07,,1,,"b""b' Closing in the hope @jnewbery takes this over'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,closed,2018-08-09 15:56:59,469.03,2,18,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8745,closed,-,-,-,2,18,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,opened,2016-09-16 19:07:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,title,2016-09-16 19:07:33,00:00,,1,,"b""b' [rpc] Fix transaction size comments and RPC help text.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,body,2016-09-16 19:07:33,00:00,,1,,"b""b' As part of BIP 141", transaction sizes have been replaced by virtual size (with witness data discounted) as the metric for measuring the fee rate of a transaction. RPC now returns the virtual size of the transaction instead of the serialized size. However," code comments and RPC help text have not been updated everywhere to reflect this change. This PR fixes various comments and RPC help text.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,1,2016-09-16 19:07:33,1249.77,,1,,"b""b' utACK 2ff29a7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,2,2016-09-16 19:07:33,322.72,,1,,"b""b' I disagree this is a bug. Apart from miners"," nobody should care about thetotal serialized size.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,3,2016-09-16 19:07:33,972.32,,1,,"b""b' @sipa so do you agree on this documentation change?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,4,2016-09-16 19:07:33,18.63,,1,,"b'b"" @laanwj I agree with it"," though there was some discussion in one of the former IRC meetings that we shouldn\'t call this virtual size.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,5,2016-09-16 19:07:33,1155.33,,1,,"b'b"" If we\'re not showing the size in bytes"," then just get rid of the  fields and add weight...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,6,2016-09-16 19:07:33,199.08,,1,,"b'b"" Removing fields from objects returned by RPC functions is a non-backwards compatible change", which may break clients using the API. I agree that adding weight may be useful for some users and we should consider extending the RPC return objects to include it. If you feel strongly about having weight returned RPC functions," let me know and I\'ll open a new PR. This PR is simply to fix up the help text so it reflects what the function call is actually doing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,7,2016-09-16 19:07:33,120.03,,1,,b'b\' Strinctly speaking," this is  141 defines virtual size as ""Transaction weight / 4 (rounded up to nearest integer)."" with weight being "" Base transaction size \\\\* 3 + Total transaction size (ie. the same method as calculating Block weight from Base size and Total size)."". However", this method actually returns that iff sigops per byte of the tx is lower than sigops per byte of the block consensus rule. Not sure if it matters since that should be rare, but it is, strictly speaking, different.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,8,2016-09-16 19:07:33,14.93,,,1,"b'b"" @TheBlueMatt you\'re correct. The actual value returned will be higher than the virtual size if the sigsops per byte in the tx is greater the nBytesPerSigOp due to url  I _could_ expand the RPC text from: to  I don\'t think that actually makes things clearer"," but I\'m happy to update the text if you think that\'s preferable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,9,2016-09-16 19:07:33,1369.37,1,,,"b'b"" Its relatively strange to me that it would be inconsistent with the BIP. If we want to keep it this way", I\'d say changing the BIP is sufficient as the help text refers to that. Alternatively, we could change the return value to be consistent with the BIP. Either way, I agree," expanding the RPC help text is strange.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,10,2016-09-16 19:07:33,1222.67,,,1,"b""b' Closing this"," as there seems to be strong disagreement about this and the discussion has bled out.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,closed,2016-11-16 09:52:24,884.85,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,11,2016-09-16 19:07:33,219.3,1,,,b'b\' @laanwj please don\\\'t close this. I don\\\'t think anyone (other than possibly @luke-jr) disagrees that this is an clear improvement.  The existing help text is confusing and this is far more accurate.  @TheBlueMatt \\\'s comments are a more obscure technical refinement," but I don\\\'t think meant as a blocker to merging this.  I think its important that we make an effort to properly document and educate our users about how the software works.  The whole concept of ""virtual size"" is a bit unfortunate but I don\\\'t see any way around keeping it unless we want to radically change how people think about feerates.  We can\\\'t be held up from making clear improvements to the software just because one person vehemently disagrees. utACK from me\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,reopened,2016-11-16 15:03:32,311.13,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,12,2016-09-16 19:07:33,228.4,,1,,"b'b"" Travis appeared to fail because of an unrelated environment setup issue. I\'ve rebased this PR which will kick off another travis run.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,13,2016-09-16 19:07:33,746.23,1,,,"b'b\' There seems to be a conflict defines ""size"" as the virtual size"," whereas defines it as the serialized size (and using ""vsize"" instead for virtual size).  This doc change helps to clarify the difference"," but to avoid confusion perhaps the term ""size"" should be made to mean the same thing in all RPC calls. Oh and in RPC","size"" also refers to serialized size and not ""weight / 4"".\''
bitcoin	8747	closed	14	jnewbery	2016-09-16 19:07:33	418.83	+1			b'b"" @bitcoinfees yes, I completely agree with everything you say, and that it\'s confusing that \'size\' means different things in different RPCs. I didn\'t make any functional changes to the API since there may be applications that rely on the current behaviour. This PR simply updates the self-documentation in the RPCs so that it accurately describes what is being returned. Perhaps we should change those RPC definitions, but that\'s a discussion for another PR and I don\'t think it should block this documentation fix.""'
bitcoin	8747	closed	15	luke-jr	2016-09-16 19:07:33	23.58		+1		b'b"" It still doesn\'t make sense to document a bug rather than fixing it.""'
bitcoin	8747	closed	16	morcos	2016-09-16 19:07:33	18.92	+1			b'b"" @luke-jr but that is not the choice at hand.  The choice presented by this PR is to document the existing behavior or leave it improperly documented.  Choosing to document it does not preclude changing it in the future.  Although I think most of us do not consider it a bug. I can\'t understand why this is even a question.  How can we argue against more clearly explaining to users what the behavior is?  We should always be willing to document existing behavior instead of stalling on that while arguing about whether to change the behavior.""'
bitcoin	8747	closed	17	jnewbery	2016-09-16 19:07:33	14.67		+1		b""b' @luke-jr I agree with @morcos. Nothing in this documentation fix precludes you from opening an issue or PR to change the API.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,18,2016-09-16 19:07:33,48.68,,1,,"b'b"" @sipa @TheBlueMatt This PR has several ACK\'s (and @luke-jr\'s objection)"," but I think its held up from merging b/c lack of clear feedback from you two.  If you are OK with it could you say? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,19,2016-09-16 19:07:33,330.38,,1,,"b""b' ACK 2ddb53054579c70de061d95386e9a5a02255d53f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,20,2016-09-16 19:07:33,1264.38,,,1,"b""b' Thanks @paveljanik . Comment fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,21,2016-09-16 19:07:33,783.27,,1,,"b""b' ACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,closed,2017-01-05 11:06:58,1203.43,5,15,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8747,closed,-,-,-,5,15,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,opened,2016-09-19 13:28:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,title,2016-09-19 13:28:55,00:00,,1,,"b""b' Fix documentations of rpc  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,body,2016-09-19 13:28:55,00:00,1,,,b'b\' ## The second param of listsinceblock From [issue 8752]url From the actual docs here is it is:However," that\\\'s misleading at best. I\\\'ve seen at least one project thinking that means ""filter to only show transactions of n target-confirmations"". It\\\'s a weird param but I\\\'d document it as## Transactions confirmations Says:It should also say when it\\\'s < 0"," it means the transaction conflicted that many blocks ago## bip125-replaceable There\\\'s an undocumented field of transactions ""bip125-replaceable"" which I believe has three possibilities ""yes"" ""no"" and ""unknown""  (under what circumstances it says unknown", should also be documented)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,1,2016-09-19 13:28:55,2.75,,1,,"b'b"" Agree"," though I don\'t think the parameter should even be called target-confirmations if that is what it does.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,2,2016-09-19 13:28:55,283.82,,1,,"b""b' I updated the issue to include 2 other minor documentation issues for the same rpc call"," as it probably should all be done as one thing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,closed,2017-01-04 11:48:18,1339.38,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,3,2016-09-19 13:28:55,1336.77,,1,,"b'b"" I don\'t think this should be closed"," #9396 only fixed 1 out of the three issues in the docs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,reopened,2017-01-04 16:42:16,293.97,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,4,2016-09-19 13:28:55,374.18,,1,,"b'b"" Another issue with listsinceblock documentation", is that it\'s  missing documentation for (and it should explain exactly what that mean," if exclusively transactions from the wallet that conflicts or any transaction)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,5,2016-09-19 13:28:55,314.03,1,,,"b'b\' There\\\'s also missing documentation for the field  . I\\\'m not sure I\\\'m a fan of these ""omit empty"" style fields that only appear when the data exists. They make them rather hard to discover", especially if the docs aren\\\'t comprehensive. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,6,2016-09-19 13:28:55,452.58,,1,,"b""b'  is documented here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,7,2016-09-19 13:28:55,127.52,,,1,"b'b"" >replaced_by_txid is documented here: That\'s not exposed to end users when they via the listsinceblock  :D""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,8,2016-09-19 13:28:55,1328.27,1,,,"b'b\'  The alternative is to use a ""special value"""," which is fraught with more risk. E.g. the return value -1 for ""no data"" in has been criticized many times", because it\\\'s too easy to use as a value. Leaving out the field completely avoids potential confusion. Of course the documentation needs to be complete.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,9,2016-09-19 13:28:55,410.75,1,,,"b'b\' @RHavar  errors are always hard to discover if they\\\'re not documented correctly and even then;  hiding the fields is about shaping how the caller fails when they get it wrong.  I think our coding standards should reflect something like: ""Avoid returning special values for error conditions", especially for gauge outputs (like numbers of connections, btc amounts," etc.) because the error code can be mistaken for a value even if the error is negative and negative results don\\\'t make much sense. For fields which are naturally categorical an in-band error can be more acceptable e.g. something that returns ""apple"" / ""grape"" / ""cherry""  could also return ""error""", but is generally preferable to have a named result field and not return it when there is an error," and return an error field instead.""  It\\\'s always sad if you mishandle an error-but I\\\'d rather the caller fail cleanly rather than average a -1 into some data or something like that.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,10,2016-09-19 13:28:55,5.07,1,,,"b'b\' @RHavar  errors are always hard to discover if they\\\'re not documented correctly and even then;  hiding the fields is about shaping how the caller fails when they get it wrong.  I think our coding standards should reflect something like: ""Avoid returning special values for error conditions", especially for gauge outputs (like numbers of connections, btc amounts," etc.) because the error code can be mistaken for a value even if the error is negative and negative results don\\\'t make much sense. For fields which are naturally categorical an in-band error can be more acceptable e.g. something that returns ""apple"" / ""grape"" / ""cherry""  could also return ""error""", but is generally preferable to have a named result field and not return it when there is an error," and return an error field instead.""  It\\\'s always sad if you mishandle an error-but I\\\'d rather the caller fail cleanly rather than average a -1 into some data or something like that.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,11,2016-09-19 13:28:55,391.53,,1,,"b'b"" I believe this issue can be closed.  The fields  ", and have either been updated or added since this issue was originally opened.  The PRs weren\'t referencing this issue number," so this issue stayed open.  Below are the commits that have addressed them: [ ]url [ ]url [ ]url  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,closed,2018-01-13 01:13:59,511.72,5,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8758,closed,-,-,-,5,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,opened,2016-09-21 09:56:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,title,2016-09-21 09:56:51,00:00,,1,,"b""b' RPC refactoring: Access wallet using new GetWalletForJSONRPCRequest'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,body,2016-09-21 09:56:51,00:00,,1,,"b""b' Part of the refactorings needed for basic multiwallet (#8694)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,1,2016-09-21 09:56:51,190.5,,1,,"b'b"" I don\'t like the coupling and the in  .I\'d recommend to keep the wallet-free. I think we should pack the request path (URI) into the and or informations about the authentication (in case we want to distinct wallets based on authentication).Then I think there should be a method in (or in  ) that maps a pointer from a given URI"," Auth-Info or the complete instance. Instead of the there could be then something like  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,2,2016-09-21 09:56:51,2.35,,1,,"b""b' General ConceptACK on a for the RPC table commands.Maybe it could also include the and  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,3,2016-09-21 09:56:51,450.73,,,1,"b""b' That sounds nice"," but greatly complicates the implementation. :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,4,2016-09-21 09:56:51,1116.25,,1,,"b""b' I think this can be closed after #8788?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,5,2016-09-21 09:56:51,12.22,,1,,"b""b' Closing in favor of merged #8788'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,closed,2016-10-19 15:28:55,332.07,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,reopened,2016-10-25 05:59:55,871.0,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,6,2016-09-21 09:56:51,1065.92,,1,,"b'b"" Rebased and refactored based on @jonasschnelli \'s idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,7,2016-09-21 09:56:51,123.62,,1,,"b""b' Makes sense"," utACK ab5ce98'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,8,2016-09-21 09:56:51,866.3,,1,,"b""b' Rebased and addressed nit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,9,2016-09-21 09:56:51,1001.18,,1,,"b""b' utACK 7de55733c5690350c48ec94660b5be56fbb5eb39'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,10,2016-09-21 09:56:51,267.08,,1,,"b""b' Minor change: Forward-declared CWallet even for non-wallet builds so it can be used in a pointer type"," avoiding unnecessary casting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,11,2016-09-21 09:56:51,985.68,,1,,"b'b"" So in some cases in the RPC you get the wallet pointer from json but then the check if it\'s available is far below.  This is begging for someone to insert code that uses a potentially null pointer between to two and doesn\'t notice because their function doesn\'t get tested with a missing wallet.  I would recommend moving the creation of that local pointer down to the point where you\'re going to test it.  Alternatively or in addition",  rename GetWalletForJSONRPCRequest to TryGetWalletForJSONRPCRequest and make GetWalletForJSONRPCRequest a wrapper for it that throws when it fails?  Other than this nit that perhaps getting the pointer and testing it are too separated in some cases," utACK.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,12,2016-09-21 09:56:51,237.27,,1,,"b'b"" I liked the  refactor idea", but I don\'t see any clean way to do it without changing the behaviours.  So I moved the one case EnsureWalletIsAvailable was delayed up," and removed the blank line between them and GetWalletForJSONRPCRequest.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,13,2016-09-21 09:56:51,800.97,,,1,"b'b"" @luke-jr Looks good to me"," will test as soon as you update for matt\'s latest comments.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,14,2016-09-21 09:56:51,760.12,,1,,"b'b"" Made changes requested by @TheBlueMatt"," and rebased to resolve conflict. Also includes a quick sanity check that -wallet doesn\'t include path separators.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,15,2016-09-21 09:56:51,1182.73,,1,,b'b\' While you\\\'re at it," can you call SanitizeString (in addition to the ""/\\\\\\\\"" check) on the wallet param?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,16,2016-09-21 09:56:51,63.55,,1,,"b""b' utACK 7d1228bf7f1c398d9fcda6161e6aebfc5e5e3700'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,17,2016-09-21 09:56:51,249.57,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,18,2016-09-21 09:56:51,501.85,,1,,"b""b' ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,19,2016-09-21 09:56:51,390.15,,1,,"b""b' Needs rebasing again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,20,2016-09-21 09:56:51,232.47,,1,,"b""b' Rebased yet again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,21,2016-09-21 09:56:51,711.45,,1,,"b""b' still ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,22,2016-09-21 09:56:51,879.45,,,1,"b""b' Great PR. I think we should get this in as soon as possible. utACK d678771c660c936a6222dd43a204cb2699100f3e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,23,2016-09-21 09:56:51,1030.4,,1,,"b""b' utACK d678771'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,closed,2017-03-03 12:39:05,399.17,0,22,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,24,2016-09-21 09:56:51,472.72,,1,,"b""b' By the way"," I reviewed this partially after merged when rebasing #9845 (making it mostly pointless since most was done here already). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,25,2016-09-21 09:56:51,1140.8,,,1,"b""b' Hello @luke-jr ","  Is there any way where we can increase the number of wallets to be in loaded state at same  rightnow its like if I load wallet more than 100 or 150 daemon is getting . I am trying to  wallet dynamically using RPC.  What i tried is incraesing the to 400000 and also added But still same things I am facing.  Reflink for above setup : url  url So is there any way or configuration or any changes which can increase and allow more number of wallets to be loaded ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8775,closed,-,-,-,0,23,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,opened,2016-09-21 21:50:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,title,2016-09-21 21:50:32,00:00,,1,,"b""b' qt: Missing translations'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,body,2016-09-21 21:50:32,00:00,,1,,"b""b' It seems the strings in are not translated. E.g. gives me a warning in English that the datadir does not exist.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,1,2016-09-21 21:50:32,272.95,,1,,"b'b"" Where did you set the language? I don\'t think the problem here is that that string", or others in is untranslated. It appears in the ts files. However the startup of bitcoind," and even more the GUI is a complex multi-stage process with settings that are fetched from different sources at different times. Before locating the data directory (which is very early) it may not have found your language setting yet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,2,2016-09-21 21:50:32,2.63,1,,,"b""b' Oh",  ," yes that should have been picked up by then. Weird.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,3,2016-09-21 21:50:32,177.28,,1,,"b""b' Czech language is code  "," not  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,4,2016-09-21 21:50:32,213.42,,1,,"b""b' I tried different language codes", all failed. Could someone try really quick with  But when you change the string," it is no longer picked up by xgettext?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,5,2016-09-21 21:50:32,4.55,,1,,"b'b"" I\'m not sure what exact steps you\'re using", but xgettext does nothing with the qt files," it\'s only used to read strings from the core for to be picked up by qt\'s tools. Do you do  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,6,2016-09-21 21:50:32,78.68,,1,,"b'b"" @laanwj What I mean is that is not updated on  ", it seems: gives only this (the cpp change is from  , the ts change is from  ) Maybe this is expected, but I don\'t understand either why the existing translations (e.g. fr, de," ...) of those strings are not picked up.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,7,2016-09-21 21:50:32,78.02,,1,,"b'b"" Translations in Qt have a \'context\' which needs to match as well as the string"," for the translation to appear. This may be what is throwing you off track.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,8,2016-09-21 21:50:32,205.22,,1,,"b""b' Possibly related: #8900 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,9,2016-09-21 21:50:32,1133.53,,1,,"b""b' Should be fixed by #8911'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,closed,2016-10-13 09:56:49,726.28,1,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,10,2016-09-21 21:50:32,105.92,,1,,"b""b' Reopening.  The regression was never fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,reopened,2017-01-02 11:42:46,105.95,1,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,11,2016-09-21 21:50:32,64.55,,1,,"b'b"" Are you sure? This wasn\'t fixed by #8911?  Which ones specifically are you missing? The wallet ones are in there"," at least:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,12,2016-09-21 21:50:32,103.9,,1,,"b""b' Two examples:   See  #9457 for a possible fix'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,closed,2017-01-04 15:42:13,239.45,1,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8782,closed,-,-,-,1,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,opened,2016-09-29 18:46:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,title,2016-09-29 18:46:36,00:00,,1,,"b""b' p2pfails randomly'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,body,2016-09-29 18:46:36,00:00,,1,,"b""b' It seems p2pfails randomly From: url  from #8841The PR is trivial and totally unrelated to compact block  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,1,2016-09-29 18:46:36,5.28,,,1,"b""b' Thanks for the issue! I saw this failure earlier at least twice (only on travis"," though)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,2,2016-09-29 18:46:36,29.77,1,,,"b'b"" Oops"," I\'ll take a look...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,closed,2016-10-01 09:20:01,873.42,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,3,2016-09-29 18:46:36,78.53,,1,,"b""b' Going to reopen this based on url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,reopened,2016-10-02 20:40:11,680.17,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,4,2016-09-29 18:46:36,1095.0,,,1,"b""b' Ugh", I will take another look," thanks for noticing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,5,2016-09-29 18:46:36,304.92,1,,,"b'b"" Ok I think I see what I did wrong in #8854 -syncing with a ping doesn\'t ensure that all block announcements have made it to us", just that any that have been announced have been processed. I\'m working on a new fix (my idea is to replace that sync_with_ping() with logic to wait until the tip has been announced)," but I\'m having trouble reproducing the problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,6,2016-09-29 18:46:36,772.05,,1,,"b""b' Please let me know if this is still an issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,closed,2016-10-11 08:52:09,731.97,2,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,7,2016-09-29 18:46:36,346.35,1,,,"b'b"" @sdaftuar p2p-compactblocks just failed in a travis build for me: url  . The next build (which was just a squash of the same commits) succeeded: url  "," so it appears there\'s still an intermittent problem with the compact blocks testcase. Sadly there doesn\'t appear to be much logging in travis and I can\'t reproduce this locally.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,8,2016-09-29 18:46:36,3.7,,1,,"b""b' Those travis builds were from a PR from this branch: url  "," which includes url  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,9,2016-09-29 18:46:36,359.68,,,1,"b'b"" Looked into the failure", but so far couldn\'t find a problem in the test setup that would cause it. The [failure]url  happened in [line 138]url  of the util function when the two test nodes failed to sync after 60 seconds. The place where the failing was called was [line 809]url  of run_test after segwit was activated on node 1. Node 1 should have added more blocks than node 0 at that point, so some kind of failure must have happened to cause node 0 not to receive (or accept) the new blocks from node 1, and the sync_block function to time out. Since I don\'t have any good theories on what would cause node 0 not to sync with node 1," I\'m currently running the test in a loop to try to reproduce the problem.  I added some debug prints and made the following change to avoid a different (unrelated) intermittent test failure:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,reopened,2016-10-25 08:18:40,1406.52,3,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,10,2016-09-29 18:46:36,1254.12,,1,,"b""b' Update: running the test overnight on my workstation showed the call returning true after 3 loop iterations in 1060 out of 1089 runs"," and returning true after 2 loop iterations in the other 29 runs. It never got anywhere close to the 60 iterations that would have been required to cause the timeout.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,11,2016-09-29 18:46:36,1311.32,,1,,"b""b' This issue should be closed now that #9058 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,closed,2016-11-11 16:34:57,496.28,3,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,12,2016-09-29 18:46:36,67.85,,,1,"b'b"" Yes"," let\'s be optimistic and close it :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8842,closed,-,-,-,3,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,opened,2016-09-29 20:12:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,title,2016-09-29 20:12:23,00:00,,1,,"b""b' rpc: Handle client-side in bitcoin-cli w/  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,body,2016-09-29 20:12:23,00:00,,,1,"b'b"" (follow-up to #8780) There have been some requests for a client-side and this is my PoC of how to do it. The high-level idea is to have one command to gather and show various information and statistics about a in one go. This could be used as an opportunity to make better", it doesn\'t have to have exactly the same fields as the original RPC, e.g. a instead of flag would make sense (but it is currently the same, according to this table: url If this is considered a good idea some of the logic could be moved up to  and used in the GUI console as well.### Implementation This adds the infrastructure class that takes care of converting bitcoin-cli arguments into a JSON-RPC request object, and converting the reply into a JSON object that can be shown as result. This is subsequently used to handle the option, which sends a JSON-RPC batch request to the RPC server with  ," and after reply combines the result into what looks like a result.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,1,2016-09-29 20:12:23,998.58,,1,,"b'b\' Concept ACK. This allows us to maintain backward compatibility with ""bitcoin-cli getinfo"" without keeping it at the RPC level. Should ""-getinfo"" automatically trigger when the getinfo RPC is requested?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,2,2016-09-29 20:12:23,28.65,1,,,"b'b\' Not sure about that. That\\\'s how I had it first but this would blur the line between what bitcoin-cli calls an RPC call and what is actually available on the API endpoint. Maybe ""bitcoin-cli getinfo"" if it fails (with the code that the call is missing) could print an helpful message to use ""-getinfo"" instead.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,3,2016-09-29 20:12:23,74.33,,1,,"b'b"" Eh", IMO the only backward-compatibility need for getinfo is at the RPC level. RPC isn\'t really designed for end users, and in any case, end users can adapt to changes easier than legacy software making RPC calls. I don\'t particularly care about whether -getinfo is added to bitcoin-cli," but it doesn\'t seem like a viable migration path or substitute for the getinfo RPC.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,4,2016-09-29 20:12:23,11.58,,,1,"b'b"" You are right that RPC is not there for end users.However", bitcoin-cli is there for end users, and many people use bitcoind+bitcoin-cli as a console wallet. This is not just for backwards-compatibility. As I say in my OPI\'d be fine with completely different output here. However, the idea of having a single command that combines and prints various status information makes sense," IMO.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,5,2016-09-29 20:12:23,4.28,,1,,"b'b"" And yes", this could be an external Python script too. I don\'t really care. Although history has shown that those scripts hardly get maintained nor used, e.g. remember  ? Thought so. (so if that is a requirement I\'m just going to keep it as a private script and not bother with this," this may be too much of an ego-PR anyway)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,closed,2016-10-04 15:02:54,1130.52,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,6,2016-09-29 20:12:23,290.55,,1,,"b""b' Reopening after IRC discussion.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,reopened,2017-06-15 19:40:23,277.48,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,7,2016-09-29 20:12:23,48.37,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,8,2016-09-29 20:12:23,542.08,,,1,"b'b"" I\'d love for this to make it in to v0.15.0"," to ease the removal of in (hopefully) v0.15.1.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,9,2016-09-29 20:12:23,1044.28,,,1,"b'b"" I am concerned that this breaks the atomicity of the previously-atomic RPC getinfo", which may be very surprising for users. I\'m not sure how much it matters if you get inconsistent data in results from bitcoin-cli, since most automated things will likely be using RPC directly," but I\'m not convinced it is a great direction.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,10,2016-09-29 20:12:23,30.95,,,1,"b'b"" NACK. Keep it simple for cli. IMO this is a good example for what to not do in a cli and can lead to others do the same in their cli.. This doesn\'t break atomicity as there is no getinfo"," at the very least that should be a concern in #8843. The ones requesting getinfo should either just make the calls or understand what they really need.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,11,2016-09-29 20:12:23,33.1,,,1,"b'b""  Idealogical purity is fine in its place", but this is an isolated change to help those who are currently use from the command line. I don\'t think it sets a precedent for doing more hacks with the cli.  Perhaps don\'t document this? Or document it as a debug option? Would that be better?  To be clear: I\'m not advocating strongly for this PR. If the consensus view is that this is not required to remove then I\'m happy to go along with that. However," I\'m certainly not concerned about it setting precedent and I don\'t think that a good reason to not merge this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8843,closed,12,2016-09-29 20:12:23,5.93,1,,,b'b\' I\\\'m having trouble parsing your comment @promag. My concern with atomicity is that you could eg get a getwalletinfo result which is current, then a getblockchaininfo result a block later and end up with a very confused getinfo. Forcing the client to make separate calls clarifies that somewhat. Anyway, I\\\'m curious what the previous IRC discussion was, let\\\'s bring this up at next week\\\'s meeting (or on IRC on Monday) and figure out what it is that the use-case is. On July 16, 2017 7:26:08 PM EDT,"Jo\\xc3\\xa3o Barbosa""  wrote:>NACK. Keep it simple for cli. IMO this is a good example for what to>not do in a cli and can lead to others do the same in their cli.. This>doesn\\\'t break atomicity as there is no getinfo, at the very least that>should be a concern in #8843. The ones requesting getinfo should either>just make the calls or understand what they really need.\''
bitcoin	8843	closed	closed	 - 	2017-07-17 06:22:09	641.77	2	6	6
bitcoin	8843	closed	13	laanwj	2016-09-29 20:12:23	380.4		+1		b'b"" Closing this, I don\'t feel like addressing the atomicity concern, it seems arbitrary, never came up before, and a way to call multiple RPC calls atomically is *WAY* out of scope for this. Not going to maintain this anymore.""'
bitcoin	8843	closed	14	promag	2016-09-29 20:12:23	541.17	+1			b'b""  @jnewbery that\'s what deprecation is for. @TheBlueMatt I totally agree with you! Sorry if I wasn\'t clear.  @laanwj IMO best solution is to add support for url  where the locks are held while handling the batch request.""'
bitcoin	8843	closed	15	laanwj	2016-09-29 20:12:23	551.4	+1			b'b\' I use a batch in the implementation of this! Holding all the locks for the whole time seems a bad idea though. A batchmight include, or fully consist of, RPCs that don\\\'t need any locks at all.Locks have been pushed down, just a version ago, to be able to handle themseparately per call implementation. It could be done optionally; e.g. submit a list of locks with the batch.But wtf, I had never before this even heard of a use case for that, seemsvery rare. On Jul 17, 2017 11:06 AM, ""Jo\\xc3\\xa3o Barbosa""  wrote:>\''
bitcoin	8843	closed	16	laanwj	2016-09-29 20:12:23	560.07		+1		b'b\' Anyhow I\\\'m no longer going to work on this after the so-manyeth time thisgets shot down for out-of-the-blue reasons. I don\\\'t even use it myself. The getinfo output doesn\\\'t provide a usefulselection of information. I have a custom script that prints what I\\\'minterested in, and suggest everyone does the same, easy enough. On Jul 17, 2017 11:16 AM, ""Wladimir""  wrote:>>>>>>>>>>>>>>>>\''
bitcoin	8843	closed	17	promag	2016-09-29 20:12:23	583.25	+1			b'b""  @laanwj sorry I\'ve overlook the code and did not realize there is already support for server side batch requests.  :+1: for custom scripting.""'
bitcoin	8843	closed	-	-	-	-	5	8	6
bitcoin	8861	closed	opened	laanwj	2016-10-01 22:58:34
bitcoin	8861	closed	title	laanwj	2016-10-01 22:58:34	00:00		+1		b""b' (reserved for DNS seed issues)'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,body,2016-10-01 22:58:34,00:00,,1,,"b""b' As of 2017-12-17  Edit: the utility used to check these is now in url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,1,2016-10-01 22:58:34,591.4,,,1,"b""b' Thanks for the report.Had to restart the bitcoin-seeder"," though it was running (and reporting to the logs)...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,2,2016-10-01 22:58:34,3.6,,,1,"b""b' Thanks for fixing"," updated the issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,3,2016-10-01 22:58:34,460.88,,1,,"b""b' That should be fixed now; had to restart the server.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,4,2016-10-01 22:58:34,1.47,,,1,"b'b"" Thanks. Yes yours is fixed now"," @jonasschnelli \'s broken again :p""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,5,2016-10-01 22:58:34,0.28,,1,,"b'b"" Well"," I guess you don\'t have to change the title at least...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,6,2016-10-01 22:58:34,1174.07,,1,,"b""b' Updated OP'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,7,2016-10-01 22:58:34,159.45,,1,,"b""b' @laanwj Currently  is failing"," adding (it seems) >4 minutes to the time needed to shutdown bitcoind.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,8,2016-10-01 22:58:34,72.02,,,1,"b""b' It is? Seems to work fine for me. Which server is failing for you? On January 10", 2017 6:49:49 AM PST, R E Broadley  wrote:>@laanwj Currently  is failing," adding (it seems) >4>minutes to the time needed to shutdown bitcoind.>You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,9,2016-10-01 22:58:34,1232.98,,,1,"b'b"" @TheBlueMatt \'s is working fine"," the other ones are still having problems (return no results).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,10,2016-10-01 22:58:34,502.23,,1,,"b""b'  should be working again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,11,2016-10-01 22:58:34,10.67,,1,,"b""b' IMO  is low value and can be removed.  (it will continue to stay up and resolvable ad infinitum) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,12,2016-10-01 22:58:34,1.13,,1,,"b""b'  should be working again (firewall issue"," i thought it was fixed already).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,13,2016-10-01 22:58:34,587.02,,1,,"b""b' Everything is okay now"," congrats everyone.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,closed,2017-02-09 06:57:09,478.58,0,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,reopened,2017-12-17 10:06:37,189.47,0,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,14,2016-10-01 22:58:34,191.2,,1,,"b""b' @jonasschnelli Your DNS seeds (both testnet and mainnet) are experiencing issues at the moment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,15,2016-10-01 22:58:34,176.83,,,1,"b""b' Mainnet seed seems running fine. There was a strange issue on the testnet seed (now resolved"," currently investigating).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,closed,2018-01-26 13:48:02,221.42,0,11,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,16,2016-10-01 22:58:34,104.25,,1,,"b""b'   seems to be down.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,17,2016-10-01 22:58:34,458.57,,,1,"b""b' @s-tikhomirov Thanks! Looks like something was down on my server; rebooted and it seems to be working fine now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,18,2016-10-01 22:58:34,1273.12,,1,,"b'b"" ** server can\'t find : SERVFAIL again... @petertodd  FAIL  FAIL ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,19,2016-10-01 22:58:34,330.23,,1,,"b""b' @sysmanalex Fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,20,2016-10-01 22:58:34,408.47,,1,,"b""b'  has auto recovered as well \\xe2\\x98\\xba'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8861,closed,-,-,-,0,15,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,opened,2016-10-03 09:51:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,title,2016-10-03 09:51:03,00:00,,1,,"b""b' Move to Libevent 2.1.x'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,body,2016-10-03 09:51:03,00:00,,1,,"b""b' Libevent 2.1.6-beta was released in July this year.The current stable build (2.0.22) was released in Jan 2015", the same time as the previous beta. Not using 2.1.x is affecting atleast[WIP] rest: Stream entire utxo set #7759bitcoin-cli: More detailed error reporting #8722Compatibility logic in [bitcoin-]url  There are also compatibility issues with 2.0.22 and recent mingw-w64 gcc versions," see #8730 Optimistically tagged this as something for 0.14.0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,1,2016-10-03 09:51:03,62.03,1,,,"b'b"" Some further backstory here: libevent\'s release process is **slow**. Maintenance is in no means standing still", many improvements have been made in the 2009-now timeframe. However, these have not ended up in the stable versions (2.0.x). Even some bugfixes have not, I had to push to get a basic IPv6 http fix in at some point (which had been in 2.1.x for a long time). Branch 2.1.x had been in alpha for years," and has entered beta 2015-01-05 with 2.1.5. Despite not officially being called stable yet it seems rock-stable overall. As you can see with #8722 and  #7759 I\'ve been starting to bump against the restrictions of 2.0.x. So I\'m in favor for this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,closed,2017-01-11 12:56:34,185.52,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,2,2016-10-03 09:51:03,172.57,,1,,"b""b' (Note: This issue should be reopened", as the tasks in op are not yetaddressed, I think) On Wed, Jan 11, 2017 at 1:56 PM," Wladimir J. van der Laan <notifications@>'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,reopened,2017-01-12 00:08:23,671.82,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,closed,2017-01-21 00:51:46,43.38,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8867,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,opened,2016-10-05 04:47:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,title,2016-10-05 04:47:08,00:00,,1,,"b""b' : Use theme tooltip colours'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,body,2016-10-05 04:47:08,00:00,1,,,"b""b' This seems to look nice in virtually all colour themes (except Zion Reversed"," but frankly my dislike of how it looked with that extended to more than just the overlay...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,1,2016-10-05 04:47:08,32.03,1,,,"b""b' OS X before & after"," the background is now a yellowish colour vs the original grey.![modal-grey]url ![modal-yellow]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,2,2016-10-05 04:47:08,150.95,,,1,"b'b"" Tooltip-yellow! Like sticking a post-it over the interface. Going to test this", as I have a somewhat unconventional theme. Before:![untitled1]url  After:![untitled2]url  Big white blob or not," the original is better-readable.Also what\'s up with the corners?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,3,2016-10-05 04:47:08,76.78,1,,,"b'b"" Uh", the colours used are tooltip-text on tooltip-bg. You have white-on-white tooltips?? :/ I don\'t know anything about corners... saw something in the stylesheet," but it didn\'t seem to do anything?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,4,2016-10-05 04:47:08,3.87,,,1,"b""b' Same problem as @laanwj  on default fedora skin. Also"," we should make sure gitian builds work fine with it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,5,2016-10-05 04:47:08,968.47,,1,,"b""b' I saw the PR for this overlay yet I have yet to see it on my running bitcoin-qt . How do I make this appear please?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,6,2016-10-05 04:47:08,152.45,,1,,"b""b' Leave your node (presumably testnet) offline for a few days", then when you start it, prevent it from syncing entirely by stopping it after it fetches headers," then start it again with -connect=0 to prevent it from getting connections.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,7,2016-10-05 04:47:08,516.87,1,,,"b'b"" Tooltips are white on grey", just like everything else.![untitled]url There\'s no canary-yellow in my theme at all.Looking at the screenshots they used to be nice and rounded," with the patch they\'re just square.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,8,2016-10-05 04:47:08,1311.3,,1,,"b""b' Will get back to this later'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,closed,2016-11-11 10:19:51,332.72,4,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,reopened,2016-11-24 03:57:46,1057.92,4,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,9,2016-10-05 04:47:08,1058.78,,1,,"b""b' @laanwj @MarcoFalke Please test'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,10,2016-10-05 04:47:08,89.7,,,1,"b""b' OS X 10.12"," QT 5.7.0 ![ui-overlay]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,11,2016-10-05 04:47:08,433.05,,,1,"b""b' Still the same:  ![screenshot from 2016-11-24 13-40-40]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,12,2016-10-05 04:47:08,530.08,,1,,"b""b' @MarcoFalke Do your tooltips work? Can you investigate why you seem to have white-on-white palette here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,13,2016-10-05 04:47:08,454.75,,1,,"b""b' Going to close this for now. Seems there are still issues to solve with the yellow-tooltip colouring. Can revisit when some more research has been done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,closed,2017-01-15 05:06:13,68.45,4,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8889,closed,-,-,-,4,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,opened,2016-10-07 14:48:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,title,2016-10-07 14:48:03,00:00,,1,,"b""b' Untranslated strings in GUI'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,body,2016-10-07 14:48:03,00:00,,1,,"b'b"" I\'m using the pt-br interface and some texts are appearing in English.v 0.13""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,1,2016-10-07 14:48:03,137.8,,1,,"b""b' According to the [release process]url  we are only syncing translation from [transifex]url  before every rc.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,2,2016-10-07 14:48:03,38.73,,1,,"b""b' But these texts alread translated'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,3,2016-10-07 14:48:03,1011.72,,1,,"b""b' @FabioCarpi Can you give us some example strings"," or screenshots?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,4,2016-10-07 14:48:03,9.88,,1,,"b""b' I think he refers to the recent translations on transifex"," which are not yet fetched: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,5,2016-10-07 14:48:03,3.2,,1,,"b""b' They are going to be included in url  which is not out yet"," so closing the issue for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,closed,2016-10-08 10:49:23,1201.33,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,6,2016-10-07 14:48:03,223.83,,1,,"b""b' No @MarcoFalke. Are windows that always have translation"," but are not showing translated after the last updates'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,7,2016-10-07 14:48:03,5.98,,1,,"b""b' Hmm"," in this case I am going to quote @fanquake '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,8,2016-10-07 14:48:03,138.27,,,1,"b""b' @MarcoFalke as requested![capturar]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,reopened,2016-10-08 19:45:14,535.85,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,9,2016-10-07 14:48:03,1278.9,,1,,"b""b' I can confirm the issue.Somehow the  -strings in are not getting translated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,10,2016-10-07 14:48:03,67.32,,1,,"b'b"" Confirmed: The tr() strings in  don\'t even end up in the translation not even the English one. The reason for this is that that cpp file does not end up on the command line to in  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,11,2016-10-07 14:48:03,9.0,,1,,"b'b"" Many of the cpp\'s don\'t", because of: Wallet was disabled. Maybe that is the problem: still works when you build without wallet support," however the strings from the .cpp files will not be included.  It is possible that the system I use for generating the translations to upload doesn\'t have the wallet enabled. I had some issues here on Xenial and had to fall back to a Trusty VM. This could be the cause of the issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,12,2016-10-07 14:48:03,1099.23,,1,,"b""b' Should be fixed by #8911'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,closed,2016-10-13 09:51:55,846.68,0,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,13,2016-10-07 14:48:03,48.35,1,,,"b'b"" Yes I\'ve just pushed a commit to 0.13", 633c4a1f3690152bdda4b0ac7bcfde22c237183e," which when picked up by Transifex will enable the wallet messages to be translated again.Sorry for the mess.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,14,2016-10-07 14:48:03,1389.02,,1,,"b'b\' I am wondering if it is possible to ""translate"" those ""new"" string on transifex by a script.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,15,2016-10-07 14:48:03,440.63,,1,,"b""b' Just saying", in version 0.13.1rc2," the problem continues...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,16,2016-10-07 14:48:03,549.28,1,,,"b'b\' @FabioCarpi Unfortunately the translated string ""fell out"" of the transifex translation system. There may be a way to read them from the transifex cache and submit them via the api in an automated manner. I am not sure if @luke-jr has some script for the transifex api. (I remember this was up for discussion when changing the [product name]url  to as few places as possible", but I don\\\'t recall if a script emerged from that...)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8900,closed,-,-,-,2,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,opened,2016-10-15 21:45:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,title,2016-10-15 21:45:46,00:00,,1,,"b""b' Move orphan processing to ActivateBestChain'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,body,2016-10-15 21:45:46,00:00,,,1,b'b\' Based on #8928 because its the only way I can run tests.This will conflict a bit with #8865, but that\\\'s easy to resolve, and I\\\'d rather get some eyeballs on this sooner rather than later," so am leaving it freestanding. Once #8865 goes in the orphan processing will go into the CValidationInterface which manges ""net processing"" stuff. This further decouples ""main"" and ""net"" processing logic by movingorphan processing out of the chain-connecting cs_main lock andinto its own cs_main lock", beside all of the other chain callbacks. Once further decoupling of net and main processing logic occurs,orphan handing should move to its own lock, out of cs_main. Note that this will introduce a race if there are any cases wherewe assume the orphan map to be consistent with the current chaintip, however I am confident there is no such case (ATMP will failwithout DoS score in all such cases).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,1,2016-10-15 21:45:46,1296.5,,1,,"b""b' Closing for now. Will rebase on #9075 when its merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,closed,2016-11-03 19:22:16,1296.5,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,reopened,2016-11-18 03:28:03,485.78,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,2,2016-10-15 21:45:46,486.97,,1,,"b""b' Rebased on #9075...this now forms the last pull before  is split clean in two :).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,3,2016-10-15 21:45:46,699.62,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,4,2016-10-15 21:45:46,1104.98,,1,,"b""b' What is the rationale behind this refactoring please? What future changes is it enabling? Or what is it fixing?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,5,2016-10-15 21:45:46,191.83,,1,,"b""b' @rebroad  Decoupling unrelated logic to be able to split up main into validation and network handling parts.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,6,2016-10-15 21:45:46,100.53,,1,,"b'b"" @TheBlueMatt  One thing we don\'t currently do", but probably should, is try to reaccept orphan transactions to the mempool if their missing inputs appear in a block.  After this PR, would you suggest we just do that inside  ," or would that be problematic?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,7,2016-10-15 21:45:46,507.42,,1,,"b""b' utACK. You could get rid of the BOOST_FOREACH along the way"," if you wish.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,8,2016-10-15 21:45:46,94.38,,1,,"b""b' @sdaftuar that seems reasonable", yea. Not for this PR, though," indeed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,9,2016-10-15 21:45:46,13.43,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,10,2016-10-15 21:45:46,1328.7,,1,,"b""b' utACK d2b88f97a1235057290f9e8ca0bf11437ba919f8'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,closed,2016-11-24 00:27:33,1259.5,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8930,closed,-,-,-,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,opened,2016-10-17 03:00:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,title,2016-10-17 03:00:28,00:00,,1,,"b""b' block teasing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,body,2016-10-17 03:00:28,00:00,,,1,"b""b' Running latest master (with some debug tweaks). My node is sending headers to a peer", but when the peer asks for the blocks, they do not send due to historical block limiting. Ideally the block invs  should not have been sent, which triggered the request for the headers....?  extract: 2016-10-17 02:18:43 recv version: /Satoshi:0.12.1/: version 70012, blocks=427842, relay=1, services=00000005 them=127.0.0.1:50691, peer=573 2016-10-17 02:19:12 send inv block 0000000000000000024ab1ddba71eee85ca86dfd0b4b34fd69403f1508ba4770 (434646) peer=573 2016-10-17 02:24:13 send inv block 00000000000000000099d92a3e8889a7c898325e91b6de75c104fe36e6a941cd (434647) peer=573 2016-10-17 02:24:53 recv getheaders to end. send 5 headers (height 434643 to 434647) peer=573 2016-10-17 02:24:53 recv getheaders to 0000000000000000024ab1ddba71eee85ca86dfd0b4b34fd69403f1508ba4770. send 3 headers (height 434644 to 434646) peer=573 2016-10-17 02:24:53 recv getheaders to 00000000000000000099d92a3e8889a7c898325e91b6de75c104fe36e6a941cd. send 4 headers (height 434644 to 434647) peer=573 2016-10-17 02:24:53 historical block serving limit reached," disconnect peer=573  working on a fix. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,closed,2016-10-17 03:03:34,3.1,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,reopened,2016-10-17 03:04:08,0.57,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,1,2016-10-17 03:00:28,17.42,,1,,"b'b"" re-opened accidentally. not really an issue as serving headers is still helpful even if we can\'t serve the blocks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,closed,2016-10-17 03:17:53,13.75,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,2,2016-10-17 03:00:28,2.3,,,1,"b""b' Out of interest","  why?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8934,closed,-,-,-,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,opened,2016-10-18 15:42:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,title,2016-10-18 15:42:48,00:00,,1,,"b""b' Improve logic for advertising blocks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,body,2016-10-18 15:42:48,00:00,,,1,"b""b' Revisit #4846 (comments were to wait until headers first had been tested sufficiently first!)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,1,2016-10-18 15:42:48,251.3,1,,,"b""b' OMG"," do we really use the similar code somewhere else? Using ternary operator twice on one line and without parens is getting closer to the programmers hell!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,2,2016-10-18 15:42:48,275.75,,1,,"b'b"" @paveljanik It\'s similar to 2 \\\\* 3 + 1 which", as far as I know," most people don\'t use brackets for as it\'s understood what order the numbers are combined. Rebased.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,closed,2016-10-19 00:29:51,527.05,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,reopened,2016-10-19 00:29:54,0.05,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,3,2016-10-18 15:42:48,29.07,,,1,"b'b"" Personally"," I\'d highly appreciate a constant variable above for readability.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,4,2016-10-18 15:42:48,14.55,,,1,b'b\' This won\\\'t compile, it\\\'s reintroducing a checkpoints dependency (nBlockEstimate) that was recently removed by 0278fb5 in PR #8865  (the whole block is not entered if we\\\'re in initial block download, and if we\\\'re not... then any block we\\\'d consider would already be past the estimator that it gives us). For future PR\\\'s it would be much more helpful to write what a change intends to accomplish (and, especially," WHY) in terms more specific than ""improve"". :)  Hopefully every change is an improvement.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,5,2016-10-18 15:42:48,136.27,,1,,"b""b' @gmaxwell Yes"," I realise that #8865 broke it. Have now rebased correctly. Apologies for this. I also agree that the word improve is entirely redundant if we assume that all PR are intended to improve :) (I tend to avoid assuming to the point of not even making common sense ones!)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,6,2016-10-18 15:42:48,1375.87,,1,,"b""b' @dcousens Have amended since your comment it should be more readable now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,7,2016-10-18 15:42:48,654.33,,,1,"b'b"" NACK. This is thoroughly busted -first you need cs_main here to do what you\'re trying"," second you can\'t skip announcing a block to a peer just because you think it\'s on a longer (not necessarily more work)  chain than yours!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,8,2016-10-18 15:42:48,289.83,,1,,"b""b' Needs rebase if still relevant.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,9,2016-10-18 15:42:48,810.38,1,,,"b'b\' @sdaftuar Not sure it\\\'s ""thoroughly"" busted but your comment has helped me to notice a mistake in the coding it should be pindexLastCommonBlock not pindexBestKnownBlock that I am using. Making this change now.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,10,2016-10-18 15:42:48,474.85,,1,,"b""b' @rebroad During IBD", nNewHeight is always larger than any pindexLastCommonBlock," so this removes the protection the original code was intended to give.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,closed,2017-05-17 08:50:44,500.83,2,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,8958,closed,-,-,-,2,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,opened,2016-10-25 10:40:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,title,2016-10-25 10:40:36,00:00,,1,,"b""b' 0.13.2 backports'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,body,2016-10-25 10:40:36,00:00,,1,,"b""b' backports for 0.13.2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,1,2016-10-25 10:40:36,3.23,,1,,"b""b' #8357 and #8845 might be candidates'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,closed,2016-10-25 17:24:46,404.17,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,2,2016-10-25 10:40:36,101.7,,1,,"b""b' @laanwj: Needs rebase for 0.13.2 (I changed the title)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,reopened,2016-10-27 12:25:32,1140.77,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,3,2016-10-25 10:40:36,24.3,,1,,"b""b' Done'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,closed,2016-11-02 14:16:02,110.5,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9011,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,opened,2016-10-25 15:32:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,title,2016-10-25 15:32:47,00:00,,1,,"b""b' Fix block-connection performance regression'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,body,2016-10-25 15:32:47,00:00,,,1,"b""b' @JeremyRubin found a performance regression introduced by b3b3c2a5623d5c942d2b3565cc2d833c65105555 which causes us to make copies of every transaction we connect to tip a while back"," but no one had gotten around to fixing it yet. By switching to using shared_ptrs for blocks in several places we not only fix the performance regression but open up the possibility of switching GetMainSignals() callbacks to background threads much more easily.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,1,2016-10-25 15:32:47,177.87,1,,,"b""b' OK", ended up rewriting the PR quite a bit," cleaning it up and resolving the nits folks had raised it now no longer has this crazy map thing that can be used as both a paramter and a return value.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,2,2016-10-25 15:32:47,55.97,,,1,"b""b' re-utack"," much cleaner!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,3,2016-10-25 15:32:47,1213.8,,1,,"b'b"" Before headers first", reorgs were dealt with by accumulating the changes inanother cache level, which was only flushed if the reorg succeeded. Now there is much less a concept of reorgs, and only attempts to improvethe tip. ABC finds what block we want and like to be the tip, and callsABCS to make progress towards that. In case of failure, we find what otherblock we\'d like to become the tip (which may be the previous one), and makeprogress towards that. cs_main is only released once we\'re in a strictlybetter state than what we started off in," as otherwise you\'d briefly exposethe forking point to GBT during a reorg. EDIT: see url  I don\'t think there is an issue for this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,4,2016-10-25 15:32:47,406.32,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,5,2016-10-25 15:32:47,22.25,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,6,2016-10-25 15:32:47,100.67,,1,,"b""b' Travis failures:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,7,2016-10-25 15:32:47,404.37,,1,,"b""b' Looks like this is not rebased correctly GH shows 5 conflicting files (and they match my own tests).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,8,2016-10-25 15:32:47,1085.43,,1,,"b""b' It just needs rebased again"," closing for now and will rebase on top of #9075 after that gets merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,closed,2016-11-09 01:19:28,586.68,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,reopened,2016-11-17 23:27:48,1328.33,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,9,2016-10-25 15:32:47,1328.77,,1,,"b""b' Rebased on  #9075.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,10,2016-10-25 15:32:47,203.47,,,1,"b""b' Rebased after #9125 was merged. Note that #9125 should have fixed most of the performance regression here (and was likely the source of its major reorg speedup", though it should help in more real-world conditions as well), though this should still help some," and is a good step towards #9027 as well as improving callback concurrency in the future.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,11,2016-10-25 15:32:47,1087.33,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,12,2016-10-25 15:32:47,322.27,,1,,"b""b' Code review ACK"," will test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,13,2016-10-25 15:32:47,1212.23,,1,,"b""b' ACK 7b717cd'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,14,2016-10-25 15:32:47,587.52,,1,,"b""b' Rebased after #9260.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,closed,2016-12-05 07:08:03,460.25,1,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9014,closed,-,-,-,1,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,opened,2016-10-25 19:44:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,title,2016-10-25 19:44:43,00:00,,1,,"b""b' Enable various p2sh-p2wpkh functionality'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,body,2016-10-25 19:44:43,00:00,,1,,"b""b' A followup to url  which includes a number of additional changes. The only addition of data to wallets is done in importprivkey with the normal and gating. I can write up tests for these if I get concept ACKs.  I wrote and manually tested these by turning on p2sh-p2wpkh by default via getnewaddress"," and seeing what failed. Rest of failures seem to involve and related sigop counting errors.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,1,2016-10-25 19:44:43,285.15,,1,,"b'b"" Why do you need GetWitnessKeyID in keystore? That doesn\'t seem to be something that belongs in the interface"," and could just be implemented on top in the signing logic.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,2,2016-10-25 19:44:43,958.73,,1,,"b'b"" @sipa it certainly does not need to be there and is likely inappropriate. I\'m not sure exactly where to put it:Will require access to a wallet", and is used in rpcmisc, rpcdump," and .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,3,2016-10-25 19:44:43,3.22,,1,,"b""b' It only needs access to a keystore"," no? Not to a wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,4,2016-10-25 19:44:43,1.75,,1,,"b""b' @sipa yes"," I misspoke '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,5,2016-10-25 19:44:43,54.15,,1,,"b""b' Moved GetWitnessKeyID outside of Keystore and addressed some nits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,6,2016-10-25 19:44:43,217.57,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,7,2016-10-25 19:44:43,12.33,,1,,"b'b"" I\'m going to close this.  Segwit activation is a bit away so there\'s not much rush for this code"," and we\'re expecting a new address format regardless so we\'ll likely only be supporting that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,closed,2017-02-28 21:17:37,92.9,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,8,2016-10-25 19:44:43,1057.18,,1,,"b'b""  Unlikely. Current wallets", even 0.15, can\'t send to bech32," so we\'ll need to support P2SH-wrapped addresses at least initially.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,9,2016-10-25 19:44:43,120.97,,1,,"b""b' Re-opening since segwit is actually activating.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,reopened,2017-08-18 16:55:46,1178.15,0,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,10,2016-10-25 19:44:43,21.67,1,,,"b""b' oops", @luke-jr opened his own pared-down copy," closing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,closed,2017-08-18 17:17:26,21.67,1,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9017,closed,-,-,-,1,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,opened,2016-11-02 15:15:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,title,2016-11-02 15:15:55,00:00,,1,,"b'b\' unify capitalization of ""bitcoin address""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,body,2016-11-02 15:15:55,00:00,,1,,"b'b\' in some places it was ""Bitcoin address"" in other places it was ""bitcoin address"".  I\\\'ve unified them to make them consistent with the idea that (capital ""B"") Bitcoin refers to the protocol. Of course I left it where it was the start of a sentence. Also I ignored everything in and  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,1,2016-11-02 15:15:55,8.62,,1,,b'b\' Huh, personally," I\\\'d call it ""Bitcoin address"" with a capital ""B""", so it is correct the way it was before. Also, we should make sure that translation strings are not touched unnecessarily. Please note that translators have to go through all of them," even if ""nothing""/ changed.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,2,2016-11-02 15:15:55,15.33,,1,,"b'b\' to me it doesn\\\'t matter but it seems it should be consistent.  I was thinking that Bitcoin was the protocol itself so that if it was talking about one address to receive bitcoins then it would be lowercase.  but anywayin that case there are many instances of ""bitcoin address""  should we change those to ""Bitcoin address""? I didn\\\'t touch anything in the directory", I guess that\\\'s the translator stuff isn\\\'t it?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,3,2016-11-02 15:15:55,66.27,,1,,b'b\' One deposits bitcoin to a Bitcoin address S-Matthew," revert this and change the ""bitcoin address"" if you want to get this through.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,4,2016-11-02 15:15:55,64.82,,1,,"b'b\' ok coolso now I\\\'ve changed all instances of ""bitcoin address"" to ""Bitcoin address"" I ignored everything in since jonasschnelli said that\\\'s not consequential\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,5,2016-11-02 15:15:55,130.37,,1,,"b""b' trivial ACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,6,2016-11-02 15:15:55,1438.02,,,1,"b'b\' I tried to look up the ""correct"" capitalization"," but there seem to be some discrepancy and no clear and ""correct"" way. I think it is fine to use both capitalizations exchangeably.  I understand the need to unify the capitalization", but if that means we possibly need to change all of that back to the other way next year, I\\\'d prefer to not change it at all.  Closing for now. (Heh," maybe wait until there is a wikipedia article [Capitalization of ""Bitcoin""]url  just like [Capitalization of ""Internet""]url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,closed,2016-12-02 19:59:20,283.42,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,7,2016-11-02 15:15:55,205.5,,1,,"b'b"" yeah", I feel you, but in my idea, likeWikipedia is fully of a lot of crapI knowsince I put a bunch of it there. This GitHub code is sort of like the canonical reference, isn\'t it? So for instanceI feel like if the capitalization were firmly established here then others would adopt to the way we make it, and not really the other way around," you know what I mean? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,8,2016-11-02 15:15:55,643.73,,,1,"b'b"" We don\'t act as a reference for spelling (luckily)", but I am not strongly against this change," if it at least makes our spelling consistent.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,reopened,2016-12-13 10:08:34,849.23,0,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,9,2016-11-02 15:15:55,723.23,,1,,"b'b"" Checkout the footnote on page 2 from Sarah Meiklejohn\'s paper.   Following established convention", we use the capitalized term Bitcoin   when referring to the payment system and peer-to-peer network   and the lowercase term bitcoin (abbreviated BTC)," when referring   to the unit of currency.  The pull request under consideration applies this convention in a consistent way to the codebase. Resources: url ~  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,10,2016-11-02 15:15:55,935.12,,1,,"b'b"" Closing this. Doesn\'t seem to be consensus. Needs a rebase.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,closed,2017-01-12 13:46:55,218.35,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9064,closed,-,-,-,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,opened,2016-11-11 22:07:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,title,2016-11-11 22:07:38,00:00,,,1,"b""b' Change sync_blocks to pick smarter maxheight (on top of #9196)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,body,2016-11-11 22:07:38,00:00,,1,,"b""b' This PR changes the test function to make it more reliable.  The change is based on #9196 to prevent a test failure that would otherwise start to happen. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,1,2016-11-11 22:07:38,1023.5,,1,,"b""b' Rearranged if-conditions as suggested offline by @morcos.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,2,2016-11-11 22:07:38,17.23,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,3,2016-11-11 22:07:38,341.53,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,4,2016-11-11 22:07:38,91.2,,1,,"b""b' @ryanofsky The 60cf51c patch looks like a separate bugfix"," not strictly related to tests. Would you mind submitting this as another pull request?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,closed,2016-11-23 12:01:41,834.05,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,reopened,2016-11-23 12:01:44,0.05,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,closed,2016-11-23 12:02:38,0.9,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9139,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,opened,2016-11-13 22:07:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,title,2016-11-13 22:07:48,00:00,,1,,"b""b' : sweepprivkeys method to scan UTXO set and send to local wallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,body,2016-11-13 22:07:48,00:00,,,1,"b""b' Does this look like a good approach?  TODO:  * rawtransaction sweep functionality * GUI sweep (Receive tab?) * abstract shared sweep logic * ~~RPC tests~~  NOTE: Currently needs #14602 for tests to pass'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,1,2016-11-13 22:07:48,573.33,,,1,"b'b\' Concept ACK (Haven\\\'t really looked at the code).I think a sweep function would be a great feature. One could import ""old"" private keys into a new HD wallet for example. Possible extension: could be an extended version of that", moving all funds form a HD seed to a new one, generating large lookup-windows on different chainpathes. It could also be UTXO set only not requiring a -rescan.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,2,2016-11-13 22:07:48,588.22,,1,,"b'b"" From a raw flow perspective", the generation of the sweep transaction is something that works from public information and should be possible on an online node without access to the private keys... so that one should be a \'createrawsweeptransaction\' which takes a list of  (and maybe private keys ... maybe some kind of BIP32 chain spec) and returns a transaction that spends all coins assigned to matching keys," potentially with arguments to limit the set of inputs collected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,3,2016-11-13 22:07:48,1070.77,,1,,"b""b' Hmm"," what about extending RPC with another optional argument defaulting to  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,4,2016-11-13 22:07:48,12.0,,1,,"b""b' sweepprivkeys is intended for users"," and not to import keys. Users should never use importprivkey.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,5,2016-11-13 22:07:48,1319.57,1,,,"b'b"" Concept ACK. Please don\'t do this. People confuse and all over the place. The least we can do is make them separate RPCs with separate documentation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,6,2016-11-13 22:07:48,798.63,,1,,"b'b"" Seems this won\'t be making it for 0.15. Untagging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,7,2016-11-13 22:07:48,1284.67,,,1,"b""b' Concept Re-ACK. Needs rebase. I guess this is also something we could want for 0.16. I have no strong opinion about sweep versus createrawsweep. The approach we took for bumpfee was also to do the non raw one first"," although I agree that the ramification of sweep is different then a bump.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,8,2016-11-13 22:07:48,461.0,,1,,"b""b' Rebased and added a simple functional test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,9,2016-11-13 22:07:48,1402.27,,1,,"b""b' Fixed the test failure (missing lock on  )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,10,2016-11-13 22:07:48,185.9,,,1,"b""b' @luke-jr: can you rebase this once again? Thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,11,2016-11-13 22:07:48,35.33,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,12,2016-11-13 22:07:48,18.97,1,,,"b'b\' utACK a397deb247fc404064cf76ede8d64eb68f4fefe6 (will test soon). I personally dislike the ""direct""-approach. I would like to ""see"" the transaction before submitting.  Possible extensions: * Remove the signing and broadcasting", accept a pubkey and rename it to (or similar) * Add support for HD sweep ()\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,13,2016-11-13 22:07:48,651.03,,,1,"b'b"" ACK using a397deb247fc40. This is a great feature many people need. I\'m moving on to test it on mainnet using the v0.15.0.knots20170914 build. I encourage inclusion and later on apply extensions (esp what @jonasschnelli recommends above).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,14,2016-11-13 22:07:48,1349.62,,1,,b'b\' The check fail is unrelated to this PR and limited to the ARM build," lacking the ""flake8"" python library. removing unused imports won\\\'t fix linteither.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,15,2016-11-13 22:07:48,1370.27,,1,,"b""b' ping and HNY everyone :^P'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,16,2016-11-13 22:07:48,519.17,,1,,"b'b"" Since the keys are not added to the wallet", and thus bumpfee won\'t work," it makes sense to set nSequence to support rbf and return a list of signed raw transactions that each pay a slightly higher fee?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,17,2016-11-13 22:07:48,649.4,,1,,"b""b' @MarcoFalke I believe yours is a brilliant idea. Just to be clear", you mean a list of signed raw transactions that are ready to replace the one made and can be fired up from the lowest fee to the higher to bump if necessary," right? such transactions should be discarded once enough confirmations are present.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,18,2016-11-13 22:07:48,1315.98,,1,,"b'b"" If we still want this", it needs  in terms of #12196. But I\'m going to close it for now, it\'s been open since 2016 and there\'s no clear progress.  It might make sense to open a new PR if you start work on this again," or you can ask me to reopen it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,closed,2018-08-31 08:53:55,646.12,2,13,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,19,2016-11-13 22:07:48,327.92,,,1,"b'b"" Interesting revamp. I have read the whole thread in #12196", is there some documentation being worked about use examples for to be used in place of sweeping? I like to try to sort out my needs using that, but haven\'t kept myself up to date enough to understand it without handholding. There is the integration test in python," but...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,20,2016-11-13 22:07:48,257.45,,1,,"b""b' Rebased"," please reopen @laanwj '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,21,2016-11-13 22:07:48,32.63,,1,,"b'b"" @luke-jr You can only (force) push after it has been reopened. If the branch is different in any way"," it won\'t reopen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,reopened,2018-10-29 20:48:48,714.88,2,15,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,22,2016-11-13 22:07:48,104.13,,1,,"b""b' NOTE: Currently needs #14602 for tests to pass  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,23,2016-11-13 22:07:48,232.92,,1,,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#16129]url  (refactor: Remove unused includes by practicalswift)* [#13756]url  (wallet: ""avoid_reuse"" wallet flag for improved privacy by kallewoof) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,24,2016-11-13 22:07:48,22.7,,1,,"b""b' Concept ACK. Still needs rebase. IMO this should be reworked to take a descriptor which would address the points above about accepting  keys. Agree that returning the raw transaction is preferable ( ) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,25,2016-11-13 22:07:48,1243.92,1,,,"b'b"" I\'m afraid this PR doesn\'t build when rebased on  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,26,2016-11-13 22:07:48,1212.67,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,27,2016-11-13 22:07:48,197.88,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,28,2016-11-13 22:07:48,1035.18,,1,,"b'b\' This should probably use ""scantxoutset"" internally (rebase issue). I also think it should be a call (rather then directly signing and executing). Maybe you can change this to be an argument for ""scantxoutset"" that would also spit out a rawtransaction (with configurable fee and eventually configurable target address) for the sweep transaction.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9152,open,-,-,-,3,21,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,opened,2016-11-27 05:40:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,title,2016-11-27 05:40:56,00:00,,1,,"b'b\' ""Make"" Error while installing bitcoind. on Mac 10.12.1 sierra \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,body,2016-11-27 05:40:56,00:00,,,1,"b'b\' When I tried to ""make"""," i get errors below and cannot proceed next step like ""which bitocoind""or so.. on the book ""o\\\'Reily"". Can you please help me out with how to solve this problem.  git v0.9.0rc1 Homebrew 1.1.1 -core (git revision 41a3; last commit 2016-11-23)  Thank you very much.  $ make Making all in src /  all-recursive Making all in . Making all in test /  all-am CXXLD  test_bitcoin clang: warning: argument unused during compilation: \\\'-pthread\\\' clang: warning: argument unused during compilation: \\\'-pie\\\' ld: entry point (_main) undefined. for architecture x86_64 clang: error: linker command failed with exit code 1 (use -v to see invocation) make[4]: *** [test_bitcoin] Error 1 make[3]: *** [all] Error 2 make[2]: *** [all-recursive] Error 1 make[1]: *** [all] Error 2 make: *** [all-recursive] Error 1\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,1,2016-11-27 05:40:56,20.78,,1,,"b'b"" You\'re using v0.9.0rc1? That\'s a prerelease from almost 3 years ago. Does the same thing happen with v0.13.1?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,2,2016-11-27 05:40:56,4.2,,,1,"b""b' Thank you. I could install well.  I was referring the book from 2014. Dec. This causes me a problem. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,closed,2016-11-27 06:06:00,25.07,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,reopened,2016-11-27 09:02:21,176.35,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,3,2016-11-27 05:40:56,183.35,1,,,"b'b\' I thought I could solve the problem as I could use the commands ""which bitcoind"" or ""which bitcoin-cli"". but when I use ""make"" there is still errors left and cannot use ""bitcoind"" Here is what i get from make"," Please help me. And I have not much knowledge with command line. sorry and thank you for your help.  $make CDPATH=""${ZSH_VERSION+.}:"" && cd . && / /aclocal-1.15 -I  aclocal-1.15: warning: couldn\\\'t open directory \\\'\\\': No such file or directory  cd . && / /automake-1.15 foreign :441: error: required file \\\'build-\\\' not found :441: \\\'automake add-missing\\\' can install \\\'compile\\\' :22: error: required file \\\'build-\\\' not found :22: \\\'automake add-missing\\\' can install \\\'\\\' :22: error: required file \\\'build-\\\' not found :22: \\\'automake add-missing\\\' can install \\\'\\\' :32: error: required file \\\'buildsh\\\' not found :32: \\\'automake add-missing\\\' can install \\\'install-sh\\\' :32: error: required file \\\'build-\\\' not found :32: \\\'automake add-missing\\\' can install \\\'missing\\\' :13: error: required file \\\'-\\\' not found :57: :57: The usual way to define \\\'LIBTOOL\\\' is to add \\\'LT_INIT\\\' :57: to \\\'\\\' and run \\\'aclocal\\\' and \\\'autoconf\\\' again. :57: If \\\'LT_INIT\\\' is in \\\'\\\'", make sure :57: its definition is in aclocal\\\'s search path. : error: required file \\\'build-\\\' not found : \\\'automake add-missing\\\' can install \\\'depcomp\\\' parallel-tests: error: required file \\\'builddriver\\\' not found parallel-tests: \\\'automake add-missing\\\' can install \\\'test-driver\\\' make: *** [] Error 1\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,4,2016-11-27 05:40:56,1222.62,,,1,"b""b' @genk1 it looks like you might have deleted some  since running  (or confgure) try running ./ and ./configure again. (Admittedly it would be nice if the Makefile was able to intelligently realise this).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9228,closed,5,2016-11-27 05:40:56,135.52,,,1,"b'b\' @rebroad Thanks for you help. I could finally figured out the way with your suggestion. The reason i couldn\\\'t run was ""libtool"" on ","libevent"" on configure. Thank you very much.\''
bitcoin	9228	closed	closed	 - 	2016-11-28 08:02:13	1379.87	1	2	4
bitcoin	9228	closed	-	-	-	-	1	2	4
bitcoin	9245	closed	opened	luke-jr	2016-11-30 08:29:55
bitcoin	9245	closed	title	luke-jr	2016-11-30 08:29:55	00:00		+1		b""b' Drop IO priority to idle while reading blocks for peer requests and startup verification'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,1,2016-11-30 08:29:55,11.97,1,,,"b'b"" Concept ACK. Though not very happy to introduce platform-specific voodoo we only just got rid of thread priority manipulation. But it may be worth the hassle"," I don\'t know.  Can we quantify whether this works or not somehow? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,2,2016-11-30 08:29:55,8.95,,1,,"b""b' This will also delay other processing", in particular block relay-at least until the handling is made more concurrent-no?  Not a reason to not do it, but maybe a reason to not do it by default for everyone. I second the need to quantify this-I could imagine it making for a big usability improvement. ... or not mattering at all. If the former," I want it... if the latter... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,3,2016-11-30 08:29:55,42.05,1,,,"b'b"" Whenever I restart my node lately", I find myself eventually manually  ing the entire process as it slows down other things monitoring it in  . I can\'t be sure it\'s sending out old blocks," but I can\'t imagine what else it\'d be spending so much time reading... :/  Added Mac and Windows support for completeness.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,4,2016-11-30 08:29:55,885.45,,1,,"b""b' Travis failure:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,5,2016-11-30 08:29:55,513.0,,1,,"b'b"" Looks like to make the Windows part work", we need to bump _WIN32_WINNT to 0x0600 which means it will only run on Vista or newer. AFAIK this is okay(?)," but I\'m going to leave it for a separate PR...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,6,2016-11-30 08:29:55,1184.33,,1,,"b""b' I like this (concept ACK) although I wonder what the impact is on the p2p network as a whole if everyone ran this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,7,2016-11-30 08:29:55,922.02,,1,,"b'b""  There are win32 and win64 builds. Can\'t this just be enabled on the win64 build only?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,8,2016-11-30 08:29:55,1077.52,,,1,"b'b""  Isn\'t Vista the version after Windows XP? As we dropped support for Windows XP in 0.13", it seems that requiring Vista for 0.15 is fine. Could be done," but it\'d be confusing to couple those. The low-end systems running 32-bit versions would probably need this more.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,9,2016-11-30 08:29:55,911.6,,1,,"b""b' Rebased...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,10,2016-11-30 08:29:55,624.47,1,,,"b'b"" Hmm", I dont think this is really the best idea as long as our message processing is still single-threaded. Really we need to refactor stuff so that block reading is async and the network processing can continue for other peers while we\'re serving blocks for peers in IBD," otherwise we may block receiving a new block longer than required.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,11,2016-11-30 08:29:55,33.6,,1,,"b'b"" That\'s somewhat independent from this issue. If users need to shut off their node to use their computer"," the delay for processing a new block will be even longer.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,12,2016-11-30 08:29:55,102.53,,1,,"b""b' @TheBlueMatt @luke-jr", maybe a compromise would be to make this behavior configurable," and perhaps to default to dropping priority if user is running bitcoin-qt on a desktop.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,13,2016-11-30 08:29:55,246.77,,1,,"b""b' Another approach which might be simpler would be to have the validation.h-exposed versions of ReadBlockFromDisk drop io priority so that net_processing will use low priority when answering remote-node queries but connecting blocks will not. With 0.15 I/O when doing initial sync is somewhat better"," so this may also be less of an issue now unless the user is running with -peerbloomfilters.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,14,2016-11-30 08:29:55,514.33,,1,,"b'b"" @TheBlueMatt That\'s exactly what this already does... priority is only dropped when serving peers"," not when connecting blocks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,15,2016-11-30 08:29:55,988.83,1,,,"b'b"" @luke-jr I was referring to the possibility of not exposing a priority flag in validation.h\'s API that seems a bit overkill IMO", as evidenced by the fact that there are now two ReadBlockFromDisk calls in net_processing which dont get the low-priority flag :p. Though that would also result in RPC ReadBlockFromDisk calls getting de-prioritized.  More importantly, I\'m curious how much we need this anymore it seems most of the complaints about I/O usage were primarily due to 0.13.1 preferential  systems where your I/O is severely limited," I both don\'t know how much this will help (in my experience Linux\' ionice is mostly worthless when it comes to desktop latency) and don\'t know if its not better to direct people towards maxuploadtarget or peerbloomfilters so as to avoid simply slowing down your peers because your I/O is too slow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,16,2016-11-30 08:29:55,26.62,,1,,"b'b"" Before writing this"," I generally ionice\'d the entire bitcoind process to maintain system usability.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,17,2016-11-30 08:29:55,1295.67,,1,,"b""b' Concept ACK. You need to mark the other ReadBlockFromDisks in net_processing low-priority as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,18,2016-11-30 08:29:55,1211.47,,1,,"b""b' Concept ACK"," but needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,19,2016-11-30 08:29:55,131.48,,1,,"b""b' Rebased and added the additional deprioritisations requested by @TheBlueMatt '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,20,2016-11-30 08:29:55,203.38,,1,,"b""b' utACK 91ccbbb87'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,21,2016-11-30 08:29:55,55.32,,1,,"b'b\' Needs rebase after LookupBlockIndex-""rename""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,22,2016-11-30 08:29:55,1336.57,1,,,"b'b"" I considered making this change in #12618 and there\'s a comment about it there. This is much more dangerous than a CPU scheduler change (like the one I just linked for two reasons).  On Linux the I/O scheduling stuff is very primitive", and is quite a strong policy. From the man page:  This means that at the idle I/O processing level you can get starved **forever** if anything else at all is using the disk. This is quite different from something like  , which just deprioritizes you a little bit. The CPU scheduler actually has a that works like  , but it\'s dangerous for the same reason that is dangerous, so I didn\'t use it.  The other thing that I\'m fairly certain of (but could be wrong about) is that I believe the kernel doesn\'t really take into account multi-queue devices when considering idleness of a block device. There\'s a lot of discussion about this online if you look at people talking about the %util field in iostat output, e.g. [here]url  I believe for this reason could starve you out from accessing a disk when it actually does have idle capacity remaining.  I think we should test this change more (or get a better understanding of the Linux I/O scheduler before proceeding with this change). The crude and easy-to-get wrong policy is part of the reason that I think glibc doesn\'t expose this system call in the first place. Not sure that I can think of an actual attack off-hand, but this is a DOS vector if you create N connections to a host, ask for blocks from all N connections," and then have some other mechanism to cause them to use up their disk I/O.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,23,2016-11-30 08:29:55,1141.97,,1,,"b'b"" This has been open since 2016 and it\'s still uncertain whether it\'s a good idea to merge. Closing","f or now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,closed,2018-09-10 16:59:48,509.88,5,18,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,24,2016-11-30 08:29:55,258.63,,1,,"b""b' There are plenty of ACKs here", plenty of testing," and only speculation on why there could (in very improbable circumstances) be a problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,reopened,2018-09-11 17:31:18,31.5,5,19,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,25,2016-11-30 08:29:55,1213.92,,1,,"b""b' reopened on request'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,26,2016-11-30 08:29:55,111.2,,1,,"b'b"" There hasn\'t been much activity lately and the patch still needs rebase", so I am closing this for now. Please let me know when you want to continue working on this," so the pull request can be re-opened.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,closed,2018-12-12 19:23:34,112.27,5,21,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9245,closed,-,-,-,5,21,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,opened,2016-12-03 05:47:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,title,2016-12-03 05:47:43,00:00,,1,,"b'b"" There\'s two types of flags: consensus and script""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,body,2016-12-03 05:47:43,00:00,1,,,b'b\' Replaces #7779 Unlike the previous," this distinguishes between consensus flags and the subset of them that are only related to script. We can decouple them from each other.  There\\\'s extra exploration in url Things to explore:  Calling GetConsensusFlags from ContextualCheckBlock or ""upwards"" should look bad in benchmarks (although maybe not so much since bip9 is cached and ISM has been eliminated)"," but would complete GetConsensusFlags().  Moving GetConsensusFlags ""upwards"" can reduce the impact of unifying logic from both ConnectBlock and ContextualCheckBlock in GetConsensusFlags.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,closed,2016-12-03 09:31:00,223.28,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,reopened,2016-12-03 09:49:14,18.23,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,1,2016-12-03 05:47:43,1309.58,,,1,"b""b' good'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,2,2016-12-03 05:47:43,3.58,,1,,"b""b' hajs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,3,2016-12-03 05:47:43,524.1,1,,,"b""b' Updated code and description.  EDIT: sorry! still failing tests for a supposedly simple POC!  Also sorry for maybe making more commits than necessary", squash suggestions very wecomed," specially if they contain suggestions about the new commit message.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,4,2016-12-03 05:47:43,456.62,,1,,"b'b"" Rebased"," still don\'t understand why the script_ are failing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,5,2016-12-03 05:47:43,395.72,,1,,"b""b' Needed rebase"," rebased on top of #10427'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,6,2016-12-03 05:47:43,225.15,,1,,"b'b"" Needed rebase"," even though the first commit of #10192 hasn\'t been merged yet (that will need rebase too).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,7,2016-12-03 05:47:43,717.9,,1,,"b'b"" Needed rebase after #10192. I still don\'t understand why the tests commented in url  are failing. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,8,2016-12-03 05:47:43,207.75,,1,,"b""b' Closing for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,closed,2017-08-24 21:48:08,718.9,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9271,closed,-,-,-,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,opened,2016-12-12 15:52:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,title,2016-12-12 15:52:50,00:00,,1,,"b""b' Let wallet importmulti RPC accept labels for standard scriptPubKeys'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,body,2016-12-12 15:52:50,00:00,,1,,"b""b' Allow importmulti RPC to apply address labels when importing standard scriptPubKeys. This makes the importmulti RPC less finnicky about import formats and also simpler internally.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,1,2016-12-12 15:52:50,97.27,,1,,"b""b' The last travis run for this pull request was 148 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,closed,2018-07-21 17:30:06,97.27,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,reopened,2018-07-21 17:30:07,0.02,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,2,2016-12-12 15:52:50,226.77,,,1,"b""b' utACK 98ea64cf232c34d4b1aebe738b3956191667cd76. Looks like a nice simplification too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,3,2016-12-12 15:52:50,1185.83,,1,,"b""b' utACK 98ea64cf232c34d4b1aebe738b3956191667cd76'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,closed,2018-09-10 17:03:05,1412.97,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9332,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,opened,2016-12-13 15:25:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,title,2016-12-13 15:25:58,00:00,,1,,"b""b' How to verfing Bitcoin Core Release Signing Keys'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,body,2016-12-13 15:25:58,00:00,,1,,"b""b' How to verfing Bitcoin Core Release Signing Keys'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,closed,2016-12-13 16:29:47,63.82,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,reopened,2016-12-13 16:29:52,0.08,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,1,2016-12-13 15:25:58,118.28,,1,,"b'b"" Currently there is only a single release signing key and you can onlyverify it indirectly", i.e. by trusting a person or a chain of personswho trust Wladimir: Wladimir handles the release key and signed itwith his personal key. Wladimir\'s personal key is again signed by anumber of people... If you happen to know some of those people, youcan verify their key and thus verify the release signing key. (Giventhat they properly verify pgp keys) Detailed steps can be found inurl (requires basic knowledge about pgp) Alternatively you can verify a Bitcoin Core Release by recreating itfrom the source. Even tough each released tag is signed with Wladimirspersonal key, it is not required to verify the signature in this case.Instead, you follow the gitian guide for the released git tag (detailsin the /doc folder). And finally you verify your gitian result againone or more other gitian results that are signed by persons you trust.For example, you can find the signed results for 0.13.1 linux here:url (Again," this requires you to set up pgp and go to a key signing party) Further reading: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,2,2016-12-13 15:25:58,1179.23,,1,,"b'b"" I use Gpg4win  but I don\'t know the step to verify the Bitcoin Core Release. can you give me the instruction to verify released .  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,3,2016-12-13 15:25:58,9.0,1,,,"b'b"" Sorry"," we don\'t provide software support. I am sure you will get an answer on url  if you let them know which software you are using.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,closed,2016-12-15 00:36:19,486.45,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9341,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,opened,2016-12-17 21:43:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,title,2016-12-17 21:43:25,00:00,,1,,"b""b' Linearize script update (hash byte reversal and Python 3 support)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,body,2016-12-17 21:43:25,00:00,,1,,"b""b' Add support for reversed hash bytes. Add support for Python 3. The linearization scripts can now run on Python 2 or 3.  Continuing #9304.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,1,2016-12-17 21:43:25,23.63,,1,,"b""b' Found a small bug affecting Python 3. Will update in a bit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,2,2016-12-17 21:43:25,230.23,1,,,"b'b"" Nevermind. It wasn\'t a bug after all. Once I clarified things (command line foolishness on my behalf)", I ran Python 2 and 3 with and without the bytes reversed, then ran *shasum -a 256 * each time the bootstrap file was written. The results were the same.  While here," I did add a few comments and then did a fixup and rebase.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,3,2016-12-17 21:43:25,1295.4,,1,,"b""b' Added some more documentation updates but seem to have borked my fixup. Will fix it momentarily.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,closed,2016-12-21 03:16:23,332.97,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,reopened,2016-12-21 03:30:20,13.95,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,4,2016-12-17 21:43:25,238.8,,,1,"b""b' Back to normal. Did a quick sanity check. Everything looks good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,5,2016-12-17 21:43:25,1219.52,,1,,"b""b' Fixup based on @cdecker feedback.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,closed,2017-01-05 10:19:54,409.57,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,6,2016-12-17 21:43:25,629.0,,1,,"b""b' utACK 3c8f63b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9373,closed,-,-,-,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,opened,2016-12-19 23:00:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,title,2016-12-19 23:00:20,00:00,,1,,"b""b' Remove CWalletTx merging logic from AddToWallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,body,2016-12-19 23:00:20,00:00,1,,,"b""b' This is a pure refactoring", no behavior is changing.  Instead of AddToWallet taking a temporary CWalletTx object and then potentially merging it with a pre-existing CWalletTx, have it take a callback so callers can update the pre-existing CWalletTx directly.  This makes AddToWallet simpler because now it is only has to be concerned with saving CWalletTx objects and not merging them.  This makes AddToWallet calls clearer because they can now make direct updates to CWalletTx entries without having to make temporary objects and then worry about how they will be merged.  Motivation for this change came from the bumpfee PR #8456 where we wanted to be able to call AddToWallet to make a simple update to an existing transaction, but were reluctant to, because the existing CWalletTx merging logic did not apply and seemed dangerous try to update as part of that PR. After this refactoring," the bumpfee PR could call AddToWallet safely instead of implementing a duplicate AddToWallet function.  This also allows getting rid of the CWalletTx copy constructor to prevent unintentional copying.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,1,2016-12-19 23:00:20,1170.22,,1,,"b""b' Rebased ed457a39ebaa672cce21622d3af422fe50730580 -> b1ac3cff00a51c0b8965b7a85fa489c98409ddff to resolve merge conflicts with bumpfee (#8456).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,2,2016-12-19 23:00:20,18.15,,1,,"b'b"" I\'m thinking of splitting this up into two commits to make it easier to review. First commit would change CreateTransaction to return a CTransactionRef instead of CWalletTx. Second commit would change AddToWallet to accept a CTransactionRef instead of a CWalletTx.  If any reviewers would prefer this you can let me know.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,3,2016-12-19 23:00:20,37.95,,,1,"b""b' Splitting commits into logical breaks is always appreciated. On 01/25/17 18:48"," Russell Yanofsky wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,4,2016-12-19 23:00:20,170.92,1,,,"b'b"" Hum", reading this (finally) now, I\'m not sure if I\'m a big fan of this approach. The call-function-which-callsback-to-let-you-fill-in-things-that-really-should-have-been-arguments pattern really sucks. On the flip side, passing in CWalletTxes, and copying those into mapWallet can also lead to issues if you try to do anything to the object you just passed in thinking it is what got stored in the wallet (a mistake I made recently).  Maybe we should adapt some of these functions () to just always take an rvalue to a CWalletTx. This leaves only AddToWalletIfInvolvingMe (I think) which has to update-or-add," and that can just use an internal version of AddToWallet which takes the CWalletDB as an argument instead of creating its own.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,5,2016-12-19 23:00:20,94.03,1,,,"b'b""  If you are adamant about this", could you say more about why it sucks? I think a callback is exactly the thing you want when you are doing an in-place update to a data structure.  In any case, I agree that CommitTransaction shouldn\'t take a callback," so I changed it to just take a transaction ref. So now there are way fewer callbacks (I think only 3 left in non-test code). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,6,2016-12-19 23:00:20,1134.57,1,,,"b'b"" I\'m just generally not a fan of callbacks making ownership models inconsistent. eg this kind of thing is where people always fuck up lockordering (though admittedly less so in this particular case", more the general case of callbacks going in both directions between modules).  So I do like this version much better, but still not sure the call back is required to be publicly  we just leave MarkReplaced and add a similar function for importpruned funds to use (I dont believe the double-disk-sync in importprunedfunds will make for  on-disk state?). Then we can make AddToWallet(..., callback) private and use AddToWalletIfInvolvingMe (which should probably also take a CTransactionRef, not a CTransaction," though maybe thats for a separate PR) publicly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,7,2016-12-19 23:00:20,24.77,,1,,"b""b'  Will try that. In the meantime I moved the non-AddToWallet cleanup to #9680 so it can be considered separately. By the way #9369 is another PR which significantly simplifies AddToWallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,8,2016-12-19 23:00:20,200.27,,,1,"b""b'  Implemented this suggestion. (New function is  ). I also went ahead and disabled the CWalletTx copy constructor. Interestingly this uncovered a bunch of cases where we were unwittingly copying wallet transactions in loops due to writing:  instead of:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,9,2016-12-19 23:00:20,1010.23,1,,,"b""b' Needs rebase to fix travis (sorry)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,10,2016-12-19 23:00:20,213.98,,1,,"b""b'  Rebased 71bce6b0f4aee487026afd31ada41a4e6028abd3 -> 31297f007b2424ab5036258ed782aacc70237a7f ([-]url  -> [-]url  for #12607.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,11,2016-12-19 23:00:20,272.07,,1,,"b""b' Re-slight-utACK 8a6ec70'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,12,2016-12-19 23:00:20,1214.3,,1,,"b""b' Rebased e15246fc310599770332021d14b96ce3f213a82b -> d62357a7c7c8c34a55580a31ddbfd04a9fa72591 ([-]url  -> [-]url  due to conflict with #12681 and after merge of base PR #9680.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,13,2016-12-19 23:00:20,101.0,,1,,"b""b'  Rebased cad8b14857d8e310ebad8a850c9e6450e13360fc -Rebased a494d2a4472ea63620b1f6cce20cb726590eb75b -Rebased 497f8a035ca2788564266f426033f52f982075ed -Rebased ba8ade94a4291b761f6a0395a9d6345782388c91 -Rebased 876d885730e8572e4616b0067595c91f0545dd55 -Rebased 9274458aedb68919618b13568432998b35430e6f -Rebased a0d1323d7ef977b0ed78ec675d8bb14fa5e672d5 -Updated 4b077293cec57f0b5f3bc010beb5ce1a9820a9ef -Updated 15adcd19e49399590b5224a6a5e0a11e003eac53 -Rebased ca7b4e24324464f04053145e58c25bfa5e0c5a51 -Added 1 commits 8cbc44f92f0932c87abadbd7c85e246d5b37b707 -Rebased 845345c70c42411373a480406686b67870a235ad -Rebased b35d6cd39f383af5c8d07312e7c7b8d2d3c12641 -Rebased da86f39d50de1ca559c96c87e17228f73ee1afef -Rebased 596f85075d21c474f4ae5a98ad5c89da7ace1484 -> ab2bd422f77c37d232467c45cdfa57a581c8008b ([-]url  -> [-]url  due to conflict with #15948'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,14,2016-12-19 23:00:20,241.48,,,1,"b'b\' utACK a494d2a4472ea63620b1f6cce20cb726590eb75b. I think the ""callback"" approach is perfectly fine here; they\\\'re not actual callbacks (in that they\\\'re not invoked at a different time or from a different thread); they\\\'re just functions to fill in values at the time the object is created.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,closed,2018-08-29 15:32:10,991.83,5,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,reopened,2018-08-29 15:32:17,0.12,5,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,15,2016-12-19 23:00:20,729.88,,1,,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#15931]url  (Remove GetDepthInMainChain dependency on locked chain interface by ariard)* [#15921]url  (Tidy up ValidationState interface by jnewbery)* [#15713]url  (refactor: Replace chain  by higher method by ariard)* [#15129]url  (rpc: Added ability to remove watch only addresses by benthecarman)* [#15064]url  ([PoC] GUI: Migrate BIP70 merchant info to mapValue[""to""] by luke-jr)* [#13756]url  (wallet: ""avoid_reuse"" wallet flag for improved privacy by kallewoof) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9381,open,-,-,-,5,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,opened,2016-12-20 00:07:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,title,2016-12-20 00:07:34,00:00,,1,,"b""b' CCoinsViewCache code cleanup & deduplication'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,body,2016-12-20 00:07:34,00:00,1,,,"b'b"" CCoinsViewCache code cleanup & deduplication  The change moves code responsible for updating the cache out of various CCoinsViewCache methods and into a Modifier class. This way the cache update code is just written once in a general way instead of being duplicated and split up to handle various special cases.  This is a refactoring", with changes to cache behavior only in 2 corner cases (with corresponding tests in coins_) which don\'t affect the meaning of data stored in the cache:  * In BatchWrite, overwriting a non-dirty pruned cache entry with a fresh pruned cache entry now deletes the cache entry instead of leaving behind a dirty pruned entry that will trigger an unnecessary database write later.  * In BatchWrite," overwriting a dirty pruned fresh cache entry with a nonpruned entry updates the entry without dropping the fresh flag. There\'s no reason to drop the fresh flag in this case because the flag accurately describes the state of the base view and could prevent unnecessary database writes in the future if the utxo is spent later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,1,2016-12-20 00:07:34,979.08,,1,,"b""b' @sipa", this is the PR I mentioned other day. It does move code to the modifier object," but the code could be moved if the modifier object is going away.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,2,2016-12-20 00:07:34,363.55,,1,,"b'b"" @sipa"," I posted a version of your [pertxoutcache]url  branch rebased on top of this PR here:  url It might be useful to you even if you aren\'t interested in this PR because it also updates coins_tests to be compatible with your change.  Relevant commits:  6b547c287e63a48d24547f48ac8108d83dcc7266 \\xe2\\x80\\x93 rebased version of your main commit on top of this PR. 5853aed217e4fd7f4a02790491ef1ea01821a2d5 \\xe2\\x80\\x93 coins_test fixes that you can incorporate (regardless of the code refactoring in this PR) 1b8425fce6498be757e663d202be025730f86725 \\xe2\\x80\\x93 fix for compile error in wallet caused by ccoins changes  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,3,2016-12-20 00:07:34,1293.47,,1,,"b""b' Rebased c72de76bf803254454a5dc4618bde85d1d992b7d -> 2f2d3c856520da6fcdcb82b2330515136be3f028 ([-cleanup.6]url  -> [-cleanup.7]url  after #10195 merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,4,2016-12-20 00:07:34,1271.42,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,closed,2018-07-20 20:30:49,1223.25,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,reopened,2018-07-20 20:30:50,0.02,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,5,2016-12-20 00:07:34,55.4,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15606]url  ([experimental] UTXO snapshots by jamesob) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,closed,2019-04-28 19:12:12,1361.37,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,6,2016-12-20 00:07:34,61.73,,1,,"b""b' The last travis run for this pull request was 281 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,reopened,2019-04-28 19:12:13,0.02,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9384,open,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,opened,2016-12-21 15:45:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,title,2016-12-21 15:45:22,00:00,,1,,"b""b' Allow per network configuration file'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,body,2016-12-21 15:45:22,00:00,,1,,"b""b' Fixes #9374'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,1,2016-12-21 15:45:22,628.0,,1,,"b""b' Since values should override main config settings", you want to load before  ," I think. See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,2,2016-12-21 15:45:22,611.28,,1,,"b'b""  That\'s not possible"," as conf can specify the network.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,3,2016-12-21 15:45:22,613.67,,1,,"b'b"" Edited: What I said doesn\'t really make a difference. It\'s still not possible as you say.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,closed,2016-12-23 17:06:32,81.17,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,reopened,2016-12-24 18:25:15,78.72,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,4,2016-12-21 15:45:22,963.68,,1,,"b""b' Needs a rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,closed,2017-04-02 09:55:46,930.52,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,5,2016-12-21 15:45:22,1154.6,,1,,"b""b' Lack of feedback"," and still needs a rebase. Feel free to reopen when it has been.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9402,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,opened,2016-12-25 20:33:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,title,2016-12-25 20:33:10,00:00,,1,,"b""b' Change LogAcceptCategory to use uint32_t rather than sets of strings.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,body,2016-12-25 20:33:10,00:00,,1,,"b'b"" This changes the logging categories to boolean flags instead of strings.  This simplifies the acceptance testing by avoiding accessing a scoped  static thread local pointer to a thread local set of strings.  It  eliminates the only use of boost::thread_specific_ptr outside of  lockorder debugging.  This change allows log entries to be directed to multiple categories  and makes it easy to change the logging flags at runtime (e.g. via  an RPC"," though that isn\'t done by this commit.)  It also eliminates the fDebug global.  Configuration of unknown logging categories now produces a warning.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,1,2016-12-25 20:33:10,4.05,,1,,"b""b' If we ever need more than 32 categories (there are 19 now) this could be trivially changed to use a uint64_t.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,2,2016-12-25 20:33:10,1283.68,,1,,"b""b' One week"," no substantive feedback. Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,closed,2016-12-29 18:00:54,1287.73,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,3,2016-12-25 20:33:10,2.3,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,4,2016-12-25 20:33:10,1005.42,,1,,"b""b' Please reopen. Holidays...  Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,5,2016-12-25 20:33:10,149.87,,1,,"b""b' concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,6,2016-12-25 20:33:10,59.38,,1,,"b""b' utACK e348647315b619e6a1d8b614554abb0747047696'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,7,2016-12-25 20:33:10,332.4,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,8,2016-12-25 20:33:10,1356.97,,1,,"b""b' @gmaxwell Please reopen this...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,9,2016-12-25 20:33:10,66.08,,,1,"b""b' Concept ACK"," seems to be a great PR with serval acks. Needs rebase and reopen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,10,2016-12-25 20:33:10,7.45,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,11,2016-12-25 20:33:10,2.73,,1,,"b""b' Definite concept ACK. Makes #10123 trivial.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,reopened,2017-03-30 20:15:21,134.45,0,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,12,2016-12-25 20:33:10,35.5,,1,,"b""b' Concept ACK. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,13,2016-12-25 20:33:10,1241.57,,1,,"b""b' Suggestion on how to make the category more extensible without triggering big recompiles:  then from   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,14,2016-12-25 20:33:10,852.6,,1,,"b""b' I think I addressed all the comments.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,15,2016-12-25 20:33:10,334.23,1,,,"b'b""  IMO we shouldn\'t worry about recompiles when the set of categories changes. That\'s a rare occurrence"," and the way headers depend on each other almost every header change already results in a (near) full recompile.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,16,2016-12-25 20:33:10,37.18,,1,,"b""b' utACK url  apart from the parameter name change in  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,17,2016-12-25 20:33:10,335.55,,1,,"b""b' (Trivally) rebased", squashed," and removed the tinyformat change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,18,2016-12-25 20:33:10,692.73,,1,,"b""b' Going to merge this; a change like this will need rebase after every single thing that gets merged"," and @gmaxwell addressed all the nits. Further improvements can be done in later PRs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,closed,2017-04-02 06:47:22,632.02,1,18,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9424,closed,-,-,-,1,18,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,opened,2017-01-10 17:35:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,title,2017-01-10 17:35:57,00:00,,1,,"b""b' [Qt] Add option to  block downloads'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,body,2017-01-10 17:35:57,00:00,,1,,"b""b' This", almost UI only change," will add a  button to the modal overlay to  block downloads during IBD.  This is an effective way to  IBD during a time when the computers resources are required somewhere else. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,1,2017-01-10 17:35:57,1.7,,1,,"b'b"" Isn\'t network toggle button usable in this case? If it is not"," let\'s fix it instead...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,2,2017-01-10 17:35:57,27.67,,1,,"b'b"" I extracted this from my SPV branch. Especially there", it is very useful to pause IBD and continue with SPV during a time where you don\'t want to use all available resources on verification.  But also without SPV, I think this can be useful (pause IBD and not loose broadcast capabilities," fetch headers but not the blocks)... ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,3,2017-01-10 17:35:57,1.05,1,,,"b'b\' IMO it would be too confusing to be worth it without ""SPV"" mode", but probably should go in after the latter is.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,4,2017-01-10 17:35:57,27.35,,1,,b'b\' Imo those are different features," but I agree that the GUI should not""diverge"" in regard to presenting features. The toggle networkfunctionality should be removed from the network icon and a properbutton should be put beside the new ""Pause"" button?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,5,2017-01-10 17:35:57,10.67,,1,,"b'b\' The ""Pause"" button won\\\'t be visible in normal cases.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,6,2017-01-10 17:35:57,31.68,,1,,"b'b\' >""diverge"" in regard to presenting features. The toggle network functionality should be removed from the network icon and a proper button should be put beside the new ""Pause"" button?  Yes. These are internally two completely different features. Expose to the users", these have similar effects. Yes. The modal overlay is currently only accessible during IBD. Though, we could extend it to support a state where the chain is in-sync and show it when someone click on the network statusbar icon.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,7,2017-01-10 17:35:57,821.6,,1,,"b""b' Added 0.15 milestone'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,8,2017-01-10 17:35:57,325.08,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,9,2017-01-10 17:35:57,1218.13,,,1,"b'b"" When re-enabling AutoRequestBlocks", what \'kicks off\' the block requesting process again? Setting the flag will make it request blocks the next time is called; is that good enough? I suppose it is," because is called periodically (every 100 ms?).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,10,2017-01-10 17:35:57,1312.48,,1,,b'b\' Overhauled the PR and addresses @laanwj points.  Also," I added the info ""Blocks requested from peers"" (blocks in flight). This may be important because pause will not result in disconnecting peers. Already requested blocks will be downloaded (and verified) in the ""pause"" state.  If blocks are in flight and the pause has been triggered", there is now a special info label  .\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,11,2017-01-10 17:35:57,37.03,,1,,"b""b' Well"," I have to change my previous opinion. I think this can be useful.  Concept ACK  Will test soon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,12,2017-01-10 17:35:57,67.32,,1,,"b""b' Needs rebase. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,13,2017-01-10 17:35:57,498.12,,,1,b'b\' ACK e952b67d294043d9758b37bf2be57a982b41c051  Code looks good. On the UI feature," two minor comments:  Pausing the download throws off ""Estimated time left till synced."" It would be better pausing didn\\\'t affect estimated time.  button really sticks out where it\\\'s currently placed. Maybe it would make more sense next to the progress bar or near the hide button.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,14,2017-01-10 17:35:57,258.75,,1,,"b""b' Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,15,2017-01-10 17:35:57,871.98,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,16,2017-01-10 17:35:57,210.35,,1,,"b'b"" Testing this again.  ACK url I think this could be even more usable if it can be called once fully in sync with the network. But I can\'t display the overlay then... ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,17,2017-01-10 17:35:57,837.68,,1,,"b""b'  Hm I vaguely remember I added that functionality once"," you should be able to bring up the overlay by the secret trick of clicking on the sync icon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,18,2017-01-10 17:35:57,2.6,,1,,"b'b\' @laanwj But the sync icon (you mean the triangle with an exclamation mark inside?) is not displayed when you are ""in sync"" with the network.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,19,2017-01-10 17:35:57,0.6,,1,,"b""b'  There are four ways how the modal-overlay can be opened: -Though I agree with you", there is no option how to open it once you are in sync... which could be useful," but independent to this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,20,2017-01-10 17:35:57,5.72,,1,,"b""b' @paveljanik Oh"," though it also worked with the checkmark that takes its place.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,21,2017-01-10 17:35:57,1.88,,1,,"b""b'  Yes. We should probably allow that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,22,2017-01-10 17:35:57,698.2,1,,,"b'b"" Concept ACK. (I haven\'t reviewed the qt code at all", but I did look over the net_processing changes.)  What is the intended behavior if the user turns off block download after being synced or nearly synced?  I believe this PR only disables the parallel fetch logic, and not the direct fetch -so block download could conceivably be disabled by the user, but blocks could still be requested as they are announced.  (Maybe this is hard to accomplish, if the modal overlay is not accessible when bitcoind is close to synced, but my recollection is that the modal overlay becomes visible whenever the headers chain is out of sync, which can happen even after leaving IBD, does that sound right?)  Perhaps the ability to disable block download should disappear if we\'re close to caught up, eg if is true?  Additionally, perhaps if we\'ve disabled block download," we should also disable transaction download.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,23,2017-01-10 17:35:57,1234.63,,1,,"b'b"" Rebased and addressed the issue @sdaftuar mentioned.  The current implementation avoids exposing  \'s for the reasons a) it does always use chainActive (lock) and b) to avoid another core-layer dependency.  I\'m not doing to tackle the transaction download in the PR (main scope is disabling block download).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,24,2017-01-10 17:35:57,390.52,,1,,"b""b' ACK  I have tested this on a node that was a few weeks behind and I was able to pause the block download multiple times while it was syncing. I noticed that even when paused"," UpdateTip is still happening for hundreds of blocks after what the GUI said still needed to be downloaded. I assume this is because it still processes all of the blocks that have been downloaded and the downloading happens faster than the processing. The UpdateTip lines do stop after a while which I assume is because all downloaded blocks have been processed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,25,2017-01-10 17:35:57,49.2,,1,,"b'b""  Yes", that\'s expected. We download multiple blocks in parallel," ahead of the next one to connect. I expect that this PR also keeps processing the ones that were in flight at the time blocks downloads are disabled.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,26,2017-01-10 17:35:57,1002.98,,1,,"b""b' This has missed the 0.15 feature freeze"," moving to 0.16.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,27,2017-01-10 17:35:57,161.4,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,28,2017-01-10 17:35:57,105.73,,1,,"b""b' rebased and slightly overhauled the blocks-in-flight information flow.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,29,2017-01-10 17:35:57,492.22,,1,,"b""b' Rebased. @paveljanik @achow101 @ryanofsky @kallewoof: care to re-ack?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,30,2017-01-10 17:35:57,1062.8,,1,,"b""b' Rebased and addressed nits (code style).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,31,2017-01-10 17:35:57,848.03,,1,,"b""b' @cfields: since this is touching net code"," can you do a final review?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,32,2017-01-10 17:35:57,208.55,1,,,"b'b\' Had a quick test of this (b0a9b8d6dae2a9efcdbc3607b235c37e1f7db31d) on top of master (9b8b1079ddab64ac955766536c38d23dc57bc499). macOS 10.13.3 and Qt 5.10.1.  This is what the overlay model looks like now with this PR (b0a9b8d6dae2a9efcdbc3607b235c37e1f7db31d): ![147511]url One thing I noticed is after hitting ""Pause""", it can take a while to stop downloading blocks.  i.e In the images below," we hit pause with 127 blocks ""requested from peers"" and 145022 total blocks left. However we don\\\'t appear to stop downloading blocks until we\\\'ve reached 144601 total blocks left to download",   I\\\'ll comment inline about simplifying the new strings.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,33,2017-01-10 17:35:57,232.12,1,,,b'b\' i.e In the images below," we hit pause with 127 blocks ""requested from peers"" and 145022 total blocks left. However we don\\\'t appear to stop downloading blocks until we\\\'ve reached 144601 total blocks left to download",  Yes. That could be confusing,.. though I guess there is an explanation. You may still have blocks on your disk that hasn\\\'t been verified due to a missing the next blocks after your tip. This means it is possible to jump a couple of block after downloading a single block.  Also,... we don\\\'t want to ignore the request because the peer is sending it anyway (once requested) and we don\\\'t want to disconnect peers (that feature is already available).  It would be possible to hide that information from the user," though I think it makes more sense to display it so its clear that the ""pause"" means not ""disconnect"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,34,2017-01-10 17:35:57,768.57,,,1,"b""b' Rebased. Thanks for re-reviewing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,35,2017-01-10 17:35:57,616.35,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,36,2017-01-10 17:35:57,1118.9,,1,,"b""b' The last travis run for this pull request was 95 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,closed,2018-07-22 12:55:36,1159.65,4,31,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,reopened,2018-07-22 12:55:37,0.02,4,31,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,37,2017-01-10 17:35:57,1301.08,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,38,2017-01-10 17:35:57,401.97,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9502,open,-,-,-,4,33,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,opened,2017-01-10 18:26:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,title,2017-01-10 18:26:46,00:00,,1,,"b""b' listreceivedbyaddress Filter Address'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,body,2017-01-10 18:26:46,00:00,,1,,"b""b' This gives listreceivedbyaddress the ability to filter for a single address.  This functionality is useful for users such as TumbleBit who need to filter by address.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,1,2017-01-10 18:26:46,235.82,,1,,"b'b"" A couple of general comments:  How large are the results from the rpc expected to be? If the rpc only ever returns a small number of addresses", it should be easy enough for the client to receive the full list of balances and then filter the list itself? if there\'s a chance that this functionality needs to be extended further to filter on a list of addresses rather than a single address, it\'d be better to include that now. Since #8811 , the arguments to the RPCs are part of the API," so changing them later becomes more troublesome. Perhaps change the string to a array?  I\'ve also added a few nits.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,2,2017-01-10 18:26:46,1096.23,1,,,"b'b"" @jnewbery addressed nits.  1. I think it could be quite large? And then you end up sending a bunch of extra crap over the network. 2. I don\'t think it would need to be extended as such"," but I\'ll let others chime in. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,closed,2017-01-13 17:50:33,1403.78,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,reopened,2017-01-13 17:50:35,0.03,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,3,2017-01-10 18:26:46,84.25,,1,,"b'b"" I think (2) isn\'t really needed since if you need more than a small number you can just do un-filtered or a few repeated calls. I\'m no expert on this use-case though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,4,2017-01-10 18:26:46,75.23,,1,,"b""b' @EthanHeilman thoughts? Another optimization would be to allow for caching of this table on construction (maybe keep_ parameters). This could reduce the O(n*m) complexity for making m repeated calls to O(n + m).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,5,2017-01-10 18:26:46,22.87,,,1,"b""b' @JeremyRubin The reason why I am interested into that is that here is the code I am using for querying the transactions of a scriptPubKey: [Using listtransactions]url  in tumblebit.  As far as I see this PR would be able to replace my listtransactions nicely. Will review. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,6,2017-01-10 18:26:46,28.7,,,1,"b""b' @jnewbery  >How large are the results from the listreceivedbyaddress rpc expected to be? If the rpc only ever returns a small number of addresses"," it should be easy enough for the client to receive the full list of balances and then filter the list itself?  To perform a 800 user mix with TumbleBit we would need a watch list of 1600 addresses. However we there are times in which we only want to learn the status of a single address.  Sorting received transactions by address is a common enough usecase to have an RPC call. It seems likely that people are calling it and then writing filters to select the addresses they want (for instance [this stackexchange question]url  or [this reddit post]url  It is an natural addition to the RPC API and one that would make our project and other projects more performant and cleaner.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,7,2017-01-10 18:26:46,73.33,,,1,"b'b"" @EthanHeilman thanks. Sounds like there\'s widespread demand for this functionality.  concept ACK""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,8,2017-01-10 18:26:46,109.02,,1,,"b""b' Addressed feedback"," and squashed.  @luke-jr it now errors if the passed in address was not a valid address.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,9,2017-01-10 18:26:46,471.2,,1,,"b""b' tested and integrated in NTumbleBit url  This replace as I needed.  Outside of my nit"," ACK a96fbed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,10,2017-01-10 18:26:46,1431.93,,1,,"b""b' Nits addressed and squashed. Preserved the pre-squash here url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,11,2017-01-10 18:26:46,34.87,,1,,"b""b' ACK e6f053a66f9196e2d75d15af2f89facd693402ff'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,12,2017-01-10 18:26:46,1367.25,,1,,"b""b' @JeremyRubin you might need to add a line in  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,13,2017-01-10 18:26:46,1368.15,,1,,"b""b' @JeremyRubin Let me know if you are a bit busy and prefer I take care of this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,14,2017-01-10 18:26:46,237.55,1,,,"b""b' @NicolasDorier Go for it"," sorry for the hold up!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,15,2017-01-10 18:26:46,308.35,,1,,"b""b' Discussion continues at #9991'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,closed,2017-03-14 14:11:31,1220.93,2,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9503,closed,-,-,-,2,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,opened,2017-01-13 19:23:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,title,2017-01-13 19:23:47,00:00,,1,,"b""b' [trivial] Add end of namespace comments. Improve consistency.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,1,2017-01-13 19:23:47,39.17,,,1,"b""b' Merge conflict resolved!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,2,2017-01-13 19:23:47,136.77,,1,,"b""b' Any changes needed before merge? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,3,2017-01-13 19:23:47,864.3,1,,,b'b\' The question should read: How can I attract you to the review? My answer is: sorry, I do not know.  I\\\'m pro and having the end of namespace marks. But we do not have a recommendation for this in the developer notes," there is only ""Block style example:"" section there. With no end of namespace comment... \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,4,2017-01-13 19:23:47,19.98,,,1,"b'b"" @paveljanik I see! If the consensus opinion is that end of namespace marks are optional then this PR is redundant and I\'ll close it :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,5,2017-01-13 19:23:47,28.98,,1,,b'b\' I think the point is that if end-of-namespace comments are to be required," they should be mentioned in along with rationale. It should be clear to contributors what the ""rules"" are. If not", changes like this come out of the blue.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,6,2017-01-13 19:23:47,61.27,,1,,"b'b"" @practicalswift I do now know what the consensus is"," but my opinion is the same as @laanwj \'s.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,7,2017-01-13 19:23:47,55.55,,,1,"b'b"" @laanwj Good point! I\'ve added a note to in this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,8,2017-01-13 19:23:47,114.45,,1,,"b'b"" I\'d slightly prefer over at the end of anonymous namespace"," but this is minor.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,9,2017-01-13 19:23:47,898.47,,1,,"b""b' @paveljanik It seems like is the dominant form currently used in the repo:   is also the form preferred by the clang-tooling ( "," etc).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,10,2017-01-13 19:23:47,2.52,,1,,"b""b' @practicalswift yes. But it seems like the author forget to add the real name of the namespace after it ;-) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,11,2017-01-13 19:23:47,3.35,,1,,"b""b' Concept ACK.  Please remove univalue change. Then utACK '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,12,2017-01-13 19:23:47,15.75,,1,,"b""b' @paveljanik Removed univalue change as requested :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,13,2017-01-13 19:23:47,500.93,,,1,"b""b' ACK url Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,14,2017-01-13 19:23:47,1427.58,,,1,"b""b' @paveljanik Thanks for reviewing! Let me know if any further tweaks are needed :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,closed,2017-04-27 22:48:56,205.15,1,9,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,reopened,2017-04-27 22:51:27,2.52,1,9,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,15,2017-01-13 19:23:47,359.35,,,1,"b""b' Conflicts resolved!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,16,2017-01-13 19:23:47,61.4,,1,,"b'b"" Fast re-review checked that still doesn\'t need testing ACK 486a5d7 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,17,2017-01-13 19:23:47,1228.43,,,1,"b""b' @jtimon Fixed! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,18,2017-01-13 19:23:47,918.35,,1,,"b""b' utACK 5a9b508'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,closed,2017-06-26 11:40:59,769.53,1,11,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9544,closed,-,-,-,1,11,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,opened,2017-01-15 20:55:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,title,2017-01-15 20:55:46,00:00,,1,,"b""b' dumpwallet behavior'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,body,2017-01-15 20:55:46,00:00,1,,,"b'b\' In v0.13: ""dumps all wallet keys in a human-readable format."" (according to console help).  First"," it\\\'s hard to tell *where* it dumps them. I executed the action and couldn\\\'t find the file. Another way to look at this is ""I executed the action and nothing happened"". Well", it turns out it did work," but the file ended up in the Bitcoin ""root"" directory (for me",  ).  I bet some users would think that the command simply didn\\\'t work and you can see where it goes from there.  Second, the action behavior isn\\\'t particularly intuitive.  For example," I\\\'m in and I run  I think this shouldn\\\'t dump the wallet to c:\\\\bitcoin\\\\. works as expected (both from debug console and from the CLI).  This could be classified as a doco bug (e.g. change ""The filename"" to ""The full path and filename"")", or it could be improved in the code.  OS: English Windows 10 x64.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,1,2017-01-15 20:55:46,944.0,,,1,"b""b' More documentation is always good. Hence the fact that the  interface if for experience users and (maybe) most of them are aware that a dump-to-filename command better gets supplied with a full absolute path. Related: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,2,2017-01-15 20:55:46,363.08,,1,,"b""b' It appears that this was addressed in #9740"," so this can be closed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,closed,2017-09-05 23:02:42,126.93,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,3,2017-01-15 20:55:46,711.83,,1,,b'b\' @MarcoFalke it seems this should be reopened as doesn\\\'t seem fixed (at last not on Linux; originally I reported this with 0.13.2 for Windows).  Current help:  url Below we can see that relative path isn\\\'t relative to bitcoind," but to ""user\\\'s home directory""   Trying to use  :  In my case:  * Bitcoin 0.15.1 (binary from ) * : * bitcoind location:   \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,4,2017-01-15 20:55:46,1326.63,,1,,"b'b"" I\'m on OSX and I can\'t get to work in any sense  If I try a home-relative path", an absolute path, just a filename, in quotes," not in quotes etc.  Absolutely nothing results in anything but  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,5,2017-01-15 20:55:46,0.72,,1,,"b""b' The current help on OSX is  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,6,2017-01-15 20:55:46,1.03,,1,,"b'b"" bitcoin-cli doesn\'t even come with bitcoin-Qt on OSX.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,7,2017-01-15 20:55:46,256.65,,1,,"b""b'  Works for me on OSX. Something like  . Do you have special chars in your absolute path? Maybe a whitespace in your username? Bitcoin-cli is not directly necessary when using bitcoin-Qt"," because there is the internal QT based console.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,8,2017-01-15 20:55:46,598.52,,1,,"b'b"" @unsystemizer I think you\'d have to *start* bitcoind from to make it the cwd.  In light of this"," the path should either be normalized with a base path of the data dir (wallet dir) or the call should just reject all non-absolute paths.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,reopened,2018-02-20 18:58:14,1195.53,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,9,2017-01-15 20:55:46,1322.53,,,1,"b'b"" Ok", I got past the error I was getting by running as root.  Not sure why that should be necessary.  I also ran the command to unlock my wallet first.  However, since the wallet is unencryted this shouldn\'t be necessary.  In any case I confirmed that it worked finally," so probably no issues on OSX other than documentation perhaps.  Thanks for the help.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,10,2017-01-15 20:55:46,1163.08,,1,,"b""b' @MarcoFalke  I was also facing this error. After the working directory changed to  ", it seems work now: But I no such file could be found. I guess it is because the file was deleted automatically after the process exited.  My daemon was launched through  . The owner of process was user," which does have writing permission for most directories.  Am I always supposed to save the dump file into  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9564,open,-,-,-,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,opened,2017-01-20 08:23:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,title,2017-01-20 08:23:50,00:00,,1,,"b""b' [rpc] Bug-fix: getdifficulty: use network parameters for minimum difficulty'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,body,2017-01-20 08:23:50,00:00,1,,,"b""b' Currently the system uses the hard coded parameters for mainnet"," which gives weird results for non-mainnet nets (e.g. testnet). This pulls the and uses that instead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,closed,2017-01-20 08:37:28,13.63,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,reopened,2017-01-20 09:07:44,30.27,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,1,2017-01-20 08:23:50,628.67,,1,,"b'b"" testnet actually has the same powLimit as mainnet", so this would change results only on regtest," but  doesn\'t it make more sense for difficulty to always reference the same minimum value and regtest just allows it to go less than 1?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9597,closed,2,2017-01-20 08:23:50,121.38,1,,,b'b\' Hm, I didn\\\'t realize that (testnet had same powLimit as mainnet). I do know that when running on an experimental network with a different pow limit we got very weird values which go against the comment about being a factor of minimum difficulty. I guess it comes down to,"do we care about that case?""\''
bitcoin	9597	closed	3	luke-jr	2017-01-20 08:23:50	166.43		+1		b'b"" NACK, let\'s not try to redefine difficulty for each network. It\'s okay if some networks might have <1 difficulties.""'
bitcoin	9597	closed	4	sipa	2017-01-20 08:23:50	3.62	+1			b'b"" I believe that in the first testnet iteration, at least in some versions of the software, the powLimit was defined as 2x higher than the mainnet one, and 1 testnet difficulty corresponded to 0.5 mainnet difficulty in hashrate. It was pretty confusing, and I think it\'s indeed easier to just everywhere treat 1 difficulty as 4295032833 hashes.""'
bitcoin	9597	closed	closed	 - 	2017-01-23 01:14:28	966.73	3	3	0
bitcoin	9597	closed	-	-	-	-	3	3	0
bitcoin	9600	closed	opened	monochromec	2017-01-20 17:18:30
bitcoin	9600	closed	title	monochromec	2017-01-20 17:18:30	00:00		+1		b""b' Bitcoiner fails to connect'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,body,2017-01-20 17:18:30,00:00,,1,,"b""b' ### Describe the issue  Since version 0.13.2 a popular client (Bitcoiner on Android) fails to connect to the daemon via the HTTP-based RPC interface. The server receives the initial getinfo POST request: Received a POST request for / from :AAAA 2017-01-20 16:53:46 ThreadRPCServer method=getinfo  But then the client side on Android seems to time out:  01-20 17:53:56.316 26855 26855 W bitcoiner: RPC call failed 01-20 17:53:58.503  2397  3033 I ActivityManager: START u0 {act= cat=[] flg=0x10200000 cmp= bnds=[360",406][477,579] (has extras)} from uid 10023 on display 0  (time skew on the server side being UTC vs. CET). ### Can you reliably reproduce the issue?  Start server and client and wait.  #### If so, please list the steps to reproduce below: 1. See above 2. 3.  ### Expected behaviour Client should display wallet contents. ### Actual behaviour Client seems to time out. ### What version of bitcoin-core are you using? List the version  ID, and if it is an official binary, self compiled or a distribution package such as PPA. 0.13.2-3 (on an armv7h board," Arch -daemon 0.13.2-3 package) ### Machine specs: OS: Arch CPU: dual-core armv7h  RAM: 2GB Disk size: 512 GB Disk Type (): USB  ### Any extra information that might be useful in the debugging process. This is normally the contents of a or file. Raw text or a link to a pastebin type site are preferred.  : url More than happy to provide more info for both server and client; just let me know what you need.  BTW: not sure where the RPC port failure message comes from as the port is open on the machine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,1,2017-01-20 17:18:30,6.07,,1,,"b'b"" Hmm", well there isnt much to go on here (maybe someone else will chime in with RPC changes in 0.13.2, but I\'m not aware of any). To confirm, this started with 0.13.2, but did not appear in 0.13.1?  If you could provide any more useful debug from the RPC client (ie does it report error codes in some way?) that would be useful, otherwise a tcpdump network capture (hopefully anonymized to only include the one ," with a different  than normal and only local IPs) might be useful.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,2,2017-01-20 17:18:30,684.02,,,1,"b'b"" RESTful works fine on my ARM instance. It may be that your client time-out\'s quickly or that the RESTful responses a bit slower than before.  You should probably use curl to demonstrate this is a Core problem", and separately work on the timeout issue with your client app maker. If a 3rd party client fails," that doesn\'t necessarily mean the server has a bug.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,3,2017-01-20 17:18:30,378.1,,1,,b'b\' After more research," I discovered something close to a root cause for this: the server never leaves the ""loading block index"". Hence the RPC layer () never executes a ""SetRPCWarmupFinished"" and the Android client times out.  This is confirmed by the status -28 from the command line (bitcoin-cli) and the qt interface.  Thought? Is my local copy of the blockchain corrupt?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,4,2017-01-20 17:18:30,150.93,,1,,b'b\' What does the  after restart of your  look like? On January 24, 2017 6:06:46 AM EST, monochromec  wrote:>After more research," I discovered something close to a root cause for>this: the server never leaves the ""loading block index"". Hence the RPC>layer () never executes a ""SetRPCWarmupFinished"">and the Android client times out.>and the qt interface.>You are receiving this because you commented.>Reply to this email directly or view it on GitHub:>url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,5,2017-01-20 17:18:30,36.3,,1,,"b""b' Here you go: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,6,2017-01-20 17:18:30,9.9,,1,,"b'b"" Looks like you\'re running code from the current master branch:   which corresponds to this commit from 10 days ago: url Your OP reported this was happening on 0.13.2. Does this issue repro on 0.13.2?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,7,2017-01-20 17:18:30,4.4,1,,,"b""b' Hmmm....  Came from the distro repo (alarm):  Name    : bitcoin-daemon Version   : 0.13.2-3 Description   : Bitcoin is a peer-to-peer network based digital currency daemon Architecture  : armv7h URL     : url  Licenses    : MIT Groups    : None Provides    : None Depends On  : boost-libs  libevent  miniupnpc  zeromq Optional Deps : None Required By   : None Optional For  : None Conflicts With  : None Replaces    : None Installed Size  : 4.26 MiB Packager    : Arch Linux ARM Build System  Build Date  : Thu 19 Jan 2017 02:26:11 AM CET Install Date  : Fri 20 Jan 2017 05:26:35 PM CET Install Reason  : Explicitly installed Install Script  : No Validated By  : SHA-256 Sum  Maybe the packager got the version wrong?!?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,8,2017-01-20 17:18:30,56.07,1,,,"b'b\' That doesn\\\'t seem  bitcoin-daemon-0.13.2-3-armv7 I got from the arch mirrors has no "".99.0"" string in the binary it identifies itself as v0.13.2.0-0d719145b-dirty (which is", itself," somewhat concerning considering the regular arch one correctly identifies itself as ""v0.13.2"" and they have an identical PKGBUILD).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,9,2017-01-20 17:18:30,29.15,,1,,"b""b' Pulled it from the community repo as the pacman info above states. Which mirror did you use?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,10,2017-01-20 17:18:30,8.35,,1,,"b""b' Could you upload the  from /-daemon-0.13.2-3* somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,11,2017-01-20 17:18:30,11.4,,1,,"b""b' Sure thing here you go: -daemon-0.13.2-3-armv7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,12,2017-01-20 17:18:30,11.87,,1,,"b'b"" There\'s no end in that debug log.  In other words"," it likely hasn\'t started. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,13,2017-01-20 17:18:30,0.93,1,,,"b'b\' You may wish to check \\\\  to find which binary you are running the bitcoind binary in the package you uploaded identifies itself as ""v0.13.2.0-0d719145b-dirty"" not ""v0.13.99.0-23281a4dc""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,14,2017-01-20 17:18:30,12.53,,1,,"b""b' /  @unsystemizer: that was my assumption too. The question is: why is it looping through the init loop w/o end and how can this be fixed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,15,2017-01-20 17:18:30,717.88,,1,,"b'b"" Well", maybe you can and post the entire log, that\'s why I mentioned we\'d need to know from the logs that at some point it\'s ready (service started up and RPC server ready for queries).  If it can\'t start, it\'s not an RPC-related bug. It may be another bug, but that\'d be another story," although I\'ve got several 0.13.2\'s on armhf with RPC server running with no issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,16,2017-01-20 17:18:30,119.95,,1,,"b""b' I think we are getting somewhere: url This morning the server crashed after catching up on the blockchain for nearly 10 hours.  How can I fix this? Do I have to download the complete blockchain again (perhaps speeding this up via a bootstrap torrent) or is there a quicker solution?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,17,2017-01-20 17:18:30,42.2,,1,,"b'b""  If you stopped it before while it was reparsing the blockchain (after the upgrade from 0.12.* it has to be done once)", maybe you corrupted the blockchain. You can see the reindex command or copy another good copy from somewhere there are many how-to\'s and the docs explain it well. Of course you can also make a backup or snapshot of the current blockchain (and wallet) just in case. But as far as this RPC server issue is concerned," I think you could close it because it unfortunately is what I suspected (RPC server doesn\'t start).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,18,2017-01-20 17:18:30,530.78,,1,,"b""b' Closing this issue due to further RCA.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,closed,2017-01-27 16:09:21,1370.85,3,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,reopened,2017-01-27 16:09:26,0.08,3,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,closed,2017-01-27 16:09:41,0.25,3,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9600,closed,-,-,-,3,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,opened,2017-02-04 01:22:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,title,2017-02-04 01:22:25,00:00,,1,,"b""b' gui"," wallet: random abort (segmentation fault) running '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,body,2017-02-04 01:22:25,00:00,1,,,"b'b"" I\'m running the current master branch version (1c2edd9f). I recently saw it crash shortly after starting up.   Unfortunately I don\'t have a stack trace available.  Here\'s the full  file contents:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,1,2017-02-04 01:22:25,143.98,1,,,"b""b' Hmm", there are a few races that can be seen on disconnect that need fixing (eg #9671 and one to be fixed a bit later)," but its not clear that that would have caused this situation unless there were some pending writes to  that were lost :/. Was there any non-standard configuration at the time I could try to reproduce in  (even strange distro or so).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,2,2017-02-04 01:22:25,947.5,1,,,"b'b"" The configuraton is pretty standard. I pasted in it [this comment]url I was restarting bitcoind and bitcoin-qt over and over to investigate the compacting issue (#9684). I didn\'t change anything (other than switching between bitcoind and bitcoin-qt)", and only saw this crash once, shortly after a restart it seems to have crashed after just 15 seconds.  I\'m running on debian stable," with bdb 5.3.28. I don\'t think anything\'s unusual with my build other than that.  I\'ll rebuild from the master HEAD and report back if I see anything like this again.  Is there an option that will cause to be flushed after each write? I don\'t want to be losing unbuffered log messages to a crash.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,3,2017-02-04 01:22:25,62.05,,1,,"b""b'  To answer my own question"," it appears that the file is unbuffered by default:  From in  :  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,4,2017-02-04 01:22:25,903.75,,1,,"b'b"" Crashes such as this (in libc itself", or segmentation faults) won\'t log anything to the debug log.  Personally I always run bitcoind in gdb: url  . Another option to allow for post-mortem debugging is to configure your OS to save core dumps properly," but a lot of modern Linux distros and such eat these by default.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,5,2017-02-04 01:22:25,1270.95,,1,,"b""b' Closing"," as there is no way to reproduce this and not enough information for diagnosing what caused the crash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,closed,2017-08-24 08:50:39,448.23,3,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,6,2017-02-04 01:22:25,530.77,,,1,"b'b"" I still regularly get crashes like this", but cannot find a way to reproduce them reliably. I wrote a script to repeatably start and stop bitcoin-qt and it usually crashes within 10 restarts. I\'ve not been able to get it to crash even once running bitcoind, so it looks like it\'s related to the GUI version only.  Is there any interest in fixing the problem? All my reports of crashes seem to get closed without being fixed," which is a little discouraging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,7,2017-02-04 01:22:25,0.82,,1,,"b'b"" I\'ll rebuild from the tag and try to get a backtrace from a crash in gdb...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,reopened,2017-08-24 17:42:17,531.63,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,8,2017-02-04 01:22:25,1.68,,1,,"b'b""  I understand. But if there is no way to reproduce for us", and crash reports don\'t have enough information to trace the crash to a certain point in the code," at some point there\'s no use in keeping it open. There\'s just nothing we can do. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,9,2017-02-04 01:22:25,38.8,,1,,"b'b"" It took quite a lot of attempts", and I couldn\'t get it to happen inside gdb, but I turned on core dumping and managed to get it to crash.  I ran \'bitcoin-cli stop\' in a loop in one shell, and \'bitcoin-qt\' in a loop in another," and: The core file is bytes long.  Loading it into gdb: Is there anything useful I can type there to give you the information you need to fix the error? Edit: Please tell me which core dump to load up. I\'m calling this one for reference.  This is -qt built against the tag with a single line added so I can see whether the crash happened before or after the \'bitcoin-cli stop\' request was received or not: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,10,2017-02-04 01:22:25,6.38,1,,,"b'b"" I\'ll keep a copy of that file and try to get another crash. I\'ve seen different messages on the console when it crashes sometimes I think it talks about duplicate free() calls"," or something similar indicative of a memory allocation race condition.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,11,2017-02-04 01:22:25,4.6,,1,,"b'b"" I got a 2nd crash", and it did indeed complain about  : This time the core file was bytes long. I was sleeping 5 seconds between each this time instead of 1 second, so the bitcoin-qt is likely to have had more of a chance to connect to peers than in the previous run.  Here\'s the backtrace: Again," I\'m happy to type commands at the (gdb) prompt if it would be helpful. Please tell me which core dump to load up. I\'m calling this one for reference.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,12,2017-02-04 01:22:25,6.18,,1,,"b""b' 3rd crash"," looks like the 1st one:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,13,2017-02-04 01:22:25,33.15,1,,,"b""b' I saw a 4th crash. This one took a lot of attempts before it happened"," but the error message on crash is a new one:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,14,2017-02-04 01:22:25,4.37,,1,,"b'b"" So I\'ve provided 5 sets of stack traces.  1. 2. 3. 4. 5.  The first and third appear to be exactly the same issue"," as do the second and fifth. The forth different.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,15,2017-02-04 01:22:25,5.38,1,,,"b'b"" The very next time I tried running bitcoin-qt", I got a crash again. I don\'t know if something had been left in an inconsistent state by the previous crash," but even if so I would hope for something better than a core dump.  Here\'s the fifth crash. It has the same kind of error message as the 2nd one:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,16,2017-02-04 01:22:25,3.68,,1,,"b""b' Hmm...  What version of Qt are you using (I guess you have self compiled)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,17,2017-02-04 01:22:25,25.7,1,,,"b""b' I build bitcoin-qt myself"," but installed binary packages of Qt using the debian stable repo:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,18,2017-02-04 01:22:25,26.9,,1,,"b'b"" It might be worth mentioning that every time I have seen these crashes I have been using a  that I first created in 2011. I don\'t really use any others. My  is 21 MB.  I tried for a few hours to reproduce with a newly created empty wallet", but it never crashed.  I have other wallets lying around, but they\'re either mostly empty, or giagantic, taking over a minute to load up.  For now I think I\'ll keep starting up and quitting with a new empty wallet and see if I can get the crash to happen that way. If not," I\'ll try loading up some of my other wallets.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,19,2017-02-04 01:22:25,52.02,,1,,"b'b"" I just managed to reproduce the error on a wallet I made shortly after the Bitfinex theft. I found a list of the theft transactions online somewhere and imported all the receiving addresses into a watchonly wallet to track the stolen funds. Then promptly forgot about the wallet until now.  The first time I loaded up the wallet it took a long time", saying:  . Eventually it completed, and I was able to cleanly shut down the wallet.  I ran it a second time to see how long it would take to load up and it crashed almost immediately: I\'ve attached a [copy of the  for this one]url  since it\'s nothing but a bunch of watchonly addresses for the BitFinex hack.  I\'m glad that I\'ve seen the crash while loading a wallet that I can share.  I tried loading the wallet by running the client inside gdb," and it crashed again the very first time I tried (but not the 2nd): ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,20,2017-02-04 01:22:25,68.3,1,,,"b""b' Another new crash with no other error message (",10,13,16,17,18,19,20,22," 24).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,21,2017-02-04 01:22:25,4.05,,1,,"b""b' @TheBlueMatt Did you take a look at any of these crashes? You were helpful with the startup race condition errors in the past.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,22,2017-02-04 01:22:25,88.7,1,,,b'b\' I kept running the bitcoin-qt over and over, while also running the \\\'stop\\\' RPC every 5 seconds. I collected 52 core dumps in total," with 6 different error messages at crash time.  They break down like this:  27 times it crashed saying just ""Segmentation fault (core dumped)"". All 27 of those crashes happened in QSortFilterProxyModel::sort(int", Qt::SortOrder), before the \\\'stop\\\' RPC was called, with a stack trace that looked like this in all 27 cases: So that\\\'s by far the most common place it crashed. Other than that I saw:  13 times:  4 times:  twice:  Finally, 5 times the client didn\\\'t crash until after the RPC \\\'stop\\\' was called, and in all 5 of those cases it said \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,23,2017-02-04 01:22:25,900.57,,1,,"b""b' @dooglus", if you run bitcoin with address sanitizer or valgrind," you should be able to get more useful errors. Config options to build bitcoin with address sanitizer look like:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,24,2017-02-04 01:22:25,203.02,,1,,"b'b"" @ryanofsky Thanks for that. I\'ve never used clang++ before. Do you know which version I should use?  Debian stable seems to have versions 3.4", 3.5, 3.8," and defaults to 3.5:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,25,2017-02-04 01:22:25,47.67,,1,,"b'b"" I\'m guessing any will work"," but I\'m using clang-3.8.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,26,2017-02-04 01:22:25,0.88,,1,,"b""b' I installed clang-3.8", used the configure line you provided, rebuilt.  Now when I try to run it shows the following, and then exits:  I ran it a bunch of times and the output was pretty much the same every time," other than the addresses changing.  Running the that I just built with clang works as usual.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,27,2017-02-04 01:22:25,10.98,,,1,"b""b' That looks promising. You could also decode the stack trace with: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,28,2017-02-04 01:22:25,5.73,,1,,"b'b"" I\'ve rebuilt", so the addresses changed," but here\'s the stack trace from the new build:   and here\'s the  : ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,29,2017-02-04 01:22:25,12.48,1,,,"b'b"" I commented all the RPCConsole stuff out of and now I get to see the splash screen (it used to crash immediately"," with no splash screen). It slowly goes through the usual status messages: and then crashes. Here\'s the change I made to get that far: Here\'s the new crash:  and:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,30,2017-02-04 01:22:25,29.82,1,,,"b'b\' So far I\\\'m not seeing what the problem could be. The crash is happening within lines like:   inside Qt generated code. The actual crash happens 4 stack levels deeper while reading past the end of the ""SendCoinsEntry"" and ""RPCConsole"" string literals. Unfortunately addr2line isn\\\'t translating the most relevant parts of the stack traces:   To get more information", maybe you could run:   You could also try running address sanitizer and gdb together with: \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,31,2017-02-04 01:22:25,1.77,,1,,b'b\' I just runned local compiled master (OSX, clang, bdb5.3," Qt 5.9.1) with @dooglus bitfinex hack wallet and could not reproduce the crash. Also tried the same with 0.15.0rc2 (""official"" static build).  Could it be a Qt bug? @dooglus: what happens if you run it with the ""official"" 0.15.0rc2?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,32,2017-02-04 01:22:25,3.53,1,,,"b""b' @jonasschnelli I am running the official rc2"," other than a 1 line printf() change.  I downloaded binaries for a more recent Qt (5.9.1): What is the magic ./configure line to get it to notice and use that version of Qt?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,33,2017-02-04 01:22:25,4.38,1,,,"b'b"" @dooglus: your running 0.15.0rc2 self compiled right? Not the static official builds (through gitian) url If you want to self compile with the well tested Qt5.7.1"," try the depends system. It should roughly be (haven\'t tested):   (or a different folder is you run on a different system).  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,34,2017-02-04 01:22:25,0.85,,1,,"b""b' If you want a dynamic linked build"," maybe try install qt though your package system or maybe via PPA (something like url ~beineri/+-qt58-trusty).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,35,2017-02-04 01:22:25,24.12,,1,,"b'b"" @jonasschnelli That\'s right. I build from source.  I\'m trying this: it seems to find the new Qt 5.9.1 that I installed: Edit: the first thing I notice is that building against Qt 5.9.1 I don\'t see the hundreds of warnings that I was seeing when building against Qt 5.3.2 using clang:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,36,2017-02-04 01:22:25,19.28,,1,,"b'b"" Well that didn\'t work: I\'ll try with Qt 5.7.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,37,2017-02-04 01:22:25,3.38,,1,,"b'b"" Qt5.9.1 should work"," but as it looks like your  didn\'t added the right libraries.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,38,2017-02-04 01:22:25,3.77,,,1,"b'b"" It\'s fine to try a different Qt"," but if you can post the output of:   That by itself might make the problem clearer. You also could try the gdb command line I suggested in url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,39,2017-02-04 01:22:25,36.22,,1,,"b""b' @ryanofsky  And the gdb command:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,40,2017-02-04 01:22:25,28.1,,1,,"b'b""    Could you try commenting out the calls in to see if this changes anything?  EDIT: It doesn\'t look like the linked Qt bug couldn\'t be responsible because it was fixed in Qt 5.4.1. But the stack traces are very similar"," so trying to disable translations still makes sense.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,41,2017-02-04 01:22:25,7.05,,1,,"b'b"" Commenting out those calls seems to fix the problem. The splash screen stays up for a long time (presumably becuase the address sanitizer is slow) but eventually the wallet appeared and I could view my transaction history. It\'s syncing the chain now.  I\'ll rebuilt without the address sanitizer and see if I can trigger any of the other crashes I was seeing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,42,2017-02-04 01:22:25,1.55,1,,,"b""b' I see messages from the sanitizer when I shut down: Presumably those are irrelevant.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,43,2017-02-04 01:22:25,0.85,,1,,"b'b"" Yeah", I also see the same leaks," and they shouldn\'t be related to the crashes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,44,2017-02-04 01:22:25,38.68,1,,,b'b\' It took a while," but I did eventually see a crash:  [Edit: note that this crash is the same as the [27 I reported here]url  where it just says ""segmentation fault""", and crashes in  ) I see that I\\\'m not running the current \\\'stable\\\' release of debian. The current version had a newer Qt, so I guess I\\\'ll upgrade and this bug will likely go away.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,45,2017-02-04 01:22:25,12.08,,1,,"b'b"" The other errors seem not to be fixed too: I\'ve posted stack traces for these crashes before.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,46,2017-02-04 01:22:25,4.0,,,1,"b""b' So probably the translation problems found by address sanitizer were not related to the original crashes.  But now that translation is disabled", can you try reproducing these crashes with address sanitizer? If the crashes are caused by memory corruption," this could provide more meaningful debug information from the point of corruption.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,47,2017-02-04 01:22:25,50.4,,,1,"b'b"" Good idea.  It\'s slow to start up", so I\'m getting a lot less crashes," but here\'s one: And:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,48,2017-02-04 01:22:25,6.53,,1,,"b""b' Another: with:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,49,2017-02-04 01:22:25,997.87,,1,,"b""b' I finally got it to crash inside gdb while built with ASAN instrumentation. The crash seems to be in:   in  :  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,50,2017-02-04 01:22:25,558.57,,1,,"b""b' So this would be the same issue as #9883"," also caused by setSortingEnabled()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,51,2017-02-04 01:22:25,4.77,,1,,"b""b' Yes"," it looks that way.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,52,2017-02-04 01:22:25,372.28,,,1,"b""b' Exciting news: I upgraded to debian squeeze", rebuilt, and still get this crash.  squeeze has Qt 5.7.1," and I still see a crash here:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,53,2017-02-04 01:22:25,11.23,,1,,"b""b' It turns out that squeeze comes with debug symbols for the Qt libraries"," so:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,54,2017-02-04 01:22:25,551.48,1,,,b'b\' I\\\'ve been looking into this code, seeing if there are any indexing errors. It seems like bitcoin isn\\\'t doing anything wrong. For example, it is using setDynamicSortFilter(true) and making sure to do updates to the underlying unsorted model instead of the sorted model. The only strange thing it is doing is calling sortByColumn() after setSortingEnabled() instead of before," so sorting initially happens in an arbitrary order before sort column is set. (It might be worth trying to switch the order of these two statements to see if anything changes.)  One thing I don\\\'t understand is the stack trace. If crash is actually happening in it is unclear how this would be triggering ""free on address which was not malloc()-ed"" because should just be filling a preallocated vector based on contents of another vector. I don\\\'t see where it would be allocating or deleting anywhere.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,55,2017-02-04 01:22:25,72.77,,1,,"b'b"" I wrote: However", it has now been several days since I upgraded and I\'ve not seen the crash since.  I\'m wondering if I didn\'t rebuild properly and was somehow still running the older Qt libraries.  It could be that the bug doesn\'t exist in Qt 5.7.1.  My testing has been on hold for the last 24 hours because my \'chainstate\' database become corrupted (presumably as a result one of these crashes I\'ve been seeing leaving things in an inconsistent state), so I\'ve been running a to rebuild it, and it is taking a long time.  I\'ll get back to attempting to trigger the bug in Qt 5.7.1 as soon as possible," and report back here either way.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,56,2017-02-04 01:22:25,424.07,,1,,"b'b"" OK", it does still crash with Qt 5.7.1. Here\'s the most recent one: I built without address sanitation, and used g++ because that gives me quicker execution, and I was worried that the crash wasn\'t happening any more. I\'ll rebuild with clang and address sanitation now," and try again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,57,2017-02-04 01:22:25,9.18,,1,,b'b\' I just noticed," running the configure command you gave me: it ends up saying: Is that ""CC = gcc"" a problem? Is it OK to mix gcc and clang?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,58,2017-02-04 01:22:25,77.78,,1,,"b""b' I saw this twice on current master with qt 5.9.4  Previous reports: * this issue * url  (closed) * url  (closed)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,59,2017-02-04 01:22:25,608.07,,1,,"b""b' Actually twice. I started seeing those when moving from ssd to spinning disk for testing purposes. This might indicate it is some sort of race?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,60,2017-02-04 01:22:25,409.72,,1,,"b""b' I could not reproduce with valgrind", maybe because it is slower," so it is less likely to hit the race? Trying with asan url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,61,2017-02-04 01:22:25,1268.73,,1,,"b""b' I can reproduce with asan:   Which gives:  url  url  url  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,62,2017-02-04 01:22:25,105.3,,,1,"b""b' Compiling with should give me a nice core dump...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,63,2017-02-04 01:22:25,1308.3,,1,,"b""b' FYI you can use to enable the full debug flags (including  ) without having to manually set and  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,64,2017-02-04 01:22:25,1252.23,,1,,"b'b"" I tried compiling qt in depends with clang and asan flags"," but I can\'t figure out what flags to pass to to properly link everything. See url  for my WIP.  Just using the gives a linker error:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,65,2017-02-04 01:22:25,809.47,1,,,"b'b"" @MarcoFalke It looks like you\'re using GCC and don\'t have libasan installed which is kind of a strange edge case I am trying to handle in #12692.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,66,2017-02-04 01:22:25,1217.33,,1,,b'b\' I built using clang++ and asan flags as suggested above: I built from the current master branch, commit 5f23460c7e316fe7c944680f3feff07ebb867f70, Date: Mon Dec 10 14:02:15 2018 -0500,"Merge #14877: rpc: Document default values for optional arguments"".  I ran bitcoin-qt in gdb in a loop until it failed: Pretty quickly it failed: The end of looks like this: Is there anything further I can do to help fix the problem? I\\\'ve been seeing this crash on and off for a couple of years now on different computers. I\\\'m using an SSD now instead of a spinning disk. It\\\'s quick a lot faster, but I still see the crashes pretty regularly.\''
bitcoin	9683	closed	67	MarcoFalke	2017-02-04 01:22:25	17.67			+1	b""b' I think it is caused by some of the transactions in your wallet. Further debugging could inspect which transactions are responsible (I have a testnet wallet that I use to reproduce this, in case anyone is interested in debuging)'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,68,2017-02-04 01:22:25,4.98,,1,,"b'b"" Here\'s another", after rebuilding with a slightly different ./configure line: I tried the flag that was suggested above," but that causes it to fail to build with an error: It appears that it the combination of having and not in the build command that triggers the error: Here\'s the new gdb output:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,69,2017-02-04 01:22:25,5.9,,1,,"b'b"" @MarcoFalke I pretty much always run with the same 5 wallets loaded. One of them is almost 8 years old so it could be related to that I guess.  I\'m willing to spend some time attempting to debug this but have no idea where to start. What makes you think it\'s caused by particular transactions?  Do you have a testnet wallet that reliably crashes on startup"," or is it intermittent?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,70,2017-02-04 01:22:25,65.08,,1,,"b""b' It is intermittent and I can not reproduce with a fresh wallet at all.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,71,2017-02-04 01:22:25,226.9,,1,,"b'b\' I tried using the ""thread sanitizer"": It produced enormous amounts of output", mostly about potential deadlocks. One of the things it found mentioned and appears to show thread 20  ing something that the main thread wrote to without acquiring a semaphore first, which I guess could cause a crash if those things happened to happen in the opposite order: I don\\\'t know if that\\\'s relevant or not, but perhaps this \\\'thread sanitizer\\\' thing is useful here.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,72,2017-02-04 01:22:25,1089.22,,1,,"b'b"" Looking at stack trace from url  nothing obvious stood out.  Active threads are:  Thread 1 which is crashing calling setSortingEnabled Thread 10 which is a scheduler thread sending to the wallet and is blocked in waiting for Thread 21 which is a net processing thread calling vector::push_back  The three threads seems unrelated", so if this is a race, it doesn\'t look like any of these are interfering with the other.  Since crash is happening in sort code," I also took a look there for anything that might be uninitialized. The only things I noticed was that we were not calling or choosing a default sort column. Patch below does these things and might be worth trying: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,73,2017-02-04 01:22:25,977.88,,1,,"b'b"" Thanks @ryanofsky. I\'ll try that patch and report back.  I\'m having a hard time reproducing the crash at the moment. It just took 30 attempts at starting and stopping bitcoin-qt to get a single crash. Last time I looked at it it was crashing maybe 1 in 3 times. I hadn\'t rebuilt the bitcoin-qt binary since so I don\'t know what changed. I guess it\'s related to what else is going on on the computer at the same time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,74,2017-02-04 01:22:25,6.77,,1,,"b'b"" After applying @ryanofsky\'s patch the first crash I got said this in stdout:  This in the log file: and here\'s a stack trace:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,75,2017-02-04 01:22:25,64.28,1,,,"b'b\' I think the ""deadlock detected"" error reporting is just broken in this case and the error is spurious. The deadlock detection is something we should fix", but for now you could work around it by building without  .  What happened is that one thread locked and then did a on  . The next locked and then  . I don\\\'t know the background behind  and  , but the deadlock detection seems broken because it is ignoring the fact that is different than and would avoid a deadlock.  This is a strange bug because deadlock detection code actually seems to _know_ this is a try lock (it prints  ) but it aborts and complains anyway.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,76,2017-02-04 01:22:25,298.4,,1,,"b'b"" @ryanofsky I wasn\'t explicitly building with  . I used: It looks like is turning on the lockorder debugging. I\'ll comment out the line that mentions in and rebuild.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,77,2017-02-04 01:22:25,293.62,,1,,"b'b"" @ryanofsky the patch [here]url  is working well for me. Today I ran bitcoin-qt without the patch 3 times", and all 3 times it crashed in the same place. I also ran bitcoin-qt around 100 times with the patch and it didn\'t crash at all.  I think it\'s pretty safe to say you\'ve found the solution.  I don\'t know anything about Qt but I guess the bug was that you\'re asking for the table to be sorted before you\'ve defined which column to sort by. I don\'t see how your patch changes that. The old code defines which column to sort by just one line too late: I would have thought the fix would be to switch the order of those two lines," but your patch actually deletes the sortByColumn() call yet still seems to work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,78,2017-02-04 01:22:25,823.93,,1,,"b""b' @dooglus or @ryanofsky Mind to submit this patch as a pull request?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,79,2017-02-04 01:22:25,1412.52,,1,,"b""b' @MarcoFalke done : url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,closed,2019-02-05 22:10:12,267.92,18,55,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9683,closed,-,-,-,18,55,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,opened,2017-02-08 03:18:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,title,2017-02-08 03:18:32,00:00,,1,,"b""b' Pow: Remove fCheckPOW from CheckBlockHeader'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,body,2017-02-08 03:18:32,00:00,,1,,"b""b' After the time checks were removed from CheckBlockHeader", makes no sense. Nobody is calling it with fCheckPOW=false and if they were," they could simply not call CheckBlockHeader. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,1,2017-02-08 03:18:32,7.38,,1,,"b'b"" Rather rename it to then... but considering that\'s already covered by  "," perhaps should just be removed entirely and inlined where applicable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,2,2017-02-08 03:18:32,154.57,,,1,"b'b"" I\'m all for unifying CheckBlockHeader with CheckProofOfWork in pow.o", but one step at a time. Here are more future suggestions:  url Currently the only difference between CheckProofOfWork and CheckBlockHeader and thus prevent from unifying the two functions are:  1) Using CValidationState to give more detailed errors with CheckBlockHeader.  Possible solution: More detailed errors are good, let\'s call with CheckBlockHeader and bring CValidationState down to CheckProofOfWork too.  2) Not all CheckProofOfWork callers use CBlockHeader, this is can be a performance problem for refactor (see \'Pow: Performance hit: pre-static-CheckProofOfWork...\').  We can rename CheckBlockHeader to CheckProofOfWork, CheckBlockPoW or whatever," no problem. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,3,2017-02-08 03:18:32,895.53,,1,,"b'b"" utACK.  I\'m not strongly in favor of this change though", given that if more functionality gets added to checkblockheader ever you would want to add fCheckPOW again.  I am opposed to the other changes mentioned, ie, making checkproofofwork add the dos scores," seems better to keep checkproofofwork a pure function.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,4,2017-02-08 03:18:32,96.9,,1,,"b'b"" If there are plans to add more functionality back to this functions (which I wouldn\'t oppose too)", and I can only think that you are referring to this check url  then we definitely don\'t want either this PR or @luke-jr \'s suggestion of going further and fully remove CheckBlockHeader in one step.  But if we don\'t plan to put that code back there, then the fCheckPOW parameter doesn\'t make any sense in CheckBlockHeader. Better is better. This was supposed to be the simplest fix for something that honestly looks embarrassing when I think of reviewers reading this function without looking at the history or thinking about url  .  Let\'s please first decide whether we want to remove fCheckPOW from this function or we want to bring the check back here (which I\'m not opposed to and I\'m happy to write myself if that\'s what\'s preferred, I don\'t care).  After this, as @luke-jr points out CheckBlockHeader is just a wrapper for CheckProofOfWork but passing CValidationState. An option would be to remove it, another option would be to use CValidationState or maybe put it in url  (and maybe rename script_error.h to  too, who knows).  But if we can\'t decide whether fCheckPOW here is pointless or not (and I don\'t want to bet, but maybe the compiler has already decided for us at a lower level), I don\'t want to put more decisions in the same PR.  @luke-jr @JeremyRubin Does that sound reasonable to you?  For more context: The comments are really appreciated in the context of #9177 which I\'m trying to complete while rewriting in a simpler and less disruptive way (it will remain on top of #8994 though, since that currently allows to reuse all existing  tests except  for any custom chain [or even testnet3 and mainchain] instead of having to replace regtest with your new testchain to do so).  At the same time, I understand neither this nor #9177 are a priority for bitcoin core itself, since I believe it is unlikely #9177 will ever be merged on mainnet unless I find a way that doesn\'t affect performance at all on mainchain and at the same time is not very disruptive (which as said I believe it\'s unlikely). It would be very useful for rebasing elements to have  #9177 completed and merged in bitcoin core, but bitcoin core shouldn\'t care about that since not all it\'s users care about elements. On the other hand I think #8855 #8994 can be very useful for testing within bitcoin core itself, but have no relation with this PR, only with #9177.  PS: Sorry for the text wall," this shouldn\'t happen in a +4-4 PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,5,2017-02-08 03:18:32,713.2,,1,,"b""b' utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3  If needed later"," can add again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,6,2017-02-08 03:18:32,381.87,,1,,"b""b' Agree with @NicolasDorier if is needed in future", it can be added.  This seems to be strictly an improvement," so utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,7,2017-02-08 03:18:32,584.68,,1,,"b'b\' @NicolasDorier @jnewbery By ""CheckBlockHeader() can be added back if needed"" I understand that you\\\'re not only ok with this but also with inlining CheckBlockHeader as suggested by @luke-jr in a future PR and therefore not bringing the MAX_FUTURE_BLOCK_TIME check back from ContextualCheckBlockHeader to CheckBlockHeader in the foreseeable future.  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,8,2017-02-08 03:18:32,516.1,,,1,"b""b' @jtimon yes"," I am fine with both. Indeed no much point to have CheckBlockHeader anymore after this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,9,2017-02-08 03:18:32,904.03,,,1,"b""b' We can also pass the blockHash to CheckBlockHeader", that would make it closer to CheckProofOfWork," which I imagine would be more interesting to @luke-jr ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,10,2017-02-08 03:18:32,1104.03,,1,,"b""b' utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,11,2017-02-08 03:18:32,1355.03,,,1,"b""b' utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3"," good simplification.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,12,2017-02-08 03:18:32,1263.1,1,,,"b""b' Sorry"," forgot to make the function static while at it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,13,2017-02-08 03:18:32,279.52,,1,,"b""b' utACK 9855ecaf880840a42f2a9678dc6d9e753c11c531. Only change since last review is making the function static.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,14,2017-02-08 03:18:32,11.55,,1,,"b'b"" This seems like it is ready to be merged. It\'s very minor", 4 people acked it," and #10339 depends on it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,15,2017-02-08 03:18:32,329.13,,1,,"b""b' NACK", there is no value in doing this," and it only makes the code less readable because it conflates the block header with the PoW.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,16,2017-02-08 03:18:32,1021.55,,1,,"b""b' @luke-jr so lets just remove CheckBlockHeader instead and call CheckProofOfWork where we need to?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,17,2017-02-08 03:18:32,9.1,1,,,"b'b"" @TheBlueMatt I don\'t see how that\'s an improvement", but at least it sounds non-confusing," and as such I wouldn\'t object.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,18,2017-02-08 03:18:32,132.83,1,,,"b'b"" Needed rebase. Rebased on top of #10339 instead of the other way around. I\'m confused"," I thought removing CheckBlockHeader was your preference url  Right now they are the same thing (except for CValidationState and the fDontDoAnything param that this PR tries to remove). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,19,2017-02-08 03:18:32,17.9,1,,,"b'b""  I\'d rather that than making the code more confusing", but I don\'t see how either change is *useful*. They are *conceptually* different things. If we add an additional check to CheckBlockHeader," we would not expect it to also be skipped when PoW checks are skipped.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,20,2017-02-08 03:18:32,109.68,1,,,b'b\' Sorry, removed the commit from #10339 again. It is useful because it simplifies an interface that is more complex than it needs to be. Currently, if you\\\'re calling the function with fCheckPOW=false (could as well be named fActuallyDoSomethingWhenCallingThisFunction), you can just not call it. This doesn\\\'t make the code more confusing, the opposite is true. At a minimum," we could mae the nonsense argument non optional as a start. This argument actually makes sense to me. Do you have a a specific example of some check we may want to add to this function in the future or is it a ""maybe 5 years from now we realize we may want to undo this change so better not do it just in case"" kind of concern?  If you had specific examples it would be much simpler for me to close this PR. If you don\\\'t", I think your opposition to this PR is unreasonable.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,21,2017-02-08 03:18:32,84.77,,1,,"b""b' A specific example we could put there right now", would be to check the nVersion is >0. But either way, they are still conceptually different things, and so long as it says  , it should be called whenever the block header is to be checked," independently of whether the PoW check ought to be skipped.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,22,2017-02-08 03:18:32,21.95,,,1,b'b\'  Thank you. I guess that would currently be an optimization. mhmm, didn\\\'t we used to check that  EDIT: never mind, it seems that check only existed in my head," it was just implicit after moving to version 2 or more.  Do you have more examples? An example of something that we currently don\\\'t validate would serve. I can only think of  the ""time-too-new"" check as example", which used to be here," but since we considered that time was ""context"" anyway", I don\\\'t think we will ever put that back in CheckBlockHeader. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,closed,2017-06-25 05:06:43,108.18,5,14,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,reopened,2017-06-25 05:15:57,9.23,5,14,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,23,2017-02-08 03:18:32,40.62,1,,,"b""b' ping this"," is it really controversial or only for @luke-jr ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,24,2017-02-08 03:18:32,1282.05,,1,,"b'b"" Closing for now", but don\'t discard to reopen if I ever touch or review the header of main::CheckBlockHeader again," my fault or not.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,closed,2017-09-30 23:55:37,1119.67,6,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9717,closed,-,-,-,6,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,opened,2017-02-08 06:28:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,title,2017-02-08 06:28:11,00:00,,1,,"b""b' Allow abort of ConnectBlock() when shutdown requested.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,body,2017-02-08 06:28:11,00:00,,1,,"b""b' Fixes one of the issues mentioned in #9668 i.e. speeds up shutdown (can save over 30 seconds in some cases)"," which can cause shutdown to be aborted on some operating systems (if the OS does not allow as much time as bitcoind was requiring).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,1,2017-02-08 06:28:11,1064.15,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,2,2017-02-08 06:28:11,924.88,,1,,"b""b' This effectively partially reverts #12367", which may be OK because of the fixes in #12349," but needs a careful look.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,closed,2018-07-20 18:53:28,745.28,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,3,2017-02-08 06:28:11,196.27,,1,,"b""b' The last travis run for this pull request was 527 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,reopened,2018-07-20 18:54:54,1.43,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,4,2017-02-08 06:28:11,1330.12,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,5,2017-02-08 06:28:11,589.47,,1,,"b'b\' Labelling this ""Up for Grabs"" and closing.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,closed,2018-10-10 02:53:04,478.17,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9719,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,opened,2017-02-13 13:06:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,title,2017-02-13 13:06:13,00:00,,1,,"b""b' Max unconfirmed chainlength '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,body,2017-02-13 13:06:13,00:00,1,,,"b'b"" ### Describe the issue Because transaction malleability isn\'t that much of an issue lately", we\'ve decided to let the wallet spend zero conf change. It has happened that we create a transaction just moments before a significant increase in (higher paying) transactions. Because of #9645, there is a chance that you end up with an unconfirmed chain of 24 child transactions. If you let the wallet produce a 25th child, it will return an error because the mempool won\'t accept it.  This is also problematic in the case we would like to cpfp the whole chain, because other nodes won\'t relay the transaction to the miners.  ### Can you reliably reproduce the issue? #### If so, please list the steps to reproduce below: 1. Predict an increase in transactions. (You need a crystal ball) 2. Create transaction 3. Create more transactions 4. ? 5. Profit  ### Expected behaviour Ideally it would stop if the chain is 24 transactions long, so one could try a cpfp transaction to compensate for the fees.  ### Actual behaviour It will create a transaction chain of 25 transaction," making it hard to have the whole chain confirmed in a certain time.  ### What version of bitcoin-core are you using? Official binary: 0.13.1""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,1,2017-02-13 13:06:13,11.18,,1,,"b""b' A quick way would be to have a setting for allowed length of unconfirmed transactions in the mempool"," and push the cpfp-transaction on an other node.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,2,2017-02-13 13:06:13,11.65,,1,,"b""b' I think url  addresses that issue (partially?). This fix is available in 0.13.2 (as well as in 0.14). But #9262 is still disabled by default ( )  @Joukehofman: You could try to upgrade to 0.13.2 and enable  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,3,2017-02-13 13:06:13,5.82,,1,,"b""b' Yes sounds like what you want. It will simply reject the proposed transaction"," allowing you to try something else.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,4,2017-02-13 13:06:13,3.62,,,1,"b""b' It is indeed what I want! Thanks for mentioning @jonasschnelli and fixing it @instagibbs !'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,closed,2017-02-13 13:38:29,32.27,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,5,2017-02-13 13:06:13,5.68,,1,,"b""b' Your use-case might be an argument for stopping 1 shorter even"," to allow for a single CPFP in the mempool(with that one hitting the chain limit). As-is it might not quite work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,6,2017-02-13 13:06:13,3.9,,,1,"b'b"" Ah", I thought that was the intention, but you only catch it if mempool doesn\'t accept the transaction. But, this option," combined with a setting for allowed mempool length would solve my issue in a nice way.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,reopened,2017-02-13 13:48:04,9.58,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,7,2017-02-13 13:06:13,5.5,,1,,"b""b' Do note that there is no package relay for CPFP", so miners would have had to accepted the transactions into the mempool," but merely considered them too-low of a fee as a package.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,8,2017-02-13 13:06:13,14.08,,1,,"b'b"" I know. As far as I can tell the transactions are being propagated on the network", they are seen by our other nodes," it\'s just that the fees of those transactions start to lag behind the moment an uptrend in transactions is started.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,9,2017-02-13 13:06:13,73.15,1,,,"b""b' @Joukehofman Take a look at -limitancestorcount and -limitdescendantcount (run bitcoind with -help help-debug).  These will limit all chains your node will  not just your own transactions", but could serve the purpose you want if you set them to limit your chains to 24 and then submit the 25th tx to the network via a different mechanism.  But if everyone started doing this, network relay would become a mess," so I do think a better solution could be for the wallet to try to stop one transaction shorter if -walletrejectlongchains is true. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,10,2017-02-13 13:06:13,105.38,,1,,"b""b' Yea", that also means you have to manually relay the 25th TX. We probably should stop one short by default (or provide an option to do so, somehow I thought we had...) On February 13, 2017 4:01:18 PM GMT+01:00, Alex Morcos  wrote:>@Joukehofman Take a look at -limitancestorcount and>-limitdescendantcount (run bitcoind with -help help-debug).  These>will limit all chains your node will  not just your own>transactions," but could serve the purpose you want if you set them to>limit your chains to 24 and then submit the 25th tx to the network via>a different mechanism.>so I do think a better solution could be for the wallet to try to stop>one transaction shorter if -walletrejectlongchains is true.>->You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,11,2017-02-13 13:06:13,364.23,,1,,b'b\' What\\\'s the issue in general with allowing long unconf chains? The risk if one of them is maliated and there\\\'s a lot of wasted relay? There\\\'s certain times it\\\'s pretty desirable to create some pretty massive chains, for example a service the does deposits and withdrawals. Deposits go into 1 wallet," withdrawals come out from another wallet. The deposit wallet batch sends money to the withdrawal wallet with an extremely low feerate (e.g. 10 ) for it to get confirmed when there\\\'s not much network activity (e.g. weekends).  But this means the ""withdrawal wallet"" will be doing hundreds or thousands of sends for every receive it as", so by necessity create a long transaction chain and keep bumping into the unconfirmed chain limit pretty easily. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,12,2017-02-13 13:06:13,366.12,,1,,b'b\' @RHavar haven\\\'t thought about this a ton, but AFAIK it\\\'s the tracking all the chains," which can be quite ""wide"" in a combinatorial sense", and updating package feerates, etc.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,13,2017-02-13 13:06:13,377.8,1,,,"b""b' The issue is the runtime of a bunch of things in the mempool is dependant on chain length"," so allowing long chains is a very large potential DoS attack for the -size-limiting logic.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,14,2017-02-13 13:06:13,385.88,,1,,"b'b"" To be clear", these are reasons why there is a max unconfirmed chainlength _in the mempool_. They\'re not necessarily reasons for disallowing them in the wallet as the later parts of the chain can enter the mempool after the first ones get confirmed. However, the Bitcoin Core wallet uses the mempool as a means for checking likelihood of confirmations," so it rejects creation of things that wouldn\'t enter.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,15,2017-02-13 13:06:13,416.55,,1,,"b'b"" @sipa I think by default it does not reject things that wouldn\'t enter the mempool (although there is an option to do that).  The default behavior is to create them and then periodically try to have them reaccepted to the mempool.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,16,2017-02-13 13:06:13,164.63,,,1,"b""b' adding 2 cents here", if were the default," I would have saved a lot of time yesterday! url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9752,open,-,-,-,3,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,opened,2017-02-15 19:17:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,title,2017-02-15 19:17:20,00:00,,1,,"b""b' Allow maxsigcachesize to be zero'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,body,2017-02-15 19:17:20,00:00,,1,,"b""b' Fixes url If the -maxsigcachesize parameter is set to zero"," setup a minimum sized sigcache (2 elements) rather than segfaulting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,closed,2017-02-15 19:17:31,0.18,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,reopened,2017-02-15 19:20:58,3.45,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,1,2017-02-15 19:17:20,77.17,,,1,"b'b"" Hmm", I\'d expect the sigcache to be bypassed entirely in this case. I suppose this is fine for 0.14," but I think it\'d probably be useful to have a SignatureCheckerNoCache to benchmark cache overhead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,2,2017-02-15 19:17:20,390.32,1,,,"b'b"" @theuni I\'m ambivalent about that approach but I agree that it\'s likely a better approach (see my comment making the same point (sans solution) in the issue #9759). Ambivalence because more reliance on virtual methods"," whereas it might be nice to get rid of the virtual-ness at some point. Running with cache size 0 under this patch means doing some likely unfruitful work every check though so clearly that\'s the better of 2 evils.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,3,2017-02-15 19:17:20,2.05,,,1,"b'b"" Slightly suboptimal performance with sigcachesize 0 (which is afaik notrecommended anywhere) is perfectly acceptable for 0.14"," I think it\'s noteven a regression. We can reconsider for 0.15.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,4,2017-02-15 19:17:20,381.4,,,1,"b'b"" I think this is a good pragmatic solution.  What matters here is that it doesn\'t crash. A user shouldn\'t set the cache to 0 if the goal is performance. ~~utACK url  .~~ see below"," need decision on what to do with negative values""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,5,2017-02-15 19:17:20,1.42,,1,,"b""b' BTW: what happens with a negative argument? Will it wrap around and still crash? :) edit: bad_alloc"," apparently:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,6,2017-02-15 19:17:20,17.63,,1,,"b'b"" In #9759 I suggested for that reason"," but I suppose that\'s not sufficient either: nMaxCacheSize should be made a signed int of some sort rather than size_t.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,7,2017-02-15 19:17:20,1.2,,1,,"b""b' Yeah"," would do the job. Or apply the directly to the GetArg result. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,closed,2017-02-16 11:16:46,955.8,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,8,2017-02-15 19:17:20,90.57,1,,,"b'b"" Didn\'t intend to merge this one yet", sorry. Anyhow if we want to cope with the negative amounts, need to do that in a new PR.  Edit: needed to revert anyway something went wrong with the tooling," the merge was not signed either.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,9,2017-02-15 19:17:20,164.32,,1,,"b""b' @jnewbery Can you open a new PR with these changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,10,2017-02-15 19:17:20,270.52,,1,,"b'b"" @fanquake yes I\'ll do that today.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9770,closed,-,-,-,2,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,opened,2017-02-25 08:15:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,title,2017-02-25 08:15:53,00:00,,1,,"b""b' Sync problem crashes Bitcoin: EXCEPTION: St9bad_alloc'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,body,2017-02-25 08:15:53,00:00,1,,,"b'b"" I have installed core 0.14.0rc1 after running my node (Raspberry Pi 2) successfully on 0.13.2 for weeks .  After upgrading I am getting errors and having issues keeping the node running. Once in a while core crashes with this error in the terminal:  ************************ EXCEPTION: St9bad_alloc    std::bad_alloc    bitcoin in scheduler   terminate called after throwing an instance of \'std::bad_alloc\' what():  std::bad_alloc  This happens when I use previously downloaded blockchain and also when I start to download the whole blockchain all over again.  My system settings: Raspberry Pi 2 4GB SD card NFS share to Synology NAS (blockchain is successfully stored on the nas). Have a backup on an 128GB USB Stick in the pi.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,1,2017-02-25 08:15:53,25.85,,1,,"b""b' It means your node is out of memory. You need to either add more swap space","  reduce the memory requirements of your node by decreasing the or the mempool size.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,closed,2017-02-25 08:41:44,25.85,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,2,2017-02-25 08:15:53,0.72,,1,,"b""b' Reopening this as it may be an issue with higher (default) memory usage on 0.14 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,reopened,2017-02-25 08:42:27,0.72,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,3,2017-02-25 08:15:53,10.78,,1,,"b'b"" @laanwj Would like to give it a try with other settings. Perhaps that can help. My Pi has 1GB memory. It doesn\'t use all of it. About 50% when core is syncing. My swapfile is set to 1024 in /-swapfile and my db cache in  is set to 64.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,4,2017-02-25 08:15:53,7.92,,1,,"b""b' Can you give your full  (if any)"," and an excerpt at the end of ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,5,2017-02-25 08:15:53,15.83,,1,,"b""b' @sipa  My :  : url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,6,2017-02-25 08:15:53,2.12,,1,,"b""b' Can you try reducing the maximum mempool as well? (maxmempool=64"," for example)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,7,2017-02-25 08:15:53,3.63,,1,,"b'b"" @sipa Done. I am starting the node again. Going to keep an eye on it.  [update] Node is syncing now. It\'s 3 years and 49 weeks behind now. Lot of work to do. Hopefully it keeps running now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,8,2017-02-25 08:15:53,281.9,1,,,"b'b"" @laanwj @sipa It seems the maxmempool limit fixed the issue. Node is still running", where it used to crash already before. Also memory usage is more stable now. I\'ll keep monitoring it closely," but so far it seems fixed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,9,2017-02-25 08:15:53,134.2,,,1,"b'b"" @Smiggel Did it always crash with the same error? Specifically this part: That\'s interesting because we\'re dumping the  to disk. I wouldn\'t be surprised if we make a few copies of them in the process.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,10,2017-02-25 08:15:53,53.42,1,,,"b'b"" @theuni The other error I had before was ************************ EXCEPTION: St9bad_alloc    std::bad_alloc    bitcoin in ProcessMessages()    Other then that I didn\'t get errors. Right now it\'s still running and still stable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,11,2017-02-25 08:15:53,1384.53,,1,,"b'b""  :  AWS Ubuntu 16.0.4 Micro instance bitcoind v0.14.0rc1 1gb ram 0 swap 15gb HDD space left  It\'s also been killed silently because of memory usage with the same config.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,12,2017-02-25 08:15:53,25.52,1,,,"b""b' @GameKyuubi Does it run stable when you set the maxmempool limit? Ever since I set it to 64 my node runs stable. All crashes are gone.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,13,2017-02-25 08:15:53,33.03,,1,,"b""b' Whoops"," syntax error in my conf'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,14,2017-02-25 08:15:53,90.6,,,1,"b""b' Out of interest"," what was the syntax error in your conf?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,15,2017-02-25 08:15:53,2.25,,1,,"b""b' mempool instead of maxmempool'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,16,2017-02-25 08:15:53,1325.93,,1,,"b""b' @Smiggel  Alright"," so bitocoind is still getting killed even with my change to the config. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,17,2017-02-25 08:15:53,1007.88,,1,,"b""b' Any suggestions for a fix or acknowledgement that this is a real issue yet?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,18,2017-02-25 08:15:53,554.88,,1,,"b'b"" @GameKyuubi It looks like bitcoind was only using 387  MB of memory. That is totally expected. If that\'s enough to get it killed on your system"," you must be using too much memory for other things.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,19,2017-02-25 08:15:53,674.38,,1,,"b""b' @sipa is there a clear description of how much memory bitcoind is supposed to use with and  ?  This was on a 512mb VPS with nothing else running except tmux and htop.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,20,2017-02-25 08:15:53,50.32,,1,,"b""b' 512MB is not enough for running bitcoind. 1GB is absolutely the lower bound"," and even then you may have to tweak settings.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,21,2017-02-25 08:15:53,306.47,,1,,"b""b' Noted.  Back to 1GB"," no problems so far.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,22,2017-02-25 08:15:53,1424.8,,1,,"b""b'  Is that on a Raspberry Pi?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,23,2017-02-25 08:15:53,1195.75,,1,,"b""b' This appears to have resolved -unless necessary as a warning re minimum memory usage..  @gamekyuubi I assume things are still going well? Feel free to report if upgrade to .15 went smoothly as well. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,24,2017-02-25 08:15:53,412.23,1,,,"b""b' This error message means that your client is still running. Try switching  your wallet differently. I close it with that. Feel free to open if there is something.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,closed,2017-10-08 03:37:16,1134.82,5,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9857,closed,-,-,-,5,19,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,opened,2017-03-03 11:25:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,title,2017-03-03 11:25:52,00:00,,1,,"b""b' tests: Add FindEarliestAtLeast test for edge cases'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,body,2017-03-03 11:25:52,00:00,,1,,"b""b' E.g. repeated max timestamps"," extreme int64_t & unsigned int search values.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,1,2017-03-03 11:25:52,178.3,,,1,"b""b' Thanks for adding a test. utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,2,2017-03-03 11:25:52,1233.08,,1,,"b""b' Adding @sipa as reviewer"," as IIRC he wrote this code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,3,2017-03-03 11:25:52,586.93,,1,,"b""b' @gmaxwell wrote url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,closed,2017-03-07 20:44:11,558.32,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,reopened,2017-03-07 20:44:13,0.03,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,4,2017-03-03 11:25:52,591.07,,1,,"b""b' @gmaxwell can you take a quick look at this test then?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,5,2017-03-03 11:25:52,293.82,,1,,"b'b"" @gmaxwell", in case you didn\'t see this PR, it adds a test for FindEarliestAtLeast," so it\'s somewhat related to url  which you recently commented on.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,closed,2017-06-06 13:52:14,1028.02,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9909,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,opened,2017-03-07 08:53:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,title,2017-03-07 08:53:00,00:00,,1,,"b""b' rpc: Prevent from overwriting files'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,body,2017-03-07 08:53:00,00:00,,1,,"b""b' Prevent arbitrary files from being overwritten by  . There have been reports that users have overwritten wallet files this way. It may also avoid other security issues.  Fixes #9934. Adds mention to release notes and adds a test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,1,2017-03-07 08:53:00,1.38,,1,,"b""b' concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,2,2017-03-07 08:53:00,0.75,,1,,"b""b' Important fix. utACK 1307cd79b859f01a35d68dea9a674e56451f75f5. IMO this is a backport candidate.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,3,2017-03-07 08:53:00,5.92,,1,,"b""b' utACK 1307cd79b859f01a35d68dea9a674e56451f75f5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,4,2017-03-07 08:53:00,9.27,,1,,"b""b' The change as written now allows to test the existence of any file.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,5,2017-03-07 08:53:00,7.73,,1,,"b""b' only downside I see to this is an in automated backup that leaves files behind"," your backup will stop and you might not notice. (I think that is a preferable failure mode to what we have now)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,6,2017-03-07 08:53:00,6.22,1,,,"b'b""  That seems preferable to overwriting any file", right? I tend to agree that being able to write arbitrary non-existing files is still a security risk, but it is tons better than what we have now.  Do you have a suggestion that would avoid this usage but still offers the same functionality? Suggestion: simply append a counter, or a date, or uniq-id. This is safer, too.  Note that it throws an exception when the attempt fails, so if you don\'t notice you\'re not handling errors at all," which is dangerous for a ton of other reasons too.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,7,2017-03-07 08:53:00,6.88,,1,,"b""b' Updated the RPC help"," too.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,8,2017-03-07 08:53:00,8.73,,1,,"b""b'  We could make the check even stricter", only allowing writing of files within the data directory," or even better a directory within the data directory. It could even come up with its own unique filename and return that (e.g. #9740). But that has a much larger impact to the API. Could do that for 0.15 but certainly not for backporting. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,9,2017-03-07 08:53:00,25.42,,1,,"b""b' What about this: if there is a file already present"," add a timestamp to the file name and save.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,10,2017-03-07 08:53:00,9.08,,1,,"b""b' Yeah that could work...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,11,2017-03-07 08:53:00,0.42,,1,,"b""b' Closing this", feel free to implement a different solution," have no time for this at the moment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,closed,2017-03-07 10:14:48,81.8,1,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,12,2017-03-07 08:53:00,90.3,,,1,"b""b' Reopening this and rebasing", I think this is basically a good fix, and was closed for unimportant concerns (compared to the problem it solves)," and no one picked it up subsequently.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,reopened,2017-09-22 11:45:07,90.32,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,13,2017-03-07 08:53:00,89.9,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,14,2017-03-07 08:53:00,48.05,,1,,"b""b' And there is also the option to make the filename optional"," where the default value is and return the filename.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,15,2017-03-07 08:53:00,4.8,,1,,"b'b""  Yes", many other things are possible. I\'m not going to do that here. That\'s the reason I closed this before. **However** I only want to solve the overwrite problem here, which is not solved by making up filenames," only by refusing to overwrite files.  > ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,16,2017-03-07 08:53:00,23.63,,1,,"b""b' Tested ACK 0cd9273fd959c6742574259d026039f7da0309a2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,17,2017-03-07 08:53:00,27.68,,1,,"b""b' Requires release notes (although this is fixing up undefined behaviour"," there may be users who currently rely on that behaviour)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,18,2017-03-07 08:53:00,1321.52,,1,,"b""b'  A release notes change is already part of the PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,closed,2017-10-04 13:01:48,76.68,1,18,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,19,2017-03-07 08:53:00,14.07,,1,,"b""b' @laanwj I also pushed this to the backports pull for 0.15.1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9937,closed,-,-,-,1,19,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,opened,2017-03-10 01:57:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,title,2017-03-10 01:57:49,00:00,,1,,"b""b' 0.14.0 is using up 100% Disk I/O'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,body,2017-03-10 01:57:49,00:00,1,,,"b""b'   This issue tracker is only for technical issues related to bitcoin-core.  General bitcoin questions  support requests and are best directed to the [Bitcoin StackExchange]url For reporting security issues"," please read instructions at [url ### Describe the issue Bitcoin Core is using up 100% of Disk I/O ### Machine specs: OS: Windows 8 CPU: Intel Core i7-3770 CPU @ 3.40Ghz  RAM:  16GB Disk size:  1TB Disk Type (HDSDD): HD '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,1,2017-03-10 01:57:49,265.12,,1,,"b'b"" It can\'t go over 100%", believe us. Since there are no details, please close this issue.  On the first run, Bitcoin Core has to sync to the network (initial block download," IBD). This phase is both CPU and disk IO intensive.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,2,2017-03-10 01:57:49,9.62,,1,,"b'b"" Yes", this is supposed to be the case during initial sync. Normally it\'s set up to go as fast as possible so also will ask as much from your system as possible.  There are a few options to tweak this. For example with you can lower the parallelism of validation, if you set that to 1 (thread), it will sync slower but put less load on the system.  Also in your OS you can lower the I/O and CPU priority of the process.  After the client catches up it should back down, though," except momentarily when a block comes in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,3,2017-03-10 01:57:49,6.95,,1,,"b'b\' Closing as ""expected behavior"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,closed,2017-03-10 06:39:30,281.68,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,4,2017-03-10 01:57:49,367.88,,,1,"b'b"" this is not upon initial sync! this is after a full sync after it\'s been running for a while""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,5,2017-03-10 01:57:49,2.5,,1,,"b""b' ok i can try tweaking those values and see what happens but may just downgrade to 0.13.2","  which did not exhibit this behavior'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,6,2017-03-10 01:57:49,159.62,,1,,"b""b' Can you share your  for the time period during which this happened? Its possible this is just because some other peer connected to you and is doing IBD from you", or, if its an SPV wallet doing it," you might try setting -peerbloomfilters=false.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,reopened,2017-03-13 09:12:24,152.9,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,7,2017-03-10 01:57:49,1063.87,,1,,"b'b"" Reopening as it\'s not during initial sync. Yes"," forgot that that is another cause of dense I/O after the initial sync: SPV wallets requesting a bloom filter scan over the block chain.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,8,2017-03-10 01:57:49,834.13,,1,,"b'b"" i haven\'t seen this issue for a while now.  not sure why.  one thing is:  i\'m not running a full node any more at the time (i have port 8333 blocked by the router firewall for the moment)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,9,2017-03-10 01:57:49,371.38,,1,,b'b\' 100% doesn\\\'t mean anything. If you have a disk that maxes out at 1 IO per second," merely using it will make it ""100% busy"". Possibly identical ""issue"": url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,10,2017-03-10 01:57:49,178.73,,1,,"b'b""  Good point. For some laptop harddisks", especially on Windows, that\'s pretty much reality :)  The problem will usually be not that it uses 100%, but that it starves other processes of using I/O. In that cast an approach as implemented in #9245 (could use testing," but I think is Linux-only at the moment) would be useful.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,11,2017-03-10 01:57:49,9.35,,1,,"b'b"" Closing in favor of #9051 having one issue open for high I/O during use (despite the OS) seems to be enough. As long as you run Bitcoin Core you\'re running a full node. Full nodes are those that keep a UTXO set and validate blocks. Blocking port 8333 doesn\'t have any effect on that"," it will just make you unlikely to reach by bootstrapping nodes and SPV nodes won\'t ever connect to you so it\'ll indeed reduce I/O. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,closed,2017-03-25 08:26:58,1394.57,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9968,closed,-,-,-,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,opened,2017-03-14 13:23:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,title,2017-03-14 13:23:34,00:00,,1,,"b""b' listreceivedbyaddress Filter Address'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,body,2017-03-14 13:23:34,00:00,,1,,"b""b' Supersede url  created by @JeremyRubin "," I will maintain it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,1,2017-03-14 13:23:34,213.32,,1,,"b""b' 1. Rebased and fixed conflicts 2. Addressed @kallewoof nits 3. Add the new parameter to  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,2,2017-03-14 13:23:34,741.77,,1,,"b""b' @luke-jr @jnewbery @JeremyRubin nit addressed"," can you re-ACK?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,3,2017-03-14 13:23:34,551.42,,,1,"b""b' Looks good. A couple of nits and a suggestion on improving the test case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,4,2017-03-14 13:23:34,420.32,,1,,"b""b' utAck'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,5,2017-03-14 13:23:34,340.25,,1,,"b'b"" @jnewbery I improved the tests"," and fixed the alignement. I can\'t use named parameter in the test though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,6,2017-03-14 13:23:34,696.98,,1,,"b""b' added named parameters to one call to listreceivedbyaddress  in the tests for better readability.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,7,2017-03-14 13:23:34,35.67,,,1,"b""b' line 73 needs to be  .  with that change"," tested ACK. Good stuff @NicolasDorier !'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,8,2017-03-14 13:23:34,1395.73,,1,,"b""b' @jnewbery thanks done"," @JeremyRubin did the hard work :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,9,2017-03-14 13:23:34,328.52,,,1,"b""b' utACK the code looks good and this is very useful functionality.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,10,2017-03-14 13:23:34,275.73,,1,,"b""b' @TheBlueMatt I fixed nits and added tests"," can you re-ACK ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,11,2017-03-14 13:23:34,335.38,,,1,"b""b' ACK works fine. This could be (not sure if should be) combined with fixing this issue for correct GUI experience: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,12,2017-03-14 13:23:34,52.18,,1,,"b""b' Closing. I am using a workaround now", I am caching the whole  ," at every block. This call would have been super useful though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,closed,2017-06-14 07:10:50,1067.27,0,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,13,2017-03-14 13:23:34,436.73,,,1,"b'b"" :disappointed: I\'m happy to reACK if you decide to reopen this!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,reopened,2017-06-15 13:23:20,372.5,0,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,14,2017-03-14 13:23:34,1390.07,,1,,b'b\' @jnewbery, if you have interest, I am reopening, I guess it does not hurt to keep it opens, it is not high maintenance PR. I was thinking to allow multiple addresses to be passed in the filter, instead of only one.  For NTumbleBit, I changed the design, I have a method called which should send back the inputs AND outputs transactions of this address. would only show input transactions.  The way I ended up implemeting my need is by caching then for each transaction in it, caching in a internal database. I now have good performance, and I am not sure this RPC method would suit my case now.  -EDIT: Documenting why I need also all transaction spent from this address: (not only transactions received)  In TumbleBit, there is a chain of transaction.  Escrow is confirmed. The user knows one of the ScriptPubKey inside Offer, but not the transaction ID. His goal is to fetch Fulfill on the blockchain. (When the ScriptPubKey of Offer get spent, then important preimages are revealed)  So the way I am doing it now is adding Offer\\\'s ScriptPubKey as WatchOnly. Then fetching all the transactions from the wallet, caching them in internal database, and going through all those transactions to see if there is one input which is spent by the ScriptPubKey of Offer. If yes, then we have [Fulfill].  Watching all transactions related to one address is very useful, not only the received transaction of the address. In Core, however it is not possible," because knowing if a transaction is ""from an address"" is considered bad practice. At the root", this is the same reason as to why url  could not make it.. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,15,2017-03-14 13:23:34,588.52,,1,,"b""b' @NicolasDorier Do you actually need the wallet functionality (balance tracking", UTXO management, coin selection, ...)," or just a means to be notified of certain transactions?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,16,2017-03-14 13:23:34,321.9,,1,,"b""b' @sipa Need the wallet functionality for NTumbleBit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,17,2017-03-14 13:23:34,21.87,,1,,"b""b' Can you clarify what functionality it relies on?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,18,2017-03-14 13:23:34,36.58,,1,,"b""b' A lot"," but I am not sure which are relevant to this discussion with the workaround. @NicolasDorier will have a better insight. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,19,2017-03-14 13:23:34,849.62,,1,,"b""b' Needs rebase.  Concept ACK. I think the by address filter is in general useful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,20,2017-03-14 13:23:34,503.33,,1,,"b'b"" @sipa just saw now your previous question. As far as TB is concerned", I am using balance tracking, UTXO management, and coin selection management of Bitcoin Core for funding the escrow transactions.  I am also using Core as a block explorer: There is some well known address on which I would like to be notified is money is sent *to* it, or sent *from*. This PR allows me to know when something is sent to the address. However, I still need a new rpc method for knowing if something is sent *from* an address.  Until I have the two features, my only way is to poll periodically then fetch all transaction with  , and see if the relevant addresses are inside. This work well but is very cumbersome. It also does not scale well, if I do not cache the result of  .  We kind of talked about that in Tokyo, and you seemed to think that the best is that I develop my own wallet," unrelated to bitcoin RPC. I don\'t like it but I think this is the way I will go for future projects.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,21,2017-03-14 13:23:34,1434.3,,1,,"b""b' Rebased here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,22,2017-03-14 13:23:34,776.32,,1,,"b""b' Closing this I workedaround the need of this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,closed,2018-03-06 17:10:04,226.73,0,19,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,23,2017-03-14 13:23:34,40.97,,1,,"b""b' @NicolasDorier I think this should reopen"," AFAIK LN people would like this too... @cfromknecht @Roasbeef'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,reopened,2018-03-06 18:13:08,63.07,0,20,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,24,2017-03-14 13:23:34,22.23,,1,,"b""b' ok rebasing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,25,2017-03-14 13:23:34,296.98,,1,,"b'b"" Rebased", fixed the nits of @luke-jr and @promag .  I renamed to so that if later we decide it is also possible to pass an array of address instead of a single address," we don\'t need to rename anything. It is more generic.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,26,2017-03-14 13:23:34,861.7,,1,,"b""b' Addressed @kallewoof nits'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,closed,2018-03-07 15:09:11,1256.05,0,23,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,27,2017-03-14 13:23:34,97.43,,1,,"b""b' utACK f08761371'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9991,closed,-,-,-,0,24,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,opened,2017-03-15 02:36:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,title,2017-03-15 02:36:35,00:00,,1,,"b""b' Running python tests fails'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,body,2017-03-15 02:36:35,00:00,,1,,"b""b' After doing a and rebuilding"," the python tests started failing:  Test output:  Debug Logs:  Has anyone already got something like that ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,1,2017-03-15 02:36:35,92.82,,1,,"b""b' By playing a bit"," I noticed it happen only if the datadir is inside my shared docker volume.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,2,2017-03-15 02:36:35,6.63,,1,,"b""b' had there any change on leveldb recently which could provoke this change of behavior ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,3,2017-03-15 02:36:35,6.05,,1,,"b""b' Seems to be docker windows related url  keeping open until I find the issue so people having the same problem can fix it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,4,2017-03-15 02:36:35,6.83,1,,,"b""b' Seeems to be normal url  now my big question is: Why in the hell it was working before. I also remember running bitcoind on network share without problem before.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,5,2017-03-15 02:36:35,12.58,,1,,"b""b' Tried on old version of Bitcoin Core. Same problem. I guess something changed with my docker.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,6,2017-03-15 02:36:35,98.37,,1,,"b""b' workaround it by changing this url  to another folder not on a share... root cause of this sudden change of behavior still unknown.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,closed,2017-03-15 06:19:52,223.28,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,7,2017-03-15 02:36:35,107.33,,1,,"b""b' It turns out that fails with error EINVAL because cifs volume does not support synching. This makes sense"," but still does not explain why it already worked before for me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,reopened,2017-03-15 09:48:53,209.02,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,8,2017-03-15 02:36:35,38.62,,1,,"b""b' So the root of the problem about why it works before and not now is that the cache for unit tests is created on /"," before there was no cache. I propose to move / to /tmp.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,9,2017-03-15 02:36:35,22.65,,1,,"b""b' Closing this issue as the immediate problem is solved.  Also", test_runner deletes and reseeds the cache by default since #10197, so problems with stale caches should not happen anymore. Agree that moving it to /tmp at some point makes sense, although that complicates sharing it between multiple tests hardcoding a directory name in /tmp is not-done because of shared systems.  You can already choose a custom cache dir when running individual tests with  ," btw.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,closed,2017-08-24 09:08:28,1399.58,1,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,9996,closed,-,-,-,1,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,opened,2017-03-16 22:30:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,title,2017-03-16 22:30:46,00:00,,1,,"b""b' Does not support UNC path for database'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,body,2017-03-16 22:30:46,00:00,,1,,b'b\' ### Describe the issue Bitcoin Core 0.14.0 does not support storing the database on a SMB share.  ### Can you reliably reproduce the issue? Relocate your AppData folder by right clicking on it, selecting the Location tab, and specifying a UNC path for a SMB share. Install Bitcoin Core 0.14.0 and run it. Technically it was relocated via a Group Policy Object, but the instructions here are functionally equivalent. **Edit:** It will function properly if you map the share with a driver letter rather than a UNC path.  ### Expected behaviour It should support storing the database on a UNC path for virtual desktop infrastructure environments.  ### Actual behaviour It complains about not being able to open the database.  ### Screenshots. url ### What version of bitcoin-core are you using? Version 0.14.0 downloaded from  on 3-16-17  ### Machine specs: OS: Windows Server 2016 virtual machine with the latest patches and the Remote Desktop Services role, publishing Bitcoin Core as a RemoteApp. The host is running VMware ESXi 6.5 CPU: 4 cores from a Intel Xeon E5-2660 v2 with high latency sensitivity and 100% reservation RAM: 16GB with 100% reservation Disk size: Boot disk is 32GB, the AppData folder is on a 20TB SMB3 share with 4+TB free Disk Type (): Boot disk is stored on a VMware datastore composed of 8x SSDs in a RAID 0 with a VMware NVMe disk controller for the virtual machine.  ### Any extra information that might be useful in the debugging process.  was empty," the contents of  is: 2017-03-16 22:15:24 Bitcoin version v0.14.0 2017-03-16 22:15:24 InitParameterInteraction: parameter interaction: -whitelistforcerelay=1 -2017-03-16 22:15:24 Assuming ancestors of block 00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90 have valid signatures. 2017-03-16 22:15:24 GUI: ""registerShutdownBlockReason: Successfully registered: Bitcoin Core didn\\\'t yet exit safely..."" 2017-03-16 22:15:26 Default data directory \\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin 2017-03-16 22:15:26 Using data directory \\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin 2017-03-16 22:15:27 Using config file \\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\ 2017-03-16 22:15:27 Using at most 125 automatic connections (2048 file descriptors available) 2017-03-16 22:15:28 Using 32 MiB out of 32 requested for signature cache", able to store 1048576 elements 2017-03-16 22:15:28 Using 4 threads for script verification 2017-03-16 22:15:28 Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010) 2017-03-16 22:15:28 scheduler thread start 2017-03-16 22:15:28 Using wallet  2017-03-16 22:15:29 init message: Verifying wallet... 2017-03-16 22:15:30 CDBEnv::Open: LogDir=\\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\database ErrorFile=\\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\ 2017-03-16 22:15:31 Bound to [::]:8333 2017-03-16 22:15:31 Bound to 0.0.0.0:8333 2017-03-16 22:15:32 Cache configuration: 2017-03-16 22:15:32 * Using 2.0MiB for block index database 2017-03-16 22:15:32 * Using 8.0MiB for chain state database 2017-03-16 22:15:32 * Using 290.0MiB for in-memory UTXO set (plus up to 286.1MiB of unused mempool space) 2017-03-16 22:15:32 init message: Loading block index... 2017-03-16 22:15:33 Opening LevelDB in \\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\blocks\\\\index 2017-03-16 22:15:33 IO error: C:\\\\Program Files\\\\Bitcoin\\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\blocks\\\\index\\\\LOCK: Could not lock file. 2017-03-16 22:15:45 init message: Loading block index... 2017-03-16 22:15:45 Wiping LevelDB in \\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\blocks\\\\index 2017-03-16 22:15:45 Opening LevelDB in \\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\blocks\\\\index 2017-03-16 22:15:46 IO error: C:\\\\Program Files\\\\Bitcoin\\\\\\\\SERVER_NAME_CENSORED\\\\NAS\\\\Application Data\\\\Bitcoin\\\\blocks\\\\index\\\\LOCK: Could not lock file. 2017-03-16 22:15:47 scheduler thread interrupt 2017-03-16 22:15:47 Shutdown: In progress... 2017-03-16 22:15:48 Shutdown: done \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,1,2017-03-16 22:30:46,22.53,,1,,"b'b"" LevelDB (Core\'s db engine) is known to have issues with network shares"," particularly Samba shares. That Core crashes when the datadir is on a network share is a known issue that currently has no fix that does not involve special configuring and symlinking.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,2,2017-03-16 22:30:46,2.17,,1,,"b'b"" @achow101 could you provide instructions this special configuration and necessary symlinks? I\'d rather store it on a SMB share than have to setup iSCSI mounts if possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,3,2017-03-16 22:30:46,4.72,,1,,"b'b"" I haven\'t done this myself", so I can\'t really provide detailed instructions. Also, doing this doesn\'t actually move everything to the network share, only the block files. The databases must be local otherwise they will fail to work.  Basically you can symlink the blocks folder and everything that is not a database to your network share," but leave the databases (chainstate and database folder) on the local drive.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,4,2017-03-16 22:30:46,1.97,,,1,"b""b' @achow101 Could you tell me which files (LevelDB or otherwise) are specifically required to be on an actual file system as opposed to an SMB share? Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,5,2017-03-16 22:30:46,55.9,,1,,"b""b' Everything in $ and in $ needs to be on an actual filesystem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,6,2017-03-16 22:30:46,86.5,,,1,"b""b' Thanks @sipa '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,closed,2017-03-17 01:24:33,173.78,0,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,7,2017-03-16 22:30:46,505.4,,,1,"b'b"" @NicolasDorier in #10000 has the opposite observation"," that a datadir on a SMB mount works in Windows (just not from Linux). Not sure what he\'s doing different.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,8,2017-03-16 22:30:46,53.88,,,1,"b""b' It has been a while since I did not started bitcoind on a shared drive. But I think it should always work.  @marukka try to assign a drive letter to your share. I noticed path starting with // does not work", but if it is a drive letter," it should be fine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,9,2017-03-16 22:30:46,337.42,,,1,"b'b"" So it looks like it does work on Windows with a SMB share as noted by @NicolasDorier in #10000. It however requires the SMB share be mapped as a driver letter than a UNC path. So i\'m reopening this because it should support a UNC path as well"," instead of requiring a drive letter.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,reopened,2017-03-17 16:21:16,896.72,0,6,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,10,2017-03-16 22:30:46,1093.0,,1,,"b""b' It looks like the double at the beginning gets lost. Sometimes the shell eats these. Can you try reversing the slashes"," e.g. instead?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,11,2017-03-16 22:30:46,107.92,,1,,b'b\'  Why? UNC support isn\\\'t claimed," so how can the lack of it be a bug? Where does it say UNC paths ""should"" be supported?  This can only be a new feature request as long as @achow101\\\'s first comment stands.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,12,2017-03-16 22:30:46,302.62,,,1,b'b\' @laanwj  Forward slashes don\\\'t work. The button won\\\'t recognize them and typing it manually in to the field says gives an error of url @unsystemizer  Where does it say that you support drive letter paths? Where does it say you support anything at all? If you want to go down this path, you support Windows and UNC paths have been around in Windows since at least the early 90s url  This isnt some sort of new feature or API, and certainly isnt obscure as it is the standard way of specifying network file systems which is rather common nowadays just look at roaming profiles as an example.  Furthermore the fact that it allows me to set one in the first place and correctly reads the amount of free space available implies the UNC support is intended url  If UNC is not supported as you claim then it shouldnt even allow me to specify a UNC path, and would be a bug in that regard," as then Bitcoin Core is failing to validate input when it has a specific feature to validate input if you see my reply in this post to @laanwj.  And finally in regards to your qualifier of _""as long as @achow101\\\'s first comment stands""_", if you were to read my previous comment in this thread and read #10000 the issue of LevelDB with SMB shares seems to be confined to Linux systems. It has so far worked fine as long as you specify a drive letter. And if you look at at the  it seems to be simply using a relative path rather than absolute path for a lock file when a UNC path is specified Which seems like it would be an easy bugfix for someone familiar with Bitcoin Core\\\'s code base.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,13,2017-03-16 22:30:46,308.7,,1,,"b'b"" @marukka I agree it\'s a bug that the selection window does seem to support UNC. The reason for this is that the actual database is managed by LevelDB which does not support it. I don\'t know what would be required to make it work", but it may be more complicated than just not making it treat it as a relative path. More generically," I\'m surprised that drive letters mapped to network drives work at all. Having the database on network filesystems is not generally supported due to lack of atomic updates.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,14,2017-03-16 22:30:46,859.98,1,,,"b'b"" @marukka I completely lost interest in this due to your rant. You don\'t get to determine anyone else\'s priorities. If you think it is so easy", and want this to be solved," solve it yourself. That\'s how open source works.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,15,2017-03-16 22:30:46,881.05,,,1,"b'b"" @marukka I am busy on other things", but basically mapped drive works fine. I can help reviewing and testing if you do it, but I can\'t really work on it for now.  Bitcoin core should work fine with //, there is lots of scenario where it makes sense. An example is having an highly available bitcoin core, where a new server can be popped up and booted as soon as the current server burn. (see example url Workaround of mapped drive work," but I remember case in the past where in some environment I did not have this flexibility.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,16,2017-03-16 22:30:46,1234.17,,1,,"b'b"" @laanwj  I didnt mention anyone\'s priorities... _ever_. I mentioned that @unsystemizer couldn\'t be bothered to read a thread before commenting. And was inventing in his mind a list of supported features so detailed it could be a RFC", which seemingly doesn\'t exist. And no, thats not how open source works, thats how amateurs work. There are countless professional open source projects which accept bug reports without trying to use some contorted logic to justify reports not being a bug, or crying to the reporter to fix it themselves. Some people actually take pride in developing functioning software, but it seems as if they\'re in short supply in this project.  Bitcoin Core accepts UNC paths as a data directory, this is a simple fact. And it crashes when attempting to use the UNC path, another fact. Regardless of whether you want to call the lack of proper input validation the bug, or it crashing the bug, it is still a bug, which is another fact. Instead it seems that the egos of some people here are so fragile that they apparently have problems accepting the fact that their code may contain bugs. If you require a safe space away from users reporting bugs, make this repo private.  @NicolasDorier  I can confirm that a mapped drive works as well, thanks for that info from #10000. Unfortunately I can also confirm that does not work on Windows. There is a screenshot in my previous post.  As far as a highly available Bitcoin Core node it is likely already possible, at least on Windows. Just setup bitcoind as a service, and with Windows Server Failover Clustering (WSFC) it is fairly easy to configure a failover service. As far as shared storage though it would require a iSCSI mount (or something else like FibreChannel)," but WSFC does not support SMB as shared storage except for the witness node to obtain quorum.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,17,2017-03-16 22:30:46,1255.13,1,,,"b'b"" @marukka The issue is open", someone could pick it up. No one is denying that the issue exists," or it would have been closed. You\'re accomplishing nothing with your rant and wasting time. That\'s my last word on this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,18,2017-03-16 22:30:46,1258.62,,1,,"b""b' @laanwj  You intentionally misclassified it as a feature request rather than a bug", which is in effect denying that it is an issue. Call it what you want, but my comments are not rants," it is nothing more than refuting baseless and factually incorrect statements. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,19,2017-03-16 22:30:46,1249.02,,1,,b'b\' I\\\'m just getting into Bitcoin, and I wanted to secure my wallet installation. My first thought was to create a persistent Freenas volume across 3 drives, and create a SMB share accessible by Windows, and run my wallet from there. I\\\'m running into this same problem now as well.  However," what @marukka said isn\\\'t working for me: ""It however requires the SMB share be mapped as a driver letter than a UNC path."" My share is mounted to Q:", but gives  There are certainly other ways to secure my wallet, but I thought I\\\'d chime in on why this is a problem for me.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,20,2017-03-16 22:30:46,1256.37,,1,,"b""b' @ajthemacboy try with / instead of \\\\ '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,21,2017-03-16 22:30:46,1274.87,,,1,"b""b' @NicolasDorier Thank you"," that works! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10018,open,-,-,-,2,13,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,opened,2017-03-22 08:55:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,title,2017-03-22 08:55:45,00:00,,1,,"b""b' adhere to for outbound connection'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,body,2017-03-22 08:55:45,00:00,,1,,"b'b"" unsure why this wasn\'t already being done"," seems sensible to me that you also want to be able to whitelist nodes that you make an outgoing connection to?  trying to figure if there should be any tests added but I can\'t seem to find tests that really cover ConnectNode specifically at all?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,1,2017-03-22 08:55:45,1.82,,1,,"b'b"" Outbound connections are already privileged in a number of ways"," and the white-listing by default has strange effects on transaction propagation that you probably don\'t want for outbound connections.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,2,2017-03-22 08:55:45,1406.75,,,1,b'b\' the reason for wanting to whitelist the outbound connection is cuz I\\\'m using to connect only to 1 specific node. without whitelisting the trickling mechanism can cause transactions to take several seconds before being relayed.  I think you might have misunderstood as well based on the title, the PR Is to adhere to the options when making outbound connections," not whitelist them by default. though if you don\\\'t mind I\\\'d love to learn what you mean by ""strange effects"" (if not here maybe on IRC ;-) ?) \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,3,2017-03-22 08:55:45,202.27,,1,,"b""b' I agree this would be useful.  There should be *some* mechanism for whitelisting outgoing connections. ~~Closing because this is a duplicate of #9923~~ '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,closed,2017-03-24 11:46:35,170.83,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,reopened,2017-03-24 11:48:32,1.95,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,4,2017-03-22 08:55:45,2.17,,1,,"b""b' Oops", missed that this was a PR, not an issue. This happens to be exactly what I need for my tests, thanks!  We might consider using a different option for outgoing network ranges to whitelist, though. It can be unexpected to users if this is merged as-is," as it widens the meaning of an (arguably ill-defined) existing option.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,5,2017-03-22 08:55:45,425.98,,1,,"b'b"" @laanwj Agreed on all points. I\'ve hacked this in for myself a few times for addnode=/connect= nodes. But as you said", tacking it on to whitelist is moving in the wrong direction.  I\'d much prefer to get rid of whitelist and replace it with explicit privileges, generated at connection time based on , config options, etc. That way there\'s less guessing in the later code," and there\'s a single place for the logic.  I can whip that up if you agree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,6,2017-03-22 08:55:45,1344.68,,1,,"b'b""  Whitelisting isn\'t really the correct fix for single outbound connect=1 resulting in slower relay.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,7,2017-03-22 08:55:45,752.22,,,1,"b'b""  I\'d prefer that too. Something like", say, a bit field. The current whitelist is both too fine-grained and too course-grained. It\'s just vague what it does and different people want different things from it," and we can\'t change it without breaking other people\'s use cases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,8,2017-03-22 08:55:45,143.47,,1,,"b""b' hmm"," for me the whitelist makes sense cuz I can easily ensure it covers my local servers without too much ufss'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,9,2017-03-22 08:55:45,238.98,,1,,"b'b"" There seems to be no agreement to do this", and quite a lot of time elapsed without new discussion," so I\'m closing. Looking forward to alternative solutions as were discussed in this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,closed,2017-12-21 12:14:05,25.55,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10051,closed,-,-,-,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,opened,2017-03-26 13:16:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,title,2017-03-26 13:16:44,00:00,,1,,"b'b"" Docs: remove \'noconnect\' option""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,body,2017-03-26 13:16:44,00:00,,1,,b'b\' As far as I can tell,"noconnect"" is never actually parsed as an argument in the codebase.\''
bitcoin	10085	closed	1	luke-jr	2017-03-26 13:16:44	253.77		+1		b""b' -no* is the same as -*=0'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,2,2017-03-26 13:16:44,7.62,,1,,"b'b\' @luke-jr can you point out where the logic is that translates a ""no*"" parameter into a ""*=0"" parameter?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,3,2017-03-26 13:16:44,42.6,,1,,"b""b' url  On Sun", Mar 26, 2017 at 7:38 PM," Jameson Lopp wrote:>'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,4,2017-03-26 13:16:44,82.05,,,1,"b""b' Aha; thanks for the clarification.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,closed,2017-03-26 19:42:46,386.03,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,5,2017-03-26 13:16:44,1.02,,1,,"b'b"" @jlopp If it wasn\'t clear that -noX is an alias for -X=0"," perhaps that should be documented more clearly in the output?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,6,2017-03-26 13:16:44,2.92,,1,,"b""b' utACK d5690f1ab87678278d622ea82f3fa569314a2144. I think this makes iteasier to understand. On Sun", Mar 26, 2017 at 9:43 PM," Jameson Lopp  wrote:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,7,2017-03-26 13:16:44,1.02,,1,,"b'b"" @sipa Yes", possibly I\'ll think about it. I\'m currently working on a project involving Bitcoin Core\'s configuration options," which is why I\'m currently exploring this area of the codebase.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,8,2017-03-26 13:16:44,92.35,,1,,"b""b' @jlopp", regardless, I agree with @MarcoFalke that this PR probably improves things," despite not fixing anything technically incorrect. I suggest reopening.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,9,2017-03-26 13:16:44,8.43,,1,,"b""b' Sure"," done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,reopened,2017-03-26 21:28:30,105.73,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,10,2017-03-26 13:16:44,572.9,,,1,"b'b""   works fine and I use it a lot for internal tests. It\'s a little bit more consistent to not mention it explicitly in the help I guess but please don\'t say that things don\'t work if they do!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,closed,2017-03-27 07:35:32,607.03,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10085,closed,-,-,-,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,opened,2017-03-30 15:32:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,title,2017-03-30 15:32:42,00:00,,1,,"b""b' Allow debug logs to be excluded from specified component'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,body,2017-03-30 15:32:42,00:00,,1,,"b""b' setting can lead to very noisy  with subcomponents filling up the log file. See for example url  where there are hundreds of libevent debug logs.  This commit adds an option to exclude certain components from debug logging. The usage is: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,1,2017-03-30 15:32:42,6.9,,1,,"b""b' utACK 3f1cbd38896cea8cea3095aad0a23254a39f651e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,2,2017-03-30 15:32:42,42.72,,,1,"b""b' utACK 3f1cbd3.  Might be good to clean the category code up in another PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,3,2017-03-30 15:32:42,60.75,1,,,"b'b"" @JeremyRubin agree this could be optimized so we don\'t do a every time is called. I think that\'s an improvement for a different PR. This doesn\'t make things particularly worse.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,4,2017-03-30 15:32:42,205.37,,1,,"b""b' Closing until #9424 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,closed,2017-03-31 20:48:29,315.78,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,5,2017-03-30 15:32:42,607.75,,1,,"b""b' #9424 was merged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,6,2017-03-30 15:32:42,1017.4,,1,,"b'b"" Reimplemented on top of the new logging categories infrastructure from #9424. As expected"," it\'s about 10 lines of code.  Requesting review from @gmaxwell .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,reopened,2017-04-02 23:53:35,185.1,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,closed,2017-04-02 23:53:50,0.25,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,reopened,2017-04-02 23:56:14,2.4,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,7,2017-03-30 15:32:42,635.62,1,,,"b""b' utACK url  apart from message nit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,8,2017-03-30 15:32:42,156.17,,1,,"b'b"" @laanwj\'s nit fixed and squashed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,closed,2017-04-03 15:43:27,947.22,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10123,closed,-,-,-,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,opened,2017-04-03 16:45:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,title,2017-04-03 16:45:15,00:00,,1,,"b""b' [net] Allow disconnectnode RPC to be called with node id'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,body,2017-04-03 16:45:15,00:00,,1,,"b""b' The disconnectnode RPC can currently only be called with the IP  of the node the user wishes to connect. This commit allows the node to be disconnected using the nodeid returned by getpeerinfo().'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,1,2017-04-03 16:45:15,222.45,,,1,"b'b"" Concept ACK. Though if we\'re going to be exposing this value to our apis", we need to define it sanely first.  ATM it\'s just an int, so it\'s tricky  it safely. I\'d prefer change it to a uint32_t first," so that we can use ParseUInt32 here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,2,2017-04-03 16:45:15,55.32,1,,,"b'b"" Concept ACK", I\'ve wanted this many times before... but I\'m concerned about the nodeidright now if it wraps bad things happen," and it will be harder to fix if we\'ve made it a part of the API.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,3,2017-04-03 16:45:15,29.83,1,,,"b'b"" edit: Decided I didn\'t like this thought and bailed. Meant to cancel"," closed instead. Sorry!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,closed,2017-04-03 21:52:52,307.62,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,reopened,2017-04-03 22:05:29,12.62,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,4,2017-04-03 16:45:15,94.8,,,1,"b'b"" I suppose it would be prudent to determine where we assume nodeids are increasing in value", as opposed to just being unique. I should hope there are none of these, other than generally being able to assume that higher node == earlier connection determine when we assume a nodeid to be globally unique. For example, if there\'s a global map that tallies sent bytes, that would be broken by duplicated values when ids wrapped. determine when we assume that a nodeid is a unique identifier among current nodes.  The last one is what happens all over the place, and is fine as long as we ensure that the values really are unique. To do so, we can either: maintain a set of currently used nodeids, and make sure that new values aren\'t in use before assigning a new one disconnect all nodes when we hit max, forcing new connections starting from 0.  Obviously the first is cleaner," and would probably end up being simpler too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,5,2017-04-03 16:45:15,218.1,,1,,"b'b"" See url  for the  changes. Still need to verify the first two points above", though.  @jnewbery If you don\'t object," I\'ll go ahead and PR that as a prerequisite for this one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,6,2017-04-03 16:45:15,228.55,,1,,"b'b""  This value is already exposed in APIs since added  . Handling wrapping sanely is important"," but I don\'t think this is a blocker for more usage on the RPC API. Client applications should treat these numbers as opaque identifiers and the only thing they can rely on is that that an ID won\'t be reused for a different node within a very short timespan.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,7,2017-04-03 16:45:15,156.23,1,,,"b""b' Found myself wanting this for disconnect after reading  many times"," annoying to have to getpeerinfo for it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,8,2017-04-03 16:45:15,728.07,,,1,"b""b' @theuni of course"," no objection at all!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,9,2017-04-03 16:45:15,51.05,,1,,"b'b"" Well you can write an IPv4 address as a decimal integer... I guess we\'re excluding that (very uncommon) usage?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,10,2017-04-03 16:45:15,653.38,1,,,"b'b""  +1. Exactly. This is exactly why these things get ugly. There\'s always overlaps in representations that you may not be thinking about in the initial design"," then get realized later. Let\'s just take the sane route here and make the ambiguity impossible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,11,2017-04-03 16:45:15,286.38,,,1,"b""b'  Yep"," fine.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,12,2017-04-03 16:45:15,5.92,,1,,"b'b"" ok", another idea. I think it\'s reasonable that people might want to update node by id in other ways (ie switching whitelisting on and off, changing ban score, etc). How would you feel about an updatenode RPC to do those things? To begin with it will allow disconnecting and turning whitelisting ," and it can be added to later if people think further functionality is useful.  I already have a branch with an updatenode RPC Thoughts?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,13,2017-04-03 16:45:15,456.73,,,1,"b'b"" I\'ve added an RPC here: #10160 which I think is better and more extensible"," but I\'d be interested to hear others\' thoughts.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,14,2017-04-03 16:45:15,1030.32,1,,,"b'b"" I don\'t think \'updatepeer X disconnect\' is clearer than \'disconnectnode\'. Having the RPC call as the verb is easier to use and remember.  We have an example of a very bad multiplexed call in the API:  . Your proposal isn\'t half as crazy as that :) And the idea of having a makes sense for changing other per-node variables", certainly for ," but I don\'t think it\'s a good place to place disconnect.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,15,2017-04-03 16:45:15,70.85,1,,,"b'b"" Yes", is nuts, and I agree that having the RPC call as the verb is sensible.  I\'ll reimplement this as an additional argument to disconnectnode.  Longer term, my thinking around updatepeer is that it\'d be handy as a swiss army knife for peer interop. We may wish to  other  for peers, and having a single RPC that does all of that would be a sensible API, and certainly better than a different RPC for each attribute. On the other hand, I do agree that \'disconnect\' is a verb," so naturally is a bit weird.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,16,2017-04-03 16:45:15,282.45,1,,,"b'b"" I\'ve pushed a version where disconnectnode now takes two arguments: address and nodeid. Strictly one argument must be given. (note: with named arguments", you can just supply a single argument, with positional arguments you need to set \'address\' to the empty string if you want to use \'nodeid\').  I changed the name of the existing argument from \'node\' to \'address\', since it only takes address. I think that\'s the right thing to do since the current name is misleading," but we\'ll need release notes to document the API change.  This should only be merged after @theuni\'s branch here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,17,2017-04-03 16:45:15,1031.7,,,1,"b'b"" While you can write an IP as a decimal number", you can\'t specify an IP *plus port* in such a manner. Makes perfect sense to say String = IP and Number = nodeid IMO. Don\'t care too strongly if the current (two arguments) approach is used," but I wouldn\'t call it sane. :p""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,18,2017-04-03 16:45:15,1387.4,,,1,"b'b"" @luke-jr thanks for the review. I agree that the two arguments approach looks a bit odd when used as positional arguments", but it makes perfect sense when using named arguments: call the RPC with address= if you want to disconnect by address, or call with nodeid= if you want to disconnect by nodeid. The fact that it works at all with positional arguments is more a historical quirk of bitcoin\'s RPC rather than a feature.  I think any of the three approaches I\'ve implemented are fine (overloading one argument, having a second argument or having a separate \'update peer\' RPC). I really just want the functionality somewhere," and I\'m happy to go along with the consensus view for where the best place to put it is.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,19,2017-04-03 16:45:15,1179.02,,,1,b'b\' (aside," the addnode thing isn\\\'t that nuts if you thing of it as a shortening of ""addednodelist """, which is what it actually is :) )\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,20,2017-04-03 16:45:15,253.73,,,1,"b'b""  Yes", it makes sense if you\'re a scholar of Bitcoin Core code archaeology :)  It\'d be nice if could be renamed to or  ," but that\'s a lot of work (and a change to public APIs).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,21,2017-04-03 16:45:15,1420.68,1,,,"b'b"" @MarcoFalke indeed. See my earlier comment: The fact that this argument is currently called \'node\' and the help text say is misleading at best. It currently only accepts a string which must match on the  CNode::addrName"," which is the IP .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,22,2017-04-03 16:45:15,168.23,,1,,"b""b' Rebased and squashed"," with a couple of code cleanups.  #10176 is merged so this is now ready for review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,23,2017-04-03 16:45:15,216.77,1,,,"b'b"" @jnewbery Yeah sorry for missing that. During my review flow I look at the code first", then read the comments before sending the ACK.  Generally I think it makes sense to keep breaking changes at a minimum or at least don\'t splatter them across consecutive releases. As we already have such a breaking change in 0.14.1 it makes sense to bundle this one in as well.  Would you mind to create a minimal fix (similar to #10084) and tag that for backport? Not sure if it can into 0.14.1 at this stage," but having the pull open can not hurt.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,24,2017-04-03 16:45:15,1106.6,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,25,2017-04-03 16:45:15,136.97,,1,,"b'b"" fixed @laanwj\'s review comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,26,2017-04-03 16:45:15,30.02,,1,,"b""b' ACK 18718846c9ab7b7b4392912a14e1a64e9136e970'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,27,2017-04-03 16:45:15,559.17,,1,,"b'b"" @jnewbery I don\'t consider positional arguments to be merely historical.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,28,2017-04-03 16:45:15,785.87,,1,,"b'b"" Rewritten using @laanwj\'s suggested structure.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,29,2017-04-03 16:45:15,178.65,,,1,"b'b"" Thanks @luke-jr . Nits addressed.  I\'ve added tests for the new functionality in the  test script (and renamed it to disconnect_). Whilst I was there I tidied up the test script", reduced the dependencies on standard libraries," and reduced the runtime from 20s to 9s on my pc.  Happy to split the test script changes out into a new PR if that\'s preferable for people.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,30,2017-04-03 16:45:15,956.78,,1,,"b""b' utACK d54297f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,closed,2017-04-20 09:47:50,702.35,9,13,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,31,2017-04-03 16:45:15,219.62,,,1,"b'b"" @laanwj thanks for merging (and thanks for the suggestion of structuring the disconnectnode code differently). In future", feel free to squash my test commits before merging, or ask me to squash. I feel like micro commits are helpful for reviewers," but don\'t necessarily need to be in the history.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,32,2017-04-03 16:45:15,516.57,,1,,"b'b"" @jnewbery Yes", that would have made sense. I try to keep some pace in merging things once they\'re ready to merge," as there are so many PRs held up on one thing or another.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10143,closed,-,-,-,9,14,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,opened,2017-04-05 21:48:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,title,2017-04-05 21:48:52,00:00,,1,,"b""b' Add updatepeer RPC'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,body,2017-04-05 21:48:52,00:00,,1,,"b'b"" Adds an RPC to update peer config and carry out actions on the peer by NodeId. At the moment", the actions are just changing whether the peer is whitelisted and whether the peer is a manual_connection (previously called an addnode). Future possible actions would be changing banscore, banning, and so on.  This is designed to be called using named arguments," but due to the RPC infrastructure can also be called with positional arguments (although doing so would be very fiddly).  I\'ve set the category to hidden for now. We may want to make the whitelisting behaviour more granular in future and I don\'t want to commit us to a public API that we can\'t then change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,1,2017-04-05 21:48:52,1216.92,,1,,"b'b"" I\'m not sure I like the idea of adding a command that changes the implied state of a peer via its attributes", rather than performing actions explicitly. The whitelist side-effects are especially hazy," see the brief discussion here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,2,2017-04-05 21:48:52,20.73,,1,,"b""b' @jnewbery: Can you elaborate the use-case for  ? IMO provides a similar interface", with disconnecting & banning for a specific timespan ( , etc.) because," a pure does not prevent the peer from a direct re-connect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,3,2017-04-05 21:48:52,1.05,,1,,"b""b' Ah... an there is already the RPC call.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,4,2017-04-05 21:48:52,115.05,1,,,"b'b\' @jonasschnelli see #2729 and #6271 for history of the RPC. It\\\'s also useful in testing to be able to control the topology of the test nodes.  @theuni I agree that whitelisting is a mess and should be broken out into bits for controlling individual behaviours. Hence my original comment: ""I have a feeling we may want to make the whitelisting behaviour more granular and I don\\\'t want to commit us to a public API that we can\\\'t then change."" I was thinking of your comment in #10051 but couldn\\\'t find the reference. I don\\\'t understand what this means in the context of whitelisting. The idea is to update the peer\\\'s whitelist behaviour. What would performing actions explicitly entail?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,5,2017-04-05 21:48:52,34.52,,1,,"b""b' Closing in favour of #10143 for the immediate need (disconnect node by id)"," but I think this could still be a useful RPC in the future.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,closed,2017-04-07 20:57:08,1388.27,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,reopened,2017-10-26 22:16:55,79.78,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,6,2017-04-05 21:48:52,81.87,,1,,"b""b' Reopening with just the ability to update:   The net_processing functionality for the v0.15.0.2 PRs is disabled for manual connections"," so this PR could be helpful for testing those changes.  @sdaftuar '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,7,2017-04-05 21:48:52,947.55,,,1,"b'b"" Thanks for the review @promag . I\'ve addressed all your comments.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,8,2017-04-05 21:48:52,26.12,,,1,"b""b' whitelisting via rpc?? BIG BIG concept ACK. I am excited. It will make configuration of services depending on Bitcoin Core RPC and P2P so much easier.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,9,2017-04-05 21:48:52,311.15,,1,,"b""b' @promag nits addressed in latest commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,10,2017-04-05 21:48:52,1432.82,,1,,"b""b' I agree with @promag would be easier to extend later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,11,2017-04-05 21:48:52,183.37,,1,,"b'b""  This is a different scheme from all of the existing RPCs. I expect that there would need to be changes to the rpc framework to make this work.  It doesn\'t make sense to me have a completely different scheme for just this RPC method", since we already have named arguments.  If you disagree," perhaps you could implement the scheme you\'re talking about in a new branch?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,12,2017-04-05 21:48:52,139.15,,1,,"b""b' @jnewbery how so? This is just 3 differents parameters of 3 strings.  The way you are doing now", if there is like 60 settings for one peer, we will have 60 parameters to this function. This does not seem very maintainable. In such case even  would be better. We would have 60 functions," which is still better than 60 parameters. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,13,2017-04-05 21:48:52,16.77,1,,,"b""b'  @jnewbery you too agree that this is by design bad for positional arguments (considering the possible settings can be extended).  Another approach is to use something like  :  .  FWIW I already gave my utACK \\xf0\\x9f\\x98\\x84 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,14,2017-04-05 21:48:52,1038.9,1,,,"b'b"" @NicolasDorier  Right", but all RPCs currently support positional arguments, where the position of the argument determines its meaning. I don\'t necessarily agree that it\'s always appropriate, but having a single RPC that doesn\'t adhere to that scheme is confusing and inconsistent.  Using named arguments have been around for at least two releases now," so there\'s no need to use positional arguments at all.  Rebased""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,15,2017-04-05 21:48:52,1094.57,,1,,"b""b' yeah we talked about it"," I understand now why named args make sense. Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,16,2017-04-05 21:48:52,515.78,,1,,"b'b"" @NicolasDorier you\'ve given this a *BIG BIG concept ACK*. Mind reviewing? :slightly_smiling_face: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,17,2017-04-05 21:48:52,272.15,,1,,"b""b' Sure will review and test today.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,18,2017-04-05 21:48:52,336.5,,,1,"b""b' @jnewbery do you need more help on this PR? I am really interested into seeing it merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,19,2017-04-05 21:48:52,549.87,1,,,"b'b"" @NicolasDorier: Sorry for dropping this I\'ve rebased on master and squashed all nits.  I\'m not sure about your suggestion for locking in updatepeer and fetching the  . isn\'t currently locked anywhere outsdie  "," which I think is a good property to maintain.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,20,2017-04-05 21:48:52,751.5,,1,,"b""b' @jnewbery in this case"," I would suggest to have a method on CConman because there is high ratio of ceremonial monkey copy pasta code everytimes we will need to add one property here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,21,2017-04-05 21:48:52,645.4,,,1,b'b\' I\\\'m still with @theuni on this one," not super happy with the idea of changing properties about peers that net_ both consider ""constant"". Would prefer we add some (undocumented?) options to addnode (or a new RPC) which lets you control the flags of a peer as you create a connection.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,22,2017-04-05 21:48:52,103.52,,,1,"b'b"" @theuni\'s comment was: I don\'t understand what\'s meant by \'performing actions explicitly\'", but I\'m happy to modify this PR if there are concrete suggestions. Can you articulate what makes you not happy? Being able to change the properties of a connection without having to  that object is generally very useful, since cycling a connection has many side-effects. As far as I can see," the only stateful impact of starting with rather than updating it later is this call to in  :   I can\'t see any other reason to be concerned about updating dynamically.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,23,2017-04-05 21:48:52,59.4,,1,,b'b\' I might be slightly more OK with changing fWhitelisted on a peer after its up," as that may be useful ""in the real world"" outside of tests"," but I\\\'m super not a fan of changing manual_connection. One thing @theuni and I have talked about is being more aggressive about CNode representing a ""connection handle"" where its potentially allowed to have a few constant members which are general information about the connection", eg whether it was automatically or manually added, the remote address, etc. One thing you might imagine is inserting a peer into a  (eg compact blocks HB mode peers set, the (implied) set of nPreferredDownload peers (which we currently track with fPreferredDownload, but we could actually take it as implication based on const values in CNode)) or otherwise performing (between-message-)stateful behavior on a peer based on such (constant) information about a connection. In each of these cases, having such constant information change out from under you could potentially introduce . I\\\'m not sure what side-effects there are that couldn\\\'t be reproduced on a new connection after cycling the connection. It ends up being an unrealistic test if you dont do that anyway. Maybe I\\\'m just missing the motivation of cases that wouldnt be better tested by cycling a connection?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,24,2017-04-05 21:48:52,175.07,1,,,"b'b""  You\'re describing things that _may_ happen in future changes in abstract terms", particularly when you talk about between-message-stateful behaviour.  is certainly a better name than  , but I still don\'t think it really captures what the property means. Really it\'s something like \'preferred_peer\' it\'s a peer that we don\'t want to disconnect or punish for bad behaviour. How it was connected isn\'t really relevant. We may want to prefer a peer that has connected inbound to us, and we may want to connect outbound to a peer without preferring it. In that context, I think it makes sense to want to set this property manually after connection, without having to disconnect and go through the version-verack-getheaders-headers handshaking.  This is undoubtedly useful for testing, but I could also imagine it being useful, for example in a business that has more than one bitcoin node and wants to be able to manage their network topology.  Thinking forward a bit more, I think it\'d also be beneficial to break out the whitelist behaviour to be more granular," and again be able to update those properties dynamically.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,25,2017-04-05 21:48:52,1339.3,,1,,"b""b' Fixed @kallewoof review comments.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,26,2017-04-05 21:48:52,1318.72,,1,,"b'b"" There doesn\'t seem to much appetite for this. Closing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,closed,2018-07-23 17:56:36,1179.68,5,18,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,27,2017-04-05 21:48:52,566.98,,1,,"b""b' I liked it :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10160,closed,-,-,-,5,19,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,opened,2017-04-11 21:29:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,title,2017-04-11 21:29:09,00:00,,1,,"b'b"" [trivial] Rename unused submitblock argument as \'dummy\'""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,body,2017-04-11 21:29:09,00:00,,1,,"b""b' Dead code"," not used since the submitblock RPC was introduced in #1691 5 years ago.  **EDIT:** This PR now renames the unused arguments in and  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,closed,2017-04-11 21:43:11,14.03,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,reopened,2017-04-12 13:43:33,960.37,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,1,2017-04-11 21:29:09,976.08,,1,,"b""b' I assume thar argument exists for compliance with BIP 22?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,2,2017-04-11 21:29:09,272.25,,1,,"b'b"" Indeed. We could perhaps trim down on the docs (since Core doesn\'t use it)"," but including the object shouldn\'t be made to error.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,3,2017-04-11 21:29:09,89.17,,1,,"b'b"" ok", pushed new version:  help text is removed sending a \'parameters\' object does not cause an error," but is ignored.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,4,2017-04-11 21:29:09,1140.45,,1,,"b'b"" I\'ve cherry-picked @TheBlueMatt\'s commit from #10488 into this PR since they\'re doing similar things. This PR now renames the unused arguments in prioritisetransaction and submitblock to dummy.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,5,2017-04-11 21:29:09,1220.03,,1,,"b""b' This went in through #10488"," IIRC? Anything left to do here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,6,2017-04-11 21:29:09,406.53,,1,,"b'b"" #10488 renamed the unused parameter in to  . This does the same for  .  (I cherry-picked the commit from #10488 into here because they were doing the same thing for two different RPCs so I thought it made sense to combine them into a single PR. Now that #10488 is merged I\'ve rebased this onto master so this PR only affects  ).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,7,2017-04-11 21:29:09,51.38,,1,,"b""b' utACK 0ef7de953f5eeb27651690871c18c4dc1ee4f83b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,closed,2017-06-24 13:15:43,1412.17,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10191,closed,-,-,-,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,opened,2017-04-12 16:08:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,title,2017-04-12 16:08:24,00:00,,1,,"b""b' [tests] Remove is_network_split from functional test framework'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,body,2017-04-12 16:08:24,00:00,1,,,"b'b"" The and functions in bitcoin test framework are problematic:  1. They make assumptions about the network topology (4 nodes", either connected linearly A-B-C-D or split A-B // C-D), and force these assumptions on *all* test cases. The and functions use  , which means that many test cases have to set this variable for no other reason than to make those functions work. Removing the requirement to set means many test cases don\'t need to override the method, which removes some 200 loc. and are only used by 2 test cases that\'s a lot of redundant code for the benefit of two test cases. 2. They\'re horribly inefficient. They both stop all 4 nodes, then restart. That takes ~10 seconds on my pc. 3. They may have unexpected side-effects. stop-starting removes ephemeral state on the node, and that behaviour may change between releases (eg mempool persistence).  This PR:  removes the variable makes and more generic by making fewer assumptions about the test network topology uses a new helper function in and  This requires #10143, which isn\'t yet merged  benefits:  1. removes ~200 lines of unnecessary test setup code 2. getchaintips and listsinceblock now run faster:  before: after: excluding the test shutdown time (which will be improved by #10082), the change is from 44s to 4.2s (10x speedup).  3. bitcoin test framework is now more generic," and can be extended later to automatically spin up different test network topologies.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,1,2017-04-12 16:08:24,0.48,,1,,"b""b' closing until #10143 is merged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,closed,2017-04-12 16:08:53,0.48,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,2,2017-04-12 16:08:24,1386.98,,1,,"b'b"" #10143 is now merged"," so rebasing and re-opening this.  @kallewoof you\'ve been working on listsinceblock recently. Do you mind reviewing this and letting me know what you think?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,reopened,2017-04-20 15:19:59,1391.1,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,3,2017-04-12 16:08:24,636.22,,,1,"b""b' ACK b9e9ef2415e3df508b0c0663502e60196bc37f0f  Nice"," -231 lines of code. :) The listsinceblock stuff looks fine to me. I ran tests and only briefly looked at code changes for other tests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,4,2017-04-12 16:08:24,721.72,,1,,"b""b' @fanquake Can you label this Tests?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,5,2017-04-12 16:08:24,212.53,,1,,"b'b"" Rebased and added a fixup commit to address the nits.  I\'m planning to squash these all down to a single commit before merge.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,6,2017-04-12 16:08:24,4.22,,1,,"b""b' ACK d64f739b3bc78e67212a252a690556bca8098745  edit: Tested.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,7,2017-04-12 16:08:24,651.82,,1,,"b""b' utACK d64f739b3bc78e67212a252a690556bca8098745'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,8,2017-04-12 16:08:24,195.55,,1,,"b""b' utACK d64f739"," please squash'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,9,2017-04-12 16:08:24,414.22,,,1,"b""b' Strong concept ACK. Going to review after squash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,10,2017-04-12 16:08:24,15.57,,1,,"b""b' Commits squashed. There should be no difference between url  and 20f67c90c001123ab5bca7e70382c5fe26362aa3. Compare url  and url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,11,2017-04-12 16:08:24,152.37,,1,,"b""b' Ok"," feel free to squash. Planning to merge this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,12,2017-04-12 16:08:24,12.37,,1,,"b'b"" squashed and rebased. I\'m currently running the extended test locally.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,13,2017-04-12 16:08:24,23.32,,,1,"b""b' extended tests all pass locally. This should be good for merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,closed,2017-05-02 18:07:16,167.28,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10198,closed,-,-,-,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,opened,2017-04-14 06:48:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,title,2017-04-14 06:48:01,00:00,,1,,"b""b' [wallet] Rescan abortability'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,body,2017-04-14 06:48:01,00:00,,1,,"b""b' The wallet command triggers a rescan of the entire block chain unless explicitly asked not to. This oftentimes is not intentional"," and there has so far not existed a way to abort a rescan in progress.  This PR adds support for a new RPC command which will prompt to stop scanning. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,1,2017-04-14 06:48:01,21.07,,,1,"b""b' Nice. Concept ACK. Have you tested this together with the GUI? Are you willing to expand this to the GUI?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,closed,2017-04-14 07:09:05,21.07,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,2,2017-04-14 06:48:01,0.3,,1,,"b""b' Accidentally closed. Reopening.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,reopened,2017-04-14 07:09:23,0.3,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,3,2017-04-14 06:48:01,2.57,,1,,"b'b"" @jonasschnelli I haven\'t tried with the GUI. Definitely willing to add that"," but wonder if that should be a separate PR?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,4,2017-04-14 06:48:01,1.08,,1,,"b""b' Can be separate if this PR does not break the GUI rescan additions (the popup window).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,5,2017-04-14 06:48:01,1.28,,1,,"b'b"" Gotcha. I will test the GUI. If it doesn\'t seem overly complex I\'ll add support there as well while at it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,6,2017-04-14 06:48:01,20.88,,1,,"b'b\' @jonasschnelli I tested out the GUI. The only way I could find importing keys was the Help  Adding an ""Abort"" button to the progress popup seems sensible", but I\\\'m going to declare that as a separate PR for now as I don\\\'t immediately see a neat solution to doing so.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,7,2017-04-14 06:48:01,1.18,,1,,"b""b' @kallewoof You can run bitcoin-qt with the -server flag"," and then issue command through bitcoin-cli or any other RPC client.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,8,2017-04-14 06:48:01,0.37,,,1,"b'b"" @kallewoof: Great. Yes. Let\'s fix this in an upcoming PR. I think you can also rescan by or  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,9,2017-04-14 06:48:01,5.1,,,1,"b""b' @sipa Ahh that let me try abortrescan from CLI while doing import from the GUI. Thanks!  @jonasschnelli GUI fully tested and appears functional.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,10,2017-04-14 06:48:01,142.25,,1,,"b""b' utACK 33b93f52b4452008075520239f4991440380be1a'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,11,2017-04-14 06:48:01,581.7,,1,,"b'b\' ""Wallet is being asked to abort rescan despite already pending rescan abort""  I would change ""abort"" to ""abortion""; I believe it may be more grammatically correct", and we need the word abortion in the core code.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,12,2017-04-14 06:48:01,773.25,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,13,2017-04-14 06:48:01,273.63,,,1,"b""b' nice! utACK after squash'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,14,2017-04-14 06:48:01,74.38,,1,,"b""b' Squashed.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,15,2017-04-14 06:48:01,748.42,,1,,"b'b\' Per url  I have replaced the RPC throws with  for ""did something"" / ""did nothing"" return values in  .  Unsquashed history: [1]url  \\xe2\\x86\\x92 [2]url  \\xe2\\x86\\x92 [3\\xe2\\x88\\x882]url  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,closed,2017-04-18 06:05:56,1376.55,0,13,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,16,2017-04-14 06:48:01,190.8,1,,,"b""b' This still needs (in follow-up PR): a test in mention in the release notes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,17,2017-04-14 06:48:01,982.25,,1,,"b""b' postumous utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10208,closed,-,-,-,1,14,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,opened,2017-04-14 07:46:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,title,2017-04-14 07:46:50,00:00,1,,,"b""b' Stalled shutdown'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,body,2017-04-14 07:46:50,00:00,1,,,"b""b' Not sure if this is a real issue but just had a stalled shutdown on a node:  The node is running the master at  from Wed Apr 5 11:29:19 2017.  As you can see"," it took Debug log:  The backtraces during the stalling are: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,1,2017-04-14 07:46:50,758.48,,1,,"b""b' This is probably caused by the same as url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,closed,2017-04-17 20:25:19,758.48,2,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,2,2017-04-14 07:46:50,705.58,,,1,"b""b' Yes. A blocking at is very likely the root cause. Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,3,2017-04-14 07:46:50,904.62,1,,,"b'b\' This is another case like #10140. You can see that it\\\'s stuck in the ""send()""", and definitely shouldn\\\'t be.  Seeing this again was enough to make me finally fix the long-standing bitcoin-config.h issue, which is (assuming this is the same issue) the root of this problem.  PR coming up.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,4,2017-04-14 07:46:50,584.52,,,1,"b""b' Thanks @theuni! Reopening.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,reopened,2017-04-19 09:00:02,754.72,3,1,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,5,2017-04-14 07:46:50,391.47,,1,,"b'b"" @jonasschnelli just ./ and ", and you should be good to go. I suspect that this issue may be causing you several problems," not just this one.  The PR above should fix this so that we don\'t end up in this situation again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,6,2017-04-14 07:46:50,319.68,,1,,"b""b' @jonasschnelli Is this still an issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,7,2017-04-14 07:46:50,36.25,,1,,"b""b' Was probably a local issue. Closing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,closed,2017-12-15 21:27:26,747.4,3,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10209,closed,-,-,-,3,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,opened,2017-04-23 17:46:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,title,2017-04-23 17:46:41,00:00,1,,,"b""b' Trivial: fix fee estimate write error log message'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,1,2017-04-23 17:46:41,3.85,,1,,"b""b' utACK 94807be8c6e196c01e9bfc0e44fb1604a6714d8e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,closed,2017-04-23 18:11:49,25.13,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,reopened,2017-04-23 18:12:36,0.78,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,2,2017-04-23 17:46:41,22.65,1,,,"b'b"" Well I guess you can\'t delete remote branches with a pull request open anymore"," sorry for closing / reopening""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,3,2017-04-23 17:46:41,12.27,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,4,2017-04-23 17:46:41,27.28,,1,,"b""b' utACK 94807be'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,5,2017-04-23 17:46:41,361.23,,1,,"b""b' utACK 94807be'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,closed,2017-04-25 11:28:55,1036.32,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10263,closed,-,-,-,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,opened,2017-04-30 05:26:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,title,2017-04-30 05:26:54,00:00,,1,,"b""b' Check if  is required for getentropy.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,body,2017-04-30 05:26:54,00:00,,1,,"b""b' This should check and include  if required for osx as mentioned [here]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,1,2017-04-30 05:26:54,104.18,,1,,"b""b' utACK (can someone on MacOSX 10.12+ test this please?)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,2,2017-04-30 05:26:54,418.33,,1,,"b""b' I tested this on MacOSX 10.12.4 myself"," should we have a runtime / fallback for getentropy like we do for the linux SYS_getrandom?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,3,2017-04-30 05:26:54,16.65,,1,,"b'b""  As I understand it", MacOSX guarantees that anything compiled with the MacOSX 10.12 SDK," which is necessary to get autotools to detect this in the first place doesn\'t work on earlier versions of the OS. In which case this would be unnecessary.  Feel free to correct me though @jonasschnelli @theuni.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,4,2017-04-30 05:26:54,243.52,,,1,"b'b"" @laanwj macOS uses weak imports for new symbols. They\'re fine to use as long as they\'re checked at runtime. This is how we\'re able to build with 10.11 (soon 10.12)"," but remain back-compat to 10.8. See an example of runtime handling at  .  getentropy does not exist in the 10.11 sdk. So I\'m assuming that it is a weak import introduced in 10.12. Meaning that this would (I believe) blow up at runtime on <= 10.11 when built with 10.12.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,5,2017-04-30 05:26:54,265.58,,,1,"b'b"" @theuni I\'m unsure whether your comment above means that this PR is fine or the opposite.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,6,2017-04-30 05:26:54,65.05,1,,,"b""b' @sipa Sorry for being unclear. Cautiously", the opposite. I believe that this PR would cause runtime crashes when building with SDK >= 10.12, and running on < 10.12. We definitely need someone to test that scenario before merge," as 10.12 will likely be the SDK we use for 0.15.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,7,2017-04-30 05:26:54,2.05,,1,,"b""b' @theuni so this means we need to do a runtime check and fallback like we do for SYS_getrandom?  Something like this maybe?  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,8,2017-04-30 05:26:54,19.33,,1,,"b""b' @jameshilliard Yes. According to the [apple docs]url  it would look something like:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,9,2017-04-30 05:26:54,101.82,,1,,"b'b"" I\'ve added a runtime fallback but I don\'t have an OSX system with anything older than 10.12 to test against.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,10,2017-04-30 05:26:54,25.52,,1,,"b""b' Apparently the [Solaris version of getentropy]url  is not safe to use directly for cryptographic functions unlike OpenBSD and OSX and getrandom should be used there instead.  > On Solaris the output of getentropy(2) is entropy and should not be used where randomness is needed"," in particular it must not be used where an IV or nonce is needed when calling a cryptographic operation.  It is intended only for seeding a user space RBG (Random Bit Generator) system. More specifically the data returned by getentropy(2) has not had the required FIPS 140-2 processing for the DRBG applied to it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,11,2017-04-30 05:26:54,3.37,,,1,"b'b""  Great"," that\'s what we\'re doing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,12,2017-04-30 05:26:54,255.22,,1,,"b'b"" I\'ll give it a test (build with 10.12 and run it own 10.8). Will report soon.  And I agree with @theuni (Using getentropy \\xe2\\x80\\x93 which way introduced in 10.12 would crash in < 10.12). Here\'s the 10.12 manpage for genentropy for the records: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,13,2017-04-30 05:26:54,228.83,,,1,"b'b""  Most of the OSes warn against using kernel entropy directly for cryptographic primitives. For example OpenBSD: The foremost reason for this is because of the performance characteristics of calling the kernel for every 256 bytes of random data that is needed", the functionality is not set up for high-bandwidth randomness.  Solaris\' reason is more interesting [ ] This seems to imply that the function returns lower-quality instead of higher-quality entropy?!  In any case we\'re fine we always combine the output with that of the OpenSSL random number generator," the OS entropy is added as an extra safety measure. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,14,2017-04-30 05:26:54,15.95,,1,,"b""b' This has a lot of discussion but not really (ut)ACKs. Is the current approach ok"," anything left to do here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,15,2017-04-30 05:26:54,85.0,,1,,"b""b' This is no longer relevant after #10855 (only use getentropy on openbsd)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,closed,2017-07-25 12:17:18,410.4,1,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,16,2017-04-30 05:26:54,177.02,,1,,"b'b"" @laanwj It seems #10855 would not result in getentropy being included on systems like OSX"," wouldn\'t this still be needed?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,17,2017-04-30 05:26:54,133.73,,1,,"b'b"" That\'s intentional", getentropy is only to be used on OpenBSD as there it\'s a system call. On OSX and Linux it\'s emulation of something at most so there it\'s not used.  Edit: hrmph, on so OSX 10.12 it\'s a system call too, so in principle it could be used," but you\'d have to ask @theuni.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,18,2017-04-30 05:26:54,11.77,,1,,"b""b'  Yeah"," that was the main purpose of this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,reopened,2017-07-26 17:43:01,325.72,1,15,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,19,2017-04-30 05:26:54,5.78,,1,,"b""b' Reopening then", I had understood from the title that it just adds a check," which would no longer be relevant when the function is only used on obsd. Needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,20,2017-04-30 05:26:54,9.57,,,1,"b'b""  Nah", FIPS 140-2 processing means standard mandated low qualityness. :P  Basically they do post processing to make sure they don\'t return all zeros or whatnot, which means (negligibly) lower entropy.  The original motivation is to make certain kinds of hardware RNG failures fail secure instead of fail to making your keys all zeros; but then people go cargo-cult applying these tests on far end of cryptographic whitening, where they make no sense.  In our case we use it to feed our own entropy pool," so that processing isn\'t useful for us (to the extent that it\'s useful anywhere).  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,21,2017-04-30 05:26:54,1130.13,,,1,"b'b"" I\'ve modified this to check for OSX explicitly. Should I try and make this more universal or is that good enough for now?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,22,2017-04-30 05:26:54,151.5,,,1,"b'b"" I think this is ok as-is. It\'d be nice to add a little refactor on top (later) to: early-return on success"," and have a single fall-back for / Move detection out to a separate function so that we can log what\'s in use.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,23,2017-04-30 05:26:54,8.62,,1,,"b'b"" utACK ee2d10ad0c0e04d0b9da4535a6fff265ac2501e5. I\'m a little paranoid that an overly clever linker might try to optimize this check out of lto builds"," but the crash would be obvious in that case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,closed,2017-08-07 15:25:28,1302.45,1,17,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10301,closed,-,-,-,1,17,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,opened,2017-05-08 14:08:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,title,2017-05-08 14:08:41,00:00,,1,,"b""b' Allow setting nMinimumChainWork on command line'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,body,2017-05-08 14:08:41,00:00,,1,,"b""b' As discussed briefly here: url This adds a hidden command line option for setting  ", which allows us to test this parameter in our functional tests, as well as allowing for niche use cases like syncing nodes that are otherwise disconnected from the network.  See also #10345," which proposes a new use of  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,1,2017-05-08 14:08:41,434.07,,1,,"b""b' Yea", sure," conceptack as a hidden setting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,2,2017-05-08 14:08:41,876.42,,1,,"b'b"" I just realized this doesn\'t quite work cleanly with #10345; closing for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,closed,2017-05-09 11:59:10,1310.48,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,reopened,2017-06-08 18:50:29,411.32,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,3,2017-05-08 14:08:41,582.9,,1,,"b'b\' This needed a rebase.  @jnewbery Thanks for the review.  I addressed or responded to most of your comments.  I think the only thing I didn\\\'t do was require that the command line value start with ""0x""", mostly because I struggled to (a) figure out how to concisely explain that to the user in the help message," and (b) I noticed that GetHex() already doesn\\\'t print a ""0x"""," so it would be extra confusing that the defaults don\\\'t match the specification if we required ""0x."" \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,4,2017-05-08 14:08:41,1229.18,,,1,"b'b"" tested ACK url  Very nice work with the test coverage for the new util function.  As for not requiring a leading  "," I think that\'s fine. The only minor problem I could see is someone entering a decimal number and the parser interpreting it as hex. That\'s now mitigated by: the help text saying the number should be hex the log message always printing out the minimum chain work in hex""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,5,2017-05-08 14:08:41,1109.12,1,,,"b'b"" Concept ACK. My only remark on this is that it\'s unfortunate that after all the work we did to move things into a consensus parameters structure and pass it around"," this moves back to a global :( ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,6,2017-05-08 14:08:41,302.47,,1,,"b""b'  I agree -any suggestions for a better paradigm for user-configurable"," chain-specific parameters?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,7,2017-05-08 14:08:41,52.58,,1,,"b""b' Perhaps this is too late for 0.15"," but just wanted to mention that 0.15 will include another usage of nMinimumChainWork (#10345) that advanced users may sometimes want to work around.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,8,2017-05-08 14:08:41,700.58,,1,,"b'b""  I wish we\'d left some of the chain parameters mutable", at least during the init process, so they don\'t have to migrate back to globals to override their value. Yes," needs rebase though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,9,2017-05-08 14:08:41,658.28,,1,,"b'b"" Rebased.  @laanwj I\'d prefer to not refactor the chain parameters here"," and leave that work for a future PR -it seems that there are other PRs in progress (eg #8994) separately addressing how that code is organized; let me know if you disagree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,10,2017-05-08 14:08:41,153.27,,1,,b'b\' @sdaftuar Sure, I was just expressing my sadness there that the idea ofwell-encapsulated chain parameters didn\\\'t work out. I certainly did notmean it as a blocker. On Aug 31, 2017 10:14 AM,"Suhas Daftuar""  wrote:>\''
bitcoin	10357	closed	11	meshcollider	2017-05-08 14:08:41	482.92		+1		b""b' utACK url '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,12,2017-05-08 14:08:41,784.73,1,,,"b'b"" @jnewbery Mostly addressed your nits I think (just renamed the confusing variable to  ", and added a comment).  Previous version is here for comparison: url I think you\'re totally right that we could simplify this (and possibly other) tests by just adding a way to know if a node is in IBD.  I\'d like to do that, but I\'m not sure it makes sense to complicate this PR with discussion over how that information should be made available.  Eg it\'s not clear to me that the notion of being in IBD is worth exposing to the casual user, versus a hidden rpc call or something, since the definition has changed over time," and may continue to change in the future.  But I still do agree that at least for testing purposes it would be far simpler to expose the field somehow...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,13,2017-05-08 14:08:41,134.85,,1,,"b""b' Actually this needed a rebase due to the test framework changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,14,2017-05-08 14:08:41,1285.48,,1,,"b'b""  Yes", I think it makes sense to discuss (there\'s arguments for and against it re: proper testing)," but let\'s not extend the scope of this PR with it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,15,2017-05-08 14:08:41,21.57,,1,,"b""b' utACK eac64bb'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,closed,2017-09-06 17:01:45,1331.27,2,14,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,16,2017-05-08 14:08:41,226.82,,1,,"b""b' post merge utACK eac64bb7a3b6aba747403b23b3b1d3609843f8db'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,17,2017-05-08 14:08:41,0.88,,1,,"b""b' Tagging for backport"," as the 0.15.0.2 tests rely on this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10357,closed,-,-,-,2,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,opened,2017-05-08 20:53:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,title,2017-05-08 20:53:31,00:00,,,1,"b""b' Feature request: Make Bitcoin libFuzzer-friendly and consider integration into the OSS-Fuzz project'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,body,2017-05-08 20:53:31,00:00,,,1,"b""b' Making Bitcoin ready for inclusion into the project should be fairly straightforward: * Have a look at [test_bitcoin_]url  and read the [Bitcoin fuzzing documentation]url  * Make  -friendly by implementing  . See the [  documentation for details]url  * Create the three configuration files  "," and as described in the [  new project guide]url  and submit an pull request.  Today [Google announced that they offer $1k to $20k in rewards for properly integrated project]url Have a nice vacation and enjoy the warm fuzzy feeling of having helped secure the Bitcoin network! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,1,2017-05-08 20:53:31,15.03,,1,,"b'b"" If we wanted to do this we\'d have to get them to exempt us from their usual disclosure policies their timelines for disclosure are absurdly agressive to risk the safety of users rather significantly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,2,2017-05-08 20:53:31,18.77,,,1,"b""b' @TheBlueMatt Are you referring to the 90-day deadline?  I assume that is currently being actively fuzzed by both black hats and white hats"," so even in the presence of a strict 90-day deadline I think that the net effect of adding  /  to the mix would simply be an increase the probability that the next critical bug is found by white hats (in the form of core team members).  Think of it as adding essentially free hash rate to the good guys :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,3,2017-05-08 20:53:31,1.42,,1,,"b""b' @practicalswift more fuzzing is good"," but we do *not* publicly announce bugs even after they have been fixed for some time. IIRC the OSS-Fuzz shit announces bugs a week or two after a public fix.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,4,2017-05-08 20:53:31,13.8,,,1,"b""b' @TheBlueMatt These are the [bug disclosure guidelines]url  * **Deadline.** After notifying project authors", we will open reported issues to the public in 90 days, or 30 days after the fix is released (whichever comes earlier). * **Weekends and holidays.** If a deadline is due to expire on a weekend, the deadline will be moved to the next normal work day. * **Grace period.** We have a 14-day grace period. If a 90-day deadline expires but the upstream engineers let us know before the deadline that a patch is scheduled for release on a specific day within 14 days following the deadline," the public disclosure will be delayed until the availability of the patch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,5,2017-05-08 20:53:31,6.75,,1,,"b'b"" I think this discussion is premature.  At this point", our fuzzing infrastructure is nearly worthless. It\'s a proof of concept that only tests a tiny part of the  routines. I\'m all for improving that, but the order should be: * Incorporate meaningful fuzzing tests (for example, including things like validating blocks received by a fuzzer with the cryptographically hard parts disabled). * Add buildsystem support for building against libfuzzer. This is useful independently from the OSS-fuzz project, as AFL and libfuzzer tend to have different strategies," and may find different problems. * Then we can have a discussion about submitting to OSS-Fuzz and whether their policy is acceptable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,6,2017-05-08 20:53:31,4.1,,1,,"b""b' @practicalswift yes"," announcing bugs with exploit guidelines 30 days after a fix is released would put a ton of our users at massive risk.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,7,2017-05-08 20:53:31,1385.4,,1,,"b'b""  Sure. However it\'s still a hell of a lot better than being willfully ignorant of vulnerabilities", that could be independently found anyway. But yeah, it\'d be great if they extended that deadline for bitcoin but if not," I don\'t see the big deal. And the damages of public disclosure can be heavily mitigated by a few days prior widely publizing the need to update.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,8,2017-05-08 20:53:31,9.45,,1,,"b'b"" @RHavar I\'m not advocating that we dont run fuzzing", as sipa pointed out, we have a framework for it that does get a bunch of CPU hours (despite it not being so useful)," but the nature of Bitcoin is somewhat different than your standard software (and the OSS-Fuzz guys seem to have a very -provider-centric view of the OSS world).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,9,2017-05-08 20:53:31,718.2,,,1,"b'b"" FWIW"," I\'ve been running some  -based bitcoin fuzzing for a while using the code in #10440 so it should be ready for review :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,10,2017-05-08 20:53:31,688.92,,1,,"b'b""   currently supports fuzz testing all the deserialization routines used in with three exceptions. These three are missing: * deserialization * deserialization * deserialization  I\'ve submitted PR #10409 which adds support for fuzzing these three as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,11,2017-05-08 20:53:31,1328.12,,1,,"b""b'  The pr is merged"," so closing this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,closed,2018-12-25 18:43:29,1309.97,0,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,12,2017-05-08 20:53:31,312.6,,1,,"b""b' Fuzzing these 3 deserializations is not the topic of this issue though. It is not resolved at all and not much has moved forward in 2018 on the fuzzing front within this repository.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,13,2017-05-08 20:53:31,1051.18,,,1,"b""b' Make the fuzzers nice and libFuzzer-friendly is separate from integration into OSS-Fuzz and should not be mixed up in the same issue. If there is anything left to discuss or track"," please open an issue (or better a pull request to improve the fuzzers).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,14,2017-05-08 20:53:31,93.28,,,1,"b'b"" This issue is perfectly fine and it hasn\'t been resolved"," so please reopen this one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,reopened,2018-12-27 19:25:56,42.45,0,9,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,15,2017-05-08 20:53:31,857.02,,1,,"b""b' Somewhat related: The Solidity compiler is now continuously fuzzed with OSS-Fuzz url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,16,2017-05-08 20:53:31,1065.38,1,,,"b'b"" somewhat on topic. I just started to familiarise myself with the fuzzing framework. It seems quite odd to me to have a *single* fuzzing binary and input corpus.  Any modern fuzzer (at least libfuzzer) is taking code coverage into account when generating new input. By joining all APIs to be fuzzed into a single call", and use the first 32 bit to switch between them, I\'m sure we make genetic algorithm looking for inputs less efficient.  As far as I can tell, it would be a lot more efficient to use *separate* binaries for each API to be fuzzed," *and* to use a separate corpus for each of them. It doesn\'t make much sense to test all inputs against all APIs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,17,2017-05-08 20:53:31,1084.15,,,1,"b'b"" @arvidn We\'re no longer using a single binary. This was fixed by @MarcoFalke in #15043 :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,18,2017-05-08 20:53:31,1085.85,,,1,"b""b' @arvidn Out of curiosity: what are your fuzzing plans? Are you considering adding Bitcoin Core to OSS-Fuzz? That would be truly awesome!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,19,2017-05-08 20:53:31,1112.8,,1,,"b'b"" FYI", the back-end to OSS-Fuzz has been released yesterday, so it would now be possible for the Bitcoin project to (sorta) self-host it. There\'s still relatively tight integration with Google services, but they can be replaced over time: url Directly using OSS-Fuzz likely is not going to happen," since Bitcoin maintainers disagree with that project\'s disclosure policy.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,20,2017-05-08 20:53:31,1141.83,,1,,"b'b"" @practicalswift I\'m working on transaction compression"," specifically for FIBRE. So I\'m looking to add a fuzzer for that code. It may be some ways out to be up-streamed.  But it seems I should rebase on top of latest bitcoin core""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,21,2017-05-08 20:53:31,1158.8,,,1,"b'b"" @MarkusTeufelberger I\'m not sure that the consensus opinion is that OSS-Fuzz is a bad idea. @TheBlueMatt raised his concerns while @sipa thought the discussion was premature.  Personally I\'m strongly in favour:  Given how many CPU hours that have already been put into fuzzing Core it is highly unlikely that OSS-Fuzz will find any _existing issues_. However it will make sure we catch any _newly introduced issues_ in a timely manner before they are included in a release and risk being exploited by adversaries (who can safely be assumed to be fuzzing heavily without disclosing their findings at all!).  Please point out any flaws in my thinking here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,22,2017-05-08 20:53:31,1173.47,,,1,"b'b"" @arvidn That\'s excellent! Looking forward to seeing it upstreamed!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,23,2017-05-08 20:53:31,935.35,,,1,"b'b"" Hi @arvidn", @practicalswift and @MarcoFalke ,  I\'m the founder of [Fuzzit]url  We are an OSSFuzz like solution though we don\'t have disclosure policies and you make your own rules.  of course we are free for open-source.  I\'ll be happy to contribute a pull-request.  Cheers," Yevgeny""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,24,2017-05-08 20:53:31,974.63,,,1,"b""b' So you are a proprietary platform from the middle east in alpha with no public documentation that promises to keep bugs found in Bitcoin code secret?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,25,2017-05-08 20:53:31,980.92,,,1,"b""b' Hi @MarcoFalke", It was an offer. If the best thing for you is having an onhosted solution because of the high sensitivity of the project is your way to go then you can just say it.  Cheers," Yevgeny'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,26,2017-05-08 20:53:31,987.47,,1,,"b""b' I think we are primarily lacking contributions for meaningful fuzz targets", not necessarily the resources to run them.  I do appreciate the offer to fuzz for free for open-source. And complaining about the trustworthiness of a platform might not help that much," because eventually any (potentially shady) person can fork the source code and set up their own account with whatever fuzz service they want to.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,27,2017-05-08 20:53:31,1013.55,,,1,"b'b"" @MarcoFalke Thanks for the response. We have quite an experience with writing fuzz targets. I can try and add a pull-request for a meaningful fuzz target. I don\'t know if this is the right place or you are the right person but I\'ll be happy for a retweet of-course after the contribution is approved&merged. This will help a small startup like ours.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10364,open,-,-,-,1,13,15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,opened,2017-05-11 02:13:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,title,2017-05-11 02:13:32,00:00,,1,,"b'b"" [WIP] [wallet] Optional \'-avoidreuse\' flag which defaults to not reusing addresses in sends""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,body,2017-05-11 02:13:32,00:00,1,,,b'b\' (Note: putting this on hold until #12257 is merged.)  #10065 brings up a privacy issue where a user can send a bunch of near-dust transactions to an address, which would be picked up by the coin select code when the owner funded transactions, connecting multiple transactions and addresses to the same user.  This adds a (by default turned off) flag  . When enabled," the wallet will mark any addresses that were used to fund a transaction as ""dirty"" and will avoid using them in funding additional transactions"," unless an ""allow dirty"" flag is set.  It also adds support to allow dirty addresses in  . More tweaks to other RPC commands is necessary but I wanted to keep the PR as small as possible.  Retroactive flagging of dirty addresses can be done by rescanning the chain.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,1,2017-05-11 02:13:32,35.43,1,,,"b'b"" IMO this isn\'t complete unless incoming transactions to dirty addresses (even before being used!) are hidden as well (or at least flagged in some visible manner).  Also"," shouldn\'t rescanning be sufficient?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,2,2017-05-11 02:13:32,3.83,1,,,b'b\' @luke-jr: Maybe I am misunderstanding you, but incoming transactions are irrelevant. The only thing that matters is when you spend from an address. Each time you do, that address is marked dirty and any UTXOs pointing to it are automatically considered dirty in this implementation. Am I missing a case? Oops yes, rescanning is sufficient. Updated OP," thanks.  Edit: my definition of address reuse has always been ""spending from the same address 2+ times"""," whereas @luke-jr\\\'s definition seems to be ""any UTXOs which send to an address that has already been sent to"". Both definitions would solve the issue in question"," but the latter would mean people could no longer say ""to support my work send BTC to [static address]"" if they wished to use this feature. The question ultimately is ""which one of the two definitions makes the most sense?"" \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,3,2017-05-11 02:13:32,436.92,1,,,"b'b"" I support the goal", but:  If an address is paid 10 btc then 0.0001 btc  and then a transaction spends the latter, A would be dirty and the 10 BTC are stuck.  That seems sub-optimal.  The best idea I had to deal with that previously is that whenever you spend from A you make an effort to spend all payments to A or at least all non-dust payments to A.  Then the only time you get dirty funds is when someone pays a non-negligible amount to an address after you\'ve already spent to it. If something is going to cause transactions to fail," we probably will need another kind of balance display to make the behavior explicable.  Independently from this (but also useful for it) we probably should have an icon in the transaction list for reused addresses. (Trefoil made of arrows? :P ) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,4,2017-05-11 02:13:32,219.73,,,1,b'b\' You are able to spend by using the allowdirty flag in sendtoaddress, and you can always make a raw transaction yourself. The intention of this is to give expert users a way to plug the gaping security hole that exists in the system -to make it intuitive and wonderful for the average user is not an aspiration at this point (as mentioned, in particular RPC commands need some work before this could ever be made a default-on feature). The solutions you present are all solutions an expert user could make use of with this implementation. It would simply stop their clients from shooting them (privacy wise) in the foot automatically.  Edit: Re-reading," I realize you are talking about coin select algorithm. That\\\'s an interesting idea. It would make sense to consider all ""coins"" going to A as a single coin for as long as you haven\\\'t spent from A yet. That way you select on an all-or-nothing basis (perhaps excluding dust).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,5,2017-05-11 02:13:32,730.83,,,1,"b""b' Rebased (and code became slightly more clean thanks to new coin control being present).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,6,2017-05-11 02:13:32,1384.02,,,1,"b""b' @promag Thanks for the review! Fixed the default usage issue.  Edit: and the commit message dots.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,closed,2018-03-15 10:28:02,494.5,4,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,reopened,2018-07-24 15:17:53,289.85,4,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,7,2017-05-11 02:13:32,1067.78,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,closed,2018-07-25 06:59:46,941.88,4,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10386,closed,-,-,-,4,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,opened,2017-05-19 04:02:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,title,2017-05-19 04:02:42,00:00,,1,,"b""b' -bip148 option'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,body,2017-05-19 04:02:42,00:00,,1,,"b""b' Disabled by default"," this optional parameter allows a user to choose bip148 enforcement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,1,2017-05-19 04:02:42,475.97,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,2,2017-05-19 04:02:42,19.4,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,3,2017-05-19 04:02:42,298.07,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,4,2017-05-19 04:02:42,77.33,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,5,2017-05-19 04:02:42,775.02,,1,,"b""b' Does this mean that blocks from miners using Bitcoin Core generated block templates will be rejected by the same Bitcoin Core version running on users machines with this option? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,6,2017-05-19 04:02:42,208.35,,1,,"b'b"" @paveljanik No"," since they signal segwit by default they will be accepted as long as they don\'t build on top of non-signalling blocks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,7,2017-05-19 04:02:42,456.35,,,1,"b""b' Thank you for submitting this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,8,2017-05-19 04:02:42,277.42,,1,,"b""b' Has someone done a risk analysis on the use of this by a minority?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,9,2017-05-19 04:02:42,274.23,,,1,"b""b' I found this to be a good summary of the risks of various fork scenarios: url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,10,2017-05-19 04:02:42,51.4,1,,,"b""b' If this optional parameter is permitted"," then hard fork optional parameters such as -bip102 should be permitted as well. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,11,2017-05-19 04:02:42,69.53,,1,,"b""b' @jgarzik This is still a soft fork", the difference is just how it is activated. Activation is done by economic majority, the reason one may want to use an optional parameter is because measuring if the network has reached a suitable economic majority is not as straight forward as measuring signalling blocks," one should activate the flag once they are confident a suitable percentage of the economy intends to activate the flag. The fork is convergent as long as there is an economic majority or miner majority backing it since miners ultimately mine the most profitable chain. A hard fork like BIP102 however is never convergent.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,12,2017-05-19 04:02:42,172.92,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,13,2017-05-19 04:02:42,69.05,1,,,"b""b' If hash rate support is less than 50%", this option causes a hard fork a contentious minority chain hard fork to be clear. This is risky and should not be allowed in the official client. If you do allow this, you will need to allow other," less risky (only activate with 75% or more hash rate) hard fork proposals in options form as well! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,14,2017-05-19 04:02:42,10.68,1,,,"b'b"" @chaosgrid no it doesn\'t"," it causes a chain split in that case. If it becomes minority chain at the start it can still potentially reorg the legacy chain if miners jump ship. A hard fork on the other hand splits and users or miners running legacy software pre-HF will never follow the HF\'d chain no matter how much hash power it has.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,15,2017-05-19 04:02:42,102.08,,1,,"b""b' Concept ACK for soft forks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,16,2017-05-19 04:02:42,0.52,,1,,"b""b' Concept ACK  @chaosgrid It should be noted that there is already precedence for giving users the ability to manually enable options that have the potential to cause a chain split.  Using the command", for example," would also technically be a soft-fork that can be activated in a similar way to this proposal.  These options are safe to include because they are off by default.  No user will accidentally be out of consensus.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,17,2017-05-19 04:02:42,50.8,,1,,"b""b' @forkwar All users that change default options without understanding what they do are at risk of being on another chain.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,closed,2017-05-21 12:36:23,513.68,3,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,reopened,2017-05-21 12:36:42,0.32,3,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,18,2017-05-19 04:02:42,20.63,,1,,"b'b"" Shouldn\'t there be mechanisms in place to ensure direct connectivity to other bip148 nodes? Otherwise the network could become partitioned on Aug 1st. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,19,2017-05-19 04:02:42,1.08,,1,,b'b\' Concept ACK, but the description should include a very strong warning of the risks involved. There is a lot of misinformation about bip148 (from both sides), including a lot of people being told it\\\'s the lower risk option. Without an appropriate warning I feel many people will be misled. In fact," I\\\'d strongly prefer the flag to be called  ""-very-dangerous-bip148"" or something similar (which can also set precedent for other controversial like flags). If it is merged in without a similarly alarming prefix", it\\\'ll be taken as an endorsement. (e.g. from the reddit thread that is brigading this issue:) >  This is important because many businesses support the UASF cause, however they only trust Core code. If it is in Core code, prepare for many businesses to support it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,20,2017-05-19 04:02:42,2.62,1,,,"b'b"" Most previous arguments here against UASF are based on false assumptions. However UASF is most likely going to be hugely disruptive. I expect wallets", exchanges and companies not implementing sufficient protections for chainsplit. Not even Core is working on it.  However it seems like the ginny is out of the bottle, the disruption is unavoidable, it\'s hard to tell how big it will be. I was wondering if having a temporary (and already unavoidable) UASF disruption is a bigger risk, than crippling the Bitcoin development and the scaling of Bitcoin?  While the answer to that question can be vague," but more importantly we should decide **when does not merging UASF by default becomes a bigger systemic risk than merging it?**  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,21,2017-05-19 04:02:42,5.77,1,,,"b""b' Concept NACK.  This has high risk of leading to a consensus break and a chainsplit"," and is a dangerous parameter as such.  Not sure how all the usual suspects I see who generally argue against such are concept ACKing this... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,22,2017-05-19 04:02:42,9.15,1,,,"b'b""  I am in general against bip148 for the reasons you state", however I don\'t have  problem with the idea of adding support as an option.  I guess it comes down to if you believe bitcoin core should allow people to choose dangerous options without forcing them to recompile.  Personally I think it should as long as it\'s very clear about the dangers and there isn\'t excessive maintenance cost in including it. However it\'s worth pointing out that this style of change is potentially a lot more disruptive than a simple controversial hard fork.  (Not only may it lead to a prolonged chain split," it may lead to a wipe out of the original chain causing millions of dollars of loses)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,23,2017-05-19 04:02:42,30.9,1,,,"b""b' @pdaian   Please leave the personal attacks out of GitHub.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,24,2017-05-19 04:02:42,10.9,,,1,"b""b' @rhavar 100% agree here. If it becomes clear that an economic majority has not been achieved", it is trivial for users to remove this option, therefore there is much less risk.  But still, users should know this.  Likewise, once a large portion of the network is already running this option," it should become the default.... as it would then be the much safer choice for users.  I will add a warning today to the description explaining this.  Any suggestions for verbiage would be appreciated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,25,2017-05-19 04:02:42,45.67,,,1,"b""b' This is not the place to debate the merits (or not) of BIP148. I kindly remind people to keep their comments to technical evaluation of the code and potential safety fixes"," not game theoretic arguments about economic majorities. That discussion is important but this is not the place for it. If discussion gets out of hand this PR will be locked and nobody wants that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,26,2017-05-19 04:02:42,18.12,,,1,"b""b'   Agreed.  I think by that same logic", an option to remove enforcement of the blocksize limit is an obvious addition.  I will prepare a separate PR.  Thanks for discussion," all.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,27,2017-05-19 04:02:42,7.12,,1,,"b'b"" Can someone actually take a quick glance at the code and make sure I didn\'t fat finger something.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,28,2017-05-19 04:02:42,16.03,1,,,"b""b' Disgusting'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,29,2017-05-19 04:02:42,97.28,1,,,"b""b' NACK  This can be implemented on top of and RPC  "," and useragent change without this dangerous modification. Any volunteer to contribute this solution?  This solution will also allow older clients to use BIP148 like solution without updating to the newest not yet released Bitcoin Core client.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,30,2017-05-19 04:02:42,4.0,,1,,"b""b' @paveljanik This is an acceptance change for users to be able to enforce soft acceptance conditions of blocks in accordance to BIP148 . There is no point to accept a block"," notify it and then invalidate it.  For uacomment signals see url  If you would like to contribute a script for using blocknotify events and running invalidateblock requests according to bip148 please start a new pull request or check with the UASF repository and their contributed scripts section.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,31,2017-05-19 04:02:42,45.43,,,1,"b""b' @paveljanik It would be nice if Bitcoin had a s plug-in architecture not for consensus changes but certainly for RPC handling"," etc. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,32,2017-05-19 04:02:42,25.25,,1,,"b""b' @earonesty Any particular reason why this have been PRed against 0.14? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,33,2017-05-19 04:02:42,4.6,1,,,"b""b' Concept ACK  @jgarzik"," there is no equivalence between this commandline flag and a flag for hard fork changes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,34,2017-05-19 04:02:42,2.17,,1,,"b'b"" @jgarzik If you\'re going to comment on this", would you mind answering the question we all have about your apparent conflict of interest with the fact that your company owns anti-privacy coin deanonymization tech that would be made much less valuable if segwit activates and Lightning becomes widely used?  In particular," what are you plans for that technology?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,35,2017-05-19 04:02:42,91.42,,,1,"b""b' @petertodd This is not the place to debate the merits (or not) of who owns what technology. I kindly remind people to keep their comments to technical evaluation of the code and potential safety fixes"," not game theoretic arguments about businesses. That discussion is important but this is not the place for it. If discussion gets out of hand this PR will be locked and nobody wants that. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,36,2017-05-19 04:02:42,67.93,,,1,"b'b"" @jgarzik It\'s good manners and helpful to productive discussion when participants properly disclose potential conflicts of interest. You have one", and so far have not alleviated concerns about that conflict of interest.  That disclosure doesn\'t have to happen here," but it does need to happen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,37,2017-05-19 04:02:42,12.18,,1,,"b""b' I concur with this approach as proposed by @earonesty and others.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,38,2017-05-19 04:02:42,9.8,,1,,"b""b' @rhavar Maybe just move everything into the experimental section?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,39,2017-05-19 04:02:42,9.87,,1,,b'b\'  I don\\\'t really have any say," but imo ""experimental"" has the wrong connotations. What about or something? I think it needs to be obvious that it\\\'s not an endorsement", just the freedom to do something that is potentially harmful without forcing users to have to compile their own copy (or switch to another implementation of bitcoin).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,40,2017-05-19 04:02:42,2.1,1,,,"b'b\' @RHavar I agree with longer option containing the word ""dangerous"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,41,2017-05-19 04:02:42,0.58,,1,,b'b\' Rather than put some weird warning strings in the flag," perhaps have an ""enable delta consensus"" flag which needs to also be present", otherwise, just using the BIP148 flag fails?  enable-delta-consensus eBIP148\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,42,2017-05-19 04:02:42,3.25,,1,,"b'b"" @GratefulTony I was thinking about it too. I don\'t have preference here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,43,2017-05-19 04:02:42,50.1,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,44,2017-05-19 04:02:42,30.15,1,,,"b'b"" @sneurlax @jameshilliard @petertodd . It does not matter if the fork is \'hard\' or \'soft\'"," this is a very contentious fork with only limited miner support and will almost certainly result in a chain split. As such this change should not be supported. It is dangerous and completely lacks miner and community support.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,45,2017-05-19 04:02:42,13.83,,1,,"b""b' @AllanDoensen This fork does not require miner majority support to be convergent", it only requires economic majority due to the incentive structure of mining. The flag merely provides a way to activate the fork once it is clear that an economic majority will support it," this is explained in more detail [here]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,46,2017-05-19 04:02:42,24.93,,1,,"b'b"" @jameshilliard the way I read the code is the there is no test for \'an economic majority\' at all. So this flag provides a means of activating the  economic majority needed. Or am I reading the code incorrectly? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,47,2017-05-19 04:02:42,8.3,1,,,"b""b' @AllanDoensen Economic majority signalling is something that is difficulty to measure automatically like miner signalling"," hence the need for a manual flag. If it ends up being unclear if there is an economic majority backing BIP148 one can stop transaction activity at the time of BIP148 activation and watch the markets to confirm that the BIP148 enforcing chain has an economic majority backing it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,48,2017-05-19 04:02:42,5.03,1,,,"b'b"" Correct me if I\'m wrong", but in case of long coexistance of two chains, and then BIP148 chain overpowering the old one," wouldn\'t it cause very long reorg? This could potentially cause disaster grater in size than MtGox""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,49,2017-05-19 04:02:42,1.18,1,,,"b""b' @jameshilliard back to the code. So if we pass our date and segwit is not active"," then someone fires up a 10 thousand nodes on a VM and brings down the bitcoin network. This is an attack vector that has not been discussed. This is not a good solution to the problem. Again I repeat this change is dangerous and completely lacks community and miner support. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,50,2017-05-19 04:02:42,0.58,,1,,"b'b"" The warning label on cigarettes never really scared me. I\'m okay with the word dangerous", except for the fact that there\'s some sort of cool factor that we might be promoting.  Experimental is more in keeping with the nature of the flag,  since it\'s experimental.  Indeed since user support is growing quickly with at least one minor exchange on board," it might be more dangerous not to.  Maybe it\'s better not to presume an outcome""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,51,2017-05-19 04:02:42,6.07,1,,,"b'b"" @mcgravier That\'s actually a big reason why it\'s unlikely there will be a long coexistance of two chains", it\'s unlikely people will risk transacting on a chain that has a high probability of having its history wiped out, which is something only the non-BIP148 chain would be at risk of.  @AllanDoensen Sounds like you\'re referring to an eclipse attack, BIP148 has nothing to do with node counts," it\'s based on economic support.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,52,2017-05-19 04:02:42,5.67,1,,,"b'b"" @jameshilliard back to the code. This change allows for an \'eclipse\' style attack as you have suggested. As such it does have to do with node counts. Again I repeat this change is dangerous and completely lacks community and miner support.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,53,2017-05-19 04:02:42,2.08,,,1,b'b\'  I believe," just ""unlikely"" isn\\\'t good enough for a 30bln dollar market.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,54,2017-05-19 04:02:42,1.43,1,,,"b'b"" @AllanDoensen No", it does not do an eclipse attack like you seem to have incorrectly assumed. Bitcoin is already quite resistant to widespread eclipse attacks due mitigation measures in how peering is handled," they aren\'t really a major concern at this time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,55,2017-05-19 04:02:42,6.87,,1,,"b""b' @jameshilliard I do not believe I have incorrectly assumed anything with respect to this code. Motherhood statements will only get you so far"," maybe you should spend more time writing & reviewing the actual code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,56,2017-05-19 04:02:42,12.0,1,,,"b'b\' @AllanDoensen The node count relation is explained under the ""Does node count determine activation?"" section [here]url  already. I\\\'m not sure where you are seeing eclipse attack code as absolute node counts aren\\\'t really relevant to activation of BIP148. I\\\'d suggest you read through the FAQ as it explains these issues already in detail.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,57,2017-05-19 04:02:42,1.4,1,,,b'b\' @earonesty >Indeed since user support is growing quickly with at least one minor exchange on board, it might be more dangerous not to. Maybe it\\\'s better not to presume an outcome  Currently," 40% of hash rate is signaling for emergent consensus block size control. Roughly 10% of nodes signal as well. ""Maybe it\\\'s better not to presume an outcome"" and also add an option for emergent-consensus block size or the revised BIP100?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,58,2017-05-19 04:02:42,7.68,,,1,"b""b' unlikely here is nearly impossible. like order of  1/2e256.  all Bitcoin basis is on  such value of probability theory.  we have bip149 in 2017 and bip148 in July 2018. segwit will activate before 2018aug"," no matter of hash rate power.  segwit is favorite of market (see Litecoin).  uasf chain will win with full confidence. old chain or bu chain will be of Little economic value.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,59,2017-05-19 04:02:42,2.15,,1,,"b""b' in one word"," segwit unlikely fail. just like btc privkey unlikely be guessed. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,60,2017-05-19 04:02:42,3.47,,1,,"b'b"" @earonesty your code itself looks good. I mean no disrespect", but take issue with the concept not the implementation. As for \'dangerous\' or \'experimental\', I find it somewhat hypocritical that there is support for this, but no support for doing similar for bip100/bip102 or EC which are arguably just as dangerous. Thus I would think it would be better if there was a general means of signalling support for bips (including segwit) rather then just the odd implementation for one off cases such as this. So I would think that your code should be made generic in parts to support a range of signalling for BIPS. I also think that as there is a \'start date\' for this," there should also be an \'end date\' so that if it fails it is not active in the codebase forever.  Would you consider an end date of 2 months(?) as a change to the code? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,61,2017-05-19 04:02:42,29.55,,,1,"b""b' @jameshilliard I know you are referencing a pretty document with nice  that is not what this code & this PR says. Please read the code and comment on the code rather then referencing a document that says what you think the code should be doing. You can read C++ yes?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,62,2017-05-19 04:02:42,7.28,,1,,"b""b' unsubscribe....'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,63,2017-05-19 04:02:42,4.92,,1,,"b'b\' @AllanDoensen  In what way would a lot of nodes ""bring down the bitcoin network""? BIP 148 nodes will disconnect from (and ban IIRC) non-BIP 148 nodes after they relay a number of bip148-invalid blocks. non-BIP 148 nodes will still be able to connect to other non-BIP 148 nodes and maintain a separate non-BIP148 blockchain. Node\\\'s won\\\'t be crashing or doing anything that would ""bring down the network"".  There would be risk for transaction replay and for blockchain reorganizations. The miners are incentivised to use BIP 148 the BIP 148 chain will not be able to be wiped out by the non-BIP 148 chain. However the opposite of that is true; the non-BIP 148 chain could be wiped out by the BIP 148 chain if it were to be longer than it.  Anyways"," you should read the ""petty document"" since it does explain a lot of this stuff.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,64,2017-05-19 04:02:42,10.77,,,1,"b""b' @AllanDoensen one consideration should be the risk of not implementing the optional BIP148 flag. You are saying it is risky to add but have you considered the risk of not implementing it on the network if it were to activate in August? Again"," this is only an option that is disabled by default. Core should consider all possibilities and the risk of not taking action in the event of a chain split IMHO is greater than the risk of adding an option that is disabled by default.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,65,2017-05-19 04:02:42,54.45,,1,,"b""b' @achow101 yes the network would not go down", that was probably overreach," but many issues would arise as you have alluded to.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,66,2017-05-19 04:02:42,240.52,1,,,"b""b' @AllanDoensen please comment or review  the actual code. I have doubt you have read the C++ code that is only 1 click away. As your statements and complaints have been false in relation to the pull request.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,67,2017-05-19 04:02:42,92.45,1,,,"b""b' @AllanDoensen I think what @starrymoonlight is talking about is not about systemic risk", but individual risk. This all comes down to this. If you prefer Bitcoin Core to outsource the risk for the users then this optimal PR should be merged. If you prefer Bitcoin Core to protect the network, then this optimal PR should be closed and if UASF gains so much adoption that it becomes riskier for the network not to merge it," an emergency release should be issued with UASF enabled by default.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,68,2017-05-19 04:02:42,257.78,1,,,"b'b\' Concept NACK.  This is more dangerous than it is being given credit for.  What makes a soft fork ""soft"" is that non-upgraded nodes continue on the same chain and consider the new rules valid.  Without 50% of hashing power behind it"," a UASF will cause a chain split.  Old nodes will be on the ""wrong"" chain", and new nodes will be on another chain.  The fact that much development and care has gone into segwit is NOT an argument for adopting it.  That\\\'s a sunken cost fallacy.  Not insignificant chunks of the miners, users, and economic actors seem to be opposed it.  Their reasons and motivation is not relevant.  All that matters is that segwit does not have near-universal acceptance, which has always been the standard for upgrading the protocol.  If you\\\'re going to merge in options that allow users to break off onto a different chain under not-unlikely scenarios, why not also add in non-segwit base blocksize increases as options too?  Or how about a  pow=sha3  switch?  Heck, let\\\'s just make it a barebones non-descript PoW blockchain client and have the users set all the consensus parameters they want.  Then their client will only connect to whatever chain they want to be on.  I mean, if the consensus chain doesn\\\'t require unanimous consensus, why not?  There\\\'s no harm if we\\\'re now claiming that converging onto one chain isn\\\'t important.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,69,2017-05-19 04:02:42,68.37,,1,,"b'b"" Concept NACK.  BIP 148 carries high", unnecessary risk of a chain split, as has been discussed on the [mailing list]url This project has always held high standards for deploying consensus-changing proposals while minimizing risks to consensus splits.  In my view, BIP 148 as drafted is incompatible with the goals of this project, and putting it behind a command line option does not address the fundamental nature of this incompatibility.  (I\'ll refrain from posting further on BIP 148 as I agree that GitHub is not the best place for these discussions but as this is my primary objection to this PR I see no other choice but to make some mention of it here.  I\'ll take further analysis of these concerns to the mailing list.)  [There are also technical issues with this PR -such as the peering concerns raised by @maaku (which are completely correct), and the lack of inclusion of any tests for this code.  These could be addressed, of course, but as a purely technical matter, this PR is not currently suitable for merging," even if BIP 148 were not flawed.]""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,70,2017-05-19 04:02:42,25.93,,1,,b'b\' @sdaftuar To my knowledge, this PR properly isolates bip148 nodes from other peers. Also," this PR is not ""for bip148"" it is an effort to prevent bitcoin fragmenting and protect exchanges from the negative consequences of a reorg.   Right now 10% of the nodes on the network are running non-core UASF code including SPV wallet nodes and some small exchanges. Failing to protect users and miners by providing an *option* that puts them on the side of the fork that\\\'s less likely to encounter a reorg seems irresponsible.   If the current trend continues", and we try to roll something out as a last minute reaction it could be too late to protect our most important users. Having it as an option allows users to enable it if needed to side with whatever the majority may be. If it comes to that, we can enable it by default, and make an announcement that people should either recompile or enable the option.  Or the reverse:  remove it from the code base and announce it will no longer be supported.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,71,2017-05-19 04:02:42,213.37,1,,,"b'b""  @maaku This is no different from any other softfork. Unlike Segwit", there isn\'t a stripped block to be avoided. Perhaps some mechanism like this could be an improvement, but it probably isn\'t necessary, and can\'t be secure against sybil attacks anyway.  @RHavar BIP148 is indeed truly the lower-risk option. @nopara73 It is *already* a bigger risk to not merge BIP148, than to merge it. @paveljanik Why should Core require an external  to remain a fully validating node? @mcgravier Only for non-full nodes (ie, failing to enforce BIP148). This is always and already a risk if miners create long invalid blockchains, it isn\'t a new thing introduced by BIP148 specifically. It is normal in a softfork that old nodes have this risk. @AllanDoensen What are you talking about? The code doesn\'t do anything you describe. Why do you pretend to read the code, when what you\'re saying has nothing to do with what the code actually does?? @sdaftuar As with any softfork, miners who create long invalid blockchains violating the rules can cause a chain split. Such a chain split is not caused by BIP 148, but by non-compliant miners creating invalid blocks. Furthermore, this risk is strictly *reduced* by increased adoption of the softfork," since it becomes less economically viable for miners to go on producing these invalid blocks very long.  @earonesty This PR should be closed and rebased against master.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,72,2017-05-19 04:02:42,57.72,,,1,b'b\'  This kind of argument is weak I\\\'m amazed it\\\'s been repeated so many times.  The simple _existence_ of a soft fork patch that has the potential to wipe out the legacy chain does not warrant the inclusion of that patch in the official Core software, which must **maintain a high standard** for changes, as @sdaftuar and others have pointed out.  If say, BU releases a similar soft fork patch that also endangers the legacy chain in the event that they get 51% hash rate (in fact, they would be in a better position to do so)," would you guys be OK with including that software patch into the Core client? No.  You know who else used similar logic / scare tactic to justify their action? the people that caused the Cold War nuclear arms race.  ""If you don\\\'t improve our nuclear capability -""If you don\\\'t include this patch in Core client TL;DR: This is the wrong sort of argument to be used for including changes in Core.   \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,73,2017-05-19 04:02:42,103.17,,1,,"b'b"" OK", I was working off the UASF branch," I\'m closing this and reopening rebased to master. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,closed,2017-05-22 20:06:51,450.15,24,38,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,74,2017-05-19 04:02:42,117.73,,1,,"b""b' Moved to #10442 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10428,closed,-,-,-,24,39,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,opened,2017-05-22 20:06:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,title,2017-05-22 20:06:23,00:00,,1,,"b""b' add a -bip148 option'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,body,2017-05-22 20:06:23,00:00,,1,,"b""b' Disabled by default"," this optional parameter allows a user to choose bip148 enforcement.  This is rebased from url Includes changes from code .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,1,2017-05-22 20:06:23,5.15,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,2,2017-05-22 20:06:23,31.12,,1,,"b""b' For the record"," previous discussions: url  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,3,2017-05-22 20:06:23,32.25,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,4,2017-05-22 20:06:23,38.67,,1,,"b""b' NACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,5,2017-05-22 20:06:23,13.57,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,6,2017-05-22 20:06:23,843.42,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,7,2017-05-22 20:06:23,44.6,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,8,2017-05-22 20:06:23,1253.6,,1,,"b""b' Perhaps the PR should see a rebase to 1 commit. The commit titles for newest two give no value and only works in context with the first commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,closed,2017-05-25 14:59:56,1133.55,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,9,2017-05-22 20:06:23,798.72,1,,,"b'b"" Maybe i did something stupid.  I\'ll reopen when I get to a laptop""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,10,2017-05-22 20:06:23,14.42,,1,,"b'b"" @earonesty  You overwrote your PR branch with master.  Since the changes being PR were removed github won\'t let the PR stay open (as there is nothing to merge).  I\'m not sure if restoring the commits will fix it"," you might have to open a new PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,11,2017-05-22 20:06:23,68.25,,1,,"b""b' Yeah", I tried to ," and did something wrong. Thx.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,reopened,2017-05-26 00:30:08,570.2,1,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,12,2017-05-22 20:06:23,325.03,,,1,"b'b\' utACK  I was concerned by the issue luke-jr pointed out in #10428: ""There are circumstances where this won\\\'t upgrade cleanly from a non-BIP148 client: specifically", after July in the case where miners have produced invalid blocks," this will fail to reconsider them."" But I think what will actually happen in the case of a chain split with only minority hashpower on BIP148", is if you restart bitcoind with -bip148 on, say, August 7th, is that you be highly unlikely to extend the chain you had, and eventually the initially shorter BIP148 chain will become longer than the non-BIP148 chain as at August-7th, and you\\\'ll reorg. This behaviour will get worse the longer a user waits after August 1st to enable the option; again assuming a chain split and only minority hashpower on BIP148. This doesn\\\'t seem too bad to me, though could be better. This probably isn\\\'t good enough for mining the BIP148 chain in this scenario -if you think BIP148 is going to win, but hasn\\\'t yet and has already started, enabling -bip148 will leave you mining on a new, post August-1st fork of the non-BIP148 chain, creating a new chain split, until the original BIP148 chain has caught up.  In the event of BIP148 failing, as far as I can see, users can just restart bitcoind without the option, and will reorg to the longer chain. That seems fine, and minimally painful, given the circumstances.  This seems like it should have some behavioural tests included before being deployed though, given it changes consensus behaviour...\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,13,2017-05-22 20:06:23,515.43,1,,,b'b\' Okay, I\\\'ve had a go at writing some functional tests," and I think the ""restart with -bip148 sometime after August 1st"" case is worse than I\\\'d hoped -a peer that mines on top of the chain they were following will get banned by BIP148 peers for passing on invalid blocks", and thus won\\\'t realise when the real BIP148 chain has overtaken their broken chain (at least until the BIP148 chain has somehow become the most work chain). That seems unreasonably fragile to me; I\\\'ll see if I can make a patch to prevent it happening.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,14,2017-05-22 20:06:23,1004.33,,,1,"b'b\' I\\\'ve made a pull request with a draft of a functional test and the ""prev block invalid"" DoS level changed to 0 when -bip148 is active: url I\\\'m still getting less peer connectivity than I expect and I\\\'m not really seeing why. For me", just enough peers remain connected for the entire network to achieve consensus, but that seems like it\\\'s due to luck...\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,15,2017-05-22 20:06:23,529.93,1,,,"b'b"" utACK  Looking upon the concerns of other reviewers", I\'d prefer if there is a modification to the Title of the client or an identifying message that informs that the user is indeed signalling towards BIP148," I can see scripts that could intentionally add this flag without the user knowing (although really-highly-unlikely)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,16,2017-05-22 20:06:23,436.8,1,,,"b'b"" NACK for now. This seems dangerous if the whole ecosystem is not behind it and it is very hard to measure", social media can be easily manipulated. Some people will enable it and potentially lose money. But I would actually support it if other controversial BIP\'s also would be available via optional commandline switch, like BIP10{0,1,2,"9}. Either give the user all available options or none.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,17,2017-05-22 20:06:23,751.88,1,,,"b'b"" Okay", I\'m a NACK on this PR for the following reasons:  1. No functional tests demonstrating the code behaves as expected. 2. Liklihood of partitioning the p2p network -if there a chain split, BIP148 nodes will disconnect non-BIP148 nodes due to the non-BIP148 chain being invalid, and even if the BIP148 chain eventually becomes longer, that the non-BIP148 nodes still have an invalid chain to try to pass on still seems to cause disconnection before consensus can be achieved. (This is probably recoverable via a single peer passing on the BIP148 chain between partitions, but it\'s still pretty poor) 3. Unexpected behaviour when switching to -bip148 after August 1st if the most work chain doesn\'t support BIP148 -you won\'t immediately switch to a BIP148 chain, instead you\'ll stall until on the non-BIP148 chain until the BIP148 chain has caught up with where you were. This interacts with the previous problem -if you switch to BIP148 after August, from a non-BIP148 chain with more work, you\'ll try passing on your chain to BIP148 peers and get disconnected for your troubles.  I think those are solvable objections, but url  has been closed," so...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,18,2017-05-22 20:06:23,262.0,1,,,"b'b\' Would it make sense to add the inverse option as well considering this is a risky change. The inverse here would mean something like ""reject all blocks after aug 1 that ARE signalling"". This means the potential gigantic reorg is not a (as) big worry as you can optionally stay on the old chain.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,19,2017-05-22 20:06:23,274.82,,1,,"b""b' Concept NACK: url After the IRC discussion from Thursday url  I think this PR should be closed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,20,2017-05-22 20:06:23,979.95,,1,,"b'b\' @keis The inverse is actually ""reject the chain where ALL blocks after aug 1 are signalling"" -otherwise you\\\'d get three chains: one where some signal and some don\\\'t (current)", one where all signal (bip148), and one where none signal (your proposal). The easiest way to actually do that is to wait until Aug 1," take the first block on the bip148 chain and run ""invalidateblock"" on its hash", but you need to wait until Aug 1 to do that.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,21,2017-05-22 20:06:23,113.3,,1,,b'b\' A UASF, no matter the specific proposal, is built entirely upon user choice: it forces activation because an economic majority of users choose to use it over the other chain, even if the other chain has more work behind it. I believe it is the consensus of developers here that user choice is a critically important check on the ecosystem," and a vital part of maintaining the balance of power between various players: Should ""the developers"" try to push an unpopular consensus rule change", user choice not to upgrade will prevent it; Should industry try to mandate a change without widespread support, user choice not to upgrade it would prevent it; Should miners force an unwanted miner-activated soft fork, proactive user action in invalidating that chain will prevent such a hostile fork; and Should miners prevent miner-coordinated activation of otherwise popular and desired technology, the UASF forces the popular outcome in a timely manner. User-activated soft forks, or at least the viable threat of them, is a critical check and balance in the game theory that makes bitcoin work. However it would be naive to believe that the economically significant majority of users have the capability to do much more than run their bitcoin wallets from the distribution channels already in place. In some cases it is ignorance -not knowing how to build bitcoind, or not having a binary distribution pathway for their platform or environment. In other cases policy may prevent them from doing so -maybe they are contractually obligated to \\xe2\\x80\\x9crun Bitcoin Core\\xe2\\x80\\x9d and lawyers need to get involved to decided if a UASF patch on top counts as a contractual breach. For this reason I believe it is the responsibility of Bitcoin Core -and other wallets -to provide an activation flag for any and all UASF proposals that have achieved a significant level of community backing, at least to the extent that it is practical to do so, and to make such a change available through the normal distribution channels. Arguing what level of community backing is required that would trigger that obligation of support, and how to measure it is interesting, but irrelevant to this case. Wherever that line is, we\\xe2\\x80\\x99ve clearly crossed it already. As maintainers of wallet software we all have an obligation to the bitcoin ecosystem to proactively take actions which preserve user choice and therefore prevent handicapping the game theory incentives that keep bitcoin decentralized, regardless of how we may or may not feel about each proposal. Bitcoin Core should, as a matter of its responsibilities to the community, properly review the BIP-148 implementation, fix edge cases identified, and merge a BIP-148 flag (off by default). Bitcoin Core should continue to do the same for any UASF proposal that achieves a similar level of user mindshare and interest as BIP-148 does today. To not do so would be harmful to the long-term incentives of bitcoin.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,22,2017-05-22 20:06:23,43.7,,1,,"b'b"" @ajtowns You\'d have to wait until a fork occurs"," not just until 1 August.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,23,2017-05-22 20:06:23,78.18,,1,,b'b\' At this point," I fully concur with the reasoning of @maaku as described [here]url The idea as described is simply to ""fix edge cases identified"," and merge a BIP-148 flag (off by default).""  Some notes:  1) Function test has been proposed as described at url  for behavior with -bip148 flag.  2) At Travis", build passing, there is job canceled and a job failed at the time of this comment, see details at url With fixes as described by @maaku I support the proposal as basically elucidated [here]url  with the additional commits necessary to address edge cases, which should be minimal.  I also urge skeptics to be aware of the overall benefits of this proposal and to consider them rather than looking only at potential negatives or assuming danger. A balanced view is necessary in order to be able to approach this matter constructively.  _Edit:_ ACK\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,24,2017-05-22 20:06:23,130.65,,1,,"b'b"" If it is easy to do (I don\'t really know that part of the code) I would suggest a NODE_BIP148 service bit and try to maintain two peers with that bit set. If implementing this is non-trivial", I would not demand it however," since partitioned networks can be manually merged with a single bridge.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,25,2017-05-22 20:06:23,210.03,,1,,"b'b\' Concept ACK.  I\\\'ve also prepared a rewritten branch ( ) on my repo url This branch does a few things:  * Replaces the extra ""UASF-Segwit:0.3(BIP148)/"" version component with a simple ""+BIP148"" (or ""!BIP148"" if disabled) UA comment. This uses ""+"" or ""!"" characters which are forbidden by Core (but not BIP 14) in options to avoid confused users setting up their node incorrectly. * Adds a service bit used exclusively for ensuring at least some peers are also enforcing BIP148. Currently it uses temporary-experiments bit 27. I am uncertain if a permanent service bit *should* be assigned", since this will be useless once the risk of chain splitting is past. * Added logic to rewind the blockchain at startup  a user upgrades from a non-BIP148 node which had an invalid chain as its tip. * Replaced the conditional DoS banning on invalid prev-block. This will never ban for invalid prev-block, since that condition is possible for any softfork, and the cost of producing invalid blocks is prohibitively high enough to prevent trying to abuse this for DoS.  @earonesty Please review my branch and overwrite your own when satisfied.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,26,2017-05-22 20:06:23,77.18,,1,,"b""b' Concept ACK using a temporary-experimental service bit. That is the correct approach here", I believe," as it is basically only needed from Aug 1st until resolution.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,27,2017-05-22 20:06:23,258.18,,1,,"b'b"" At first blush"," luke-jr\'s proposed changes look like they should address all my concerns; haven\'t compiled and tested yet though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,28,2017-05-22 20:06:23,336.43,1,,,"b'b\' In :ProcessMessage the ""missing prev block"" check has an additional DoS test that eventually gets triggered if the invalid chain reaches 50 blocks:   The ""if"" triggers every 10 blocks", and the Misbehaving() increments the ban score by 20 until it hits a default threshold of 100. So this should be enough to start partitioning the network if a UASF chain split lasts as little as 9 hours. This code was introduced in #8305 for context.  With the above code commented out," and the DoS score of ""prev block invalid"" changed from 100 to 0", the BIP148 and non-BIP148 nodes in my functional tests remain fully connected even if the chain split lasts for over 500 blocks.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,29,2017-05-22 20:06:23,902.45,,1,,"b'b\' Why do you ""return (0"," for all blocks, not just segwit invalid? On Wed, May 31, 2017 at 6:47 PM, Luke Dashjr wrote:>\''
bitcoin	10442	closed	30	gmaxwell	2017-05-22 20:06:23	212.05			+1	b""b' BIP 148 was a big success.  Thanks to all involved.  I think this PR can be closed now.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,closed,2017-08-10 08:14:40,464.53,7,22,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10442,closed,-,-,-,7,22,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,opened,2017-05-22 22:40:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,title,2017-05-22 22:40:55,00:00,,1,,"b""b' Add fee_est tool for debugging fee estimation code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,body,2017-05-22 22:40:55,00:00,,,1,"b""b' This PR adds an option for saving live fee estimation data from a bitcoin node"," and a command line tool for processing the data and testing fee estimation code.  The idea is to make it easier to test improvements to fee estimation like url  in a more systematic and reproducible way.  Some documentation is in [ ]url Sample log file: [ ]url  (65M)  Sample [ ]url graph output: ![graph]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,1,2017-05-22 22:40:55,1325.4,,,1,"b'b"" This is interesting but still no comment.  Concept ACK  I\'ll play around with this a bit. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,2,2017-05-22 22:40:55,635.1,,1,,"b'b"" When estimate log doesn\'t have enough data"," is generating empty data in the HTML file. Emit some warning in such cases? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,3,2017-05-22 22:40:55,3.03,,,1,"b""b' For perfect output"," there should be 3rd dimension time or current block height when the tx was first seen :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,4,2017-05-22 22:40:55,280.75,,1,,"b'b"" Concept ACK. I think this could be a useful tool.  Could this be split into two PRs to aid reviewers? The first PR would cover the option and writing the fee estimation data to disk. The second PR would be for a tool to read and graph the logs.  Parsing and graphing json files seems like a problem that has probably been solved many times before. If I was approaching this"," I\'d look at implementing this as a script in /contrib or a separate repository. Was there a particular reason you chose to implement this as a new C++ program?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,5,2017-05-22 22:40:55,374.82,,1,,"b'b""  I think this is useful.  However I\'m not sure the analysis tool belongs in this repository. As it\'s specific to developers debugging the fee estimation code it\'s not something we want to ship with the distribution"," or install by default. One place it could be is e.g. url  . You could still document or refer to it from here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,6,2017-05-22 22:40:55,33.18,1,,,"b'b"" Agree that fee_est tool shouldn\'t be installed"," since it\'s a tool specifically for made for modifying and debugging fee estimation code.  But it would be awkward to use and maintain from a separate repository because it links and calls into the fee estimation code. (The tool works by piping historical data into the fee estimator so it\'s possible to make experimental changes to fee estimation and see how those changes affect its output and internal state.)  As far as build / distribution is concerned I think it makes sense to think of it more like a unit test or benchmark than like a maintainer tool.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,7,2017-05-22 22:40:55,1165.3,1,,,"b'b""  Yes", I agree, that\'s unfortunately true. That part needs to stay in the repository with the rest of the code. I agree especially with the references to cloudflare CDN and such. It feels a bit ugly to have that in the C++ code. Better to spit out e.g. JSON or CSV or whatever is convenient," then use a separate script for pretty formatting. This would also keep open the option of using different (non-web) visualization tools. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,8,2017-05-22 22:40:55,59.5,,1,,"b""b' The last travis run for this pull request was 54 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,closed,2018-07-29 15:18:00,997.08,2,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,reopened,2018-07-29 15:18:01,0.02,2,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,9,2017-05-22 22:40:55,1335.43,,1,,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#16171]url  (Remove -mempoolreplacement to prevent needless block prop slowness. by TheBlueMatt)* [#16066]url  (mempool: Skip estimator if block is older than X by promag)* [#15946]url  (Allow maintaining the blockfilterindex when using prune by jonasschnelli)* [#15921]url  (Tidy up ValidationState interface by jnewbery)* [#14193]url  (validation: Add missing mempool locks by MarcoFalke)* [#13990]url  (Allow fee estimation to work with lower fees by ajtowns)* [#13949]url  (Introduce MempoolObserver interface to break "" -* [#10102]url  ([experimental] Multiprocess bitcoin by ryanofsky) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,10,2017-05-22 22:40:55,115.95,,,1,"b""b' Rebased 51163cee78f32fb6311bf620266c42fd115ba98f -Rebased 8b9c3da3cf077051d6b1112ba4adbadd60096d57 -Updated 4bcecdb666d1dbc90201dccbfee27a234f88c960 -Rebased aaa4b687c5fdeb2c75246e23077c984a0f133e81 -Updated a5faeb1cedd52b2886a1d5c320802874436fe2f6 -Rebased 61ab4c17eebf9b73267c992fb664d603620f9e81 -Updated a9eb5cc5ceace3e567a0f7ba44c6350b2746436f -Rebased 8cd1bb684bfec22fc54e091dc96c782a26847393 -Updated a60d26ac2bceea2c67ef34c8641705b16f656d07 -Updated 1e7ec287c927437b5a183bc807c49eba4a16d18a -Updated 56446378f5d0c2bdeb7a45fa7382ccd58c9b994c -Updated 8d99281859540689b55285bd0acdf8c1529c4b37 -Rebased 68944a5120c651772fd7f3c028c446e38f9a3f57 -Rebased 50cd9b1cb7d03a81140d8a59698eba8d06b89612 -Updated a0148157c57e91b299e6b450c7ee758f606488e6 -Rebased 6f9c07f0a72ff0d95bfee9f37e4ae3dc9ed9c0e4 -Rebased ca993015e0e115540f0ef2710a8f2a81f5fbf0c1 -Rebased b197b85a6a1c682070c445c0314d6a645936ba0f -Updated b5df05ab46d25052c95344e91fc0631b29635f1d -Rebased 9588e9e81d29227213babe45d37e9bfcd10ab05c -Rebased e2330472f0ed7466e951d99f1c707d1852289cd1 -Rebased 28ab62aaaeac6d8f7ce5f3297504b549ca4cea5a -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,11,2017-05-22 22:40:55,376.5,,1,,"b""b' Concept ACK"," but it seems the HTML code (or even the conversion to HTML) could live outside the repo?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,12,2017-05-22 22:40:55,1290.18,,1,,"b'b"" This PR has some overlap with @kallewoof\'s [mff]url  utility. One difference is that this creates logs in [json-lines]url  format and only logs mempool data needed to run fee estimation code reproducibly"," while mff uses a custom format and logs additional information.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10443,open,-,-,-,2,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,opened,2017-06-05 08:57:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,title,2017-06-05 08:57:02,00:00,,1,,"b""b' Improve bitcoind systemd service file'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,body,2017-06-05 08:57:02,00:00,,1,,"b'b"" Add comment how further options can be added or existing ones modified. Use /run/${RuntimeDirectory} for PID file.  Remove TimeoutStopSec", TimeoutStartSec, StartLimitInterval," StartLimitBurst directives as those should be set indivdually.  Remove Group to user the bitcoin user\'s default group.  Changed Restart from \'always\' to \'on-failure\' (can also be overwritten individually).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,1,2017-06-05 08:57:02,381.77,1,,,"b""b' It seems weird to move the datadir without the user noticing?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,2,2017-06-05 08:57:02,42.73,,1,,"b""b'  seems to make more sense too. Without specifying it it will move to somewhere under  "," which is not recommended for a system-wide daemon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,3,2017-06-05 08:57:02,145.65,,1,,"b'b"" Context: bitcoind\'s service scripts (at least the openrc one) has always used the bitcoin user\'s default datadir. This systemd script was incompatible with this for some reason.  At least on Gentoo systems", the bitcoin user\'s home directory is itself  ," so the datadir ends up as ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,4,2017-06-05 08:57:02,63.02,,,1,"b'b"" Besides what @luke-jr said", my rationale was that as few things as possible should be specified in the systemd service, all bitcoind specifics should go into  . Thus the bare minium the service file has to specify how should be invoked is 1. 2. 3.  I\'m not sure if it\'s the case, but if command arguments override  settings," then the user would not be able to change datadir without fiddling with the systemd service file.  But I\'m happy to re-add if it\'s deemed necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,5,2017-06-05 08:57:02,748.95,,1,,"b'b"" What about  ? #10531 increases it to  "," this removes it completely. I\'m not sure what you mean with \'should be set individually\' in the OP. What is the default?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,6,2017-06-05 08:57:02,130.73,,1,,b'b\'  The default is 90s, which is sufficient for most bitcoind setups I know. If a users has a particular cause for a different value (like a very slow system), then he can simply to override it," using the approach mentioned in the added comment block. That is what I meant with ""should be set individually"". The idea is that systemd\\\'s default are reasonable for most cases", and if it doesn\\\'t work for someone, then systemd allows you override the defaults. I could be wrong, but I don\\\'t see a reason why bitcoind should always need TimeoutStartSec set to 120s, instead of the default value (90s).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,7,2017-06-05 08:57:02,34.45,,1,,"b""b' What does this timeout measure in the first place? Until RPC becomes reachable? Or until it becomes usable?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,8,2017-06-05 08:57:02,39.72,,1,,"b'b""  Good question. I can\'t find anything in the documentation. And a short look at the source also didn\'t help. I doubt that", since systemd has no specific knowledge of the service. I\'d guess that for \'forking\' type services like bitcoind," it\'s the time the initial process needs to terminate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,9,2017-06-05 08:57:02,1369.65,,1,,"b'b"" So I\'m not clear what to do here. This isn\'t gathering any (ut)ACKs and neither is #10531. Who is using these files and has an opinion about them?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,10,2017-06-05 08:57:02,103.22,,1,,"b""b' This seems inactive"," closing for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,closed,2017-07-25 11:56:55,179.88,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,11,2017-06-05 08:57:02,14.4,,1,,"b'b"" What a pity. Needless to say that I believe this PR was an improvement over what is currently in the repo. ;)  The usual consumers are people who package bitcoind for their Linux distribution. For example"," the Gentoo bitcoin overlay (which I\'m involved with) and the Gentoo in-tree ebuilds would probably switch to the canonical bitcoind systemd files if they where in a good shape.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,12,2017-06-05 08:57:02,15.15,,1,,"b'b"" After discussion on IRC I\'m reopening this.  (Apparently the current state is completely broken", so if there can\'t be agreement on how to improve it," it\'d be better to remove it completely.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,reopened,2017-07-25 12:26:28,29.55,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,13,2017-06-05 08:57:02,131.2,,1,,"b""b'  This is a forking service so timeout is just checking time until original foreground process exits successfully.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,14,2017-06-05 08:57:02,1334.45,,1,,"b""b' Please squash before merging.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,15,2017-06-05 08:57:02,20.53,,1,,"b""b' Squashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,16,2017-06-05 08:57:02,320.02,,1,,"b""b' utACK 16be7ddbaa7cb0de99c84fac2d33d713e03301cf again (the later commit fac2c22ce176529893bb41a1856e2854d1db5e20 which had the -printtoconsole stuff is now gone).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,closed,2017-11-09 12:17:30,1431.03,1,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10529,closed,-,-,-,1,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,opened,2017-06-05 09:54:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,title,2017-06-05 09:54:12,00:00,,1,,"b""b' Fix invalid instantiation and possibly unsafe accesses of array in class base_uint'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,body,2017-06-05 09:54:12,00:00,,1,,"b""b' The implementation of base_uint::operator++(int) and base_uint::operator(int) is now safer. Array pn is accessed via index i after bounds checking has been performed on the index"," rather than before.  The logic of the while loops has also been made more clear.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,closed,2017-06-07 17:20:44,446.53,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,reopened,2017-06-07 17:23:33,2.82,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,1,2017-06-05 09:54:12,449.92,,1,,"b""b' Reopened with addition of static_assert for BITS value.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,2,2017-06-05 09:54:12,96.72,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,closed,2017-06-22 15:17:27,1313.9,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10530,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,opened,2017-06-08 01:02:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,title,2017-06-08 01:02:57,00:00,,1,,"b""b' [Test] Tests for zmqpubrawtx and zmqpubrawblock'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,1,2017-06-08 01:02:57,378.8,,1,,"b""b' Both linux builds timed out after ~48 minutes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,2,2017-06-08 01:02:57,428.87,1,,,"b'b"" I suspect that this timeout is due to the python3-zmq Context not closing cleanly at the end of the zmq_ test. See url  for example.  I\'m working on a branch that fixes that behaviour here: url  . It\'s currently building in Travis. If that works"," you might want to try rebasing this PR on top of that branch to see if it resolves this for you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,3,2017-06-08 01:02:57,34.97,,1,,"b""b' Opened #10555 to fix the python zmq issue. @achow101 if rebasing on that resolves your travis issue"," could you  that PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,4,2017-06-08 01:02:57,226.37,,1,,"b""b' Rebased on top of #10555 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,closed,2017-06-18 12:17:46,674.82,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,5,2017-06-08 01:02:57,1054.1,,,1,"b""b' Reopen. Was closed due to false positive regex match by GitHub.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,reopened,2017-06-18 12:26:04,8.3,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,6,2017-06-08 01:02:57,300.9,,1,,"b""b' Rebased after #10555 merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,7,2017-06-08 01:02:57,268.9,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,8,2017-06-08 01:02:57,115.13,,1,,"b""b' Nits addresses (I think) and rebased (there were merge conflicts).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,9,2017-06-08 01:02:57,1386.98,,1,,"b""b' Tested ACK ba0b4f1c0a2c47f2f8c342686c94c6e358ea4efe"," but needs rebase.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,10,2017-06-08 01:02:57,9.68,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,11,2017-06-08 01:02:57,45.57,,,1,"b""b' Tested ACK a3696dcec45f11f202c1666084c4aa1f8fabd37f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,12,2017-06-08 01:02:57,20.82,,1,,"b""b' Just saw @jnewbery comment above: Can be *fixed* with one socket per notification.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,13,2017-06-08 01:02:57,937.28,,,1,"b'b""  @promag sounds like a very sensible change. This PR simply extends what\'s already there so I think we should merge this as is. I\'d be happy to review a follow-up PR if you want to implement that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,14,2017-06-08 01:02:57,14.7,,1,,"b'b"" @jnewbery agree. As for the follow up", I think it could be added somewhere in something to abstract the sockets creation, to ease testing subscribers. As it is," it\'s too much verbose for testing purpose.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,15,2017-06-08 01:02:57,1288.28,,,1,"b'b"" @promag  If you\'re thinking of abstracting away the ZMQ interface", I think it would be better to add a new class in test_ to be owned by the class, like how I added a class in url However, the ZMQ interface is only used in this one test script, and I think it\'s best to keep it that way, so I think it\'s best to leave the implementation in the file.  We\'ve wondered off-topic a bit for this PR. If you\'re interested in pursuing this further," feel free to ping me on IRC or open a separate issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,16,2017-06-08 01:02:57,161.0,,1,,"b""b' Can this be merged?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,closed,2017-09-29 17:48:33,322.48,1,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10552,closed,-,-,-,1,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,opened,2017-06-15 17:35:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,title,2017-06-15 17:35:02,00:00,,1,,"b""b' Retire the comparison test framework'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,body,2017-06-15 17:35:02,00:00,,1,,"b'b"" The comparison test framework was introduced in #5981 as a successor to the Java comparison tool", following discussion in #4545. The Java comparison tool was finally removed in #8504.  The python comparison test framework was originally intended to start multiple bitcoind nodes on different versions, send various  to those nodes, and compare that the nodes reach the same state. However, the tests are now usually run through the test_ framework with only one node being run. The comparison part of the comparison test framework is not even used.  Tests written in the \'comparison\' style make use of and classes and yield statements throughout the test. The framework is overly complex and not flexible enough to be really useful. In addition, they\'re difficult to write, understand," update and troubleshoot. There are only 7 tests which use the comparison test style we should rewrite them in the regular BitcoinTestFramework style.  ## subtasks  [x] Convert bip65-cltv-p2 to use the BitcoinTestFramework (#10695) [x] Convert bipdersig-p2 to use the BitcoinTestFramework (#10695) [x] Convert  to use the BitcoinTestFramework (#11771) [x] Convert p2p_invalid_ to use the BitcoinTestFramework (#11772) [x] Convert feature_ to use the BitcoinTestFramework (#11773) [x] Convert feature_csv_ to use the BitcoinTestFramework (#11817) [x] Delete redundant feature_bip9_ (#11818) [x] Remove the ComparisonTestFramework code (#11818)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,1,2017-06-15 17:35:02,177.82,,1,,"b'b\' I\\\'d be surprised if our tests run with a version of bitcoind older than a couple of weeks. Usually our test framework is using all ""bleeding edge"" features of the master branch and breaks if those features are not included in the binary. E.g. the binary of the last release.  We would probably need to enforce compatibility", i.e. run the comparison tests as part of travis.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,2,2017-06-15 17:35:02,1093.52,,,1,"b""b' It would be nice for the test to support running against an old bitcoind", but I see no reason why it should need to run multiple bitcoinds at once (we already support providing a path to a bitcoind, or, obviously," you can just leave an old binary in the tree).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,3,2017-06-15 17:35:02,54.73,,1,,"b""b' #11773 merged. Next at bat: #11817.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,4,2017-06-15 17:35:02,124.1,,1,,"b""b' url  is merged. Next up: #11818 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,5,2017-06-15 17:35:02,425.68,,1,,"b""b' Closing now that #11818 is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,closed,2018-04-05 00:50:53,435.85,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,6,2017-06-15 17:35:02,815.63,1,,,"b'b"" You\'re too fast @fanquake I was looking forward to closing this myself :cry: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,reopened,2018-04-05 14:26:35,815.7,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,closed,2018-04-05 14:26:37,0.03,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,7,2017-06-15 17:35:02,0.18,,1,,"b'b"" That\'s better""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,8,2017-06-15 17:35:02,3.18,,1,,"b""b' :ok_hand: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10603,closed,-,-,-,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,opened,2017-06-15 19:44:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,title,2017-06-15 19:44:09,00:00,,1,,"b""b' Add AssertLockHeld assertions in CWallet::ListCoins'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,body,2017-06-15 19:44:09,00:00,,1,,"b""b' Fixes TODO from #10295'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,1,2017-06-15 19:44:09,134.98,,1,,"b""b' utACK 5c7a7de7b38a84a3ba1e6c26dd1af67236dad891'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,2,2017-06-15 19:44:09,1199.53,,1,,"b""b'  Dependent PR #10244 got merged"," so this is now safe to merge too.   Rebased 5c7a7de7b38a84a3ba1e6c26dd1af67236dad891 -Rebased 8392051595c615216f3857d54a80cf708ed1f29e -Rebased cc69e88921725bed4b1e11823914aa8e418b7220 -Rebased a6c634013b7cf5d74bea68e51c011effcd7fc11d -'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,3,2017-06-15 19:44:09,200.55,,1,,"b""b' utACK 8740c61.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,4,2017-06-15 19:44:09,1105.9,,1,,"b""b' Rebased 8740c61a334b3774984cfd1a3d67e33e68adb96a -> 545e85eccc2441c6d7745bb90d88dc14718455a2 ([]url  -> []url  due to conflict with #12920'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,5,2017-06-15 19:44:09,276.63,,1,,"b""b' Would you mind adding the clang lock annotations here as well?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,closed,2018-07-21 17:29:58,1305.82,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,6,2017-06-15 19:44:09,1268.23,,1,,"b""b' The last travis run for this pull request was 101 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,reopened,2018-07-21 17:29:59,0.02,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,7,2017-06-15 19:44:09,21.45,,1,,"b""b' @ryanofsky Are you still working on this? If so"," mind to respond to my previous question from April?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,8,2017-06-15 19:44:09,445.1,,1,,"b""b' Missing locking annotations:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,9,2017-06-15 19:44:09,562.1,,1,,"b""b' Closing as this seems to be inactive"," let me know if you start work on this again and I should reopen it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,closed,2018-08-31 10:38:39,1028.67,0,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,10,2017-06-15 19:44:09,74.7,,1,,"b'b""  This PR can be reopened. There isn\'t actually any work that needs to be done here since the clang errors @MarcoFalke reported were fixed by @skeees in #13423 (f393a533bebc088985f94c725b9af881500ba998).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,reopened,2018-08-31 11:56:12,77.55,0,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,11,2017-06-15 19:44:09,11.23,,1,,"b""b' @ryanofsky What I mean with locking annotations is the clang-annotations in the header file:   Without these"," it is only a best-guess runtime-check that the correct locks are taken for this method.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,12,2017-06-15 19:44:09,8.58,,1,,"b""b' utACK 545e85eccc2441c6d7745bb90d88dc14718455a2 (given that the clang lock annotations are included in this commit)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,13,2017-06-15 19:44:09,12.1,,1,,"b""b' utACK 62b6f0f21e24ff367d096c80ebdf398de4a98163'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,14,2017-06-15 19:44:09,21.28,,1,,"b""b' utACK 62b6f0f.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,closed,2018-08-31 13:04:48,68.6,0,16,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10605,closed,-,-,-,0,16,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,opened,2017-06-27 06:35:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,title,2017-06-27 06:35:10,00:00,,1,,"b""b'  test failure due to bitcoind return code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,body,2017-06-27 06:35:10,00:00,,,1,"b'b"" In #10677 there was what looks like a new kind of Travis false positive", or at least an intermittent error. It is triggered by the assertion on return code added in #10636: I\'m not able to reproduce this locally. It\'s likely that the node crashed in some way," but this doesn\'t give enough information to extract what happened.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,1,2017-06-27 06:35:10,343.95,,1,,"b'b"" Looks like this was a one-time problem"," haven\'t seen it again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,closed,2017-06-29 12:19:07,343.95,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,2,2017-06-27 06:35:10,83.85,,1,,"b'b"" This is still an issue and I hypothesize it has something to do with setting the return code after a shutdown was requested quickly after startup. Though"," I haven\'t yet looked at a fix...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,reopened,2017-06-30 13:42:58,83.85,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,3,2017-06-27 06:35:10,42.05,,1,,"b'b"" Perhaps we should just comment out  for now? zapwallettxes doesn\'t actually test anything due to a syntax error (will be fixed in #10330)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,4,2017-06-27 06:35:10,731.73,,1,,"b""b' Fixed by @TheBlueMatt in #11831'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,closed,2017-12-17 02:36:46,773.8,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10678,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,opened,2017-07-03 09:57:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,title,2017-07-03 09:57:55,00:00,,1,,"b""b' Escape rather than remove any printable characters in UAs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,body,2017-07-03 09:57:55,00:00,,1,,"b""b' Current Core strips out the  ", and characters used by the UASF client and Knots to indicate whether BIP148 enforcement is enabled. This expands the allowed characters to all printable ASCII characters for the GUI," and escapes the disallowed-from-log ones in %XX format when printing to the log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,1,2017-07-03 09:57:55,5.33,,1,,"b""b' It seems risky to put quote chars in there.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,2,2017-07-03 09:57:55,14.95,,1,,"b""b' Hmm"," you mean in case someone is reading the log and inserting it into a SQL database or something?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,3,2017-07-03 09:57:55,7.53,,,1,"b'b"" @luke-jr Yep.  Or it makes its way to the command line"," and someone is lazy and fails to quote.  We\'ve seen this movie before :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,4,2017-07-03 09:57:55,687.2,1,,,"b""b' Reduced the subset to avoid quotes and other possibly dangerous characters"," and just made it the default (which is only used for logging).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,5,2017-07-03 09:57:55,597.03,,1,,"b""b' I can remove and (although IMO this is a bit too much nannying)"," but is needed to properly log existing UAs...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,6,2017-07-03 09:57:55,33.9,,1,,"b""b' Concept NACK per @gmaxwell. The existing safe chars should be enough to generate any ua comment that might render useful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,7,2017-07-03 09:57:55,6.43,1,,,"b'b"" @MarcoFalke I\'m not talking about a speculative scenario. UAs using  ",  , and are already live on the network. This only fixes the display and logging of these.  And the existing safe chars uses the same limits for both options as well as the log filtering. That particular combination makes it impossible to have code-only UA comments, hence why the usage of  ,  ," and were necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,8,2017-07-03 09:57:55,19.7,1,,,b'b\' (Also," the super-nanny approach of not allowing any possible ""needs escaping"" characters already sailed a long time ago: is one of the most dangerous such characters", and has been allowed from the start.)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,9,2017-07-03 09:57:55,63.75,,,1,"b'b""  @luke-jr that doesn\'t sound a good argument :smile:.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,10,2017-07-03 09:57:55,486.85,,1,,"b'b""  I agree"," I\'d rather not make this change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,11,2017-07-03 09:57:55,159.38,,1,,"b""b' @laanwj You yourself added shell characters in #4983 ...  How do we get this fixed? Would it help to reduce it to just  ",  ," and so it only addresses the real-world issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,12,2017-07-03 09:57:55,123.42,,,1,"b""b' ! is shell problematic'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,13,2017-07-03 09:57:55,523.73,,1,,"b""b' Closing because seems not something we should do.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,closed,2017-07-13 07:27:08,1289.22,3,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,14,2017-07-03 09:57:55,8.15,1,,,b'b\' Please reopen. This is a bug fix for a present issue," for which no alternate solutions have been proposed.  We already  ""shell-problematic"" characters (such as parenthesis and semicolon)", and worrying about them in log files is pretty absurd anyway. My bitcoin logs *already* have from other sources anyway.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,15,2017-07-03 09:57:55,11.0,,,1,"b'b"" But @luke-jr: your changing the default charset for the general function where you break the assumption that this function produces a  string? If you wan\'t to fix a bug", I think you should find a ways that doesn\'t break that \\xe2\\x80\\x93 reasonable \\xe2\\x80\\x93 assumption. Example: there are open pull requests who want to use SanitizeString for user feedback (via CLI," RPC). Not sure if this is a good idea or not but it clearly shows that should include  safety.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,16,2017-07-03 09:57:55,0.12,,1,,"b""b' reopening'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,reopened,2017-07-13 07:46:24,19.27,4,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,17,2017-07-03 09:57:55,43.02,,1,,"b""b' Rewrote this to only allow the full set of printable characters in the GUI where it should be harmless"," and to escape them in %XX format when printing to the log.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,18,2017-07-03 09:57:55,662.3,1,,,"b'b\' Can we instead remove exposing of subver entirely? I\\\'m really tired of people ""voting"" by spinning up sybil attacks", its just not in any way useful.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,19,2017-07-03 09:57:55,654.87,,1,,"b'b"" @TheBlueMatt Whether we do or don\'t"," it\'s outside the scope of this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,20,2017-07-03 09:57:55,1344.42,,1,,"b""b' @ryanofsky (addressed your nits btw)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,21,2017-07-03 09:57:55,667.48,,1,,"b""b' There seems to be no conceptual acknowledgment to do this. Closing for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,closed,2017-09-07 15:58:29,492.08,5,14,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10731,closed,-,-,-,5,14,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,opened,2017-07-05 13:27:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,title,2017-07-05 13:27:25,00:00,,1,,"b""b' [config] Help text cleanup'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,body,2017-07-05 13:27:25,00:00,1,,,"b""b' This is very much a matter of personal taste", but I think this changeset makes command line arguments help text code clearer.  A bunch of changes:  order groupings alphabetically order arguments alphabetically within groupings make responsible for whether to print debug arguments. This is done by passing a  , which will result in the help text being printed only if is set move server-specific option into , and remove the argument from move the calls to into  and qt (removes one dependency on bitcoin_wallet from bitcoin_server).  the help message filter is implemented as a bitfield," so could be updated to include other filters (eg  ) and remove the preprocessor conditionals from  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,1,2017-07-05 13:27:25,1084.02,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,2,2017-07-05 13:27:25,527.32,,1,,"b'b"" Addressed @laanwj\'s comment"," squashed fixup commit and rebased.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,3,2017-07-05 13:27:25,1394.33,,1,,"b'b"" This is a heavily-conflicting PR that will require frequent rebase. I\'m not keen on doing that unless people think this is an improvement and should get merged.  @laanwj @jonasschnelli you\'ve both taken a look at this and left comments. Can I assume concept ACKs from you? Do you think this is an improvement?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,4,2017-07-05 13:27:25,26.73,,1,,"b""b' There seems to be no conceptual acknowledgment to do this. Closing for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,closed,2017-09-07 15:59:49,152.4,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,5,2017-07-05 13:27:25,30.33,,1,,"b'b"" Please re-open. There hasn\'t been a rejection of this idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,6,2017-07-05 13:27:25,21.78,,1,,"b'b"" Ok", leaving this open for another month. Though," if no one wants to take a look I don\'t see a reason to keep it open forever.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,reopened,2017-09-07 16:51:56,52.12,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,7,2017-07-05 13:27:25,56.37,,1,,"b'b"" I think you\'re right there\'s no appetite for this PR. I may break it up and PR some parts of it"," since I think they\'re useful changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,closed,2017-09-14 17:48:18,56.37,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10748,closed,-,-,-,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,opened,2017-07-06 13:19:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,title,2017-07-06 13:19:12,00:00,,1,,"b""b' test: Check RPC argument mapping'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,body,2017-07-06 13:19:12,00:00,1,,,"b'b"" Parse the dispatch tables from the server implementation files", and the conversion table from the client (see #10751).  Perform the following consistency checks:  Arguments defined in conversion table, must be present in dispatch table. If not, it was probably forgotten to add them to the dispatch table, and they will not work.  Arguments defined in conversion table must have the same names as in the dispatch table. If not, they will not work.  All aliases for an argument must either be present in the conversion table, or not. Anything in between means an oversight and some aliases won\'t work.  Any of these results in an error.  It also performs a consistency check to see if the same named argument is sometimes converted, and sometimes not. E.g. one RPC call might have a \'verbose\' argument that is converted, another RPC call might have one that is not converted. This is not necessarily wrong, but points at a possible error (as well as makes the API harder to memorize) so it is emitted as a warning (could upgrade this to error).  This test is added to travis and run when  . Currently fails with the following output: ~#10698 fixes the first ERROR~ #10747 fixes the second ERROR, as well as the WARNING  Update: #10698 was merged," leaving:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,1,2017-07-06 13:19:12,10.43,,,1,"b""b' Nice. Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,2,2017-07-06 13:19:12,15.57,,1,,"b""b' Concept ACK. Will review later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,3,2017-07-06 13:19:12,1198.12,1,,,"b'b"" IMO we could somehow share the same data between the server table and the client table so that none of this would be necessary. Don\'t take me wrong", but parsing code feels bad practice. Beside that, keeping these tables in sync could very well be avoided. I could work in an alternative," unless I\'m missing something.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,4,2017-07-06 13:19:12,22.45,,,1,"b'b"" @promag That discussion is in url And yes", in the long run there are absolutely better solutions (ideally the cli would have none of this information and requests it from the server), but in the short term I think adding this check is good.  Anyhow I don\'t care deeply if this doesn\'t get merged, I use this script myself," and @TheBlueMatt requested some way to check this in #10751 so I thought it\'d be useful for some other people too...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,5,2017-07-06 13:19:12,9.12,,,1,"b""b' Thanks for pointing that out.  @laanwj could this be executed in pre-commit hook?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,6,2017-07-06 13:19:12,85.67,,1,,"b""b'  Sure"," would be a matter of adding the line to execute it to the or script.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,7,2017-07-06 13:19:12,155.35,,1,,"b""b' @laanwj another PR or care to add it here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,8,2017-07-06 13:19:12,1004.77,,1,,b'b\' You have to do it locally. Hooks are not part of the repository (forsecurity reasons, among others.) Shipping some examples of hooks would workbut that\\\'s definitely out of scope here. On Jul 7, 2017 4:15 PM,"Jo\\xc3\\xa3o Barbosa""  wrote:>\''
bitcoin	10753	closed	9	ryanofsky	2017-07-06 13:19:12	194.68		+1		b""b' I think this might be simpler and more robust if it were written as a c++ unit test that just accesses the global variables directly, instead of a python tool that has to parse c++ with regexes.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,closed,2017-07-08 11:19:06,1319.9,2,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,10,2017-07-06 13:19:12,71.43,,1,,"b""b' @laanwj reason?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,11,2017-07-06 13:19:12,96.75,,1,,"b'b"" @laanwj did you close this because you\'re planning to propose an alternative?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,12,2017-07-06 13:19:12,63.75,,,1,"b'b"" @jnewbery No", I don\'t have the time nor motivation to work on this (it works for me)," but I\'m looking forward to a better alternative as no one seems to like this solution. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,13,2017-07-06 13:19:12,8.93,,,1,"b'b"" I like it! At the very least I like it better than no tests at all.  Running code beats suggestions of better ways to do it without any code.  If you change your mind"," I\'m happy to review.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,reopened,2017-07-10 14:19:06,180.0,2,8,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,14,2017-07-06 13:19:12,538.43,,1,,"b""b' @laanwj do you still plan to work on this? If not"," do you mind if I take over?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,15,2017-07-06 13:19:12,465.25,1,,,"b'b"" I\'ll get to this after 0.15.0. There\'s not much to be done here but I\'m completely distracted at the moment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,16,2017-07-06 13:19:12,556.13,,1,,"b""b' Rebased and updated for new table syntax without safemode flag.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,17,2017-07-06 13:19:12,52.25,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,18,2017-07-06 13:19:12,29.88,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,19,2017-07-06 13:19:12,135.08,,,1,"b""b' Concept ACK. If somebody writes a unittest alternative later", it is easy to replace one for the other," not a good reason to stop this. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,20,2017-07-06 13:19:12,34.8,,1,,"b'b"" Addressed @jnewbery\'s nits and updated for  conflict.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,21,2017-07-06 13:19:12,185.08,,,1,"b'b"" Tested ACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d  It\'s definitely working: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,22,2017-07-06 13:19:12,2.1,,,1,"b""b' Thanks for testing. Yep"," we should merge #11267 first to not break the tests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,23,2017-07-06 13:19:12,1086.25,,,1,"b""b' utACK 77aa9e59ea0e6a000a0aea5dec4ef9585356147d'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,closed,2017-09-13 18:20:38,241.53,3,13,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10753,closed,-,-,-,3,13,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,opened,2017-07-15 23:48:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,title,2017-07-15 23:48:45,00:00,,1,,"b""b' (finally) remove getinfo'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,body,2017-07-15 23:48:45,00:00,,1,,"b""b' I see no reason not to have done this in 0.13"," let alone for 0.15.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,1,2017-07-15 23:48:45,291.92,,1,,"b""b' NACK for 0.15  Although has been known among Bitcoin Core developers as being deprecated for a long time", it was only documented and marked as deprecated in 0.14. Furthermore, a large number of projects which use the RPC commands rely on to make sure that the RPC server is available. Thus removing now would break a lot of things. I think that before we remove  ," we need to inform projects that use that it will be removed and that they need to change to using a different RPC command.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,2,2017-07-15 23:48:45,729.02,,1,,"b'b"" Really? Didn\'t realize we only marked it deprecated in 0.14. Ugh"," OK :(.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,closed,2017-07-16 16:49:42,1020.95,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,3,2017-07-15 23:48:45,390.02,,1,,"b""b' This should be rebased on #10841 and merged to master as soon as v0.15 has been cut.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,reopened,2017-07-16 23:30:02,400.33,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,4,2017-07-15 23:48:45,10.75,,1,,"b""b' OK", rebased on #10841," this should be un-tagged 15 and tagged 16.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,5,2017-07-15 23:48:45,398.68,,,1,"b'b"" This is way too late for 0.15"," it\'s never a good idea to remove functionality last minute.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,6,2017-07-15 23:48:45,1.22,,1,,"b""b' I think it was reopened intended for 0.16'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,7,2017-07-15 23:48:45,486.57,,1,,"b""b' #10841 was rejected in favour of #10857"," which has now been merged. This should be rebased on master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,8,2017-07-15 23:48:45,92.1,,1,,"b""b' Rebased on master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,9,2017-07-15 23:48:45,1098.55,,1,,"b""b' 0.15 has been split off"," I suppose we can merge this now. Needs rebase again though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,10,2017-07-15 23:48:45,186.88,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,11,2017-07-15 23:48:45,38.62,,1,,"b""b' Needs silent merge conflict resolved. Also needs mention in the release notes.  The following patch should do:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,12,2017-07-15 23:48:45,423.08,,1,,"b""b' Fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,13,2017-07-15 23:48:45,1217.9,,1,,"b""b' Needs rebase. A couple comments:  why not test all get*info RPC methods in the bitcoin_ test? Need to remove reference to getinfo in the developer notes.  Feel free to take and squash fixup commit here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,14,2017-07-15 23:48:45,30.83,,1,,"b""b'  Agree"," though it needs rebase again.  utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,15,2017-07-15 23:48:45,5.1,,1,,"b""b' utACK f54f200b4263b884c86dd1a8644015ca75de4e35'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,16,2017-07-15 23:48:45,174.33,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,17,2017-07-15 23:48:45,12.35,,1,,"b""b' Please address comment url  :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,18,2017-07-15 23:48:45,6.6,1,,,"b""b' Heh", oops," missed that. Fixed now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,19,2017-07-15 23:48:45,45.48,,1,,"b'b""  @TheBlueMatt you still didn\'t get the developer-notes change from url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,20,2017-07-15 23:48:45,81.48,,,1,"b""b' Grrr"," fixed now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,21,2017-07-15 23:48:45,11.27,1,,,"b""b' Sorry"," missing [patch]url  from @MarcoFalke?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,22,2017-07-15 23:48:45,3.87,,1,,"b""b' (finally) re-utACK aece8a4637f0d097e4be497bc82d59b37244d245.  @promag No one writes release notes anyway. I stopped caring.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,23,2017-07-15 23:48:45,3.0,,1,,"b'b""  Well as you wrote them already it\'d make sense to include them.  But yes"," people are really lazy with regard to writing release notes. Maybe the reminder issue was a bad idea as it encourages people to delay writing them :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,closed,2017-09-06 23:32:47,2.75,2,21,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,24,2017-07-15 23:48:45,13.7,,1,,"b'b""  Huh? Now you\'ve removed the changes to to test all get*info RPCs. Was that intentional?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,25,2017-07-15 23:48:45,81.1,,1,,"b""b' No? The merged commit url  has getwalletinfo and getblockchaininfo in it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,26,2017-07-15 23:48:45,1114.27,,,1,"b""b' My suggestion in url  was to improve coverage by testing all get*info RPCs and also update the developer notes. I included a link to a commit that improved test coverage and made the test code more compact and readable.  No big deal. It was a suggestion"," but this PR is fine as is. Post-commit ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,27,2017-07-15 23:48:45,1135.45,,1,,"b""b' @jnewbery If it is worth it"," just submit a pull for it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,28,2017-07-15 23:48:45,1146.53,,1,,"b'b"" @MarcoFalke it\'s not worth a PR""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,29,2017-07-15 23:48:45,1156.27,1,,,"b""b' @jnewbery ah", ok, someone linked toa  different version of that that only tested 2 of the get*infos and I took that one instead," sorry I missed the full version.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,30,2017-07-15 23:48:45,788.12,,1,,"b""b'  IMO release notes should be on the same level as source code. If a patch raises releases notes then those belong to that patch and should be reviewed", fixed," etc..'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,31,2017-07-15 23:48:45,259.08,,1,,"b'b""  Agree. I\'ve been mentioning that in pulls and tagged some with the \'Needs release notes\' badge. Usually it has been left ignored.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10838,closed,-,-,-,3,27,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,opened,2017-07-24 23:51:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,title,2017-07-24 23:51:31,00:00,,1,,"b""b' New filedoc describing how to partition files to ensure fast initial blockchain synchronization..'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,body,2017-07-24 23:51:31,00:00,,,1,"b""b' After native build from source on Mac OS", my initial attempts to synchronize the blockchain were very very slow.  Upon finding [Issue Sync Taking Too Long]url  I found discussion by all and comments by @sipa in particular to be very useful, and reorganized $datadir folders on my local macOS  and summarized steps taken in filedoc.  These comments might find their audience more appropriately elsewhere, please feel free to suggest," thank you very much. -jimhash Note: This looks to be logged as issue: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,1,2017-07-24 23:51:31,62.07,1,,,"b'b"" I think you missed something. There are three directories that matter: * $ (raw blocks) * $ (LevelDB database with information about raw blocks) * $ (LevelDB database that holds the UTXO set)  The first is high-bandwidth", low IO. The second has hardly any activity at all. The third is where all activity happens, and is critical for performance.  You should not separate the blocks from the  directory," as things may get ugly if they\'re out of sync. You can however put the chainstate on a  device.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,2,2017-07-24 23:51:31,21.02,,1,,b'b\' Hi @sipa, thank you very much for the prompt follow up.  Per your feedback," I have updated the doc to explicitly call out that chainstate folder must also stay on a fast (internal) disk.  The ""file-"" notes I made should describe:  Installing $datadir to local internal disk (so ""chainstate"" will never need to move).  bitcoind (though maybe this isn\\\'t necessary). Move the ""index"" files up one folder level.  Move the ""blocks"" folder off the internal disk. Go to the new external ""blocks"" folder and soft-link back to the new ""index"" location. Go to the original internal drive ""data"" location and link the now external ""blocks"" folder.  Again"," the ""chainstate"" folder remains on the internal disk and never needs to move.  Again these ""file-"" notes are not the direct route I took", but (if correct) might save _the next person_ considerable delay in initial blockchain synchronization.  To your point even though these lowIOfrequency LevelDb and highIOfrequency blockchain files are physically separated on separate disks," _they are kept in sync via the soft links_ created.  _Maybe ultimately a more natural configuration of these files would be to have the ""index"" folder up a level to start with._  That\\\'s what makes moving these folders confusing in my opinion.  Thank you again very much for the prompt feedback", very flattering, thanks.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,3,2017-07-24 23:51:31,882.72,,,1,"b'b\' ""file-""has been updated to highlight the need to keep ""chainstate"" folder on a fast (internal) drive in addition to ""index"" files as per @sipa.  Thanks @fanquake for adding the label. This issue seems also related to ""installation""  ""configuration""; I did not see either of these as bitcoin project label categories", was thinking they might prove useful as well.  Thank you both for your guidance.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,4,2017-07-24 23:51:31,249.42,1,,,"b'b"" Your document is still suggesting to split the blocks/ directory from the / directory. Please don\'t do that; it\'s dangerous (they need to be in sync)"," and unnecessary (the / directory hardly sees any I/O). You should just suggest to move the chainstate/ to a faster drive compared to blocks/.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,5,2017-07-24 23:51:31,1000.97,,1,,"b""b'  Except with I guess :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,6,2017-07-24 23:51:31,171.72,,,1,"b""b' @jimhashhq I think this is pretty good"," certainly as a start. Can you please address the comments and squash?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,7,2017-07-24 23:51:31,7.52,1,,,"b'b""  Also: sometimes there\'s the problem with the leveldb not supporting the filesystem that the directory points to. I think this happens with some network filesystems. If is on the same partition that will never work :/ (see e.g. #10787)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,8,2017-07-24 23:51:31,566.77,,1,,b'b\' My apologies for not getting back sooner," I was ill but am feeling better. I think my intent here was just to  my experiences with ""symlink(ing) out the block-files (the large part)"" as mentioned in issue #10787 referenced above", thanks. I was hoping this experience might prove useful to others on low end commodity hardware who wish to store the blocks on an external USB.  Thanks! \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,closed,2017-12-01 01:13:43,82.2,3,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,9,2017-07-24 23:51:31,380.45,,1,,"b""b'  Why close?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,reopened,2017-12-13 16:41:24,927.68,3,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,closed,2018-03-05 16:52:28,11.07,3,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10922,closed,-,-,-,3,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,opened,2017-07-31 10:32:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,title,2017-07-31 10:32:04,00:00,,1,,"b""b' Improve readability of DecodeBase58Check(...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,body,2017-07-31 10:32:04,00:00,,,1,"b""b' Use the more readable form ...   ... instead of ...   Has the added benefit of eliminating a spurious static analyzer warning about improper use of negative values.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,1,2017-07-31 10:32:04,258.68,,1,,"b""b' utACK 6ab2ce8.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,2,2017-07-31 10:32:04,1142.17,,1,,"b""b' This seems to be an over-cosmetic change... not sure if its worth. utACK 6ab2ce83d9268fc81ac3bec41365ce2d2adfd349'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,closed,2017-08-24 07:18:22,1246.3,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,reopened,2017-08-24 07:19:22,1.0,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,3,2017-07-31 10:32:04,1291.0,,,1,"b""b' @laanwj @MeshCollider @sipa Thanks for reviewing! Changed to  . Looks good? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,4,2017-07-31 10:32:04,61.03,,1,,"b""b' Just confirmed this should be identical behavior"," ACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,5,2017-07-31 10:32:04,1404.23,,1,,b'b\' Travis have completed without errors," but GitHub still reports ""1 pending check"". \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,6,2017-07-31 10:32:04,757.52,1,,,"b""b' Seems like Travis CI is stuck. Anyone able to re-start Travis? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,7,2017-07-31 10:32:04,1305.4,,1,,"b""b' utACK c6a995e7e5e6ae37dc1684f6060038e96864e947'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,closed,2017-10-09 14:41:46,442.4,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10961,closed,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,opened,2017-08-05 14:36:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,title,2017-08-05 14:36:03,00:00,,1,,"b""b' Return service bits 6 and 8 on Aug 1"," 2018'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,body,2017-08-05 14:36:03,00:00,,1,,"b""b' #10982 started disconnecting service bits 6 and 8 until aug 1",2018," the code to do so should be removed on or after that date.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,1,2017-08-05 14:36:03,19.98,,1,,"b""b' ~NAK", this code causes compatible clients to prematurely split the network.~  Edited:  PR #10982 will split the network due to bit-7 inclusion.  This issue does not refer to bit-7.  It is noted that disconnecting service bits should only be enabled after peers have started banning each other on the network," thus proving the safety of service bit disconnect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,2,2017-08-05 14:36:03,403.47,,1,,"b""b' Commits to be reverted after that date: * 1de73f4e19fe789abb636afdb48a165a6fd31009 * 5e35cd9'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,closed,2017-11-08 18:44:20,248.28,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,3,2017-08-05 14:36:03,1314.33,,1,,"b""b' c.f.  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,reopened,2017-12-06 01:56:16,431.93,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,closed,2018-07-20 13:14:24,678.13,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,10993,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,opened,2017-08-08 01:38:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,title,2017-08-08 01:38:46,00:00,,1,,"b""b' Tests: Add a lint check for trailing whitespace'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,body,2017-08-08 01:38:46,00:00,,,1,"b'b"" This adds a new CHECK_DOC check that looks for newly introduced trailing whitespace. Existing trailing whitespace (of which there is plenty!) will not trigger an error.  This is written in a generic way so that new lint-*.sh scripts can be added to /"," as I\'d like to contribute additional lint checks in the future.  Example of what a lint failure looks like in Travis: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,1,2017-08-08 01:38:46,806.47,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,2,2017-08-08 01:38:46,384.58,,,1,"b'b"" @MarcoFalke @practicalswift Thanks for the suggestions"," I\'ve made these changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,3,2017-08-08 01:38:46,14.82,,1,,"b'b"" If this is merged", I\'ll submit some whitespace-only PRs to clean up various files in the project (probably starting with markdown files, and then moving onto code if that goes well). I feel like it\'s not worth sending out any whitespace PRs though until this has landed," since otherwise there could be new regressions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,closed,2017-08-09 02:21:21,42.58,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,reopened,2017-08-09 02:21:23,0.03,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,4,2017-08-08 01:38:46,302.5,,1,,b'b\' @eklitzke Whitespace only PRs aren\\\'t likely to be accepted. Basically they disrupt other work and patches, and create rebasing issues," without providing much value. See the first point in the [dev notes]url  ""Do not submit patches solely to modify the style of existing code."" We also have [clang-format rules]url  that can be used against  code", which should handle formatting.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,5,2017-08-08 01:38:46,12.5,,1,,"b""b' @fanquake Noted. Although I did have problems with  ", since many of the existing files are not formatted properly, so running those files through caused needless code churn. In any event," this check will prevent the introduction of new trailing whitespace.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,6,2017-08-08 01:38:46,524.27,,1,,"b""b' Please squash your commits according to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,7,2017-08-08 01:38:46,123.35,1,,,"b'b"" Can we ignore violations introduced in the directories of our imported dependencies?  I\'m thinking about: * * *  Also", what about adding a similar check for introductions of new  :s in files with suffixes  ,  ,  ," and  ? Again excluding the imported dependencies.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,8,2017-08-08 01:38:46,1236.67,,1,,"b""b' @eklitzke Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,9,2017-08-08 01:38:46,966.78,,1,,"b""b' Closing due to inactivity. Please ping me to get this reopened.  This is up for grab by other contributors.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,closed,2017-09-10 02:30:42,9.32,1,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11005,closed,-,-,-,1,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,opened,2017-08-10 08:06:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,title,2017-08-10 08:06:51,00:00,,1,,"b""b' [wallet] getbalance: Add option to include non-mempool UTXOs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,body,2017-08-10 08:06:51,00:00,,,1,b'b\' Currently, if the wallet generates a transaction that cannot currently go into the mempool (e.g. due to too-long-mempool-chain), the wallet UTXOs related to this will vanish from  ," giving the appearance that the user has less funds than they actually do.  From a ""get spendable balance"" perspective", this is perfectly valid, but users may sometimes want to see their actual balance, regardless of whether they can spend it or not at that time.  This PR adds an option (default=false) to which, when  , will consider non-mempool transactions as trusted, and thus display these in the tally.  Note: this flag does nothing when a user specifies an account (i.e.  ), and the legacy balance in fact already does what does, given the right arguments.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,1,2017-08-10 08:06:51,60.08,,1,,"b'b"" Not sure why is failing. It\'s not touching anything I changed (and the test passes on my fork\'s travis & when running the test locally / via ...). @jnewbery thoughts?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,2,2017-08-10 08:06:51,29.53,,1,,"b'b"" The zapwallettxes\' failure is intermittent. Respinned travis.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,3,2017-08-10 08:06:51,363.1,1,,,"b'b"" I\'d hoped that #10330 had fixed the zapwallettxes intermittency. @MarcoFalke do you have an example of it failing (the failure on this PR is no longer available since the task was restarted in Travis).  (apologies for being off-topic)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,4,2017-08-10 08:06:51,264.38,1,,,"b'b"" @jnewbery Sorry I didn\'t keep track of the exact failure this time"," I assume it was one of the known issues that popped up recently.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,5,2017-08-10 08:06:51,383.3,,,1,"b'b"" @promag @jnewbery Thanks for the review!  * url  fixes comment * url  fixes the inconsistency in variable names", but currently retains the name. I\'m not sure I agree with the longer version @jnewbery suggested, but I\'m up for changing this to something more intuitive if people feel it\'s worthwhile. * url  adds the feature to (tested in url  I was not entirely sure about the logic on this one, but I went with  ," changed from  . This means some balance will overlap between and but I think that\'s ok. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,6,2017-08-10 08:06:51,173.87,,1,,"b""b'  again"," @jnewbery: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,7,2017-08-10 08:06:51,537.6,,1,,"b'b"" IMO from the wallet point of view those UTXO should always be part of the balance"," and in that case this should be a bug fix and not require more options. WDYT?  Edit: unless defaults to available balance. If that\'s the case the option can be (default false) or (default true).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,8,2017-08-10 08:06:51,893.38,,1,,"b'b"" Yes is available balance", I think, so I don\'t think it should default to including these. Of course, there is the option of making the coin select include these coins even though they\'re not in the mempool, in which case could include them, but that\'s for another time (and PR).  Hm," seems like a better name for it than  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,9,2017-08-10 08:06:51,1300.58,,,1,b'b\' Rebased this," but now it is not available unless the user enables deprecated account. I could  1. Add a new ""index 0"" parameter to the non-deprecated variant", replacing  , and allowing up to 1 argument for the new style. This obviously could be potentially confusing. 2. Keep the index and allow up to 4 indices in new style, but require that items at index 0..2 are all null. Fine for style but ughy otherwise.  Ping @jnewbery.  Edit: I went with the second option in c8c147a.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,10,2017-08-10 08:06:51,738.3,1,,,"b'b"" I think I prefer option (1). Overloading parameters can be confusing", but I think it\'s better in this case because:  the meaning of argument 0 is not ambiguous it\'s fixed by setting the argument. is a bool and is a string the  ," and parameters will be removed in the next release. going with option (2) will lock us in to having 3 dummy arguments for future releases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,11,2017-08-10 08:06:51,492.95,,1,,"b'b"" @jnewbery I definitely *prefer* option 1 but I wasn\'t sure it would be disruptive. Will switch.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,12,2017-08-10 08:06:51,9.2,,1,,b'b\' @jnewbery See 0c28d8f -I split up the descriptions based on deprecation, and fixed several text issues (e.g. RPC examples using the deprecated stuff). I think this change alone is worth a PR," to be honest.  FWIW I also removed from the deprecated variant since we\\\'re removing it anyway.  Since ""accounts"" is not JSON-parsed and ""include_unavailable"" wants to be"," I am temporarily doing the conversion manually (testing for ""true"" or ""1""). Once accounts are removed", we can add param 0 to  and remove the manual stuff.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,13,2017-08-10 08:06:51,324.22,,1,,"b""b' @jnewbery  Looking at the tests (it was a while since I wrote this)"," I think the idea was that it should be counted in both (see wallet_ changes). Is this problematic?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,14,2017-08-10 08:06:51,386.17,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,15,2017-08-10 08:06:51,919.37,,1,,"b'b"" Needs rebase.  @kallewoof how urgently do you want this? If it can wait until after v0.17"," then it\'ll probably be easier and a smaller diff once the accounts API code has been removed. I intend to do that as soon as 0.17 is branched.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,16,2017-08-10 08:06:51,482.12,,1,,"b""b' @jnewbery Not urgent. I will wait until 0.17 branches off.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,17,2017-08-10 08:06:51,991.03,,,1,"b""b' Happy birthday. Closing due to lack of interest.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,closed,2018-08-10 03:16:02,1149.18,3,12,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,18,2017-08-10 08:06:51,914.85,,1,,"b'b"" I commit to reviewing this after it\'s rebased on #13825""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,19,2017-08-10 08:06:51,631.6,,,1,"b""b' @jnewbery OK!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,reopened,2018-08-11 05:02:29,106.45,3,13,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,20,2017-08-10 08:06:51,1251.52,1,,,"b'b"" @jnewbery I began to rebase this", but self-reflectively decided this is a bit too invasive for the improvement it provides. I think it\'s a bit weird that \'getbalance\' will suddenly drop significantly just because you ran out of chain length," but I\'m no longer confident this is the right approach. Sorry for wasting your time!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,closed,2018-09-10 01:54:00,1251.52,4,13,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,21,2017-08-10 08:06:51,32.55,1,,,"b""b'  Not wasted. No need to apologise!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11020,closed,-,-,-,5,13,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,opened,2017-08-15 15:47:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,title,2017-08-15 15:47:05,00:00,,1,,"b""b' refactor: Make all #includes relative to project root'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,body,2017-08-15 15:47:05,00:00,,,1,b'b\' (inspired by discussion here: url  and url This makes all includes in the project relative to the project root only.  There are some advantages to this, both for developers and for the compiler:  It\\\'s immediately apparent where an included file is when reading the code There is no confusion if a certain filename is not unique in the project (so there can be an and without potential confusion, as discussed in #10976) By switching to includes the compiler doesn\\\'t have to look everywhere," resulting in less \\\'probing\\\' before looking in the include path which can affect compilation performance. For example right now when includes """"", it will look in first.  Most of the changes by number are in as all the source files there assume that they can include from there. I\\\'ve separated this out, so that we could decide to do this only for non-qt files first ,for example.  Ping @theuni @ryanofsky\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,1,2017-08-15 15:47:05,9.75,,1,,"b""b' Concept ACK \\xf0\\x9f\\x91\\x8d '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,2,2017-08-15 15:47:05,20.35,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,3,2017-08-15 15:47:05,70.52,,1,,"b""b' Concept ACK.  Are you planing on squashing everything to a single commit? Intermediate commits are broken (eg 15d3a6d3343f27e8c01faa5674a2fe406488eac3 breaks building  )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,4,2017-08-15 15:47:05,15.45,,1,,"b'b"" I think it is possible to do more of this as a scripted diff. I was looking into this this morning"," and the following command seemed to work well for switching all include paths that don\'t depend on the current directory from to syntax: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,5,2017-08-15 15:47:05,11.78,1,,,"b""b' My branch is here (2 commits): url It also updates developer notes. Feel free to take anything there that might be useful'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,6,2017-08-15 15:47:05,26.27,,,1,"b'b""  Yes", before merging we could squash it. Before then, the current order of commits is easer to keep up to date with master. I\'m not entirely sure how to rebase on top of your changes, or how to combine it.  My changes are more complete. For example I\'ve changed around too, as well as all the includes in  . I think I completely switched over everything.  I\'ve cherry-picked the developer notes change," thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,7,2017-08-15 15:47:05,5.87,,,1,"b""b' Great. utACK cbe3ac57583a683a82a05ab93dec1fb4877ba5c4'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,8,2017-08-15 15:47:05,44.83,,1,,"b'b"" @ryanofsky  I\'ve adopted your script a bit and now it gets even closer: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,9,2017-08-15 15:47:05,16.7,,1,,"b'b"" Changed the base commit to modified @ryanofsky\'s script. The rest of the changes is much smaller now.  Also the individual commits should build because I moved the build system change to the end. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,10,2017-08-15 15:47:05,709.13,,1,,"b""b' 641d4c5 \\xf0\\x9f\\x91\\x8f  utACK 895330f.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,11,2017-08-15 15:47:05,1004.02,1,,,b'b\' This makes me nervous without a subdir-as-a-namespace. gcc (i assume most others as well) searches -I\\\'s left-to-right," meaning that something with a generic name like ""config.h"" could end up including something from the system if we manage to add our ""-I(builddir)"" after some other path.  Testing with for example", I was able to change by copying amount.h to /, and (to mimic an accidental ordering bug) re-arranging the -I\\\'s on the compile line. Trying that with it at least got confused by the clashing files due to the primitives subdir.  Granted, that\\\'s pretty paranoid.  Much more likely if there was an ordering bug though, would be a compilation failure. A subdir would at least save us from those. Would it make sense to use and as a precaution? \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,12,2017-08-15 15:47:05,422.57,1,,,"b'b\'  But isn\\\'t that true for as well? The only difference is that """" tries relative to the current directory first. It does not (IIRC) reverse -I order. In the example that I give in the OP", includes  , it will look in  , failing that it goes down the entire -I chain, to finally try in  . So that would find first.  Duplicated include files can lead to more confusion with relative includes as it  can be ambiguous which one is included. At least with you can just follow the include path when figuring out the issue. I think on the longer run we should make sure all source files are in directories under  , not itself. Many bigger open source projects seem to have this convention.  I really dislike using top_builddir as an intermediate step though. It\\\'d work, but feels dirty to add before each include. I\\\'d rather just close this.  Regarding active paranoia," someone could still put a in your include path and it will take precedence.  Only insanely disciplined relative inclusion (using explicit and  ) could avoid that ""attack""", I think. That\\\'s... crazy though :( In any case if your include path is compromised, there are lots of other ways to create harm.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,13,2017-08-15 15:47:05,7.05,,1,,"b""b'  Do you know of any projects that do this?  Closing this for now", on further thought," this creates more issues than it solves I guess. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,closed,2017-08-17 07:11:22,924.28,3,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,14,2017-08-15 15:47:05,137.58,1,,,b'b\'  Is this only being closed because of the issue theuni raised? Or are there other problems?  My earlier scripted diff ([branch]url  is neutral with respect to the issue theuni is talking about because it leaves includes that are relative to the source directory intact," and only modifies includes that rely on the include path from  to """". So for example", if an amount.h were added to an prepended include path, nothing different would happen than already happens now.  More broadly though, it is hard to imagine taking this issue seriously," because the project already uses a mix of  and """" includes"," and all of the existing  includes (as well as nearly all the """" includes in subdirectories below src/) are already relying on the configured include paths. And as laanwj pointed out this change is only removing include paths", not adding any, so it is strictly decreasing whatever ambiguities there may be in interpreting #include directives compared to what we are doing now.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,15,2017-08-15 15:47:05,78.67,1,,,b'b\'  Because of the issue theuni raised. I don\\\'t see any way out of that, he\\\'s right and we\\\'re already screwed, and this doesn\\\'t make it better (though it does make things more consistent, if they mess up! I have to stand by that. You won\\\'t have file A including the right copy and file B including the wrong one, for instance.). I did think about that, and that would be true if we weren\\\'t using subdirectories ourselves. However as soon as we in one of the subdirectories of  ," the same thing happens! This is what I mean with ""insanely disciplined relative inclusion"" two posts back. would be unambiguous (if you do this consistently", I guess you could even remove completely for the project itself). \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,16,2017-08-15 15:47:05,13.03,,1,,"b'b\' In Qt I think each module uses """" for self headers and  for other module headers and everything else. But *public* headers always use .\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,17,2017-08-15 15:47:05,4.63,,1,,"b'b""  I\'m somewhat starting to like this idea. Make all includes relative and correct", then lose  . What are the drawbacks?  Edit: To answer this myself, I guess things can become ambiguous if you have chains of include files including each other. E.g. including which includes  . Which util.h would be included? Darn. Yep," and we don\'t have any public headers besides  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,18,2017-08-15 15:47:05,65.18,,1,,"b'b"" @laanwj I think it\'s too early to close this. I was thinking outloud about any potential drawbacks", but that\'s not to say that this creates more problems than it solves. As you mentioned," both of those potential issues are very unlikely.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,19,2017-08-15 15:47:05,22.57,,1,,"b""b'  Could someone state clearly what two potential issues this PR causes? I think I might have missed that there is more than one issue...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,20,2017-08-15 15:47:05,21.58,1,,,"b'b"" @ryanofsky  1. Potentially causing compilation issues with generic header names (util.h for example) if -I$(builddir) isn\'t first on the list. This is already an issue due to source files in subdirs", but the likelihood increases with this change. 2. Due to 1., potentially making it easier for someone in a shared dev environment to hijack a header with no indication. I don\'t think this is realistic to worry about because there are so many worse attack vectors. This was mainly just a thought experiment for testing 1.  Again," I\'m not at all convinced that those things are real issues. Just thinking through them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,21,2017-08-15 15:47:05,20.07,,,1,"b'b"" Thanks! Just to give my opinion", I think any of the following changes would be simple and minimally disruptive improvements on the status quo:  1) A change using and everywhere that would make the build slightly more vulnerable to theuni\'s issues than we already are, but would make it more obvious what file is being included in the normal case where you don\'t have a messed up build configuration. This is implemented in the current PR.  2) A change dropping and using everywhere that would prevent the issues raised by theuni in present and future code. This should not be hard to implement with a variation of laanwj\'s scripted diff.  3) A change that would not alter current behavior at all, but just improve readability by replacing current hodgepodge of and with and  , to make it clear when the include path is supposed to be interpreted as a relative path, and when it\'s supposed to be interpreted as a full path. My []url  branch basically does this already but it would need a tweak to handle bitcoin-config.h.  Slight preference for (1) over (2) over (3), but I think any of these could be good improvements and there may be other simple solutions as well (like using or  ). If more disruptive changes are ok," it\'d also be nice to move headers in the src/ root to appropriate subdirectories. But I think that type of change would be better to handle separately and should not block simple improvements like the one implemented in this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,reopened,2017-08-24 19:51:33,760.18,6,13,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,22,2017-08-15 15:47:05,280.33,,1,,"b""b' This has acks from me", jonas, and promag," as well as concept acks from jnewbery and practicalswift and cory withdrew his objection. @laanwj can this be rebased and merged?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,23,2017-08-15 15:47:05,60.72,,1,,"b""b' I think this is open for grabs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,24,2017-08-15 15:47:05,99.6,,1,,"b""b'  What does this mean? Maybe there should be a tag for PRs where author wants someone to take over or needs help with something.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,25,2017-08-15 15:47:05,53.42,,1,,"b'b\' Ah. I think I meant ""this is *up* for grabs"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,26,2017-08-15 15:47:05,238.72,,,1,"b'b"" I\'ll rebase and open a new PR"," I\'m happy to maintain it since it already has so many ACKs""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,27,2017-08-15 15:47:05,35.37,,1,,"b""b' Closing now that #11651 is open.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,closed,2017-11-10 02:02:50,371.28,6,18,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11053,closed,-,-,-,6,18,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,opened,2017-08-27 14:55:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,title,2017-08-27 14:55:23,00:00,,1,,"b""b' RC2 Exits After Initialization'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,body,2017-08-27 14:55:23,00:00,,1,,"b""b' I installed RC2 on my Windows7 box", and it exits shortly after initialization consistently.  The debug log contents look OK, with the only errors contained in the snippet below:  2017-08-27 14:00:58 GUI: PaymentServer::LoadRootCAs: Loaded  56  root certifica es 2017-08-27 14:00:58 tor: Error connecting to Tor control socket 2017-08-27 14:00:58 tor: Not connected to Tor control port 127.0.0.1:9051, tryi g to reconnect 2017-08-27 14:00:58 GUI: TransactionTablePriv::refreshWallet 2017-08-27 14:00:59 trying connection 79.195.178.192:8333 lastseen=366.6hrs 2017-08-27 14:00:59 Added connection peer=0 2017-08-27 14:01:00 tor: Error connecting to Tor control socket 2017-08-27 14:01:00 tor: Not connected to Tor control port 127.0.0.1:9051, tryi g to reconnect 2017-08-27 14:01:03 tor: Error connecting to Tor control socket 2017-08-27 14:01:03 tor: Not connected to Tor control port 127.0.0.1:9051, tryi g to reconnect 2017-08-27 14:01:04 connection to 79.195.178.192:8333 timeout 2017-08-27 14:01:04 trying connection 81.163.206.173:8333 lastseen=175.4hrs 2017-08-27 14:01:04 connection from 213.5.31.38:54224 accepted 2017-08-27 14:01:04 Added connection peer=1 2017-08-27 14:01:04 connection from 52.192.180.114:40814 accepted 2017-08-27 14:01:04 connection from 54.191.174.46:38180 dropped (banned) 2017-08-27 14:01:04 received: version (106 bytes) peer=1 2017-08-27 14:01:04 sending version (102 bytes) peer=1 2017-08-27 14:01:04 send version message: version 70015, blocks=482210, us=[::] 0, peer=1 2017-08-27 14:01:04 sending verack (0 bytes) peer=1 2017-08-27 14:01:04 receive version message: /bitcoin-seeder:0.01/: version 600 0, blocks=350000, us=73.119.168.246:8333, peer=1 2017-08-27 14:01:04 added time data, samples 2," offset -209 (-3 minutes) 2017-08-27 14:01:04 sending alert (168 bytes) peer=1 2017-08-27 14:01:05 received: verack (0 bytes) peer=1 2017-08-27 14:01:05 sending ping (0 bytes) peer=1 2017-08-27 14:01:05 socket closed 2017-08-27 14:01:05 disconnecting peer=1  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,1,2017-08-27 14:55:23,1168.77,,1,,"b""b' For the record"," I just installed RC3 and it exhibits the same problem.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,2,2017-08-27 14:55:23,548.23,,,1,"b""b' Please post the entire  file. The snippet provided does not give anything meaningful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,3,2017-08-27 14:55:23,26.5,1,,,"b'b\' Below is the entire debug output from my latest attempt to start rc3:  2017-08-29 19:37:52 Bitcoin version v0.15.0rc3 2017-08-29 19:37:52 InitParameterInteraction: parameter interaction: -whitelistforcerelay=1 -2017-08-29 19:37:52 Assuming ancestors of block 0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a have valid signatures. 2017-08-29 19:2017-08-29 19:37:53 RandAddSeedPerfmon: 240344 bytes 2017-08-29 19:37:53 GUI: requestInitialize : Requesting initialize 2017-08-29 19:37:53 GUI: initialize : Running initialization in thread 2017-08-29 19:37:53 Default data directory C:\\\\Users\\\\djm\\\\AppData\\\\Roaming\\\\Bitcoin 2017-08-29 19:37:53 Using data directory F:\\\\Bitcoin 2017-08-29 19:37:53 GUI: ""registerShutdownBlockReason: Successfully registered: Bitcoin Core didn\\\'t yet exit safely..."" 2017-08-29 19:37:53 Using config file F:\\\\Bitcoin\\\\ 2017-08-29 19:37:53 Using at most 125 automatic connections (2048 file descriptors available) 2017-08-29 19:37:53 Using 16 MiB out of 32/2 requested for signature cache", able to store 524288 elements 2017-08-29 19:37:53 Using 16 MiB out of 32/2 requested for script execution cache, able to store 524288 elements 2017-08-29 19:37:53 Using 4 threads for script verification 2017-08-29 19:37:53 scheduler thread start 2017-08-29 19:37:53 Allowing HTTP connections from: 127.0.0.0/8 ::1/128 10.0.0.0/24  2017-08-29 19:37:53 Binding RPC on address :: port 8332 2017-08-29 19:37:53 Binding RPC on address 0.0.0.0 port 8332 2017-08-29 19:37:53 Initialized HTTP server 2017-08-29 19:37:53 HTTP: creating work queue of depth 16 2017-08-29 19:37:53 Starting RPC 2017-08-29 19:37:53 Starting HTTP RPC server 2017-08-29 19:37:53 Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see  for rpcauth auth generation. 2017-08-29 19:37:53 Registering HTTP handler for / (exactmatch 1) 2017-08-29 19:37:53 Registering HTTP handler for /wallet/ (exactmatch 0) 2017-08-29 19:37:53 Starting HTTP server 2017-08-29 19:37:53 HTTP: starting 4 worker threads 2017-08-29 19:37:53 Entering http event loop 2017-08-29 19:37:53 init message: Verifying wallet(s)... 2017-08-29 19:37:53 Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010) 2017-08-29 19:37:53 Using wallet  2017-08-29 19:37:53 CDBEnv::Open: LogDir=F:\\\\Bitcoin\\\\database ErrorFile=F:\\\\Bitcoin\\\\ 2017-08-29 19:37:53 Cache configuration: 2017-08-29 19:37:53 * Using 2.0MiB for block index database 2017-08-29 19:37:53 * Using 8.0MiB for chain state database 2017-08-29 19:37:53 * Using 290.0MiB for in-memory UTXO set (plus up to 286.1MiB of unused mempool space) 2017-08-29 19:37:53 init message: Loading block index... 2017-08-29 19:37:53 Opening LevelDB in F:\\\\Bitcoin\\\\blocks\\\\index 2017-08-29 19:37:53 Recovering log #548 2017-08-29 19:37:53 Level-0 table #550: started 2017-08-29 19:37:53 Level-0 table #550: 179 bytes OK 2017-08-29 19:37:53 Delete type=0 #548 2017-08-29 19:37:53 Delete type=3 #546 2017-08-29 19:37:53 Opened LevelDB successfully 2017-08-29 19:37:53 Using obfuscation key for F:\\\\Bitcoin\\\\blocks\\\\index: 0000000000000000 2017-08-29 19:37:58 LoadBlockIndexDB: last block file = 979 2017-08-29 19:37:58 LoadBlockIndexDB: last block file info: CBlockFileInfo(blocks=28, size=27978569, heights=482183...482210, time=2017-08-27...2017-08-27) 2017-08-29 19:37:58 Checking all blk files are present... 2017-08-29 19:37:59 LoadBlockIndexDB: transaction index disabled 2017-08-29 19:37:59 Opening LevelDB in F:\\\\Bitcoin\\\\chainstate 2017-08-29 19:37:59 Recovering log #871312 2017-08-29 19:37:59 Level-0 table #871322: started 2017-08-29 19:37:59 Level-0 table #871322: 308 bytes OK 2017-08-29 19:37:59 Delete type=2 #870302 2017-08-29 19:37:59 Delete type=2 #870303 2017-08-29 19:37:59 Delete type=2 #870304 2017-08-29 19:37:59 Delete type=2 #870305 2017-08-29 19:37:59 Delete type=2 #870306 2017-08-29 19:37:59 Delete type=2 #870311 2017-08-29 19:37:59 Delete type=0 #871312 2017-08-29 19:37:59 Delete type=3 #871310 2017-08-29 19:37:59 Opened LevelDB successfully 2017-08-29 19:37:59 Using obfuscation key for F:\\\\Bitcoin\\\\chainstate: c15290b8f7b37d9d 2017-08-29 19:37:59 Loaded best chain: hashBestChain=000000000000000000e725b7df7ae4d183a9146f9ac3a0eb0ecd1aa0b152abda height=482210 date=2017-08-27 13:31:20 progress=0.997589 2017-08-29 19:37:59 init message: Rewinding blocks... 2017-08-29 19:38:00 Writing final batch of 0.00 MiB 2017-08-29 19:38:00 Committed 0 changed transaction outputs (out of 0) to coin database... 2017-08-29 19:38:00 init message: Verifying blocks... 2017-08-29 19:38:00 Verifying last 6 blocks at level 3 2017-08-29 19:38:00 [0%]...Compacting 1@0 + 1@1 files 2017-08-29 19:38:00 Generated table #871324@0: 1 keys, 207 bytes 2017-08-29 19:38:00 Compacted 1@0 + 1@1 files =2017-08-29 19:38:00 compacted to: files[ 0 1 45 252 1025 0 0 ] 2017-08-29 19:38:00 Delete type=2 #871313 2017-08-29 19:38:00 Delete type=2 #871322 2017-08-29 19:38:01 [16%]...[33%]...[50%]...[66%]...[83%]...[99%]...Expanding@3 1+1 (2176269+2175089 bytes) to 5+1 (10877150+2175089 bytes) 2017-08-29 19:38:04 Compacting 5@3 + 1@4 files 2017-08-29 19:38:04 [DONE]. 2017-08-29 19:38:04 No coin database inconsistencies in last 7 blocks (10964 transactions) 2017-08-29 19:38:04  block index     11290ms 2017-08-29 19:38:04 Reading estimates: 98 buckets counting confirms up to 25 blocks 2017-08-29 19:38:04 init message: Loading wallet... 2017-08-29 19:38:04 Generated table #871325@3: 38554 keys, 2174677 bytes 2017-08-29 19:38:04 Generated table #871326@3: 39065 keys, 2175256 bytes 2017-08-29 19:38:04 nFileVersion = 150000 2017-08-29 19:38:04 Keys: 0 plaintext, 228 encrypted, 0 w/ metadata, 228 total 2017-08-29 19:38:04  wallet      220ms 2017-08-29 19:38:04 () = 97 2017-08-29 19:38:04 () = 633 2017-08-29 19:38:04 () = 33 2017-08-29 19:38:04 () = 482235 2017-08-29 19:38:04 nBestHeight = 482210 2017-08-29 19:38:04 torcontrol thread start 2017-08-29 19:38:04 AddLocal([2601:190:580:93ac::559f]:8333,1) 2017-08-29 19:38:04 Discover: djm-PC 2601:190:580:93ac::559f 2017-08-29 19:38:04 AddLocal([2601:190:580:93ac:b502:1772:28c5:87ea]:8333,1) 2017-08-29 19:38:04 Discover: djm-PC 2601:190:580:93ac:b502:1772:28c5:87ea 2017-08-29 19:38:04 AddLocal([2601:190:580:93ac:c4:120b:881e:39d3]:8333,1) 2017-08-29 19:38:04 Discover: djm-PC 2601:190:580:93ac:c4:120b:881e:39d3 2017-08-29 19:38:04 Bound to [::]:8333 2017-08-29 19:38:04 Bound to 0.0.0.0:8333 2017-08-29 19:38:04 init message: Loading P2P addresses... 2017-08-29 19:38:04 Generated table #871327@3: 39070 keys, 2174944 bytes 2017-08-29 19:38:05 Generated table #871328@3: 39113 keys, 2175622 bytes 2017-08-29 19:38:05 Generated table #871329@3: 39444 keys, 2176163 bytes 2017-08-29 19:38:05 Generated table #871330@3: 38780 keys," 2175602 bytes 2017-08-29 19:38:05 Compacted 5@3 + 1@4 files =2017-08-29 19:38:05 compacted to: files[ 0 1 45 247 1030 0 0 ] 2017-08-29 19:38:05 Delete type=2 #869962 2017-08-29 19:38:05 Delete type=2 #869963 2017-08-29 19:38:05 Delete type=2 #869964 2017-08-29 19:38:05 Delete type=2 #869965 2017-08-29 19:38:05 Delete type=2 #869966 2017-08-29 19:38:05 Delete type=2 #869971 2017-08-29 19:38:05 Loaded 68037 addresses from 361ms 2017-08-29 19:38:05 init message: Loading banlist... 2017-08-29 19:38:05 ERROR: DeserializeFileDB: Failed to open file F:\\\\Bitcoin\\\\ 2017-08-29 19:38:05 Invalid or missing ; recreating 2017-08-29 19:38:05 Flushed 0 banned node  to 10ms 2017-08-29 19:38:05 init message: Starting network threads... 2017-08-29 19:38:05 net thread start 2017-08-29 19:38:05 addcon thread start 2017-08-29 19:38:05 init message: Done loading 2017-08-29 19:38:05 opencon thread start 2017-08-29 19:38:05 dnsseed thread start 2017-08-29 19:38:05 msghand thread start 2017-08-29 19:38:05 GUI: initializeResult : Initialization result:  true 2017-08-29 19:38:05 GUI: Platform customization: ""windows"" 2017-08-29 19:38:05 GUI: ""ReportInvalidCertificate: Payment server found an invalid certificate: "" ""01"" (""Microsoft Authenticode(tm) Root Authority"") () () 2017-08-29 19:38:05 GUI: ""ReportInvalidCertificate: Payment server found an invalid certificate: "" ""01"" () () (""Copyright (c) 1997 Microsoft Corp.""",Microsoft Time Stamping Service Root,"Microsoft Corporation"") 2017-08-29 19:38:05 GUI: ""ReportInvalidCertificate: Payment server found an invalid certificate: "" ""4a:19:d2:38:8c:82:59:1c:a5:5d:73:5f:15:5d:dc:a3"" () () (""NO LIABILITY ACCEPTED, (c)97 VeriSign, Inc.",VeriSign Time Stamping Service Root,"VeriSign, Inc."") 2017-08-29 19:38:05 GUI: ""ReportInvalidCertificate: Payment server found an invalid certificate: "" ""3f:8b:c8:b5:fc:9f:b2:96:43:b5:69:d6:6c:42:e1:44"" (""Microsoft Root Certificate Authority 2011"") () () 2017-08-29 19:38:05 GUI: ""ReportInvalidCertificate: Payment server found an invalid certificate: "" ""03:c7:8f:37:db:92:28:df:3c:bb:1a:ad:82:fa:67:10"" () () (""VeriSign Commercial Software Publishers CA"") 2017-08-29 19:38:05 GUI: PaymentServer::LoadRootCAs: Loaded  56  root certificates 2017-08-29 19:38:05 GUI: TransactionTablePriv::refreshWallet 2017-08-29 19:38:05 trying connection 172.104.78.159:8333 lastseen=57.2hrs 2017-08-29 19:38:05 tor: Error connecting to Tor control socket 2017-08-29 19:38:05 tor: Not connected to Tor control port 127.0.0.1:9051, trying to reconnect 2017-08-29 19:38:06 Added connection peer=0 2017-08-29 19:38:06 sending version (102 bytes) peer=0 2017-08-29 19:38:06 send version message: version 70015, blocks=482210, us=[::]:0, peer=0 2017-08-29 19:38:06 received: version (102 bytes) peer=0 2017-08-29 19:38:06 sending verack (0 bytes) peer=0 2017-08-29 19:38:06 sending getaddr (0 bytes) peer=0 2017-08-29 19:38:06 receive version message: /Satoshi:0.14.1/: version 70015, blocks=482519, us=73.119.168.246:6576, peer=0 2017-08-29 19:38:06 added time data, samples 2, offset -205 (-3 minutes) 2017-08-29 19:38:06 received: verack (0 bytes) peer=0 2017-08-29 19:38:06 sending sendheaders (0 bytes) peer=0 2017-08-29 19:38:06 sending sendcmpct (9 bytes) peer=0 2017-08-29 19:38:06 sending sendcmpct (9 bytes) peer=0 2017-08-29 19:38:06 sending ping (8 bytes) peer=0 2017-08-29 19:38:06 received: sendheaders (0 bytes) peer=0 2017-08-29 19:38:06 initial getheaders (482209) to peer=0 (startheight:482519) 2017-08-29 19:38:06 sending getheaders (997 bytes) peer=0 2017-08-29 19:38:06 sending feefilter (8 bytes) peer=0 2017-08-29 19:38:06 received: sendcmpct (9 bytes) peer=0 2017-08-29 19:38:06 received: sendcmpct (9 bytes) peer=0 2017-08-29 19:38:06 received: ping (8 bytes) peer=0 2017-08-29 19:38:06 sending pong (8 bytes) peer=0 2017-08-29 19:38:06 received: addr (31 bytes) peer=0 2017-08-29 19:38:06 trying connection 176.9.133.154:8333 lastseen=59.8hrs 2017-08-29 19:38:07 received: getheaders (997 bytes) peer=0 2017-08-29 19:38:07 Ignoring getheaders from peer=0 because node is in initial block download 2017-08-29 19:38:07 received: feefilter (8 bytes) peer=0 2017-08-29 19:38:07 received: feefilter of 0.00001000  from peer=0 2017-08-29 19:38:07 received: pong (8 bytes) peer=0 2017-08-29 19:38:07 Added connection peer=1 2017-08-29 19:38:07 sending version (102 bytes) peer=1 2017-08-29 19:38:07 send version message: version 70015, blocks=482210, us=[::]:0, peer=1 2017-08-29 19:38:07 trying connection 81.92.107.72:8333 lastseen=142.2hrs 2017-08-29 19:38:07 received: headers (25113 bytes) peer=0\''
bitcoin	11171	closed	4	meshcollider	2017-08-27 14:55:23	276.08		+1		b'b"" The issue won\'t be contained in  if its crashing with like a segfault, won\'t log anything to the debug log during the crash, which looks like might be the case here because the log just ends abruptly, maybe try running in gdb? url ""'
bitcoin	11171	closed	5	xyzzy099	2017-08-27 14:55:23	48.33	+1			b""b' Well, I can confirm that  does NOT appear to crash this seems to be an issue only with bitcoin-.  Sadly, it does not appear to be possible for me to debug this binary with either of the GDBs I have installed CygWin and MinGW.  Both report that the file is not a recognized executable format.  It does appear to be a segfault error, I think if I start bitcoin-qt from the command line, it will restart continuously after each initialization. '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,6,2017-08-27 14:55:23,44.07,1,,,"b""b' Any crash messages? Wonder if this is related to 9683 and 9883'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,7,2017-08-27 14:55:23,811.45,1,,,"b'b"" No crash messages", nothing ever gets printed on STDOUT but looking at the windows logs shows that the error is definitely an access violation," so probably a null pointer thing.  I am going to try to install a debugger on windows that I can use to attach to the process and see if I can figure out what\'s going on as soon as I get a chance.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,8,2017-08-27 14:55:23,313.6,,1,,"b""b' Also please try launching with and see if that works '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,9,2017-08-27 14:55:23,119.78,,,1,"b'b"" Wow!  Running with \'-resetguisettings\' fixed the problem!  Thanks :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,closed,2017-08-30 22:56:30,481.12,4,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,10,2017-08-27 14:55:23,69.77,,,1,"b""b' Good'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,11,2017-08-27 14:55:23,205.95,,1,,"b""b' @jonasschnelli looks like this was the same problem as #7869 again then"," have you got anywhere with the cause?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,12,2017-08-27 14:55:23,968.92,,1,,"b""b' @xyzzy099 Did you have multiple monitors? If so"," did you disconnect one monitor before you started Bitcoin Core?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,13,2017-08-27 14:55:23,134.45,1,,,"b""b' I did not have multiple monitors but I have accessed the machine in question remotely (which windows", I believe, may see as another monitor), and have  Bitcoin-qt via the remote session.  As an additional data point, when I was still running 0.14.2 I noticed that the Bitcoin-qt window had started to always open in the extreme lower right-hand of the screen consistently, which is not default behavior, and persisted in opening in that location no matter where the window was when I closed it.  Maybe meaningless," but I thought I should mention it since it seemed odd to me at the time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,14,2017-08-27 14:55:23,2.9,,1,,"b""b' Additionally", I should mention that, at least in my case, the window was definitely NOT opening off-screen.  The client was crashing with a memory  access violation consistently,"'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,15,2017-08-27 14:55:23,73.38,1,,,"b""b' Since fixed the problem for you", that means that there is a problem with how we handle the settings. Either your settings were messed up which caused a bug, or there is a bug with how our settings work. If you do experience this again," let us know so we can investigate further.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,16,2017-08-27 14:55:23,18.17,,1,,"b""b' @xyzzy099 Do you have any windows logs of the crash that show a memory access violation?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,17,2017-08-27 14:55:23,22.13,,,1,"b""b' Yep.  Lots of them", just like this one:  Faulting application name: bitcoin-, version: 0.15.0.0, time stamp: 0x59a3d3e7 Faulting module name: bitcoin-, version: 0.15.0.0," time stamp: 0x59a3d3e7 **Exception code: 0xc0000005** Fault offset: 0x00000000010c4fea Faulting process id: 0xc68 Faulting application start time: 0x01d3214403924c25 Faulting application path: C:\\\\Program Files\\\\Bitcoin\\\\bitcoinFaulting module path: C:\\\\Program Files\\\\Bitcoin\\\\bitcoinReport Id: 4a8de077-8d37-11e7-ae98-2cd05adc2cb3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,18,2017-08-27 14:55:23,3.97,,1,,b'b\' For completeness," I should add that in some of the log entries the ""faulting module path"" is "" C:\\\\Windows\\\\SYSTEM32\\\\"". \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,19,2017-08-27 14:55:23,57.38,,1,,"b'b"" I\'ve been looking into this much more just now", and I found something interesting. So normally we should see this line: (or similar, slightly different with a SOCKS proxy enabled, but same beginning part) in your  with  , but we don\'t see that here. That debug line is part of this function: url  which is called here: url  at the end of GUI initialization, right after the splashscreen disappears. The function happens ~100 milliseconds after the splashscreen disappears. However we don\'t see that debug line, which means that the function must have bailed out or crashed. This indicates to me that it must have bailed out here: url  which means that is null or one of the following lines had the memory access violation: url  and url  I suspect it may be with the call. Still investigating, but meanwhile," I found a different bug which I will open an  later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,reopened,2017-09-01 06:41:00,464.5,6,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,20,2017-08-27 14:55:23,352.0,,1,,"b""b' Reopening under the assumption that this is not solved.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,21,2017-08-27 14:55:23,76.5,,1,,b'b\' I have a similar crash bug on Windows 10 64 with 0.15-rc3. The splashscreen comes up," says verifying blocks and some other things and then crashes while saying ""loading"". My blockchain is on an HDD which constantly produces read noise even when crashed", as long as I kill the task.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,22,2017-08-27 14:55:23,181.15,1,,,"b""b' @wostl please open a separate issue with a bit more info"," its hard to tell whether that is the same issue or not :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,23,2017-08-27 14:55:23,354.22,,1,,"b'b\' ""-resetguisettings"" fixed the crashbug for me too (bitcoin-0.15.0-win64).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,24,2017-08-27 14:55:23,37.83,,1,,"b""b' For anyone who comes across this in the future", please post your GUI settings before doing so that I can analyze them to see what is causing in the problem. On Windows, the GUI settings are found in the registry. On linux," they should be in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,25,2017-08-27 14:55:23,2.15,1,,,"b'b"" The registry key in windows is  . Just export everything below it", there\'s nothing sensitive. Barring some incredibly ugly memory corruption we can rule that out," it\'s checked in the beginning of that function.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,26,2017-08-27 14:55:23,27.82,,1,,"b""b' I upgraded from 0.14.2-uasfsegwit1.0 to 0.15.0-rc3"," and then to 0.15.0. Both 0.15.0 crashed on the splash screen just before the GUI used to appear. Tray icon was already there.  I know that my cache settings were raised (to either 2 or 4GB). UPNP and incoming connections were set.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,27,2017-08-27 14:55:23,1.38,,1,,"b""b' @wostl did you have a proxy set?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,28,2017-08-27 14:55:23,25.4,,1,,"b""b' Definitely no proxy.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,29,2017-08-27 14:55:23,508.2,,1,,"b""b' Closing"," should be fixed by #11335.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,closed,2017-10-07 02:55:52,1214.87,8,19,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11171,closed,-,-,-,8,19,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,opened,2017-08-29 19:15:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,title,2017-08-29 19:15:33,00:00,,1,,"b""b' fees: optimize decay'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,body,2017-08-29 19:15:33,00:00,,1,,"b'b"" As discussed briefly last week with @morcos and @sdaftuar. Rather than jumping around", visit elements in-order. This produces a noticeable speedup.  I added the assertions because it\'s not entirely clear from the existing code if the bucket size is allowed to differ from the individual sizes. I can\'t imagine that that could be the case, so I\'ll remove them if preferred.  Additionally, I assume we could skip UpdateMovingAverages() altogether if no entries have ever been added," but it\'s not obvious to me how to do that without breaking something.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,1,2017-08-29 19:15:33,26.6,,1,,"b""b'  An optimization like this would be important for IBD.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,2,2017-08-29 19:15:33,9.67,1,,,"b""b' @gmaxwell Indeed. When profiling IBD for the first few hundred thousand blocks", some of my results showed this function alone accounting for ~5-10% of all cpu time spent on the message handling thread.  This change reduces those percentages to roughly half iirc," but obviously avoiding it entirely when possible would be best.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,3,2017-08-29 19:15:33,184.85,,1,,"b""b'  How about not it if current tip is too old? In other words"," just and when approaching live tip?  Edit: when in IBD.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,4,2017-08-29 19:15:33,120.08,,1,,"b""b' FWIW", I benchmarked a sync completely bypassing CBlockPolicyEstimator::processBlock and it was effectively the same speed (0.5% faster," but that could well be noise). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,5,2017-08-29 19:15:33,9.27,,1,,"b""b' You mean speed in IBD"," not CPU usage right?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,6,2017-08-29 19:15:33,1.68,,1,,"b'b"" Yes", though on this host (and in this benchmark) IBD is more or less cpu limited.  I didn\'t intend to suggest that we shouldn\'t optimize here," but it\'s apparently not a huge it in IBD as cfields was initially concerned about it being.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,closed,2018-07-20 19:21:39,6.1,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,7,2017-08-29 19:15:33,1093.97,,1,,"b""b' The last travis run for this pull request was 324 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,reopened,2018-07-20 19:21:40,0.02,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,8,2017-08-29 19:15:33,1270.3,,1,,b'b\' Last activity on this was in 2017," going to close this and add ""up for grabs"". Let me know if you want me to reopen it.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,closed,2019-01-09 16:31:58,1270.3,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11194,closed,-,-,-,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,opened,2017-09-06 14:08:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,title,2017-09-06 14:08:16,00:00,,1,,"b""b' [RPC] Bug: RPC Batching does not work with more than 1 multi wallet '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,body,2017-09-06 14:08:16,00:00,,,1,b'b\' ***UPDATE:***  Turns out the issue was caused not by testnet," but by having 2 wallets @ryanofsky found out !  - Step to reproduce:  This work on regtest just fine:  Try to make a batch RPC request to /:  You get the expected result.  However; same things with testnet:  Result:  ""Wallet file not specified (must request wallet RPC through /wallet/ uri-path).""  This problem is limited to batched RPC request on testnet as just making the exact same request without the \\\'[\\\' and \\\']\\\' works fine. It works also fine on regtest", which is crazy. I will look into later.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,1,2017-09-06 14:08:16,58.33,1,,,"b""b' Very strange! Does it work if you use the wallet URL?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,2,2017-09-06 14:08:16,327.58,,1,,"b""b' Seems to be a bug in JSONRPCExecOne. It is creating a request object without assigning a url.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,3,2017-09-06 14:08:16,20.72,,1,,"b""b' Is this a 0.15.0 issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,4,2017-09-06 14:08:16,1032.77,1,,,b'b\'  Actually, I\\\'m not sure the bug I see in JSONRPCExecOne is the same one Nicolas is reporting. The bug in JSONRPCExecOne (which is only called for batch requests and not single requests) is that request uri field is not filled, so if more than one wallet file is loaded,"Wallet file not specified"" errors will trigger when a wallet RPC is called. This is a bug in 0.15, but not a regression because previous releases did not support loading multiple wallets.  Nicolas\\\'s issue is more confusing because despite multiwallet being mentioned in issue title, steps to reproduce only show bitcoind being started with a single -wallet argument. Also, strangely the bug happens with testnet but not regtest.\''
bitcoin	11257	closed	5	NicolasDorier	2017-09-06 14:08:16	955.63	+1			b'b\' Sorry I was in holidays @ryanofsky . This bug came into a ""production"" testnet. I confirm that my bitcoind has two wallets, and did not tried to reproduce on a blank new bitcoind, as I have none other with testnet under the hand for now. Sorry for the misleading description. :(\''
bitcoin	11257	closed	6	NicolasDorier	2017-09-06 14:08:16	26.43		+1		b'b"" @sipa yes, 0.15.0 issue. Hopefully ryanosky\'s fix can make it in time. Testing it now.""'
bitcoin	11257	closed	7	NicolasDorier	2017-09-06 14:08:16	47.45		+1		b""b' Tested, fixed by url '",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,closed,2017-09-10 07:17:14,1028.97,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,reopened,2017-09-10 07:26:51,9.62,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,8,2017-09-06 14:08:16,9.88,,1,,"b'b"" Please don\'t close issues until the fix is actually merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,closed,2017-10-12 12:55:29,328.63,3,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11257,closed,-,-,-,3,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,opened,2017-09-10 04:29:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,title,2017-09-10 04:29:40,00:00,,1,,"b'b"" Make sure ~/.bitcoin doesn\'t exist before build""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,body,2017-09-10 04:29:40,00:00,,,1,"b'b"" We\'ve been getting some random travis failures since url  was merged", because the directory exists after tests are run. Not sure exactly what\'s causing it, but this PR ensures the directory doesn\'t exist before running the build and tests, to see if this fixes the issue.  Edit: travis has been run on this merge twice, and all tests passed both times," so either this fixes the issue or it just got lucky""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,1,2017-09-10 04:29:40,867.78,,1,,"b""b' utACK b73628d5a8e259a7f1fee5c4a245b463990f05a5. It survived 2 full Travis runs"," and fixed the same issue occurring in #11167.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,2,2017-09-10 04:29:40,217.97,,,1,"b""b' If this is what I think it is", that PRs that were built by travis and cached before #11210 was merged have a in their cache," it can also be solved by wiping the Travis caches.  Edit: had to wipe the entire travis cache to test this the Travis interface made it impossible to select individual PRs beyond 11111 or so. So I wiped all the cache and started a new build for the branches. Builds will be slow until master finishes rebuilding.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,3,2017-09-10 04:29:40,36.62,,1,,"b""b' @laanwj does Travis cache data only from builds which pass all tests?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,4,2017-09-10 04:29:40,22.25,,1,,"b""b' @MeshCollider Yes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,5,2017-09-10 04:29:40,86.08,,1,,"b""b' @laanwj In that case this should never be an issue again right", because there should be no way for the directory to ever be cached," so we can close this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,closed,2017-09-11 01:02:17,1232.62,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,6,2017-09-10 04:29:40,76.97,,,1,"b'b"" I hope so! I\'m not sure this is actually the issue", but it seemed likely. I do not understand where a .bitcoin directory would come from otherwise. We still might merge this though for symmetry," I don\'t know.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,reopened,2017-09-11 02:47:54,105.62,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,7,2017-09-10 04:29:40,84.2,,1,,"b'b"" I don\'t think this was solved"," I started #11289 a few times and it\'s still failing. Reopening.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,8,2017-09-10 04:29:40,139.07,,1,,"b'b"" Going to merge this"," so we gain some air to breathe. But I can\'t see how this dir was created at that point.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,closed,2017-09-11 06:03:19,195.42,0,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,9,2017-09-10 04:29:40,56.48,,1,,"b""b' #11289 is passing now :+1:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,10,2017-09-10 04:29:40,807.8,,,1,"b'b"" Great! I think this is good for a temporary workaround.  There\'s no chance that will be executed on user\'s account"," otherwise this would be terribly dangerous.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11297,closed,-,-,-,0,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,opened,2017-09-15 15:21:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,title,2017-09-15 15:21:47,00:00,,,1,"b""b' Sanity assert GetAncestor() != nullptr where appropriate'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,body,2017-09-15 15:21:47,00:00,1,,,"b'b"" Add sanity asserts for return value of where appropriate.  In ", check the return value of stored into  . If it ever returns because the ancestor isn\'t found, it\'s going to be a bad bug to keep going, since a object with the member set to signifies no relative lock time.  In the other places," the added asserts would prevent accidental dereferencing of a null pointer which is UB.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,1,2017-09-15 15:21:47,552.83,,1,,"b""b' There are other places where the result of is not asserted or tested. IMO this PR could also handle those.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,2,2017-09-15 15:21:47,986.3,,1,,"b'b"" @promag Done","  \'s return value is now verified in all places where I found it is needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,3,2017-09-15 15:21:47,819.55,,,1,"b""b' Any specific reason for using instead of just  ? (this works as-is for smart pointers)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,4,2017-09-15 15:21:47,660.4,,1,,"b""b' @laanwj Yes"," see my reply to the similar question by @promag above.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,5,2017-09-15 15:21:47,100.73,,1,,"b""b' The last travis run for this pull request was 302 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,closed,2018-07-20 19:21:36,239.82,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,reopened,2018-07-20 19:21:37,0.02,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,6,2017-09-15 15:21:47,1087.1,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,7,2017-09-15 15:21:47,1380.78,,1,,"b""b' Closing because of inactivity"," see that @MarcoFalke already added up for grabs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,closed,2018-08-31 12:29:29,1027.87,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11342,closed,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,opened,2017-09-15 17:59:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,title,2017-09-15 17:59:38,00:00,,1,,"b'b\' Better text for sending transaction option ""Request Replace-By-Fee""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,body,2017-09-15 17:59:38,00:00,1,,,"b'b\' ### Howto replace a stuck transaction with another with higher fee ?  bitcoind 0.15.0  The marking option ""Request Replace-By-Fee"" in the sending transaction GUI page should have a better understandable text.  The sender does not ""request"" anything when creating the transaction. This is just a tag for a later possibility"," as I understand as a rather normal user.  I would suggest something like  ""Let me increase the fee of this transaction later"," if it should not get confirmed in expected time (\\\'Replace-By-Fee\\\' feature)""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,1,2017-09-15 17:59:38,2.68,1,,,"b'b\' I have just read url  about ""Replace By Fee (RBF)"" and I am unsure"," if one needs to tag the initial transaction as ""Request Replace-By-Fee"" or if one should do that only for the second transaction (which has a higher fee) to replace the first one. This is really unclear to me.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,2,2017-09-15 17:59:38,39.87,,1,,"b'b"" @wodry The replace by fee policy is described in BIP125. It\'s the initial transaction that needs be marked as replacable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,3,2017-09-15 17:59:38,6.03,,1,,"b""b' @sipa Sure"," one could also look into the source code to figure it out. This is intended as a feedback on GUI usability :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,4,2017-09-15 17:59:38,206.1,,1,,"b'b\' How about something like ""Allow increasing transaction fee later on""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,5,2017-09-15 17:59:38,1224.93,,1,,"b""b' Issue is solved with PR url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,closed,2017-10-01 18:39:15,39.62,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,6,2017-09-15 17:59:38,25.82,,1,,"b'b"" Please don\'t close the issue until the corresponding PR is merged"," that will be done automatically when the PR gets merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,reopened,2017-10-02 15:30:15,1251.0,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,closed,2017-12-05 07:30:59,960.73,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11344,closed,-,-,-,2,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,opened,2017-09-16 10:23:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,title,2017-09-16 10:23:29,00:00,,1,,"b""b' Failed to make check on an old Linux: python3: no such file or directory'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,body,2017-09-16 10:23:29,00:00,,1,,"b""b' Running -util-... ../-util/: python3: No such file or directory make[3]: *** [check-local] Error 127'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,1,2017-09-16 10:23:29,71.88,,,1,"b'b"" As mentioned in the build instructions", you need to have python3 installed. This isn\'t an issue with bitcoin," just install python3 and run again :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,2,2017-09-16 10:23:29,47.67,,1,,"b""b' Was python 2 deprecated?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,3,2017-09-16 10:23:29,29.32,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,closed,2017-09-16 12:52:26,148.95,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,4,2017-09-16 10:23:29,141.28,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,5,2017-09-16 10:23:29,13.8,,1,,"b'b"" RHEL 6 & 7 are still using python2. Withal"," RHEL6 doesn\'t have python3 in default repository.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,6,2017-09-16 10:23:29,1081.65,,1,,"b""b' Actually we did not yet deprecate python2 in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,reopened,2017-10-01 09:29:05,1236.65,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,7,2017-09-16 10:23:29,3.02,,,1,"b""b' Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,8,2017-09-16 10:23:29,206.18,,1,,"b'b""  RHEL 6 doesn\'t have a c++11 compiler by default either"," does it? At least gcc 4.4 is below the minimum version (4.7) we support: url  I guess we care about RHEL 7 though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,9,2017-09-16 10:23:29,1267.68,,1,,b'b\' **laanwj**, for RHEL," there is ""devtoolset"" repository with a later GCC versions. url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,closed,2017-10-03 19:28:52,599.78,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11352,closed,-,-,-,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,opened,2017-09-17 19:20:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,title,2017-09-17 19:20:48,00:00,,1,,"b""b' Bitcoin Core 0.15.0.1 failing to compile on Debian Jessie'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,body,2017-09-17 19:20:48,00:00,1,,,b'b\'   This issue tracker is only for technical issues related to bitcoin-core.  General bitcoin questions  support requests and are best directed to the [Bitcoin StackExchange]url For reporting security issues, please read instructions at [url ### Describe the issue ### Can you reliably reproduce the issue? #### If so," please list the steps to reproduce below:  ./  ./configure without-gui CPPFLAGS=""0.15.0.1/"" LDFLAGS=""0.15.0.1/""  make <fails here  ### Expected behaviour Tell us what should happen I should be able to compile successfully.  ### Actual behaviour Tell us what happens instead When I run make it crashes and is complaining about the Boost library.  I successfully compiled 0.15.0.0 a few days ago", so I have no idea what\\\'s any different. root@localhost:/-0.15.0.1# make Making all in src make[1]: Entering directory \\\'/-0.15.0.1/src\\\' make[2]: Entering directory \\\'/-0.15.0.1/src\\\' make[3]: Entering directory \\\'/-0.15.0.1\\\' make[3]: Leaving directory \\\'/-0.15.0.1\\\' make[3]: Entering directory \\\'/-0.15.0.1/\\\' make[3]: Leaving directory \\\'/-0.15.0.1/\\\' CXXLD  bitcoind libbitcoin_util.a(libbitcoin_util_a-util.o): In function  boost::thread::physical_concurrency()\\\' libbitcoin_util.a(libbitcoin_util_a-utiltime.o): In function  boost::this_thread::hidden::sleep_for(timespec const&)\\\' libbitcoin_wallet.a(libbitcoin_wallet_a-db.o): In function  boost::filesystem::detail::copy_file(boost::filesystem::path const&, boost::filesystem::path const&, boost::filesystem::detail::copy_option, boost::system::error_code*)\\\' collect2: error: ld returned 1 exit status Makefile:make[2]: *** [bitcoind] Error 1 make[2]: Leaving directory \\\'/-0.15.0.1/src\\\' Makefile:9265: recipe for target \\\'all-recursive\\\' failed make[1]: *** [all-recursive] Error 1 make[1]: Leaving directory \\\'/-0.15.0.1/src\\\' Makefile:728: recipe for target \\\'all-recursive\\\' failed make: *** [all-recursive] Error 1 ### Screenshots. If the issue is related to the GUI, screenshots can be added to this issue via drag & drop.  ### What version of bitcoin-core are you using? List the version  ID, and if it is an official binary, self compiled or a distribution package such as PPA.  ### Machine specs: OS: Debian Jessie CPU: RAM: Disk size: Disk Type ():  ### Any extra information that might be useful in the debugging process. This is normally the contents of a or file. Raw text or a link to a pastebin type site are preferred. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,1,2017-09-17 19:20:48,63.47,,1,,"b""b' Try running first before running  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,2,2017-09-17 19:20:48,4.18,,,1,"b""b' Wowzers"," you learn something new everyday!  Thank you so much!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,closed,2017-09-17 20:28:41,67.88,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,3,2017-09-17 19:20:48,39.47,,1,,"b""b' Problem still persists after make clean...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,reopened,2017-09-17 21:07:55,39.23,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,4,2017-09-17 19:20:48,268.52,,1,,"b'b"" There\'s been nothing changed between .0 and .1 that would cause something like this"," try reinstalling the boost libraries?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,5,2017-09-17 19:20:48,1068.12,1,,,"b'b"" Updated to the latest boost library and tried compiling with-boost-libs=/ and it\'s still giving me an error"," strange.  boost_1_65_1 url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,6,2017-09-17 19:20:48,504.27,,1,,"b""b' Please pastebin your and the output of a here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,7,2017-09-17 19:20:48,1036.75,,1,,"b""b' I installed boost 1_55 instead of boost_1_65 and received a different error.  What is the recommended boost library version for Bitcoin?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,8,2017-09-17 19:20:48,602.45,1,,,"b'b"" Here is the result of **make V=1**  mv -f -port_posix_ -port_posix_ rm -f  / cr  -port_posix_sse.o /  g++ -std=c++11 -DHAVE_CONFIG_H -I.  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DOS_LINUX -DLEVELDB_ATOMIC_PRESENT -D__STDC_LIMIT_MACROS  -DLEVELDB_PLATFORM_POSIX 0.15.1/ -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -Wstack-protector -fstack-protector-all  -fPIE -g -O2 -Wall -Wextra -Wformat -Wvla -Wformat-security -Wno-unused-parameter -MT -memenv.o -MD -MP -MF -c -o -memenv.o mv -f rm -f  / cr  -memenv.o /  / ../libtool  tag=CXX mode=link g++ -std=c++11 -Wstack-protector -fstack-protector-all  -fPIE -g -O2 -Wall -Wextra -Wformat -Wvla -Wformat-security -Wno-unused-parameter  -pthread  -Wl",-z,relro -Wl,-z,now -pie  0.15.1/ -o bitcoind bitcoind-bitcoind.o  libbitcoin_server.a libbitcoin_common.a  libbitcoin_util.a libbitcoin_wallet.a  libbitcoin_consensus.a   secp256k1/libsecp256k1.la linux-gnu -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -ldb_cxx-4.8 -lssl -lcrypto  -lcrypto  -lminiupnpc -levent_pthreads -levent  -levent libtool: link: g++ -std=c++11 -Wstack-protector -fstack-protector-all -fPIE -g -O2 -Wall -Wextra -Wformat -Wvla -Wformat-security -Wno-unused-parameter -pthread -Wl,-z -Wl,relro -Wl,-z -Wl,now -pie -o bitcoind bitcoind-bitcoind.o  0.15.1/ libbitcoin_server.a libbitcoin_common.a  libbitcoin_util.a libbitcoin_wallet.a libbitcoin_consensus.a   secp256k1/ linux-gnu -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono /-4.8.so -lssl -lcrypto -lminiupnpc -levent_pthreads -levent -pthread  -D__LIBTOOL_IS_A_FOOL__ -D__LIBTOOL_IS_A_FOOL__ libbitcoin_util.a(libbitcoin_util_a-util.o): In function  boost::thread::physical_concurrency()\' libbitcoin_util.a(libbitcoin_util_a-utiltime.o): In function  boost::this_thread::hidden::sleep_for(timespec const&)\' libbitcoin_wallet.a(libbitcoin_wallet_a-db.o): In function  boost::filesystem::detail::copy_file(boost::filesystem::path const&, boost::filesystem::path const&, boost::filesystem::detail::copy_option," boost::system::error_code*)\' collect2: error: ld returned 1 exit status Makefile:make[2]: *** [bitcoind] Error 1 make[2]: Leaving directory \'/-0.15.1/\' Makefile:9284: recipe for target \'all-recursive\' failed make[1]: *** [all-recursive] Error 1 make[1]: Leaving directory \'/-0.15.1/\' Makefile:728: recipe for target \'all-recursive\' failed make: *** [all-recursive] Error 1  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,9,2017-09-17 19:20:48,121.72,,,1,"b""b' Solved", I realized I had installed a different version of the Boost library which did not match the recommended version for my Debian install.  Boost version 1_55, I had version 1_65_1  sudo apt-get autoremove libboost-all-dev sudo apt-get install libboost-all-dev  Finally," I was able to recompile successfully! '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,closed,2017-09-24 09:09:49,721.9,3,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,10,2017-09-17 19:20:48,805.13,,,1,"b""b' Had exactly the same issue also on Debian Jessie while attempting to build v0.16.0. Also because of a boost upgrade (to 1.66). This thread was very useful"," thank you !'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11358,closed,-,-,-,3,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,opened,2017-10-11 10:33:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,title,2017-10-11 10:33:50,00:00,,1,,"b""b' Optional update rescan option in importmulti RPC'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,body,2017-10-11 10:33:50,00:00,,1,,"b""b' This PR adds a new option in RPC method to optionally do not rescan transactions that already exist in the wallet. This is very important for large wallets when importing a single address with a old timestamp", which in this moment triggers a rescan to the whole wallet," replaying several already known wallet events (via notify-wallet). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,1,2017-10-11 10:33:50,214.67,,1,,"b'b""  Just isn\'t too generic? Does not refer to a rescan property. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,2,2017-10-11 10:33:50,47.38,,1,,"b""b'  Maybe or  ? Yes"," I will add it soon. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,3,2017-10-11 10:33:50,1229.18,,1,,"b'b"" After checking the method", the argument which triggers the notifiers is called  ," so I\'m going by your approach of calling it  . The of the command should be the one that should explain the underlying consequence of using  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,closed,2018-07-21 17:29:52,416.03,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,reopened,2018-07-21 17:29:53,0.02,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,4,2017-10-11 10:33:50,1430.93,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14942]url  (wallet: Make scan / abort status private to CWallet by Empact)* [#14918]url  (RPCHelpMan: Check default values are given at compile-time by MarcoFalke) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,5,2017-10-11 10:33:50,298.93,,1,,"b""b' This definitely needs a test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,closed,2019-05-19 20:23:55,174.03,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11484,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,opened,2017-10-12 04:44:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,title,2017-10-12 04:44:39,00:00,,1,,"b""b' [wallet] sendtoaddress output type argument'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,body,2017-10-12 04:44:39,00:00,,1,,"b""b' This is an attempt at fixing #11134.  It basically adds the output type flag as is"," which is then used to generate the change destination.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,1,2017-10-12 04:44:39,97.93,,,1,"b'b"" @promag Thanks for the review! Very good points. I\'ve updated the code according to your suggestions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,2,2017-10-12 04:44:39,1341.38,,,1,"b'b"" Closing this as I\'m not sure of a good way to stay up to date with the other PR. Will reopen once merged instead. Edit: Reopened post-merge of dependent PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,closed,2017-12-05 04:43:58,1439.32,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,reopened,2018-01-18 03:47:41,1383.72,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,3,2017-10-12 04:44:39,870.97,,1,,"b'b"" Tend to NACK here. If you really want to control the change type on a per-call basis", maybe you should use createrawtransaction. It is not our goal to support every edge use-case. I doubt the option in sendtoaddress will still be useful two releases in the future and we\'d have to deprecate it with way too much effort.  Other than that," you could set the change type on the command line or use a more intelligent solution such as #12119 (not yet merged). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,4,2017-10-12 04:44:39,21.03,,1,,"b'b\' I agree with @MarcoFalke. is a simple send command where you don\\\'t even have control over how much fee you have to pay (single shot) and I don\\\'t think we should add more ""expert"" functions there.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,5,2017-10-12 04:44:39,250.37,1,,,"b'b\' The next step ""down"" from is which is way overkill 99% of the time. This desire to keep dumb to ""not confuse users"" is itself confusing to me. See also #11413 which invalidates the argument about fees above (unless it\\\'s NAK\\\'d and not merged).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,6,2017-10-12 04:44:39,55.57,,,1,"b""b' I can understand the motivation to add an option to set the fee explicitly"," but I fail to see any reason to support setting the change type.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,closed,2018-01-19 00:45:25,1257.73,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11489,closed,-,-,-,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,opened,2017-10-13 07:11:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,title,2017-10-13 07:11:54,00:00,,1,,"b""b' Clarify BIP9 behaviour when nTimeout <= 0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,body,2017-10-13 07:11:54,00:00,,,1,b'b\' Adds a comment in the BIP9Deployment class declaration for when to set nTimeout=0," and changes the checks for (nTimeout!=0) to (nTimeout>0) for consistency.  The remaining comparison for nTimeout is in :BIP9SoftForkDescPushBack which already checks for >0 rather than !=0.  Compatible with #11389 which adds another special case behaviour (negative nStartTime) for defining ""BIP9"" deployments.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,1,2017-10-13 07:11:54,798.72,,1,,"b""b' The last travis run for this pull request was 280 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,closed,2018-07-20 20:30:37,798.72,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,reopened,2018-07-20 20:30:38,0.02,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,2,2017-10-13 07:11:54,963.62,,1,,"b'b"" Not sure what to do here? It has been open since 2017 has hardly any discussion.  I\'m going to close it"," let me know if it needs reopen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,closed,2018-08-31 12:34:14,963.6,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11494,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,opened,2017-10-20 14:07:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,title,2017-10-20 14:07:00,00:00,,1,,"b""b' Docs: Update WSL installation notes for Fall Creators update'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,body,2017-10-20 14:07:00,00:00,,1,,"b""b' Fall Creators update (RS3) was released 17 October and it has made some changes to the installation of WSL (no longer requires Developer Mode"," out of beta and Ubuntu has to be installed from the Store).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,1,2017-10-20 14:07:00,47.22,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,2,2017-10-20 14:07:00,1271.22,,1,,"b'b"" I\'d like to see confirmation that at least one other person tested this before merging.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,3,2017-10-20 14:07:00,518.55,,1,,"b""b' Concept ACK a4f171de5a44253394cb739586b04e2429f7f84d. Agree with @laanwj '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,4,2017-10-20 14:07:00,1374.22,,,1,"b'b"" I just went through this and did my own pull when I was pointed to the fact this one already exists. I\'m not sure you need much additional doc around this at all. It\'s basically just install WSL and then follow linux instructions for whatever distro you install in the WSL. Worked great for me whereas I was unable to get it to work with the previous beta WSL.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,5,2017-10-20 14:07:00,961.52,,,1,"b'b""  With the exception that you\'re *cross compiling* for Windows. If you miss that part"," you get issues like #11633. That\'s why separate instructions exist.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,6,2017-10-20 14:07:00,1.07,,1,,"b""b' @mikedennis So can you ACK the changes here"," then this can be merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,7,2017-10-20 14:07:00,9.85,,1,,"b""b' This is conflicting after #11438"," needs rebase if there are still relevant changes after that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,8,2017-10-20 14:07:00,127.53,,1,,"b'b"" I\'m having problems with cross compilation. To start with if you follow these procedures you end up with Ubuntu Xenial 16.04 which this doc states is not a good choice for cross compilation.  I proceeded and ran into a problem with this step building in depends:  I get an error warning about automake-1.14 is missing on my system. I checked and I have 1.15-4ubuntu1 installed. I suspect  I need to follow the workarounds in #8732 I recommend putting a note in the docs that this procedure installs Ubuntu Xenial 16.04 and to see #8732 if you want to cross compile.  You can also install openSUSE Leap 42 in WSL. I may give that a try and see if I have more success with that and the cross compilation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,9,2017-10-20 14:07:00,2.0,,1,,"b'b""  If you get that error", you need to build from the linux drive. Building from a mounted windows drive e.g. /mnt/c/ will not work, as the file system interaction changes the timestamps such as protobuf thinks it needs to re-generate its configuration files," which doesn\'t work from the tarball.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,10,2017-10-20 14:07:00,454.43,,1,,"b'b"" **ACK**  I was able to build with cross compilation using the instructions. I would", however," recommend the following modifications to the documentation: * In depends build mention you cannot build via mnt or else will get an error with automake * I needed to change to posix compilers even though I\'m running Ubuntu 16.04. The docs say you only need to run posix on 17.04 and higher so probably need to change the docs to say 16.04 and higher.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,closed,2017-11-14 01:52:38,705.63,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,reopened,2017-11-14 02:06:59,14.35,0,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,11,2017-10-20 14:07:00,287.3,,1,,"b""b' I have updated the pull request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,12,2017-10-20 14:07:00,326.53,,1,,"b""b' Going to merge this", @mikedennis feel free to improve it further in a future PR," those proposed changes make sense but are outside the claimed scope of this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,closed,2017-11-14 07:50:20,343.35,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11533,closed,-,-,-,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,opened,2017-10-20 17:23:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,title,2017-10-20 17:23:38,00:00,,1,,"b""b' Avoid unintentional unsigned integer wraparounds'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,body,2017-10-20 17:23:38,00:00,,1,,"b""b' Avoid unintentional unsigned integer wraparounds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,1,2017-10-20 17:23:38,339.95,,,1,"b""b' @laanwj Good point. Fixed! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,2,2017-10-20 17:23:38,724.07,,1,,"b'b\' Added commits from #11547 (""Avoid unintended unsigned integer wraparounds in FormatScript(...) and SplitHostPort(...)"") as requested :-)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,3,2017-10-20 17:23:38,1163.27,,1,,"b""b' Added a few more wrap-arounds and squashed. Now at 16 fixed wrap-arounds.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,4,2017-10-20 17:23:38,1.55,,1,,"b""b' We tend to use C-style casts for primitive types... just for brevity.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,5,2017-10-20 17:23:38,5.37,,,1,"b'b"" @sipa I\'ll change! Other than that"," do the changes look reasonable? :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,6,2017-10-20 17:23:38,149.7,,1,,"b""b' @sipa Now using C-style casts for primitive types :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,7,2017-10-20 17:23:38,627.78,,1,,"b""b' Added another wraparound fix (this time in  ) and squashed.  Anyone willing to review? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,8,2017-10-20 17:23:38,1216.37,,,1,"b""b' Rebased! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,9,2017-10-20 17:23:38,158.38,,1,,"b""b' Anyone willing to review ACK or NACK? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,10,2017-10-20 17:23:38,979.72,,1,,"b""b' Ping? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,11,2017-10-20 17:23:38,658.9,,,1,"b'b"" Do we not care about integer wrap-arounds? If so let me know and I\'ll close :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,12,2017-10-20 17:23:38,38.32,,1,,"b""b' ACK test changes", they seem straightforward. The other need a cautious review, since they change behavior.  (You can split the test changes into a separate pull request," if you want)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,13,2017-10-20 17:23:38,1350.65,,,1,"b'b"" Re:  changes utACK (didn\'t review anything else)  Thanks! ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,14,2017-10-20 17:23:38,64.73,,,1,"b""b' @promag Thanks for reviewing. Switched to suggested formulation. Please re-review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,15,2017-10-20 17:23:38,987.12,,,1,"b""b' Anyone willing to review?  Getting the project to run cleanly under would be very nice :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,16,2017-10-20 17:23:38,83.33,,,1,"b""b' @promag Thanks for reviewing! Feedback addressed!  @sipa @promag Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,closed,2018-07-22 12:55:12,1171.57,0,10,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,17,2017-10-20 17:23:38,1262.47,,1,,"b""b' The last travis run for this pull request was 96 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,reopened,2018-07-22 12:55:18,0.1,0,11,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,18,2017-10-20 17:23:38,100.4,,,1,"b""b' @arvidn Updated to address your feedback. Please re-review!  BTW"," I love your talk about C++ integers! Great to have you as a reviewer of this PR :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,19,2017-10-20 17:23:38,1091.93,,,1,"b""b' Updated! Please re-review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,20,2017-10-20 17:23:38,283.58,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14224]url  (Document intentional and unintentional unsigned integer overflows (wraparounds) using annotations by practicalswift)* [#13804]url  (WIP: Transaction Pool Layer by MarcoFalke)* [#11551]url  (Fix unsigned integer wrap-around in GetBlockProofEquivalentTime by practicalswift) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,21,2017-10-20 17:23:38,146.48,,,1,"b""b' To increase the likelihood of this PR getting merged \\xe2\\x80\\x93 should I limit it to a subset that is lowcontroversial? Please help me find that subset :-)  It would be really nice to get rid of these unintended unsigned integer wraparounds. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,22,2017-10-20 17:23:38,273.1,,1,,"b""b'  @practicalswift see url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,23,2017-10-20 17:23:38,951.3,,1,,"b""b' @flack That subset has already been fixed \\xe2\\x80\\x93 see #12516 :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,24,2017-10-20 17:23:38,113.95,,,1,b'b\' I don\\\'t have any authority here," I can only offer advice how I would approach this.  What do I mean by ""this""? I think the code should transition to using signed integers pervasively", everywhere by default, except the places where it needs unsigned integers (such as bit fiddling and modulo-2 arithmetic, a lot of crypto code falls into this category).  I think getting there has to be incremental, and during the transition there will probably be a net increase of  casts. But in the end the whole codebase could be built with  , which would be a great place to be in, and with fewer casts.  @practicalswift I believe you\\\'ve found the issues you\\\'ve addressed here with  , right? I think that\\\'s a good tool to find the most egregious misuses of unsigned integers, they should probably be the first ones to go. However, perhaps addressing all of these individual spots in a single commit isn\\\'t the right slicing or increment towards the goal of reducing misuses of unsigned integers. Perhaps instead, pick one, and fix that one properly, including all the ripple-effects it may have.  for example, take [this]url  part of the patch.  Maybe it would make more sense to explore what would happen if would return an (which seems like a cleaner solution than casting its result like this).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,25,2017-10-20 17:23:38,9.33,,1,,"b""b' If we decide to return sizes and lengths as int64_t"," that should probably be documented in the developer notes (coding style) with rationale for doing so. Otherwise it seems like the code could go back and forth over this constantly.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,26,2017-10-20 17:23:38,91.85,,,1,"b'b"" @arvidn Good point regarding splitting this PR into smaller parts. I\'ll do that.  @arvidn @MarcoFalke Are there any parts of this PR that you can ACK or NACK? I\'m trying to identify the appropriate parts to split it in :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,closed,2018-11-12 16:19:32,204.23,0,15,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11535,closed,-,-,-,0,15,13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,opened,2017-10-23 21:33:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,title,2017-10-23 21:33:08,00:00,,1,,"b""b' Fix unsigned integer wrap-around in GetBlockProofEquivalentTime'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,body,2017-10-23 21:33:08,00:00,,,1,"b""b' Fix likely unintentional unsigned integer wrap-around in when  .  **Description:**  contains the following code:   is of type  .  Note that the types of the two operands in differ in signedness.  Since is wider than the signed operand ( ) is converted to the unsigned type.  In the case of ( ) instead of the intended  .  Note however that another conversion takes place when the result is converted into the return type  ( )"," so the resulting value should be the expected one (equivalent to  ).  In the case that this behaviour (wrap-around + relying on return type to fix) is intentional a comment should probably be added to indicate so :-)  was introduced in f7303f97933be33e34d482cf8348d180c8da2a26. Friendly ping @sipa intentional or not? :-)  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,1,2017-10-23 21:33:08,181.58,,1,,"b'b"" Again"," isn\'t this part of #11535 too? Both are just avoiding unintentional unsigned integer wraparounds?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,2,2017-10-23 21:33:08,295.58,,,1,"b""b' @MeshCollider I thought this one was a bit more interesting than the others and deserved its own PR"," but sure I can just add all unintentional unsigned integer wraparounds to #11535. I have a few more to report :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,3,2017-10-23 21:33:08,225.9,,1,,"b""b' @promag Nit addressed :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,4,2017-10-23 21:33:08,3.58,,1,,"b""b' ACK de9517d.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,5,2017-10-23 21:33:08,1.77,,,1,"b""b' @promag Thanks a lot for reviewing! Would you mind taking a look at the wrap-arounds covered in #11535 too? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,6,2017-10-23 21:33:08,305.25,,1,,"b""b' @sipa What do you think about this change? Do you have time to review? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,7,2017-10-23 21:33:08,441.72,,,1,"b'b"" Do we not care about integer wrap-arounds? If so let me know and I\'ll close :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,8,2017-10-23 21:33:08,89.12,,1,,"b""b' @practicalswift Can you add a test case that fails before this change and passes after this change. This prevents from re-introducing the issue in the future.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,9,2017-10-23 21:33:08,551.63,,,1,"b'b"" @MarcoFalke Thanks to the implicit conversion back to the return type the wrap-around is contained to so I don\'t think it is possible to construct a test for this.  Judging from the reviews of this PR it seems like the current code\'s reliance on wrap-around + implicit conversion is quite surprising which in itself is a reason to be explicit here. Explicit is better than implicit!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,10,2017-10-23 21:33:08,331.0,1,,,"b'b"" Ah", sorry. My bad, I didn\'t read OP.  Then it should be possible to add a test case that (temporarily) wraps around," but passes before and after this change?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,11,2017-10-23 21:33:08,314.32,,,1,"b'b"" @MarcoFalke I\'m not sure how that test would be constructed since returns the correct value thanks to the conversion that takes place *after* the unsigned integer wrap-around has taken place. Perhaps I\'m missing something? :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,12,2017-10-23 21:33:08,372.03,,1,,"b""b' utACK de9517d59bc9943ec62ca26ed5f7111c9bc73b6c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,13,2017-10-23 21:33:08,785.87,,,1,"b""b' @laanwj Willing to review? :-) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,14,2017-10-23 21:33:08,357.98,,1,,"b""b' The last travis run for this pull request was 269 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,closed,2018-07-20 20:30:28,1377.33,1,8,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,reopened,2018-07-20 20:30:29,0.02,1,8,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,15,2017-10-23 21:33:08,435.2,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#11535]url  (Avoid unintentional unsigned integer wraparounds by practicalswift) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,16,2017-10-23 21:33:08,1115.53,,1,,"b'b"" I\'m doing some PR cleaning and this PR has gotten a bit old :-)  This PR has received :s from @MarcoFalke and the original author of the code @sipa (code introduced in f7303f97933be33e34d482cf8348d180c8da2a26).  Does this PR still stand a chance of getting merged? Let me know otherwise and I\'ll close :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,17,2017-10-23 21:33:08,539.67,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,18,2017-10-23 21:33:08,217.73,,1,,"b""b' re-utACK d9ab663'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,19,2017-10-23 21:33:08,298.98,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,20,2017-10-23 21:33:08,82.45,,1,,"b""b' utACK 58e034266c9beeb83298dd4ac026136fdac21139'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,21,2017-10-23 21:33:08,232.62,,1,,"b""b' re-utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,22,2017-10-23 21:33:08,8.83,,1,,"b'b\' This code looks wrong to me. GetLow64() appears to return a full range uint64 ""return pn[0] | (uint64_t)pn[1] << 32;"".  Simply casting it to int if its out of range would introduce UB where there isn\\\'t any potential for UB now.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,23,2017-10-23 21:33:08,141.82,,,1,"b'b"" @gmaxwell That\'s already taken care of by on L147", right? :-)  (Pedantic nit: An out-of-range conversion from unsigned to signed would have resulted in implementation-defined behaviour and not UB," right?  Not that implementation-defined behaviour is much better from a distributed consensus perspective :-))""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,24,2017-10-23 21:33:08,77.52,1,,,"b'b"" I was brain-farting a bit and thinking that (signed)(2^63 1)*-1  was UB but it\'s actually the opposite case where -1 times a maximally negative number that I was thinking of (-(signed)(2^63 1)-1)*-1. ... I\'m hesitant to spend more time reviewing these kinds of changes than they take to write. It was also unclear if bits returned 63 or 64 on 1<<63", and I ultimately wrote a test to check.  It\'s easy to introduce bugs with changes like this," and hard to review them to be absolutely sure. Sorry for the distraction there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,closed,2018-12-02 12:09:12,938.72,2,15,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11551,closed,-,-,-,2,15,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,opened,2017-11-03 12:11:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,title,2017-11-03 12:11:49,00:00,,1,,"b""b' scripted-diff: Small locking rename'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,body,2017-11-03 12:11:49,00:00,,1,,"b'b\' Call sync.h primitives ""locks"" and ""mutexes"" instead of ""blocks"" and ""waitable critical sections"" to match current coding conventions and c++11 standard names.  This PR does not rename the ""CCriticalSection"" class (though this could be done as a followup) because it\\\'s used everywhere and would swamp the other changes in this PR. Plain mutexes should mostly be preferred instead of recursive mutexes in new code anyway.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,1,2017-11-03 12:11:49,118.8,,1,,"b""b' Concept ACK.  Drop prefix too?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,2,2017-11-03 12:11:49,45.43,,,1,"b'b"" >Concept ACK.>Drop C prefix too?  Thanks", will wait for more feedback. I didn\'t rename CCriticalSection because it\'s used everywhere and changing it would make the diff 3 times as big (22 lines -> 73 lines). Also I think we will probably lean toward using non-recursive rather than recursive locks in new code, so CCriticalSection name should not matter as much going forward. I kept the C in CCriticalLock to be consistent with CCriticalSection. CCriticalLock is only used internally in sync.h so again it shouldn\'t have an impact on new code," and I didn\'t see a reason to break consistency within sync.h.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,3,2017-11-03 12:11:49,52.28,,1,,"b""b' utACK eec3e2261eb895b704c5153203e6b1b946213667'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,4,2017-11-03 12:11:49,333.0,,1,,b'b\' To me," calling it just ""Mutex""/""Lock"" implies this is what people should use for new ", but that isn\\\'t what we want because it doesn\\\'t support DEBUG_LOCKORDER. Indeed, we maybe could make it support DEBUG_LOCKORDER and then start migrating to it over our current recursive stuff, but for now I\\\'d prefer to make it more clear that the new typedefs should be discouraged.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,5,2017-11-03 12:11:49,8.33,,1,,"b""b' Is DEBUG_LOCKORDER the only reason you want to discourage these?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,6,2017-11-03 12:11:49,5.33,1,,,"b'b"" I suppose", I mean as long as its clear that its non-recursive and someone doesn\'t introduce a bug on accident cause they\'re not paying attention," DEBUG_LOCKORDER would be my only complaint.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,7,2017-11-03 12:11:49,0.48,,1,,"b'b"" I\'ll just implement DEBUG_LOCKORDER for these. It should be pretty easy.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,8,2017-11-03 12:11:49,1301.38,,1,,"b'b"" If we\'re renaming them anyway", why not call them what they are? RecursiveMutex. RecursiveLock, Mutex, Lock?  Do we need any special, project-local names for locking constructs at all or could we do with simply the c++11 naming? (I\'ve wondered about this many times)  I\'m all for using non-recursive locks in new code," using recursive locks is usually discouraged nowadays. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,9,2017-11-03 12:11:49,21.67,,,1,b'b\' Indeed, after #11640, and because this is scripted," I\\\'d be more than happy to see us drop the ""CriticalSection"" naming no one uses that anymore...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,10,2017-11-03 12:11:49,863.25,,,1,"b'b"" Agree with @laanwj \\xe2\\x80\\x93 let\'s use the standard C++11 naming instead of project-local names for the locking constructs.  Are there any good arguments for continuing with project-local names for the locking constructs?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,11,2017-11-03 12:11:49,829.32,,1,,"b""b' The last travis run for this pull request was 87 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,closed,2018-07-22 23:51:06,699.28,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,reopened,2018-07-22 23:51:07,0.02,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,12,2017-11-03 12:11:49,649.18,,1,,"b'b\' Please get rid of the ""Merge remote-tracking branch \\\'\\\'"" merge commit  utACK otherwise\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,13,2017-11-03 12:11:49,64.18,,1,,"b""b' >utACK otherwise  @laanwj", could you add your utACK to #11640? The merge just indicates #11599 is based on #11640," and distinguishes the #11599 commits from the #11640 one.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,14,2017-11-03 12:11:49,154.75,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,15,2017-11-03 12:11:49,1.27,,1,,"b""b'  Rebased f21c529c0b77f745f5ae2fd999b268d0d49f68a8 -> 190bf62be1214b072513c7fd7e01cc191723967c ([]url  -> []url  after #11599 merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,16,2017-11-03 12:11:49,63.53,,1,,"b""b' utACK 190bf62be1214b072513c7fd7e01cc191723967c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,closed,2018-08-31 15:34:06,942.98,1,14,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11599,closed,-,-,-,1,14,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,opened,2017-11-08 18:41:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,title,2017-11-08 18:41:23,00:00,,1,,"b""b' p2p: Remove dead service bits code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,body,2017-11-08 18:41:23,00:00,,,1,"b""b' Seems fine to remove for the upcoming 0.17 release  Fixes #10993'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,1,2017-11-08 18:41:23,24.2,,1,,"b'b"" I think this is premature. Since it was shipped in 15.0", we need to consider this behavior locked-in until August.  We can\'t practically re-use the bits until then anyway, and we still don\'t want to remain connected to any peer with them enabled for whatever reason.  Also," I assume the is still relevant.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,2,2017-11-08 18:41:23,12.1,,,1,"b""b' Good point about keeping it in the code for now to make clear that they are taken. Guess there is no rush in merging this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,3,2017-11-08 18:41:23,0.72,,,1,"b'b"" Isn\'t one needed for Bitcoin Cash nodes?  If it can be done without side-effects"," it would be a nice gesture to at least deprecate it (earlier). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,4,2017-11-08 18:41:23,398.23,,1,,"b""b' Needs rebase. No need to keep open; Closing for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,closed,2017-12-06 01:56:38,435.25,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,reopened,2018-07-11 14:32:56,756.3,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,5,2017-11-08 18:41:23,615.18,,1,,"b""b' utACK fa4bf92be9420919c74cdde9a973f7327d01ac88'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,6,2017-11-08 18:41:23,15.73,1,,,"b'b"" Concept ACK  @theuni wrote: That should work with the expect v0.17 release", right?  I wrote: One year seems long enough for me," especially since they\'ve rolled out multiple hard forks that could have dealt with any potential node confusion (I haven\'t checked if they did).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,7,2017-11-08 18:41:23,539.75,,1,,"b""b' utACK fa4bf92be9420919c74cdde9a973f7327d01ac88'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,8,2017-11-08 18:41:23,24.72,,1,,"b""b' utACK fa4bf92be9420919c74cdde9a973f7327d01ac88'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,9,2017-11-08 18:41:23,921.72,,1,,"b""b' utACK fa4bf92be9420919c74cdde9a973f7327d01ac88'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,closed,2018-07-20 13:14:24,1361.47,1,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11637,closed,-,-,-,1,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,opened,2017-11-08 21:44:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,title,2017-11-08 21:44:04,00:00,,1,,"b""b' Make LOCK", LOCK2," TRY_LOCK work with CWaitableCriticalSection'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,body,2017-11-08 21:44:04,00:00,,1,,"b""b' Make LOCK macros work with non-recursive mutexes"," and use wherever possible for better deadlock detection.  Also add unit test for DEBUG_LOCKORDER code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,1,2017-11-08 21:44:04,1208.7,,1,,"b""b' Fails travis due to new lock checking in clang.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,2,2017-11-08 21:44:04,230.18,,,1,"b""b'  Good catch"," added this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,3,2017-11-08 21:44:04,1284.08,,1,,"b""b' Rebased f190dd6e5ebf07a75559855d04659502f6e63123 -> 674dcfea1d0a5314e39fc9731cb863995ff34ea1 ([]url  -> []url  due to new changes conflicting with AssertLockNotHeld declaration from #10286'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,4,2017-11-08 21:44:04,1234.03,,1,,"b""b' utACK 674dcfea1d0a5314e39fc9731cb863995ff34ea1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,5,2017-11-08 21:44:04,1283.82,,1,,"b""b' Rebased 674dcfea1d0a5314e39fc9731cb863995ff34ea1 -> b6c88a148db170367abec036b6c4f2e13104f9aa ([]url  -> []url  due to trivial conflicts with #12366 and #12367.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,6,2017-11-08 21:44:04,312.13,,,1,b'b\' Yes, I tend to agree with that point. I think just explicitly using our wrapper classes instead of the LOCK macros would suffice there. On March 2, 2018 6:08:09 PM UTC,"Wladimir J. van der Laan""  wrote:>laanwj commented on this pull request.>   std::unique_lock lock(cs);>macro syntax as it hides what is happening. So I wondered if there is>an official way to \\\'decorate\\\' the C++11 locking primitives, as I doubt>we\\\'re the only project to do checking like this. If not, this change is>fine with me...>You are receiving this because you were mentioned.>Reply to this email directly or view it on GitHub:>url \''
bitcoin	11640	closed	7	ryanofsky	2017-11-08 21:44:04	290.98	+1			b'b""  Matt, maybe I\'m misunderstanding, but are you suggesting that I write something like:   to replace current master code:   instead of current PR code:   If this is the case, I guess I\'d prefer to keep the current PR code, since it just uses one style ( ) uniformly and it seems Wladimir no longer objects url  In the future, if we want to avoid using in some cases without replacing it everywhere, having a documented developer guideline would probably be helpful.""'
bitcoin	11640	closed	8	laanwj	2017-11-08 21:44:04	545.8		+1		b'b\' Yes, I agree, my comment was somehow out of scope. Let\\\'s leave changing the style to something in the future. Or maybe just documenting how the various OS/C++ synchronization primitives map to ""bitcoin core style"" and vice versa.\''
bitcoin	11640	closed	9	ryanofsky	2017-11-08 21:44:04	272.37		+1		b""b' Rebased b6c88a148db170367abec036b6c4f2e13104f9aa -Rebased 41dea6a481781e69a1e404a7e3d806f59b47032e -Rebased c7c788496ee478064e00b592ac69ac2a23f70e11 -Rebased 626de8f3e233ae7c9ffac8b607b21c46b96ccf1e -> 9c4dc597ddc66acfd58a945a5ab11f833731abba ([]url  -> []url  due to conflict with #13423'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,closed,2018-07-22 23:51:00,126.93,1,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,10,2017-11-08 21:44:04,664.85,,1,,"b""b' The last travis run for this pull request was 87 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,reopened,2018-07-22 23:51:01,0.02,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,11,2017-11-08 21:44:04,839.55,,1,,"b""b' utACK 9c4dc597ddc66acfd58a945a5ab11f833731abba'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,closed,2018-08-31 14:01:03,850.03,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11640,closed,-,-,-,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,opened,2017-11-09 16:21:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,title,2017-11-09 16:21:46,00:00,,1,,"b""b' BitcoinQT downcases bitcoin://... address on OSX'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,body,2017-11-09 16:21:46,00:00,1,,,"b'b"" When entering bitcoin://1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX in the Safari address bar", it opens BitcoinQT, but then says:  Dev hint: try [RCDefault]url  in order to make OSX open these links using a custom build.  Tested with v0.15.1rc1 as well as master. Using QT 5.8.0.  This doesn\'t happen when I start QT from the command line:  It does happen if I use:  So it\'s not a Safari issue.  Using log statements I found that this downcase happens somewhere before in  . This function actually strips from the URI because:   See also #854.  This function is called from in  . Before that uses:   Lower case already happened here.  If I use a single slash, there\'s no downcase, altough the UI then complains about the initial slash.  So perhaps something changed in QT and we need to do this earlier. Or it\'s OSX that\'s broken.  This does behave, suggesting that indeed something is treating the address as a host name:  QT documentation for [QUrl]url  suggests this is expected behavior: That remark has been in their documentation more or less [forever]url  I can\'t find a workaround," unless there\'s some way to get additional information out of [QFileOpenEvent]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,1,2017-11-09 16:21:46,224.25,,1,,"b""b' On the bright side"," bech32 addresses are lower case...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,2,2017-11-09 16:21:46,1027.42,,1,,"b'b"" I don\'t know what to be more surprised about", that this issue exists or that it has been the case forever and no one stumbled on this," or at least reported this before.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,3,2017-11-09 16:21:46,18.43,1,,,"b""b' Perhaps a subtle change in OSX or a recent update to QT made it behave as documented? Comments in the source code suggest it did work back in the day"," otherwise why bother with all the OSX specific code?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,4,2017-11-09 16:21:46,4.63,1,,,"b'b"" Note that is not a valid BIP21 URI. It should be  "," which I suspect you\'ll find works okay since it\'s not being treated as a hostname...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,5,2017-11-09 16:21:46,28.5,,1,,"b'b"" @luke-jr when I typed  into Safari it didn\'t switch to the BitcoinQT", it just started googling it. Only adding triggered the app switching. This is probably not a real use case though.  When is used as a link in a proper website, the isn\'t needed.  indeed works.  The wallet could perhaps throw a more informative error if was used," but I\'m not sure if that\'s worth fixing. Given that BIP-21 doesn\'t even allow I\'ll just close this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,closed,2017-11-13 14:05:00,1303.23,3,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,6,2017-11-09 16:21:46,285.73,,1,,"b""b' I think we should keep that open... it looks like that we have to fix something here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,7,2017-11-09 16:21:46,10.77,,1,,"b'b"" Shrug... invalid URIs don\'t work. No big deal either way IMO.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,8,2017-11-09 16:21:46,3.05,1,,,"b""b' If somehow an invalid URI is passed (whether it looks like a URL or not) due to an overly broad OS level filter", we should at least give an error message," no?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,9,2017-11-09 16:21:46,18.88,,1,,"b'b"" Agree with @sipa. I could imagine that the way how we collect the URI from the event (In Qt) may be deprecated... I\'m currently analysing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,10,2017-11-09 16:21:46,28.42,,1,,"b'b"" RFC 3986 states: and  and   Would that mean the concept flaw is in BIP21? AFAIK there is no guarantee by RFC3986 that the address (either it\'s a host or an additional subcomponent) needs to be handles case sensitive. Not sure if there is a simple workaround in our code nor would it make sense to try to fix this upstream (because the code there seems to respect RFC3986)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,11,2017-11-09 16:21:46,13.0,1,,,"b'b"" I think BIP21 is correct because the additional subcomponent is case-sensitive. The problem just comes with (with the double slashes). There"," RFC3986 says it\'s case-insensitive and we need to expect a to-lowercase-normalised string.  The main problem in our source code is probably that we auto-correct to which does not work (reliable) at our level.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,reopened,2017-11-13 20:08:22,363.37,5,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,12,2017-11-09 16:21:46,4.18,,1,,"b'b"" Indeed"," we should just treat incoming \'bitcoin://\' as invalid-BIP21. No need to deal with lowercase or whatever; it\'s just not a valid URI.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,13,2017-11-09 16:21:46,2.92,,1,,"b'b"" Only thing I\'d like to check though is how iOs app switching works. I vaguely remember that it requires the to work. As in"," a Bitcoin app needs to register  .  If that\'s true then some websites might put in there. In that case it would be nice to support it if it\'s doable. Unfortunately I\'m without iPhone for a few more days...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,14,2017-11-09 16:21:46,34.12,1,,,"b'b"" I just tried this in the iOs Simulator. It\'s the same behavior as on a Mac; in Safari address bar you need to use  ", but a link can just use (e.g. try the BitPay demo page). I can double check on a device later," but I suspect it will work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,15,2017-11-09 16:21:46,233.82,1,,,"b""b' What @jonasschnelli said. insensitive data", giving an implicit license to normalizers to  convert this data to a common case (e.g.," all lowercase).  The scheme *does not* define this property for the address.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,16,2017-11-09 16:21:46,464.95,1,,,"b'b""  Yes. The bitcoin:// workaround seems a bad idea. I\'m not sure why it was done at the time (maybe some popular site was doing that?)"," but after all this time I would hold people to follow BIP21 to the letter. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,17,2017-11-09 16:21:46,275.6,,1,,"b""b' Should we remove that workaround ( the incorrect comment about  ) from the code in that case?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,18,2017-11-09 16:21:46,1081.75,,1,,"b""b' @Sjors: Yes. A PR would be welcome. Ideally an error message gets spit in case of a (maybe a specific one because we did support it partially in the past).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,19,2017-11-09 16:21:46,807.25,,1,,"b""b' Can we close this now that #12723 is merged?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,closed,2018-03-27 22:11:42,123.33,8,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11645,closed,-,-,-,8,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,opened,2017-11-10 09:38:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,title,2017-11-10 09:38:15,00:00,,1,,"b""b' Add missing locks:  + related'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,body,2017-11-10 09:38:15,00:00,,1,,"b""b' Add missing locks required when accessing:   Also"," add the locking annotations that follow from the requirements above.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,1,2017-11-10 09:38:15,1322.25,,1,,"b""b' Anyone willing to review? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,2,2017-11-10 09:38:15,814.02,,,1,"b'b"" @ajtowns @TheBlueMatt Thanks for reviewing! I\'ve now addressed your feedback. Would you mind re-reviewing? :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,3,2017-11-10 09:38:15,125.97,,1,,"b'b"" General note: Instead of documenting the locking assumptions in the OP of this pull request", wouldn\'t it be better to put them in the header files? Imo," this increases review efficiency.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,4,2017-11-10 09:38:15,0.87,,1,,"b'b"" @MarcoFalke You mean as an interim before we\'ve added annotations for each guarded variable?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,5,2017-11-10 09:38:15,18.73,,1,,"b""b' No"," I meant adding the to header files whenever possible'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,6,2017-11-10 09:38:15,1116.35,,,1,"b""b' @MarcoFalke Sure! New version with + the implied :-)  Could you please review? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,7,2017-11-10 09:38:15,0.35,,1,,"b""b' Hrmm"," the build seems to timeout for some reason.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,8,2017-11-10 09:38:15,419.7,,1,,"b""b'  Should be fixed by rebasing after #12772'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,9,2017-11-10 09:38:15,592.93,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,10,2017-11-10 09:38:15,843.58,,,1,"b""b' 9bd9d9f8302d4cdde2f25f4d7a008f8f0a0ccea2 looks good to me", fwiw," but it needs another rebase anyway to cope with scoped enums.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,11,2017-11-10 09:38:15,83.2,,,1,"b""b' Rebased!  @ajtowns Thanks for the review. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,12,2017-11-10 09:38:15,541.62,,,1,"b""b' Rebased! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,13,2017-11-10 09:38:15,120.67,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,14,2017-11-10 09:38:15,1164.2,,,1,"b'b"" Thanks to @TheBlueMatt\'s insightful review I\'ve now managed to reduce the size of this PR significantly (by having perform locking). Thanks!  Please re-review :-) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,15,2017-11-10 09:38:15,1167.55,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,16,2017-11-10 09:38:15,584.02,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,17,2017-11-10 09:38:15,803.25,,,1,"b""b' @MarcoFalke Thanks for reviewing! Now moved to the header file. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,18,2017-11-10 09:38:15,851.47,,,1,"b""b' Rebased! Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,19,2017-11-10 09:38:15,343.75,,1,,"b""b'  What is this and how to stop getting these constant notifications? Sent via the Samsung GALAXY S\\xc2\\xae 5", an AT&T 4G LTE smartphone -Original message -From: DrahtBot  Date: 7/9/18 19:29 (GMT-05:00) To: Cc: Subscribed  Subject: Re: [] Add missing locks:  + related (#11652)  Needs rebase  \\xe2\\x80\\x94 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub," or mute the thread. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,20,2017-11-10 09:38:15,1029.38,,,1,"b""b' Rebased! Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,21,2017-11-10 09:38:15,392.57,,,1,"b""b' @MarcoFalke Thanks for reviewing! Feedback addressed. Let me know if it looks good now. I\\xe2\\x80\\x99ll implement the changes into #13083 when the changes introduced here has been reviewed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,22,2017-11-10 09:38:15,1399.27,,1,,"b""b' @MarcoFalke Pushed an updated version. See the latest commit which adds ( ) plus required locking. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,23,2017-11-10 09:38:15,895.83,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14711]url  (Remove uses of chainActive and mapBlockIndex in wallet code by ryanofsky)* [#14193]url  (validation: Add missing mempool locks by MarcoFalke)* [#13204]url  (Faster sigcache nonce by JeremyRubin)* [#9381]url  (Remove CWalletTx merging logic from AddToWallet by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,24,2017-11-10 09:38:15,895.18,,,1,"b""b' Updated!  @ajtowns @TheBlueMatt @MarcoFalke @ryanofsky Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,25,2017-11-10 09:38:15,1346.42,,1,,"b""b'  Looks like you never did this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,26,2017-11-10 09:38:15,350.2,,,1,"b'b\' @TheBlueMatt Can you confirm that your suggestion is addressed in the latest version? :-)  If not I might need help identifying the ""load-from disk loop thing"" :-)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,27,2017-11-10 09:38:15,869.55,,,1,"b""b' @TheBlueMatt Friendly ping :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,closed,2018-11-12 16:08:20,390.08,0,12,17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,28,2017-11-10 09:38:15,620.7,,,1,"b'b"" @MarcoFalke I\'ll do that once my other two open locking PRs #13128 and #13123 have been processed (either merged or closed). I try to limit my work in progress in the form of open pull requests :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,29,2017-11-10 09:38:15,463.62,,1,,"b""b' I think this can be reopened and rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,30,2017-11-10 09:38:15,20.4,,,1,"b'b"" @MarcoFalke I force-pushed before re-opening"," so now I\'m unable to re-open. Could you re-open? :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,31,2017-11-10 09:38:15,23.5,,1,,"b'b"" I can\'t force push 7e11716932b8a1f6f1aa2c06e1990b64950a89bc to your branch either"," since the pull request is closed.  Try  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,reopened,2019-01-10 18:03:12,114.87,0,14,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,32,2017-11-10 09:38:15,5.83,,,1,"b""b' @MarcoFalke Thanks! Now re-opened and force-pushed. WIP for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,33,2017-11-10 09:38:15,66.98,,1,,"b'b"" @MarcoFalke I\'m a bit unsure how to resolve the locking errors below (see Travis OS X output). Do you have any suggestion?  If succeeds then we have acquired and access to should be OK? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,34,2017-11-10 09:38:15,3.38,,1,,"b'b"" The compiler doesn\'t understand that"," though. You\'d have to add a temporary annotation or use the interface (c.f. #14711)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,35,2017-11-10 09:38:15,23.6,,1,,"b""b' re: url  You could use the class to resolve these errors. See 081accb875412f38718f2e40ed7bbdf15e6f4ef8 from #14437 for examples. Rebasing on top of #14711 would also resolve them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,36,2017-11-10 09:38:15,85.17,1,,,"b'b"" @MarcoFalke Would you mind taking over this PR if it put it up for grabs? At the moment I\'m afraid I don\'t have time to resolve the remaining issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,37,2017-11-10 09:38:15,27.65,,1,,"b""b'  Are there other issues besides the need for lock annotations in the wallet? If not", we could just treat this PR as blocked until #14711 is merged," since it removes the need for them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,closed,2019-01-17 21:32:05,208.88,1,18,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,38,2017-11-10 09:38:15,1.83,,1,,"b'b"" Closing in favour of PR #15191 and #15192. They cover everything in this PR except the locks.  I\'ll revisit the missing locks required for once #14711 is merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11652,closed,-,-,-,1,19,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,opened,2017-11-20 05:48:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,title,2017-11-20 05:48:49,00:00,,1,,"b'b"" \'make check\' fails on OSX 10.13.1""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,body,2017-11-20 05:48:49,00:00,,1,,"b""b' ### Describe the issue  ### What version of Bitcoin Core are you using", where did you get it (website, self-compiled," etc)?  Master branch at 7293d064133aeafd9f0ae0bdbb2ed74a44d91ecc  ### What type of machine are you observing the error on ( and disk type)?  OSX 10.13.1 Xcode 9.1  ### Attach test [test-]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,1,2017-11-20 05:48:49,847.87,,1,,"b""b' Can you attach the  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,2,2017-11-20 05:48:49,387.65,,1,,"b""b' Sure. I update my comment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,3,2017-11-20 05:48:49,231.37,,1,,"b""b'  On what filesystem do you run the tests? External USB thumb drive? Did this issue came up after switching from 10.12 to 10.13 (or 10.13.0 to 10.13.1)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,4,2017-11-20 05:48:49,181.68,1,,,"b""b' I make and run in my MAC hard drive. As I remember"," it also failed when I ran in OSX 10.12.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,5,2017-11-20 05:48:49,487.12,,,1,"b""b' On OSX 10.13.0 here"," my tests went fine on current master. Did you install all the requirements?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,6,2017-11-20 05:48:49,214.2,,,1,"b'b"" @Varunram what\'s the current state here? #11767 makes it look like your issue was resolved. Are you happy to close this issue?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,7,2017-11-20 05:48:49,1104.57,,,1,"b'b"" @jnewbery I\'d gladly close the issue"," but I don\'t have the rights to do so :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,closed,2018-03-28 15:38:06,589.28,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,reopened,2018-03-28 15:38:19,0.22,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,8,2017-11-20 05:48:49,15.53,1,,,"b""b' Oh sorry", this was opened by @Ankarrr . @Ankarrr ," are you happy to close?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,9,2017-11-20 05:48:49,37.83,,1,,"b""b' Can you reproduce the failure?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,closed,2018-04-20 02:08:35,630.27,2,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11731,closed,-,-,-,2,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,opened,2017-11-20 14:47:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,title,2017-11-20 14:47:32,00:00,,1,,"b""b' [refactor] Remove magic numbers from HMAC SHA256'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,body,2017-11-20 14:47:32,00:00,,1,,"b""b' Problem: Magic numbers are used to determine sizes"," but are error prone.  Solution: Change to be so that it can be used in array sizes. Use arrays so the size is carried with the variable instead of external computation. Cleanup initialization and further setting of which can now be simplified because it is a instead of a C-array.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,1,2017-11-20 14:47:32,202.05,,,1,"b""b' Any style changes should probably be kept consistent across the following files :-) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,2,2017-11-20 14:47:32,68.07,,1,,"b'b"" Please read: url I don\'t like the magic numbers this PR tries to change"," though I less like changing *some* of the magic values. Also the code is less readable afterwards (IMO).  It\'s like with code formatting. Lets just accept how it is and concentrate on new code.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,3,2017-11-20 14:47:32,396.45,,,1,"b""b' I intend to move this to a more compile-time and compiler-optimizer friendly generic implementation of all of the crypto algos. This is just step 1. I think most of this code can be eliminated through usage of templates.  Since I am new", I am trying to adhere to the  guidelines. @jonasschnelli," can you point to which ones you want me to focus on more directly?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,4,2017-11-20 14:47:32,142.3,1,,,"b'b"" I\'m not convinced about the long term goal of eliminating code through templates. Cryptographic code like this is incredibly stable", so the usual reasons for doing refactoring like this (easier maintenance) don\'t really apply it\'s likely possible to not ever touch it.  However, as such all the changes here look fine to me. Not sure the variables are necessary," but moving to a more C++ish style doesn\'t sound bad.  Concept ACK""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,5,2017-11-20 14:47:32,266.47,,1,,"b'b"" Concept ACK modulo @sipa\'s feedback and assuming that any changes performed are applied consistently across: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,6,2017-11-20 14:47:32,894.77,,1,,b'b\' I agree with @sipa. This code (and the other algorithm implementations) are critically important, already very stable," and could probably exist ""as is"" for a very long time. Refactoring for the sake of refactoring or ""clean up"" is basically all risk"," with seemingly very little potential reward. What there is the potential for is introducing  bugs. Amplified by the fact that the group of reviewers for this kind of the work is quite small.  @ldm5180 If you\\\'re planning on large scale refactoring of ""all of the crypto algos""", it\\\'d be great if you could open an issue and outline what some of your ideas and goals are. i.e Performance, making the code more readable, reusable etc? Otherwise, continual changes to this code are likely to sit in limbo.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,closed,2017-11-21 23:37:38,530.1,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,reopened,2017-11-21 23:37:41,0.05,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,7,2017-11-20 14:47:32,881.88,,1,,"b""b' I will re-write this an reopen when ready.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,closed,2017-11-22 14:19:31,881.83,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11735,closed,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,opened,2017-11-22 09:41:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,title,2017-11-22 09:41:54,00:00,,1,,"b""b' wallet: Set m_last_block_processed to nullptr in SetNull()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,body,2017-11-22 09:41:54,00:00,,,1,"b""b' Prior to this commit the non-static class member was not initialized in the constructor nor in any functions that the constructor calls.  was introduced in 5ee31726360cbe343f5a1a50a5e440db736da5b7 (part of PR #10286) which was merged into master a couple of days ago.  Friendly ping @TheBlueMatt :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,1,2017-11-22 09:41:54,281.37,,1,,"b""b' @promag is guarded by according to this comment in  :  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,2,2017-11-22 09:41:54,33.43,,1,,"b'b"" IMO it should be guarded by  ", it\'s a wallet thing. is changed in: url And as you can see both and are held.  Then," here should be locked too: url   is needed because of  .  @TheBlueMatt wdyt?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,3,2017-11-22 09:41:54,43.55,,,1,"b'b"" @promag Sounds reasonable! I\'ll update once we get @TheBlueMatt\'s clarification :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,4,2017-11-22 09:41:54,54.7,,,1,"b""b' @promag Would replacing the current commit with the following be in line with your suggestion? :-)   Looks good? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,5,2017-11-22 09:41:54,170.08,,,1,"b'b"" Ugh", this is set fine in the place CWallets are created, I agree it should be initialized, but it\'s not a bug and going back and forth on stuff like this is just a waste of time. Most importantly, this obviously doesn\'t need a cs_main, is there really some static analyser that wants that there? On November 22, 2017 7:40:24 AM PST," practicalswift  wrote:>@promag Sounds reasonable! I\'ll update once we get @TheBlueMatt\'s>clarification :-)>You are receiving this because you were mentioned.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,6,2017-11-22 09:41:54,62.35,,,1,"b'b"" @TheBlueMatt I agree that fixing static analyzer warnings in mature old code is not worth it", but I think the case could be made that we can be more liberal in accepting fixes for static analyzer warnings introduced by brand new code (such as this merged only days ago). Sounds reasonable?  I don\'t have any strong feelings about the initialization fix (beyond the warm fuzzy feeling of seeing the number of static analyzer warnings decrease rather than increase over time), but I feel very strongly about getting the locking requirements annotated correctly :-)  That takes us to the important part discussed in this PR:  The comment \\xe2\\x80\\xa6  url \\xe2\\x80\\xa6 suggested that is guarded by  ," so a corresponding Clang thread analysis annotation was added (in the annotations PR) \\xe2\\x80\\xa6   \\xe2\\x80\\xa6 and hence the in (as enforced by Clang\'s thread safety analysis).  What is the correct locking annotation for \\xe2\\x80\\x93 is it rather than  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,7,2017-11-22 09:41:54,3.7,,1,,"b'b"" My point was not that we shouldn\'t accept simple static analysis fixes", but more that we should keep them simple and avoid review burden by making them as minimal as possible and not going back and forth on them. Static analysis shouldn\'t complain about variables in a constructor, and adding an extern cs_main in wallet.h just sucks either move SetNull to the .cpp or move the setting to the constructor (does anything even use SetNull?). On November 22, 2017 12:27:33 PM PST, practicalswift  wrote:>@TheBlueMatt >worth it, but I think the case could be made that we can be more>liberal in accepting fixes for static analyzer warnings introduced by>brand new code (such as this merged only days ago). Sounds>reasonable?>the warm fuzzy feeling of seeing the number of static analyzer warnings>decrease rather than increase over time)," but I feel very strongly>about stating all locking requirements explicitly :-)>corresponding Clang thread analysis annotation was added \\xe2\\x80\\xa6>thread safety analysis).>is it rather than  ?>You are receiving this because you were mentioned.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,8,2017-11-22 09:41:54,4.2,,1,,"b""b' @TheBlueMatt I agree that adding an extern in sucks \\xe2\\x80\\x93 the locking annotation is obviously incorrect :-)  Is \\xe2\\x80\\xa6   \\xe2\\x80\\xa6 the correct locking annotation for  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,9,2017-11-22 09:41:54,4.57,1,,,"b'b"" I believe that is (currently) correct", though we may be able to change it. I think it\'s time to think harder about wallet cs_main locking, especially with @ryanosky\'s work, I believe there\'s an opportunity to rethink a bunch of it when adding annotations. Either way, can we avoid ugly patches that result in a bunch of time wasted going back and forth just to fix (incorrect) static analysis warnings? On November 22, 2017 12:35:24 PM PST," practicalswift  wrote:>@TheBlueMatt I agree that adding an extern in  >sucks \\xe2\\x80\\x93 the locking annotation is obviously incorrect :-)>You are receiving this because you were mentioned.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,closed,2017-11-22 20:41:19,659.42,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,reopened,2017-11-22 20:42:14,0.92,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,closed,2017-11-22 20:42:27,0.22,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11749,closed,-,-,-,1,5,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,opened,2017-11-24 15:48:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,title,2017-11-24 15:48:57,00:00,,1,,"b""b' [docs] initial QT documentation'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,body,2017-11-24 15:48:57,00:00,,1,,"b'b"" I\'ll update this as I figure out how everything is tied together"," but I think it\'s a useful enough start.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,1,2017-11-24 15:48:57,948.6,,1,,"b""b' Not so sure. I think design documents would be helpful", though may outdate quickly, especially if there are filenames.  Also," we have already a Qt Creator part in [OS X build docs]url  (not sure if it belongs there).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,2,2017-11-24 15:48:57,222.27,,1,,"b""b' I guess you should add prefix to the title and meanwhile try to improve with useful documentation. Also not sure if that belongs to the source code or to some blog?..'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,3,2017-11-24 15:48:57,708.5,,,1,"b'b"" This seems (so far) to mostly be a collection of  that are already available in the docs. I don\'t think there\'s much benefit in repeating build instructions", or other info that\'s already available elsewhere, as it just creates an opportunity for information to get out of sync.  I think @jonasschnelli has a point about the Qt Creator stuff that is just tacked onto the OS X build notes. If your going to do this, see if you can pull all the info together into a single file," rather than repeating  linking back to it.  Edit: Accidentally hit close.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,closed,2017-11-25 23:08:19,439.37,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,reopened,2017-11-25 23:08:22,0.05,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,4,2017-11-24 15:48:57,588.18,,1,,"b'b"" My initial idea was to make it a quick introduction to the code in this directory with pointers to  more detailed information.  Given that QT is almost a standalone application", it could make sense to instead move all QT documentation to one place. In that case, would url  be more appropriate?  Either way, I don\'t think it should be too detailed, because then it won\'t be kept up to date. It should just be enough for a new developer familiar with MVC, but not with QT to get a sense of how the QT app is organized. More detailed descriptions can be inside individual source code files.  Some documentation could be avoided by adding more directories and using more consistent file naming, but that\'s future work, I think. @fanquake the build instructions are currently separated per OS (Unix is the most detailed). They don\'t specify how to build bitcoin-qt only (without compiling tests). I could add that there, or I could add links to build instructions for specific parts of the application. Maybe there should be a common build instructions file (pointing to each OS-specific file)," which lists the various config flags and explains how to build specific targets?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,5,2017-11-24 15:48:57,1374.0,,,1,b'b\' I think the overview of files and directories is useful!  The building stuff I\\\'d prefer to keep only in because it\\\'s different per platform," in some cases per compiler ( we add the MSVC build system). Please don\\\'t encourage to skip building the tests.  I\\\'d generalize that to ""how to build individual executables with the automake build system""", it\\\'s not Qt specific, the same could be used to build e.g. only the tests. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,6,2017-11-24 15:48:57,484.68,,1,,"b'b"" I got rid of the build instructions"," moved Qt Creator stuff over from OSX build and added a few hints.  I\'ll keep updating this PR as I wrap my head around all of QT\'s moving parts.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,7,2017-11-24 15:48:57,232.88,,,1,"b""b' Looks good to me now. ACK url (after you remove the WIP tag)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,8,2017-11-24 15:48:57,823.47,,1,,"b""b' @laanwj WIP label removed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,closed,2018-02-09 09:54:57,646.58,0,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11761,closed,-,-,-,0,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,opened,2017-11-24 18:54:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,title,2017-11-24 18:54:00,00:00,,1,,"b""b' Avoid locking mutexes that are already held by the same thread'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,body,2017-11-24 18:54:00,00:00,,1,,"b""b' Avoid locking mutexes that are already held by the same thread. These are reentrant mutexes"," but still no need to lock them more than once per thread :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,1,2017-11-24 18:54:00,1295.87,,1,,"b""b' utACK 9f857d5.  Are these random picks? For instance"," can assert the lock too right?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,2,2017-11-24 18:54:00,74.27,,1,,"b""b' Why would we need the runtime check when there is a compile time check?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,3,2017-11-24 18:54:00,103.73,,,1,"b'b"" @promag No", these are not random picks. They were the ones I could find," verify manually and passes both + with nothing but trivial changes :-)  The lock in you suggested could also be removed but that would require more fine grained locking in the corresponding tests. If you have time then please post a diff of that locking change and I\'ll make it part of this PR :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,4,2017-11-24 18:54:00,1.57,,1,,"b""b' @MarcoFalke I replaced the with to make it easy to verify also for reviewers not building with Clang thread safety analysis warnings enabled. Should I remove them? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,5,2017-11-24 18:54:00,5.78,,1,,"b""b' @promag Do you have any additional suggestions beyond  ? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,6,2017-11-24 18:54:00,1.2,,,1,"b""b' I think it is fine to leave them for now", but it seems arbitrary to add run time checks to a subset of methods that already have the compile time check. I know that not everyone compiles with clang, but at least for releases we do and I am sure some developers build with clang," so it should be noticed quickly.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,7,2017-11-24 18:54:00,90.68,,1,,"b'b"" I wasn\'t suggesting to remove more locks. Maybe these changes are preferable in small PR\'s.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,8,2017-11-24 18:54:00,100.1,,1,,"b""b' Added the annotation to  . @promag Would you mind re-reviewing? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,9,2017-11-24 18:54:00,1354.48,,1,,"b""b' @theuni @promag @MarcoFalke Updated to address feedback. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,10,2017-11-24 18:54:00,5.05,,1,,"b""b' utACK 96b6899e2c9b4a86698a6ea64460d045fde68c43'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,11,2017-11-24 18:54:00,570.42,,1,,"b""b' utACK 96b6899e2c9b4a86698a6ea64460d045fde68c43'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,12,2017-11-24 18:54:00,632.47,,1,,"b""b' The last travis run for this pull request was 148 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,closed,2018-07-21 17:29:37,1355.62,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,reopened,2018-07-21 17:29:38,0.02,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,13,2017-11-24 18:54:00,18.33,,1,,"b""b' @MarcoFalke Now skipping the change to as suggested.  Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,closed,2018-07-22 13:42:53,1213.25,0,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11762,closed,-,-,-,0,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,opened,2017-11-29 05:26:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,title,2017-11-29 05:26:29,00:00,,1,,"b""b' Raise the open fd limit to the maximum allowed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,body,2017-11-29 05:26:29,00:00,,1,,"b""b' As noted in url  if too many connections are made to the RPC interface", then other code will fail on open(2) syscalls with EMFILE. The result can be that the block database gets into an inconsistent state.  On many Linux distributions, by default, each process has 1024 file descriptors; these are shared between open files and network connections. The main init code attempts to apportion them between uses, but neglects to constrain the RPC layer: url Unfortunately, libevent does not allow a natural way to bound the number of file-descriptors used by the evhttp server. Therefore, we have to resort to requesting to stop new connections by disabling the accept listener in the epoll event structure. This is not a good way to control load, and more connections are accepted until the next epoll cycle is triggered, but it does stop an unbounded number of connections from being created, and does prevent a high number of connections to the RPC layer from damaging the rest of the system.  To avoid problems of a similar nature, the second patch additionally raises the rlimit of number of file descriptors as high as it can go.  To repro the database crash and validate the fix," the following  fragment:  The messages around the database crash due to open(2) failing due to too many open files  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,1,2017-11-29 05:26:29,198.47,,,1,"b""b' Nice find. Thanks for reporting!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,2,2017-11-29 05:26:29,76.9,,,1,"b'b"" Thanks!  It\'s kind of disappointing that evhttp has no way to limit file descriptors. This is the so-manieth hack we need to accommodate it. It\'s also not very actively maintained so trying to push any fix upstream will take a long time", if ever. I sometimes wonder if moving to [libevhtp]url  which seems to be the quasi-standard for http servers on top of libevent," would solve these issues.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,3,2017-11-29 05:26:29,7.02,,1,,"b""b' Should we add a stress test to travis?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,4,2017-11-29 05:26:29,218.63,,1,,"b'b"" @laanwj yes it is disappointing that there isn\'t a better API to manage this systemic issue in evhttp.  Even more unfortunately", some configurations in Travis use an old version of libevent that doesn\'t have the bevcb callback or the ability to count added file descriptors. I\'ve updated the pull request correspondingly. Protection is only available on newer libevents :(  What programs are available in Travis? Various configurations of url  would be good tests," for example ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,5,2017-11-29 05:26:29,1405.9,,1,,"b'b\'  I think it would make sense to add a ""known issue"" to the release notes", recommending people that stumble on file descriptor problems while doing a lot of separate RPC requests to upgrade their libevent.  FWIW minimum seems to be 2.1.4:  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,6,2017-11-29 05:26:29,866.1,1,,,"b'b"" This was discussed on IRC and according to @theuni this doesn\'t fully solve the problem"," unfortunately. He could still fairly easy crash the server with many connections. So it will have to be solved from inside libevent.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,7,2017-11-29 05:26:29,83.08,,1,,"b'b"" Yes", I\'ve spent the last 2 days trying to work out our best option here. The provided patch is a big help, but I think there are a few more things we can do," namely a libevent patch. I\'ll push up some more changes tomorrow and we can discuss what it makes sense to pull in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,8,2017-11-29 05:26:29,507.1,,1,,"b""b' @theuni here is a libevent patch that provides sufficient functionality to constrain the number of file-descriptors to a tight bound: url In the meantime", as we work through the process to change libevent," the pull request here mitigates the original issue and defends against similar ones'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,9,2017-11-29 05:26:29,1020.65,,,1,"b'b"" @vii Nice work on the upstream patch. It\'ll be great to have a real solution for this.  I have a few concerns about the approach here:  event_base_get_num_events is not a great representative of the connection count", as our own timers and triggers will throw off the count I think keep-alive connections need to be closed if they\'re re-used once the connection limit has been reached, otherwise it becomes trivial to monopolize the available slots. It unfortunately doesn\'t help with libevent 2.0.x, which is by far the majority in the wild.  I\'ve adapted your approach and added in a few extras which manage to work-around the issue for libevent 2.0.x as well. With this, I\'m unable to raise my fd count above the desired ceiling," no matter how hard I hammer.  Please have a look here and see what you think: url  Note that there\'s an unlikely potential race at shutdown that I haven\'t yet addressed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,10,2017-11-29 05:26:29,180.13,,,1,"b""b' Great! Yes it would be nice to have a (potentially messy) workaround for older libevent"," and a clean solution for future upstream versions. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,11,2017-11-29 05:26:29,1225.85,,,1,"b'b"" @theuni your patch looks great! I was cautious about modifying so much.  Given the discussion", I\'ve reduced my pull request to the simple improvement of making sure to request as many file descriptors as possible.  With @theuni\'s improvement to only accept connections that have data on, honest HTTP connections will go into the connection limiter. However, I suspect adversaries using things like the slowloris attack (which send incomplete requests and then pause) will not be caught and will use resources. These can be controlled if the libevent request is included, but otherwise can be detected but not perfectly controlled using the approach in the first request, which binds to the rather toothless bevcb callback.  One way to look at this is that the root issue is that there is a process wide file-descriptor allocation defined in url  but the RPC interface isn\'t accounted for. Would be great to integrate @theuni\'s ConnectionLimiter into that!  Is it worth defending against slowloris style attacks given the RPC interface is generally not accessible to adversaries?  In this pull request," his small change to request as many file-descriptors as possible should help mitigate the original issue on many default configurations (e.g. Ubuntu).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,12,2017-11-29 05:26:29,729.47,1,,,"b""b' this small change to request more file-descriptors does not depend on the libevent patch (which is making progress towards acceptance) but alleviates the issue in many configurations except for deliberate attacks  Please review!  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,13,2017-11-29 05:26:29,589.27,,,1,"b""b' the libevent change has been merged into that repo so we can have a complete fix url  but the limited PR here does not depend on it  Happy to make a more complete fix if it would be reviewed!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,14,2017-11-29 05:26:29,1135.25,,,1,"b'b"" @vii Great work on the upstream fix!  I\'ll clean up my changes and PR them separately. I\'ll go ahead and work in the bevcb for supported versions", so that we can take advantage of that when possible.  As for raising the fd limit, I have mixed feelings. I worry that this will simply mask problems. I believe @gmaxwell was in favor, though.  @gmaxwell: assuming we manage to contain this issue," do you still think maxing out the fd limit is beneficial?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,15,2017-11-29 05:26:29,1136.08,,,1,"b""b' the issue that it masks is that several usages of file-descriptors are not budgeted for in the process wide file-descriptor allocation defined in url  It would be quite difficult to carefully audit for all usages of file-descriptors as library functions may use them for various purposes. Even once the budgeting is done"," this will be helpful!  Please consider and merge'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,16,2017-11-29 05:26:29,105.47,,1,,"b'b"" What I\'d like to know is how does other software handle this? Is it frowned upon for daemons to increase the file descriptor count without being asked? I thought the usual case for UNIX is to make changing resource limits up to the ", and changing them un-asked is deemed rude," but this might be different for file descriptors. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,17,2017-11-29 05:26:29,538.67,1,,,"b""b' @laanwj we are not attempting to change the maximum"," just adjusting to use the maximum we are allowed  Note here is some similar code in the wine project rather more battlehardened but with the same effect on Linux  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,18,2017-11-29 05:26:29,1217.68,,1,,"b""b' @theuni brought this PR to my attention in a conversation we had earlier today. I was actually planning to implement the same behavior", for a completely different reason: I would like to increase the number of file descriptors that leveldb is allowed to use," because performance testing I have done makes me think that the low limit leveldb currently has is causing issues with which pages Linux decides to keep in the page cache. I think increasing the soft limit is safe and reasonable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,19,2017-11-29 05:26:29,1235.33,,1,,"b""b' @eklitzke Is that an ACK on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,20,2017-11-29 05:26:29,1386.78,,1,,"b""b' The last travis run for this pull request was 215 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,closed,2018-07-20 20:30:19,903.83,3,11,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,reopened,2018-07-20 20:30:20,0.02,3,11,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,21,2017-11-29 05:26:29,887.55,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,22,2017-11-29 05:26:29,264.88,,1,,"b""b' Closing this"," reviewing and development bled out and a rebase has been necessary for months. Let me know if I should reopen it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,closed,2019-01-09 15:42:45,1152.42,3,13,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11785,closed,-,-,-,3,13,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,opened,2017-11-30 09:15:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,title,2017-11-30 09:15:59,00:00,,1,,"b""b' net: Avoid locking cs_vNodes twice when calling FindNode(...). Add NodeExists(...).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,body,2017-11-30 09:15:59,00:00,,1,,"b""b' Prior to this commit callers of were required to be holding in the cases where they used the returned for anything aside from existence-checking (see #9626).  This resulted in locking twice since had a  .  To solve this and to make the locking requirements more explicit this commit does the following: * Add explicit locking requirements for using  . * Remove the now redundant in  . * Add a method for existence-checking. Calling this method does not require holding  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,1,2017-11-30 09:15:59,1086.22,,1,,"b""b' Prefer #11604.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,2,2017-11-30 09:15:59,570.0,,,1,"b'b"" @TheBlueMatt But #11604 doesn\'t touch from what I can see? :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,3,2017-11-30 09:15:59,52.32,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,4,2017-11-30 09:15:59,1162.65,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,5,2017-11-30 09:15:59,192.73,,1,,"b""b' @TheBlueMatt Could you explain how #11604 overlaps with the work in this PR? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,6,2017-11-30 09:15:59,675.63,,,1,"b""b' Friendly ping @TheBlueMatt :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,closed,2018-07-21 17:29:32,493.55,0,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,7,2017-11-30 09:15:59,1074.02,,1,,"b""b' The last travis run for this pull request was 131 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,reopened,2018-07-21 17:29:34,0.03,0,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,8,2017-11-30 09:15:59,229.65,,1,,"b""b' Opinion"," @theuni?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,9,2017-11-30 09:15:59,1394.22,1,,,"b'b"" I think it\'s really confusing to require the lock for some functions", and forbid it for others.  It\'s also kinda a step in the wrong direction... ideally cs_vNodes wouldn\'t be held while using a Node*. Instead," it should just have its refcount increased for the duration of its use.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,10,2017-11-30 09:15:59,5.75,,1,,"b'b"" @theuni that\'s how it\'s done with wallets: Where is locked when "," not while a wallet is used.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,11,2017-11-30 09:15:59,723.55,,,1,"b""b' @sipa @theuni @promag Thanks for your input! Closing this PR due to lack of consensus ACK :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,closed,2018-08-01 08:42:43,913.15,1,7,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11795,closed,-,-,-,1,7,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,opened,2017-11-30 20:32:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,title,2017-11-30 20:32:01,00:00,,1,,"b""b' Bugfix: : Include HD key metadata in dumpwallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,body,2017-11-30 20:32:01,00:00,,1,,b'b\' When restoring a backup," we should restore the wallet metadata. This moves some of it out of ""comment"" sections so that it can be sensibly handled by parsing tools.  (  doesn\\\'t currently support it", but that\\\'s another matter to address)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,1,2017-11-30 20:32:01,584.63,,1,,"b""b' @luke-jr: can you please elaborate a little bit what situation this PR does improve?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,2,2017-11-30 20:32:01,210.85,,1,,"b'b"" @luke-jr Can you please answer @jonasschnelli \'s question? There is no rationale in the OP at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,3,2017-11-30 20:32:01,326.2,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,4,2017-11-30 20:32:01,373.98,,1,,"b""b' That should probably be moved to the OP"," so it is recoverable from the merge commit body. (Note that we put the OP text in the merge commit body)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,5,2017-11-30 20:32:01,225.33,,1,,"b""b' Needs rebase if still relevant'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,6,2017-11-30 20:32:01,1105.5,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,7,2017-11-30 20:32:01,1191.92,,1,,"b""b' Needs rebase due to merge of #12924'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,8,2017-11-30 20:32:01,1259.78,,1,,"b'b"" Tested ACK url This isn\'t really a bugfix because there is no bug in the codebase which is fixed right? But I agree its a sensible change. Supporting it with is definitely something that needs to be done"," ideally that should be done at the same time because they\'re mirror functions. But this doesn\'t break compatibility with the current so it should be ok to leave it for a future PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,9,2017-11-30 20:32:01,449.4,,1,,"b'b"" I think it\'s a bugfix because without it (and another fix to importwallet)","  will produce a wallet missing the key metadata. Isn\'t the goal of these RPCs to produce the same wallet?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,10,2017-11-30 20:32:01,1357.28,,1,,"b'b"" Concept ACK and lightly tested 17d609c.  Unrelated"," I don\'t like that the address column depends on the currently active address type. We could replace it with an inferred descriptor after #14477.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,11,2017-11-30 20:32:01,1209.98,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14021]url  (Import key origin data through descriptors in importmulti by achow101) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,12,2017-11-30 20:32:01,558.58,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,13,2017-11-30 20:32:01,900.68,1,,,"b""b' This has been fixed as part of #14021 (not just for  ): It could still be useful to switch over to inferred descriptors"," so we also get the origin info.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,closed,2019-02-15 21:11:21,39.33,1,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,14,2017-11-30 20:32:01,1049.38,,1,,"b'b"" Just noticed that it\'s a seperate field now", but sill in the comment section," so we could move it to the left.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,reopened,2019-02-16 13:34:21,983.0,1,15,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,15,2017-11-30 20:32:01,1324.37,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11803,open,-,-,-,1,16,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,opened,2017-12-11 10:06:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,title,2017-12-11 10:06:15,00:00,,1,,"b""b' Network specific conf sections'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,body,2017-12-11 10:06:15,00:00,,1,,b'b\' The weekly meeting on [2017-12-07]url  discussed allowing options to bitcoin to have some sensitivity to what network is in use. @theuni suggested having sections in the config file:   an alternative to that would be sections in a config file. and on the     cmdline they\\\'d look like namespaces. so, [testnet] port=5. or -testnet::port=5.  This approach is (more or less) supported by -when it sees a section with  ," it will treat that the same as ""=5"". So (or without the section header) in  and on the command line.  The other aspect to this question is possibly limiting some options so that there is no possibility of accidental cross-contamination across networks. For example", if you\\\'re using a particular  on mainnet, you may not want to accidentally use the same wallet on testnet and risk reusing keys.  I\\\'ve set this up so that the and options are  , so that if you have a :  wallet=/   upnp=1  and you run or  , then the setting will be ignored, and should behave as if your  had specified:  upnp=1  [main]   wallet=/  For any options, if you\\\'re using or  ," you\\\'ll have to add the prefix to any command line options. This was necessary for for instance.  I\\\'ve left the ""default"" options as taking precedence over network specific ones", which might be backwards. So if you have:  maxmempool=200   [regtest]   maxmempool=100  your maxmempool will still be 200 on regtest. The advantage of doing it this way is that if you have in , and then say  , the same result is probably in line with what you expect...  The other thing to note is that I\\\'m using the chain names from /  , so the sections are  , and  ; not or as might be expected.  Thoughts? Ping @MeshCollider @laanwj @jonasschnelli @morcos \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,1,2017-12-11 10:06:15,27.07,1,,,"b""b' Ah you beat me to it", will take a look as soon as I can  Early note: as you mention, net-specific should take precedence over default, whereas explicit command line arguments should always take precedence over the config file, so following your example, if is specified as an argument it should use 200 even on regtest, whereas if it is not, the should override the default 200. Then if is an explicit argument as well as  , the explicit regtest one should take precedence IMO.  Then following this logic, specified explicitly as an argument should be used on regtest and testnet as well," using should only be necessary in the config file to save confusion'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,2,2017-12-11 10:06:15,283.62,,,1,"b'b"" Great. Thanks for tackling this @ajtowns. A few high-level suggestions:  I agree with @MeshCollider that the order of precedence should be Command Line I think there shouldn\'t be network-specific command-line options (that\'s almost an implication of the above). I agree with MeshCollider that the user should call with  ", not (side-note choosing a wallet from the wrong network is perhaps less of a problem than you might assume, since is already kind of network-specific as it refers to the name of the wallet in the particular network directory). as well as  , perhaps we want a for options that shouldn\'t be overriden in the network-specific config. Namely those options would be and  . For example don\'t want the following pathological config file to be valid: taking this further, perhaps we should deprecate the use of and in the config file entirely, so you can only select the network by using a command-line option? I\'ve avoided nitting your code at this early point," but I\'d point you at the developer notes here: url  specifically symbol naming.  Your new members should be prefixed for example.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,3,2017-12-11 10:06:15,219.92,,,1,"b""b' Concept ACK. Nice work!  Agree with @MeshCollider and @jnewbery (except the point of deprecating the use of  in config file).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,4,2017-12-11 10:06:15,925.2,,,1,b'b\' Okay, getting that behaviour requires marginally more invasive changes, but I think it\\\'s worth it (and they\\\'re not *that* invasive). New patch series accompanying this comment which: * has arg precedence being: command-line arguments, net-specific config file options, default config file options  * will only use config file options for -addnode and -wallet if you\\\'re on mainnet or put them in the right [regtest] or [testnet] section or add a or prefix  * only allows -testnet and -regtest to be specified in the default section or on the command line (ie, [regtest] testnet=1 silliness is silently ignored)  * for single-value options, precedence is (a) last value specified on the command line, (b) first value specified in the network section of the config file, and finally (c) first value specified in the default section of the config file. the last vs first difference between cli and conf is weird, but matches current behaviour. the code would be slightly improved by making it consistent.  I think that should behave pretty much as expected -specifying things on the command line will always take effect," having a testnet specific config and just invoking ""bitcoind -conf="" should work fine", having separate configs for mainnet, regtest and testnet in a single file with different options should work too.  From the code side of things, I\\\'ve made a bunch of changes: * I\\\'ve dropped mapArgs, and split mapMultiArgs into mapOverrideArgs (for cli arguments are ForceSetArg) and mapConfigArgs (for config files)  * I\\\'ve listed the net-specific options explicitly in  rather than having each use of the options specify that they\\\'re net-specific; seems simpler and much more robust.  * I\\\'ve moved ChainNameFromCommandLine from chainparamsbase into util, so it can have more precise access to how -testnet/-regtest were specified  * I\\\'ve dropped the filename argument from ReadConfigFile and split most of the logic into ReadConfigStream, which makes it more unit-testable  I\\\'ve added some unit tests, but they\\\'re a bit basic; I haven\\\'t done a functional test either. (And it\\\'s still a bit early for detailed code style nits, though I\\\'ve tried to make a token effort to avoid them :) )  Edit: Oh, the previous pass is commit 907dd64994e945a30833200ce1131840b06c8ab7 at url  on the off chance someone wants to look at it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,5,2017-12-11 10:06:15,1164.57,,,1,b'b\' Okay, here\\\'s something for first pass reviews I think.  The first five commits do some refactoring on ChainNameFromCommandLine (moving it from  into :ArgsManager) and ReadConfigFile, primarily to make it easier to add tests for both of them.  c5b5997e1 Move ChainNameFromCommandLine into ArgsManager   eedd60951 [tests] Add unit tests for ChainNameFromCommandLine   f1665f160 Separate out ReadConfigStream from ReadConfigFile   0e78382c3 [tests] Add unit tests for ReadConfigStream   d4367e1c6 [tests] Check ChainNameFromCommandLine works with config entries  The next commit switches from mapArgs and mapMultiArgs (for single and multi value options) to mapConfigArgs and mapOverrideArgs (for config file options and  options).  bdb0c2857 ArgsManager: keep command line and config file arguments separate  The next commit is the first one that should change behaviour, and does most of the work. Unit test, and update to functional test are in the following commits.  0e6679466 ArgManager: add support for config sections   7a51198d3 [tests] Unit tests for config file sections   359c78e2e [tests] Use regtest section in functional tests configs  The next commit changes the behaviour of the addnode, connect, port, bind, rpcport," rpcbind and wallet options: when they\\\'re specified in the config file they\\\'ll only apply to mainnet unless you use a [regtest] or [test] header (or a ""regtest."" or ""test."" prefix).  7be1ddd31 ArgsManager: limit some options to only apply on mainnet when in default section   c031709db [tests] Unit tests for section-specific config entries  Penultimately", there\\\'s special handling for the -regtest and -testnet options," so that ChainNameFromCommandLine will ignore bogus entries like ""[regtest] testnet=1"" or ""[regtest] noregtest"" and won\\\'t return weird results if invoked after the initial call to Select(Base)Params() with a pathological config file like that. cf jnewbery\\\'s comments in url   2933f6016 ArgsManager: special handling for -regtest and -testnet   22da57f19 [tests] Unit tests for -testnet/-regtest in [test]/[regtest] sections  And finally there\\\'s also an update for the release notes.  ee91028e7 Add config changes to release notes  Notes:  I\\\'ve called the member variables things like ""m_mapConfigArgs"" rather than fully snake-case map_config_args or similar as a compromise between the coding style and what\\\'s already in use in the class.  I needed a few helper functions with access to protected ArgsManager member variables; rather than add them to util.h directly", I made a friend class for them," ArgsManagerHelper. It\\\'s not crazy pretty but it seems alright. Maybe they should go in util_helper.h or similar though?  I got the locks wrong for cs_args and csPathCached initially -was tempted to add ""AssetLockNotHeld()"" to GetDataDir to help avoid this", but it runs into two problems: in some threads GetDataDir() is called before any locks are acquired leaving lockstack==nullptr and causing a segfault (which can easily be avoided by just adding the assert after LOCK(csPathCached)); and cs_args is protected so it would\\\'ve required another ArgsManagerHelper functions.  The datadir option is a little tricky. Currently you have three options:  don\\\'t specify -datadir anywhere, just use the default specify -datadir on the command line specify -datadir in the config file only (the config file may be located via the default datadir)  With these patches it would be possible to have a fourth option: specify datadir in the applicable network section of the configfile, allowing a single config file to specify different datadirs for regtest and testnet. At present the code locks datadir into place before selecting the network, so that hasn\\\'t been implemented in this PR.  The fact that -addnode, -connect, etc only apply to main net is specified in  rather than in the files that care about the options. This is something that can be cleaned up in the rework of argument handling that @MeshCollider has been working on.  I think the approach makes sense at this point, so reviews appreciated and nits welcome I guess!\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,closed,2018-03-05 19:20:20,554.08,1,2,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,reopened,2018-03-05 19:28:34,8.23,1,2,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,6,2017-12-11 10:06:15,823.5,,,1,"b""b' Was already wondering why this was closed!  Edit: overall looks ok to me! had some small comments in person"," but nothing major. Will test this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,7,2017-12-11 10:06:15,1432.12,,1,,"b'b"" I think this is far enough along to have the brainstorming tag removed because at least to me it feels almost unready to be reviewed if it has that tag", more of a high-level discussion thing. Definite Concept ACK if I haven\'t already said so. I\'ll review soon.  For reference," this also supersedes the issue #9374""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,8,2017-12-11 10:06:15,806.95,1,,,"b'b""  I tend to agree. Let\'s remove the WIP tag and try to get this in for 0.17.0. As I understand it"," the issues left are pretty much documentation and message related.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,9,2017-12-11 10:06:15,345.13,,1,,"b""b'  Current implementation is blocked on issue #12640 "," which is fixed in #12756. Please review that (simple) PR if you want this to be merged :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,10,2017-12-11 10:06:15,2.28,,1,,"b""b' #12756 is in master and I wanted to test this", so I rebased. There was a trivial merge conflict in feature_config_. It might be quicker if you grab my rebased branch here: url I can confirm with #12756," we no longer crash in any of the functional tests.  I think there are still a few review comments for you to address.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,11,2017-12-11 10:06:15,42.62,,1,,"b'b"" Should address most of the comments", including the style nits.  I haven\'t updated the help for -addnode or -connect; not sure what to update it to... Also have not added a log message warning when no config option has been found despite a config option being present in the default section. Do have an idea how to do that, so may add it tomorrow.  Dropped [wip] from the subject; someone might want to drop the brainstorming label," \'cause I can\'t. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,12,2017-12-11 10:06:15,20.8,,,1,"b'b""  I\'ll review once you\'ve decided how to tackle this :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,13,2017-12-11 10:06:15,925.75,,,1,"b'b"" Took the opportunity to bump the dates on the commits to encourage github to list them in the right order.  It now gives a warning at startup if you\'re on testnet or regtest", have one of the section-only arguments in the default section of the config file, and haven\'t overridden that argument either on the command line or in the appropriate config section. The warnings are checked via InitParameterInteraction() to avoid updating multiple places and it\'s kind-of a parameter interaction.  travis failures seem to just be the currently expected ones -mingw32 tests timing out," and the one fixed by #12821.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,14,2017-12-11 10:06:15,90.5,1,,,b'b\' Rebased again. #12713 made this a bit more complicated -how negated options (-nofoo) work with the config files is (in my opinion) a bit confusing as implemented, and coping with negated options and sections makes it a bit more confusing. As a consequence, I\\\'ve broken out the first set of  patches into its on PR (#12878) which includes some additional tests for the current behaviour of negated options. For this PR," the way I\\\'ve handled things is to make ""-nofoo"" empty the vector of values for ""foo""", and to consider an empty vector an indication that the arg is negated. I think that ends up behaving reasonably logically, and the changes are hopefully indicated in the corresponding unit tests.  EDIT: bah, github ordering is wrong, i\\\'ll fix the dates and bump the PR again. fixed and bumped.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,15,2017-12-11 10:06:15,395.95,,1,,"b'b"" I\'ve reviewed #12878. Will review this once that PR is merged and this is rebased.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,16,2017-12-11 10:06:15,300.22,,1,,"b'b"" Concept ACK.  Right now", If I introduce a regtest2 section, for example, it will simply be ignored," correct? I\'m wondering how this will interact with url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,17,2017-12-11 10:06:15,635.93,,1,,"b'b"" @jtimon If you put a section in  today", it will be ignored -under the hood the options are just prefixed with the section, so you\'d just be setting which would never get looked up. I think as far as #8994 goes, the call to SelectConfigSection() that this PR adds inside SelectBaseParams() should keep the config section used (by this PR) in sync with the chain used (by your PR)," so things should work out okay.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,18,2017-12-11 10:06:15,2.3,,1,,"b""b' Rebased post #12878 merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,19,2017-12-11 10:06:15,352.6,1,,,"b'b"" Fixed a bunch of @jnewbery\'s . Rebased against master to pick up the automated test improvements.  For anyone who got part way through reviewing", piecemeal changes from then to now are on url  with the same underlying tree:   EDIT: oops," missed a trailing space""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,20,2017-12-11 10:06:15,505.47,,,1,"b""b' utACK c25321ff96737bdba80d626d2425ef02c7a4c181. Thanks for addressing all of my nits!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,21,2017-12-11 10:06:15,1307.33,,1,,"b'b"" I\'ve tested this a bit and it appears to work as expected. I\'ve tested that it\'s possible to override the port"," and proxy configuration per network. I\'ve also tested that putting in the general section still works.  utACK c25321ff96737bdba80d626d2425ef02c7a4c181 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,closed,2018-04-16 18:53:35,1405.02,4,11,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,22,2017-12-11 10:06:15,618.28,1,,,"b'b"" I saw that too late but this PR is a major pain in the ass. Please be more careful with breaking changes", especially there was no good reason to break anything.  Not only it broke existing configuration file, but on top of it it call the testnet section instead of .  This mean I can\'t easily migrate such [templated configuration]url without doing major refactoring," or hack in the entrypoint of my docker compose to replace by  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,23,2017-12-11 10:06:15,1328.0,,1,,"b'b"" Is there even a documentation of the section names? What we have used so far as pseudo-documentation is the config generator from @jlopp url  However", it neither contains a section like mentioned in url  and places the option currently under the section. This doesn\'t work anymore and bitcoind seems to completely ignore the option if it\'s under the section.  We second @NicolasDorier, 0.17 breaks [our templated approach]url  and [install assistant]url  as well, which we use on the [zHIVErbox]url  a low cost, TAILS-inspired security fortess. Looks like a refactoring is needed to support 0.17," which might be OK if it\'s backwards compatible and the config templates still work on <0.17? But if we need to maintain separate templates for different bitcoin versions it get\'s ugly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,24,2017-12-11 10:06:15,1359.0,1,,,b'b\' Unless I\\\'m mistaken," I think we can restore complete backwards compatibility by just not having ""network-only"" options", and only warning when one of these options is used outside of a network section, instead of warning and dropping them. I suggested this previously here, url We could also go further and not even warn about these options if is specified in the config file (as opposed to on the command line).  @zciendor, I\\\'m not sure what your comment about a section is referring to. As far as I know that\\\'s not a recognized section, so I\\\'d expect any options you enter there to be ignored.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,25,2017-12-11 10:06:15,1378.22,,1,,b'b\' @ryanofsky I agree," I think we should revert the ""ignore certain options outside of network-specific sections"" behavior; it seems to gratuitously have broken compatibility.  @zciendor There is documentation in the release notes: url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,26,2017-12-11 10:06:15,1400.17,1,,,"b'b"" I agree that removing the \'network-only\' options is a sensible thing to do in order to restore complete backwards compatibility. Network-only options was a good idea to prevent users from accidentally polluting their mainnet config with testnet or regtest config", but the amount of user pain inflicted by not having backwards compatibility means we should revert this change quickly.  To be honest, it didn\'t even occur to me that this PR would break backwards compatibility. I certainly don\'t think it was an intentional break.  Alternatively, we could only enforce the \'network-only\' rule if the config file contains a network section. That means that old config files would continue to be valid," but new config files with network sections would be protected from certain config errors. That can be added later (after the reversion) if people think that \'network-only\' config is a feature worth having.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,27,2017-12-11 10:06:15,5.12,,1,,"b""b' I was talking about the sections the [config file generator]url  adds. However", I just noticed that they are commented out," so this should have no effect... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,28,2017-12-11 10:06:15,14.6,,1,,"b""b'  Yes: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,29,2017-12-11 10:06:15,25.95,,1,,"b""b' I just realized we seem to have a completely different problem with 0.17. No matter where I specify (either in the conf file or on the command line) bitcoind tries to write to the default mainnet folder (~/.bitcoin/):   The issue is that 0.16 and earlier tried to  the //**testnet3** folder when the (or  ) parameter was specified. This seems to have changed and now you have to specify the datadir explicitely along with  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,30,2017-12-11 10:06:15,29.33,,1,,"b'b"" @zciendor that looks like a separate problem. Do you mind opening a new issue to track it?  edit: please @ me once you\'ve opened that issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,31,2017-12-11 10:06:15,29.7,,,1,"b""b' Sure! url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,32,2017-12-11 10:06:15,654.02,,1,,"b'b"" @zciendor unsure if it is related to your problem"," but a non obvious consequence of this PR is that on testnet or regtest:  * You can\'t use Bitcoin-CLI 0.17 on Bitcoind < 0.17 * You can\'t use Bitcoin-CLI < 0.17 on Bitcoind 0.17  Because they can\'t read each other config files. I banged my head against the wall for some hour because of this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,33,2017-12-11 10:06:15,1018.75,,1,,"b""b' @NicolasDorier you can use:   to have the option (or any of the other mainnet-only options) seen on  for pre and post 0.17.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,34,2017-12-11 10:06:15,611.62,,1,,"b'b"" I don\'t think it works", my memory tells that I had issue because 0.16.3 can\'t parse sections," and thus consider the configuration file invalid.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,35,2017-12-11 10:06:15,98.92,,,1,b'b\' @NicolasDorier 0.16.3 works fine here with the above -the boost config parser has always parsed sections," it\\\'s just ignored what was in them (because it would treat it as an option named """" which was then never actually used).\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,36,2017-12-11 10:06:15,690.58,,1,,"b""b' I confirm you are right My test was only   So was ignored.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11862,closed,-,-,-,7,21,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,opened,2017-12-13 22:10:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,title,2017-12-13 22:10:41,00:00,1,,,"b""b' Misleading  message: mandatory-script-verify-flag-failed (Signature must be zero for failed CHECK(MULTI)SIG operation)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,body,2017-12-13 22:10:41,00:00,,1,,b'b\' This is very equivalent to url While implementing multisig for url  and just sending funds to a multisig test address url  I got this error  Simply because prevamount: (0.00460457*100000000)=460456.99999999994 was wrongly rounded to 460456," then the signature was incorrect  ""Signature must be zero for failed CHECK(MULTI)SIG operation"" is unclear"," this probably can be replaced by something more clear like ""Wrong signature"" and why not ""check prevamounts""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,closed,2017-12-19 15:01:38,1010.95,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,reopened,2017-12-19 16:02:15,60.62,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,1,2017-12-13 22:10:41,1072.12,,1,,b'b\' Minor usability issue that may still be worth fixing," if its easy to fix. One simple way to address some similar cases is to take the ""first error"" we get starting from base flags and adding more flags on top until the script fails", at least for ATMP calls from eg sendrawtransaction.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,2,2017-12-13 22:10:41,1097.23,,,1,b'b\' I closed it because I noticed that other error messages are unclear too," I don\\\'t remember exactly the wording but for example I got ""unnecessary data too large"" or something like this", because an unnecessary OP_PUSHDATA was used," and I got  a ""dust"" reject message too who did not say what was the limit ""output amount should not be below xxx satoshis""", etc  Flags telling what failed would be great but probably they won\\\'t be precise enough, then it\\\'s probably easier to include in the error messages what are the common \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,3,2017-12-13 22:10:41,1183.62,1,,,b'b\' This is coming back," please see url I am sure that the serialization for signing is correct (btw cli could display this info ""message to be signed (before hash): xxxx"")  I suspect that [r",s] does not follow one of the rules of bitcoin core, that\\\'s not the canonical format, because I don\\\'t get this error and already checked, is there a link somewhere for the signatures format check?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,4,2017-12-13 22:10:41,919.5,,1,,"b'b"" Here is a step-by-step walk through on a fresh regtest network"," which attempts to do the following  Client version: v0.16.0  * get an address for account Bob * send 10.0 BTC to Bob * get an address for Marry * create a raw transaction that sends Marry 9.99 BTC * sign the raw transaction with Bob\'s private key  Sending the raw transaction fails with 64: non-mandatory-script-verify-flag (Signature must be zero for failed CHECK(MULTI)SIG operation) (code -26) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,5,2017-12-13 22:10:41,653.82,,1,,"b""b' @tdiesler Do you fixed it ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,6,2017-12-13 22:10:41,511.07,1,,,"b'b"" @land-pack Unfortunately"," I don\'t speak C.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,7,2017-12-13 22:10:41,528.03,,,1,"b""b' Hi sir", just want to ask if you have already a fix with this issue," I encounter the same error using bitcoin core console.  createrawtransaction: ![screenshot from 2018-08-30 12-59-20]url  signrawtransaction: ![screenshot from 2018-08-30 13-01-29]url  sendrawtransaction: ![screenshot from 2018-08-30 13-02-02]url  hope you could help me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11891,open,-,-,-,3,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,opened,2017-12-15 19:18:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,title,2017-12-15 19:18:49,00:00,,1,,"b""b' Free BerkeleyEnvironment instances when not in use'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,body,2017-12-15 19:18:49,00:00,,1,,"b""b' Instead of adding BerkeleyEnvironment objects permanently to the g_dbenvs map", use reference counted shared pointers and remove map entries when the last BerkeleyEnvironment reference goes out of scope.  This change was requested by @TheBlueMatt and makes code that sets up mock databases cleaner. The mock database environment will now go out of scope and be reset on destruction so there is no need to call BerkeleyEnvironment::Reset() during wallet construction to clear out prior state.  This change does affect bitcoin behavior slightly. On startup, instead of same wallet environments staying open throughout VerifyWallets() and OpenWallets() calls, VerifyWallets() will open and close an environment once for each wallet," and OpenWallets() will create its own environment(s) later. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,1,2017-12-15 19:18:49,256.93,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,2,2017-12-15 19:18:49,1345.82,,1,,"b""b' @ryanofsky ping.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,closed,2018-07-22 23:50:55,272.1,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,3,2017-12-15 19:18:49,109.37,,1,,"b""b' The last travis run for this pull request was 65 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,reopened,2018-07-22 23:50:56,0.02,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,4,2017-12-15 19:18:49,832.58,1,,,"b""b' One more thing: PR title and commit message should be updated to say BerkeleyEnvironment'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,5,2017-12-15 19:18:49,1425.53,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,6,2017-12-15 19:18:49,867.48,,1,,"b'b"" utACK url  modulo @promag\'s comments above"," which need addressing ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,7,2017-12-15 19:18:49,183.92,,1,,"b""b' @ryanofsky Can you try without  ? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,8,2017-12-15 19:18:49,595.05,,1,,"b""b' @ryanofsky Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,9,2017-12-15 19:18:49,1373.88,,1,,"b""b'  Yeah", I went back and implemented all the suggestions, but for some reason the assert in url  is constantly triggering," so I need to debug.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,10,2017-12-15 19:18:49,526.3,,1,,"b""b' Tested ACK 14bc2a17dd while implementing #15297. Also tested with  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,11,2017-12-15 19:18:49,984.32,,1,,"b""b' utACK 14bc2a17dd03ccd89f65a302328763ff22c710c2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,closed,2019-01-31 17:05:48,1034.87,1,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11911,closed,-,-,-,1,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,opened,2017-12-18 15:27:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,title,2017-12-18 15:27:22,00:00,,1,,"b""b' Qt: Setting for deciding address type (legacy"," p2sh or bech32) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,body,2017-12-18 15:27:22,00:00,,,1,"b'b"" Related PR #11403", needs to be merged first. I\'ll rebase this PR to be up to date with #11403, and rebase it to master once it has been merged.  Exposes the parameter through the GUI. Currently directly changes the global variable instead of requiring an application restart, I\'m not sure if this is good practice, but could easily be changed if needed.  Radio buttons seem to be acting a bit different compared to other GUI elements," so that\'s why the code is somewhat different than for other settings.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,1,2017-12-18 15:27:22,51.57,1,,,"b'b"" If you edit the pull request description", you can change the base branch from to  . That should make review here much easier. Although it might cause Github to move the whole pull request to @sipa\'s account," which would hurt visibility.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,2,2017-12-18 15:27:22,11.77,,1,,"b'b"" @Sjors Yes"," I tried to do that but it doesn\'t seem to be possible.  But opening a new PR to Wuille\'s repository should be possible yes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,3,2017-12-18 15:27:22,53.48,,1,,"b'b"" No problem"," it\'s easy to work around: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,4,2017-12-18 15:27:22,373.3,,,1,"b""b'  @Sjors @promag The Address type was actually intentionally in the Expert group", but I guess you are right," it makes more sense to have it separately. I will move it. We need good tooltips and description though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,5,2017-12-18 15:27:22,26.23,,1,,"b'b""  @Sjors Very true"," I\'ll fix this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,6,2017-12-18 15:27:22,7.6,,1,,"b""b' Rebased to fix some of the nits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,7,2017-12-18 15:27:22,172.8,,1,,"b'b"" GUI settings probably shouldn\'t influence RPC like this"," and IMO it should really be exposed per-receive.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,8,2017-12-18 15:27:22,368.53,,1,,b'b\' @luke-jr wrote: Do you mean that it should _only_ be exposed per receive (i.e. don\\\'t add this setting)?  That would not be ideal, because the wallet wouldn\\\'t use bech32 for change in that case.  It reveals another problem with this setting: if the user changes the setting and then runs instead of  , they might expect the RPC to use bech32 as well, just like it would in the debug console inside of QT.  One counter argument to that is that we expect users to know what they\\\'re doing and to aware of the fact that GUI settings," like ""spend unconfirmed change""",  don\\\'t apply to  . This would be worth pointing out in the release notes and such.  There\\\'s something to be said for being able to persist wallet settings, so that they apply to both and if no flag overrides it.  Writing the setting into  is one way, but at least one potential problem with that, is that we can\\\'t change the default later, because all users have it set in stone in their  file. That\\\'s probably an issue with the PR as well; once there is a setting, it\\\'s weird to just change it.  So I might agree with @luke-jr here in that this should be a per-receive thing, and not a setting. But then I would  suggest that we make the change address behavior more intelligent (not in this PR): its address type should match the destination. Also making it a per receive checkbox still makes it difficult to change, as the user might grow accustomed to the check-box being checked or unchecked.  So I\\\'m not really sure. We should think about how to encourage users to try out bech32  without making it more difficult to make this the default in the future. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,9,2017-12-18 15:27:22,518.47,,1,,"b'b""  @Sjors Rebased and fixed this. Right now", changetype isn\'t changed if you explicitly set a type it in the configuration file," otherwise it defaults to whatever addresstype option is chosen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,10,2017-12-18 15:27:22,5.43,,1,,"b'b""  @luke-jr Isn\'t this what GUI settings basically are used for? It seems like most of the settings in the GUI expose different configuration parameters. Yes"," I guess that makes sense too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,11,2017-12-18 15:27:22,1260.78,,1,,"b'b"" For a per receive address toggle", see #11991. These PR\'s are compatible (aside from the usual potential for merge conflicts), so we can use both," either or none.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,12,2017-12-18 15:27:22,455.87,,1,,"b'b"" Hmm after testing this patch over #11991", I think I prefer this one. The toggle seems a bit weird. I don\'t see why I would ever want to selectively toggle a bech32 address," vs just eventually having it my default when I feel comfortable doing that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,13,2017-12-18 15:27:22,334.37,,1,,"b""b' @jb55 The only reason for bech32 or not is whether the sender supports bech32 which I think is something you may want to decide per address.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,14,2017-12-18 15:27:22,567.98,,1,,"b""b' Perhaps it makes sense to have both options available. Per receive level and as a global setting. If not"," I think @Sjors PR works very well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,15,2017-12-18 15:27:22,323.45,,,1,"b""b' ACK!  I just compiled this PR for Windows. It is beautiful. Really love it.  Will test. ![walletgui-by-coco]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,16,2017-12-18 15:27:22,790.37,,,1,"b""b' Nice! Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,17,2017-12-18 15:27:22,1393.68,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,18,2017-12-18 15:27:22,67.5,,1,,"b'b"" @jonasschnelli I\'ll rebase to master as soon as I have time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,19,2017-12-18 15:27:22,831.63,,1,,"b""b' Rebased to master. I intend to look at and fix the things that have been pointed out soon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,20,2017-12-18 15:27:22,55.33,1,,,"b'b"" Addressed some of the issues that have been pointed out as well as the compiling error", sorry for that.  There are still some outstanding things that need to be addressed," I\'ll look into them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,21,2017-12-18 15:27:22,471.7,,1,,"b'b\' Tested a bit and seems to work. What worries me is that the code has not the right concurrency protections to have those globals change during run-time. There would be some potential races (rare and often only possible when mixing QT with RPC).  We can leave this for an follow up PR but I\\\'d prefer the have the right instruments in place before adding runtime ""sets"" on those globals.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,22,2017-12-18 15:27:22,253.98,,1,,"b'b"" I don\'t see any use case for the three way selection-it just confronts users with more technical details (complete with gobbltygopy technical terms like P2SH and BIP173 ) which many won\'t know how to select among.  The purpose of having the legacy setting is maintaining wallet backwards compatibility.  .. but that\'s blown out the moment you select either P2SH or BC1 addresses. What is the envisioned use-case for someone to set legacy but then sometimes pick P2SH? Without understanding that I am a Concept NAK.  Being able to switch between BC1 and 3xxx addresses at receive time would _very_ useful"," but that should be a per-receive selection set when the address is requested.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,23,2017-12-18 15:27:22,505.77,,1,,"b""b' Removing 0.16 milestone since there are some concerns with this PR. Also"," seems not to be a blocker for 0.16 (especially since #11991).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,24,2017-12-18 15:27:22,1262.23,,,1,"b'b"" I\'m not sure why this PR isn\'t merged? It makes much more sense to use this so I have been using it as my wallet. Please consider to merge this PR.  Thank you!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,25,2017-12-18 15:27:22,1356.55,,1,,"b""b' Needs rebase if still relevant. Otherwise I suggest to close.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,26,2017-12-18 15:27:22,24.52,1,,,"b'b"" @molxyz @MarcoFalke Sorry for the delay.  Yes"," If there is interest I could continue work on this PR.  There are some minor outstanding issues (albeit minor) regarding thread safety and other things that I\'ll look into before merge.  There doesn\'t seem to be a clear consensus regarding if we should merge this. Personally I think it makes sense considering we already provide these options through the configuration file and as a command-line argument. I do understand the argument that it could be perceived as too technical though (not sure on how to improve on this?)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,27,2017-12-18 15:27:22,6.78,,1,,"b'b"" @hsjoberg have you seen #13251? I haven\'t looked closely at you pull request"," but they seem strongly related. And yours might not be relevant after that one has been merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,28,2017-12-18 15:27:22,0.45,,1,,"b""b' If it is still relevant"," please rebase so that it compiles at a minimum. (green travis)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,closed,2018-07-29 15:17:37,1430.25,3,22,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,29,2017-12-18 15:27:22,1398.13,,1,,"b""b' The last travis run for this pull request was 55 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,reopened,2018-07-29 15:17:38,0.02,3,23,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,30,2017-12-18 15:27:22,55.43,,1,,b'b\' Hmm," I don\\\'t think we should expose a ""legacy"" checkbox through the gui. I am missing the use case for that"," given that ""bech32"" can already be unchecked.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,31,2017-12-18 15:27:22,942.55,,,1,"b'b"" This PR doesn\'t compile when rebased on :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,32,2017-12-18 15:27:22,336.15,,1,,"b""b' Closing for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,closed,2018-09-15 13:31:46,1334.13,3,25,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,11937,closed,-,-,-,3,25,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,opened,2017-12-26 17:49:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,title,2017-12-26 17:49:05,00:00,,1,,"b""b' Build: Add a makefile target for Doxygen documentation'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,body,2017-12-26 17:49:05,00:00,,1,,"b""b' You can now build the doxygen documentation with and clean it with  .  Fixes: #11949'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,1,2017-12-26 17:49:05,296.92,,1,,"b""b' Tested 0f36dba. and work as intended. @theuni Any thoughts here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,2,2017-12-26 17:49:05,491.72,,,1,"b""b' Looks after a good start. utACK 0f36dba0ef33344c9e73a409cad24b5b90d70f0f  Not sure if we should check and inform if doxygen is not present.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,3,2017-12-26 17:49:05,69.37,,,1,"b""b' Thanks!  This needs to be documented in one of the READMEs", so that people know the targets exist. Possible improvement would be to check if doxygen is present in , otherwise disable this functionality. Also to not hardcode command," but use or such so that it can be overridden. But yes seems a good start as-is.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,4,2017-12-26 17:49:05,219.4,,1,,"b'b"" Thank you for your feedback. At the moment this target it\'s not executed on a simple and if you don\'t have the command available you get a sensible error message and exit code:   Do you want me to add this target to the default build pipeline", but only if exist? If not, i\'m not sure what you mean when you say to disable it when the command doesn\'t exist, since this patch doesn\'t do anything until you invoke or deliberately, in which case you already get a sensible result.  No problem with the other changes," i\'ll make them as soon as i have some free time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,5,2017-12-26 17:49:05,945.2,,1,,"b'b"" Concept ACK. Agreed with @laanwj\'s comments.  doxygen may not be found in the user\'s path", it may instead be passed like: .  Having it configured as a tool in  ensures that that works properly. It also means that we can skip it if it\'s ever added to the main build, but doxygen isn\'t installed.  Please use real makefile targets so that the dependencies are obvious. And lastly," please hook it up to clean-local so that \'make clean\' removes them as well. Something like: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,6,2017-12-26 17:49:05,661.38,,,1,"b""b' I made a new commit (rebased on current master) that implement the requested changes:  configure support disable in case doxygen is missing note in the documentation  Let me know of you want me to add something else"," thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,closed,2018-01-25 18:41:26,52.35,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,reopened,2018-01-25 18:44:09,2.72,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,7,2017-12-26 17:49:05,1192.9,,,1,"b""b' Looks good to me! Can you take another look @theuni?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,8,2017-12-26 17:49:05,629.9,,,1,"b""b' Thanks for addressing everything. utACK a777244e48227db6d3fd06cd2500cc007dacfb10.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,9,2017-12-26 17:49:05,848.73,,1,,"b""b' utACK a777244'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,10,2017-12-26 17:49:05,150.43,,1,,"b""b' ACK a777244. Only checked that prints an error"," when doxygen is not present.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,closed,2018-02-17 07:50:11,786.03,0,7,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12029,closed,-,-,-,0,7,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,opened,2017-12-29 21:08:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,title,2017-12-29 21:08:26,00:00,,1,,"b""b' add missing debian contrib file to tarball'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,body,2017-12-29 21:08:26,00:00,,1,,"b""b' the current release is missing the debian contrib folder"," add it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,1,2017-12-29 21:08:26,100.7,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,2,2017-12-29 21:08:26,688.35,,1,,"b'b"" [This]url  is the reasoning as to why it was left out when DIST_CONTRIB was added (everything in debian/ is GPL2). Looks like [that is still the case]url  Maybe now it\'s time to revisit writing our own desktop and protocol files?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,3,2017-12-29 21:08:26,2.73,,1,,"b""b' Everything in git should also be in the dist tarball...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,4,2017-12-29 21:08:26,592.53,,1,,"b'b"" Last word on this was  >\\\\ BlueMatt: luke-jr: making the tarball include all git files was discussed a few files already", I think everyone is okay with that in principle," it\'s just hard to unify with the \'make dist\' makefile-isms  from url  which I\'m not sure implies ack or nack.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,5,2017-12-29 21:08:26,21.65,,1,,"b'b""  Well I\'d prefer a solution that makes the tarball contain everything"," instead of doing it in dozen separate PRs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,closed,2018-07-20 20:30:12,1401.77,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,reopened,2018-07-20 20:30:13,0.02,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,6,2017-12-29 21:08:26,114.03,,1,,"b'b\' let\\\'s add missing files step by step this ""all or nothing"" approach leads to nothing. please define the  with this commit. afterwards we get this stuff solved and include it :)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,7,2017-12-29 21:08:26,148.57,,1,,"b""b' @puchu  is being moved to the packaging repo: See #13137'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,closed,2019-04-28 19:12:06,1361.88,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,8,2017-12-29 21:08:26,1095.12,,1,,"b""b' The last travis run for this pull request was 281 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,reopened,2019-04-28 19:12:08,0.03,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,closed,2019-04-29 12:49:55,1057.78,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12051,closed,-,-,-,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,opened,2017-12-31 19:02:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,title,2017-12-31 19:02:47,00:00,,1,,"b""b' Increment MIT Licence copyright header year on files modified in 2017'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,body,2017-12-31 19:02:47,00:00,,1,,"b""b' Edited via:  $  update .  ps) It is the same commit as #9450'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,closed,2018-01-01 02:47:32,464.75,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,reopened,2018-01-01 02:47:34,0.03,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,1,2017-12-31 19:02:47,958.42,,1,,"b""b' Please squash your commits according to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,closed,2018-01-02 16:59:41,852.12,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,reopened,2018-01-02 17:13:26,13.75,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,2,2017-12-31 19:02:47,387.05,,1,,"b""b' @MarcoFalke  Done'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,3,2017-12-31 19:02:47,1203.37,,1,,"b""b' Verified that the changes in this PR match the output of that command"," and that no subtrees are accidentally updated. utACK 595a7bab23bc21049526229054ea1fff1a29c0bf '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,closed,2018-01-03 13:34:24,1220.97,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12062,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,opened,2018-01-04 13:12:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,title,2018-01-04 13:12:39,00:00,,1,,"b""b' qa: Make TestNodeCLI command optional in send_cli'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,body,2018-01-04 13:12:39,00:00,,1,,"b""b' Makes the optional", since there are valid bitcoin-cli calls that have no  :  * * * ...  Also, rename  to ," since that is the name in the documentation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,closed,2018-01-04 21:48:30,515.85,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,reopened,2018-01-12 23:05:47,77.28,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,1,2018-01-04 13:12:39,249.45,,1,,"b""b' Tested ACK fab04c3f55715f8d63ae88d087e9ea83f525a670'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,2,2018-01-04 13:12:39,248.27,,1,,"b""b' Tested ACK fae7b14a0468fba43ca8ce87249be69e13cea608'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,closed,2018-01-24 13:52:58,887.18,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12089,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,opened,2018-01-05 09:10:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,title,2018-01-05 09:10:48,00:00,,1,,"b""b' [rpc] [wallet] Allow specifying the output index when using bumpfee'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,1,2018-01-05 09:10:48,16.12,,1,,"b""b' Missing test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,2,2018-01-05 09:10:48,184.02,,1,,"b'b"" This decreases the output? In some cases that may desirable"," but in general I think that\'s very unexpected (I would think it would add a new input instead).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,3,2018-01-05 09:10:48,9.9,,1,,"b'b"" If you don\'t have a change address chance are fairly high that you\'re simply moving coins (e.g. between wallets). Especially if you only have one utxo in"," you may not want to associate other utxo\'s with it for privacy reasons.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,4,2018-01-05 09:10:48,8.22,,1,,"b'b""  I would argue that this is not stated strongly enough. If they previously paid to a single output then it is *almost always* true that they do not care about the particular amount. This is especially true as the previous amount was subject to an arbitrary", variable fee.  Valid use cases where this behavior is necessary," where you really don\'t want to require adding more inputs in order to bumpfee: * Emptying a wallet * Emptying particular UTXO\'s  I would further suggest if the receiver was expecting a particular amount then you would expect there to be a change output.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,5,2018-01-05 09:10:48,2.53,1,,,"b'b"" @kallewoof You\'re right that in *most* cases right now that you don\'t care about the amount if there is only one output"," but there is certainly no guarantee. The coin selection algorithm even explicitly tries to find a solution without change first it\'s just pretty terrible at its job current (#10637 will make it succeed much more often). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,6,2018-01-05 09:10:48,3.58,,1,,"b'b"" I think this could be generalized and also be made safer by adding an option to bumpfee (could also call it something like or  ). This way you\'d be able to bump single output transactions by specifying  "," but there\'d be no risk of someone accidentally decreasing the amount they are trying to send by bumping the fee in other cases. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,7,2018-01-05 09:10:48,0.15,,,1,"b'b"" I don\'t think it makes sense to arbitrarily add inputs to bumpfee. I don\'t even know if RBF allows it (since you\'re suggesting it"," I guess it does -I thought I tried and failed).  Maybe a flag in that did this behavior. Edit: @ryanofsky That looks good to me.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,8,2018-01-05 09:10:48,5.1,,1,,"b'b"" I don\'t see why RBF wouldn\'t allow it", as long as all transactions you\'re replacing have been marked as replaceable.  I like the idea of explicitly marking an output that can be reduced.  Over time (especially after #10637), I think we\'ll inevitably need a way to bump transactions that don\'t have change. Depending on feerates and your wallet\'s UTXO set distribution," a large fraction of transactions may be created without change. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,9,2018-01-05 09:10:48,70.7,,,1,"b""b' does the wallet track which outputs had subtractFeeFromOutput? In that case further reduction seems completely fine as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,10,2018-01-05 09:10:48,63.27,,1,,"b'b"" Agree that there are cases where the output(s) can\'t be reduced. In the cases it can be reduced"," should it be re-funded? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,11,2018-01-05 09:10:48,27.12,,1,,"b""b'  @kallewoof Currently our relay policy (and BIP 125) require that if you add a new input", it must be already confirmed -perhaps you tested with an unconfirmed input?  (The idea behind that requirement was to ensure the new transaction was more likely to be mined than the ones it was replacing; now that we use ancestor feerate mining," we could perhaps relax this requirement and compare ancestor feerates of everything instead to ensure the new transaction has a higher mining score.)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,12,2018-01-05 09:10:48,296.82,,1,,"b""b' concept ack after the current coin selection stop trying 1 output (I assume  #10637 solves that?). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,13,2018-01-05 09:10:48,4.05,,1,,"b""b' NAK.  The only time it would be acceptable to reduce the output is if the transaction was created as subtract fee from output.  Bumping should add additional inputs as required.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,14,2018-01-05 09:10:48,7.7,,1,,"b""b' @gmaxwell even with an option to allow the subtract"," default to false (since there is no subtract from output record)? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,15,2018-01-05 09:10:48,10.28,,1,,"b'b"" if it were behind a bunch of warnings"," ... but even though if substract from wasn\'t initially selected should only be a last resort if it can\'t bump otherwise.  The wallet shouldn\'t quietly direct the user into behavior that might cause them to get criminally prosecuted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,16,2018-01-05 09:10:48,413.35,,,1,"b""b' @wtogami  The wallet has explicit information about transactions created where the user requested subtracting fees from amounts. Using that information would be  fine but you cannot use the lack of a change output to detect this","  when 2^inputs * fees_saved_from_excluding_an_output  is large relative to the amount being paid an exact match frequently exists. And the PR pieter linked to will usually find it. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,17,2018-01-05 09:10:48,10.35,,1,,"b""b' Summary: * Do not implicitly assume a single-output-no-change transaction can be altered due to better coin selection in the future. * Require the user to select the output if the user does not want additional inputs to be added to cover increased fees. * (Allow adding additional inputs to cover increased fees -separate PR)  For this PR"," that translates to: * Fail if no output is explicitly chosen (pre-merge behavior) * Reduce single output to cover fees if user has explicitly picked it * Allow user to arbitrarily pick the output that is reduced for existing multi-output transactions (i.e. not restricted to change output). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,18,2018-01-05 09:10:48,613.08,,1,,"b""b' [x] Self-review: RPC command help needs update to reflect change '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,19,2018-01-05 09:10:48,198.1,,1,,"b""b'  @gmaxwell What if you want to subtract-fee-from-output after the fact?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,20,2018-01-05 09:10:48,670.82,,1,,"b""b' @luke-jr Now throws on negative in RPC code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,21,2018-01-05 09:10:48,487.32,,1,,"b""b' #12565 takes advantage of this in QT.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,22,2018-01-05 09:10:48,866.38,,,1,"b""b' @Sjors Thanks! I fixed the error in 765162c.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,23,2018-01-05 09:10:48,1231.1,,1,,"b""b' The last travis run for this pull request was 89 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,closed,2018-07-22 23:50:51,880.05,1,19,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,reopened,2018-07-22 23:50:51,0.0,1,19,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,24,2018-01-05 09:10:48,682.55,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15778]url  ([wallet] Move maxtxfee from node to wallet by jnewbery)* [#15341]url  (rpc: Support specifying change address in bumpfee by promag) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,25,2018-01-05 09:10:48,454.33,,,1,"b""b' @MeshCollider Thanks for the review! I updated commit description and added comment to  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,26,2018-01-05 09:10:48,826.17,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12096,open,-,-,-,1,21,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,opened,2018-01-09 02:54:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,title,2018-01-09 02:54:49,00:00,,1,,"b""b' Implement Confidential '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,body,2018-01-09 02:54:49,00:00,1,,,"b""b'   Following up on the issue: [Improve transaction privacy / fungibility in Bitcoin Core and the Bitcoin system]url  this issue may serve as feature request", meta tracking and consensus builder thread on Confidential Transactions/[Bulletproofs]url   [Privacy]url  is a fundamental human right and [fungibility]url  is an essential property of good money. Our lack of ability of masking transaction output amounts is the [root of all evil]url  in every Bitcoin privacy scheme, where Confidential  tackles this issue.  While the development and research on Confidential Transactions [may or may not be]url  in early stages," it is not too early to explore how much support and opposition the development community has on this [soft fork]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,1,2018-01-09 02:54:49,374.67,,1,,"b'b"" I don\'t believe this is the right place to discuss this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,2,2018-01-09 02:54:49,366.2,,1,,"b""b' @sipa I believe it is. Historically all soft forks started by a PR to this repository. If a PR gets merged or not is determined by the consensus of the contributors here. Thus", seeking feedback on other platforms, like the mailing list, is less effective to measure the general sentiment of the contributors of this sub towards CT," this is the best place.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,3,2018-01-09 02:54:49,16.47,,,1,"b'b"" That hasn\'t been the case for years.It mostly depends on confidence the ecosystem will adopt a change.That may be the case for implementation details"," but there isn\'t even a vague proposal for how this would work. Asking software contributors (of a single project) for feedback on a vague idea seems like the wrong place to start.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,closed,2018-01-09 15:32:40,757.85,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,4,2018-01-09 02:54:49,30.37,1,,,"b'b""  There was only a few occasions when a proposal ended up having adoption without Bitcoin Core PR. The disastrous forks", like BCH, and UASF, which we have never seen its direct outcome. Opening an issue here is part of exploring the confidence you are talking about. That may be the case, however the issues secion of this repository is full of feature requests and meta threads, I don\'t see why this case is different, in fact the very first link in my first comment is such kind (labelled with  )," and that even links to similar ones.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,5,2018-01-09 02:54:49,4.35,,1,,b'b\' That\\\'s not the point. Of course at some point there will be a PR; if the network adopts CT, I\\\'m sure Core will implement it. You\\\'re however claiming that a PR to Core is how soft fork proposals start. I think that\\\'s both not historically true, nor advisable. I\\\'ll reopen this," waiting for input from other contributors. But generally I think we\\\'ve always closed issues of the form ""implement some consensus change"" before there is a clearly vetted proposal.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,reopened,2018-01-09 16:10:09,37.48,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,6,2018-01-09 02:54:49,518.9,1,,,"b""b' Personally i find github a much better medium to read these kinds of proposals and discussions than mailing list", which has a shit format to read on the web and irc, wherever the logs for that are. I want to see CT on bitcoin, bitcoin right now is like the twitter of finance," literally no privacy at all. Terrible. I think this kind of upgrade is really important. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,7,2018-01-09 02:54:49,0.25,1,,,"b'b"" In short you wait there is demand for it before PR it here ? So if BTC is invaded by statist nobody will ask for such features... Are you aware of the recent Bitfury research ? Well they publish it publicly good on them. But that\'s quite scary no ? That kind of change will be probably UASF\'ed for obvious reasons that some entities find quite interesting to track you satoshi by satoshi.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,8,2018-01-09 02:54:49,78.87,1,,,b'b\' @manginahunter I know I am dangerously going into off topic territory here, but let me share some thoughts on the Bitfury research:  From a technical point of view the [Bitfury research]url  was especially uninteresting. It didn\\\'t add anything new to the privacy conversation, that wasn\\\'t already known. I agree, that it was misleading, because 1. it was conducted by a well-known company and 2. they used a language that implies they came up with new, previously unknown things. I\\\'ve even heard someone having the takeaway from it," that ""Bitfury invented clustering"". For a better quality research on the same topic", see the paper: [When the cookie meets the blockchain: Privacy risks of web payments via cryptocurrencies]url With that said , what was especially worrisome about it, is that Bitfury actually plans to utilize the methods. However they don\\\'t have an edge on present day Blockchain analysis companies, because they may don\\\'t write research on their methods, they know all the basic things the Bitfury paper talks about, and they have already been collecting various metadata (like Bloom filters) for years now.  In the end, it all comes down to sales. Having home grown research papers gives Bitfury credibility and opportunities, so they claim their expertise on a specific domain.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,9,2018-01-09 02:54:49,174.58,,1,,"b'b"" Just read about your analysis on your link above. That\'s reassuring but still think the more privacy tools the better.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,10,2018-01-09 02:54:49,736.37,,1,,"b'b"" I agree that github issues are inappropriate for \'meta tracking and consensus builder threads\'. The bitcoin-dev mailing list is a much more appropriate venue. Recommend we close this until there\'s a concrete proposal.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,11,2018-01-09 02:54:49,574.05,,1,,"b""b' @jnewbery Consider it as feature request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,12,2018-01-09 02:54:49,786.87,,1,,"b'b"" Yes", can we just close this? I think should generally avoid opening issues with medium-/long-term feature requests, as we generally lose track of them and they just end up open for years. Also, consensus-level discussion doesn\'t belong on this repo. If you want to use GitHub to access bitcoin-dev, you could build a wrapper that converts emails to GitHub posts and back. On January 25, 2018 2:50:02 AM UTC," nopara73  wrote:>@jnewbery Consider it as feature request.>You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,13,2018-01-09 02:54:49,20.97,,1,,"b""b' The discussion seems to derail into a meta discussion about tracker issues. Going to close for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,closed,2018-01-28 16:17:43,7.57,5,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12129,closed,-,-,-,5,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,opened,2018-01-11 14:26:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,title,2018-01-11 14:26:28,00:00,,1,,"b""b' Avoid permanent cs_main lock in getblockheader'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,body,2018-01-11 14:26:28,00:00,,1,,"b""b' This PR reduces the lock scope in RPC.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,1,2018-01-11 14:26:28,450.43,,1,,"b""b' needs rebase (but probably not worth doing until #12151 is merged)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,closed,2018-08-02 22:36:33,490.08,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,reopened,2018-08-02 22:36:34,0.02,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,closed,2019-01-03 16:58:03,1101.48,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,reopened,2019-01-04 12:04:03,1146.0,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,2,2018-01-11 14:26:28,878.42,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,3,2018-01-11 14:26:28,153.3,,1,,"b""b' utACK f12e1d0b5117e3688f52a25ed0170d76ecdbf233'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,4,2018-01-11 14:26:28,1382.9,,1,,"b""b' So to be clear: this is can be done"," because it is safe to access the fields on the CBlockIndex instance without the lock?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,5,2018-01-11 14:26:28,44.27,,1,,"b""b' @laanwj to best of my knowledge yes. Looks like is the only field that needs the lock"," which is not used.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,6,2018-01-11 14:26:28,391.83,,,1,"b""b' utACK f12e1d0b5117e3688f52a25ed0170d76ecdbf233.  Do you intend to do the same for  ? Not holding cs_main while reading a block from disk and serializing into json seems like a big win.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,closed,2019-01-08 12:54:02,49.98,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,7,2018-01-11 14:26:28,1072.9,,1,,"b""b' @jnewbery #11913 #13903 are related to that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12153,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,opened,2018-01-24 05:35:50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,title,2018-01-24 05:35:50,00:00,,1,,"b""b' Update  to conform to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,body,2018-01-24 05:35:50,00:00,,1,,"b""b' option specified. Ask systemd to create and set the right mode for PID directory", configuration directory," and data directory. Tell systemd our group so it will set the right owner for aforementioned directories.  More information: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,1,2018-01-24 05:35:50,539.32,,1,,"b""b' Last update was in PR #10529 please try to coordinate the changes with the people replying there.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,2,2018-01-24 05:35:50,291.15,1,,,"b'b"" @laanwj Sorry I\'m not sure I entirely know what you mean. Am I to bring up this PR on that thread or shall I tag them in a comment here?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,3,2018-01-24 05:35:50,17.0,,1,,"b""b' I think the link was supposed to be  #12102'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,4,2018-01-24 05:35:50,875.6,,,1,"b""b'  Either", or both," is fine!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,5,2018-01-24 05:35:50,669.88,,1,,"b""b' @laanwj @MarcoFalke should I be waiting for the other PR to get merged? Seems like the OP has been unresponsive.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,6,2018-01-24 05:35:50,33.73,,1,,"b""b' I think the only thing left is give people time to review and then merge both whenever they are reviewed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,7,2018-01-24 05:35:50,2.1,,,1,"b""b' Cool beans.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,8,2018-01-24 05:35:50,583.93,,,1,"b'b"" Thanks for your ping in url  here are my thoughts on this PR:  This PR contains the following changes to the systemd  file 1. Provide argument to bitcoind via ExecStart 2. Create various runtime directories and set their access mode 3. Set the Group to bitcoin  I deliberately did not put (1) in the systemd file as it can also be set via bitcoind\'s conf. I believe that it is good practice to put as much as possible in generic service config file (here: ) as opposed to the system\'s service management facilities (here: systemd).  (2) is typically done by the distribution\'s package manager and would hence override settings of distributions that don\'t use those standard directories (therefore those distributions would need to patch the upstream systemd file or use their own", which is not both not desirable). Nit: I don\'t think it is necessary to protect the runtime directory with 700 as there a no secrets in it. Also the used settings are only available with systemd >= 235.  (3) is changes the behavior as it explicitly mentions the existence of a group named \'bitcoin\', which may or may not exist. I believe that the behavior if \'Group\' is not set, using the default group of the user, is more portable and should be used.  Further nits of this PR include that the order of and is changed for no reason," and the (correct)  comment telling us that the is owned by \'bitcoin\' is removed.  In conclusion I am not provided with and don\'t see any compelling reasons to apply this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,9,2018-01-24 05:35:50,1113.18,,1,,b'b\' @Flowdalic The spirit of my PR is to follow in the footsteps of  . Which states that these changes are to be made.  (1) states that the data directory should be at  , but if it\\\'s not indicated in the service file, the data directory is not at  , but rather at (2," 3) states that ""The configuration file"," PID directory (if applicable) and data directory should all be owned by the bitcoin user and group. It is advised for security reasons to make the configuration file and data directory only readable by the bitcoin user and group. Access to bitcoin-cli and other bitcoind rpc clients can then be controlled by group membership."". Perhaps according to the last sentence it\\\'d be better to set the permissions to 750?  If someone was installing from source", and reading from  , they would experience all kinds of confusion, as the data directory won\\\'t be where indicated it is. With 2 and 3 I think it\\\'s reasonable to think that this is optional, but my personal opinion is that what\\\'s in the repository should reflect the latest best practices and be consistent.  I\\\'m actually torn for what we should do for (2), while I believe it\\\'s better to have consistency on our end and have the distributions figure it out, I don\\\'t wanna break things for distributions with alternative  s.  Happy to discuss more :smile: \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,10,2018-01-24 05:35:50,1073.4,,1,,"b""b' utACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,11,2018-01-24 05:35:50,288.23,1,,,"b'b"" I\'d like to throw in a vote for (1). I recently stood up an Ubuntu 18.04 server", using the instructions in to install the service. Like @dongcarl is saying, I was a bit confused when it came to configuring the data directory. It worked when I added the option to the service file.  I tried adding to like @Flowdalic suggested, but Bitcoin failed to start. Running  ," I see the the error  . It seems this option in the config file has no effect.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,12,2018-01-24 05:35:50,333.15,,1,,"b""b' I had a look at the code and it appears that bitcoind init first checks the datadir and then reads the config file"," which would explain why in the config file has no effect if the default datadir (or the datadir specified by command line argument) is for some reason inaccessible. I have created url  in an attempt to fix this. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,closed,2018-07-20 20:30:03,894.22,2,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,13,2018-01-24 05:35:50,833.55,,1,,"b""b' The last travis run for this pull request was 177 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,reopened,2018-07-20 20:30:04,0.02,2,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,14,2018-01-24 05:35:50,76.82,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,15,2018-01-24 05:35:50,525.97,,1,,"b""b'  I believe that there are valid uses for the group. Some examples:  uses the bitcoin auth cookie file thru its flag for its RPC calls to bitcoind allows specifying the bitcoin data directory thru its flag  Perhaps what should be done is to make the permissions for the datadir 770 or 750"," so that these applications can run under the group and automatically get  access to it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,16,2018-01-24 05:35:50,6.25,,,1,"b'b""  Sounds good to me. Will do. Just to verify I understand what you\'re saying:  In the case that both and are set"," would override An unset effectively is as it is currently""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,17,2018-01-24 05:35:50,479.1,,,1,"b'b""  Sure", I\'m just agreeing with previous commenters that bitcoin group should either be required to exist and given permissions or it should be dropped. It\'s unnecessarily fragile to reference a group that doesn\'t need to exist and doesn\'t have any permissions for no reason. I\'m not really saying the second thing. The [GetDefaultDataDir]url  function is more complex than that. I\'m just saying we *could* add a one-line override at the top of that function:   that would give init systems a way to set up a default data location without causing datadir= options in / to get silently ignored. I\'m not saying we *should* do this. It\'s fine IMO to just document the limitations that exist right now. But if they are a problem that needs to be solved, this would be a simple," backwards compatible way to solve them.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,18,2018-01-24 05:35:50,40.9,,1,,"b""b' Cleaned up commits Given group exec permission on directories Modified Added release note'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,19,2018-01-24 05:35:50,268.27,,1,,"b""b' I think this could be merged. It looks like the only outstanding suggestion is to mention the openrc config file in the documentation url  which could be done in a followup later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,20,2018-01-24 05:35:50,10.73,,,1,"b'b"" @ryanofsky Perhaps I should just omit the other init systems in the release notes"," as it is unrelated to this PR and I don\'t have enough confidence that they don\'t have a way of overriding. If that seems acceptable I will make the wording changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,21,2018-01-24 05:35:50,46.65,,,1,"b""b' The sentence: is correct as written. If you want to mention that OpenRC and Upstart have other config mechanisms that  would be wonderful but not necessary. I do think it is important to mention that out of the box in all three init systems trying to set in is not supported and will have no effect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,22,2018-01-24 05:35:50,95.18,,1,,"b""b' Pushed clearer wording'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,23,2018-01-24 05:35:50,958.57,,1,,"b'b"" Fixed @laanwj\'s suggestion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,closed,2019-02-04 18:51:50,1341.77,2,16,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,24,2018-01-24 05:35:50,273.37,,,1,"b""b' Thanks! utACK bad1716c6d30fdf4be6d5050a04e1211f920bbd6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12255,closed,-,-,-,2,16,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,opened,2018-01-26 04:25:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,title,2018-01-26 04:25:11,00:00,,1,,"b""b' http: avoid fd exhaustion'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,body,2018-01-26 04:25:11,00:00,1,,,"b'b"" Addresses #11368. This adds a file descriptor limiter for the http server. It\'s possible for the open fd count to potentially exhaust the user\'s defined limit if not checked.  I\'m having a hard time reproducing the issue now", I\'m not sure what\'s changed in my environment. I was finally able to hit it using some pretty nasty tricks, but I\'m less worried about this now for 0.16.  I do think it\'s worth considering taking de6cfceafba33feb77c169135c5ed70bd9d09ca4, 5f5099ac57375bdf345df0f6ebcb6efdd698f4f0, and (part of) 3b0ebb3578e89e3c4b5c0003d159cb0b04c2e86c for 0.16, though," as they help significantly and are easy to review. I\'m happy to break that out into a new PR if necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,1,2018-01-26 04:25:11,278.02,,1,,"b""b' This needs to be tested by those experiencing the issue: @KanoczTomas @vii'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,2,2018-01-26 04:25:11,748.93,,1,,"b'b"" Concept ACK.  Why don\'t understand why you need dc53bec", seems like an unnecessary refactor.  5f5099a and 3b0ebb3 could be in a separate PR," are simple and make sense even without the fd exhaustion problem.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,3,2018-01-26 04:25:11,58.17,,1,,"b""b' @promag dc53bec is just a small chunk of c56cf1a that seemed reasonable on its own.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,4,2018-01-26 04:25:11,372.5,,,1,"b""b' Awesome! The defer accept tweak will defend against typical inadvertent denial of services  Note that the original issue can still be activated depending on the file descriptor limit that is set", as the budgeting in the daemon does not account for this usage or the usage in the db code see url To test it," something like this slowhttptest program   or another tool which can simulate a slowloris (HTTP connection header trickling) attack'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,5,2018-01-26 04:25:11,404.95,1,,,"b'b"" Sorry", I\'m removing the 0.16.0 milestone here. As it introduces many new concepts and work-arounds it is hard to review last-minute, the problem is hard to trigger in the first place," and it is not a regression since 0.15. Also according to @vii it doesn\'t solve the issue completely. I think getting the fd issue fixed properly should be a focus for 0.16.1.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,6,2018-01-26 04:25:11,280.62,,1,,"b""b' @eklitzke I can still produce a crash with these changes on top of url    When last discussed with @theuni he was going to revamp these changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,7,2018-01-26 04:25:11,411.53,,,1,"b""b' @fanquake Interesting -do you have a script to stress test it to induce that condition? Or does that happen during normal operation?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,8,2018-01-26 04:25:11,1290.1,,1,,"b""b' The last travis run for this pull request was 175 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,closed,2018-07-20 20:30:00,964.82,2,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,reopened,2018-07-20 20:30:01,0.02,2,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,9,2018-01-26 04:25:11,1214.48,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,10,2018-01-26 04:25:11,8.1,,1,,"b'b"" There hasn\'t been much activity lately and the patch still needs rebase", so I am closing this for now. Please let me know when you want to continue working on this," so the pull request can be re-opened.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,closed,2018-12-03 16:52:36,1222.58,2,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12274,closed,-,-,-,2,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,opened,2018-01-28 20:15:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,title,2018-01-28 20:15:11,00:00,,1,,"b""b' [WIP][NET] Add NATPMP support.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,body,2018-01-28 20:15:11,00:00,,1,,"b""b' Adds minimal support for NATPMP (and removes dependency on external UPnP library). Reference implementation in  .  WIP but aims to fix #11902 .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,1,2018-01-28 20:15:11,22.47,,1,,"b'b"" I assume libnatpmp should be subtree\'d or we should still use the version linked-against in miniupnpc? On January 28", 2018 8:15:18 PM UTC, Annanay Agarwal  wrote:>Adds minimal support for NATPMP (and removes dependency on external>UPnP library). Reference implementation in  .>You can view, comment on, or merge this pull request online at:>getpublicaddress," map public-private port>url >You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,2,2018-01-28 20:15:11,4.35,,1,,"b'b"" This PR just copies 6 files from libnatpmp into the repository. Perhaps this is a sufficiently low amount of code that we want to do this (like with tinyformat)", but if so, putting them in a subdirectory together may be better. I haven\'t checked how much changes were necessary to them, but if it was 0," perhaps we can subtree but still build them directly from our build system (as opposed to building as a library and linking statically).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,3,2018-01-28 20:15:11,543.73,,1,,"b""b' There are minor changes to the copied files", some including changing the macro, and others according to the coding guidelines like changing to  ," etc.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,4,2018-01-28 20:15:11,196.83,,1,,"b'b"" libnatpmp seems to have been virtually unmaintained a while (last commit was Mar 15", 2016), so I think it doesn\'t matter whether we use \'subtree\'. It might be easier to just include the (small) implementation files into our build system and see if we can maintain it ourselves, cutting out parts we don\'t need.  At least now we don\'t have to carry the  s. I agree with that whatever you do," please don\'t put them in root.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,5,2018-01-28 20:15:11,423.9,,1,,"b'b"" This is failing the travis build did you perhaps forget to add to the makefile"," so that it\'s not included in make dist?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,6,2018-01-28 20:15:11,930.27,1,,,"b'b"" @laanwj ;  I\'m a little confused with the name mangling happening here. The files have in the function prototypes", which confirms no name mangling (confirmed this with  )," but C++ object files are looking for mangled function names?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,7,2018-01-28 20:15:11,142.45,,1,,"b'b\'  You need the extern ""C"" in the header", not in the implementation files.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,closed,2018-07-21 17:29:17,1274.1,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,8,2018-01-28 20:15:11,450.12,,1,,"b""b' The last travis run for this pull request was 101 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,reopened,2018-07-21 17:29:18,0.02,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,9,2018-01-28 20:15:11,1197.27,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14856]url  ([WIP] net: remove more CConnman globals (theuni) by dongcarl) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,10,2018-01-28 20:15:11,356.17,1,,,"b""b' @annanay25 It seems like the work on this PR has stalled somewhat. Do you have time to continue working on this PR? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,11,2018-01-28 20:15:11,709.07,,1,,"b'b"" Is this PR still relevant? I\'m not sure if I will be able to continue working on it. @practicalswift ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,12,2018-01-28 20:15:11,12.17,,1,,b'b\' I think it\\\'s still relevant," but closing if you\\\'re not able to work on it anymore. Will add ""up for grabs"" tag.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,closed,2018-12-10 07:23:58,834.67,2,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,13,2018-01-28 20:15:11,757.9,,1,,"b""b' Can someone please re-assign #11902 to me? I would like to take this PR forward.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12288,closed,-,-,-,2,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,opened,2018-01-29 23:34:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,title,2018-01-29 23:34:29,00:00,,1,,"b""b' Improve CWallet::IsAllFromMe for false results'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,body,2018-01-29 23:34:29,00:00,,1,,"b""b' Break the function into 2 loops so that:  the fast test is executed first for all inputs.  is only executed after all inputs are checked.  This is relevant since after #12296 is called from the UI.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,1,2018-01-29 23:34:29,560.42,,1,,"b'b"" This needs  results. As discussed on IRC"," it\'s not clear how to evaluate changes like this right now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,2,2018-01-29 23:34:29,861.87,,1,,"b""b' If necessary I can work out some benchmarking. Please let me know.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,3,2018-01-29 23:34:29,19.77,,1,,"b""b' @ryanofsky also took the opportunity to push a commit replacing with  . I can push to a new PR if preferable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,4,2018-01-29 23:34:29,12.72,,1,,"b""b' Agree on this needing benchmarks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,closed,2018-07-20 20:29:51,1255.37,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,5,2018-01-29 23:34:29,1240.62,,1,,"b""b' The last travis run for this pull request was 164 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,reopened,2018-07-20 20:29:53,0.03,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,6,2018-01-29 23:34:29,463.08,,1,,"b""b' How about splitting the lock change out"," and making use of  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,7,2018-01-29 23:34:29,553.25,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#12508]url  (IsAllFromMe by kallewoof) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,8,2018-01-29 23:34:29,1304.35,,1,,"b""b' The code changes look sane"," light code review utACK url  modulo benchmarking as mentioned above  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,9,2018-01-29 23:34:29,280.17,,1,,"b""b'   is only called from  . I guess this performance improvement is not worth it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,closed,2018-11-26 15:50:43,1160.83,0,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12297,closed,-,-,-,0,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,opened,2018-01-30 00:34:45,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,title,2018-01-30 00:34:45,00:00,,,1,"b""b' Improve CWallet::IsFromMe for positive results'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,body,2018-01-30 00:34:45,00:00,,1,,"b""b' Trivial change that avoids computing the transaction debit by early returning when an input is debit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,1,2018-01-30 00:34:45,539.38,,1,,"b""b' Does have some overlap with #9167"," I think'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,2,2018-01-30 00:34:45,21.42,,,1,"b'b""  Thanks @laanwj I\'ll take look"," but that one looks unmaintained.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,3,2018-01-30 00:34:45,9.0,,1,,"b'b""  It does have ACKs already"," so it\'s just a matter of pushing it over the finish.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,4,2018-01-30 00:34:45,1372.58,,1,,"b""b' Like for #12297"," we need some load test or benchmark or profiling to evaluate this change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,5,2018-01-30 00:34:45,993.27,,,1,"b'b"" Self review", this is incomplete," missing refactor to  . @laanwj I don\'t think so. is only called in  : url I only claim improvement for positive results \\xf0\\x9f\\x98\\x84 which should be near to none considering the blockchain.  already early returns when an input is mine. Sounds reasonable to do the same in  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,6,2018-01-30 00:34:45,720.22,,1,,"b""b'  Any plans to update this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,7,2018-01-30 00:34:45,2.78,,1,,"b""b' @Sjors sure"," will get back to this after other active PRs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,closed,2018-07-20 20:29:46,1195.02,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,8,2018-01-30 00:34:45,416.38,,1,,"b""b' The last travis run for this pull request was 171 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,reopened,2018-07-20 20:29:47,0.02,0,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,9,2018-01-30 00:34:45,893.73,,1,,"b""b' #12508 replaces the IsFromMe function making this redundant if that is merged"," correct?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,10,2018-01-30 00:34:45,263.55,,1,,"b'b""  @Sjors actually it\'s not necessary as caches the value. @MeshCollider that was closed.  Anyway", this only improves performance for transaction with wallet inputs upfront," which avoids computing remaining input debits.  @laanwj @MarcoFalke this change is really simple but not worth the effort to benchmark. Feel free to close if it\'s not mergeable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,11,2018-01-30 00:34:45,12.93,,1,,"b""b' Slight NACK because it makes the already large  bigger by three lines"," but the code appears correct.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,closed,2018-11-26 16:03:22,1173.58,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12299,closed,-,-,-,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,opened,2018-01-30 17:58:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,title,2018-01-30 17:58:36,00:00,,1,,"b""b' test: Make ua_comment test pass on 0.16.0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,body,2018-01-30 17:58:36,00:00,1,,,"b""b' The specific length of the uacomment is one shorter on than on causing the (stupid) test to fail.  This change makes optionally take a regexp"," so that the error message can be checked without being specific about the reported length.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,1,2018-01-30 17:58:36,2.4,,1,,"b""b' utACK 0224be7bb45f0faed13ba067d14082f19cc0685a'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,2,2018-01-30 17:58:36,36.67,,1,,"b""b' Why not just the minimal fix of:   Rather than changing the util function for this one case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,3,2018-01-30 17:58:36,0.77,,1,,"b""b' Sigh...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,closed,2018-01-30 18:38:39,40.05,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,4,2018-01-30 17:58:36,0.4,,1,,"b""b' Closing this"," feel free to fix it in your own way.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,5,2018-01-30 17:58:36,6.32,,1,,"b'b"" ACK 0224be7bb45f0faed13ba067d14082f19cc0685a (verified that it fixes 0.16.0) utACK 031c9a0 Let\'s just merge a fix and move on"," this is too much bikeshedding imo.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,reopened,2018-01-30 20:18:37,99.97,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,6,2018-01-30 17:58:36,124.97,,1,,"b""b' ACK aac6bce11219574e097a51da867e736c3d6ad96e  I agree with the longer term goal of changing to compare regexs. There are lots of other tests that check substrings which could be improved.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,7,2018-01-30 17:58:36,3.42,,1,,"b'b"" utACK aac6bce11219574e097a51da867e736c3d6ad96e  Didn\'t test that this fixes 0.16. Going to merge and cross fingers...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,closed,2018-01-30 20:57:08,38.52,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,8,2018-01-30 17:58:36,6.03,,1,,"b""b' (also tested it fixes v0.16 for me)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12302,closed,-,-,-,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,opened,2018-01-31 23:37:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,title,2018-01-31 23:37:30,00:00,,1,,"b""b' Viruses in the wallet (false)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,body,2018-01-31 23:37:30,00:00,,1,,"b""b' Sometimes I get scared of wallets that are collected. Are you checking the packages that you are requesting for installation? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,1,2018-01-31 23:37:30,37.87,,1,,"b""b' Where did you get  ? That file did not come from this repository.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,2,2018-01-31 23:37:30,648.37,,1,,"b""b' That is certainly not a file from our distribution. Make sure you only download from url  or url  and verify the signatures on the download (SHA256) before using a download.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,closed,2018-02-01 11:03:44,686.23,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,3,2018-01-31 23:37:30,24.08,,1,,"b""b' @fanquake @laanwj  I uploaded it here"," please check url  SHA256: | 905a5999fb52b083d7e3bedb2dc6704ca641823f81865db58a55a6a20b454d8c  I checked again url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,reopened,2018-02-01 15:34:28,270.73,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,4,2018-01-31 23:37:30,248.38,,1,,"b'b\' That\\\'s interesting. So it seems that bitcoin executables are marked as ""riskware"" by some AV tools (but not-a-virus)? Maybe due to botnet usage", which makes it suspicious to find it on a PC where it wasn\\\'t explicitly installed by the user. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,5,2018-01-31 23:37:30,37.35,,1,,"b'b\' Virustotal results are know to be ""broken"" url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,6,2018-01-31 23:37:30,507.83,1,,,"b'b"" It may be worth validating release versions on Virustotal for false positives before release and having any issues resolved.  I have uploaded each of the freshly provided files from url  and provided a comment and a thumbs-up. While this is helpful it does not actually resolve the FP.  url  url  url  url  url  url  url  url Some buffoon has already gone through previously and downvoted each one.  Note that the URL\'s seem to be flagged CLEAN e.g.: url @laanwj Riskware", not-a-virus, miner and, PUP detections are mostly geared toward corporate networks but confuse standard users no end.  @MarcoFalke I do not think it is particularly helpful to flag VirusTotal results as broken, it is simply a common presentation of the results of many different AV. It is quite common for not-a-virus detections and so on to be added for packages that a corporate network would likely want to be alerted to if it were present on their network. Trojan flags, on the other hand, are a definite FP by individual AV vendors. It would be more correct to say that some AV vendors are not careful or specific enough narrowing down their detections. They can easily add it to their database as FP to prevent further detections once they are communicated with. Also, some vendors do not wholly develop their own detections signatures, just copying when they can the detection signatures of others (to grow their database without needing to see or investigate samples).  You can see in the behaviour tab some of the trojan matching behaviours. While it may be possible to remove or change this behaviour if it is not necessary to be precisely as it is," such a change should not be necessary as the release version can be cleared with AV vendors if necessary before release to prevent FP\'s.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,7,2018-01-31 23:37:30,121.77,,1,,"b'b"" It would be better to handle this as a part of the release schedule.  @MarcoFalke I would be prepared to do a pre-upload of each release and the URL\'s to VT for the team once it is compiled and testing is completed and report the results", and leave a comment along the following lines:  This is the official release  of Bitcoin Core for {platform} {architecture} from url  where you can check release signatures and review source code.  I would just need to be notified of the final download URL\'s once the files are pre-staged.  This should help as many AV researchers (and many of those working for the various AV vendor labs) use VT.  At least some AV vendors use notification of detections by other engines," so the details are useful.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,8,2018-01-31 23:37:30,7.4,1,,,b'b\' IIRC the issues go away when things get signed, released," and run by many users (some kind of shitty ""reputation score"""," IIRC). Seems not-unreasonable that things which access """" be considered risky by default. On February 4", 2018 2:43:19 AM UTC, Willtech  wrote:>It would be better to handle this as a part of the release schedule.>VT for the team once it is compiled and testing is completed, and leave>a comment along the following lines:>{architecture} from url  where you can check>release signatures and review source code.>files are pre-staged.>the various AV vendor labs) use VT.  At least some AV vendors use>notification of detections by other engines, so the details are useful.>You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,9,2018-01-31 23:37:30,4.48,1,,,"b'b"" @TheBlueMatt True", the open-source philosophy. Note that the Windows v0.15.1 release seems to be also triggering on generic suspicious behaviour identified: url And," having FP\'s cleared up by the AV vendors before the release is public is still useful.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,10,2018-01-31 23:37:30,921.87,,1,,"b""b' Apparently"," one can submit FPs to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,11,2018-01-31 23:37:30,143.5,,1,,"b""b' Closing this", this is not an actionable issue with regard to the source repository," and it seems the OP deleted their account.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,closed,2018-03-05 20:40:28,306.0,3,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12320,closed,-,-,-,3,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,opened,2018-02-04 22:53:00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,title,2018-02-04 22:53:00,00:00,,1,,"b""b' shutdown: fix crash on shutdown with reindex-chainstate'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,body,2018-02-04 22:53:00,00:00,,1,,"b""b' Fixes the assertion error reported here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,1,2018-02-04 22:53:00,36.97,,1,,"b""b' Tests need update (test_bitcoin: :205: bool CCoinsViewCache::Flush(): Assertion '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,2,2018-02-04 22:53:00,1332.2,,1,,"b'b"" @TheBlueMatt pointed out that this shouldn\'t be new for 0.16", and I\'ve now reproduced with 0.15.1.  So," this probably shouldn\'t be an 0.16 blocker.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,3,2018-02-04 22:53:00,265.75,,,1,"b'b"" I ran into this a few times during testing", which was somewhat surprising so maybe it is somehow easier to hit now? Not sure why that would ," worth fixing if there\'s an easy fix for 0.16 (eaiser fix is probably to make the ActivateBestChain if (ShutdownRequested()) check a if (ShutdownRequested() && () != nullptr) check).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,4,2018-02-04 22:53:00,998.67,,1,,"b""b' I prefer the fix in #12367 as much simpler.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,5,2018-02-04 22:53:00,41.02,,1,,"b""b' Closing for now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,closed,2018-02-06 19:27:36,1234.6,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,6,2018-02-04 22:53:00,226.07,,1,,"b""b' Without this change", I still get a segfault from bitcoind master (commit c997f8808256521397f1c003bb1e9896fee6eaa0) reliably. To reproduce:  * Run  * Immediately type Ctrl-c," and wait for bitcoind to stop  * bitcoind segfaults with this stack trace: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,reopened,2018-02-13 03:54:15,506.65,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,7,2018-02-04 22:53:00,404.47,,,1,"b""b' Thanks for helping to reproduce", eklitzke! Indeed I managed to force this with this patch: And running with: I pushed a simple change that I think is obviously safe. I believe @TheBlueMatt would prefer a more elegant fix, but imo this is a reasonable option for the 0.16 branch. I defer to @wumpus on backporting. Note that at first glance it may make more sense to add the checks in  around the FlushStateToDisk()s," but the first is called without cs_main and I avoided messing with locks for the sake of simplicity. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,8,2018-02-04 22:53:00,608.33,1,,,b'b\' @TheBlueMatt," in IRC you wrote ""we could revert to the initial suggestion of #12349 and just short-circuit flushing"," but I really hate that"" url Could you explain more? I haven\\\'t looked in detail", but at first glance this looks like a simple, obvious fix that doesn\\\'t rely on action at a distance like the one in #12367.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,9,2018-02-04 22:53:00,58.75,,,1,"b'b"" You\'re deferring to the wrong wumpus!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,10,2018-02-04 22:53:00,1235.25,,1,,"b'b"" utACK  We absolutely should have tests for this! it\'s a bit silly to merge a fix for something (#12367) then need another fix for the same thing"," within the same rc phase.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,11,2018-02-04 22:53:00,319.03,1,,,"b'b"" @laanwj Yea", this is a mess :(  As a small data point, though, we believed this to be qt only and couldn\'t hit it with rc3. It was @eklitzke\'s bitcoind backtrace that made it easy to reproduce.  I just tested with current master and can confirm that the bug and fix are still valid.  Any suggestions for testing? Only thing I can think of is an rpc test that runs bitcoind with something like -stopafterblockimport," but that\'d only be testing a really specific code path.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,12,2018-02-04 22:53:00,5.98,,1,,"b'b"" Tested ACK ceaefdd. Can\'t reproduce the crash with this change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,13,2018-02-04 22:53:00,130.85,,,1,"b'b"" utACK url  @TheBlueMatt\'s suggestion was pretty good (but not in this PR"," obviously)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,closed,2018-02-15 21:23:03,1048.8,2,9,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12349,closed,-,-,-,2,9,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,opened,2018-02-12 00:15:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,title,2018-02-12 00:15:41,00:00,,1,,"b""b' Bitcoin fails to build on OpenBSD 6.2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,body,2018-02-12 00:15:41,00:00,1,,,b'b\' <!-This issue tracker is only for technical issues related to Bitcoin Core.  General bitcoin questions  support requests are best directed to the Bitcoin StackExchange at url For reporting security issues," please read instructions at url If the node is ""stuck"" during sync or giving ""block checksum mismatch"" errors", please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -gmake fails to compile bitcoin from source for commits 8470e6472 or newer on OpenBSD 6.2.  Expected successful gmake exit.  gmake exits with 3 errors:  Full output is given below.  This error always occurs when following the instructions in /using bitcoin sources from commits 8470e6472 and newer.  However, when compiling bitcoin source using commit 7f81250 on the same system, gmake successfully completes.  This error occurs using bitcoin sources from commits 8470e6472 and newer.  OpenBSD 6.2 amd64  gmake-4.2.1 autoconf-2.69.p2 automake-1.15.1 boost-1.58.0p8  Bitcoin source information for the attached output:  Configured using:   gmake output:  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,1,2018-02-12 00:15:41,614.78,,,1,"b'b"" Whoops I\'ll take a look.  Yes", I get the same error following the steps in  .  I decomposed the expression to try to untangle this error a bit: ~~Looks like the last line is what causes problems. The compiler only has a match for  , not for non-const.~~  No," that\'s not it. The emplace error itself is only a symptom. Even stating only already causes the error! ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,2,2018-02-12 00:15:41,48.02,,1,,"b""b' Can you test #12422"," it fixes this compile error.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,3,2018-02-12 00:15:41,904.0,,1,,"b""b' I can confirm a successful build on OpenBSD 6.2 using the latest master and your diffs from #12422.  However"," gmake check gives the following errors: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,closed,2018-02-14 02:22:30,126.82,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,reopened,2018-02-14 02:23:21,0.85,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,4,2018-02-12 00:15:41,19.57,,1,,"b""b' Perhaps the results of the test should be a separate bug report?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,5,2018-02-12 00:15:41,1327.77,,,1,"b""b' I can confirm that the latest master with the patches from 12422 now give a successful build with all tests passed.  Thank you'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,closed,2018-02-15 21:11:44,1128.38,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12413,closed,-,-,-,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,opened,2018-02-13 01:20:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,title,2018-02-13 01:20:04,00:00,,1,,"b""b' Force distinct destinations in CWallet::CreateTransaction'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,body,2018-02-13 01:20:04,00:00,,1,,"b""b' Check that all transaction destinations", including change address if specified," are distinct.  The error is also raised in the UI:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,1,2018-02-13 01:20:04,1.78,,1,,"b'b"" A similar check exists in but at the moment the errors are different. Not sure it should change there or try to make this equal (the problem is that the errors in are translated and RPC errors aren\'t).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,2,2018-02-13 01:20:04,542.07,,1,,"b""b' Concept ACK. I think this should be enforced consistently.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,3,2018-02-13 01:20:04,55.42,,1,,"b""b' Can you be more specific @laanwj?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,4,2018-02-13 01:20:04,132.83,,,1,"b""b' Huh? No", I mean that exactly what this PR does," checking it in CreateTransaction is good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,5,2018-02-13 01:20:04,101.8,,1,,"b""b' Ah ok"," misunderstood you.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,6,2018-02-13 01:20:04,992.18,,1,,"b""b' utACK e82d17991418bdc3cfe60407a66735c265f8cd21'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,7,2018-02-13 01:20:04,481.75,1,,,"b'b"" Concept ACK"," but now there\'s two different error messages depending on whether the duplicate is a change address or a regular destination:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,8,2018-02-13 01:20:04,55.78,,1,,"b""b' @Sjors I guess we could remove the old check?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,9,2018-02-13 01:20:04,73.9,,1,,"b""b' Should all checks for duplicate addresses be removed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,10,2018-02-13 01:20:04,255.93,,1,,"b""b' @promag I suggest reusing the original warning.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,11,2018-02-13 01:20:04,510.88,,1,,"b""b' Concept ACK"," agree the original warning is more clear.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,closed,2018-07-20 20:29:41,1149.62,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,12,2018-02-13 01:20:04,825.3,,1,,"b""b' The last travis run for this pull request was 157 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,reopened,2018-07-20 20:29:42,0.02,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,13,2018-02-13 01:20:04,1035.18,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,14,2018-02-13 01:20:04,318.78,,,1,"b""b' This looks good but the comments above need addressing (feel free to cherry-pick from my branch)  EDIT: This will also prevent from funding a transaction with duplicate outputs", correct? Is that what we want? If someone has gone to the effort of creating a transaction with duplicate outputs manually," maybe we should allow it there?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12419,open,-,-,-,1,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,opened,2018-02-14 23:00:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,title,2018-02-14 23:00:37,00:00,,1,,"b""b' RPC: Strict JSON-RPC 2.0 compliance (gated behind flag)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,body,2018-02-14 23:00:37,00:00,,1,,"b'b"" This patch adds a -strictjsonrpcspec flag.  If the flag is used", bitcoind enters JSON-RPC 2.0 mode," which allows it to be fully spec-compliant (and thus work with libraries like libjson-rpc-cpp without modification).  I\'ve added a functional test for the specific bits of the spec that I\'ve changed.  univalue changes are included in this commit for ease of review but I can pull those out (see url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,1,2018-02-14 23:00:37,579.73,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,2,2018-02-14 23:00:37,775.47,,1,,"b""b' Tests are failing on the latest commit. Looking in to it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,3,2018-02-14 23:00:37,9.52,1,,,"b""b' doh!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,4,2018-02-14 23:00:37,6.58,,1,,"b""b' [Squash needed]url  at some point.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,5,2018-02-14 23:00:37,808.67,,,1,"b""b' Nice. Concept ACK. Travis is failing because of the subtree change that is separately opened in url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,6,2018-02-14 23:00:37,765.22,1,,,"b""b' My attempt to squash this seems to have gone awfully wrong. Trying to fix it up...  edit: should be fine now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,7,2018-02-14 23:00:37,886.53,,1,,"b""b' Related: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,8,2018-02-14 23:00:37,1110.55,,1,,"b""b' (travis failure is due to subtree check for univalue)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,closed,2018-07-20 20:29:38,1289.02,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,9,2018-02-14 23:00:37,666.77,,1,,"b""b' The last travis run for this pull request was 151 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,reopened,2018-07-20 20:29:39,0.02,2,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,10,2018-02-14 23:00:37,1313.53,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,11,2018-02-14 23:00:37,1202.33,,1,,b'b\' Closing this for now," and adding ""up for grabs"" tag. Let me know if you want to start work on this again and I\\\'ll reopen\\xe2\\x80\\xa6\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,closed,2018-09-12 14:25:32,1075.88,2,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12435,closed,-,-,-,2,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,opened,2018-02-16 20:39:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,title,2018-02-16 20:39:27,00:00,,1,,"b""b' scripted-diff: Rename key size consts to be relative to their class'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,body,2018-02-16 20:39:27,00:00,,1,,"b""b' ~~And introduce CPubKeySig to host code relative to key sigs.~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,1,2018-02-16 20:39:27,42.67,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,2,2018-02-16 20:39:27,830.68,,1,,"b""b' Concept ACK. Not sure if needs its own space.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,3,2018-02-16 20:39:27,793.38,,,1,"b""b' Thanks"," made PubKeySig a namespace.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,4,2018-02-16 20:39:27,1224.97,,1,,"b'b"" On second thought"," dropped PubKeySig without any other code it\'s barely a separate concern.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,5,2018-02-16 20:39:27,1330.55,,1,,"b'b\' seemingly unrelated travis error: >File ""/-i686-pc-linux-""", line 54, in _test_getnettotals kicked travis\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,6,2018-02-16 20:39:27,33.72,,,1,"b""b' @instagibbs thanks seems like that is a timing-related failure", I pushed #12545 to increase the wait," and reduce the likelihood of spurious failures.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,7,2018-02-16 20:39:27,335.28,,1,,"b""b' Needs rebase if still relevant'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,8,2018-02-16 20:39:27,351.0,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,9,2018-02-16 20:39:27,810.35,,1,,"b""b' Rebased & reimplemented as a scripted-diff'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,10,2018-02-16 20:39:27,224.65,,1,,"b""b' utACK f1583f26f2d9cb199ace6054a67797e1d4d9bed0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,11,2018-02-16 20:39:27,722.15,,1,,"b""b' Rebased and updated to cover #13194'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,12,2018-02-16 20:39:27,349.9,,1,,"b""b' Rebased to confirm scripted-diff still applies. It does. \\xf0\\x9f\\x91\\x8d '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,13,2018-02-16 20:39:27,1435.85,,1,,"b'b"" utACK 2dda5dd034"," but please note that the scripted diff will modify files outside the git tree. I\'d prefer to avoid that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,closed,2018-09-07 18:04:36,1285.15,0,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,reopened,2018-09-07 18:04:43,0.12,0,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,14,2018-02-16 20:39:27,650.47,,1,,"b""b' Updated to include 2 new cases"," and brought it down to a single call which only acts on files in the repo.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,15,2018-02-16 20:39:27,1410.52,,1,,"b""b' Rebased for #14195'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,16,2018-02-16 20:39:27,1126.3,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,17,2018-02-16 20:39:27,924.0,,1,,"b""b' Rebased"," added a commit to fixup whitespace.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,18,2018-02-16 20:39:27,597.38,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12461,open,-,-,-,0,18,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,opened,2018-02-19 15:00:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,title,2018-02-19 15:00:24,00:00,,1,,"b""b' [tests] bind functional test nodes to 127.0.0.1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,body,2018-02-19 15:00:24,00:00,,1,,"b""b' Replaces #12200 which broke  .  Prevents OSX firewall allow-this-application-to-accept-inbound-connections permission popups and is generally safer.  To prevent binding to  "," set  .  cc @jnewbery'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,1,2018-02-19 15:00:24,3.78,,,1,"b""b' Ouch"," I na\\xc3\\xafvely assumed that we only bound to loopback for the tests (for obvious security reasons). Very nice find!  Very strong concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,2,2018-02-19 15:00:24,229.3,,1,,"b'b"" Are there any cases in which we _don\'t_ want to bind to lo? Later arguments take precedence if I\'m not mistaken"," couldn\'t this just be hardcoded into args and set extra_args to have -bind=0.0.0.0 if other behaviour is required?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,3,2018-02-19 15:00:24,80.77,1,,,"b'b\' @esotericnonsense Binding to 0.0.0.0 means ""bind to all local addresses"" (which includes loopback", as I suspect you probably already know), and is often a default for many server daemons, so I don\\\'t see why it should be necessary to bind to loopback  specifically (unless, of course, -bind=127.0.0.1 was specified).  On a side-note:  When binding to 0.0.0.0, on some systems that support IPv6 this has the effect of also binding to ::1 in addition to 127.0.0.1 (I encountered this behaviour on Windows 7 a few years ago), but this really shouldn\\\'t be of any concern as it\\\'s a stack-implementation matter that I generally regard as being beyond the scope of most server daemons and other socket-listening applications.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,4,2018-02-19 15:00:24,973.15,,1,,"b""b' @esotericnonsense note that  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,5,2018-02-19 15:00:24,110.95,,1,,"b'b\' A little more correct would be to call it ""bind only to localhost"" instead of ""bind to localhost""", because the default will bind (P2P) on all interfaces including localhost, but concept ACK.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,6,2018-02-19 15:00:24,297.25,1,,,"b""b' @laanwj I renamed the variable and added a more useful commit message. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,7,2018-02-19 15:00:24,1144.1,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,8,2018-02-19 15:00:24,224.3,,1,,"b'b"" @Sjors this is almost ready for merge"," but needs responding to @conscott\'s nit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,9,2018-02-19 15:00:24,189.63,,1,,"b'b"" It doesn\'t make much sense to me to add the extra argument to the function. That function doesn\'t take any other arguments related to bitcoind config.  It seems more architecturally sound to me to have the function update the config file directly"," perhaps through an method on the class.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,10,2018-02-19 15:00:24,5.12,,1,,"b""b' Nit addressed; I renamed to  . I also removed it from  "," not sure why I put it there in the first place.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,closed,2018-03-05 21:18:46,378.37,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,reopened,2018-03-05 21:18:52,0.1,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,11,2018-02-19 15:00:24,1.05,,1,,"b""b' @jnewbery just saw your suggestion"," will look into that tomorrow...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,12,2018-02-19 15:00:24,28.98,,1,,"b""b' @jnewbery improved...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,13,2018-02-19 15:00:24,112.53,,1,,"b""b' utACK b156ff7c30175f5d23bde97a56a2c34af2196466. Will test tomorrow.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,14,2018-02-19 15:00:24,823.48,,1,,"b""b' Tested ACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,closed,2018-03-07 13:53:30,994.63,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12482,closed,-,-,-,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,opened,2018-02-20 14:21:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,title,2018-02-20 14:21:57,00:00,,1,,"b""b' [Wallet] [RPC] Remove deprecated wallet rpc features from bitcoin_server'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,body,2018-02-20 14:21:57,00:00,,1,,"b""b' The following rpc features were deprecated in V0.17:  returning wallet information about an address  This PR fully removes those features. It can be merged once V0.17 has been branched from master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,1,2018-02-20 14:21:57,0.87,,1,,"b'b"" open-closing this PR so the branch is available to everyone. This ~+ #10762~ should allow server to be built without any dependencies on wallet.  Will re-open once V0.17 has been branched.  Edit: #10762 has been merged. I\'ve now rebased this on master.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,closed,2018-02-20 14:22:49,0.87,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,reopened,2018-04-03 17:27:00,184.18,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,closed,2018-04-03 17:27:15,0.25,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,reopened,2018-08-06 15:05:24,1298.15,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,2,2018-02-20 14:21:57,43.38,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,3,2018-02-20 14:21:57,1200.33,,1,,"b""b' V0.17 has been branched. This is ready for '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,4,2018-02-20 14:21:57,451.85,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,5,2018-02-20 14:21:57,30.37,,1,,"b""b' re-utACK f7e9e704683be4d6be4c9ea600a479bc02976313'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,6,2018-02-20 14:21:57,333.9,,1,,"b""b' utACK f7e9e70.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,closed,2018-09-07 03:03:58,718.57,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,7,2018-02-20 14:21:57,805.72,,1,,"b""b' What was the reasoning behind this? It seems unnecessary. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,8,2018-02-20 14:21:57,816.15,,1,,"b""b' @ptyx11 This is part of the separation of the wallet from the node. Those RPCs were node RPCs which involved wallet things"," so they needed to be removed. They have been deprecated for at least one major version with replacement RPCs already available.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12490,closed,-,-,-,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,opened,2018-02-22 05:25:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,title,2018-02-22 05:25:29,00:00,,1,,"b""b' IsAllFromMe'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,body,2018-02-22 05:25:29,00:00,,1,,"b""b' Rebases #9167 by @morcos on master.  Why do this: this is mostly a refactor which fixes some bugs"," e.g. fee in for mixed owner inputs. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,1,2018-02-22 05:25:29,349.58,,1,,"b'b"" What\'s the purpose of changing coding style?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,2,2018-02-22 05:25:29,96.32,,1,,"b""b' @ken2812221 To abide by the coding style conventions (see contributing on main page).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,3,2018-02-22 05:25:29,473.22,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,4,2018-02-22 05:25:29,236.9,,1,,"b'b"" So", the new code does not check if  , which does. The result is that the existing code will say \'not eligible\' and the new code will say \'eligible\', for many of the coin selector test cases. I think adding a check for to is the right approach, but I believe @morcos removed this part for a reason in #9167.  Ping @morcos. Still investigating the issue, so this may become irrelevant.  Edit: It seems this: is considered all mine. Which technically speaking is correct, but explicitly returns 0 (i.e. not mine) for  ," so I might adapt that logic in as well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,5,2018-02-22 05:25:29,118.65,,,1,"b'b"" I believe fdb1d59 (count 0-vin transactions as not mine in  ) and 5073476 (consider coinbase transaction as all mine in  ) address the problems", ~~but I\'m not sure the latter is entirely correct in all cases. If a random person checks a coinbase transaction, I think it will claim it is theirs now. I think adding a \'can spend\' check should suffice here~~.  Edit: is only used in the feebumper, and since coinbase transactions can\'t be fee-bumped anyway, 5073476 should be fine. To clarify: the code already behaves this way (i.e. consider coinbase transactions as from me," if in miner wallet); it may be worth it to fall back to style check of though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,6,2018-02-22 05:25:29,881.83,,1,,"b""b' utACK ee25bc5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,7,2018-02-22 05:25:29,75.67,1,,,"b'b"" Can you add a PR description? It\'s unclear what this is trying to solve without reading the code (the same is true for the original PR"," which lists the changes but not the goal).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,8,2018-02-22 05:25:29,627.73,,1,,"b'b"" @sipa From my understanding (and I could be wrong)", it\'s mostly a refactor which fixes some bugs, e.g. fee in gettransaction for mixed owner inputs. Am I missing something, @morcos? If not," I\'ll update the PR description.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,9,2018-02-22 05:25:29,176.03,1,,,"b'b"" @kallewoof I would draw from the commit messages"," it\'s fairly clear if you interpret them in aggregate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,10,2018-02-22 05:25:29,9.13,,,1,"b""b' @Empact That was what I intended with the above description. Did I miss anything?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,11,2018-02-22 05:25:29,1362.17,,1,,"b'b"" Here\'s my interpretation of the commits: * Change to only consider outputs trusted / mine if all their inputs are mine", rather than just one of them. * Change rpc to only include fee information if all inputs pass the relevant filter," rather than just one. * Change  to consider coinbase transactions mine.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,12,2018-02-22 05:25:29,985.53,,1,,"b'b"" @Empact That\'s a description of what is done", not what the purpose is," which is kinda what the original PR did. I think @sipa wants a description of *why* not *what*.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,closed,2018-07-22 23:50:27,1104.97,2,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,13,2018-02-22 05:25:29,32.22,,1,,"b""b' The last travis run for this pull request was 73 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,reopened,2018-07-22 23:50:28,0.02,2,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,14,2018-02-22 05:25:29,813.95,,1,,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#14437]url  (Refactor: Start to separate wallet from node by ryanofsky)* [#13756]url  (wallet: ""avoid_reuse"" wallet flag for improved privacy by kallewoof)* [#12297]url  (Improve CWallet::IsAllFromMe for false results by promag)* [#10973]url  (Refactor: separate wallet from node by ryanofsky) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,15,2018-02-22 05:25:29,112.5,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,16,2018-02-22 05:25:29,819.5,1,,,"b'b"" Apologies for picking this up and then dropping the ball"," but I don\'t feel comfortable in my understanding of this code enough to keep rebasing this beyond this point. I suggest reopening the original PR #9167 (marked up for grabs) and ignoring my work on top of it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,closed,2018-11-12 04:56:25,305.95,3,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12508,closed,-,-,-,3,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,opened,2018-02-22 14:48:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,title,2018-02-22 14:48:16,00:00,,1,,"b""b' test: Add rpc_bind test to default-run tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,body,2018-02-22 14:48:16,00:00,,,1,"b'b"" Skip the parts that cannot be run on the host due to lack of IPv6 support or a second interface to bind on", and warn appropriately.  Without no strong requirements (besides being Linux only, which will skip the test) left, add this test to the default in test_runner.  ~~(the non-IPv6 parts of the two dual-IPv4/6 tests could also be enabled, but first going to look what Travis does here to see if there wasn\'t another reason it was disabled)~~ done," it only makes sense for the first""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,closed,2018-03-14 14:13:31,1405.25,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,1,2018-02-22 14:48:16,1379.42,,1,,"b""b' utACK db9fd32284c8ad5b7f3b11efc0716324a5abd147'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,reopened,2018-03-18 13:47:41,1414.17,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,2,2018-02-22 14:48:16,237.08,,1,,"b'b"" I think there should be some indication in the test_runner summary that the full test has not been run. A printed warning log is not enough"," since the user will have no indication that the test hasn\'t been fully executed.  One way we could do this is to add options to the rpc_ test. See url  for example.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,3,2018-02-22 14:48:16,296.25,,1,,"b""b' Needs rebase if still relevant'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,4,2018-02-22 14:48:16,777.53,,1,,"b'b"" Well the thought here was that running part of the test is better than not running it at all.  Indeed", adding options for ipv4/ipv6 testing would be an option, But I feel we\'re overcomplicating this," this is also what made me unsure about this change. I agree simply requiring localhost IPv6 support to run the test suite wouldn\'t be *that* extreme at this point. It\'d be a much smaller change than this.  If we can rely on Travis (finally) having IPv6 then I\'m all for that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,5,2018-02-22 14:48:16,11.55,,1,,"b'b"" Rebased and added a squasshme commit that skips the entire test if no IPv6 localhost. Probably should do the same for  . But let\'s see how this goes on travis.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,6,2018-02-22 14:48:16,182.25,1,,,"b'b"" So apparently travis still has no IPv6 support. Disappointing. This causes the test to be skipped on travis for now. That\'s ok"," at least it will still run by default locally. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,7,2018-02-22 14:48:16,58.52,,,1,"b'b"" Changes look good. Will ACK once the commits are squashed.  I think there\'s still value to running a subset of the tests when ipv6/non-loopback interfaces are not available", as long as it\'s clearly communicated to the user that the full test has not been run.  I still think something like url  could be useful in a future PR," so at least Travis is running a subset of this test.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,8,2018-02-22 14:48:16,1193.2,,,1,"b'b""  Oh that\'s a good idea"," I didn\'t think of splitting up the test into parts and still adding all the sub-parts to the default-run tests (so that they\'ll run locally) will take that over.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,9,2018-02-22 14:48:16,56.38,,1,,"b'b"" Took over @jnewbery\'s commit and did the rebase that was needed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,10,2018-02-22 14:48:16,69.02,,,1,"b'b"" Thanks @laanwj . Will rereview.  Travis failure was unrelated. p2p_ seems to be particularly flakey these days. I\'ll kick travis.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,closed,2018-04-23 14:08:10,20.48,1,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,11,2018-02-22 14:48:16,120.45,1,,,"b'b"" post-merge tested ACK e87fefc60fc0f648b5e26aa716481e79a85f04de.  Sorry for not rereviewing earlier feel free to prod me if I\'ve promised a review and not delivered!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12510,closed,-,-,-,2,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,opened,2018-02-27 11:33:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,title,2018-02-27 11:33:08,00:00,,1,,"b""b' [WIP] 64 bit iOS device support '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,body,2018-02-27 11:33:08,00:00,,1,,"b""b' This should make it possible to build ~dependencies~ for iPhone 8"," iPhone X and other iOs devices with that or new chips.  Fixes #11720'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,1,2018-02-27 11:33:08,3.0,,1,,"b""b' It seems I need to make some additional change...   Full [log]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,2,2018-02-27 11:33:08,850.37,,1,,"b""b' @Sjors Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,3,2018-02-27 11:33:08,698.47,,1,,"b""b' @fanquake waiting for hints.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,4,2018-02-27 11:33:08,1083.65,,1,,"b""b' @theuni can you take a look"," looks like @sjors ran into a brick wall here'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,5,2018-02-27 11:33:08,55.47,,1,,"b""b' I think this PR alone makes little sense. IMO including the openssl change in url  seems after solving a real use case.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,6,2018-02-27 11:33:08,758.55,1,,,"b'b"" See here for enough to get cross builds from Linux working: url I can confirm that I get valid aarch64/armv7 binaries using that. Though I have no idea if they work :) Edit: That\'s building depends with NO_QT=1. I assume the Qt build is horribly broken.  Native builds are more painful", as for cross builds we can assume sdk paths, versions, compilers," etc. I\'ll save those for a next step. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,7,2018-02-27 11:33:08,844.72,,1,,"b""b' How about change make command to  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,closed,2018-07-21 17:29:01,355.88,1,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,8,2018-02-27 11:33:08,381.68,,1,,"b""b' The last travis run for this pull request was 144 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,reopened,2018-07-21 17:29:02,0.02,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,9,2018-02-27 11:33:08,14.23,,1,,"b""b' @Sjors Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,10,2018-02-27 11:33:08,1201.8,1,,,b'b\' Rebased and incorporated url  (some of it has already been merged). I left out armv7 because Apple dropped support for that in iOs 11. I renamed to PR to cover all depends, rather than just OpenSSL.  will look in by default, so you have to set or add a symlink:  Note that if you use SDK_PATH and then change it, that won\\\'t take effect until you do a  .  I\\\'m ignoring UPNP for now, so the following command is what I\\\'d like to see working:   Boost 1.64 seems to build 32 bit binaries, which iOs 11 doesn\\\'t like. I bumped it from 1.64 to 1.66, as suggested [here]url  I can move that to a separate PR once everything works. For OpenSSL," the following SED command leads to a ""sed: RE error: illegal byte sequence"" error on macOS; I probably need to adjust the syntax.   BDB isn\\\'t happy", though I can avoid that by dropping wallet support (hopefully adding it in later).:   Once OpenSSL works, the next step would be:   Testing this on a real device would require building the rest of the application, so I agree with @jonasschnelli that this PR ultimately needs to be combined with whatever solves #11720.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,11,2018-02-27 11:33:08,1358.0,1,,,"b""b' As for cross-compilation from Ubuntu:  The Gitian build [instructions]url  use an old version of Xcode. Nowadays it seems you need to use the App Store to download it. To extract the iOs SDK on macOS machine:  Then copy it to the Ubuntu machine and extract into  .   Unfortunately this fails for me with:  Maybe I did something wrong with copying the SDK? The directory contains  . '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,12,2018-02-27 11:33:08,1383.85,,,1,"b'b"" Prepending before the [did the tick]url Next problem", when running  :  That\'s used for  , and  , which are probably fine to disable on iOs.  Hopefully we don\'t need too many other workarounds in the code to handle iOs.  I also need to figure out how to actually test this on a device. The simulator is also an issue, but can wait," since it needs x86 architecture while still using the iOs SDK. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,13,2018-02-27 11:33:08,12.8,1,,,"b'b"" Disabling those notify commands seems to be the only workaround needed", although it\'s hard to tell without running a real device. The latter is not that easy, because iOs doesn\'t allow launching arbitrary executables," which is the approach ABcore uses.  I do get a flood of the following warnings: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,14,2018-02-27 11:33:08,77.8,,1,,"b'b"" It\'s probably easiest to work with headers and compiled files: url Although that\'s beyond the scope of this project"," I\'d like to try to get this to work so that we know if this PR actually works. A minimum PoC would just print IBD progress in a console.  Given the following files: *   * *  *   * What do I use for the corresponding header files? And is the entry point for an RPC server running on the device?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,15,2018-02-27 11:33:08,1195.03,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#16010]url  (Correct description of blocksdir default value by kristapsk)* [#15461]url  ([depends] update to Boost 1.70 by Sjors)* [#15457]url  (Check std::system for -[alert|block|wallet]notify by Sjors)* [#15382]url  ([util] add runCommandParseJSON by Sjors)* [#14912]url  ([WIP] External signer support (e.g. hardware wallet) by Sjors)* [#14364]url  (doc: Clarify -blocksdir usage by sangaman) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,16,2018-02-27 11:33:08,1268.47,,1,,"b""b' @Sjors I was preparing a cross-platform Bitcoin SDK url  by using the original Bitcoin implementation so maybe you can consider these patches too url  It is a work-in-progress and only builds and other  for macOS"," iOS and iOSSim at the moment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,17,2018-02-27 11:33:08,0.63,,,1,"b'b"" @kozyilmaz nice! I was able to run for  . How do I run on a device or simulator? Once that works I could connect to it remotely via  ", which is a good enough start for me.  Ideally I would want to be able to include this into an app project, which then has some control over the node (could be via RPC on the same device, or the Unix sockets like in #9919," or some other means?).  Ideally this PR should contain whichever changes are needed to make your script run without any patches. Perhaps it can even take over some of your [Makefile]url  I\'m not sure where the scope of Bitcoin Core ends and that of application developers start.  Your [001-bitcoin-disable-run-for-]url  patch should already be [covered]url  by this PR.  I\'ll try the [000-bitcoin-detect-]url  Build pipelines are not my strong suit: can you explain a little bit what it\'s doing?  The patches for dependencies seem useful too. Why is your OpenSSL [patch]url  different than what I did in this PR?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,18,2018-02-27 11:33:08,1021.82,1,,,"b'b\' * rebased * bumped minimum SDK to 12.1. Tested building depends and bitcoind on macOS 10.14.3 * added [instructions]url Note that if it can\\\'t find the right SDK version you\\\'ll get a bunch of ""fatal error: \\\'unistd.h\\\' file not found"" messages.  I haven\\\'t made progress other than that", but I thought of an easier initial goal, rather than trying to run the full bitcoind on a phone.  We could create a new build target for a simple utility. #14671 utilities that don\\\'t need node or wallet context seems ideal for that. That could be used for a simple iOs app  which does something trivial like deriving addresses from a descriptor. Such a proof of concept app (outside this repo) might be sufficient testing to at least be able to merge this.  It could even be something useful like a minimalist wallet, with essentially the same workflow as a hardware wallet. The app generates private keys that only exist on your phone, but otherwise has no knowledge of the chain or your balance. You would then import the public key descriptor into a watch-only wallet into Bitcoin Core on your computer, and use PSBT to sign transactions on your phone.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,19,2018-02-27 11:33:08,1058.77,1,,,"b""b'  Hi @Sjors I am terribly sorry my very very late comment", just missed it. I was relocating repositories and wanted to at least answer your question:  The patch you mentioned: url  it compiles a simple program at stage and if or is defined, it adds to  . Of course this works if compilation is done on macOS.  OpenSSL patch is different because I get warnings about the SDK version being too old.  Btw I am able to use Bitcoin classes on iOS 64 and able to create  key pairs, generate addresses (BIP32 too)," export WIF-formatted private keys as you mentioned (as an example url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,20,2018-02-27 11:33:08,1193.38,,,1,"b""b' @kozyilmaz thanks", I cherry-picked your patch for detecting the iOs simulator / target (unused in the current version," but I assume it will be useful later)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,21,2018-02-27 11:33:08,1046.68,,1,,"b'b"" @fanquake I have no idea what\'s causing the error you\'re seeing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,22,2018-02-27 11:33:08,1427.03,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12557,open,-,-,-,6,15,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,opened,2018-03-01 17:15:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,title,2018-03-01 17:15:58,00:00,,1,,"b""b' [depends] Crosscompile from trusty to osx'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,body,2018-03-01 17:15:58,00:00,1,,,"b'b\'  When attempting to compile bitcoin from master source I run into two problems.  One is a boost lib location error which i fix by adding a absolute file path in -apple-darwin11/ this:  depends_prefix="" /..""  to this: + depends_prefix=""/-apple-darwin11""  Leaving directory   clang: warning: argument unused during compilation: \\\'-pthread\\\' clang: warning: argument unused during compilation: \\\'-pthread\\\' ld: file was built for archive which is not the architecture being linked (x86_64): secp256k1/ for architecture x86_64 clang: error: linker command failed with exit code 1 (use -v to see invocation) make[2]: *** [] Error 1 make[2]: Leaving directory  /\\\' make: *** [all-recursive] Error 1 smyers@headhunter911-trusty:~/$  :  url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,1,2018-03-01 17:15:58,569.08,,1,,"b""b' I fixed the first issue by putting a absolute path in step 6"," example CONFIG_SITE=/-apple-darwin11/ ./configure prefix=/ disable-ccache disable-maintainer-mode disable-dependency-tracking with-gui'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,2,2018-03-01 17:15:58,16.53,,,1,"b""b' That ended up fixing both problems.  Thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,closed,2018-03-04 03:01:35,585.62,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,3,2018-03-01 17:15:58,969.4,,1,,"b'b"" **Ok so now i have successfully compiled everything but i am running into a problem here (make deploy):** / -p Bitcoin/ -c -m 644  Bitcoinmake -C src -qt make[1]: Entering directory  /\' make[2]:  /\' make[1]: Leaving directory ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,reopened,2018-03-04 19:10:59,969.4,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,4,2018-03-01 17:15:58,80.83,,,1,"b'b"" If you do find a solution"," I\'m happy to test it (with a Trusty Virtual Box running on macOS).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,5,2018-03-01 17:15:58,450.68,,,1,"b""b' Thanks"," did you test what I described and have the same problem?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,6,2018-03-01 17:15:58,1140.82,,1,,"b""b' Depends are now built on bionic. Please open a new issue if you can still reproduce on bionic.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,closed,2018-07-18 23:03:19,232.33,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12577,closed,-,-,-,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,opened,2018-03-01 18:31:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,title,2018-03-01 18:31:13,00:00,,1,,"b""b' gui: Add transaction record type Fee'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,body,2018-03-01 18:31:13,00:00,,1,,"b'b"" Currently", in the transactions table, the fee is added as debit to the first output. It\'s a different behaviour from RPC where the values are seen separately:  Before:  After:  The row background now alternates based on txid, so in the capture above," the first 3 rows refer to the same transaction.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,1,2018-03-01 18:31:13,11.63,,1,,"b'b"" Concept ACK", I think it is clearer to list the fee separately. On the other hand," this compounds the issue that it\'s not possible to see in the list what transaction output records group to one transaction.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,2,2018-03-01 18:31:13,12.3,,1,,"b'b"" @laanwj that\'s an existing problem isn\'t?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,3,2018-03-01 18:31:13,34.18,,1,,b'b\'  Yes, that\\\'s what I said. However this compounds it, because it means every transaction will get multiple records, whereas it used to be that this only happens for (rarer) multi-sends. Not an argument against doing this, but something to be aware of," as people will ask ""what does this fee belong to"". They can find out by looking at the transaction details.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,4,2018-03-01 18:31:13,53.03,,1,,b'b\' Yeah," in the typical listing it will show an alternating ""Fee"" row.  I was thinking in adding a checkbox to  individual fee rows.  Another thing that could help the grouping is to change from alternate rows into ""alternate txids""", but that is something more complicated to do (as it depends on the proxy model parameters).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,5,2018-03-01 18:31:13,22.95,,,1,"b""b'  Yeah that can be done in a future PR. Sounds like a good idea. I wonder how that  interact with sorting on alternative columns", though. Might be overkill, just adds an extra configuration that needs to be supported. But no strong opinion.  Do add it to the release notes," this is something that users are bound to notice. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,6,2018-03-01 18:31:13,120.2,,1,,"b""b' Concept ACK. It might (or might not) make sense to only do it for multi-debits...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,7,2018-03-01 18:31:13,916.6,1,,,"b'b"" @laanwj I\'ve implemented alternating rows based on transaction id (see after image above). The implementation is not efficient but it\'s enough to evaluate the concept.  @luke-jr even for single-debit it\'s weird to have the fee associated to that address"," sounds like you sent that value there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,8,2018-03-01 18:31:13,365.27,,1,,"b""b' Added release notes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,9,2018-03-01 18:31:13,1345.58,,1,,"b""b' Concept ACK especially with the grouping ( background alternative). IMO the grouping could be more visible (group entries from a transaction with an outline border line or similar)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,10,2018-03-01 18:31:13,27.08,,1,,"b'b""  I\'ll try something along that"," but it\'s not something usual right?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,11,2018-03-01 18:31:13,40.27,,1,,"b""b'  I guess that is something that could be improved in a follow up PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,12,2018-03-01 18:31:13,82.63,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,13,2018-03-01 18:31:13,1397.77,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,14,2018-03-01 18:31:13,5.08,,1,,"b""b' Build: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,15,2018-03-01 18:31:13,603.18,,1,,"b""b' Tested ACK ae7a25fafc08482ba8af2174c3e8002bbe5a3bac  Before / After:   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,16,2018-03-01 18:31:13,558.17,,1,,"b""b' Rebased due to conflict in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,17,2018-03-01 18:31:13,1398.83,,1,,"b""b' Rebased due to release notes conflict.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,18,2018-03-01 18:31:13,323.93,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,19,2018-03-01 18:31:13,1268.92,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15452]url  (Replace CScriptID and CKeyID in CTxDestination with dedicated types by instagibbs)* [#15115]url  (GUI: Replace send-to-self with dual send+receive entries by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,20,2018-03-01 18:31:13,384.8,,1,,"b""b' Please mark all single parameter ctors :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,21,2018-03-01 18:31:13,1164.23,,1,,b'b\' url  So," the ""Transaction"" table should present the value transfer history and not be littered with ""Fee"" type _output_ rows.  Moreover"," there is no such thing as ""Fee"" transaction.  If one wants display fees in the ""Transaction"" table this could be done with a separate ""Fee"" column.  @promag  ~I\\\'m strongly disagree with such approach.~\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,22,2018-03-01 18:31:13,86.55,,1,,"b""b' @hebasto the idea is to understand the breakdown of the transfer value. Do you agree with the current implementation?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,23,2018-03-01 18:31:13,22.55,1,,,"b'b\' @promag  There is a ""Details ..."" window to find out  and understand the breakdown of the transfer value. ~No. I believe we should stick to ""one transaction one row"" ~rule~ in the ""Transactions"" table.~ ""Fee"" rows will produce a mess while user tries sorting within columns (e.g. by ""Amount""). \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,24,2018-03-01 18:31:13,301.27,,1,,b'b\'  If the wiki is confusing," it would be good to improve it. @promag\\\'s point is that we have NEVER had such a ""rule""...  It would also be very user unfriendly.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,25,2018-03-01 18:31:13,320.4,,1,,b'b\' @luke-jr  There is nothing confusing in the wiki," IMO. A bitcoin transaction is a well-defined technical notion since 2008 :) ~A ""rule"" is a bad wording from my side; I mean ""de facto"".~ ~You consider ""one transaction one row"" presentation of the ""Transaction"" table _very user unfriendly_. Did I understand you correctly?~\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,26,2018-03-01 18:31:13,187.18,,1,,"b'b\' @promag @luke-jr on second thought I\\\'ve realized the ""one transaction one row"" presentation is overkill. Moreover", multiple recipients transactions (multi-sends) currently are presented with appropriate number of rows.  Concept ACK.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,27,2018-03-01 18:31:13,28.28,,,1,"b'b\' Tested on Linux:  ![screenshot from 2019-01-06 12-54-30]url Note ""Fee"" rows are listed at the end of transaction groups. When they somehow change rows order and revert it back","Fee"" rows _can_ be listed at the beginning of transaction groups: ![screenshot from 2019-01-06 13-07-04]url Although, this behavior can be fixed in another PR.  @promag  It will significantly improve UX, IMO.  Also, a ""Fee"" row does not appear for ""Payment to yourself"" transactions.\''
bitcoin	12578	open	28	hebasto	2018-03-01 18:31:13	1295.57		+1		b""b' Does this approach work for special transactions (e.g., CoinJoin, Pay-to-Endpoint etc)?'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,closed,2019-05-07 17:07:18,1356.08,2,26,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,29,2018-03-01 18:31:13,497.65,,1,,"b""b' The last travis run for this pull request was 239 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,reopened,2019-05-07 17:07:21,0.05,2,27,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,30,2018-03-01 18:31:13,41.88,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12578,open,-,-,-,2,28,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,opened,2018-03-09 12:41:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,title,2018-03-09 12:41:23,00:00,,1,,"b""b' 0.9 bunnnyboy'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,body,2018-03-09 12:41:23,00:00,,,1,"b""b' this is an excellent platform'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,1,2018-03-09 12:41:23,1.63,,,1,"b""b' thanks '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,2,2018-03-09 12:41:23,0.23,,,1,"b""b' thanks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,closed,2018-03-09 12:43:15,1.87,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,reopened,2018-03-09 12:43:29,0.23,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,closed,2018-03-09 13:03:58,20.48,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12654,closed,-,-,-,0,1,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,opened,2018-03-12 06:03:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,title,2018-03-12 06:03:31,00:00,,1,,"b""b' RPC: Support addnode onetry without making the connection priviliged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,body,2018-03-12 06:03:31,00:00,,1,,"b""b' The behaviour of addnode onetry changed without notice. This restores the ability to at least get the original behaviour.  Needed for properly testing DoS rules.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,1,2018-03-12 06:03:31,428.37,,1,,"b""b' rpc_ fails'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,2,2018-03-12 06:03:31,477.2,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,3,2018-03-12 06:03:31,1328.37,,1,,"b""b' This breaks our outbound-connection-counting logic in the aut-connect loop as it uses the manual connection flag to figure out how many other connections to make.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,4,2018-03-12 06:03:31,800.68,,1,,"b""b' Added a PR description"," and kicked Travis.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,closed,2018-07-21 17:28:55,685.4,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,reopened,2018-07-21 17:28:57,0.03,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,5,2018-03-12 06:03:31,762.98,,1,,"b'b"" Can you address @TheBlueMatt\'s comment here: url  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,6,2018-03-12 06:03:31,771.67,,,1,"b'b"" @TheBlueMatt @sipa I don\'t consider that broken. A non-privileged connection should be treated the same as any other normal outgoing connection.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,7,2018-03-12 06:03:31,149.98,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,8,2018-03-12 06:03:31,338.75,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12674,open,-,-,-,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,opened,2018-03-12 09:56:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,title,2018-03-12 09:56:16,00:00,,1,,"b'b\' Show ""bip125-replaceable"" flag", when retrieving mempool entries\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,body,2018-03-12 09:56:16,00:00,,1,,"b'b\' This pull request adds a flag ""bip125-replaceable"" to the mempool RPCs getrawmempool", getmempoolentry, getmempoolancestors and getmempooldescendants, which indicates whether an unconfirmed transaction might be replaced.  Initially the flag was added to the raw transaction RPCs, but thanks to @conscott, it was moved to the mempool RPCs," which actually have access to the mempool.  ~~This pull request adds a flag ""bip125-replaceable"" to the RPCs ""getrawtransaction"" and ""decoderawtransaction""", which indicates, whether a transaction signals BIP 125 replaceability.~~  There was some discussion in #7817, whether showing replaceability in the UI could lead to the false assumption that transactions that don\\\'t signal BIP 125 are truely non-replaceable, but given that this PR tackles the raw transaction interface, which is a rather low level tool, I believe having this extra piece of information isn\\\'t bad.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,1,2018-03-12 09:56:16,0.42,,,1,"b'b"" ~~Please note", I copied SignalsOptInRBF() from  into core_.~~  ~~This is probably not a good way to do, but it was done for now, because  isn\'t avaliable in LIBBITCOIN_COMMON. However, simply moving  from LIBBITCOIN_SERVER to LIBBITCOIN_COMMON doesn\'t work, because IsRBFOptIn() in  has mempool dependencies, which are also not available.~~  ~~As alternative I could imagine to split  into something like  with SignalsOptInRBF(), which becomes part of LIBBITCOIN_COMMON and  with IsRBFOptIn()," which becomes part of LIBBITCOIN_SERVER?~~""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,2,2018-03-12 09:56:16,73.7,,1,,"b'b"" @conscott brought up the idea of adding the flag to mempool entries and mempool RPCs. I really like the idea", because these calls are actually mempool aware and provide full access to the mempool and thus also allow to check, whether a transaction is really replaceable instead of simply signaling replaceablity.  I updated the PR accordingly, because I believe this is the way to go. @conscott if you want to submit this as PR, feel free to do so though," and I\'ll close this one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,3,2018-03-12 09:56:16,300.53,,1,,"b""b' re-ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,4,2018-03-12 09:56:16,137.37,,,1,"b""b' Concept ACK. Thanks for updating @dexX7 just left a comment about the unknown state. Will test this out tomorrow. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,5,2018-03-12 09:56:16,3.52,,,1,"b'b"" Regarding checking the case: in the case of the RPCs this isn\'t triggered", because they iterate over mempool entries, which are inherently part of the mempool, but I kind of tend to leave it there for the potential case is called in a different context. I\'d be fine with removing this path though," too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,6,2018-03-12 09:56:16,148.82,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,7,2018-03-12 09:56:16,852.22,,,1,b'b\' Hey guys, just to clarify: given there were mixed reactions," do you insist on removing the branch for the ""unknown"" case and replace it with an exception or is this PR good to go as it is?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,8,2018-03-12 09:56:16,27.88,,,1,"b""b' @dexX7 I was arguing over the  "," but I am happy with it as is. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,9,2018-03-12 09:56:16,183.75,1,,,"b""b' I just fail to see why it makes sense to burden rpc users with a third value that is never actually set.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,10,2018-03-12 09:56:16,893.55,,1,,"b""b' Alright"," updated. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,11,2018-03-12 09:56:16,1011.03,,1,,"b""b' utACK 870bd4c73ddf494dc23c658bf0fb672ee0109158'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,12,2018-03-12 09:56:16,1129.47,,1,,"b""b' utACK 870bd4c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,13,2018-03-12 09:56:16,391.83,,1,,"b""b' The last travis run for this pull request was 61 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,closed,2018-07-22 23:50:21,834.08,1,9,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,reopened,2018-07-22 23:50:21,0.0,1,9,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,14,2018-03-12 09:56:16,756.35,,1,,"b""b' This seems mergeable"," should do so after 0.17 branch as this is a feature'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,closed,2018-08-25 22:04:39,1334.3,1,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12676,closed,-,-,-,1,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,opened,2018-03-12 18:01:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,title,2018-03-12 18:01:35,00:00,,1,,"b""b' RPC: Add ancestor{count",size,"fees} to listunspent output'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,body,2018-03-12 18:01:35,00:00,,1,,"b""b' Requested by a user'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,1,2018-03-12 18:01:35,71.05,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,2,2018-03-12 18:01:35,1127.55,,,1,"b""b' Thank you Luke for taking it into consideration and adding it !'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,3,2018-03-12 18:01:35,413.25,,1,,"b'b"" Concept ACK"," perhaps it\'d be cleaner to sub-object them like you put in the title of the PR ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,4,2018-03-12 18:01:35,226.15,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,5,2018-03-12 18:01:35,456.02,,1,,"b'b"" @luke-jr is this still relevant? There are a couple of suggestions above and it\'s missing test(s) update.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,6,2018-03-12 18:01:35,845.6,,1,,"b""b' utACK daeb431011eefb35b9c76c0b1072d44ac40fe2a6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,7,2018-03-12 18:01:35,1149.05,,1,,"b""b' @promag Indeed"," needs a trivial test where they are all different from 0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,closed,2018-07-21 17:28:52,1407.28,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,reopened,2018-07-21 17:28:53,0.02,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,8,2018-03-12 18:01:35,1057.5,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14481]url  (Add P2SH-P2WSH support to listunspent RPC by MeshCollider)* [#14021]url  (Import key origin data through descriptors in importmulti by achow101)* [#13008]url  (rpc: Rename size to vsize in mempool related calls by IPGlider) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,9,2018-03-12 18:01:35,1218.08,,1,,"b""b' Rebased and added tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,10,2018-03-12 18:01:35,242.57,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,11,2018-03-12 18:01:35,1379.13,,1,,"b""b' Rebased again'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12677,open,-,-,-,0,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,opened,2018-03-22 15:30:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,title,2018-03-22 15:30:20,00:00,,1,,"b""b' Clarify include guard naming convention'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,body,2018-03-22 15:30:20,00:00,,1,,"b""b' * **Documentation**: Document include guard convention * **Fix**: Fix missing or inconsistent include guards * **Regression test**: Add which checks include guard consistency'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,1,2018-03-22 15:30:20,150.58,,1,,"b'b"" Concept ACK.  Could run script in travis where to prevent future PR\'s breaking it?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,2,2018-03-22 15:30:20,4.67,,1,,"b""b' @promag is executed automatically by Travis (via which is run as part of  ). In other words will be executed by Travis \\xe2\\x80\\x93 no need to reference it explicitly :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,3,2018-03-22 15:30:20,36.52,,,1,"b""b' @eklitzke Thanks for reviewing! Feedback addressed. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,4,2018-03-22 15:30:20,151.83,,1,,"b""b' utACK 3bcc0059b82b1d482d499d4d8f09118617074a5b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,closed,2018-03-22 21:21:32,351.2,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,reopened,2018-03-22 21:21:37,0.08,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,5,2018-03-22 15:30:20,119.65,,1,,"b""b' Tested ACK 3bcc005 on mac.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,closed,2018-04-01 22:31:47,70.17,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12757,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,opened,2018-03-23 04:42:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,title,2018-03-23 04:42:40,00:00,,1,,"b""b' Add RPC Whitelist Feature from #12248'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,body,2018-03-23 04:42:40,00:00,,1,,"b'b"" Summary ====  This patch adds the RPC whitelisting feature requested in #12248. RPC Whitelists help enforce application policies for services being built on top of Bitcoin Core (e.g.", your Lightning Node maybe shouldn\'t be adding new peers). The aim of this PR is not to make it advisable to connect your Bitcoin node to arbitrary services, but to reduce risk and prevent unintended access.  Using RPC Whitelists ==== The way it works is you specify (in your ) configurations such as   Now user1 can only call getnetworkinfo, user2 can only call getnetworkinfo or getwalletinfo, while user3 can still call all RPCs. If any rpcwhitelist is set, act as if all users are subject to whitelists unless rpcwhitelistdefault is set to 0. If rpcwhitelistdefault is set to 1 and no rpcwhitelist is set, act as if all users are subject to whitelists. Review Request ===== In addition to normal review, would love specific review from someone working on LN (e.g., @roasbeef) and someone working on an infrastructure team at an exchange (e.g., @jimpo) to check that this works well with their system.  Notes =====  The rpc list is spelling sensitive -whitespace is stripped though. Spelling errors fail towards the RPC call being blocked, which is safer.  It was unclear to me if HTTPReq_JSONRPC is the best function to patch this functionality into, or if it would be better to place it in exec or somewhere else.  It was also unclear to me if it would be preferred to cache the whitelists on startup or parse them on every RPC as is done with multiUserAuthorized. I opted for the cached approach as I thought it was a bit cleaner. Future Work =====  In a future PR, I would like to add an inheritance scheme. This seemed more controversial so I didn\'t want to include that here. Inheritance semantics are tricky, but it would also make these whitelists easier to read.  It also might be good to add a command to facilitate permission discovery.  Before Merge ===== I\'m opening the PR now for general feedback, but I should add a couple tests before merge. I\'d prefer to do documentation as a separate PR," but it can be added in this PR if preferred.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,1,2018-03-23 04:42:40,293.43,,,1,"b""b' Concept ACK. This is very welcome. My block explorer only rely on  . Would like a way to have my block explorer restrict itself at runtime to make the life of my users easier"," but this might come later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,2,2018-03-23 04:42:40,202.82,,1,,"b""b' concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,3,2018-03-23 04:42:40,0.62,,,1,"b""b' @RHavar you may be interested?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,4,2018-03-23 04:42:40,128.68,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,5,2018-03-23 04:42:40,13.0,,,1,b'b\' @instagibbs  To be honest, I don\\\'t see it being that useful for me  (but I don\\\'t have any objections to it either)  The main advantage I can see from this change is that you could use the same bitcoin-core instance for multiple purposes, like where one only requires access to the bitcoin-related features, and the other might need wallet access. That\\\'s probably more interesting for consumer-level users, who are running core on their own computer. For more commercial users, we\\\'d just use different instances of bitcoin-core itself. - The PRC permission feature I\\\'m more interested in is a lot more high-level; like applying spending limits. What I would like to do is be able to store say 300 BTC in my wallet," but never allow it drop below 250 BTC (by a particular RPC user). This way I could have only 50 BTC of ""risk"" (e.g. in case my service was hacked) but could benefit from having 300 BTC worth of coins (so coin-selection can do a much better job)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,6,2018-03-23 04:42:40,27.5,,1,,"b""b' @RHavar this prevents privkey dumps"," as a first step at least'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,7,2018-03-23 04:42:40,1313.12,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,8,2018-03-23 04:42:40,88.13,,1,,"b'b"" Yeah it\'s probably better to check if and to do default-no-access if so.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,9,2018-03-23 04:42:40,317.63,,,1,"b'b"" @eklitzke In the current scheme", a user by default has access to all RPCs to maintain backwards compatibility.  Once a file has specified that a user should have a whitelist, it defaults to everything being off.  I agree this is not ideal, but don\'t have a great workaround.  Here are two potential solutions:  We add: -rpcwhitelistenable=, -rpcwhitelistroot=  If rpcwhitelistenable is set, the by default any user has that whitelist (allowed to be empty)? If a user is marked rpcwhitelistroot, they have all RPCs enabled. If a user is marked rpcwhitelist=:blah, then they have blah.  Or, we can make it such that if any rpcwhitelist is set, all users default to having an empty whitelist. Do you think this is a good tradeoff of ? Which do you prefer? @promag  The other detail (in a forthcoming patch) is that if rpcwhitelist is set multiple times for a single user, it should do the intersection of the specification (e.g., monotonically smaller whitelist) rather than the union. In cases where conflicting settings have been passed," it is safer to do less.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,10,2018-03-23 04:42:40,20.78,,1,,"b'b""  EDIT: nevermind", that\'s a concern for blacklists," not whitelists.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,11,2018-03-23 04:42:40,373.07,,1,,"b'b"" @JeremyRubin I would add both. I guess my point is that if you need permissions at all you probably also want the ability to enable some kind of deny-by-default policy", to safeguard against a situation where you accidentally forget to lock down an account. You generally don\'t want to give your software engineers root access on production machines by default, and by the same token I don\'t think you would want to give people with bitcoind access root by default.  The way I imagine a typical setup would be something like this (ignore the made up syntax): And semantics something like this:  * If there are no lines at all then everyone can access everything, just like how bitcoin works today  * If you set (Alice\'s list) but forget to set (the default list) then it should deny by default (maybe with a special error message attached to the RPC warning about the bad configuration)  Admittedly there is an area ripe for feature creep," but I think the above would be relatively simple to implement and good enough for a lot of cases.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,12,2018-03-23 04:42:40,19.37,1,,,b'b\' Second idea that\\\'s much more . I\\\'ll throw it out there though.  YAML documents have a syntax to reference other elements, which are really useful for these kinds of things. You can construct a few objects in your config and reference them elsewhere, which allows you to come up with some pseduo-role system:   The syntax introduces a name for a reference," and then means ""substitute the literal value for obj here"". I\\\'m not sure how it works in C++ YAML libraries", but the ones I\\\'ve used in Python do the reference expansion within the YAML library. This makes it so your code can just work with dumb lists of objects, since they never see the object references.  The obvious drawback is that this would require linking against a YAML library. You could mitigate that by only having the user ACL list be in a YAML lib, so only users who actually want these feature would need to enable the YAML parser.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,13,2018-03-23 04:42:40,951.22,,1,,"b""b' @eklitzke did you check out the issue? The original proposal covered doing an inheritance scheme. @gmaxwell  suggested that we should avoid doing any fancy config file", in favor of just a simple list.  I do think that this could get overly verbose (especially if you want to grant network multiple times)," but in general the paradigm should be to configure applications to manage multiple small credentials for specific purposes rather than one full-grant.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,14,2018-03-23 04:42:40,396.65,,1,,"b'b"" I\'ve updated this PR and rebased.  The current version has the following changes over the previous:  Strip whitespace out of rpc list Set-Intersect conflicting whitelists (i.e.", so it is equivalent to checking multiple whitelists) If any rpcwhitelist is set, act as if all users are subject to whitelists unless rpcwhitelistdefault is set to 0. If rpcwhitelistdefault is set to 1 and no rpcwhitelist is set," act as if all users are subject to whitelists.  Please let me know if these semantics are acceptable. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,15,2018-03-23 04:42:40,265.72,,1,,"b""b' LGTM. Checked code"," utACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,16,2018-03-23 04:42:40,1224.33,,1,,"b'b"" I\'m not really a fan of the flag. I agree with the decision to provide backwards compatibility in the API by whitelisting everyone for everything if is not set", but if it is, I think whitelists should be more explicit. Perhaps instead would whitelist USER for everything," whereas would whitelist a user for specific actions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,17,2018-03-23 04:42:40,209.33,,1,,"b'b""   is currently a null list", and i think should remain that.  We could introduce a new flag," e.g. if that\'s the desired ability.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,18,2018-03-23 04:42:40,440.65,,1,,b'b\' I\\\'ve always been strongly against complex authorization schemes in bitcoind. A lot of extra **security critical** logic to maintain. I think the place for such things is a separate authorization proxy. This is more modular," more in line with ""software should do one thing well""", and it depends on what security system is required, nothing can accommodate every possible separation of privileges (see also: linux security modules).  That said, I like the simplicity of this scheme, simply specifying the calls that are allowed, and the small code impact, so Concept ACK.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,19,2018-03-23 04:42:40,5.67,,1,,"b""b'  @JeremyRubin lgtm.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,20,2018-03-23 04:42:40,1013.13,1,,,"b'b"" Rebased and added documentation.  Started working on tests but got a little stuck with the current test framework -the test classes assume access to the RPCs"," which doesn\'t let me cover all of the modes of use for rpc whitelists.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,closed,2018-06-18 20:02:50,920.17,2,16,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,reopened,2018-06-18 20:02:53,0.05,2,16,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,21,2018-03-23 04:42:40,966.23,,1,,"b'b"" @RHavar  The thing you\'re interested in would almost just fit into this if there were RPCs to set spending velocity limits on wallets", and then just use this PR to deny the relevant clients from calling the interface to increase their limits.  The only gap I see with that is that is that it would be a per wallet not per rpc user limit. In any case," having wallet velocity limits even that you can just bypass by calling a function would go a long way to reducing mistake surface.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,22,2018-03-23 04:42:40,27.08,,1,,"b""b' Tagging @jnewbery for tips on best way to use the test framework here. The issue is that in order to test whitelists properly"," I need to disable RPC access...  Should I just write tests as a unit test (non-functional test)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,23,2018-03-23 04:42:40,770.13,,1,,"b""b'  Please update OP to reflect that. With regard to tests"," I believe it is trivial to test the following [c.f. Attachment 1] in our existing functional tests: * No whitelist specified at all: Tested by all existing tests * A user withelisted * A user blocked because other users are whitelisted  Am I missing a test case?  Attachment 1   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,24,2018-03-23 04:42:40,74.33,,,1,"b'b"" @MarcoFalke\'s test looks good. Will review fully once it\'s been included in this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,25,2018-03-23 04:42:40,358.9,,1,,"b""b' Those tests look fine", and are close to where I got stuck.  Cases missing  * Easy to Add:  * Multiple RPC Whitelists specified, should intersect  * Difficult:  * No whitelist specified for any user," rpcwhitelistdefault=1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,26,2018-03-23 04:42:40,972.22,,1,,"b""b'  Indeed not trivial. Options I see is to rework the test framework to fall back to rest if rpc is not available or", as you mentioned," write a unit test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,27,2018-03-23 04:42:40,300.68,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,28,2018-03-23 04:42:40,1346.68,,1,,"b""b' Merge conflict can probably be solved by a simple union merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,29,2018-03-23 04:42:40,507.62,,1,,"b""b' @JeremyRubin Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,30,2018-03-23 04:42:40,613.5,,1,,"b""b' Closing"," leaving  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,closed,2019-03-02 09:24:54,802.02,2,25,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12763,closed,-,-,-,2,25,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,opened,2018-03-23 05:44:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,title,2018-03-23 05:44:30,00:00,,1,,"b""b' doc: Remove field in getblocktemplate help that has never been used. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,body,2018-03-23 05:44:30,00:00,,1,,"b'b"" [BIP 22 getblocktemplate]url  specifies an optional flag", if the transaction must be in the block.  Luke\'s implementation #936 did not include this flag, and it was later added to the help description in #3246 (more than a year later) but the field was still never actually implemented. As far as I can tell, bitcoin core would have never actually included this in a call," so it seems logical to remove it from the help description.  If I am missing something or this is considered harmless I can close the PR. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,1,2018-03-23 05:44:30,609.4,,1,,"b""b' kicked travis"," random timeout'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,2,2018-03-23 05:44:30,235.87,,,1,"b'b"" Interesting", good catch. Though personally I think it makes sense to describe this possible field if it is in BIP22. Both for consistency with our documentation and the BIP, and in case core would ever want to set this flag," you\'d want client implementations to take it into account. On the other hand that\'s probably very unlikely. Needs more discussion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,3,2018-03-23 05:44:30,15.67,,1,,"b""b' Tested ACK ac8a1d092ef59b141605f6eaf027c034dad910e6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,4,2018-03-23 05:44:30,1255.75,,1,,"b""b' Anyone writing a client should read BIP22 and consider all its possible fields. IMO either we should document potentially-relevant ones in help"," or only refer to the BIP instead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,5,2018-03-23 05:44:30,139.27,1,,,"b""b' utACK ac8a1d0. It would be misleading to mention the field here and then ignore it without notice.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,6,2018-03-23 05:44:30,1328.33,,1,,"b""b' The last travis run for this pull request was 117 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,closed,2018-07-21 17:28:47,704.28,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,reopened,2018-07-21 17:28:48,0.02,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,closed,2018-07-22 13:41:43,1212.92,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12764,closed,-,-,-,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,opened,2018-03-23 13:46:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,title,2018-03-23 13:46:07,00:00,,1,,"b""b' Add systemd service to bitcoind in debian package'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,body,2018-03-23 13:46:07,00:00,,1,,"b""b' On suggestion from @TheBlueMatt I have updated files to include a systemd service in the build. Tested and working on Ubuntu 16.04 and 17.10.  This fixes Issue #12758'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,1,2018-03-23 13:46:07,38.12,,1,,"b""b' @ctp-tsteenholdt Please remember to .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,2,2018-03-23 13:46:07,33.47,1,,,"b""b' @randolf That makes total sense. My apologies looking into it right now...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,closed,2018-03-23 16:33:47,167.67,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,reopened,2018-03-23 16:54:37,20.83,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,3,2018-03-23 13:46:07,278.67,,1,,"b""b' We already have a in what is the difference with this one"," can we avoid duplicating it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,4,2018-03-23 13:46:07,1.28,,1,,"b'b"" @randolf The pull request should look better now please let me know if I\'m missing something.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,5,2018-03-23 13:46:07,924.95,,1,,"b'b"" @laanwj I\'m completely with you on that question", but I don\'t think we can feasibly avoid multiple versions of a file like this. The different versions of the in the tree have subtle differences to make them work best for their particular purpose. The differences reflect distro-specifics such as location of environment files, dependency services etc.  Also, building a package for Ubuntu or Debian requires a full copy of the folder, including the file, to allow the packaging helper to recognize, treat and install it correctly.  It think distro-specific files are probably better maintained within distro specific folders such as or  , as part of the overall package maintenance for that distro. This avoids possible breakage from a change made for a different distro too.  To underline that the version is still very relevant," it will be the goto file for people on platforms without a specific package or people who prefer to build from source. This file can be easily adapted to work well on most systems.  Please let me know what you think.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,6,2018-03-23 13:46:07,193.58,1,,,"b'b"" @ctp-tsteenholdt If it is intentional", then IMO it\'s not a problem. Arguably the debian-specific file is easier to maintain because at least it aims for a specific environment and can be tested there, not \'all distributions in general\'," which has made the file under a real pain in practice (see e.g. discussion in #12255).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,7,2018-03-23 13:46:07,47.65,,1,,"b'b"" @laanwj That\'s exactly right.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,8,2018-03-23 13:46:07,1226.5,,,1,"b""b' Would be good to have an ACK from @TheBlueMatt here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,9,2018-03-23 13:46:07,615.12,,,1,"b'b"" Thanks @TheBlueMatt. Each of your comments make perfect sense and I\'ll have them all addressed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,10,2018-03-23 13:46:07,1140.53,,1,,"b'b"" I\'ve addressed the suggestions made by @TheBlueMatt", run a test dpkg-buildpackage using the updated tree and tested that the package changes work as expected," with success.  The commits have been updated to reflect the changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,11,2018-03-23 13:46:07,1269.83,,,1,"b""b' @TheBlueMatt can you take another look? Would be good to get this merged"," I think.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,12,2018-03-23 13:46:07,316.42,,1,,"b'b"" Hmm", if you\'re gonna pull some of the debian changes upstream," can you just pull all of them? Especially getting the changelog and other stuff out of sync seems not ideal.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,13,2018-03-23 13:46:07,1166.43,,1,,"b'b"" @TheBlueMatt I\'m not sure what you mean by:  _Hmm", if you\'re gonna pull some of the debian changes upstream," can you just pull all of them? Especially getting the changelog and other stuff out of sync seems not ideal._  Upstream in this case would essentially be your PPA right? Or is there somewhere else?  I can certainly take a look at any other differences between this tree and yours and see if it makes sense to include in this PR or create a separate one for getting those in sync? Is this what you mean?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,14,2018-03-23 13:46:07,3.43,,1,,"b'b"" Yea"," just pull the stuff from the PPA\'s debian tar.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,15,2018-03-23 13:46:07,40.25,,1,,"b'b"" Alright I\'m looking in to it...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,16,2018-03-23 13:46:07,244.43,,1,,"b'b"" @TheBlueMatt so I took all the changes from your upstream PPA debian tar and committed them as a single commit. After that"," I committed the Systemd changes in a separate commit.  As a precaution I\'ve run a local build and made sure that things still work as expected.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,17,2018-03-23 13:46:07,914.05,1,,,"b""b' So I re-resolved the conflict with #12854. This time without nuking the accepted changes of that PR. Sorry about that. Thanks @fanquake for the heads up.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,18,2018-03-23 13:46:07,488.1,,1,,"b""b' @TheBlueMatt is this now ready for merge?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,19,2018-03-23 13:46:07,174.2,,1,,"b""b' Just tested on Ubuntu 18.04", with no issues related to this PR. There is an unrelated issue with the version that needs to be sorted out," so I built with to test things out.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,20,2018-03-23 13:46:07,1270.75,,1,,"b""b' utACK 2a87b1b07c5c4f8b9b34747c5f254c2ae1e824bf with or without restart-after-upgrade.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,21,2018-03-23 13:46:07,131.25,,1,,"b'b"" How will this affect systems that don\'t  systemd?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,22,2018-03-23 13:46:07,182.62,,1,,"b""b' @luke-jr this affects only debian-based systems (including Ubuntu) with systemd.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,23,2018-03-23 13:46:07,12.97,,,1,"b'b\' I believe @luke-jr\\\'s question was ""what about older but still supported Debian-based systems that do not have systemd""", which is a good one. WIll this not result in them failing to build the packages?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,24,2018-03-23 13:46:07,27.18,,1,,"b'b"" Older debian systems that are missing the package", will fail to build the packages, yes. I believe the (supported)  versions that are affected by this, are Debian 7 (LTS version is EOL at the end of May 2018) and Ubuntu 14.04 LTS (EOL in April 2019).  I\'m running a test on Ubuntu 14.04 right now," to see what kind of issues we\'re running into on that platform.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,25,2018-03-23 13:46:07,69.7,,,1,"b'b"" As it turns out", Ubuntu 14.04 LTS actually does have a package and apart from the build dependency, that was also causing problems on Ubuntu 18.04, the build is working just fine.  Since the distro does not actually use systemd, the included simply does nothing.  FWIW, Debian 7 also has a package (in the backports repository)," so I guess it\'s the same story there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,26,2018-03-23 13:46:07,61.67,1,,,"b'b"" I\'m less concerned with merely old distros", as much as ones that have simply rejected the mandatory-systemd nonsense," such as Devuan.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,27,2018-03-23 13:46:07,328.73,,1,,"b'b"" @luke-jr to build the package", you\'d need to have installed, but you do *not* need to install or use it. If you don\'t have on the system," you simply can\'t use the systemd service configuration that\'s included here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,28,2018-03-23 13:46:07,317.47,,1,,"b""b' Did that last comment answer your questions?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,29,2018-03-23 13:46:07,67.15,,1,,"b'b"" I\'m going to merge this as @TheBlueMatt utACKed this he\'s the ppa maintainer.  I don\'t think other distributions are relevant here as this concerns explicitly the directory. Other improvements can be made later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,closed,2018-05-01 14:53:53,1319.27,4,22,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,30,2018-03-23 13:46:07,1.3,,,1,b'b\' Err, no, Luke\\\'s point is good and would break several PPA-supported releases. On May 1, 2018 2:52:47 PM UTC,"Wladimir J. van der Laan""  wrote:>I\\\'m going to merge this as @TheBlueMatt utACKed this he\\\'s the ppa>maintainer. >I don\\\'t think other distributions are relevant here as this concerns>explicitly the directory.>Other improvements can be made later.>You are receiving this because you were mentioned.>Reply to this email directly or view it on GitHub:>url \''
bitcoin	12769	closed	31	TheBlueMatt	2018-03-23 13:46:07	12.12			+1	b""b' Oh, hmm, I appears to be wrong, it looks like the dh-systemd package *is* on trusty, I suppose its fine, then.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,32,2018-03-23 13:46:07,45.7,,1,,"b""b' Had to revert this"," please file again in 2019 (or whenever relevant).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,33,2018-03-23 13:46:07,45.72,,1,,"b'b"" @laanwj", as @TheBlueMatt mentions in his followup, is indeed available on the relevant distributions It certainly is on all supported versions of Ubuntu," Debian and Devuan. I can\'t see a reason to hold off on the merge?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,34,2018-03-23 13:46:07,83.05,,1,,"b'b"" After discussion on IRC we\'re switching to a different strategy"," distribution packaging files will be under this repository from now on: url  (see also #13137)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,35,2018-03-23 13:46:07,95.55,,1,,"b""b' Okay... Does this mean I should rework the changes to go in the new path then?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,36,2018-03-23 13:46:07,121.85,,1,,"b""b' Indeed"," just cherry-pick the commits and submit them to the other repo.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,37,2018-03-23 13:46:07,1288.45,,,1,"b'b"" Thanks. I\'ve created url  with exact same changes...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12769,closed,-,-,-,4,27,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,opened,2018-03-26 05:40:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,title,2018-03-26 05:40:01,00:00,,1,,"b""b' macOS: disable AppNap during sync'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,body,2018-03-26 05:40:01,00:00,,1,,"b""b' Code based on . Tested only on macOS 10.13.3 and should support 10.9+.  What macOS versions bitcoin core currently supports?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,1,2018-03-26 05:40:01,3.15,,1,,"b""b' #5804'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,2,2018-03-26 05:40:01,136.48,,1,,"b""b' utACK e41bb4a4568e08fe75ab8af7de7db1a2684cd989'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,3,2018-03-26 05:40:01,37.0,,,1,"b'b"" Will review later. Good question regarding which macOS version to support. The release notes state [10.8+]url  but I wonder how true that is. Apple pushes macOS updates quite aggressively and the lack of VM\'s make downgrades impractical. So unless any of the active devs here still runs an older version"," I don\'t think it\'s realistic to support anything but the current macOS release and maybe one earlier version .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,4,2018-03-26 05:40:01,5.05,,1,,"b""b' We do currently support 10.8+ and I have VMs for all OSX versions from 10.5 upwards. I do test the RC regularly in 10.8 till 10.x VMs.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,5,2018-03-26 05:40:01,18.57,,,1,"b'b"" @jonasschnelli ok"," that\'s great to know. Any hints for setting up a 10.8 VM on an iMac?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,6,2018-03-26 05:40:01,481.3,,1,,"b'b"" Concept ACK. Should appnap always be disabled", or just during initial sync? It\'s something that could be done later," but worth thinking about I think.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,7,2018-03-26 05:40:01,301.73,,1,,"b'b"" I really really don\'t like the idea of adding a new compiler requirement for bitcoind (which is why we closed #5804).  How about using this for bitcoin-qt only ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,8,2018-03-26 05:40:01,761.33,,,1,"b'b"" I think it\'s reasonable* to expect bitcoind users to understand their OS power management.  * = [though not always true]url  :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,9,2018-03-26 05:40:01,371.28,1,,,"b""b' how to i squash all my commits in PR they contain merging commits from :confused: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,10,2018-03-26 05:40:01,92.45,,1,,"b'b"" Squashed all my commits into single one. OS X Mountain Lion 10.8 not supported by Apple anymore.  don\'t support 10.8 either in their web browsers. Qt 5.7 (currently used in bitcoin-qt0.16.0) support expired in June 15"," 2017. Qt 5.8 supports only 10.9+. Qt 5.9 only 10.10+. So OS X 10.8 support in bitcoin-qt pretty much pointless since it requires Qt 5.6/5.7 and very old XCode to build.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,11,2018-03-26 05:40:01,1163.17,,,1,"b'b""  Would make sense to me. Would (for me) be preferable to having objective C in the core code. Virtually no one uses bitcoind on MacOSX. For a long time", we didn\'t even build it," and there was about one person that requested it :) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,12,2018-03-26 05:40:01,684.77,,,1,"b""b' Started doing some testing. Using master (979f59850c72624137d25f80be4188c3ba6b5fa0) I can make and Bitcoin Core (app bundle) enter app nap quite quickly just by starting and then minimising the app window.  You can check App Nap status using Activity Monitor ![master bitcoin-qt nap]url  ![master bitcoin core nap]url Using url  neither process seems to go into App Nap:  ![pr bitcoin-qt no nap]url  ![pr bitcoin core no nap]url   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,13,2018-03-26 05:40:01,1052.22,,1,,"b'b"" Concept ACK. What\'s the point of MacOSIdleInhibitor though? In #5804", CIdleInhibitor was introduced as a generic object that could used to be hold  platform-specific inhibitors. Here," MacOSIdleInhibitor seems to just be an extra level of indirection.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,14,2018-03-26 05:40:01,503.18,,1,,"b'b"" Well windows and linux can\'t lower cpu performance per application", on windows user can only change system-wide power plans. This thing pretty much only macos specific," MacOSIdleInhibitor  change reverted anyways.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,15,2018-03-26 05:40:01,733.28,,1,,"b""b' CIdleInhibitor is still there"," maybe an issue with the rebase? BitcoinCore::BitcoinCore can just create a CAppNapInhibitor.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,16,2018-03-26 05:40:01,1348.65,,1,,"b""b' @krab could you now squash your commits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,closed,2018-05-29 17:00:08,680.12,1,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,reopened,2018-05-29 17:05:09,5.02,1,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,17,2018-03-26 05:40:01,197.43,,1,,"b""b' Why is LSAppNapIsDisabled insufficient?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,18,2018-03-26 05:40:01,223.1,,1,,"b'b"" @luke-jr It\'s no longer referenced in their docs", and I believe it doesn\'t work at all in recent macOS versions.  utACK," though I can\'t vouch for the correctness of the ObjC inhibitor itself.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,19,2018-03-26 05:40:01,1163.18,,,1,"b""b' Retested 192b9e7 on macOS 10.13.5. Cannot make Bitcoin Core enter app nap: ![12783]url Master (f532d52) still enters app nap fairly quickly: ![master]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,20,2018-03-26 05:40:01,1400.57,,1,,"b'b"" @krab can you take a look if you can reproduce ^^", if this works it\'s ready for merge," if it doesn\'t then let\'s try to fix this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,21,2018-03-26 05:40:01,205.88,,1,,"b'b"" For a future PR it would be nice to disable app nap only during sync", as @laanwj points out.  Currently the choice is between having initial sync grind (master) to a halt or wasting (a little)  battery life for people who leave QT on for a long time (this PR). I think this PR is the better alternative, since it\'s more realistic to exit the application to save energy than it is to keep it in the foreground to keep sync going.  Tested: master goes into app nap after a few minutes (on battery), this branch doesn\'t:   The code looks pretty complicated," which generally suggests that Apple doesn\'t like this. Do we have some confidence that we\'re not using API\'s that can get deprecated on short notice? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,22,2018-03-26 05:40:01,1056.37,,1,,b'b\' If they changed api then code won\\\'t even start  url  Agree," but i can\\\'t find any signal in  about "" sync"" state changed. Only: [BlockTipChanged]url and [NotifyNetworkActiveChanged]url  doesn\\\'t seem right.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,23,2018-03-26 05:40:01,38.9,,,1,"b'b"" Added to the 0.18 milestone (not sure if we can add this to 0.17.1?). @krab has done a good job of keeping this . I\'ve also done some rudimentary benchmarking", and have seen a ~20% detriment in sync times if Core falls into App Nap," which seems worth addressing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,24,2018-03-26 05:40:01,980.83,,1,,"b'b"" Retested that 663efef doesn\'t enter app-nap. master (1d14174) still does after a short period of window minimisation. Also added label.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,25,2018-03-26 05:40:01,1146.0,,,1,"b""b' Gitian builds for commit 1d1417430c829a0c21bf5a2fe4a5b2f592a9423f (master): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url  Gitian builds for commit 99e54e799f7187b97d6486e95b7544148c44a5d2 (master and this pull): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,26,2018-03-26 05:40:01,97.55,,1,,"b""b' Rebased against master branch. A bit less code in  .  in pimpl style. Fixed checks for  . required if we want reuse same pointer.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,27,2018-03-26 05:40:01,523.92,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14137]url  (gui: Add Windows taskbar progress by ken2812221) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,28,2018-03-26 05:40:01,993.87,,1,,b'b\' tACK 2a14df1 on macOS 10.14 (in July I tested on 10.13) I previously wrote: This works now. With the app in the background, it enters app nap after a minute or so. If however I rewind the chain a bit e.g. with & and wait for resync, it won\\\'t enter app nap.  It does enter app nap during expensive RPC operations (  grinds to a halt), but let\\\'s improve that some other time. Conversely, we could also make QT (or a future headless node) conserve energy better when the user is on battery.  I also wrote: The current solution looks much cleaner. E.g. it got rid of the undocumented plist option, and instead uses the documented NSActivityOptions. Some relevant Apple docs: * url  * url For future reference," I suggest renaming the PR to ""macOS: disable AppNap during sync""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,29,2018-03-26 05:40:01,213.45,,,1,"b'b"" Related upstream ticket [QTBUG-43861]url  If we\'re lucky", one day Qt might expose an API for this functionality," so we don\'t have to ship the Objective-C ourselves.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,30,2018-03-26 05:40:01,629.22,,1,,"b""b' utACK 1e0f3c4 (rebased)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,closed,2018-11-10 09:38:41,993.53,1,22,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,31,2018-03-26 05:40:01,956.67,,1,,"b""b' utACK 1e0f3c44992fb82e6bf36c2ef9277b0759c17c4c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12783,closed,-,-,-,1,23,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,opened,2018-03-28 14:43:02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,title,2018-03-28 14:43:02,00:00,,1,,"b""b' [qt] TransactionView: highlight replacement tx after fee bump'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,body,2018-03-28 14:43:02,00:00,,1,,"b'b"" Consistent with #12421 which highlights the transaction after send.  ~I\'m not too proud of the bit; any suggestions on how to properly wait for the transactions table to become aware of the new transaction?~  Although I could have called directly from I\'m using the same signal as the send screen. This should make it easier to move fee bump / transaction replacement functionality around later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,1,2018-03-28 14:43:02,391.33,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,2,2018-03-28 14:43:02,799.47,,1,,"b'b"" Travis fails with:   Seems to be a QT 4 issue. Will look into that later"," since it might go away if there\'s a way to avoid  (or if #8263 happens first). For now I just skip it for [QT < 5.4]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,3,2018-03-28 14:43:02,25.8,,1,,"b""b' Concept ACK. NACK the timed single shot \\xf0\\x9f\\x98\\x84 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,4,2018-03-28 14:43:02,1187.6,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,5,2018-03-28 14:43:02,228.78,,1,,"b""b' Rebased  @promag @jonasschnelli I replaced the single shot with  "," which also removes the need for any specific code. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,closed,2018-07-22 23:50:11,547.15,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,6,2018-03-28 14:43:02,794.18,,1,,"b""b' The last travis run for this pull request was 60 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,reopened,2018-07-22 23:50:12,0.02,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,7,2018-03-28 14:43:02,1013.77,,1,,"b""b' Rebased and switched the to the QT5 syntax.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,8,2018-03-28 14:43:02,34.98,,1,,"b""b' Tested ACK d795c610d3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,9,2018-03-28 14:43:02,817.18,,1,,"b""b' utACK d795c610d3095eeff1bfe5c1a34877cf0a841823"," missed the 0.17 feature freeze though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,closed,2018-08-20 17:27:51,1057.65,0,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12818,closed,-,-,-,0,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,opened,2018-03-29 06:18:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,title,2018-03-29 06:18:39,00:00,,1,,"b""b' Only allocate a LevelDB block cache if LevelDB will actually use it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,body,2018-03-29 06:18:39,00:00,,1,,"b'b"" When snappy compression is disabled", LevelDB does not use a block cache. This PR avoids wasting memory reserved for the block cache in that situation, and gives it to the write buffer instead.  Unfortunately this behavior is not documented (I have filed a bug upstream already). You can see [here]url  that takes a argument that is unused. This isn\'t by accident; the return value of the method is compared against the supplied buffer [here]url  to determine whether the block cache should be used.  Giving more memory to the write buffer is good for a number of reasons. Among them: LevelDB checks reads against the mem table holding current writes," so the write buffer acts as an LRU within LevelDB.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,1,2018-03-29 06:18:39,442.73,,1,,"b""b' #12495 has now been merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,2,2018-03-29 06:18:39,200.8,,1,,"b""b' utACK url  needs rebase to get rid of the already-merged commit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,3,2018-03-29 06:18:39,154.25,,1,,"b""b' Poked GitHub to get rid of the commit without rebase:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,4,2018-03-29 06:18:39,241.55,,1,,"b""b' I have rebased this branch with master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,5,2018-03-29 06:18:39,796.37,,1,,"b""b' The last travis run for this pull request was 93 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,closed,2018-07-22 12:54:21,395.7,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,reopened,2018-07-22 12:54:21,0.0,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,6,2018-03-29 06:18:39,94.25,,1,,"b""b' Rebased / squashed in #13741.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,closed,2018-07-22 14:28:36,94.25,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12825,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,opened,2018-03-30 17:01:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,title,2018-03-30 17:01:28,00:00,,1,,"b""b' Prevent concurrent savemempool'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,body,2018-03-30 17:01:28,00:00,,1,,"b""b' Follow up of #12172"," this change prevents calling RPC concurrently.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,1,2018-03-30 17:01:28,2.37,,1,,"b""b' In order to test the new check and error add: Then run The second should wait for the first to terminate.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,2,2018-03-30 17:01:28,908.75,,1,,"b'b"" After #12863 I\'m even more convinced that this might be the wrong approach. Protecting access using a mutex instead of returning these kind of \'busy errors\' would avoid having to implement retry-poll-loops client-side (including in the tests).  If you want to stick with this you\'d at least need to define a new error code that means \'transient error\'"," similar to  . But I think pushing this responsibility to the client is unnecessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,3,2018-03-30 17:01:28,122.38,,1,,"b'b"" @laanwj indeed it\'s very arguable. I think it\'s preferable to have the client retrying than reserving resources on the server side. IMO having the client waiting is also not desirable because the client can wait indefinitely and also timeout (but then he can raise the timeout) and we would process the request anyway (?). Getting an error instead of waiting is also more informative and allows the client to explicitly log and retry when he feels like.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,4,2018-03-30 17:01:28,62.05,,1,,"b'b"" OTOH Then the API wouldn\'t be changed. Users of can rely on the call working", or fatally failing. Hanging indefinitely is a bug no matter what. If it takes too long," something is wrong. Interrupt semantics usually require *less* resources than polling. In this case: sleeping on a mutex requires virtually no resources. Whereas repetitive RPC requests take up CPU cycles and I/O.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,5,2018-03-30 17:01:28,286.22,,1,,"b""b' I think we had reports that loading the mempool took 1.5 hours or so"," just noting without further comment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,6,2018-03-30 17:01:28,382.73,,1,,b'b\'  The caller should always have error handling," and this new error would fall in his ""unkown error"". We have calls that can hang a lot of time", for instance when the wallet is really big (as in lots of keys, lots of transactions). Right, but at least a thread and a socket is on hold. And when the mutex is acquired, it might do something that is no longer relevant in this case dumping the mempool again..  We have this semantic in  , do you think we should change that too?  And regarding #12863, having the client blindingly wait for 1.5 hours should not be an option (?)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,7,2018-03-30 17:01:28,62.87,,1,,"b'b"" I\'m also more a fan of blocking until the existing save has finished. Given that no modifications in the mempool can happen in the mean time anyway (I think?)"," we could even just wait until the existing save operation finishes and then return from both RPC calls (without an additional save).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,8,2018-03-30 17:01:28,21.88,,1,,"b""b'  Actually it can", takes a copy of the mempool contents and then releases the lock to then write to file. So, while writing to disk," the mempool can change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,9,2018-03-30 17:01:28,854.03,,1,,"b'b"" What should be done here? I\'ve to address @conscott comment above"," but I guess I should wait for more concept ACKs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,10,2018-03-30 17:01:28,254.3,,1,,"b""b' I agree with @laanwj it should just hold a lock on the file to avoid problems"," but otherwise succeed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,11,2018-03-30 17:01:28,947.12,,1,,"b""b' Rebased and updated to  while there is another dump.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,12,2018-03-30 17:01:28,38.82,,1,,"b""b' @luke do you think the current code is enough?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,13,2018-03-30 17:01:28,147.23,,1,,"b""b' utACK 35bdaf7489cf33d120b3c66f87067c2698ed2e8c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,14,2018-03-30 17:01:28,1406.07,,1,,"b""b' The last travis run for this pull request was 57 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,closed,2018-08-10 12:38:17,1176.82,0,16,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,reopened,2018-08-10 12:38:18,0.02,0,16,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,15,2018-03-30 17:01:28,1295.82,,1,,"b""b' @MarcoFalke @achow101 rebased on master and changed to and static variable in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,16,2018-03-30 17:01:28,112.7,,1,,"b""b' re-utACK 585b47cfe133fae112782ad0a88fe25c71d465fa'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,17,2018-03-30 17:01:28,73.63,,1,,"b""b' I really like this clean and simple solution  utACK 585b47cfe133fae112782ad0a88fe25c71d465fa'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,closed,2018-10-24 13:21:22,43.07,0,19,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12842,closed,-,-,-,0,19,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,opened,2018-04-03 20:41:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,title,2018-04-03 20:41:07,00:00,,1,,"b""b' [ci] Run functional tests using bitcoin-qt in one Travis job'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,body,2018-04-03 20:41:07,00:00,,1,,"b'b"" As noted in url  we\'re currently missing bugs unique to bitcoin-qt during the Travis build because the functional test framework only uses bitcoind (and not bitcoin-qt).  Run a single Travis job under xvfb for framebuffer virtualization and using bitcoin-qt as the binary. I\'ve also removed the configuration since our usage of xvfb is outdated [per Travis\' docs]url  and the corresponding pre-build step is no longer necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,1,2018-04-03 20:41:07,3.27,,,1,"b""b' Concept ACK!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,2,2018-04-03 20:41:07,25.48,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-04-04 14:42:29,1081.37,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,reopened,2018-04-04 14:42:34,0.08,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,3,2018-04-03 20:41:07,1110.97,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,4,2018-04-03 20:41:07,124.42,1,,,"b""b' Closing and re-opening in an attempt to get Travis to kick off a build I was flagged (and then unflagged) as abusing Travis.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-04-04 17:45:15,182.68,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,reopened,2018-04-04 17:45:21,0.1,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-04-04 19:14:37,89.27,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,reopened,2018-04-04 19:14:40,0.05,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-04-04 20:16:38,61.97,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,reopened,2018-04-04 20:17:08,0.5,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-04-05 18:10:29,1313.35,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,reopened,2018-04-05 18:10:32,0.05,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-04-09 14:14:22,1203.83,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,reopened,2018-04-09 14:14:25,0.05,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,5,2018-04-03 20:41:07,1235.45,1,,,"b""b' @jamesob Try force pushing a change instead (say after changing the commit message) that should trigger a Travis rebuild. Closing and re-opening an issue will create a notification to followers to I think force pushing is a better way to wake up Travis :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,6,2018-04-03 20:41:07,58.73,1,,,"b'b"" @practicalswift I\'m really sorry about the spam"," but force pushing isn\'t kicking off a Travis build for this PR (for reasons unknown to me). You can see above that @MarcoFalke had to do the same thing. I\'ll try opening a new PR next time I\'d otherwise have to resort to an . Sorry again for the trouble.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,7,2018-04-03 20:41:07,18.13,,,1,"b'b"" @jamesob I\'ve now restarted the failing Travis build jobs :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,8,2018-04-03 20:41:07,3.5,,1,,"b'b"" @jamesob You may want to contact Travis CI support and make sure you\'re account has not been flagged on their side. That happens and they\'re usually fixing that quickly after receiving a ticket about it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,9,2018-04-03 20:41:07,6.88,,1,,"b""b' Concept ACK (needs rebase)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,10,2018-04-03 20:41:07,1277.37,,,1,"b""b' Concept ACK b42a408783b345d3f6c46e26a2d24dd00e1cff70  Seems one test is failing due to #12863. For the actual [bitcoin-qt job failing]url  I tried to reproduce errors locally with Xvfd", manually setting BITCOIND to bitcoin-qt," but had no luck (all tests pass).  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,11,2018-04-03 20:41:07,1417.67,,,1,"b'b"" @conscott thanks for trying to reproduce locally. I\'ve been doing same and while I\'m unable to reproduce on my 16.04 host", I\'ve been able to reproduce reliably on a 14.04 VM.  I think running the functional suite using the qt binary has uncovered a latent deadlock," perhaps due to 14.04\'s older default version of OpenSSL (1.0.1f) based on a tip from @TheBlueMatt. Here\'s some relevant log output from the tests:   I\'m going to continue to investigate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,12,2018-04-03 20:41:07,98.23,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,13,2018-04-03 20:41:07,1229.82,,1,,"b'b"" this has needed rebase for a long time closing because of inactivity; let me know if you start work on this again and I\'ll reopen""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,closed,2018-08-27 10:51:02,1236.62,3,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12873,closed,-,-,-,3,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,opened,2018-04-06 14:45:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,title,2018-04-06 14:45:11,00:00,,1,,"b""b' Check for AVX'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,body,2018-04-06 14:45:11,00:00,,1,,"b""b' url This checks whether the CPU supports SSE4. It should also check if the OS supports SSE4. See this [StackOverflow answer]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,1,2018-04-06 14:45:11,1086.93,,1,,"b'b"" I think this applies to AVX testing only"," and we don\'t use AVX. url  url  url  url  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,closed,2018-06-14 11:44:53,1259.7,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,2,2018-04-06 14:45:11,391.52,,1,,"b""b' Actually", since this issue was opened," AVX2 code was added.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,3,2018-04-06 14:45:11,61.65,,1,,"b""b' Shall we reopen this issue then? /cc @DesWurstes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,reopened,2018-06-14 16:28:08,283.25,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,closed,2018-06-24 13:32:43,1264.58,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12903,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,opened,2018-04-08 02:55:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,title,2018-04-08 02:55:01,00:00,,1,,"b""b' wallet: Show fee in results for signrawtransaction* for segwit inputs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,body,2018-04-08 02:55:01,00:00,,1,,"b'b\' This adds a ""fee"" field to the resulting JSON for so a user can double check the fee they\\\'re paying before sending a transaction. The field is only shown in cases where the input amounts are all known \\xe2\\x87\\x94 are all segwit inputs.   * [x] Re-write tests.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,1,2018-04-08 02:55:01,71.52,,1,,"b'b"" Concept NACK. is not guaranteed to be correct (default 0) for non-segwit inputs if users are specifying their own UTXOs. Since the input amount is not required for non-segwit inputs", it will be 0 and the fee will be negative. Furthermore, even if  ," we do not necessarily have all of the UTXOs that are being spent from so even then we can\'t accurately calculate the input amount.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,2,2018-04-08 02:55:01,26.63,,1,,"b""b' @achow101 Are you against even if it only displays fee when all input amounts are known? (I.e. add check instead of using fComplete)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,3,2018-04-08 02:55:01,167.08,,1,,"b'b"" I\'m not against it if the input amounts are known.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,4,2018-04-08 02:55:01,870.05,,1,,"b""b' @achow101 I believe I cover all cases of it being  with the updated code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,5,2018-04-08 02:55:01,34.7,1,,,"b""b' Concept ACK.  Things to do:  [x] update to help message referring new response key;  [x] update existing tests or add new ones;  [x] release note.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,6,2018-04-08 02:55:01,89.47,,,1,"b""b' @promag Thanks"," done. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,7,2018-04-08 02:55:01,9.72,,1,,"b""b' LGTM"," will test later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,8,2018-04-08 02:55:01,340.12,,1,,"b""b' I pushed another commit (a35bc32) which also shows fee rate (both in  and sat/b)"," as someone requested it. Will squash unless people speak against the idea.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,9,2018-04-08 02:55:01,91.33,,1,,"b""b' Fee rate is something the user can easily compute with the fee and hex size. Not sure about that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,10,2018-04-08 02:55:01,6.13,,1,,"b'b"" @promag I agree it can be easily derived"," but not sure there\'s any drawbacks to printing it either...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,11,2018-04-08 02:55:01,235.95,,1,,"b""b' @kallewoof maybe just display in one unit only? And if it goes forward maybe add the same fee rate to  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,12,2018-04-08 02:55:01,898.85,,1,,"b""b' @promag Done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,13,2018-04-08 02:55:01,863.33,,1,,"b'b"" I\'m not sure this is the right place. Hopefully you know the  before deciding to sign something", and the fact that happens to have all the necessary information (sometimes) is more an implementation accident than inherent to its function.  Is there a pressing use case? Otherwise I would argue to instead move PSBT forward, and add an RPC to analyse a PSBT which can give this can of information," independent from the signing logic.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,14,2018-04-08 02:55:01,722.13,,1,,"b""b' @sipa That is exactly the problem: I misread the input value and ended up throwing ~$10 away"," which triggered my creating this PR.  Note that the feerate is also listed in -adding it to seems like a natural complement.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,15,2018-04-08 02:55:01,128.8,,,1,b'b\' I think an alternative fix to this problem," to make sure the user don\\\'t shoot himself in the foot is to have a parameter which cross check that what is sign is what is expected.  For example  This would actually simplify greatly calling code which right now need to verify such information manually before calling sign.  The solution of this PR is useful only when you are debugging stuff manually. An ""expect"" parameter on the other hand", would solve your issue, but also simplify the code because the callers would not need to verify by themselves the transaction with some custom code.  I am not against this PR, just I think it has limited scope.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,16,2018-04-08 02:55:01,16.75,,1,,"b""b' Talked with @kallewoof :  An easy alternative I was pointing out was also just a simple parameter would be widely useful.  However"," he pointed me out that actually show the fees. I think it makes sense to support on if do it already.  Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,17,2018-04-08 02:55:01,19.85,,,1,"b""b' A way to verify fees right now is to use fundrawtransaction on the resulting transaction: 1. with inputs and outputs 2. Sign it using 3. Decode the results", using as basis for fee 4. Adjust outputs, reducing by the chosen fee 5. Call on the result with option 6. If returned hex is the same as the provided hex, you are good to go. As a bonus, also shows the fee rate (although this is before signing it, I guess). 7. Sign the provided tx, and send it  With this PR: 1-4 as above 5. Sign it using 6. If resulting fee rate is correct," send it. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,closed,2018-07-22 23:50:07,1255.1,1,15,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,18,2018-04-08 02:55:01,982.7,,1,,"b""b' The last travis run for this pull request was 73 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,reopened,2018-07-22 23:50:08,0.02,1,16,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,19,2018-04-08 02:55:01,811.47,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,20,2018-04-08 02:55:01,383.92,,1,,"b""b' Code review ACK. This is very useful.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,21,2018-04-08 02:55:01,131.5,,1,,"b""b' @MarcoFalke DrahtBot is not realizing this PR no longer needs rebasing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12911,open,-,-,-,1,19,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,opened,2018-04-13 19:27:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,title,2018-04-13 19:27:03,00:00,,1,,"b""b' Allow quicker shutdowns during LoadBlockIndex()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,1,2018-04-13 19:27:03,66.57,,1,,"b""b' Concept ACK. Will review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,2,2018-04-13 19:27:03,929.92,,1,,"b'b"" Fixed @promag\'s finding.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,3,2018-04-13 19:27:03,5.83,,1,,"b""b' utACK 2b42793.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,4,2018-04-13 19:27:03,71.88,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13582]url  (Extract AppInitLoadBlockIndex from AppInitMain by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,closed,2019-04-28 19:12:00,1424.95,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,5,2018-04-13 19:27:03,350.77,,1,,"b""b' The last travis run for this pull request was 269 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,reopened,2019-04-28 19:12:02,0.03,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,6,2018-04-13 19:27:03,166.98,,1,,"b""b' utACK af5fa82b676a36e60eda080ca0a946bdfffefd49.  Anything against this change?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,7,2018-04-13 19:27:03,33.55,,1,,"b""b' utACK af5fa82b676a36e60eda080ca0a946bdfffefd49'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,closed,2019-05-19 08:44:01,811.98,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12980,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,opened,2018-04-14 12:55:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,title,2018-04-14 12:55:31,00:00,,1,,"b""b' logs: Make the columns in subsequent UpdateTip log entries horizontally aligned'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,body,2018-04-14 12:55:31,00:00,,1,,"b""b' Make the columns in subsequent log entries horizontally aligned. This change improves usability by making it easier to follow the  ",  ," and values over time.  Before this commit:   After this commit:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,1,2018-04-14 12:55:31,226.53,1,,,"b""b' Very weak concept ACK. More readable is more readable", and this should backwards compatible for any logs parsers. However, I doubt this is really causing any issues for users.  You can remove the  . Precision to 6 places is the default for the specifier.  Note that logs may still be misaligned," since and are variable length: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,2,2018-04-14 12:55:31,102.98,,,1,"b'b\' @jnewbery Thanks for the review! I\\\'m now using  .  I\\\'m scratching my own itch here: I interact with solely via the command-line and I find the column jumping due to the formatting to make the output harder to read (my logs consist almost solely of messages) :-)  Usability is about making the overall experience more pleasant (often by small incremental improvements) \\xe2\\x80\\x93 not necessarily ""fixing issues"" :-)  In my experience and are not a problem in the same way since they only jump to the right on 10x increases.  Please re-review :-)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,3,2018-04-14 12:55:31,23.52,,1,,"b""b' utACK 43dd50258ea48e6c6f49f4be5858e6c69c9597ed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,closed,2018-07-22 12:54:14,1438.72,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,4,2018-04-14 12:55:31,1085.7,,1,,"b""b' The last travis run for this pull request was 96 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,reopened,2018-07-22 12:54:15,0.02,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,5,2018-04-14 12:55:31,1234.73,,1,,"b""b' utACK 43dd502'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,closed,2018-10-22 16:40:15,226.0,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,12984,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,opened,2018-04-20 17:26:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,title,2018-04-20 17:26:06,00:00,1,,,"b""b' [p2p] getblock for 1-block reorgs in response to compact block message'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,body,2018-04-20 17:26:06,00:00,1,,,b'b\' Our headers announcement logic will download any blocks that match the total work: url Compact block responses are asymmetric with this: We only intentionally download the block when the new chain has more work," or when it\\\'s already marked as ""in flight"".  A wrinkle here is that the new behavior will only affect high bandwidth compact block peers: currently low bandwidth compact block peers have already marked this particular block as ""in flight"""," which allows the full block to be downloaded with this catch-all ""some reason"" logic. For high bandwidth compact block peers this message is the first the block has been heard of it", and previous behavior is to simply ignore the compact block announcement.  This change synchronizes the treatment of new block announcements.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,1,2018-04-20 17:26:06,1157.02,,1,,"b""b' @practicalswift fixed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,2,2018-04-20 17:26:06,573.45,,1,,"b""b' why not simply request the compact block rather than a full block?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,3,2018-04-20 17:26:06,39.25,1,,,"b'b"" Should mark the block as in flight if it wasn\'t already and we requested it. Probably should be checking if it\'s in flight from the same peer too (which would be required if you mark it", and should probably have been done either way). @promag because the mempool reconstruction will be useless so it\'ll be worse than a normal request. On April 21, 2018 10:16:43 PM UTC," Rebroad  wrote:>why not simply request the compact block rather than a full block?>You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,4,2018-04-20 17:26:06,913.38,,1,,"b""b' @TheBlueMatt Added the filter-by-sender and marking block as in flight.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,5,2018-04-20 17:26:06,41.07,,1,,"b'b"" would it be worth keeping the txs that went into the latest block to handfor this situation so that compact blocks can be used? what if the previouscompact block received had only one transaction in it", whereas thiscompeting block has many transactions? by requesting a full block we wouldbe favouring the empty block when it would be better for the network tofavour the full block. therefore I\'d still argue it\'s better to request acompact block so to not give empty blocks an unfair advantage. On Sat, 21 Apr 2018, 23:56 Matt Corallo,"  wrote:>""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,6,2018-04-20 17:26:06,4.53,,,1,"b'b"" @rebroad I think this goes a bit off-topic to incentives. As-is it would likely take a lot of work to support it"," and I\'d have no idea how to do it safely.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,7,2018-04-20 17:26:06,1335.92,,1,,"b""b' Comments addressed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,8,2018-04-20 17:26:06,146.82,,1,,"b""b' @Empact comments addressed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,closed,2018-07-22 23:49:59,383.88,3,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,reopened,2018-07-22 23:50:00,0.02,3,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,9,2018-04-20 17:26:06,135.07,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15948]url  (refactor: rename chainActive by jamesob) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,closed,2019-04-28 19:11:57,1161.95,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,10,2018-04-20 17:26:06,79.37,,1,,"b""b' The last travis run for this pull request was 279 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,reopened,2019-04-28 19:11:59,0.03,3,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,11,2018-04-20 17:26:06,1256.15,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,12,2018-04-20 17:26:06,4.08,,1,,"b'b"" I don\'t think anyone remaining who would review cares about this"," closing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,closed,2019-05-07 16:12:12,1260.22,3,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13045,closed,-,-,-,3,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,opened,2018-04-23 13:47:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,title,2018-04-23 13:47:33,00:00,,1,,"b""b' refactor pre-selected coin code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,body,2018-04-23 13:47:33,00:00,,1,,b'b\' This section of code loops over the same coins twice, in two different ways depending on whether other inputs are allowed, even though the net effect is just an early return in one case. One used the available coins list(pruned to just preselected coins) and the other the preselected coins directly. Instead just do it once, and return early if no other inputs are allowed.  Note that by definition coin control is in use," so ""fSpendable"" will always be true", so filtering for this is a NOP.  Added basic unit test case as well.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,1,2018-04-23 13:47:33,344.82,,,1,"b'b"" NACK 4aaa5ba this code isn\'t redundant"," the out args are used by caller  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,2,2018-04-23 13:47:33,64.62,,1,,"b""b' The fact that the test suite passes with this removal is a smell though how about a test for or that fails with this removal?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,3,2018-04-23 13:47:33,7.92,,,1,"b""b' I will write tests fix this", thanks. Just not at my computer today. On Mon, Apr 23,2018," 4:38 PM Ben Woosley  wrote:>'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,4,2018-04-23 13:47:33,552.37,1,,,"b'b""  This is what I was afraid of I don\'t think we test the part of the wallet code that is used by the GUI coin selection very well.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,5,2018-04-23 13:47:33,538.77,,1,,"b""b' did some additional refactoring to make flow easier to follow(early return if you captured enough value with presets)"," and added a basic unit test that should have failed with previous broken iteration'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,6,2018-04-23 13:47:33,319.78,,1,,"b""b' rebased"," and did a tiny bit more refactoring for more readability.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,7,2018-04-23 13:47:33,234.93,,,1,"b""b' You have some whitespace inconsistencies"," clang-format would be good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,8,2018-04-23 13:47:33,871.77,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,9,2018-04-23 13:47:33,496.57,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,10,2018-04-23 13:47:33,1212.82,,1,,"b""b' The last travis run for this pull request was 277 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,closed,2019-04-28 19:11:54,324.35,1,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,reopened,2019-04-28 19:11:55,0.02,1,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,11,2018-04-23 13:47:33,1005.85,,1,,"b""b' utACK url  but this would be easier to review if it focused around the fix e.g.: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13057,open,-,-,-,1,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,opened,2018-04-23 23:11:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,title,2018-04-23 23:11:37,00:00,,1,,"b""b' Make script interpreter independent from storage type CScript'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,body,2018-04-23 23:11:37,00:00,1,,,"b'b"" This introduces versions of  ",  , and that operate on scripts represented by  . This makes it possible to use different representation types for scripts, as Spans can be used to refer to scripts stored in any continuous fashion in memory, regardless of the container.  This is also a step towards reducing the consensus-criticalness of CScript, but not entirely. The interpreter code still uses CScript internally for a few purposes (notably  , and  ). Longer term, the goal is removing the need for all scripts to share the same representation. Currently is a prevector with 28 preallocated bytes a choice we need because it\'s favorable for scriptPubKeys in the UTXO cache, but it\'s pretty terrible for storing scriptSigs. With this change, separate (or even custom) data structures can be used for UTXO scriptPubKeys, and  in transactions. One possibility for the latter is storing all scripts in a transaction concatenated in a single allocated area," rather than using separate allocations for each.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,1,2018-04-23 23:11:37,879.83,,,1,"b'b"" Makes more self-contained", that\'s good. Verified that: Consensus matches  : copy-only apart from variable names Consensus matches  :  a size_t becomes ptr_diff_t: not an issue as only positive values are possible (unsigned char + 2) becomes  : should be ok, it\'s defined as Consensus matches  : becomes instead of a  : effective behavior is the same becomes  : GetOp is already defined in that way," so should be fine  Other changes look straightforward.  utACK 91c12000dd97d7b9b9c82d1bbc92c7bbadd3d6ed""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,2,2018-04-23 23:11:37,169.0,,,1,"b""b' This seems to be lacking a bunch of motivation. Can you clarify *why* you want to run a script stored in a span?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,3,2018-04-23 23:11:37,10.97,,,1,"b'b"" @TheBlueMatt They\'re not stored in a Span; a Span is just a way to refer to a script stored anywhere (vector", array, prevector," whatever custom structure that can hold a continuous sequence of bytes). I\'ll add some more motivation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,4,2018-04-23 23:11:37,4.3,,,1,"b""b' Suresure"," I was asking for motivation of where we want to do this in the immediate future (do you have any branches that run scripts in non-prevector form?). The only place I can think of it being useful is in libbitcoinconsensus.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,5,2018-04-23 23:11:37,7.17,,1,,"b""b' @TheBlueMatt No code to show"," but I added some thoughts to the PR description.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,6,2018-04-23 23:11:37,9.67,,,1,"b""b' Ah"," the  distinction seems like a reasonable idea. Would love to see a branch with that implemented to see the feasibility of using this in the short-term after a merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,7,2018-04-23 23:11:37,1255.48,,1,,"b""b' Related discussion in IRC: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,8,2018-04-23 23:11:37,285.45,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,9,2018-04-23 23:11:37,244.78,,1,,"b""b' utACK 6ae8a5d681b181c7cb772778e18285139df74ece'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,10,2018-04-23 23:11:37,126.07,,1,,"b""b' utACK ae8df82ad34a6baaf883411308255e6c6d093c53 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,11,2018-04-23 23:11:37,1077.25,,1,,"b""b' utACK ae8df82.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,12,2018-04-23 23:11:37,184.32,,1,,"b""b' re-utACK ae8df82ad34a6baaf883411308255e6c6d093c53'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,13,2018-04-23 23:11:37,1236.32,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,14,2018-04-23 23:11:37,1236.62,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#16129]url  (refactor: Remove unused includes by practicalswift)* [#15969]url  (Refactor: explicit VerifyScript control flow based on pattern matching by JeremyRubin)* [#15074]url  (Improve CScriptNum error reporting by jl2012)* [#15045]url  ([test] Apply maximal flags to tx_valid tests and minimal flags to tx_invalid tests by jl2012)* [#10729]url  (Wrap EvalScript in a ScriptExecution class by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,closed,2019-04-28 19:11:51,1200.23,1,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,15,2018-04-23 23:11:37,233.03,,1,,"b""b' The last travis run for this pull request was 269 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,reopened,2019-04-28 19:11:52,0.02,1,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,16,2018-04-23 23:11:37,1212.28,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13062,open,-,-,-,1,12,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,opened,2018-04-25 20:31:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,title,2018-04-25 20:31:43,00:00,,1,,"b""b' Fix ScanForWalletTransactions to return an enum indicating scan result: success / failure / user_abort'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,body,2018-04-25 20:31:43,00:00,,1,,"b""b' Return the failed block as an out arg.  Fixes #11450.  /cc #12275'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,1,2018-04-25 20:31:43,1105.03,,1,,"b""b' Dropped explicit values and type from enum.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,2,2018-04-25 20:31:43,151.1,,1,,"b""b' Rebased and updated to accommodate #12507.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,3,2018-04-25 20:31:43,192.07,,1,,"b""b' Rebased and moved the shutdown / abort handling inline.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,4,2018-04-25 20:31:43,1116.98,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14711]url  (Remove uses of chainActive and mapBlockIndex in wallet code by ryanofsky)* [#14624]url  (Some simple improvements to the RNG code by sipa)* [#10973]url  (Refactor: separate wallet from node by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,closed,2018-07-29 15:16:54,1125.18,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,reopened,2018-07-29 15:16:55,0.02,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,5,2018-04-25 20:31:43,274.93,,1,,"b'b\' Rebased. @MarcoFalke could you remove ""Up for grabs""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,6,2018-04-25 20:31:43,1082.62,1,,,"b'b"" Concept ACK / light-utACK url I agree with Marco that returning the last successful block is probably a good idea", but with that and the other comments, at least this doesn\'t appear to make things worse," so it could be addressed in follow-ups if not here :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,7,2018-04-25 20:31:43,197.75,1,,,"b""b'  Returning the last failed block instead of the last successful block is needed for importmulti. Importmulti uses the last failed block to return success for keys with birthdays after that block"," and failures for keys with older birthdays.  I tried to clarify this in #12275 by returning both values (  and  ):   Which I still think would be an improvement over the current code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,8,2018-04-25 20:31:43,409.87,,1,,"b""b' @ryanofsky I think I mis-explained"," I mean in the case of success the failure case behaviour should remain unchanged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,9,2018-04-25 20:31:43,623.62,,1,,"b""b' @MarcoFalke see the stop_block commit above. Any idea where the test failures are coming from? I don\\xe2\\x80\\x99t see the connection.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,10,2018-04-25 20:31:43,518.6,,1,,"b""b' utACK bd3b0361d840bff95988a048abf70ade94d80524'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,11,2018-04-25 20:31:43,36.97,,1,,"b""b' utACK bd3b0361d8'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,12,2018-04-25 20:31:43,558.83,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,closed,2018-12-12 05:01:40,824.75,2,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13076,closed,-,-,-,2,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,opened,2018-04-25 23:50:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,title,2018-04-25 23:50:13,00:00,,1,,"b""b' Do not turn OP_1NEGATE in scriptSig into 0x0181 in signing code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,body,2018-04-25 23:50:13,00:00,,1,,"b""b' Reported by arubi on IRC.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,1,2018-04-25 23:50:13,382.33,,1,,"b""b' Needs a unit test"," I think.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,2,2018-04-25 23:50:13,351.02,,1,,"b""b' Yeah", a test makes sense for this function," since it is not particularly well covered: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,3,2018-04-25 23:50:13,568.95,,,1,"b""b' ACK on the fix! Many thanks for looking into it :)  Before :  After:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,4,2018-04-25 23:50:13,651.28,,,1,"b""b' Thanks for testing @fivepiece '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,5,2018-04-25 23:50:13,272.67,,1,,"b""b' It looks like there is a copy of this function in  : used in  . Does this need update as well?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,6,2018-04-25 23:50:13,1131.93,,,1,"b""b' @sipa Would this be good to get into 0.17.0?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,closed,2018-07-22 23:49:52,1439.65,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,reopened,2018-07-22 23:49:53,0.02,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,7,2018-04-25 23:50:13,71.0,,1,,"b""b' utACK url  but as @laanwj says"," looks like transaction_ also needs updating'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,8,2018-04-25 23:50:13,385.37,,,1,"b'b""  Can you please at least comment on this @sipa? If the answer is no that\'s fine and this can be merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,closed,2019-04-28 19:11:48,1161.92,0,6,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,9,2018-04-25 23:50:13,227.05,,1,,"b""b' The last travis run for this pull request was 279 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,reopened,2019-04-28 19:11:49,0.02,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13084,open,-,-,-,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,opened,2018-04-26 12:12:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,title,2018-04-26 12:12:40,00:00,1,,,"b""b' Log early messages with -printtoconsole'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,body,2018-04-26 12:12:40,00:00,1,,,"b""b' This allows any log messages sent prior to the option being parsed to be replayed onto the console. This could be handy if option parsing ( file) wants to output any warnings or info messages.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,1,2018-04-26 12:12:40,1343.57,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,2,2018-04-26 12:12:40,213.02,,,1,"b""b' Rebased on top of 12954 and 13148. Nitpicking welcome.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,3,2018-04-26 12:12:40,46.83,,1,,"b""b' Is this of any relevance? I had the impression that parameter interaction was done after logging was set up.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,4,2018-04-26 12:12:40,34.9,,1,,"b""b' Noting that replacing the with fixes #13157 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,5,2018-04-26 12:12:40,498.85,,1,,"b""b' The last travis run for this pull request was 80 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,closed,2018-07-22 23:49:50,697.17,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,reopened,2018-07-22 23:49:50,0.0,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,6,2018-04-26 12:12:40,494.1,,1,,"b""b' Rebased", dropped overlapping commit with #13159 (which probably should be merged first)," and note that CCriticalSection change introduces dependency loop.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,7,2018-04-26 12:12:40,799.2,,1,,"b""b' The tests seem to fail or deadlock'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,8,2018-04-26 12:12:40,75.83,,1,,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#15329]url  (Fix InitError() and InitWarning() content by hebasto)* [#15266]url  (memory: Construct globals on first use by MarcoFalke)* [#14169]url  (add -debuglogsize= option by SuckShit)* [#13949]url  (Introduce MempoolObserver interface to break "" -* [#10443]url  (Add fee_est tool for debugging fee estimation code by ryanofsky) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,9,2018-04-26 12:12:40,1263.5,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,10,2018-04-26 12:12:40,475.75,,1,,"b""b' Closing in favour of #16112'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,closed,2019-05-29 03:38:13,228.38,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13088,closed,-,-,-,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,opened,2018-04-26 17:12:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,title,2018-04-26 17:12:44,00:00,,1,,"b""b' build: update ax_boost_'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,body,2018-04-26 17:12:44,00:00,,1,,"b""b' [ax_boost_chrono]url  and [ax_boost_unit_test_framework]url  were updated from upstream in #12678. However some minor upstream changes were missed. Pull those changes in here so these files actually reflect their upstream serial.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,closed,2018-07-22 23:49:46,397.03,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,1,2018-04-26 17:12:44,397.05,,1,,"b""b' The last travis run for this pull request was 87 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,reopened,2018-07-22 23:49:47,0.02,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,2,2018-04-26 17:12:44,68.88,,1,,"b""b' @fanquake Are you sure this is correct? I can see them upstream: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,3,2018-04-26 17:12:44,34.88,,1,,"b'b"" @MarcoFalke Yes"," they aren\'t in the upstream macros:  [ax_boost_]url  [ax_boost_unit_test_]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,4,2018-04-26 17:12:44,703.27,1,,,"b""b' Ah"," my bad.  utACK aa85dcf47288e86f283f38fe47c022ffcfa53d8b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,5,2018-04-26 17:12:44,1088.33,,,1,"b""b' Gitian builds for commit 29b4ee64695f79511912ae127e66e0fe82f7a0d1 (master): * [bitcoin-0.16.99-aarch64-linux-gnu-]url  * [bitcoin-0.16.99-aarch64-linux-]url  * [bitcoin-0.16.99-arm-linux-gnueabihf-]url  * [bitcoin-0.16.99-arm-linux-]url  * [bitcoin-0.16.99-i686-pc-linux-gnu-]url  * [bitcoin-0.16.99-i686-pc-linux-]url  * [bitcoin-0.16.99-osx-]url  * [bitcoin-0.16.99-osx64]url  * [bitcoin-0.16.99-win32-]url  * [bitcoin-0.16.99-win32-setup-]url  * [bitcoin-0.16.99-win32.zip]url  * [bitcoin-0.16.99-win64-]url  * [bitcoin-0.16.99-win64-setup-]url  * [bitcoin-0.16.99-win64.zip]url  * [bitcoin-0.16.99-x86_64-linux-gnu-]url  * [bitcoin-0.16.99-x86_64-linux-]url  * [bitcoin-0.16.99]url  * [bitcoin-linux-0.17-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.17-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.17-]url  * [bitcoin-win-]url  Gitian builds for commit 6399c8d94dd08f8aaf7a59f7abd845a0d95c666e (master and this pull): * [bitcoin-0.16.99-aarch64-linux-gnu-]url  * [bitcoin-0.16.99-aarch64-linux-]url  * [bitcoin-0.16.99-arm-linux-gnueabihf-]url  * [bitcoin-0.16.99-arm-linux-]url  * [bitcoin-0.16.99-i686-pc-linux-gnu-]url  * [bitcoin-0.16.99-i686-pc-linux-]url  * [bitcoin-0.16.99-osx-]url  * [bitcoin-0.16.99-osx64]url  * [bitcoin-0.16.99-win32-]url  * [bitcoin-0.16.99-win32-setup-]url  * [bitcoin-0.16.99-win32.zip]url  * [bitcoin-0.16.99-win64-]url  * [bitcoin-0.16.99-win64-setup-]url  * [bitcoin-0.16.99-win64.zip]url  * [bitcoin-0.16.99-x86_64-linux-gnu-]url  * [bitcoin-0.16.99-x86_64-linux-]url  * [bitcoin-0.16.99]url  * [bitcoin-linux-0.17-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.17-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.17-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,closed,2018-07-26 12:56:51,787.07,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13095,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,opened,2018-04-28 04:08:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,title,2018-04-28 04:08:30,00:00,,1,,"b""b' Fix Windows locale problem'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,body,2018-04-28 04:08:30,00:00,,1,,"b'b"" Fixes #13103 This PR make internal strings of Windows always be utf8-encoded  Add UTF8  localized string conversion function  Use localized string on Berkeley DB  Use localized string on LevelDB  Use localized string on fstream::open  Use std::fstream instead of fs::fstream  Patched the boost library to convert to be UTF8 encoded. Add two functions that convert between UTF8 and Local encodes. To those who want to test this", adding option make every file that Bitcoin Core use contain non-ASCII characters  Defect: If the user\'s codepage does not support the filename," it will be encoded to I don\'t known how to solve this. Leveldb and Berkeley DB don\'t support wide char.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,1,2018-04-28 04:08:30,76.63,1,,,"b'b"" Thanks. Though I\'m sad that this is needed. To stay sane", and keep locales and encodings out of everything as much as possible:  Please keep all our internal state in UTF-8 everywhere. This was always the intent, so in interaction with JSONRPC we can assume all strings are UTF-8, and matches with Qt\'s view. Only convert to local encoding when needed, so just before going to the file system layer, or when coming from the file system layer (or filenames, command-line arguments etc).  BTW," there are and to convert Qt strings  local paths but I don\'t think they are useful in this case as it doesn\'t happen on the interface from Qt to core code. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,closed,2018-05-09 04:27:18,18.8,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,reopened,2018-05-09 23:59:24,1172.1,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,2,2018-04-28 04:08:30,661.77,,1,,"b""b' prefer #13426'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,closed,2018-06-11 16:26:55,987.52,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13107,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,opened,2018-04-29 19:06:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,title,2018-04-29 19:06:59,00:00,,1,,"b""b' addrman: Add Clang thread safety annotations for variables guarded by '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,body,2018-04-29 19:06:59,00:00,,1,,"b""b' * Add Clang thread safety annotations for variables guarded by * Add missing locks '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,closed,2018-07-22 23:49:42,282.72,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,1,2018-04-29 19:06:59,282.73,,1,,"b""b' The last travis run for this pull request was 84 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,reopened,2018-07-22 23:49:43,0.02,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,2,2018-04-29 19:06:59,742.07,,1,,"b""b' @MarcoFalke Would you mind reviewing this one? Should hopefully be trivial :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,3,2018-04-29 19:06:59,69.45,,1,,"b""b' utACK 4f04bda90e113cd596b019c05d6a5cb3ac4be540'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,4,2018-04-29 19:06:59,1395.45,,1,,"b""b' @Empact @promag @ajtowns Would you mind reviewing? Should hopefully be trivial :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,5,2018-04-29 19:06:59,68.5,,1,,"b""b' Should squash or invert commit order otherwise 1st commit is broken? Also why rename to  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,6,2018-04-29 19:06:59,6.22,,1,,"b""b' @promag Fixed. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,7,2018-04-29 19:06:59,59.72,,1,,"b""b' Unrelated [feature_ failure]url  in appveyor:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,8,2018-04-29 19:06:59,2.72,1,,,"b""b' ~~utACK 116e77b~~.  nits:  commit messages could mention  .  could squash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,9,2018-04-29 19:06:59,26.32,,,1,"b""b' @promag Thanks for the quick review. Feedback addressed. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,10,2018-04-29 19:06:59,6.8,,1,,"b'b"" @practicalswift could drop these  ? should be enough considering the public interface locks  "," and therefore there aren\'t atomicity concerns?  So: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,11,2018-04-29 19:06:59,12.83,,1,,"b'b"" @promag I\'m not sure I follow here. Is you suggestion to drop all the  :s in this PR? Then it won\'t compile due to warnings such as:   What am I missing? :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,12,2018-04-29 19:06:59,86.68,1,,,"b""b' @practicalswift right"," sorry about last comment.  ACK 3e9f6c8.  Please update PR title and description.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,13,2018-04-29 19:06:59,259.67,,1,,"b""b' @MarcoFalke Would you mind re-reviewing your previous utACK? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,14,2018-04-29 19:06:59,387.95,,1,,"b""b' utACK 3e9f6c821b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,closed,2018-10-09 03:56:35,246.87,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13115,closed,-,-,-,2,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,opened,2018-04-30 09:32:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,title,2018-04-30 09:32:24,00:00,,1,,"b""b' util: Add Clang thread safety annotations for variables guarded by cs_args'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,body,2018-04-30 09:32:24,00:00,,1,,"b""b' * Add missing locks * Add Clang thread safety annotations for variables guarded by  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,1,2018-04-30 09:32:24,659.18,,1,,"b""b' Now includes a fix for a missing lock introduced in the recently merged PR #10267.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,2,2018-04-30 09:32:24,575.93,,,1,"b""b' Rebased!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,closed,2018-07-29 15:16:45,344.35,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,3,2018-04-30 09:32:24,549.25,,1,,"b""b' The last travis run for this pull request was 53 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,reopened,2018-07-29 15:16:46,0.02,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,4,2018-04-30 09:32:24,95.65,,,1,"b""b' @MarcoFalke Thanks for reviewing! Feedback addressed. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,5,2018-04-30 09:32:24,16.62,,1,,"b""b' Added to and too :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,6,2018-04-30 09:32:24,103.9,,1,,"b""b' utACK"," but could squash into two commits (1) add missing locks and (2) add lock annotations'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,7,2018-04-30 09:32:24,151.03,,,1,"b""b' @MarcoFalke Good points. PR adjusted accordingly. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,8,2018-04-30 09:32:24,1286.32,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,9,2018-04-30 09:32:24,6.67,,,1,"b'b"" @MarcoFalke Thanks! I\'ll investigate immediately!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,10,2018-04-30 09:32:24,30.75,,1,,"b""b' Note that I reproduced this with in  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,11,2018-04-30 09:32:24,2.87,1,,,"b""b' @MarcoFalke Strange! I always build with  . Triggered by  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,12,2018-04-30 09:32:24,6.03,,1,,"b""b' No"," triggered by or  . It happens early on when the args and data dir are read.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,13,2018-04-30 09:32:24,64.03,,1,,"b""b' @MarcoFalke Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,14,2018-04-30 09:32:24,42.82,1,,,"b'b"" This still fails travis for the same reason. Sorry"," I guess my suggestion doesn\'t work.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,15,2018-04-30 09:32:24,654.27,,,1,"b""b' @MarcoFalke Reverted again :-) Travis is now happy. Please re-review!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,closed,2018-08-30 11:55:02,1238.27,2,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13126,closed,-,-,-,2,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,opened,2018-04-30 13:48:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,title,2018-04-30 13:48:56,00:00,,1,,"b""b'  policy: Add Clang thread safety annotations for variables guarded by cs_feeEstimator'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,body,2018-04-30 13:48:56,00:00,,1,,"b""b' * Add Clang thread safety annotations for variables guarded by * ~~Add missing locks~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,1,2018-04-30 13:48:56,78.78,,,1,"b""b' @MarcoFalke Good idea. Renamed from to  . Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,2,2018-04-30 13:48:56,521.92,,1,,"b""b' The last travis run for this pull request was 69 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,closed,2018-07-22 23:49:38,600.7,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,reopened,2018-07-22 23:49:39,0.02,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,3,2018-04-30 13:48:56,992.87,,1,,"b""b' @MarcoFalke Would you mind re-review this locking PR you looked at before? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,4,2018-04-30 13:48:56,375.12,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#10443]url  (Add fee_est tool for debugging fee estimation code by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,5,2018-04-30 13:48:56,883.15,,1,,"b""b' @Empact @MarcoFalke Updated. Would you mind re-reviewing? The current version is annotations only"," so no change in locking. In other words: this PR changes only compile-time checking and no runtime behaviour. Should hence hopefully be trivial to review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,6,2018-04-30 13:48:56,1071.13,,1,,"b""b' utACK 1a01e1c120809b19ddc9c9c6ee5d6686a90f55b3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,7,2018-04-30 13:48:56,497.92,,1,,"b""b' Any chance of getting this reviewed? It is a compile time check only :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,closed,2018-12-22 16:13:03,983.4,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,8,2018-04-30 13:48:56,176.47,,,1,"b'b"" Adding to caused a bunch of problems in #10443 due to being a private member. In []url  would call  ", which would lock  , and then call a lambda passed from the caller to loop through transactions, calling which would call  . The new annotation to added caused the compiler to error on these calls.  The errors were spurious, since was locked the entire time, but because was a private member of  , there was no way to annotate the lambda asserting that was locked. Making the mutex public would have solved the problem, but instead in []url  I opted to fix the problem by hiding the call in another callback to be less invasive and simplify some other things.  Just wanted to note this because some people were curious about it. I thought it was interesting because:  There can sometimes be a tension between wanting to make mutexes private, and wanting to make assertions about them in code outside the class.  There doesn\'t seem to be any way to annotate a variable asserting that a mutex must always be locked before the function is called, and requiring the compiler to check this. It\'s possible to annotate a lambda assigned to a variable, asserting that various mutexes are locked," but these assertions are completely unchecked and uncheckable without a way to annotate std::functions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13128,closed,-,-,-,0,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,opened,2018-05-03 12:03:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,title,2018-05-03 12:03:39,00:00,,1,,"b""b' test: Handle timestamps without microseconds in combine_logs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,body,2018-05-03 12:03:39,00:00,,1,,"b'b"" The log messages before command line arguments have been parsed will not have microseconds. Make parsing robust to lack of microseconds so that sorting is done correctly"," and make their timestamps show as \'.000000\' to line up the log.  Before (note the weird sorting and ordering):  After:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,1,2018-05-03 12:03:39,205.77,,1,,"b""b' Noting that this is fixed by #13088'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,2,2018-05-03 12:03:39,22.77,,1,,"b""b' Ok...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,closed,2018-05-03 15:52:11,228.53,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,3,2018-05-03 12:03:39,1374.42,1,,,"b""b' This is fixed in * log: Log early messages #16112 as a side effect of changing the into a     '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,reopened,2019-05-28 14:46:54,1374.72,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,closed,2019-05-28 14:46:59,0.08,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13157,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,opened,2018-05-03 16:09:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,title,2018-05-03 16:09:13,00:00,,1,,"b'b"" Don\'t close old debug log file handle prematurely when trying to re-open (on SIGHUP)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,body,2018-05-03 16:09:13,00:00,,,1,"b'b"" Don\'t close old debug log file handle prematurely when trying to re-open (on  ).  Context: url Thanks @ajtowns!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,1,2018-05-03 16:09:13,460.37,,1,,"b""b' The last travis run for this pull request was 80 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,closed,2018-07-22 23:49:35,460.37,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,reopened,2018-07-22 23:49:36,0.02,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,2,2018-05-03 16:09:13,463.02,1,,,"b'b\' Tested ACK 37efe5b7ea059e56d8f5170c91e3160db286cad4  To test:   Current behaviour of master is that the ""Dumped mempool"" message (along with any other subsequent log messages) aren\\\'t logged to a file", and further that fixing permissions on  and HUP\\\'ing the process isn\\\'t sufficient to re-enable logging to file.  With the patch, logging continues in , and after fixing the permissions HUP\\\'ing the process causes logging to move to the new file.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,3,2018-05-03 16:09:13,686.63,,1,,"b""b' utACK 37efe5b7ea059e56d8f5170c91e3160db286cad4 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,4,2018-05-03 16:09:13,1147.48,,,1,"b""b' Rebased!  @luke-jr @ajtowns @MarcoFalke Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,5,2018-05-03 16:09:13,305.75,,,1,"b""b' re-utACK 75ea00f391b742e435c650aae3e827aad913d552'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,6,2018-05-03 16:09:13,834.82,,,1,"b""b' re-ACK 75ea00f391b742e435c650aae3e827aad913d552'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,7,2018-05-03 16:09:13,131.88,,,1,"b""b' utACK 75ea00f391b742e435c650aae3e827aad913d552"," good to get rid of the need of I suppose'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,closed,2018-08-31 11:19:54,690.3,1,3,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13159,closed,-,-,-,1,3,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,opened,2018-05-06 19:14:28,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,title,2018-05-06 19:14:28,00:00,,1,,"b""b' Fix re-declared scoped enum as unscoped (Causes issues with some compilers)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,body,2018-05-06 19:14:28,00:00,,1,,"b'b"" MSVC fails to compile with the changes made in #10742 The problem is enum types were changed to scoped ( ) but in some places as an unscoped is used. This is a very simple fix and I\'ve tested it.  Edit: Had to remove enum altogether doesn\'t compile on clang.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,1,2018-05-06 19:14:28,119.75,,1,,"b""b' Please squash your commits according to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,closed,2018-05-06 21:49:39,155.18,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,reopened,2018-05-06 21:52:25,2.77,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,2,2018-05-06 19:14:28,39.37,1,,,"b""b' Okay done finally (Got my branch into a messed up state which automatically closed the PR) :('""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,3,2018-05-06 19:14:28,48.68,,1,,"b""b' utACK 43f3dec009c43c0df2ef4ff62a9327de0148d959'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,4,2018-05-06 19:14:28,384.55,,,1,"b""b' utACK 43f3dec009c43c0df2ef4ff62a9327de0148d959  Thanks for fixing this!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,5,2018-05-06 19:14:28,247.85,,1,,"b""b' utACK 43f3dec.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,closed,2018-05-07 11:29:27,817.03,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13180,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,opened,2018-05-08 17:40:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,title,2018-05-08 17:40:05,00:00,,1,,"b""b' Remove 2nd mapTx lookup in CTxMemPool::removeForBlock'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,body,2018-05-08 17:40:05,00:00,,1,,"b""b'   has 2 loops over the block transactions:  the first determines which block transactions are in the mempool (required for  );  the second removes from the mempool transactions that conflict with the block transactions.  With this PR the second loop is optimized because lookup is removed and is called only once (since it supports batch removal).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,1,2018-05-08 17:40:05,30.32,,1,,"b'b"" Note that this conflicts with #12979 (Split validationinterface into paralell  interfaces)"," which is why I\'d suggest to rebase on top of that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,2,2018-05-08 17:40:05,211.15,,1,,"b""b' Rebased on top of #12979 as per @MarcoFalke suggestion (currently it conflicts with master). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,3,2018-05-08 17:40:05,694.03,,1,,"b""b' Rebased on master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,4,2018-05-08 17:40:05,9.18,,,1,"b""b' This seems non-trivial to review. Could you please add the motivation and  to the OP?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,5,2018-05-08 17:40:05,74.42,,1,,"b""b' @MarcoFalke is that enough?  Maybe @morcos and @sdaftuar could take a look too?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,6,2018-05-08 17:40:05,1360.23,,,1,"b""b' Is there any meaningful advantage by removing the second lookup?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,7,2018-05-08 17:40:05,97.6,,1,,"b""b' @MarcoFalke this should only improve the performance.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,8,2018-05-08 17:40:05,10.75,1,,,"b""b'  Would be nice to have a benchmark that shows this. If the performance is worse or identical with this patch"," it might not be worth it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,9,2018-05-08 17:40:05,674.28,,1,,"b'b"" @MarcoFalke I\'ll try to measure it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,10,2018-05-08 17:40:05,1354.07,,1,,"b""b' The last travis run for this pull request was 55 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,closed,2018-08-25 20:56:07,196.03,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,reopened,2018-08-25 20:56:07,0.0,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,11,2018-05-08 17:40:05,1320.58,,1,,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#13949]url  (Introduce MempoolObserver interface to break "" -* [#10443]url  (Add fee_est tool for debugging fee estimation code by ryanofsky) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,12,2018-05-08 17:40:05,923.75,,1,,"b'b"" Not worth it"," is not that large and lookups aren\'t that expensive and also it not that frequent.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,closed,2019-03-24 10:20:27,804.33,1,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13189,closed,-,-,-,1,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,opened,2018-05-08 23:12:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,title,2018-05-08 23:12:11,00:00,,1,,"b""b' Avoid mapTx lookup in CTxMemPool::UpdateTransactionsFromBlock'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,body,2018-05-08 23:12:11,00:00,,1,,"b""b' This trivial patch prevents an expensive operation ( ) by early testing an existing and cheaper condition.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,1,2018-05-08 23:12:11,836.6,,1,,"b""b'  @murrayn the idea is to avoid the call"," which depends on.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,2,2018-05-08 23:12:11,1357.87,,1,,"b""b' ping @morcos.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,3,2018-05-08 23:12:11,84.5,,,1,"b""b' @promag It seems the first comment does not include any motivation and background.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,4,2018-05-08 23:12:11,476.05,,1,,"b""b' @MarcoFalke improved first comment and reworded commit and PR title (removed  ). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,5,2018-05-08 23:12:11,162.3,,1,,"b""b' The last travis run for this pull request was 60 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,closed,2018-07-22 23:49:30,37.32,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,reopened,2018-07-22 23:49:31,0.02,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,6,2018-05-08 23:12:11,972.97,,1,,"b'b"" This change only saves some lookups"," which in turn isn\'t that expensive considering the current size.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,closed,2018-11-26 16:02:28,972.95,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13193,closed,-,-,-,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,opened,2018-05-09 06:15:49,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,title,2018-05-09 06:15:49,00:00,,1,,"b""b' [WIP] Refactoring platform-specific code in '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,body,2018-05-09 06:15:49,00:00,,1,,"b""b' Take all of the functions that are specific to Windows or Unix", and create a common set of methods in a new header file," all combined in the folder.  The goal of this PR is to break and into the following files:  **For Windows:** * *  **For Mac & Linux:** * *  Issue Reference: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,1,2018-05-09 06:15:49,30.8,,,1,b'b\' @glaksmono Thanks for wanting to work on #12697. For future reference, ideally [WIP] PRs should only be opened when some code has been written," and you need  in regards to code or design decisions. We don\\\'t really use them for ""claiming"" issues to work on", a comment in the relevant issue is enough for that. (they will also consume Travis resources unnecessarily). \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,2,2018-05-09 06:15:49,29.62,1,,,"b""b' Got it @fanquake apologise. Will keep that in mind for the future.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,closed,2018-05-09 10:25:34,249.75,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,reopened,2018-05-09 10:29:54,4.33,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,closed,2018-05-09 11:16:44,46.83,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13196,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,opened,2018-05-09 14:51:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,title,2018-05-09 14:51:21,00:00,,1,,"b""b' Process logs in a separate thread'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,body,2018-05-09 14:51:21,00:00,1,,,"b'b"" This changeset renders and flushes log messages in a dedicated thread", preventing the originating thread from blocking (or failing) on fwrite, fflush, or the various string manipulations done on log messages. Originating threads push log messages into a buffer that is continually flushed. Benchmarks live in the comments below.  Open questions: Do we want this behavior by default? I think so, given that it seems safer and more performant than doing log processing synchronously with Important Stuff. Do we want to allow an opt-out configuration option that makes log processing synchronous again? The ring buffer implementation allows either overwriting existing data or blocking when at full capacity. In the case of logging, I\'ve set it to block and wait for capacity instead of dropping messages. Does this seem right?  Future work: Reconcile this change with url  in case that\'s merged first (I have a patch) Even when logging is disabled," buffer debug logs without flushing and then handle SIGSEGV et al by flushing the log buffer (idea being to give the user crash diagnostics). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,1,2018-05-09 14:51:21,41.17,1,,,"b'b"" Concept ACK.  My thoughts on your open questions:  Do we want this behavior by default? [JN] Yes Do we want to allow an opt-out configuration option that makes log processing synchronous again [JN] Yes The ring buffer implementation allows either overwriting existing data or blocking when at full capacity. In the case of logging", I\'ve set it to block and wait for capacity instead of dropping messages. Does this seem right? [JN] I think there are at least three options here:   1. overwrite existing data   2. drop new messages   3. block I\'d go with (2), but push a final message to the ring buffer saying  , and then when the ring buffer is accepting messages again," push a message saying  . That makes it very clear to anyone reading the log that messages were dropped between timestamp A and timestamp B.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,2,2018-05-09 14:51:21,135.63,,,1,"b""b' Concept ACK!  Agree with @jnewbery regarding the open questions.  Benchmarks would be interesting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,3,2018-05-09 14:51:21,29.38,,1,,"b'b"" Wouldn\'t blocking be the status-quo and thus preferable for now?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,4,2018-05-09 14:51:21,132.88,,1,,"b'b"" I\'ve pushed changes that address @donaloconnor\'s good feedback (thanks"," Donal).  Still trying to decide what to do re: blocking vs. dropping messages; I\'m inclined towards the approach that @jnewbery suggests since it seems to be the safest.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,5,2018-05-09 14:51:21,1105.85,,1,,"b'b"" Thanks for the thorough review and good feedback here", @skeees. I\'ll address most of your comments in an upcoming push.  Sadly, the benchmarks aren\'t looking good on this one. Either my implementation of the ringbuffer is dog slow or this Concept is eminently NACKable. Doing an IBD to height 250,000 from one (chain-synced) virtual machine to another (unsynced) over my local network, this PR performed roughly 77% _slower_ than master (9m31s vs. 16m57s). That\'s a baffling deficit but I\'ve been able to reproduce it consistently.  I\'m going to try applying @TheBlueMatt\'s previous work url  to master and see if that performs any better. If it doesn\'t," I\'m going to just abandon async logging and continue work on a periodic benchmarking system.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,6,2018-05-09 14:51:21,19.9,,1,,"b'b"" I\'d do some profiling / tweaking before you abandon this entirely. I\'d think this should be at a minimum equivalent and potentially substantially faster than the current way things are logged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,7,2018-05-09 14:51:21,223.73,,1,,"b'b"" @TheBlueMatt\'s patch url  is better than mine"," but still a minute (i.e. 10%) slower than on an SSD:  ###  ###  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,8,2018-05-09 14:51:21,1069.77,,1,,"b""b' I was curious about the unexpectedly slow performance and tried something slightly different  url its a bit messy", but good enough for benchmarking which seems to suggest it performs slightly better than the current logging," especially if you give it short workloads (e.g. do a reindex w a stopatheight of 150k) though I imagine this effect gets washed away if you did e.g. a full IBD.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,9,2018-05-09 14:51:21,432.03,,,1,"b'b"" Nice", @skeees! That approach performs the best so far in terms of async logging implementations," though it\'s still roughly on par with master in my benchmark:   (the core dump is just an unclean shutdown of the logging thread)  @skeees suggested some ideas for further improvements on his draft which he or I may fool around with.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,10,2018-05-09 14:51:21,1369.03,,,1,"b""b' I cleaned this up a bit more and updated my branch: url  (still does not shutdown cleanly)  For benchmarks like the below (a reindex of 1st 100k blocks)"," I see a substantial improvement that slowly fades away and longer duration things (e.g. a large IBD) is effectively equivalent which suggests this may have some performance benefit for short bursty stuff that generates lots of logs '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,11,2018-05-09 14:51:21,101.65,,1,,"b'b"" I think I\'m giving up the ghost on this one. I\'ve taken @skeees\' latest work", fixed shutdown, and simplified the code a bit, but I still can\'t get benchmarks to show improvement.  Below is a round of three reindexes to height 100,000:  ### master url  ### this branch  url  ### skeees version url  Can\'t tell what\'s going on with those last two runs.  In any case, I don\'t think the numbers here justify the complexity of this changeset. It\'s surprising to me that we aren\'t seeing more improvement, but I\'ve got other stuff to do. I\'m going to abandon this PR for now," but if anyone wants to pick it up they\'re welcome to.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,closed,2018-05-21 20:32:23,341.03,2,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,12,2018-05-09 14:51:21,9.65,,,1,"b""b' I would like to thank you for doing this experimentation @jamesob. Negative results give insights too. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,13,2018-05-09 14:51:21,1051.72,,1,,"b""b' Reopening because @skeees has some interesting bench results...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,reopened,2018-05-23 14:13:45,1061.37,2,9,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,14,2018-05-09 14:51:21,26.45,,1,,"b'b"" wrote a quick benchmarking script here: url  It compares the different logging approaches mentioned above specifically a reindex and and ibd up to a fixed height  Some sample results below (we\'ve now had a couple of independent reproductions across a couple of different machines) and the latest commit on this pr is consistently faster than existing implementations for microbenchmarks (100k blocks) and equivalent if you change height in the script to a larger number (e.g. if you set in the script)  I think", given the below, there\'s decent evidence that this will improve performance for bursty things," and is worth pursuing. A couple things still need to be cleaned up (shutdown mostly)  (total is wall clock time)  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,15,2018-05-09 14:51:21,154.98,1,,,"b""b' @skeees Is the base case \\xe2\\x80\\x93 i.e. before this PR?  Do you know roughly how many log messages that were printed during the reindex and ibd rounds respectively?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,16,2018-05-09 14:51:21,17.35,,,1,"b'b"" yeah exactly master is a recent master (6916024768ec57a00f54224640ab4e4871d2a30a)", and then i took matt\'s and my+jamesob\'s changes and rebased on top of that master those are the 3 cases. you should be able to run that script if you wanna reproduce  good question looks like the logs were ~150MB each run," 1.25mm lines""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,closed,2018-07-22 23:49:27,575.7,3,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,17,2018-05-09 14:51:21,376.93,,1,,"b""b' The last travis run for this pull request was 60 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,reopened,2018-07-22 23:49:28,0.02,3,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,18,2018-05-09 14:51:21,827.43,,1,,"b""b' Benchmarking with bitcoinperf shows a speedup of 4.6% on IBD up to height 200","000 with this change ([details here]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,19,2018-05-09 14:51:21,319.0,1,,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #14209 (logging: Replace LogPrint macros with regular functions by MarcoFalke)* #13088 (Log early messages with -printtoconsole by ajtowns) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,20,2018-05-09 14:51:21,921.72,1,,,b'b\'  How about (4)  Store a sequence number,  always overwrite.  When reading out," notice when there were missed messages via gaps in the sequence number and log ""X missed log entries"".  Aside", benchmarking on the first 100k blocks is something I\\\'d strongly advise against. It\\\'s an almost completely different load than reality. The first couple hundred thousand blocks are almost completely empty, so tests against them aren\\\'t much different than a purely synthetic bench_bitcoin thing. If you\\\'re doing a lot of this sort of testing, its useful to bring a node up to height 450k, stop it, back it up and benchmark reindexing up to 500k.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,21,2018-05-09 14:51:21,1391.38,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,22,2018-05-09 14:51:21,370.8,,1,,"b'b""  That sounds much more reasonable. I\'ll rerun benches on that part of the chain in the next few weeks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,23,2018-05-09 14:51:21,282.58,,1,,"b'b"" There hasn\'t been much activity lately and the patch still needs rebase", so I am closing this for now. Please let me know when you want to continue working on this," so the pull request can be re-opened.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,closed,2018-12-14 20:22:24,1232.93,5,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13200,closed,-,-,-,5,15,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,opened,2018-05-09 18:26:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,title,2018-05-09 18:26:44,00:00,,1,,"b""b' Faster sigcache nonce'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,body,2018-05-09 18:26:44,00:00,,1,,"b'b"" This PR replaces nonces in two places with pre-salted hashers.  The nonce is chosen to be 64 bytes long so that it forces the SHA256 hasher to process the chunk. This leaves the next 64 (or 56 depending if final chunk) open for data. In the case of the script execution cache", this does not make a big performance improvement because the nonce was already properly padded to fit into one buffer, but does make the code a little simpler. In the case of the sig cache, this should reduce the hashing overhead slightly because we are less likely to need an additional processing step.  I haven\'t benchmarked this," but back of the envelope it should reduce the hashing by one buffer for all combinations except compressed public keys with compact signatures.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,closed,2018-07-22 23:49:24,322.67,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,reopened,2018-07-22 23:49:25,0.02,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,1,2018-05-09 18:26:44,28.75,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15192]url  (Add missing cs_main locks in ThreadImport(...)/Shutdown(...)/gettxoutsetinfo(...)/InitScriptExecutionCache(). Add missing locking annotations. by practicalswift)* [#13868]url  (Remove unused fScriptChecks parameter from CheckInputs by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,2,2018-05-09 18:26:44,531.87,,,1,"b""b' Benchmarks would be welcome.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,closed,2019-04-28 19:11:45,1162.33,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,3,2018-05-09 18:26:44,924.42,,1,,"b""b' The last travis run for this pull request was 279 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,reopened,2019-04-28 19:11:47,0.03,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,4,2018-05-09 18:26:44,315.8,,1,,"b""b' This will be closed due to inactivity in two weeks'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,5,2018-05-09 18:26:44,828.42,,1,,"b""b' Closing for now. Let me know when you want this reopened to work on it again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,closed,2019-05-07 14:15:59,1144.2,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,6,2018-05-09 18:26:44,307.53,,,1,"b""b' This seems like an obvious (minor) win.  It does need to be benchmarked", but it could just be an informal test," not some benchmark tool checked in.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,7,2018-05-09 18:26:44,58.43,,1,,"b""b' The tests were failing"," so at the very least this needs to be fixed:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,reopened,2019-05-07 20:21:58,365.98,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,8,2018-05-09 18:26:44,19.97,,,1,"b'b"" Oddly"," pruned IBD (500_000 505_000) comparison indicates this PR slightly slower than master. Maybe I\'ll try again after a rebase?  ![nonce ibd local 500000 505000 dbcache=2048]url #### faster-sigcache-nonce vs. master (absolute) |        name        | iterations | faster-sigcache-nonce  |     master       1 | 125.9031 (\\xc2\\xb1 0.0000)    | 135.5557 (\\xc2\\xb1 0.0000)   -usage      |    1 | 700992.0000 (\\xc2\\xb1 0.0000)   | 647144.0000 (\\xc2\\xb1 0.0000)  =2048     |    3 | 472.4958 (\\xc2\\xb1 2.4356)    | 439.0951 (\\xc2\\xb1 2.0998)   =2048.mem-usage |    3 | 2434952.0000 (\\xc2\\xb1 2700.1412) | 2417438.6667 (\\xc2\\xb1 1709.0577) |  #### faster-sigcache-nonce vs. master (relative) |        name        | iterations | faster-sigcache-nonce | master     1 |       1.000 | 1.08  -usage      |    1 |       1.083 | 1.00  =2048     |    3 |       1.076 | 1.00  =2048.mem-usage |    3 |       1.007 | 1.00 |""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,9,2018-05-09 18:26:44,28.35,,,1,"b""b' Rebased -go ahead and retry!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,10,2018-05-09 18:26:44,172.28,,1,,"b'b"" Irrelevant nit:  I\'d recommend just zerofilling the input rather than calling getrand again. 256-bits is more than then enough (and less wouldn\'t make getrand any faster).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,11,2018-05-09 18:26:44,398.87,,,1,"b'b"" Current revision fails to build. Benched the rebase and didn\'t see much difference between master and this branch"," though I don\'t like how much variance there was so I\'m going to run again once this compiles.  ![ibd local 500000 505000 dbcache=2048]url  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,12,2018-05-09 18:26:44,107.45,,1,,"b""b' fixed build issue; travis needs to be kicked @MarcoFalke '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,13,2018-05-09 18:26:44,138.78,,1,,"b""b' kicked travis"," @jamesob needs to be kicked'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,14,2018-05-09 18:26:44,139.9,,1,,"b'b"" I\'d prefer if the commits were squashed"," so that git bisect would\'t break on half of them""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,15,2018-05-09 18:26:44,146.58,,1,,"b""b' I can squash them down to one commit"," unless you prefer the original two?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,16,2018-05-09 18:26:44,964.08,,,1,"b'b"" One commit is fine. Makes it trivial to see that bisect won\'t break.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,17,2018-05-09 18:26:44,1036.88,,,1,"b""b' Yeah I need a good kick once in a while.  Benching shows this as being negligibly slower than master.  ![ibd local 500005 505000 dbcache=2048]url ### faster-sigcache-nonce vs. master (absolute) |       bench name       |  x  | faster-sigcache-nonce  |     master    =2048     | 1 | 310.3099 (\\xc2\\xb1 0.0000)   =2048.mem-usage | 1 | 2459212.0000 (\\xc2\\xb1 0.0000)   =2048     | 2 | 323.1098 (\\xc2\\xb1 4.7144)    | 319.6353 (\\xc2\\xb1 1.7855)   =2048.mem-usage | 2 | 2457362.0000 (\\xc2\\xb1 1446.0000) | 2464301.3333 (\\xc2\\xb1 5965.4940) | ### faster-sigcache-nonce vs. master (relative) |       bench name       |  x  | faster-sigcache-nonce | master  =2048     | 1 |      1.00  =2048.mem-usage | 1 |      1.00  =2048     | 2 |      1.01 |  1.000  =2048.mem-usage | 2 |      1.00 |  1.003 | '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,18,2018-05-09 18:26:44,1286.67,,1,,"b""b' The code is only run when fScriptCheck (see url You might want to check height=[565k-575k]'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,19,2018-05-09 18:26:44,117.83,,1,,"b""b' Are you able to just look at the time spent in connect block as opposed to the aggregate time. Thats the time we reasonably care about"," the total time is not granular enough'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,20,2018-05-09 18:26:44,164.58,1,,,"b'b"" If it\'s making total time worse though", that suggests either we\'re suffering measurement error or something interesting is going on.  Indeed," this only applies where scriptchecks are taking effect.  Use assumevalid=0 ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,21,2018-05-09 18:26:44,1143.32,,,1,"b'b"" Latest bench with is consistent with previous results: basically no difference between this and master. I think the only way to sensibly proceed on this is if someone comes up with an actually-relevant microbench that I can measure. I ran the microbenches on this last run", but it wasn\'t clear to me which bench was actually worth looking at," and the total runtime was swamped by (spurious?) prevector differences.  NACK from me until we come up with a clear way of showing perf improvements.  ![ibd local 500000 505000 dbcache=2048]url  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,22,2018-05-09 18:26:44,1178.3,,1,,"b""b' Could we remove the caching if it has no impact with noassumevalid (other than code complexity)?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,23,2018-05-09 18:26:44,1209.67,,1,,"b""b' I guess the only way to see a difference is to populate a mempool and then create a block with and without the cache enabled?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,24,2018-05-09 18:26:44,1268.12,,1,,"b""b' @jamesob are the times you are showing total time or just time inside or block  inputs?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,25,2018-05-09 18:26:44,1272.15,,1,,"b""b' Total time'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,26,2018-05-09 18:26:44,1319.6,,1,,"b""b' It should be fairly easy to pull out the validation times from the debug log and compare those.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,27,2018-05-09 18:26:44,1323.98,,1,,"b""b' See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,28,2018-05-09 18:26:44,1351.05,,1,,"b'b"" rebased", squashed, applied @gmaxwell\'s nit (was easiest to just write the nonce twice rather than write zeros," which would have added more lines).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13204,open,-,-,-,1,21,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,opened,2018-05-13 07:51:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,title,2018-05-13 07:51:12,00:00,,1,,"b""b' Failing to build"," '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,body,2018-05-13 07:51:12,00:00,,1,,"b'b"" I\'m building from source v0.16.0 on Ubuntu 17.10 I cloned the repo", checked out on v0.16.0," ran followed by  the command however produces the following error:   from the output of make command the errors started here: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,1,2018-05-13 07:51:12,7.17,,1,,"b""b' Did you try and compile it again?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,2,2018-05-13 07:51:12,0.98,,1,,"b""b' @ken2812221 yeah I did The error persists'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,3,2018-05-13 07:51:12,14.92,,1,,"b""b' Can you show your ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,4,2018-05-13 07:51:12,4.28,,1,,"b""b' []url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,5,2018-05-13 07:51:12,19.58,,1,,"b""b' Can you try run  . I think you have two version of protobuf'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,6,2018-05-13 07:51:12,65.65,,1,,"b'b"" @ken2812221 nope", didn\'t work," same error Should I be removing one version to remove ambiguity?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,closed,2018-05-13 09:43:47,112.58,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,reopened,2018-05-13 09:43:52,0.08,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,7,2018-05-13 07:51:12,1.43,1,,,"b""b' oops"," sorry closed by mistake :sweat_smile:'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,8,2018-05-13 07:51:12,7.68,,1,,"b""b' I did and got '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,9,2018-05-13 07:51:12,9.13,,1,,"b""b' The newest official version for 17.10 is [3.0.0]url  so I think you should get rid of version 3.2.0 and install official pack'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,10,2018-05-13 07:51:12,100.32,,,1,"b""b' @ken2812221 It worked! I had to perform before building. I used the configure command you suggested: Thanks!  What does before ./configure do ?  Should I still be replacing protoc 3.2.0 with 3.0.0 ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,closed,2018-05-13 11:42:21,118.48,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,11,2018-05-13 07:51:12,534.25,,1,,"b""b' had the same problem.  Running Also fixed it. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13225,closed,-,-,-,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,opened,2018-05-16 19:49:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,title,2018-05-16 19:49:16,00:00,,1,,"b""b' Add tests to SingleThreadedSchedulerClient() and document the memory model'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,body,2018-05-16 19:49:16,00:00,,,1,"b'b"" As discussed in #13023 I\'ve split this test out into a separate pr  This test (and documentation update) makes explicit the guarantee (previously undefined", but implied by the \'SingleThreaded\' in  ) that callbacks pushed to the obey the single threaded model for memory and execution specifically, the callbacks are executed fully and in order, and even in cases where a subsequent callback is executed by a different thread, sequential consistency of memory for all threads executing these callbacks is maintained.  Maintaining memory consistency should make the api more developer friendly especially for users of the validationinterface. To the extent that there are performance implications from this decision, these are not currently present in practice because all use of this scheduler happens on a single thread currently," furthermore the lock should guarantee consistency across callback executions even when callbacks are executed by multiple threads (as the test does).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,1,2018-05-16 19:49:16,1.0,,1,,b'b\' Can you also note the memory model in validationinterface," since that\\\'s the ""real"" API here.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,2,2018-05-16 19:49:16,30.65,,1,,"b""b' Updated'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,3,2018-05-16 19:49:16,208.4,,1,,"b""b' The last travis run for this pull request was 65 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,closed,2018-07-22 23:49:19,240.05,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,reopened,2018-07-22 23:49:20,0.02,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,4,2018-05-16 19:49:16,1435.5,,1,,"b""b' Updated to address @TheBlueMatt (diff is a comment change only)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,5,2018-05-16 19:49:16,1065.32,,1,,"b""b' Test failure was unrelated and now resolved'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,6,2018-05-16 19:49:16,18.33,,1,,"b""b' re-utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,closed,2018-08-01 00:54:01,64.68,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13247,closed,-,-,-,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,opened,2018-05-17 05:53:58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,title,2018-05-17 05:53:58,00:00,,1,,"b""b' uint256: Remove unnecessary  dependency'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,body,2018-05-17 05:53:58,00:00,1,,,"b""b' This is an alternative to #13242 which keeps the part", but moves the dependency into as a function outside of  .  **Reason:** this change will remove dependencies for to  ,  , and  .  This PR removes the need to update tests to be endian-aware/-independent, but keeps the (arguably dubious) part (which was only introduced to fix the tests," not for any functionality).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,1,2018-05-17 05:53:58,12.77,,1,,"b'b"" All the calls are relative to and  "," how about putting it higher up?  I\'m not crazy about the template approach because it\'s overly general and doesn\'t guarantee that there are 64 bits there to read.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,2,2018-05-17 05:53:58,13.97,,1,,"b'b""  Yeah", but a uint256 does not guarantee it is random, either, so you still have to use this cautiously, even before this patch.  Putting it in may be a better idea," for sure. I\'ll try that and see what it looks like.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,3,2018-05-17 05:53:58,16.3,,1,,"b""b' @Empact Changed to your suggested approach. No more template", and code looks cleaner. Only gotcha here is people may be tempted to which will do  , instead of  . Considering the limited use," I think that gotcha is acceptable.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,4,2018-05-17 05:53:58,4.45,,,1,"b""b' Nice"," looks much better IMO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,5,2018-05-17 05:53:58,12.4,,1,,"b""b' utACK 015e0f7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,6,2018-05-17 05:53:58,4.37,1,,,"b'b"" I\'d close #13242 in favor of this as this offers endianness consistency", test stability," and better code organization.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,7,2018-05-17 05:53:58,4.93,,1,,"b""b' Yeah", it got too big for the desired effect. I *do* want to get rid of the unnecessary endianness consistency, though," but I think rewriting those tests to be a bit more useful is a necessary middle-step.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,8,2018-05-17 05:53:58,1006.07,,1,,"b""b' The last travis run for this pull request was 66 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,closed,2018-07-22 23:49:13,1075.25,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,reopened,2018-07-22 23:49:13,0.0,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,9,2018-05-17 05:53:58,1145.52,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14624]url  (Some simple improvements to the RNG code by sipa)* [#13462]url  (Simplify common case of CHashWriter and drop SerializeHash by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,10,2018-05-17 05:53:58,392.55,,1,,"b""b' utACK 361ecbf3e9ffe83800e845426b6cc835267c1932'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,11,2018-05-17 05:53:58,27.4,,1,,"b""b' utACK 361ecbf3e9ffe83800e845426b6cc835267c1932'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,12,2018-05-17 05:53:58,948.23,,1,,"b""b' re-utACK 361ecbf'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,13,2018-05-17 05:53:58,380.33,,1,,"b""b' re-utACK 93baaf9'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,14,2018-05-17 05:53:58,1171.17,,1,,"b""b' re-utACK 93baaf9c3e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,15,2018-05-17 05:53:58,893.1,,1,,"b""b' utACK bf2e010.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,16,2018-05-17 05:53:58,480.78,,1,,"b""b' utACK bf2e010973'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,17,2018-05-17 05:53:58,125.35,,1,,"b""b' re-utACK bf2e010'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,closed,2018-11-30 17:49:54,1080.68,2,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13258,closed,-,-,-,2,16,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,opened,2018-05-18 00:14:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,title,2018-05-18 00:14:41,00:00,,1,,"b""b' [moveonly] privatize SignatureExtractorChecker'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,body,2018-05-18 00:14:41,00:00,,1,,"b""b' ~If we add a CTxIn constructor to SignatureData", then constructing the SignatureData directly is no more verbose than calling DataFromTransaction," and grants the caller additional flexibiliy in how to provide the CTxIn.~  A simple change to enhance encapsulation.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,1,2018-05-18 00:14:41,3.12,,1,,"b""b' utACK 61f178b.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,2,2018-05-18 00:14:41,546.72,,1,,"b""b' Rebased for #13269'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,3,2018-05-18 00:14:41,1127.82,,1,,"b""b' ~This has developed into a bit of a follow-up on #13425. @achow101 would you take a look?~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,4,2018-05-18 00:14:41,195.62,,1,,"b""b' utACK 4012fe1be85ee00d55951a5bb69bd451159a9ea0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,5,2018-05-18 00:14:41,1285.83,,1,,"b""b' Rebased for #13557'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,6,2018-05-18 00:14:41,794.65,,1,,"b""b' utACK a0a0df379519bef6db33f69ed668d9c251d0dfe7'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,closed,2018-09-07 18:09:53,1075.2,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,reopened,2018-09-07 18:10:02,0.15,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,7,2018-05-18 00:14:41,45.9,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14079]url  (Implement sighash cache in CHECKMULTISIG by jl2012)* [#13360]url  ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,8,2018-05-18 00:14:41,913.12,,1,,"b""b' Rebased. eases review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,9,2018-05-18 00:14:41,157.78,,1,,"b""b' utACK 73aaf4ecf825a4d18c802ca5dd3856ce9096915e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,10,2018-05-18 00:14:41,1222.5,,1,,"b""b' This has 3 utACKs"," 1 current.  2 conflicting PRs: #14079: no ACKs #13360: 1 concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13266,open,-,-,-,0,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,opened,2018-05-18 00:27:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,title,2018-05-18 00:27:57,00:00,,1,,"b""b' Consistently bounds-check  access'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,body,2018-05-18 00:27:57,00:00,,1,,b'b\' ~~An out of range transaction output is invalid / an error condition, so let\\\'s blow up rather than skip the output or default.~~  I audited indexing into  looking for unchecked ~~or quietly handled bounds errors~~ and converted them to throw on out of bounds, because noisy failure is better than silent failure.  ~~Disclaimer: I\\\'m not that familiar with the role that out of bounds outputs and inputs might play in the network," apart from the SIGHASH_SINGLE case commented below which was established in the test. Please do educate me if I\\\'m misguided on this. If there are more ""valid but invalid"" cases we should get them under test.~~\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,1,2018-05-18 00:27:57,21.27,,1,,"b'b"" I\'d suggest dropping the third commit"," which at first glance would seem to introduce a number of vulnerabilities.  I agree though that it would be useful to add tests that would fail if that third commit were introduced.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,2,2018-05-18 00:27:57,15.08,,,1,"b'b"" @sdaftuar thanks", by vulnerabilities, I suppose you mean there is a risk of maliciously-crafted transactions bringing down the recipient node by triggering the throws, is that right? I hadn\'t been considering the changes through that lens," but I can take a second look with that in mind.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,3,2018-05-18 00:27:57,462.48,,1,,"b'b"" @sdaftuar I removed the third commit. Seems the remaining cases should be safe given they\'re already asserted against or otherwise assumed to be safe"," such that the invalid values are not contended with at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,4,2018-05-18 00:27:57,435.75,,1,,"b'b"" Concept ACK on clarifying bounds", but I really don\'t like the use of exceptions replacing explicit prior checks. I understand that they accomplish the same thing, but IMO it is far less safe because it equates checks that are allowed to fail with those that logically never should. It also turns potential compile-time checks into guaranteed runtime ones.  Lastly, it really harms code clarity. [This one]url  for example," is a significant regression IMO.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,5,2018-05-18 00:27:57,35.77,,1,,"b'b\'  According to url  this exception type ""reports errors that are a consequence of faulty logic within the program such as violating logical preconditions or class invariants""", so it doesn\\\'t seem switching from to in c++ should be taken to indicate any change in preconditions or intent.  But there may still be practical reasons to favor throwing exceptions explicitly or using instead of relying on  . For example, Matt thought it was important to assert instead of raising an exception here: url  to prevent errors from being caught in generic catch blocks.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,6,2018-05-18 00:27:57,62.48,,,1,"b'b""  This seems to only be a philosophical distinction to me. Yes", maybe  isn\'t designed to caught by normal program code, and can thus be treated similarly to an assertion failure but that\'s not the case in our code. We have 54 cases in our codebase, some of which will happily continue after catching an out of bounds error.  Perhaps we should work on making those catch statements be more specific and guarantee they can\'t catch  s? Without that," I\'m very scared about replacing asserts with exceptions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,7,2018-05-18 00:27:57,121.18,1,,,"b'b"" Ok my earlier message (now removed) related to a whitespace error we only have 6 blocks without a space separating the catch and parens"," but we have 54 const std::exception catches and 71 if you include  . So the behavior change concern is fair. I\'ll drop the first commit as well.  relevant regex:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,8,2018-05-18 00:27:57,5.08,,1,,"b""b' Checks are now strictly additional.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,9,2018-05-18 00:27:57,28.15,,1,,"b""b' Removed a check relative to   where the value was locally guaranteed to be valid.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,closed,2018-07-22 23:49:08,1401.18,1,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,10,2018-05-18 00:27:57,213.95,,1,,"b""b' The last travis run for this pull request was 65 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,reopened,2018-07-22 23:49:09,0.02,1,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,11,2018-05-18 00:27:57,690.58,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,closed,2018-09-15 18:07:01,1097.87,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13268,closed,-,-,-,1,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,opened,2018-05-18 12:56:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,title,2018-05-18 12:56:41,00:00,,1,,"b""b' [qt] CoinControlDialog amount header display unit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,body,2018-05-18 12:56:41,00:00,,1,,"b'b\' The coin control table currently only says ""Amount"". This makes it more consistent with other tables by showing the current display unit like ""Amount (BTC)"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,1,2018-05-18 12:56:41,114.12,,1,,"b""b' utACK bced272. Is 20px more enough?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,2,2018-05-18 12:56:41,188.15,,1,,"b'b\' 20px is just enough to fit the widest unit ""Amount (mBTC)"" on Ubuntu. But I\\\'m not sure if there is some case where it doesn\\\'t fit", since different operating systems or window managers seem to have different font sizes.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,closed,2018-07-22 23:49:05,652.4,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,reopened,2018-07-22 23:49:06,0.02,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,closed,2019-04-28 19:11:42,1162.6,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,3,2018-05-18 12:56:41,72.77,,1,,"b""b' The last travis run for this pull request was 279 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,reopened,2019-04-28 19:11:43,0.02,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13276,open,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,opened,2018-05-19 13:59:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,title,2018-05-19 13:59:15,00:00,,1,,"b'b\' [qt] Removed ""Pay only the required fee"" checkbox\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,body,2018-05-19 13:59:15,00:00,,1,,"b'b\' This removes the ""Pay only the required fee"" checkbox from the custom transaction fee section in the SendCoinsDialog. Instead", a minimum value will be enforced on the custom fee input box.  Before, a user could enter a fee below the minimum required fee but upon pressing send the resulting transaction would still pay the minimum fee. Now, if a user enters a value below the minimum fee the custom fee input box will be set to the minimum fee.  Where the checkbox used to be, there is now a more general warning about low fees. The tooltip is still the same as before.  ![image]url  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,1,2018-05-19 13:59:15,53.27,,,1,"b""b' Any idea why the Travis build failed after changing to qBound?  Edit: Nevermind! Seems to have passed now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,2,2018-05-19 13:59:15,1069.0,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,3,2018-05-19 13:59:15,885.17,,,1,"b""b' It would be nice to see a previous screenshot. I forgot to test this \\xf0\\x9f\\x99\\x84'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,4,2018-05-19 13:59:15,22.35,,1,,"b""b' The last travis run for this pull request was 64 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,closed,2018-07-22 23:49:02,589.78,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,reopened,2018-07-22 23:49:03,0.02,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,5,2018-05-19 13:59:15,978.4,,,1,"b""b' @GreatSock Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,6,2018-05-19 13:59:15,1108.75,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,7,2018-05-19 13:59:15,566.27,,,1,b'b\' Concept ACK, less UI clutter is great, and it gets rid of a duplicate tooltip.  Also thanks for switching to  .  To clarify the minimum fee a bit, as well as make way for a potential future decrease," maybe change the tooltip from: To: Removing the checkbox breaks horizontal alignment. The text needs be aligned with ""Confirmation time target"":   @GreatSock if you don\\\'t have time for this in the next month or so", I can take it over.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,8,2018-05-19 13:59:15,758.33,,1,,"b""b' @hebasto said on IRC: Not yet"," feel free to and I can review it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,9,2018-05-19 13:59:15,44.25,,1,,"b'b"" I\'ll close this then. hebasto can cherry-pick and open a new PR when ready.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,closed,2018-10-30 09:25:02,575.98,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13280,closed,-,-,-,0,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,opened,2018-05-21 23:17:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,title,2018-05-21 23:17:15,00:00,,1,,"b'b\' wallet / qt: confirmed transaction labeled ""open""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,body,2018-05-21 23:17:15,00:00,1,,,b'b\'   When syncing after a period of being offline, a transaction that the wallet received during the offline period was seen in a block," and the transactions tab in the QT ui showed the transaction.  However the transactions was not shown as ""confirmed"" but instead ""open"".  Also", the number of confirmations seems to be incorrect.  I expected the clock icon that fills in as it downloads more blocks, followed by a check mark once it sees 6 confirmations.  Instead there was no icon," and a mouse-over showed ""open for next 130 blocks"".  This confused me as the transaction wasn\\\'t a coinbase tx", didn\\\'t use op_csv or anything like that.  The transaction did have a locktime, but the bitcoind wallet has been setting that for a while.  Eventually the icon switched directly to a check-mark, and a mouse-over showed the number of confirmations.  However, the number of confirmations is too low by about 30 (a bit of a guess as I get tx details and then check the block height the UI reports it\\\'s synced to).  The receiving address was a bech32 native segwit v0 address, which may be related.  I asked @theuni and he pointed out code around here: url which looks related; the ui may not be updating finality properly. system: 0.16.0, linux, downloaded from , checked gpg sig.  Ubuntu 16.04, laptop hard drive.  This is not a huge issue but I think it could be confusing to users as it indicates that the transaction is not confirmed even though it really is.  The UI eventually displays confirmed though. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,1,2018-05-21 23:17:15,91.07,,1,,b'b\'  I assume the transaction has a lock time specified as block height. Thus, when receiving the transaction through a block," its lock time must be that block\\\'s height or less. My understanding is that only a reorg that excludes this tx could display the transaction as ""open"""," since other interfaces () reject such ""open"" transactions with  . (Also", unrelated to this issue report," the Bitcoin Core wallet wouldn\\\'t create ""open"" transactions", c.f. in )  I suggest to check if shows any valid forks just to rule out the possibility of a reorg. (Just noting that a 130 block reorg that went unnoticed seems very unlikely to me) I suggest to check if shows the same number of confirmations as the gui and if the time is different from the blocktime and timereceived. Further gettransaction returns you a hex, which you can put into to compare the locktime against the other times.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,closed,2018-05-22 02:43:27,206.2,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,reopened,2018-05-22 02:43:50,0.38,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,2,2018-05-21 23:17:15,116.03,,,1,"b'b"" The bitcoin-qt node is now synced up to the current block height", and mouse-over displays the correct number of confirmations. Looking at  I see only the normal message.  This tx was around height 522030, and I don\'t think there were any reorgs around then; the node displaying the UI bug was directly connected to another node on a server I control which was synced up, so I\'m quite sure there were no reorgs or anything strange being sent to the QT node.  I think it\'s a QT UI only bug as I haven\'t seen anything weird in the CLI output or log files. Even during sync when I checked with in the QT console it looked fine," and showed confirmations.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,closed,2019-01-15 16:40:06,836.27,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13299,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,opened,2018-05-23 10:55:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,title,2018-05-23 10:55:07,00:00,,1,,"b""b' Report progress in ReplayBlocks while rolling forward'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,body,2018-05-23 10:55:07,00:00,,1,,"b""b' Fixes #13303.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,1,2018-05-23 10:55:07,7.08,,1,,"b""b' Should only report each 5% for instance?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,2,2018-05-23 10:55:07,29.57,,1,,"b""b'   has an implementation that only reports every ~~1%~~ 100 blocks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,3,2018-05-23 10:55:07,6.43,,1,,"b""b' @Empact IMO the receiver is the one that should throttle", because he is the one that knows the resolution. Anyway, looks like reports progress each 100 blocks," or am I wrong?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,4,2018-05-23 10:55:07,16.08,,1,,"b'b"" Yep you\'re right on  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,5,2018-05-23 10:55:07,559.22,,,1,"b'b"" I think it should report every 1% change. But since changes less than 1% won\'t be visible"," maybe check if the percentage have actually changed before updating. Calling 100 times should be fine right?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,6,2018-05-23 10:55:07,7.68,,1,,"b'b"" I don\'t mind doing something like that... But how do you know? What if you have a progress bar with", for instance," 200px width? It should report 0.5%.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,7,2018-05-23 10:55:07,12.93,,1,,"b'b"" Right now seems to take an integer which means 1% changes won\'t be visible.  But I agree: should instead take a float(maybe even between 0 and 1) and then check if it should update by itself. This would probably be better since it can then choose to display the progress however it wants.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,8,2018-05-23 10:55:07,5.32,,1,,"b""b' Actually I was thinking in something like  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,9,2018-05-23 10:55:07,9.12,,1,,"b""b' I would personally prefer giving it a float since I feel like it would be more flexible. But then again"," why not do both? We could just overload the function.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,10,2018-05-23 10:55:07,650.52,,1,,"b""b' What is the best test plan to test this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,closed,2018-07-22 23:48:57,773.83,0,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,11,2018-05-23 10:55:07,909.9,,1,,"b""b' The last travis run for this pull request was 60 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,reopened,2018-07-22 23:48:58,0.02,0,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,12,2018-05-23 10:55:07,400.33,,1,,"b""b' Anything left to do here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,13,2018-05-23 10:55:07,338.0,,1,,"b""b' utACK b16ab9af07f802cc769c2443df1c637e8e12ab80'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,closed,2018-09-13 12:08:11,739.22,0,14,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,14,2018-05-23 10:55:07,19.48,,1,,"b""b'  Not really\\xe2\\x80\\x94I think the most important thing to review here is that divide by zero never happens.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13310,closed,-,-,-,0,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,opened,2018-05-24 14:10:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,title,2018-05-24 14:10:56,00:00,1,,,"b""b' configurable ZMQ message limit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,body,2018-05-24 14:10:56,00:00,,1,,"b'b"" ZMQ has a default limit of 1000 buffered messages. When it hits the limit messages are dropped. This happens sometimes when a new block is found and ~2500messages ( 2.5MB) are send (almost) at once. 50-800 usually got lost on my (cheap) node. [ZMQ_SNDHWM]url  The PUBlisher limit",  SNDHWM, is disabled by setting it to 0. On very slow networks it might fill up memory a bit, but that is hardly noticeable since the queue is usually emptied in a few hundred milliseconds.  Same applies to the SUBscriber (although the bottleneck there is only the local processing, not the network throughput), so it would be good practice to set RCV_HWM to zero as well for some client script, although I was only able to hit the limit on the subscriber side after adding sleep(1) on every rawtx.  I\'ve tested for about a day and had a bunch of subscribers running on different computers, and not a single message got dropped. ( also while using swap and 100% cpu  ) I forced one subscriber to lag about 10000 messages , and they were still not dropped. I\'d appreciate it if others test their performance and load. You can just use this script and check for missing messages while bitcoind is running. (for testing max throughput, stop bitcoind for a while," then restart it; it will send lots of messages while syncing)  subscriber testscript: url   ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,1,2018-05-24 14:10:56,4.35,,1,,"b""b' Not sure about disabling the limit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,2,2018-05-24 14:10:56,3.6,1,,,"b""b' I think a viable long term alternative is replacing ZMQ with a stateless longpolling similar to #13262. Something like a where it idles if the newest block was requested. Seems to be much saner then hoping ZMQ messages arrive.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,3,2018-05-24 14:10:56,0.38,1,,,b'b\' @promag I tried a 10000 limit first," and that also works (for now). But the default of 1000 seems too low.  In older versions of ZMQ the default was ""no limit"" anyway. The queue is per SUBscriber", so if you have thousands of listeners to the node you might see some increase in memory usage.  I was not able to see an increase in memory usage on my system with 6 subscribers on different computers.  Unfortunately the setting is not for a limit in MB , that would have made it easier to configure.  every value now seems somewhat arbitrary, and it highly depends on how many subscribers are connected  -editI did some more testing and these peaks are about 3000messages and 3MB in size and happen when a block is found (or synced). So, in worst case scenario of a totally failing router or nic on your network the queue would grow at about 3MB per block.  So if I want to limit memory usage to 500Mb, the SNDHWM value should be 500000 / number of subscribers.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,4,2018-05-24 14:10:56,5.02,,1,,"b""b' Make it an option?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,5,2018-05-24 14:10:56,29.37,1,,,"b'b\' @FeedTheWeb Thanks for addressing this issue. Messages being dropped silently under normal circumstances when running with default settings sounds very confusing for the user.  Would it make sense to bump the limit to say 2 * ""expected maximum under normal operations"" instead of removing the limit?  That way we won\\\'t drop messages under normal circumstances while still getting the ""avoid going berserk"" safety that the hard upper limit is meant to provide.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,6,2018-05-24 14:10:56,7.07,,1,,"b'b\' What is the ""expected maximum under normal operations""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,7,2018-05-24 14:10:56,25.07,1,,,"b""b' @promag Sorry for being vague. I meant the maximum number of buffered messages that can be expected under normal operations :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,8,2018-05-24 14:10:56,9.02,,1,,"b'b"" @practicalswift reorgs and rescans will trigger the notifiers so I don\'t know if we should go that way. Also"," from the docs: IMO making this configurable is the best bet and ideally should be different per notifier.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,9,2018-05-24 14:10:56,919.62,,1,,"b""b' Ping @jmcorgan '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,10,2018-05-24 14:10:56,131.48,1,,,"b'b"" @promag", it could only be made configurable per socket (not per notifier), but tbh I don\'t see why that would be useful. @practicalswift the \'normal circumstances\' is not relevant here, this is only about peaks (with a duration of usually a few ms). In normal situations there never is a queue; the queue grows only when bitcoind pushes the messages faster then your network can handle (note: \'network\'," not client software the receiving zmq-socket has its own buffer).  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,11,2018-05-24 14:10:56,586.8,1,,,"b""b' I agree on having a config option to set this. The reason for leaving the default in the original implementation was to ensure that there were no performance impact or other side effects on bitcoind operation from malicious or poorly executing clients.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,12,2018-05-24 14:10:56,171.75,1,,,"b'b"" To elaborateZMQ\'s high watermark buffered message limit prevents the ZMQ sending process from blocking when downstream resources (network bandwidth) are insufficient to handle the message volume. (The remote end can detect this when sequence numbers get skipped.) This was originally chosen by design to be left at the default in order to be *conservative*enabling ZMQ notifications and connecting a client should *not* have any potential adverse impact on bitcoind operation.  I think allowing this behavior to be tuned via a command line or config file option", to set the numerical value of the high water mark, including turning it off, would be very useful for people relying on this interface. Unfortunately, it is a per-socket behavior and not per-notification," but that\'s the best that can be done.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,13,2018-05-24 14:10:56,1428.1,,1,,"b""b' Making this configurable seems like the way to go. And if it spikes around 3000 messages per new block"," raising the default to slightly higher than that (maybe 5000?) might be good as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,14,2018-05-24 14:10:56,1390.45,,,1,"b""b' I had 3 subscribers on commodity HW and they were missing packets (they were LND nodes) and desycing every 2-3 blocks. Since I applied this PR"," I can easily run 7-8 clients and not missing anything. Make it configurable or disable it. Great PR!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,15,2018-05-24 14:10:56,1438.55,,1,,"b""b' @FeedTheWeb Are you planning to update this to make this configurable?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,16,2018-05-24 14:10:56,701.22,,,1,"b""b' @jmcorgan ", we still need to agree on setting a different default value . (10k is reasonable," imo. But I would like others to test and see if this has any positive effect )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,17,2018-05-24 14:10:56,255.73,,1,,"b""b' Is there any way we can poll to see the actual usage? As I understand"," this is affected by the slowest peer?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,18,2018-05-24 14:10:56,12.9,,,1,"b""b' The ZMQ api is well documented. url ZMQ_HWM and ZMQ_SWAP could be configurable (advanced mode).  HWM default could stay at 1000 or be increased to 10000 SWAP could still default to 0 but it could be a good safety net for delicate operations  Let me know if you want me to give it a try or collaborate on this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,19,2018-05-24 14:10:56,167.08,,1,,"b""b' @reel no"," that is version 2.1 we use 4.*  and it does not use SWAP anymore. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,20,2018-05-24 14:10:56,20.25,,1,,"b""b' Correct"," I need a coffee fix.  Defaults were set to 1000 7 years ago...  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,21,2018-05-24 14:10:56,419.08,,1,,"b'b"" In addition to the individual comments above", there also needs to be some changes related to adding a new config option (documentation," mostly.) I suggest you do a \'git grep zmqpub\' from the top-level directory (above src) to see where this is necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,22,2018-05-24 14:10:56,9.3,,1,,"b'b"" pls improve the code if you have any suggestions. (I\'m not a C++ coder"," so my knowledge kinda ends here anyway)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,23,2018-05-24 14:10:56,1017.17,,1,,"b'b"" This would have needed a clean rebase for merge anyway"," so if you don\'t mind I\'ll just implement this from scratch in a new PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,24,2018-05-24 14:10:56,238.68,,,1,b'b\' @jmcorgan ,  it has a been a few months, and I have not seen your PR.  As I told you also in private, I welcome any improvement.  However," your comment:  ""ensure that there were no performance impact or other side effects on bitcoind operation from malicious or poorly executing clients"" tells me that you don\\\' t really understand how ZMQ works", since (when implemented correctly) these are completely separated processes.  Anyone with a basic knowledge of such messaging systems knows that the main goal of these  \\\'separation of concerns\\\'  (messaging systems) is to prevent having an impact on  processes (in this case, bitcoind). The performance of the client simply does not affect the server (bitcoind).  (again, not talking about network performance here,  as pointed out earlier).  From here it seems you wanted to claim ownership over this part of the code. Which fine with me really.(I don\\\'t even use my own name. take all the credit if you want...).  But now it seems any progress on this part is halted by you, for unknown reasons.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,25,2018-05-24 14:10:56,309.37,,1,,"b'b""  @FeedTheWeb if you need this then feel free to implement it"," I\'d review it too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,26,2018-05-24 14:10:56,1396.85,,1,,b'b\' @FeedTheWeb Your understanding of how to motivate others to do free work to your liking seems lacking.  You made a pull request, and when I reviewed and suggested simple changes that would be needed, you immediately gave up. I offered to do it, and when it wasn\\\'t done in the time frame you wanted," you then made odd claims about my level of understanding of something completely unrelated to either the feature needed or the feedback I gave you on your PR.  You\\\'re also saying that I want to ""claim ownership"" of this section of code. I\\\'ve done nothing of the sort", of course.  The code to allow the high water mark to be configurable is easy, and the choosing the default value is something that can be discussed here for consensus by interested parties. Again, if you want to contribute, feel free to continue what you started earlier, and be prepared to address feedback until those with merge rights deem it acceptable to introduce into the tree and maintain it thereafter.  Otherwise, your attitude is baffling and not very effective at bringing about the changes you want to see through the volunteer effort of other people.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,27,2018-05-24 14:10:56,1218.12,,1,,"b'b"" thanks for the reply", @jmcorgan  First of all, it is a volunteer project for me as well. Tbh, I\'m not even that interested in this change, but  the LND folks have been complaining about it for over a year, and it seems important, so I investigated the issue, made a case and provided evidence.  (Why? because I worked with ZMQ before, so I knew about this issue for some years already.  And I like to fix stuff.)  My task is to identify problems (not a popular thing to do, but someone has to do it). What I\'ve done is identifying a issue that was a big question-mark for some for years and provided evidence. I\'ve mentioned the issue a few times on different platforms, but it seems these kind of things do not communicate well in a chat. As a result, I wrote it down in a ticket, with proof, and some code.  I created some code only to make a case I don\'t claim any proficiency in C++  so I want others to improve it. It should be low-hanging fruit for everyone else. Over the last months I\'ve patiently waited and tried to contact you a few times (as have others) but never got a response. (that is just rude) I\'ve created the code to make it configurable, as suggested by some even though we all know that is pointless without figuring out FIRST what a functional HWM value should be anyway;  it doesn\'t even solve the issue, and no one who suggested it made a case for why it would solve anything...   I\'ve asked you (or anyone else) to suggest a better default HWM value; never got a reply. The reason why seems quite obvious: no one actually tested what the right value is on their system. The current \'1000\' is a arbitrary value," which doesn\'t make any sense when you think about it. (as a scientist) I ask you to defend why \'1000\' is the correct value ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,28,2018-05-24 14:10:56,241.5,,1,,"b'b"" @FeedTheWeb chillax bro", we\'re all in this together. i built on your work and, i believe, covered all of the feedback so far on my branch in one commit at url @jmcorgan does my commit cover your feedback? my changes create a configurable hwm option for each notification type. i left the default at 1000 since it\'s configurable and people that don\'t configure it get the current 1000 messages for all notification types.  ~~if my commit is good, you can use it here," or i can create a separate PR. it doesn\'t matter to me. EDIT: here\'s a diff link url ~~ moved to url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,29,2018-05-24 14:10:56,43.82,,,1,"b""b' Enough with the drama.  @mruddy can you please make a new PR referencing this one so we can ?  Good work everyone!  One a side note"," work done on the LND side to limit the amount of connections and broadcast internally really helped. This PR will really close this issue and prevent maintaining Bitcoin forks for many of us. Thanks again!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,30,2018-05-24 14:10:56,347.1,,1,,"b""b' @reel done url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,closed,2018-08-25 20:55:54,404.97,8,19,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,reopened,2018-08-25 20:55:55,0.02,8,19,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,31,2018-05-24 14:10:56,692.92,1,,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14060]url  (ZMQ: add options to configure outbound message high water mark, aka SNDHWM by mruddy) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,closed,2018-09-07 21:00:53,4.97,9,19,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,32,2018-05-24 14:10:56,128.27,,1,,"b""b' The last travis run for this pull request was 69 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,reopened,2018-09-07 21:00:55,0.03,9,20,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,33,2018-05-24 14:10:56,961.33,,1,,"b""b' Closed by #14060"," I guess.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,closed,2018-11-05 13:02:14,961.32,9,21,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,34,2018-05-24 14:10:56,5.35,,,1,"b""b' yes"," thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13315,closed,-,-,-,9,21,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,opened,2018-05-30 16:49:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,title,2018-05-30 16:49:33,00:00,,1,,"b""b'  Standard template for CHECKMULTISIG with 17~20 keys'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,body,2018-05-30 16:49:33,00:00,,1,,"b""b' Making CHECKMULTISIG with 17~20 keys standard. Trying to redo #11545 after #13194 is merged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,1,2018-05-30 16:49:33,5.4,,1,,"b""b' I think this should be conditional on the environment (and only enabled inside SegWit scripts).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,2,2018-05-30 16:49:33,8.02,,,1,"b""b' Out of interest", does the soft fork nature (or rather," change of policy only) of it means that will still count as 20 sigops ( ) ? As in here : url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,3,2018-05-30 16:49:33,30.28,,1,,"b""b' @sipa", I think legacy CHECKMULTISIG is always restricted to up to 3 keys," and P2SH is restricted by MAX_P2SH_SIGOPS'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,4,2018-05-30 16:49:33,1.7,,1,,"b'b"" @jl2012 I\'m aware"," but I\'m worried about situations were Solver is called on a script that isn\'t found in a transaction that already passed validation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,5,2018-05-30 16:49:33,0.18,,1,,"b""b' "," arbitrary scripts are already standard in witness v0....so this is only for wallet?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,6,2018-05-30 16:49:33,250.12,,1,,"b'b"" Yes they\'re already standard. The only thing preventing their use was wallet code.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,7,2018-05-30 16:49:33,1285.73,,1,,"b""b' @fivepiece", no," this has nothing to do with sigop counting. They are still counted as 20'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,closed,2018-07-29 15:16:15,1346.7,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,8,2018-05-30 16:49:33,1205.37,,1,,"b""b' The last travis run for this pull request was 59 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,reopened,2018-07-29 15:16:21,0.1,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,9,2018-05-30 16:49:33,1274.55,,1,,"b""b' Closed in favour of #13449  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,closed,2018-07-30 12:30:54,1274.55,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13348,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,opened,2018-05-31 11:15:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,title,2018-05-31 11:15:57,00:00,,1,,"b""b' Define SIGHASH_MASK in validation and determine the use of SIGHASH_SINGLE in signing'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,body,2018-05-31 11:15:57,00:00,,1,,"b'b"" We should use exactly the same code to determine the use of SIGHASH_SINGLE", in both validation and signing.  The existing signing code is safe because SIGHASH is restricted to 6 types. However, if further types are introduced (e.g. SIGHASH_NOINPUT) and we forget to make changes here," people might accidentally sign with SIGHASH_SINGLE when there is no corresponding output and lose money. So it\'s better to fix it when we still remember""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,1,2018-05-31 11:15:57,16.88,,1,,"b""b' How about giving a name e.g. and use it in other places anywhere either value is used? The only other use I see is in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,2,2018-05-31 11:15:57,302.65,,1,,"b""b' @Empact : 0x1f also used in  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,3,2018-05-31 11:15:57,950.25,1,,,"b""b' @jl2012 Sorry to be unclear"," was referring to  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,4,2018-05-31 11:15:57,121.1,,1,,"b""b' (& ~SIGHASH_ANYONECANPAY) has no consensus meaning. Not sure why it was used here in the first place'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,5,2018-05-31 11:15:57,851.28,,1,,"b""b' I would like to see it named and then placed as a constant some where as well.  utack 283b96b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,6,2018-05-31 11:15:57,111.05,,,1,"b'b"" @Christewart added a commit to define SIGHASH_MASK. I\'m fine with or without that.  @MarcoFalke does it need a _Validation_ tag?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,7,2018-05-31 11:15:57,1156.45,,1,,"b'b"" re-utack b84c353 . Don\'t we have a Policy label?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,8,2018-05-31 11:15:57,19.97,,1,,"b""b' One more use of at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,9,2018-05-31 11:15:57,1283.03,,1,,"b""b' @Empact that one is correct. It makes only 6 types of SIGHASH standard: 1",2,3, 0x81, 0x82," 0x83'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,10,2018-05-31 11:15:57,1187.58,,1,,"b""b' The last travis run for this pull request was 52 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,closed,2018-07-29 15:16:12,240.25,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,reopened,2018-07-29 15:16:13,0.02,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,11,2018-05-31 11:15:57,920.45,,1,,"b""b' utACK 283b96b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,12,2018-05-31 11:15:57,215.95,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15639]url  (bitcoin-wallet tool: Drop libbitcoin_server.a dependency by ryanofsky)* [#15638]url  (Move-only: Pull wallet code out of libbitcoin_server by ryanofsky)* [#13462]url  (Make SER_GETHASH implicit for CHashWriter and SerializeHash by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,13,2018-05-31 11:15:57,1386.18,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13357,open,-,-,-,1,13,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,opened,2018-05-31 15:13:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,title,2018-05-31 15:13:31,00:00,,1,,"b""b' [Policy] Reject SIGHASH_SINGLE with output out of bound'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,body,2018-05-31 15:13:31,00:00,1,,,"b""b' This makes using SIGHASH_SINGLE without a matching output non-standard. Signature of this form is insecure", as it commits to no output while users might think it commits to one. It is even worse in non-segwit scripts, which is effectively NOINPUT|NONE," so any UTXO of the same key could be stolen.  This is one of the earliest unintended consensus behavior which could be fixed with a softfork. The first step is to make it non-standard.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,1,2018-05-31 15:13:31,541.63,,,1,"b""b' strong concept ACK. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,2,2018-05-31 15:13:31,425.75,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,3,2018-05-31 15:13:31,690.37,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15045]url  ([test] Apply maximal flags to tx_valid tests and minimal flags to tx_invalid tests by jl2012)* [#14079]url  (Implement sighash cache in CHECKMULTISIG by jl2012)* [#13533]url  ([tests] Reduced number of validations in tx_validationcache_tests by lucash-dev)* [#13266]url  ([moveonly] privatize SignatureExtractorChecker by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,closed,2018-09-07 21:00:47,347.27,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,reopened,2018-09-07 21:00:48,0.02,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,4,2018-05-31 15:13:31,919.53,,1,,"b'b""  ~Just being pedantic (and maybe out of topic)", but is not equivalent to giving a key. works well with to select which path of the script the signer wants to execute.~  EDIT: I\'m wrong," says  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,5,2018-05-31 15:13:31,317.62,,1,,"b""b' This patch must be used with the NULLFAIL rule. Otherwise", it would be a hardfork as one may use a script with an out-of-bound SIGHASH_SINGLE signature. The script will fail before this patch, and pass after this patch.  NULLFAIL will fix the problem as the script will fail after the patch, due to the use of invalid signature  Another option is to throw an exception, instead of in  . It will be reported as  ," unless #15074 is adopted.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,closed,2019-05-07 17:07:05,1206.28,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,6,2018-05-31 15:13:31,98.7,,1,,"b""b' The last travis run for this pull request was 241 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,reopened,2019-05-07 17:07:09,0.07,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13360,open,-,-,-,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,opened,2018-06-03 14:59:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,title,2018-06-03 14:59:52,00:00,,1,,"b""b' RPC: creates possibility to preserve labels on importprivkey'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,body,2018-06-03 14:59:52,00:00,,1,,"b""b' Closes #13087.  As discussed in the issue", this is a feature request instead of a bug report since the behaviour was as intended (i.e. label with default:  ). With this, the old behaviour is kept while the possibility to achieve the preservation of labels, as expected in the open issue," is added.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,1,2018-06-03 14:59:52,90.9,,1,,b'b\' There is no need for a new parameter," check if label is null instead this means that the default is to preserve if it exists otherwise """".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,2,2018-06-03 14:59:52,58.35,,,1,"b""b' Concept ACK"," a test would be nice.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,3,2018-06-03 14:59:52,227.47,,,1,"b'b"" Thank you", @promag. I added some functional tests for this specific behavior between importaddress and importprivkey. If everything is alright," I\'ll squash and rebase as necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,4,2018-06-03 14:59:52,161.18,,,1,"b""b' Updated with the right behavior. I will squash and rebase it as necessary in the morning"," thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,5,2018-06-03 14:59:52,1080.25,,,1,"b""b' Tested ACK 74877f3b10072e1975c931bb296212e008cd8c58 .  This is exactly the behavior I desired"," thanks @marcoagner!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,6,2018-06-03 14:59:52,1038.62,,1,,"b'b"" I\'m back to this. The new commit keeps the already tested behaviour (passing tests added on this PR et al) and passes new test for the multiple destinations bug spotted by @Empact.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,7,2018-06-03 14:59:52,628.2,,1,,"b'b"" This still changes behaviour: the default is now (ie", current label) instead of  .  I don\'t particularly care what the default is (  makes more sense)," but the change should be documented and noted in release notes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,8,2018-06-03 14:59:52,136.27,,1,,"b""b' Agree with @luke-jr regarding the behaviour change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,9,2018-06-03 14:59:52,722.52,,,1,"b""b' I added a file documenting the change. Let me know if I missed something or should document this somewhere else. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,10,2018-06-03 14:59:52,88.05,,,1,"b'b"" @marcoagner Thanks for adding the release notes!  I thought maybe the behavior change could be described more simply with the addition of a few examples; see below from some proposed text.  I also changed the heading so that it\'s clear that only a small part of the importprivkey API is being changed (I also removed the from the heading as those don\'t display well in headings on parts of "," but that\'s a local problem so feel free to add back the backtics if you like them). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,11,2018-06-03 14:59:52,25.63,,,1,"b'b"" @harding That\'s much better"," thanks. I\'m changing to that on the next commit with some small (nit) differences. Here\'s the diff so it\'s easier to spot my edits: Seems good?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,12,2018-06-03 14:59:52,33.47,,1,,b'b\' @marcoagner LGTM, although the two uses of \\\'default\\\' in this clause is a tiny bit awkward IMO (but, it\\\'s clear," which is all that really matters): Maybe that second-to-last sentence could have its adverbial phrase ""using the default settings"" moved next to the verb it modifies",import, e.g.: Thanks for updating, and thanks especially for catching my misuse of the apostrophe in the possessive its.  :man_facepalming: \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,13,2018-06-03 14:59:52,51.8,,,1,"b'b"" @harding I changed both parts pointed in your last comment. Thanks for the attention and help with this; I think we\'ve now nailed this part. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,14,2018-06-03 14:59:52,409.53,,,1,"b""b' Could anybody review 6115b5231954a38c400fa4808627dbb8e239ea68"," please? One month in the freezer and is (hopefully) simple. :) @promag @Empact '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,15,2018-06-03 14:59:52,728.7,,,1,"b""b' Thank you all for reviewing again. Updated with 1d4fdb33349a60cac1926f83586826ba62b1a451.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,16,2018-06-03 14:59:52,6.58,,1,,"b""b' Maybe @harding could re-test?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,17,2018-06-03 14:59:52,709.02,,1,,"b""b' Lets see what travis says'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,closed,2018-09-13 22:16:24,436.53,0,9,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,reopened,2018-09-13 22:16:30,0.1,0,9,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,18,2018-06-03 14:59:52,965.58,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,19,2018-06-03 14:59:52,1397.62,,1,,"b""b'   passed locally but seems to have failed on appveyor :thinking: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,20,2018-06-03 14:59:52,1399.3,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,21,2018-06-03 14:59:52,851.47,,1,,"b""b' utACK a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,22,2018-06-03 14:59:52,195.1,,1,,"b""b' utACK a6b5ec1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,23,2018-06-03 14:59:52,85.63,,1,,"b""b' utACK a6b5ec18ff39ef3ccd19ec0e6db9ae00602d8938'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,closed,2018-11-13 07:52:50,576.33,0,15,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13381,closed,-,-,-,0,15,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,opened,2018-06-03 17:23:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,title,2018-06-03 17:23:20,00:00,,1,,"b'b"" util: Don\'t throw in GetTime{Millis","Micros}(). Mark as noexcept.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,body,2018-06-03 17:23:20,00:00,,1,,"b'b"" * throws  ",  , or (derivatives of  ) if the year, month or day are out of range. It is obvious to us that it won\'t throw at run-time for  ," but that is not obvious for the compiler or static analyzers. From a static analyzer perspective it will look like these exceptions can reach all the way up to where they are unhandled. * is simpler and doesn\'t throw.  * Re-use the result of like we\'re doing in  . * Mark and as  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,1,2018-06-03 17:23:20,199.57,,,1,"b'b"" @qmma70 I\'m all for removing Boost"," but that is something for another PR :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,2,2018-06-03 17:23:20,168.37,,1,,"b""b' utACK bcdf285db285932365fe6cae17ba5a585cd1a17e'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,3,2018-06-03 17:23:20,944.83,,1,,"b""b' The last travis run for this pull request was 55 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,closed,2018-07-29 15:16:06,1312.77,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,reopened,2018-07-29 15:16:07,0.02,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,4,2018-06-03 17:23:20,139.2,,1,,"b'b""   doesn\'t sit right with me here. url  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,5,2018-06-03 17:23:20,4.0,,1,,"b""b' @Empact What in particular is an argument against noexcept here?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,6,2018-06-03 17:23:20,330.87,,1,,"b'b"" I guess I\'m more wondering: what is the justification for it? If it doesn\'t help with significant performance optimizations (ala  ) and we don\'t expect it to affect the error performance of the method (because we don\'t expect it to throw) then why should we apply the treatment? If we should apply it here"," should we apply it to most methods? Just a notion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,7,2018-06-03 17:23:20,900.18,,1,,"b'b\' @Empact Scott Meyers has this to say about  : url  \\xe2\\x80\\x93 ""Declare whenever possible"" :-)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,8,2018-06-03 17:23:20,1248.77,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,9,2018-06-03 17:23:20,1215.25,,,1,"b""b' utACK afc97c731e407f87fae0385aa5c3a729981ca1aa '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,10,2018-06-03 17:23:20,768.0,,1,,"b""b' Looks like this is made obsolete by something like #9566?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,11,2018-06-03 17:23:20,41.3,,,1,"b""b' @MarcoFalke Yes", guess so.  Perhaps I should close this PR? The interest in making   seems to be limited: only @sipa," @ken2812221 and I have expressed interest in getting this in :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,closed,2018-12-19 15:27:32,11.42,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13382,closed,-,-,-,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,opened,2018-06-04 05:29:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,title,2018-06-04 05:29:53,00:00,,1,,"b""b' Utils and libraries: Fix #13371 move umask operation earlier in AppInit()'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,body,2018-06-04 05:29:53,00:00,,1,,"b'b"" When the option -sysperms=false (default) is enabled"," the created datadirs doesn\'t take into account the default umask setting of \'077\'. The fix moves the umask operation to just after parameters are parsed during AppInit()""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,1,2018-06-04 05:29:53,599.0,,1,,"b'b"" There\'s a few problems with this: can no longer be set in the configuration file by moving it to  ", it\'s no longer heeded for the GUI  Tend toward NACK. Better to set the permissions on the data directory once, manually," it\'s not going to touch them after that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,2,2018-06-04 05:29:53,32.65,,1,,"b""b' Or", if this is a big issue," maybe do it in both places?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,3,2018-06-04 05:29:53,11.4,,,1,"b""b' Would be nice to know when this regression was introduced. If it never did anything", I guess it can be removed?  If it is not going to be removed," this must come with functional tests that verify the behavior.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,4,2018-06-04 05:29:53,236.02,,,1,"b""b' Appreciate the feedback"," I will look into these later please let me know if you have any other suggestion as well.  Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,5,2018-06-04 05:29:53,690.32,,,1,"b'b"" Had a look at the bitcoin-qt as suggested it looks like if there was a regression it could be because it potentially generates datadir on its own", without calling GetDefaultDataDir(), see comments in the commit above. Tested by running bitcoind, and bitcoin-qt and checking datadir. The existing unit tests," don\'t appear to rely on either of the above utility function calls should I still go ahead and add unit tests for this anyway? thanks!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,6,2018-06-04 05:29:53,9.73,,1,,"b""b' @n2yen You can add a python script into functional test"," it allow you to run a node to test this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,7,2018-06-04 05:29:53,354.48,,1,,"b'b""  It definitely works", but not for the initial directory creation. It works for files created after that, and that\'s what it\'s intended for (block file data sharing," basically).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,8,2018-06-04 05:29:53,124.68,,,1,"b'b"" @Iaanwj can you clarify if we should also leave the old the old code where it was also (in AppInitBasicSetup )? i\'m not sure"," thank you for your feedback!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,9,2018-06-04 05:29:53,4.72,1,,,"b'b"" @n2yen I haven\'t looked", but according to the issue  #13371 the old code is doing nothing. Having useless code is useless," so please remove if it is useless.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,10,2018-06-04 05:29:53,869.62,,1,,"b'b"" Oh I get the problem now", it\'s not option that\'s broken, but the default umask setting. It isn\'t effective yet when the data directory is created, but is by the time when e.g. the wallet is created (as that\'s later in the init process). **I strongly disagree that it does nothing, though**.  OK, yes, it should definitely be moved so that the data directory is also created with that umask too.  I\'m still not sure is the right place to move it though, because that wouldn\'t make umask setting apply *at all* to  .  There\'s an inherent chicken-and-egg problem with the option, because by the time is read, the data directory is already created.  Also agree this needs a test," because apperently this is another initialization issue with strict ordering requirements. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,11,2018-06-04 05:29:53,9.12,1,,,"b'b"" So to show the current code should not naively be removed (nor applied for only)", this affects wallet default permissions: After removing the setting code from  : (wallet is group-readable now, the exact result depends on the umask in the user\'s environment of course," but this is undesirable) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,12,2018-06-04 05:29:53,1055.98,,1,,"b'b"" @Iaanwj ok", so we\'re in agreement, that the umask in AppInitBasicSetup() may not be early enough.  I agree that the umask cannot just be in ," but also in bitcoin-qt or some common code that can be called earlier... I will also be adding tests in the way suggested by @ken2812221. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,13,2018-06-04 05:29:53,819.3,,1,,"b""b' Updated commit with tests to verify permissions of regtest directory", and umask is set as early as sensible in both bitcoind and bitcoin-qt. @laanwj ," @MarcoFalke can I please get your feedback? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,14,2018-06-04 05:29:53,915.15,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,15,2018-06-04 05:29:53,614.0,,1,,"b""b' The last travis run for this pull request was 50 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,closed,2018-07-29 15:16:03,586.17,2,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,reopened,2018-07-29 15:16:04,0.02,2,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,16,2018-06-04 05:29:53,997.77,,1,,"b""b' Rebased on top of: eb2f1bd276108e70aff0f582a407e9b702eb4dd1 Merge #14189: qa: Fix silent merge conflict in wallet_importmulti... On sept 10"," 2018 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,17,2018-06-04 05:29:53,830.88,,1,,"b""b' Concept ACK.  nit: You should skip the test on Windows.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,18,2018-06-04 05:29:53,1418.32,,,1,"b'b"" Hi @ken2812221",  Thanks for your feedback. I\'ve made the changes, to skip the test on Windows," however I don\'t have a windows machine to confirm it skips. Can someone try it? I\'ve confirmed the tests will run on Linux.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,19,2018-06-04 05:29:53,669.72,,1,,"b""b' I would prefer to rename to and check if works as expected and no works as expected. Now you only check for no  ", missing the test with  . #14007 is about to merge," you can check if it works as expected on Appveyor after then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,20,2018-06-04 05:29:53,59.6,,,1,"b'b"" Thanks Ken2812221", yup," I\'ll look into it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,21,2018-06-04 05:29:53,128.7,1,,,"b'b\' travis-ci appears to have failed due to (from last line in log): ""The job exceeded the maximum time limit for jobs"," and has been terminated."" @practicalswift ", @ken2812221 can I get your advise?  best regards.  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,22,2018-06-04 05:29:53,157.55,,1,,"b""b' @n2yen Job restarted :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,23,2018-06-04 05:29:53,213.92,,,1,"b""b' @practicalswift thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,24,2018-06-04 05:29:53,597.7,,,1,"b'b"" @practicalswift timed out again", this time," didn\'t even get a chance to run the feature tests! ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,25,2018-06-04 05:29:53,158.6,,1,,"b""b' Please squash your commits according to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13389,open,-,-,-,3,16,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,opened,2018-06-04 13:36:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,title,2018-06-04 13:36:21,00:00,,1,,"b""b' Tests: Ignore RemoteDisconnected and BadStatusLine when stopping node'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,body,2018-06-04 13:36:21,00:00,,1,,"b""b' Close #11777  If the HTTP server stopped before it response"," then the tests would fail. I think we can just ignore the response error and check if the node has stopped at  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,1,2018-06-04 13:36:21,23.77,,,1,"b""b' I think this is a symptom of an underlying race condition url  so not sure silencing this error is a good idea. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,closed,2018-06-04 16:08:38,152.28,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,2,2018-06-04 13:36:21,135.42,,1,,"b'b"" I\'m not sure you should close it just because of my comment"," without any discussion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,3,2018-06-04 13:36:21,3.62,,1,,"b""b' OK"," I reopen it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,reopened,2018-06-04 16:19:09,10.52,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,4,2018-06-04 13:36:21,1382.55,,,1,"b'b"" Agree that we shouldn\'t just swallow this error silently.  If we do decide that it\'s acceptable for the node to shutdown without responding to a RPC"," then the error catching here should be special cased for just the command (otherwise we\'d miss potential bugs where the node doesn\'t respond to other RPC methods).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,5,2018-06-04 13:36:21,481.2,,1,,"b""b' Prefer #13485'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,closed,2018-06-16 23:22:55,423.77,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13390,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,opened,2018-06-04 15:13:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,title,2018-06-04 15:13:25,00:00,1,,,"b""b' util: Make strprintf noexcept. Improve error message on format string error.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,body,2018-06-04 15:13:25,00:00,1,,,"b'b\' Make  . Improve the error message given on format string errors.  With this change large parts of the code base (  callers directly or indirectly) are switched from an implicit ""might throw  "" to ""will not throw"" from a  analyzer perspective.  Also", reducing the number of unnecessary exceptions thrown increases the signal-to-noise for humans when analyzing potential issues introduced by uncaught exceptions.  These were the conditions that could make throw prior to this commit: \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,1,2018-06-04 15:13:25,1053.4,1,,,"b""b' Mild NACK I prefer noisy failures. If the failures here are burdensome"," can you cite some? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,2,2018-06-04 15:13:25,49.77,,,1,"b""b' @Empact How is this less noisy than before? :-) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,3,2018-06-04 15:13:25,2.65,,1,,"b""b' Basically", blow up when possible," return a value or log or both when not possible. Make errors as difficult to ignore as possible.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,4,2018-06-04 15:13:25,1.1,,,1,"b'b"" @Empact I agree"," but I don\'t get how this is less noisy. is called *earlier* :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,5,2018-06-04 15:13:25,22.75,,1,,"b'b"" Fair enough",  terminate is effectively noisy, but given terminate would be called if the exception were uncaught, ironically, this now makes errors which would have previously been blanket-caught via etc a which is a potentially problematic behavior change. But maybe I\'m wrong on that? It was called out on me here relative to converting  s to  : #13268  FTR I don\'t like that we have blanket-catches in the codebase," but they\'re sometimes warranted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,6,2018-06-04 15:13:25,115.32,1,,,"b'b"" Hopefully we will have format string linting soon (see separate PR) and perhaps that will allow us to make  . But I\'m not sure is the right way to go here in case of formatting errors. Perhaps better to just print an error message to stderr  return the error message to the caller? @laanwj"," what do you think?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,7,2018-06-04 15:13:25,197.6,,1,,"b""b' The last travis run for this pull request was 54 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,closed,2018-07-29 15:16:00,2.58,4,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,reopened,2018-07-29 15:16:01,0.02,4,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,8,2018-06-04 15:13:25,507.83,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #13846 (Move  to  by Empact)* #13845 (Include tinyformat as a subtree by Empact) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,9,2018-06-04 15:13:25,679.55,,1,,"b'b"" I\'m going to close this"," I don\'t think this change is really necessary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,closed,2018-08-31 11:03:23,1187.37,4,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13392,closed,-,-,-,4,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,opened,2018-06-08 18:49:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,title,2018-06-08 18:49:06,00:00,,1,,"b""b' Consistently validate txid / blockhash length and encoding in rpc calls'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,body,2018-06-08 18:49:06,00:00,,,1,b'b\' ParseHashV validates the length and encoding of the string and throws an informative RPC error on failure, which is as good or better than these alternative calls.  Note I switched ParseHashV to check string length first, because IsHex tests that the length is even," and an error like: ""must be of length 64 (not 63"," for X)"" is much more informative than ""must be hexadecimal string (not X)"" in that case.  Split from #13420\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,1,2018-06-08 18:49:06,156.88,,1,,"b""b' How about  ?url And there may be other examples.  Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,2,2018-06-08 18:49:06,332.07,,,1,"b""b' Thanks @promag"," I audited use and found 4 more cases. Also added more testing wherever the test outcomes changed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,3,2018-06-08 18:49:06,32.18,,1,,"b""b' Made the call guaranteed", which means non-string values fail with  ," rather than a length failure.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,4,2018-06-08 18:49:06,1016.85,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #14307 (Consolidate redundant implementations of ParseHashStr by Empact)* #12153 (Avoid permanent cs_main lock in getblockheader by promag)* #10973 (Refactor: separate wallet from node by ryanofsky) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,5,2018-06-08 18:49:06,127.98,,1,,"b""b' The last travis run for this pull request was 52 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,closed,2018-08-02 22:35:04,225.97,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,reopened,2018-08-02 22:35:05,0.02,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,6,2018-06-08 18:49:06,1096.4,,1,,"b'b"" @kallewoof fair enough since I\'m touching those lines anyway. Updated.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,7,2018-06-08 18:49:06,1207.9,,1,,"b""b' utACK 5eb20f81d9568284dca735e4f770f41a48aa5660'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,closed,2018-09-24 19:10:58,1235.88,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13424,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,opened,2018-06-10 16:23:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,title,2018-06-10 16:23:56,00:00,,1,,"b""b' [bugfix] Fix encoding issue for Windows'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,body,2018-06-10 16:23:56,00:00,,1,,"b""b' Fix #13103  Fix #13754  From url  @laanwj suggested that we should keep our internal strings to be always utf-8 encoded.  This PR adds two C++17 compatible macros: and  . The reason that I use macros is that developers might not want to pass second parameter everytime when they call or create objects.  I tried to find all methods and convert them to except for external api calls. Also tried to convert explicit or implicit to  . Tell me if you find something that I missed.  Required: bitcoin-#18  See #13787 for travis run result Caution: The user must change their config file to be utf-8 encoded if the file contains any non-ascii characters in it. Before 0.18"," they are read as ansi-encoded characters on Windows. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,1,2018-06-10 16:23:56,420.9,,1,,"b""b' Can we use instead for this? url  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,2,2018-06-10 16:23:56,55.23,,1,,"b""b' >Can we use instead for this?  We still need to use ansi string when we call bdb and leveldb api", so I think that adding a new function is needed. Also," it needs to add dependency in order to use boost locale generator.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,3,2018-06-10 16:23:56,1207.38,1,,,"b'b"" I\'m not really comfortable patching boost to make this work. Firstly because it would mean that only depends-builds can build for Windows"," but also because I\'m just not familiar with it.  Maybe start by upstreaming it and see where the discussion goes?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,4,2018-06-10 16:23:56,5.5,,1,,"b""b' >Firstly because it would mean that only depends-builds can build for Windows  Is there any way to build Bitcoin Core for Windows without depends-builds? Also"," I created a PR url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,5,2018-06-10 16:23:56,171.1,,1,,"b'b""  Supposedly there is a way to build with MSVC and Visual Studio which doesn\'t use the depends system.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,6,2018-06-10 16:23:56,58.1,,1,,"b""b' I found a way not to patch boost library"," it should work with msvc now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,7,2018-06-10 16:23:56,1202.98,1,,,"b'b"" Note to reviewers: This pull request conflicts with the following ones: * #13878 (utils: Add fstream wrapper to allow to pass unicode filename on Windows by ken2812221)* #13877 (utils: Make fs::path::string() always return utf-8 string on Windows by ken2812221)* #13866 (utils: Use _wfopen and _wreopen on Windows by ken2812221)* #13864 (validation: Document where we are intentionally ignoring bool return values from validation related functions by practicalswift)* #13862 (utils: drop boost::interprocess::file_lock by ken2812221)* #13846 (Move  to  by Empact)* #13845 (Include tinyformat as a subtree by Empact)* #13815 (util: Add [[nodiscard]] to all {Decode",Parse}[...](...) functions returning bool by practicalswift)* #13761 (Docs: Create default  file on startup by leishman)* #13756 (wallet: -avoidreuse feature for improved privacy by kallewoof)* #13751 (Utils and libraries: Drops the  dependency by 251Labs)* #13746 (-masterdatadir for datadir bootstrapping by kallewoof)* #13734 (gui: Drop boost::scoped_array and use wchar_t API explicitly on Windows by ken2812221)* #13723 (PSBT key path cleanups by sipa)* #13716 (bitcoin-cli: -stdinwalletpassphrase and non-echo stdin passwords by kallewoof)* #13671 (Remove the  dependency by 251Labs)* #13667 (wallet: Fix backupwallet for multiwallets by domob1812)* #13639 ([refactor] Fix the chainparamsbase -* #13621 (Check for datadir after the config files were read by Flowdalic)* #13389 (Utils and libraries: Fix #13371 move umask operation earlier in AppInit() by n2yen)* #13249 (Make objects in range declarations immutable by default. Avoid unnecessary copying of objects in range declarations. by practicalswift)* #13159 (Don\'t close old debug log file handle prematurely when trying to re-open (on SIGHUP) by practicalswift)* #13100 (gui: Add dynamic wallets support by promag)* #13088 (Log early messages with -printtoconsole by ajtowns)* #12783 (macOS: Disable AppNap by krab)* #11911 (Free CDBEnv instances when not in use by ryanofsky)* #11625 (WIP: Add BitcoinApplication & RPCConsole tests by ryanofsky)* #10973 (Refactor: separate wallet from node by ryanofsky)* #10102 ([experimental] Multiprocess bitcoin by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,8,2018-06-10 16:23:56,1126.23,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,9,2018-06-10 16:23:56,826.58,,1,,"b'b"" @theuni We probably want your thoughts here again.  For reference nothing has happened at the [upstream PR]url  however that is less relevant now that we aren\'t patching Boost. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,10,2018-06-10 16:23:56,298.75,,1,,"b""b' Compared to master", this PR helps in at least the following scenario: * Windows 10," system locale set to Simplified Chinese (see #13754 for how) * launch QT from search bar or from command prompt:  * open console and do  Before: After: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,11,2018-06-10 16:23:56,1008.32,,1,,"b""b' @Sjors Now you can use any walletname you want even if you are using English language setting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,12,2018-06-10 16:23:56,506.35,,1,,"b""b' Gitian Build: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,13,2018-06-10 16:23:56,64.3,,,1,"b""b'  Thanks", that worked.  Can you change some of the functional tests to use unicode characters? I think and would be good examples," since they use RPC arguments as well as filenames. I renamed label in labels tests which worked fine on macOS. The multiwallet test was less happy when I renamed  :  . @jnewbery thoughts?  I also tested on macOS and that (still) works fine.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,14,2018-06-10 16:23:56,599.58,,1,,"b""b' Update: Dropped wmain"," Use and instead.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,15,2018-06-10 16:23:56,1033.22,,,1,"b""b'  Yes"," functional tests should definitely include wallets & labels with unicode characters. We already have a test that covers unicode rpc : url wallet_ seems like a good place to add the test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,16,2018-06-10 16:23:56,160.37,,1,,"b""b' Update: Now we can specify any characters in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,closed,2018-07-28 18:08:51,104.92,2,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,reopened,2018-07-28 18:08:56,0.08,2,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,17,2018-06-10 16:23:56,1157.72,1,,,"b""b' Some Travis builds are unhappy:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,18,2018-06-10 16:23:56,51.33,,1,,"b""b' @Sjors Those needs upstream changes bitcoin-#18"," you can see travis result on #13787.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,19,2018-06-10 16:23:56,865.58,,1,,"b""b' If you call within instead", you can avoid touching and  ," at least. There may be other opportunities for minimization.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,20,2018-06-10 16:23:56,154.43,,1,,"b""b' >If you call CommandLineToArgvW within It would break the in tests if we do that. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,21,2018-06-10 16:23:56,489.62,,1,,"b'b"" I\'ll seperate these into many PRs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,closed,2018-08-05 15:27:32,1278.6,3,18,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13426,closed,-,-,-,3,18,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,opened,2018-06-11 07:05:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,title,2018-06-11 07:05:21,00:00,,1,,"b""b' use IsBlockPruned() where appropriate'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,body,2018-06-11 07:05:21,00:00,,1,,"b'b\' There are cases where a ""full"" check for block pruning is not done (  and checks)", but where the context indicates that pruning is always the reason. This makes the checks more explicit and straightforward, and separates them more from the cases where we are simply checking whether we have a block or not vs whether we had it at one point and it was pruned.  Note that is supposed to always be equivalent to  . (Edit: got this backwards; this is true for the true case, but for pruned nodes, while  .)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,1,2018-06-11 07:05:21,58.67,,,1,"b'b"" ConceptACK for improved readability"," though for the same reason I can\'t easily tell if it\'s correct :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,2,2018-06-11 07:05:21,68.05,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,3,2018-06-11 07:05:21,200.28,1,,,"b'b"" As @sdaftuar pointed out before", the burden in reviewing validation changes may not be worth it, unless this is really incomplete. I don\'t think this improves readability that much," but I\'m in the same position as @Sjors.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,4,2018-06-11 07:05:21,1122.53,1,,,"b'b\' @promag I feel like this makes it clear which of the two cases ""do we have this block yet"" versus ""is this block pruned""", which I believe improves readability enough to warrant the effort. If others think it\\\'s more trouble than it\\\'s worth I\\\'ll grumpily close, though. ;)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,5,2018-06-11 07:05:21,81.77,,1,,"b'b"" Don\'t worry too much about #13029; I\'m waiting to see if #11082 makes it in"," in which case that one can be closed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,6,2018-06-11 07:05:21,827.95,,1,,"b""b' @sipa Github comment threading is buggy", but yes," see discussion above -is known to be non-null because it is checked (1) before entry and (2) at each loop in the form  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,7,2018-06-11 07:05:21,1323.97,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14711]url  (Remove uses of chainActive and mapBlockIndex in wallet code by ryanofsky)* [#10973]url  (Refactor: separate wallet from node by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,closed,2018-08-10 12:37:20,331.98,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,8,2018-06-11 07:05:21,968.78,,1,,"b""b' The last travis run for this pull request was 56 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,reopened,2018-08-10 12:37:21,0.02,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,closed,2018-12-14 08:37:33,1200.2,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,9,2018-06-11 07:05:21,353.6,,1,,"b""b' Might want to clarify the documentation of IsBlockPruned first? I.e. explain why it returns false for a block that has its data downloaded or why it returns false for a block that is missing its data.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,10,2018-06-11 07:05:21,958.05,1,,,"b'b"" @MarcoFalke I kind of closed this out of frustration due to lack of feedback. I can reopen if you think it\'s worth it to try to get this merged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13430,closed,-,-,-,3,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,opened,2018-06-11 23:36:44,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,title,2018-06-11 23:36:44,00:00,,1,,"b""b' Convert the 1-way SSE4 SHA256 code from asm to intrinsics'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,body,2018-06-11 23:36:44,00:00,,1,,"b'b"" Currently", master contains 2 implementations of SHA256 for SSE4: * A generic one written using GCC inline assembly (converted from Intel NASM code), added in #10821. * A specialized double-SHA256 for 64-byte inputs written using intrinsics, added in #13191.  The advantage of the inline assembly is that its performance is not affected by compiler optimizations (and doesn\'t even need compiler support for SSE4). The downside is that it is an opaque, unreadable, non-reusable blob of code.  This patch converts the former also to intrinsics making its operation more clear, while hopefully lending itself to being adaptable for other specialized implementations.  The resulting implementation is slightly faster on my system (i7-7820HQ) when compiled with GCC 7.3. Small variations in the code can affect the optimizer though," and have as much as a few % impact on speed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,1,2018-06-11 23:36:44,203.63,,,1,"b""b' Nice!  @sipa See url  for clang compile fixes"," and url  for a change that may or may not be needed to avoid a performance hit on AMD.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,2,2018-06-11 23:36:44,826.73,,1,,"b'b"" @theuni Included the clang compile fixes. I\'m going to benchmark to see whether to include the other changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,3,2018-06-11 23:36:44,176.8,,,1,"b""b' It would be worthwhile to benchmark this on reasonably recent clang versions as well the performance impact may be very different depending on how good the compiler is at ordering parallel instruction paths.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,4,2018-06-11 23:36:44,156.57,,1,,"b'b"" Some more benchmarks", comparing GCC 7.3 and clang 6.0, for the benchmark (i7-7820HQ, fixed to 2.2 GHz).  * GCC, master: 4.4 ms * GCC, this PR: 4.3 ms * clang, master: 4.4 ms * clang, this PR: 4.8 ms  Unfortunately," it seems that clang isn\'t as good in producing as performant code from intrinsics.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,5,2018-06-11 23:36:44,1298.55,,1,,"b'b"" @sipa Mind rebasing? I\'d like to add the lib-per-cpu changes on top of this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,6,2018-06-11 23:36:44,73.55,1,,,"b'b"" Rebased"," though I don\'t think this PR is acceptable until we have a way to avoid the performance loss in clang.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,7,2018-06-11 23:36:44,1424.42,,,1,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13789]url  (: Use pragmas to enforce necessary intrinsics for GCC and Clang by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,8,2018-06-11 23:36:44,1256.48,,1,,"b""b' Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,closed,2019-05-20 17:53:28,1096.73,1,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,reopened,2019-05-20 17:53:32,0.07,1,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,9,2018-06-11 23:36:44,1.62,,,1,"b'b"" What version of clang are we using now? It\'s probably not a good idea to proceed with this unless it can be shown it doesn\'t have negative impact on performance on all release platforms.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,10,2018-06-11 23:36:44,17.6,,1,,"b""b' * 3.7 (#16052) for gitian * FreeBSD 12: clang version 6.0.1 * not sure what the default is on macos when self-compiled'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,11,2018-06-11 23:36:44,11.57,,1,,"b'b"" I\'ll close this for now"," then.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,closed,2019-05-20 18:24:15,30.72,1,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,12,2018-06-11 23:36:44,631.05,,1,,"b""b' @MarcoFalke"," Clang on my macOS machine (Xcode 10.2.1) is:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,13,2018-06-11 23:36:44,470.77,,1,,"b""b' ...which is actually Clang 5.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,14,2018-06-11 23:36:44,348.5,,1,,"b'b"" I\'m going to reopen this"," as we will be switching to a newer version of in gitian. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,reopened,2019-05-23 18:34:34,10.32,1,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,15,2018-06-11 23:36:44,30.65,,1,,"b'b"" I\'ll benchmark again in clang-7.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,16,2018-06-11 23:36:44,42.12,,1,,"b""b' I see a slowdown in and with both gcc-9 and clang-8'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13442,open,-,-,-,1,13,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,opened,2018-06-12 08:35:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,title,2018-06-12 08:35:26,00:00,,1,,"b""b' Build: remove non-distribution  during make distclean.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,body,2018-06-12 08:35:26,00:00,,1,,"b""b' Addresses #13433 and includes a few other items currently misses (/\\\\_\\\\_pycache\\\\_\\\\_"," /\\\\* and /\\\\*). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,1,2018-06-12 08:35:26,227.08,,1,,"b""b' Just noting that the changes would have to be submitted to upstream leveldb and univalue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,2,2018-06-12 08:35:26,27.32,,1,,"b""b' Yep", @murrayn can you remove the [secp256k1]url  and [univalue]url  changes from this PR," and send them upstream. The tests wont run here with any subtree changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,3,2018-06-12 08:35:26,435.37,,1,,"b'b"" @murrayn Is it possible to add these in terms of existing variables so that it doesn\'t go stale?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,4,2018-06-12 08:35:26,597.5,,1,,"b'b"" @theuni I don\'t see any existing variables to use. Do you have any suggestions?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,closed,2018-08-02 22:34:55,839.48,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,5,2018-06-12 08:35:26,992.23,,1,,"b""b' The last travis run for this pull request was 50 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,reopened,2018-08-02 22:34:56,0.02,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,6,2018-06-12 08:35:26,594.25,,1,,"b""b' Going to close this as it seems most of the files missed by distclean are from  and configure"," so any fixes would be better applied to them specifically.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,closed,2018-09-18 08:29:11,594.25,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,7,2018-06-12 08:35:26,1057.32,,1,,"b""b' \\xe6\\x82\\xa8\\xe5\\xa5\\xbd\\xef\\xbc\\x81'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13446,closed,-,-,-,0,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,opened,2018-06-13 20:42:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,title,2018-06-13 20:42:39,00:00,,1,,"b""b' Make SER_GETHASH implicit for CHashWriter and SerializeHash'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,body,2018-06-13 20:42:39,00:00,,1,,b'b\' Most invocations of use and version 0, this allows for eliding those values, ~and removes as a type," because it functions simply as ""has no external destination"" in practice.~  ~  basically existed due to the overhead of CHashWriter construction", now that that is minimized, it\\\'s unnecessary.~\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,1,2018-06-13 20:42:39,1407.45,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15606]url  ([experimental] UTXO snapshots by jamesob) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,2,2018-06-13 20:42:39,56.48,,1,,"b""b' Withdrawing this pending #10785. Will re-open after.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,closed,2018-06-14 21:06:35,23.93,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,3,2018-06-13 20:42:39,29.27,,1,,"b'b"" @Empact #10785 is low priority"," and will probably take a while. Don\'t let it stop you.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,reopened,2018-06-14 21:48:42,42.12,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,4,2018-06-13 20:42:39,13.1,,,1,"b""b' Good to know"," thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,closed,2018-06-14 21:48:57,0.25,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,reopened,2018-06-14 21:49:03,0.1,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,5,2018-06-13 20:42:39,26.12,,1,,"b'b\' I don\\\'t understand ""scripted-diff: Drop SER_GETHASH""; it changes to  . That means that what used to be the branch for  will end up being run just for DISK", and what used to be the branch for GETHASH will end up being run for NETWORK and GETHASH.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,6,2018-06-13 20:42:39,68.08,,1,,"b'b"" @sipa is i.e.  ", is i.e.  , so both will evaluate to  , while with used where once was," it will evaluate to false. Note also while they\'re defined as flags all uses of are singular. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,7,2018-06-13 20:42:39,4.72,,,1,"b'b"" Ah of course; I missed the around it.  This isn\'t very readable code though. Would you mind keeping as a constant (perhaps just defined as 0)"," and explicit comparisons with it (rather than bit masking). That should still be a nice simplification.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,8,2018-06-13 20:42:39,45.85,,1,,"b""b' @sipa Fair enough"," I dropped that commit. Def more straight-forward now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,9,2018-06-13 20:42:39,10.48,,1,,"b""b' Thinking a bit more about this", I think you can actually go further. I believe none of the serializers which have conditionals that mention SER_GETHASH (CDiskBlockIndex, CBlockLocator, CAddress, CKeyPool, CWalletKey, CAccountingEntry, CAccount) are ever actually invoked with SER_GETHASH as nType," so we could literally delete SER_GETHASH entire and all conditions that test for it. SerializeHash could then just use SER_NETWORK afaict.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,10,2018-06-13 20:42:39,1.0,,,1,"b'b"" @sipa Nice I\'ll look into that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,closed,2018-08-10 12:37:14,888.18,0,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,11,2018-06-13 20:42:39,732.05,,1,,"b""b' The last travis run for this pull request was 53 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,reopened,2018-08-10 12:37:15,0.02,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,12,2018-06-13 20:42:39,1284.1,,1,,"b""b' In case the SER_GETHASH removal was complicating things"," I reoriented this around simply making SER_GETHASH implicit in the obviously hash-specific contexts.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13462,open,-,-,-,0,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,opened,2018-06-14 14:27:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,title,2018-06-14 14:27:23,00:00,1,,,"b""b' WIP [bench] CCoinsView(Cache): measure various scenarios'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,body,2018-06-14 14:27:23,00:00,,1,,"b'b""  :  ![unknown]url Tested scenarios (plus ideas that could be added later):  [x] access a cached coin [x] add 200.000 coins to cache (plot shows average time per coin)  [x] flush cache (plot shows average time per coin) [ ] load cache from disk [ ] access coins that are not cached [ ] access coins that are cached but dirty [ ] flush dirty coins  The flush test creates a temporary directory on disk.  I normalized the cache access benchmark to take about the same speed as the existing benches do on my machine.  I disabled scaling iterations for the cache addition and flush bench. It doesn\'t make sense to have more than 1 iteration per eval", because the speed per coin as part of a large flush is a more relevant metric then how often you can flush 1 coin. At the same time I didn\'t want the benches to use up too much  RAM if someone sets to high number.  To test a bigger cache increase  . The cache is about 40 MB by default, try for more realistic scenarios," but note that test needs ~3x RAM.  I\'m doing a few things the bench framework doesn\'t seem designed for. Would like some feedback before I refactor it in the wrong direction:  [ ] share code with test framework (should support  ?) [ ] clean up stuff between evals; e.g. I need to reset the coin cache for and [ ] disable scaling iterations [ ] add a memory-scaling argument [ ] allow pausing the clock between iterations; e.g. to generate test coins on the fly rather in bulk before the run ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,1,2018-06-14 14:27:23,1256.42,,1,,"b""b' Reviewers", this pull request conflicts with the following ones: * #14244 (amount: Move CAmount CENT to unit test header by MarcoFalke)* #14224 (Document intentional and unintentional unsigned integer overflows (wraparounds) using annotations by practicalswift)* #14156 ([WIP] refactor: Make explicit CMutableTransaction -* #13525 (Report reason inputs are nonstandard from AreInputsStandard by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,2,2018-06-14 14:27:23,73.38,,1,,"b""b' The last travis run for this pull request was 56 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,closed,2018-08-10 12:37:11,1329.8,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,reopened,2018-08-10 12:37:12,0.02,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,3,2018-06-14 14:27:23,299.68,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,4,2018-06-14 14:27:23,1083.58,,1,,"b""b' Consider this up for grabs. It should be a matter of rebasing and cleaning up.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,closed,2018-11-30 11:40:27,1383.25,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13470,closed,-,-,-,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,opened,2018-06-14 19:02:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,title,2018-06-14 19:02:39,00:00,,1,,"b""b' [devtools translations] catch invalid specifiers'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,body,2018-06-14 19:02:39,00:00,,1,,b'b\' While being careful in the source code," during translation a ""%"" can easily sneak init the wrong position", especially when dealing with percentages (how comes?).  Instead of giving up, catching that can make life easier.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,closed,2018-08-25 20:55:32,112.88,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,reopened,2018-08-25 20:55:33,0.02,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,closed,2018-09-07 21:00:37,5.07,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,reopened,2018-09-07 21:00:38,0.02,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,1,2018-06-14 19:02:39,440.67,,1,,"b""b' Why not just catching this error by linter? The error can be caught whenever someone open a PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,closed,2019-05-07 17:06:57,1206.32,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,2,2018-06-14 19:02:39,883.67,,1,,"b""b' The last travis run for this pull request was 241 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,reopened,2019-05-07 17:06:59,0.03,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13472,open,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,opened,2018-06-16 04:25:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,title,2018-06-16 04:25:16,00:00,,1,,"b""b' Remove boost::program_options dependency'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,body,2018-06-16 04:25:16,00:00,,1,,"b""b' Concept from #12744"," but without parsing negated options.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,1,2018-06-16 04:25:16,1002.53,,,1,"b'b"" I\'m utAck on this. Nicely done.  This could have also been implemented with regex"," but the pattern is simple enough that the logic is easily understandable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,2,2018-06-16 04:25:16,4.55,,1,,"b""b' Concept ACK maybe include the tests from #12744?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,3,2018-06-16 04:25:16,246.77,,1,,"b""b' @Empact  Those tests have been added by #12713'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,4,2018-06-16 04:25:16,1005.95,,1,,"b""b' Current on master", if there are some options in the config file without  , they would cause an exception. In this PR, I simply ignore them," or should I also throw an exception?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,5,2018-06-16 04:25:16,275.5,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #13562 (travis: Switch back to trusty for now by MarcoFalke) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,6,2018-06-16 04:25:16,938.35,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,7,2018-06-16 04:25:16,2.53,,1,,"b""b' Update as well?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,8,2018-06-16 04:25:16,751.13,,1,,"b""b' @MarcoFalke Sure'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,closed,2018-07-18 02:47:26,1342.17,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,9,2018-06-16 04:25:16,1438.17,,1,,"b""b' Why close?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,10,2018-06-16 04:25:16,0.38,1,,,"b""b' Sorry"," misclicked'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,reopened,2018-07-18 02:51:08,3.7,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,11,2018-06-16 04:25:16,1139.47,,1,,"b""b' utACK f447a0a7079619f0d650084df192781cca9fd826'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,12,2018-06-16 04:25:16,1010.37,,1,,"b'b"" +42 \\xe2\\x88\\x92123 even though this is *removing* an external dependency"," if that isn\'t a clear indication that this should be done I don\'t know what is. utACK f447a0a7079619f0d650084df192781cca9fd826""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,closed,2018-07-20 14:46:53,715.75,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13482,closed,-,-,-,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,opened,2018-06-16 23:22:21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,title,2018-06-16 23:22:21,00:00,,1,,"b""b' Ensure that http event loop is empty before the loop exit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,body,2018-06-16 23:22:21,00:00,,1,,"b""b' Close #11777  This also revert #11006"," since seems to drop unstarted event. So shutdown might take longer.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,1,2018-06-16 23:22:21,896.53,,1,,"b'b"" This should be simple"," I don\'t think libevent would force such workarounds. According to the documentation it ignores pending events but active events are handled.  And looks like sending the reply is an active event ():  url  url  Maybe there is a problem in when the the event is activ\'ated?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,2,2018-06-16 23:22:21,29.15,,1,,"b'b"" That  could be called after threadHTTP exited and the event wouldn\'t get called in rare case. This can be tested by adding between and statement. url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,3,2018-06-16 23:22:21,184.25,,1,,"b""b' @ken2812221 so instead it should make sure the reply is handled before is called?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,4,2018-06-16 23:22:21,33.15,,1,,"b""b' should make sure the reply is handled before threadHTTP loop exit because the loop can exit earlier than called. However I have no idea how to do that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,closed,2018-06-18 02:37:17,194.93,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,5,2018-06-16 23:22:21,208.77,,1,,"b""b' @ken2812221 Are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,6,2018-06-16 23:22:21,136.02,,1,,"b""b' @MarcoFalke If necessary"," I can work on this again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,reopened,2018-08-09 00:10:13,1292.93,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,7,2018-06-16 23:22:21,296.05,,1,,"b""b' Reviewers", this pull request conflicts with the following ones: * #13501 (Correctly terminate HTTP server by promag) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,8,2018-06-16 23:22:21,444.82,,1,,"b""b' Tested 4e79d3e28167ac169f417623f07f48dd3cb0f6ac on current master and could run the tests for 24 hours in a loop. (Which is not possible on current master)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,closed,2018-08-21 00:59:35,49.37,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,reopened,2018-10-02 21:17:07,1217.53,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,closed,2018-10-13 04:12:58,415.85,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13485,closed,-,-,-,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,opened,2018-06-18 22:48:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,title,2018-06-18 22:48:34,00:00,,1,,"b""b' ~~Correctly~~ terminate HTTP server'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,body,2018-06-18 22:48:34,00:00,,1,,"b""b' Fixes #11777. Replaces #13492.  This PR tracks current HTTP connections in order to disable reading on shutdown while allowing all remaining events to process. This allows the event loop to exit gracefully.  This happens in the test framework because the RPC client never closes the connection to the node \\xe2\\x80\\x94 the same connection is used for all RPC to that node \\xe2\\x80\\x94 even when is called.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,1,2018-06-18 22:48:34,2.88,,1,,"b'b"" This is an alternative to #13492 that doesn\'t require bumping the minimum libevent2 version. This was submitted in a different branch to keep the other version available.  To test apply and then ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,2,2018-06-18 22:48:34,55.9,,1,,"b""b' That is still requied though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,3,2018-06-18 22:48:34,468.08,,1,,"b'b"" No", it shouldn\'t be. As soon as there are no more active or pending events," the event loop should exit.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,4,2018-06-18 22:48:34,460.9,,1,,"b""b' Updated.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,5,2018-06-18 22:48:34,1324.87,,1,,"b""b' @ken2812221 care to review?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,6,2018-06-18 22:48:34,85.65,,1,,"b""b' Looks like shutdown would take more time", it takes 30 mins to complete tests on travis," I would rather reopen #13485'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,7,2018-06-18 22:48:34,350.82,,1,,"b'b"" @ken2812221 I\'ll try to reproduce.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,8,2018-06-18 22:48:34,75.08,,1,,"b""b' Going to close and reopen"," to get a fresh travis run.  Previous run: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,closed,2018-08-08 21:52:45,1384.18,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,reopened,2018-08-08 21:52:50,0.08,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,9,2018-06-18 22:48:34,0.52,,1,,"b""b' New run: url Hmm.. Still takes longer than on master"," I think'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,10,2018-06-18 22:48:34,6.18,,,1,"b""b' Thanks @MarcoFalke.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,11,2018-06-18 22:48:34,425.92,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,12,2018-06-18 22:48:34,1185.85,,1,,"b""b' Tried to change client and server timeouts and looks like it terminates earlier. This indicates that either the client or server are not terminating gracefully.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,13,2018-06-18 22:48:34,1425.22,,1,,"b""b' @MarcoFalke @ken2812221 please test again. Will update OP later.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,14,2018-06-18 22:48:34,71.62,,1,,"b""b' Updated OP.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,15,2018-06-18 22:48:34,32.03,,1,,"b'b\' It still shows ""EOF reached"" on bitcoin-cli when I add at url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,16,2018-06-18 22:48:34,384.47,1,,,"b""b' @ken2812221 sorry"," forgot to add a hunk to the commit \\xf0\\x9f\\x98\\x95'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,17,2018-06-18 22:48:34,976.48,,1,,"b""b' ~Tested ACK d1c35ed~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,18,2018-06-18 22:48:34,1265.58,,1,,"b""b' @promag I would prefer this fix than #13485"," but this seems to break things on Windows. Would you mind take a look again?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,19,2018-06-18 22:48:34,65.35,,1,,"b""b' @ken2812221 try again \\xf0\\x9f\\x8e\\x81'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,20,2018-06-18 22:48:34,1055.13,,1,,"b""b' tACK ee05f25eb600d8dc45d21f43dab899aacc7d6784'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,21,2018-06-18 22:48:34,768.02,,,1,"b'b"" Concept ACK f9d60febdc265824d5f183ef6e0756875869ddb0.  I\'m not familiar enough with libevent to judge the API calls", but the Bitcoin Core side of things looks good.  A review by @laanwj would be good," I think.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,22,2018-06-18 22:48:34,842.03,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,23,2018-06-18 22:48:34,218.92,,,1,"b""b' @ryanofsky thanks for the review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,closed,2018-11-06 14:50:43,1017.88,1,21,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,24,2018-06-18 22:48:34,963.62,,1,,"b'b"" After more digging in libevent source code I\'ve realized that sending the header is the correct way to trigger the connection close. Verified that this behavior exists since  "," see url It is also unnecessary to keep track of connections as already handles that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,25,2018-06-18 22:48:34,1014.1,1,,,"b'b""  That only signals to the client that the connection should be closed (e.g. no connection reuse)", it doesn\'t actually trigger a close from our side. (or does it? I\'m confused now; at the least it doesn\'t provide a guarantee that the connection will be closed any time soon," only after the request fully finished)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,26,2018-06-18 22:48:34,1030.57,,1,,"b""b' From testing it does", see url Even with a non-http client, like  ," when I send that header the server will then close the  connection.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13501,closed,-,-,-,2,23,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,opened,2018-06-19 13:48:48,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,title,2018-06-19 13:48:48,00:00,,1,,"b""b' Document FreeBSD quirk. Fix FreeBSD build: Use std::min(...) to allow for compilation under certain FreeBSD versions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,body,2018-06-19 13:48:48,00:00,,1,,"b""b' * Document FreeBSD quirk. * Fix FreeBSD build: Cast to to allow to work under FreeBSD.  Context: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,1,2018-06-19 13:48:48,25.43,,,1,"b'b"" So this was originally applied in #2695:This pull inserts an explicit cast", treating the calculated value as signed, keeping the compiler happy.  Then reverted in #9598 to: Now we\'re re-adding (int) again but only for FreeBSD.  I\'ve just built master (3f398d7) successfully on a FreeBSD 11.1 VM, so I\'m curious to know which version of FreeBSD this is broken on?  Regardless of the above," the current patch doesn\'t compile:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,2,2018-06-19 13:48:48,6.03,1,,,"b""b' @fanquake @ken2812221 Sorry about the bashism :-)  Not fixed!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,3,2018-06-19 13:48:48,2.75,,,1,"b""b' @fanquake Good question regarding FreeBSD version. @anton48"," what FreeBSD version are you running?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,4,2018-06-19 13:48:48,2.25,,,1,"b'b"" If this is fixed in FreeBSD 11.1 I\'m not sure we have a problem to solve :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,5,2018-06-19 13:48:48,2.75,,1,,"b'b"" Closing this temporarily while waiting for input from @anton48.  If we can reproduce under FreeBSD 11.1 I\'ll re-open.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,closed,2018-06-19 14:28:02,39.23,1,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,6,2018-06-19 13:48:48,374.97,,1,,b'b\' @practicalswift @fanquake the source of the problem is not a version of FreeBSD itself, but version of clang. currently there are two production versions of FreeBSD: 11.1 and 10.4. former contains clang 4," latter clang 3.4. ""new"" code in  can be compiled with clang 4"," but not with 3.4.  @practicalswift your patch with ""if defined(__FreeBSD__)"" works for me at 10.3", 10.4 and 11.1. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,reopened,2018-06-21 01:37:50,669.8,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,7,2018-06-19 13:48:48,296.93,,,1,"b'b\' Thanks for following up @anton48.  Not sure if we want to add a FreeBSD specific ""work around""", or if we should just revert the  change from #9598.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,8,2018-06-19 13:48:48,14.5,,1,,"b""b' Agree with @fanquake.  Having different code for each platform makes testing a nightmare. Btw. I believe you can specify the function template you want to call with  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,9,2018-06-19 13:48:48,339.23,,,1,"b""b' @fanquake @MarcoFalke Thanks for reviewing. Feedback addressed. Please re-review :-)  @anton48 Can you confirm that the updated version works as expected for you?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,10,2018-06-19 13:48:48,21.72,,1,,"b""b' @practicalswift by updated version you mean  ? yes"," it can be compiled without errors on FreeBSD (tested on 10 and 11 versions).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,11,2018-06-19 13:48:48,17.88,,,1,"b'b"" @anton48 Yes"," that\'s the new version. Thanks for confirming.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,12,2018-06-19 13:48:48,352.02,1,,,"b'b"" I\'m confused. I build bitcoin core on FreeBSD all the time and have never needed this. #2695 is *ancient*.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,13,2018-06-19 13:48:48,13.72,,1,,"b""b' The cast to int was only recently removed in master and I believe it only fails on FreeBSD 10"," not 11.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,14,2018-06-19 13:48:48,419.4,,1,,"b""b' utACK 629a47a1543a6e77cbf9c73917e2e419669b04df'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,15,2018-06-19 13:48:48,225.5,,1,,"b""b' utACK 629a47a1543a6e77cbf9c73917e2e419669b04df'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,16,2018-06-19 13:48:48,428.93,,1,,"b""b' utACK 629a47a for fixing the FreeBSD 10.x build. As noted above"," the issue comes from Clang 3.4'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,closed,2018-06-27 08:42:01,424.18,2,10,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13503,closed,-,-,-,2,10,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,opened,2018-06-21 03:24:09,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,title,2018-06-21 03:24:09,00:00,,1,,"b""b' depends: set LANG=C in Makefile'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,body,2018-06-21 03:24:09,00:00,,1,,"b'b"" While testing some of @theuni\'s work for iOS cross builds in depends", I found a locale related issue that appears when preprocessing OpenSSL\'s  . This is on macOS 10.13.5.  7ac0c67 (a subset of the iOS related build changes) is included to show the issue.  When doing a depends build with master (6579d80) + that commit I see:  It seems like the issue could be related to embedded double quotes.  I did try setting other [locale related variables]url    etc," however was the only one that actually seemed to work.  This is the output of on my machine:  Todo: [ ] Confirm this isn\'t a local issue. [ ] Should we also set other locale related vars? [ ] Followup other uses of in  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,1,2018-06-21 03:24:09,623.42,1,,,"b'b"" Weird! Shouldn\'t be used only in the absence of other locale related environment variables?  from OS X:   from Linux: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,closed,2018-08-10 12:37:03,552.9,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,2,2018-06-21 03:24:09,1369.5,,1,,"b""b' The last travis run for this pull request was 50 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,reopened,2018-08-10 12:37:04,0.02,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,3,2018-06-21 03:24:09,624.45,,1,,"b""b' Reviewers", this pull request conflicts with the following ones: * #12557 ([WIP] 64 bit iOs device support by Sjors) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,4,2018-06-21 03:24:09,379.97,,1,,"b""b' Going to close this for now. It can be worked around in other ways.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,closed,2018-10-09 05:21:29,1004.42,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13514,closed,-,-,-,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,opened,2018-06-21 04:10:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,title,2018-06-21 04:10:47,00:00,,1,,"b""b' travis: Enable qt for all jobs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,body,2018-06-21 04:10:47,00:00,,1,,"b""b' If depends build take more than 20 mins"," skip Bitcoin Core build to store depends caches and mark it fail. Then restart the job for Bitcoin Core build. Enable Qt build for Windows and 32-bit Linux Enable wallet for depends x86-64 Linux Disable gui tests for Windows since they are not supported  This would be helpful for upgrading Qt (#12971) and protobuf (#13513)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,1,2018-06-21 04:10:47,501.1,,,1,"b""b' Would be nicer if travis natively supported multi-job-multi-stage builds", but yeah," maybe this hack is required.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,2,2018-06-21 04:10:47,1391.48,,1,,"b""b' Reviewers", this pull request conflicts with the following ones: * #14231 (travis: Save cache even when build or test fail by ken2812221)* #13827 ([WIP] depends: Add native_nsis to support unicode by ken2812221) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,3,2018-06-21 04:10:47,746.25,,1,,"b""b' Update: Enable qt for arm'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,4,2018-06-21 04:10:47,930.3,,1,,"b'b"" It\'s time to make Mac build work on master again.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,closed,2018-08-30 13:04:36,533.82,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,reopened,2018-08-30 17:53:19,288.72,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,5,2018-06-21 04:10:47,80.12,,,1,"b'b"" This is ready for review. Thanks for #13863"," I don\'t have to do a lot of line changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,6,2018-06-21 04:10:47,176.58,,1,,"b""b' As this is effectively reverting a33b7c9cb545985771d074748c0e368ca2d06702"," could the GOALs be changed to  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,7,2018-06-21 04:10:47,813.22,,1,,"b""b' @MarcoFalke Changed goals to deploy"," also revert 3d69853090a9382fc31b1558a74627f61f002584 because of cf01fd6f9c1a31d16884cd1a1a686602b4b47027'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,closed,2018-10-26 11:53:11,1079.87,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13515,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,opened,2018-06-25 00:55:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,title,2018-06-25 00:55:03,00:00,,1,,"b""b' [tests] Reduced number of validations in tx_validationcache_tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,body,2018-06-25 00:55:03,00:00,,1,,"b""b' Following a suggestion in the comments", changed from testing all possible flag combinations to testing a random subset. Also created a new enum constant for the highest flag," so that this test doesn\\xe2\\x80\\x99t keep testing an incomplete subset in case a new flag is added.  Timing for  :  This PR was split from #13050. Also see #10026.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,1,2018-06-25 00:55:03,622.93,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15921]url  (Tidy up ValidationState interface by jnewbery)* [#13360]url  ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,2,2018-06-25 00:55:03,577.27,,1,,"b""b' The last travis run for this pull request was 50 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,closed,2018-08-25 20:55:15,1200.2,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,reopened,2018-08-25 20:55:16,0.02,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13533,open,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,opened,2018-06-27 10:36:33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,title,2018-06-27 10:36:33,00:00,,1,,"b""b' Adding -compose files'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,body,2018-06-27 10:36:33,00:00,,1,,"b""b' Ability to build and run bitcoin from Docker. Builds docker image with bitcoin and DB4 4.8.30.NC"," starts with docker-compose. Easy to modify startup parameters or add configuration files and scale containers. Image uses CentOS and gosu to start bitcoin as bitcoin user (PID 1).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,1,2018-06-27 10:36:33,9.17,,,1,"b'b"" #10903 was the last time this was suggested. The conclusion then was that this isn\'t necessarily something we want to maintain here"," and would probably be better suited to an external repo.  See: url  url  url for some examples of such repositories.  @stakauskas What\'s your motivation for adding the Dockerfiles here?  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,2,2018-06-27 10:36:33,5.72,,1,,"b""b' Agree with @fanquake '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,3,2018-06-27 10:36:33,26.33,,1,,"b""b' NACK for the same reasons.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,4,2018-06-27 10:36:33,3.23,,1,,"b""b' It was first created as an addition to ElementsProject in url  "," thus appeared here.  Though having Docker images could be beneficial for community wanting to run software in containers and one image would target  instead of having separate packages for each of them.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,5,2018-06-27 10:36:33,89.63,,,1,"b""b' I think maintaining several like this as one big advantage: We can use those as part of the CI to be sure bitcoind build correctly on the different OS which should be supported by Bitcoin", as well as running the tests on different distro. (Actually I think this is what we do for now only on ubuntu?)  @sipsorcery for example maintain a dockerfile for building on Windows via msvc, and configured CI to run it. This way he can warn you when something break Windows msvc build.  Even if you are not fan of windows, I think you will see the advantage to have it for your favorite linux distro instead of relying on outdated documentation and untested dev environment.  It is also way more useful than maintaining a documentation, as anybody can reproduce the build on their environment just by reading the dockerfile related to their OS.  See this as a documentation which can be checked automatically during CI.  It also has the advantage that people can easily distribute their own bitcoin core image with their favorite freshly backed commits.  My repo url  is good if you want just an official release, but I totally see the advantage of providing dockerfiles which build from sources.  It is big ACK for me. It is better than trying to maintain a documentation," but serve also other purposes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,6,2018-06-27 10:36:33,146.5,,1,,"b""b' I consider these different:  Dockerfile(s) to build the *official* image usually in a separate repository with multiple  and usually download the office source code;  docker-compose to launch 3rd party services to aid development not relevant here I think.  docker-compose + multiple Dockerfile to build from local source in different *flavours*  usually to aid development or CI.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,7,2018-06-27 10:36:33,2.88,,1,,"b""b'  This is also possible with external Dockerfile.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,8,2018-06-27 10:36:33,19.53,,1,,"b'b"" I\'d compare Dockerfile to RPM spec and docker-compose as a way to manage your containers", e.g  for services, just portable across different OS versions. While you can run any docker image with \'docker run\', it\'s much easier to start with docker-compose, which allows easier and faster configuration for running containers. In this case  nodes can be started within one go, scale if needed. Network  management provided out of the box, if you wanted 3 nodes, you do not need to change configuration for port mapping, as compose will assign random host -> same port in container," etc...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,9,2018-06-27 10:36:33,14.87,1,,,"b'b"" I don\'t see what advantage a dockerfile gives us to our existing processes. Note that it is already possible to build any commit from source deterministically by using it\'s gitian descriptor. Using a dockerfile to create a docker image as opposed to using gitian to create a binary wouldn\'t be deterministic any more.  Also note that the actual build step is just a single line  . Installing the dependencies is what differs per dist and usually the cause of issues. Instead of having a Dockerfile for each distribution", it seems easier to me to just list the dependencies in a readme (and maybe a one-liner for common distributions to install all dependencies)  Note that on travis we already use docker, but I don\'t see how a Dockerfile would simplify anything there.  If there is a valid use case for a Dockerfile that makes our process easier, I am all in, otherwise I think this will lead to a maintenance burden and nit-picking," because everyone has their own use case and wants the Dockerfile to match that use case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,10,2018-06-27 10:36:33,7.78,1,,,"b""b'  Sorry for ot"," but we had someone contribute an rpm spec file and then it would just sit there unmaintained and now it is unclear what to do with it: #13137  I think we want to avoid doing the same with a Dockerfile.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,11,2018-06-27 10:36:33,55.62,,1,,"b'b""  There\'s no need to have Dockerfile per each distribution", though it\'s possible and not difficult to maintain. After choosing base image, the whole lifecycle of running(also ) software is as easy as choosing image:tag, bitcoin:version," instead of downloading package for  and figuring out deps individually.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,12,2018-06-27 10:36:33,869.77,1,,,"b""b'  I disagree with this point. This result in outdated documentation", and additional support when somebody complains that it does not work because some outdated dependencies on their system," also it never get tested and too often people break builds without knowing. @sipsorcery very often report Windows msvc breaks as issues and PR. Those could be easily detected if dockerfile were used and built during CI.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,13,2018-06-27 10:36:33,783.9,,,1,b'b\' As someone new to bitcoin compilation, I found getting a gitian build up and running quite complicated," especially on an OSX machine trying to use virtualization. I get the motivations around providing Dockerfiles in external projects but that means there is no (obvious) ""source of truth"" for getting started. If we want more devs poking at bitcoin I think it would be good that there was an official Dockerfile here that just gave you a build that you could play with locally (the intention being development", not production). That way you could test your changes easily. I was about to submit one but then saw this effort and decided to pile on my comment. I greatly support making it easier for new devs to get a local image running and docker provides exactly that.  A few prior comments may not be entirely familiar with how docker works. We need provide only one file and that file will be universal and will not require any maintenance as it will self-document all the dependencies. A CI build could be used to verify that the container builds and produces the bitcoind binary, which is all that\\\'s necessary to make sure nothing is broken as far as deps go. In this regard it\\\'s much simpler than an rpm spec and not directly comparable.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,14,2018-06-27 10:36:33,886.48,,1,,"b'b"" Concept ACK", if this helps people to run tests, ci and generally makes it easier to bootstrap a development environment. Though, we shouldn\'t provide any ways to run this in production, since there are already statically linked, gitian-built binaries available. If you need those releases wrapped into a dockerfile," there is already url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,15,2018-06-27 10:36:33,99.5,,,1,"b'b""  The initial pull request emerged and divided into two groups . Initially it was created as an alternative to running standalone binaries in favor of running it in containerised setup. If it\'s completely for dev purposes (which is a good start) I\'ll modify Dockerfile and related files accordingly so it could be more suitable for the purpose.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,16,2018-06-27 10:36:33,306.05,,1,,"b'b\' Going to chime in again to slightly disagree with ""we shouldn\\\'t provide docker for production"""," again due to the ""source of truth"" argument. If you google bitcoin on docker you get a variety of blog posts and repos. It\\\'s not that hard to provide a dockerfile and make sure it\\\'s working which ensures that it\\\'s as easy as possible to run a node. If more nodes is what we want", then providing a production friendly way to spin one up is not a bad idea.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,17,2018-06-27 10:36:33,18.52,,1,,"b'b"" -1 to provide production images here. I think we shouldn\'t influence deployment.  +1 in providing docker compose services to build and test with diferent toochain and configurations.  +1 in providing official docker images (not sure how to tackle that) elsewhere.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,18,2018-06-27 10:36:33,325.67,,1,,"b""b' Concept ACK. This is contrib anyway"," if it goes unmaintained it can always be simply removed. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,19,2018-06-27 10:36:33,307.02,,1,,"b'b"" @jtimon it can\'t be unmaintained if included inside CI. Having a docker failing to build is equivalent to having an out of date documentation: the documentation need to be fixed"," or the committer need to not break things.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,20,2018-06-27 10:36:33,0.85,,,1,"b""b' @sipsorcery you might be interested to follow this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,21,2018-06-27 10:36:33,112.48,,1,,"b""b' Summoning @ruimarinho as he also maintains url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,22,2018-06-27 10:36:33,233.57,,1,,"b""b' I believe providing a dockerfile for production use can be done independently (in a different pull request) of providing a dockerfile for  purposes?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,23,2018-06-27 10:36:33,1.6,,1,,b'b\' If this pull request is to be used to add a devel dockerfile," I\\\'d suggest prefixing the title with ""test"" or ""qa"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,24,2018-06-27 10:36:33,306.0,,,1,"b'b""  Files in this pull request would match the prod setup. We use it the way it is to run and scale nodes in prod environment. I\'d suggest that better way would be to create a separate pull req for development environment as it will differ significantly and close this if there\'s no need for prod env. Though"," I would agree @skwp that official production friendly docker environment would be nice to have. As for someone having resources it\'s as easy as one command to run x  nodes in the current containerised infrastructure. And I don\'t see how it would influence deployment as mentioned by @promag apart from the fact that it would make it much easier to deploy and manage.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,25,2018-06-27 10:36:33,8.78,,1,,"b""b' I mean", should we promote deployments with docker? The way I see," that would be the case if a dockerfile is added.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,26,2018-06-27 10:36:33,9.38,,,1,"b'b""  It wouldn\'t be a promotion", it would just be an ability for people to choose another variant to running the software. Most of the projects provides official  images in addition to the traditional released binaries. It would also make it easy to have official way to run bitcoin nodes in a container native infrastructures which is quite common approach by todays standards; and possibly attract much more people running nodes," with having official way to do it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,27,2018-06-27 10:36:33,545.43,,,1,"b'b\' We now also have an external ""packaging"" repo at url  where things like this may make more sense", just to add to the discussion. On July 11, 2018 4:07:37 PM UTC, paulius  wrote:>>that would be the case if a dockerfile is added.>choose another variant to running the software. Most of the projects>provides official  images in addition to the>traditional released binaries. It would also make it easy to have>official way to run bitcoin nodes in a container native infrastructures>which is quite common approach by todays standards. It would possibly>attract much more people running nodes, with having official way to do>it.>You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,28,2018-06-27 10:36:33,662.4,,1,,"b""b' @TheBlueMatt  Agreed"," moving Docker related stuff to bitcoinwould make sense.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,29,2018-06-27 10:36:33,240.82,,,1,"b'b\'  That would solve the ""6 people maintaining the same thing independently"" problem too. Fine with me. To me the most important part is avoiding that work duplication. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,30,2018-06-27 10:36:33,15.73,,1,,"b""b' Could you adjust this pull request to be just a patch that adds a link in some doc to url  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,31,2018-06-27 10:36:33,0.7,,,1,"b""b' And everyone who is interested in this should go and review url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,32,2018-06-27 10:36:33,982.5,1,,,"b'b"" I really dislike adding on  ... the whole point is having that run as part of the CI. By moving on separate repo"," it makes sure it will never be part of CI because you can\'t build with the specific commit you pulled via  It is quite useless there I think. :(""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,closed,2018-08-25 20:55:11,618.63,4,20,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,33,2018-06-27 10:36:33,720.23,,1,,"b""b' The last travis run for this pull request was 59 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,reopened,2018-08-25 20:55:12,0.02,4,21,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,34,2018-06-27 10:36:33,509.2,,1,,"b""b' As mentioned above"," this is now being added to in url  Closing this PR for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,closed,2018-10-20 05:24:24,509.2,4,22,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13542,closed,-,-,-,4,22,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,opened,2018-06-27 16:12:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,title,2018-06-27 16:12:13,00:00,,1,,"b""b' wallet: Fix use of uninitialized value bnb_used in CWallet::CreateTransaction(...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,body,2018-06-27 16:12:13,00:00,,1,,"b""b' Avoid use of uninitialized value in  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,1,2018-06-27 16:12:13,10.3,,1,,"b""b' This is a return value"," so it is never uninitialized.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,2,2018-06-27 16:12:13,4.12,,1,,"b""b' @MarcoFalke In the case of then an uninitialized is read?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,3,2018-06-27 16:12:13,1023.58,,1,,"b""b' No more conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,4,2018-06-27 16:12:13,41.55,,1,,"b""b' FYI also not initialized in url  But there it should be ok.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,5,2018-06-27 16:12:13,1193.25,,1,,"b""b' @MarcoFalke Is my reasoning correct or do your comment still stand? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,6,2018-06-27 16:12:13,3.65,,,1,"b""b' @promag Thanks for reviewing. Anything changes needed to get an or from you? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,7,2018-06-27 16:12:13,179.3,1,,,"b""b' We really should have a test case that exercises the  logic if  . Otherwise it is hard to reason about the correctness of this patch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,8,2018-06-27 16:12:13,18.05,1,,,"b'b\' @MarcoFalke I was asking about the statement ""it is never uninitialized"". That was a misunderstanding?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,9,2018-06-27 16:12:13,7.5,,1,,"b'b"" Whenever it is returned", it is initialized. However, if it is not returned, we shouldn\'t be reading from it," so I was asking about a test case that exercises that exact code path.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,closed,2018-08-25 20:55:08,282.92,2,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,10,2018-06-27 16:12:13,681.63,,1,,"b""b' The last travis run for this pull request was 59 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,reopened,2018-08-25 20:55:09,0.02,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,11,2018-06-27 16:12:13,755.93,,,1,"b""b' @MarcoFalke I originally found this issue by using static analysis but I rediscovered it using dynamic analysis as well. It turns out that this is triggered simply running the test suite under UBSan :-)   See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,12,2018-06-27 16:12:13,160.93,,,1,"b""b' @MarcoFalke Thanks for reviewing! Addressed feedback. Please re-review :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,13,2018-06-27 16:12:13,2.85,,1,,"b""b' utACK a23a7f60aa07de52d23ff1f2034fc43926ec3520'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,14,2018-06-27 16:12:13,54.92,,,1,"b'b"" Interesting"," I couldn\'t reproduce this locally with  . Could someone else try this?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,15,2018-06-27 16:12:13,1197.23,,1,,"b'b\' Removed ""potential"" in the title since this use of uninitialized value has been observed also during run-time :-)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,closed,2018-09-24 11:39:08,883.98,2,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13546,closed,-,-,-,2,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,opened,2018-06-27 16:46:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,title,2018-06-27 16:46:54,00:00,,1,,"b""b' Document assumptions made in PeerLogicValidation::SendMessages(...) and rescanblockchain(...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,body,2018-06-27 16:46:54,00:00,,1,,"b""b' Document assumptions made in and via assertions.  The fact that and in these contexts is not immediately obvious. Explicit is better than implicit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,closed,2018-08-17 15:34:07,1367.22,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,reopened,2018-08-17 15:34:10,0.05,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,1,2018-06-27 16:46:54,1393.72,,1,,"b'b""  I don\'t agree"," it\'s obvious because they are used right after the assertions.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,2,2018-06-27 16:46:54,35.63,,,1,"b""b' @promag Yes", but the assertion documents that the dereference without a prior null check is intentional and not just an oversight. That helps static analyzers and human reviewers," don\\xe2\\x80\\x99t you agree? :-)  FWIW I\\xe2\\x80\\x99ve seen numerous static analyzers independently flag these specific cases (and the cases covered by the other similar assertion PR:s). I\\xe2\\x80\\x99m not just adding asserts randomly for fun :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,3,2018-06-27 16:46:54,1419.7,,1,,"b""b' No more conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,closed,2018-10-18 21:37:38,363.47,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13548,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,opened,2018-06-27 21:42:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,title,2018-06-27 21:42:36,00:00,,1,,"b""b' Tests: parameterize adjustment period in versionbits_computeblockversion'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,body,2018-06-27 21:42:36,00:00,1,,,"b'b"" Replace hard coded values (eg. 2016) with where appropriate. This parameterizes hard coded values in the unit test that refer to the  ", which currently is  .  This includes values not exactly 2016 but which were derived from it. Also changed to where appropriate to avoid compiler warnings. This makes one source of truth," and also helps people who might be adjusting this value in testing so the unit tests don\'t break.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,1,2018-06-27 21:42:36,5.53,,1,,"b""b' The action described in the commit comment is more narrow than the action performed in the commit. Please adjust the comment. Also"," please squash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,2,2018-06-27 21:42:36,547.85,,1,,"b""b' utACK 669dfa98bfbb3f70ce62fb1fbb2bad0a43fb0726 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,closed,2018-08-25 20:55:03,1392.45,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,3,2018-06-27 21:42:36,839.08,,1,,"b""b' The last travis run for this pull request was 58 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,reopened,2018-08-25 20:55:05,0.03,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,4,2018-06-27 21:42:36,1254.65,,1,,"b""b' Please squash your commits according to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,5,2018-06-27 21:42:36,37.2,,1,,"b""b' utACK code"," please squash.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,6,2018-06-27 21:42:36,490.95,,1,,"b""b' squished. \\xf0\\x9f\\x99\\x82'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,closed,2019-05-21 12:06:44,911.65,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13555,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,opened,2018-06-28 05:08:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,title,2018-06-28 05:08:55,00:00,,1,,"b""b' Drop unused GetType() from CSizeComputer'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,body,2018-06-28 05:08:55,00:00,,1,,"b'b"" Based on conversation in #13462", it seems the serialization has very narrow . In every case except for  , which specifically relates to a network peer\'s address, not a wallet address etc.," the serialized representation of an object is irrespective of its destination / type.  This removes the unused method from as a step to further narrowing that use.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,1,2018-06-28 05:08:55,258.73,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #14191 ([RPC] decodeblock by instagibbs)* #13359 (Directly operate with CMutableTransaction by MarcoFalke)* #13307 (Replace coin selection fallback strategy with Single Random Draw by achow101) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,2,2018-06-28 05:08:55,490.58,,,1,"b""b' utACK 60cf69ee7855b8d5c86d3ed41c47f764ccee5095. Nice simplification.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,3,2018-06-28 05:08:55,1097.7,,1,,"b'b"" I wonder if this is slightly confusing as long as long as it still uses the type parameter in the rest of (de)serialization.  Long term I do think that it makes sense to get rid of it altogether. Instead of passing a type into the serialization it\'d be more clear to use a subclass or proxy object if different kinds of (de)serialization are wanted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,closed,2018-08-25 20:55:00,946.08,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,4,2018-06-28 05:08:55,539.08,,1,,"b""b' The last travis run for this pull request was 58 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,reopened,2018-08-25 20:55:01,0.02,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,5,2018-06-28 05:08:55,542.05,,1,,"b""b' Rebased for #13792'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,6,2018-06-28 05:08:55,1381.95,,1,,"b""b' Made the now single-arg constructor  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,closed,2018-09-11 07:30:41,635.67,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,7,2018-06-28 05:08:55,1233.05,,1,,"b""b' Edit: Removed. Not really fair of me to ask such a thing. Still not sure how to fix the code but will work it out myself.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13558,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,opened,2018-06-30 09:50:46,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,title,2018-06-30 09:50:46,00:00,,,1,"b'b"" Can\'t compile bitcoin for SmartOS recipe for target \'-\' failed""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,body,2018-06-30 09:50:46,00:00,1,,,b'b\' <!-This issue tracker is only for technical issues related to Bitcoin Core.  General bitcoin questions  support requests are best directed to the Bitcoin StackExchange at url For reporting security issues," please read instructions at url If the node is ""stuck"" during sync or giving ""block checksum mismatch"" errors", please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -     I am trying to compile the latest bitcoin source from GitHub on the latest SmartOS and do not know how to solve the following compile error... \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,1,2018-06-30 09:50:46,480.23,,1,,"b'b"" It looks like int8_t and char are the same type on your system"," while the code assumes they\'re different. I\'m not sure how we should deal with that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,2,2018-06-30 09:50:46,1174.7,,1,,"b""b' Is this a compiler issue and would recompiling a later version of g++ get over the issue? Which version do you recommend to get over this issue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,closed,2018-07-01 17:09:33,438.78,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,3,2018-06-30 09:50:46,790.7,,1,,"b""b' @stacepellegrino could you re-open this? We can close it when a fix is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,reopened,2018-07-02 05:44:41,755.13,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,4,2018-06-30 09:50:46,188.5,,1,,"b""b' Reopened till the fix is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,5,2018-06-30 09:50:46,1.3,,1,,"b""b' Reopened until fix is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,closed,2018-07-05 11:35:39,350.97,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,6,2018-06-30 09:50:46,105.38,,1,,"b""b' still not fixed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,7,2018-06-30 09:50:46,495.6,1,,,"b""b' @askari01 can you elaborate on what you\\xe2\\x80\\x99re seeing / post your build error output? The fix for this error is in master"," so if you are building master I suspect you are seeing something different.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,8,2018-06-30 09:50:46,57.57,,1,,"b""b' > make: *** [all-recursive] Error 1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,9,2018-06-30 09:50:46,425.5,,1,,"b""b' What is the output of and does work?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,10,2018-06-30 09:50:46,446.17,,1,,"b'b"" output from git log -1:  make disclean && ./ && ./configure && make  No rule to make target \'disclean\'.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,11,2018-06-30 09:50:46,800.27,,1,,"b'b"" @askari01 Could you please create a fresh issue with your problems and include all steps to reproduce from a fresh clone in a fresh folder? (Don\'t forget to include the file after  )""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13576,closed,-,-,-,2,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,opened,2018-07-01 16:37:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,title,2018-07-01 16:37:17,00:00,,,1,"b'b"" Can\'t compile bitcoin for SmartOS recipe for target \'-glibc_sanity.o\' failed""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,body,2018-07-01 16:37:17,00:00,1,,,b'b\' <!-This issue tracker is only for technical issues related to Bitcoin Core.  General bitcoin questions  support requests are best directed to the Bitcoin StackExchange at url For reporting security issues," please read instructions at url If the node is ""stuck"" during sync or giving ""block checksum mismatch"" errors", please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -    After fixing #13580 my build still fails with...   I have attached  []url  for your review. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,1,2018-07-01 16:37:17,22.33,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,2,2018-07-01 16:37:17,280.22,,1,,"b'b"" I\'ll take this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,3,2018-07-01 16:37:17,76.32,,1,,"b""b' Could you try building my branch at #13584?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,4,2018-07-01 16:37:17,43.85,,1,,"b""b' Just doing a cloning your branch to build now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,5,2018-07-01 16:37:17,16.05,,1,,"b""b' What commands do I use to fetch"," merge and build your branch?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,6,2018-07-01 16:37:17,7.9,,1,,"b""b' Just figured it out... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,7,2018-07-01 16:37:17,20.43,,1,,"b'b"" I don\'t think the branch pulled as I am still getting the same build error. What are the commands needed to pull your branch?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,8,2018-07-01 16:37:17,0.2,,1,,"b""b' Not at a computer to confirm"," but I think this should work: git remote add Empact url  git fetch Empact git checkout -b cstring  make'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,9,2018-07-01 16:37:17,29.2,,1,,"b'b"" Build now does not fail when compiling now. @Empact \'s fix solved the issue.  However"," build now fails with the following:   Creating a new issue regarding this build failure.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,closed,2018-07-02 00:57:38,500.35,1,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,10,2018-07-01 16:37:17,101.62,,1,,"b""b' @stacepellegrino could you re-open this? We can close it when a fix is merged.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,reopened,2018-07-02 05:44:23,286.75,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,11,2018-07-01 16:37:17,985.0,,1,,"b'b\' @Empact Are you still working on a ""more targeted fix""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,12,2018-07-01 16:37:17,1044.83,1,,,b'b\' Sorry I forgot that PR fixed this issue. I can go with either restoring the specific include or merging the existing work," which I just reopened.  The ""more target fix"" I\\\'ve been working on relates to applying iwyu to bitcoin", which I intend to use as a external / automated check on the include work, e.g. #13584. I\\\'ll post the related iwyu output today.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,13,2018-07-01 16:37:17,1171.68,,1,,"b'b"" Here\'s a PR to fix just this instance: #13619. It may or may not be enough to get past this and onto #13585"," but @stacepellegrino will have to confirm.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,14,2018-07-01 16:37:17,243.52,,1,,"b'b"" @stacepellegrino I don\'t think you have your system properly setup"," e.g. see this output from configure:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,15,2018-07-01 16:37:17,986.88,,1,,"b""b' I believe this can be fixed by adding the missing include:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,16,2018-07-01 16:37:17,1005.63,,1,,"b'b"" @MarcoFalke agreed", similarly: #13619  But I\'m doubting this SmartOS thread if configure can not run successfully," then are there not some basic platform issues to address first? Seems configure should run cleanly before we tackle build errors.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,17,2018-07-01 16:37:17,1085.8,,1,,"b'b"" @Empact sadly this is just a bug in SmartOS\'s libc. glibc [even makes a note]url  about _not_ using memset for this reason.  We can work around it by splitting glibc_ into two pieces: One for and one for  . Once split"," the file with can safely include  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,18,2018-07-01 16:37:17,1119.52,,1,,"b""b' I ran into this issue as well and was able to fix it using the diff provided by @MarcoFalke I provisioned a fresh SmartOS 16Q4 LTS instance to do this:   Installed deps:   Pulled the source and checked out the latest version (at the time of this writing):   Autogen + configure:   Patch the source:    Compiled:   Ensured it worked: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,19,2018-07-01 16:37:17,1430.25,,1,,"b""b' @bahamas10 would you try building the code on this branch?: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,20,2018-07-01 16:37:17,97.32,,1,,"b'b"" @Empact Tested. I used the same instance I used in my previous comment with the same dependencies already installed:    I haven\'t looked into this tonight (I can look more tomorrow)"," but i\'m willing to bet there probably needs to be a somewhere.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,21,2018-07-01 16:37:17,910.73,,1,,"b""b' @Empact I was able to get this all to compile by adding to the step '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13581,open,-,-,-,2,20,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,opened,2018-07-01 20:23:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,title,2018-07-01 20:23:07,00:00,,1,,"b""b' Extract AppInitLoadBlockIndex from AppInitMain'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,body,2018-07-01 20:23:07,00:00,,1,,"b""b' AppInitMain goes from ~650 lines to ~500. This also replaces constructs like and using vs with a simple bool result for more explicit operation.  Prompted by looking into #13577 Suggest: to aid review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,1,2018-07-01 20:23:07,648.13,,1,,"b""b' Both Windows builds failed with:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,2,2018-07-01 20:23:07,17.97,,1,,"b""b' Renamed to to avoid windows conflict. Note this was in an enum class so seems Windows is applying an macro or the like.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,3,2018-07-01 20:23:07,643.7,,,1,"b'b"" utACK 67ed865.  Nice refactor. Personally", I find the enum a bit heavy and think it would be simpler to return a bool and an additional outparam," but I don\'t feel too strongly. Check in the false return case could just be ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,4,2018-07-01 20:23:07,117.23,,,1,"b""b' Thanks for the review @jimpo. I see what you mean switched to a boolean return", and made an out arg as it was already being used to trigger the retry behavior," so now it can be toggled within the function to disable retry. Lmk if you have thoughts on that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,5,2018-07-01 20:23:07,146.12,,1,,"b""b' utACK fb28c7f5cf903c0c21f823b2e179a39bd69c9549  Yes"," I like this approach more.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,6,2018-07-01 20:23:07,1034.4,,1,,"b""b' Rebased for #13235'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,7,2018-07-01 20:23:07,23.32,,1,,"b""b' Needs rebase for #13577'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,8,2018-07-01 20:23:07,723.92,,1,,"b""b' Rebased for #13577'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,9,2018-07-01 20:23:07,189.25,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15329]url  (Fix InitError() and InitWarning() content by hebasto)* [#15218]url  (validation: Flush state after initial sync by andrewtoth)* [#12980]url  (Allow quicker shutdowns during LoadBlockIndex() by jonasschnelli) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,10,2018-07-01 20:23:07,1217.65,,1,,"b'b"" Switched to using function-try-block. If people aren\'t into that"," maybe we should discourage them in the developer-notes? url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,11,2018-07-01 20:23:07,300.37,,1,,"b'b"" Travis failed with unrelated error"," restarted.  Regarding function-try-block I\'m -0 if the reasoning is just to save one level of indentation in the function body.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,12,2018-07-01 20:23:07,374.47,,1,,"b""b' Yeah", on second thought," switched back to regular . The framing of the function body and the consistent treatment help with the reading of the function IMO.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,13,2018-07-01 20:23:07,474.93,,1,,"b""b' utACK a2dbe2a.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,14,2018-07-01 20:23:07,1163.77,,1,,"b'b"" Locally I get:   Let\'s see what travis says""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,closed,2018-09-07 18:18:20,1315.22,0,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,reopened,2018-09-07 18:18:26,0.1,0,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,15,2018-07-01 20:23:07,167.88,,1,,"b""b' @MarcoFalke rebased and added the lock declaration to  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,16,2018-07-01 20:23:07,25.12,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,17,2018-07-01 20:23:07,1305.38,,1,,"b""b' Rebased for #14437'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,18,2018-07-01 20:23:07,212.43,,1,,"b""b' Appveyor failure looks unrelated'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,19,2018-07-01 20:23:07,842.08,,1,,"b""b' Reworked to minimize  . Now is a minimal extraction.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,20,2018-07-01 20:23:07,159.33,,1,,"b""b' Rebase for #15402'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,21,2018-07-01 20:23:07,216.37,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,22,2018-07-01 20:23:07,806.38,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,23,2018-07-01 20:23:07,759.25,,1,,"b""b' Closing as rebasing this is too much a chore. :P'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,closed,2019-05-28 21:12:34,174.13,0,23,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13582,closed,-,-,-,0,23,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,opened,2018-07-01 22:22:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,title,2018-07-01 22:22:35,00:00,,1,,"b""b' Audit string.h inclusion'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,body,2018-07-01 22:22:35,00:00,,1,,"b""b' * Prefer cstddef over cstring for size_t definition fewer overall definitions * Include cstring where used"," and note which definitions are used  Fixes #13581'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,1,2018-07-01 22:22:35,1158.82,,1,,"b""b' ~Closing in favor of future / more targeted work~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,closed,2018-07-02 17:41:25,1158.83,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,reopened,2018-07-09 19:57:17,135.87,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,2,2018-07-01 22:22:35,260.17,,1,,"b""b' Ran this through iwyu to confirm computationally that the relevant files were being locally referenced. See the output for master: url  And this PR: url Note the changes were identified independent of iwyu"," via grepping.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,3,2018-07-01 22:22:35,69.35,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #13177 (GCC-7 and glibc-2.27 back compat code by ken2812221) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,4,2018-07-01 22:22:35,333.72,,1,,"b'b"" Even given the iwyu logs"," I\'m doubting this is worth the review effort. Closing again!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,closed,2018-07-11 04:44:38,527.35,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13584,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,opened,2018-07-02 07:06:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,title,2018-07-02 07:06:36,00:00,,1,,"b""b' refactor: add benchmarks to bech32::'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,body,2018-07-02 07:06:36,00:00,,1,,"b""b' This PR adds benchmarks to  / .  The benchmark commit is duplicated in #13632.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,1,2018-07-02 07:06:36,259.97,,1,,"b'b"" @fanquake: This isn\'t really tests"," it\'s an optimization of  . It does include benchmarks to show that the optimization is useful though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,2,2018-07-02 07:06:36,1200.22,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #13249 (Make objects in range declarations immutable by default. Avoid unnecessary copying of objects in range declarations. by practicalswift) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,3,2018-07-02 07:06:36,406.63,,1,,"b'b"" I\'m a bit scared of this due to the potential security issue introduced. Is it really worth it?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,4,2018-07-02 07:06:36,703.28,,1,,"b""b' @laanwj If you mean the unchecked length"," I added an assertion in e35eed5.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,5,2018-07-02 07:06:36,302.28,1,,,"b""b' Sure", yes. Though an assertion is not a replacement for proper error handing, IMO. This still means the whole process crashes if a string that is too long is passed in," and makes the security dependent on assertions being enabled (this might be true in other place too though :( ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,6,2018-07-02 07:06:36,9.92,,1,,"b'b"" I am not convinced this is necessary myself anymore"," so I am closing. If someone feels like it\'s a worthy endeavour go nuts.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,closed,2018-07-11 07:08:54,2.3,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,7,2018-07-02 07:06:36,130.7,,,1,"b""b' It still makes sense to add the benchmark"," I think!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,reopened,2018-07-11 09:26:55,138.02,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,8,2018-07-02 07:06:36,8.08,,1,,"b""b' Dropped the last commit and keeping the bench part only.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,9,2018-07-02 07:06:36,8.27,,1,,"b""b' utACK 189cf35f3e6d2cc9ed08eb23dd0ea36be28b6c11'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,10,2018-07-02 07:06:36,0.8,,1,,"b""b' tACK 189cf35'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,closed,2018-07-11 09:45:14,18.32,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13586,closed,-,-,-,1,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,opened,2018-07-04 08:07:14,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,title,2018-07-04 08:07:14,00:00,,1,,"b""b' [OS X deployment] necessary dylib skipped'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,body,2018-07-04 08:07:14,00:00,,1,,b'b\' This is an issue we are carrying since 0.13 (or maybe earlier, that was the first time I have seen it) I just checked on the current codebase and discovered it is still there," so finally time to report.  On OSX the is working properly only the first time it is executed on a ""virgin"" system. All subsequent deployments are missing the libboost_systemwhich is definitely needed to run without dev environment. Obviously it thinks that the file is already in place: \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,1,2018-07-04 08:07:14,748.07,,1,,"b'b"" I\'ve never noticed this. Do you export the resulting dmg to a different system and get the error there"," or does this happen even on the same system?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,2,2018-07-04 08:07:14,479.18,,,1,"b'b"" The resulting dmg runs fine on the build system because it\'s using the already installed boost dylibs. But when using the image (or the app) on a system without dev (boost) framework installed"," it won\'t start and complain about the missing dylib. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,3,2018-07-04 08:07:14,170.37,1,,,"b'b"" What\'s the output of  It shows the external dependencies.  might be  ", which is a dependency of all executables.  (Side note: I\'m disappointed by that it\'s not compiled with  , but it\'s MIT licensed," so whatever)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,4,2018-07-04 08:07:14,967.63,,1,,"b""b' Pretty much of a list"," '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,5,2018-07-04 08:07:14,363.82,1,,,"b'b"" Your build: Bitcoin Core release build (everything\'s OK): Indeed"," there\'s a problem with building on your computer.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,6,2018-07-04 08:07:14,175.08,,,1,"b""b' Oh", of course, late in the night I have missed to check for the dist folder... Replaced the contents above," please kindly have a look again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,7,2018-07-04 08:07:14,130.65,,1,,"b""b' Your issue is solved now"," it copied all the external libs to the Frameworks folder in the package.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,8,2018-07-04 08:07:14,107.88,,,1,"b""b' Thanks for the debugging @DesWurstes. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,closed,2018-07-15 12:29:56,262.7,2,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,9,2018-07-04 08:07:14,65.15,1,,,"b'b"" Well not really", I just posted the wrong output before. To make sure there\'s nothing wrong with my system," I just did  a clean test again:     So I got the .dmg and moved it to another freshly installed machine:   And here is what we get (unshortened): ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,reopened,2018-07-15 13:37:01,67.08,3,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,10,2018-07-04 08:07:14,1121.62,,,1,"b'b"" I just did a fresh complication and make deploy on OSX 10.13 and can\'t find any link to (only to libboost_). Works perfectly fine here.  Though", I have the feeling that the native OSX dynamic linkes make deploy process (rather then the cross compiled depends build) is pretty much unmaintained (not sure if anyone is using this," eventually altcoin forks)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,11,2018-07-04 08:07:14,1144.17,,1,,"b'b"" Now that feeling is interesting. Would it mean that although in both cases", cross-compiling and native OS X deployment, the same script macdeployqt is called but on native it might link differently? Out of convenience I\'m doing all compiling and deployment, no matter if bitcoin or shitcoin," on mac as for the production environment I like to compile the features as per use case. That\'s a personal preference which became our internal rule way back when everything became simple and the need for messing around with the .pro file wasn\'t needed anymore.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,12,2018-07-04 08:07:14,1176.37,,1,,"b""b' update: found the link in my deployment: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,13,2018-07-04 08:07:14,29.7,,1,,"b""b' just force it to use the multi-threaded boost   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13594,open,-,-,-,3,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,opened,2018-07-07 01:06:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,title,2018-07-07 01:06:03,00:00,,1,,"b""b' WIP: bitcoin-tx: Require that input amount is provided for witness transactions'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,body,2018-07-07 01:06:03,00:00,,1,,"b""b' Applies fix from #12458 / #13547 to  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,1,2018-07-07 01:06:03,2.72,,1,,"b""b' wip: needs testing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,2,2018-07-07 01:06:03,871.33,,1,,"b'b"" I\'ll re-open this after one of #12458 / #13547 goes in.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,closed,2018-07-09 15:40:06,874.05,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,3,2018-07-07 01:06:03,186.1,,,1,"b""b'  Jup"," would be nice to add a test to the existing test cases.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,4,2018-07-07 01:06:03,127.03,,1,,"b""b' #13547 went in; reopen?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,reopened,2018-07-29 20:56:11,316.08,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13608,open,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,opened,2018-07-07 18:57:59,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,title,2018-07-07 18:57:59,00:00,,1,,"b""b' Qt: Only call tryGetBalances in pollBalanceChanged if the result will be used.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,body,2018-07-07 18:57:59,00:00,,1,,"b""b' getBalances takes significant processing if the wallet has many transactions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,1,2018-07-07 18:57:59,394.53,,1,,"b'b"" Concept ACK"," seems reasonable if it\'s an issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,2,2018-07-07 18:57:59,316.13,,1,,"b""b' Could do an early return to avoid wrapping the whole function scope in twosets of braces and indenting it by 4 spaces On Sat", Jul 7, 2018 at 2:33 PM," Pieter Wuille wrote:>'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,3,2018-07-07 18:57:59,442.95,,1,,"b""b' It takes a fair amount of blocks and transactions before the issue shows up. CPU usage scales with both the chain height and number of transactions.  gprof results show most of the time is taken by all the GetDepthInMainChain calls from IsTrusted  Testing on a regtest node with 10k blocks and 10k txns htop shows: +-6 CPU% before the changes and +-0.7 CPU% after  20k blocks and 10k txns: +-6.5 CPU% before the changes and +-0.7 CPU% after  40k blocks and 39.6k txns: +-20 CPU% before the changes and +-0.7 CPU% after'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,4,2018-07-07 18:57:59,461.67,,,1,"b""b' Concept ACK.  A greater improvement would be to avoid each 250ms. Will test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,5,2018-07-07 18:57:59,919.92,,,1,"b""b' Concept ACK  Nice first-time contribution @tecnovert!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,6,2018-07-07 18:57:59,445.42,,1,,"b""b' The way how to GUI (and the wallet) calculates the balance has significant performance impacts. I tried in the past to enhance this situation (but failed", see #10251). Concept ACK," will test and perf-compare soon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,7,2018-07-07 18:57:59,1417.03,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14437]url  (Refactor: Start to separate wallet from node by ryanofsky)* [#10973]url  (Refactor: separate wallet from node by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,8,2018-07-07 18:57:59,44.77,,1,,"b""b' The last travis run for this pull request was 61 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,closed,2018-09-07 21:00:24,122.42,0,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,reopened,2018-09-07 21:00:25,0.02,0,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,9,2018-07-07 18:57:59,1096.25,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13612,open,-,-,-,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,opened,2018-07-09 22:04:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,title,2018-07-09 22:04:56,00:00,,1,,"b""b' Include cstring alongside select in '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,body,2018-07-09 22:04:56,00:00,,,1,"b""b' At least SmartOS implements FD_ZERO relative to memset but does not ensure its availability. Including cstring fixes that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,1,2018-07-09 22:04:56,0.92,,1,,"b""b' Should fix #13581. @stacepellegrino are you up for building this branch?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,2,2018-07-09 22:04:56,23.6,,1,,"b""b' Alternatively we could include cstring all the time and drop the extern definition for memcpy. /cc @theuni 679240d0e9'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,3,2018-07-09 22:04:56,489.83,1,,,"b'b"" Closing this since I\'m doubting #13581 now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,closed,2018-07-10 06:39:17,514.35,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,reopened,2018-07-11 19:18:54,759.62,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,4,2018-07-09 22:04:56,822.92,,1,,"b'b"" Yes", this is not correct. We\'re attempting to replace memcpy," so including cstring is not the right thing to do. I\'ll comment further on #13581.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,5,2018-07-09 22:04:56,1312.83,,1,,"b""b' Closing as per url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,closed,2018-07-13 18:15:02,1376.13,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13619,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,opened,2018-07-14 02:54:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,title,2018-07-14 02:54:15,00:00,,1,,"b'b"" [depends] Don\'t build Qt dependencies if it doesn\'t support Qt""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,body,2018-07-14 02:54:15,00:00,,1,,"b""b' Take ARM in gitian for example: This PR  copying packages: boost openssl libevent zeromq bdb miniupnpc  master  copying packages: native_protobuf boost openssl libevent zeromq qrencode protobuf zlib bdb miniupnpc  This would be helpful to add risc-v support into gitian'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,closed,2018-07-14 09:42:10,407.92,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,reopened,2018-07-14 09:55:21,13.18,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,1,2018-07-14 02:54:15,538.9,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #12775 (Integration of property based testing into Bitcoin Core by Christewart)* #8469 ([POC] Introducing property based testing to Core by Christewart) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,2,2018-07-14 02:54:15,211.85,,1,,"b""b' Concept ACK. Just be careful to check how this interacts with #13604.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,3,2018-07-14 02:54:15,1124.5,,1,,"b""b' Prefer #13710'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,closed,2018-07-19 10:09:30,14.15,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13660,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,opened,2018-07-16 14:56:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,title,2018-07-16 14:56:35,00:00,,1,,"b""b' Remind developers that disablewallet=1 should always work'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,body,2018-07-16 14:56:35,00:00,1,,,"b'b"" A user may configure for instance to prevent a wallet from accidentally being created (which could lead to confusion as to what to backup).  Since #13059 a user might also use that option to prevent someone with RPC access from dynamically loading a wallet there\'re not supposed to.  The most rigorous way to do the above is to compile with  .  As of #13112 unknown config arguments throw an error. So the user in the above scenario would have to remove this line. But then later if they download a new binary with wallet support compiled", they might forget to add it back. For that reason I believe should always be allowed.  Although unknown config arguments throw an error, the wallet interface added in #10762 includes a dummy wallet to handle  . Part of this dummy wallets adds and other wallet parameters to the list of hidden params; those aren\'t shown in help," but their presence won\'t throw an error. This might change in the some future refactor though  So I added a comment that hopefully  prevents a future refactor from causing to throw when compiled with  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,1,2018-07-16 14:56:35,332.88,,1,,"b""b' AFAIU the test url  would fail if there was such refactor. However this test is not executed because:  url WDYT about improving this?  Otherwise utACK 262bdcb.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,2,2018-07-16 14:56:35,299.08,,1,,"b'b\' Perhaps we can make compiling with disable-wallet imply: (a) default for GetArg(""-disablewallet"") becomes true (b) throw an error when -disablewallet=0 is specified \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,3,2018-07-16 14:56:35,394.57,,1,,"b'b"" I forgot that Travis runs the functional test suite with as well: url Will look into @promag & @sipa\'s suggestions"," which should make this more robust than merely a comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,4,2018-07-16 14:56:35,777.13,,1,,"b""b' The last travis run for this pull request was 53 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,closed,2018-09-07 21:00:15,363.67,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,reopened,2018-09-07 21:00:16,0.02,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,5,2018-07-16 14:56:35,1279.23,,1,,"b""b'  This is not (yet) true. See  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,6,2018-07-16 14:56:35,0.3,,1,,"b""b' I think this can be closed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,7,2018-07-16 14:56:35,797.53,,1,,"b'b"" @MarcoFalke #14180 covers progag\'s suggestion"," but I still need to implement sipa\'s suggestion.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,8,2018-07-16 14:56:35,522.95,,1,,"b""b' Please let me know when you want to continue working on this"," so the pull request can be re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,closed,2018-11-07 16:20:16,1160.0,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13677,closed,-,-,-,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,opened,2018-07-17 12:12:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,title,2018-07-17 12:12:12,00:00,,1,,"b""b' travis: Check that ~/.bitcoin is never created'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,1,2018-07-17 12:12:12,16.73,,,1,"b""b' Nice. For some reason I thought we already had this. Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,2,2018-07-17 12:12:12,5.27,,1,,"b""b' Travis failure:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,3,2018-07-17 12:12:12,0.87,,1,,"b'b\' I have no idea how to fix the broken functional test cross platform without removing it.  Closing as ""up for grabs"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,closed,2018-07-17 12:35:04,22.87,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,4,2018-07-17 12:12:12,8.63,,1,,"b'b"" Let\'s remove it then. I prefer having this test"," TBH.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,reopened,2018-07-17 12:59:45,24.68,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,5,2018-07-17 12:12:12,203.23,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #13621 (Check for datadir after the config files were read by Flowdalic) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,6,2018-07-17 12:12:12,149.97,,1,,"b""b' utACK fabe28a0cdcfa13e0e595a0905e3642a960d3077'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,closed,2018-07-18 13:27:43,27.97,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13687,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,opened,2018-07-17 20:06:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,title,2018-07-17 20:06:51,00:00,,1,,"b""b' [test] Add coverage to estimaterawfee and estimatesmartfee'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,body,2018-07-17 20:06:51,00:00,,1,,"b""b' This adds light functional coverage to estimaterawfee a subset of the testing applied to estimatesmartfee"," and argument validation testing to both estimaterawfee and estimatesmartfee.  One valid estimatesmartfee signature test is commented out because it fails currently.  Extracted from #12940'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,1,2018-07-17 20:06:51,683.32,,1,,"b""b' Concept ACK modulo removal of wildcard imports :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,2,2018-07-17 20:06:51,351.3,,,1,"b""b' Removed wildcard imports. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,3,2018-07-17 20:06:51,92.27,,1,,"b""b' Rebased for #12257'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,4,2018-07-17 20:06:51,1387.07,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,closed,2019-04-28 19:11:35,1384.73,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,5,2018-07-17 20:06:51,310.8,,1,,"b""b' The last travis run for this pull request was 277 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,reopened,2019-04-28 19:11:36,0.02,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13693,open,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,opened,2018-07-18 10:36:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,title,2018-07-18 10:36:35,00:00,,1,,"b""b' Update cross compilation dependencies for Bionic"," clarify depends usage'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,body,2018-07-18 10:36:35,00:00,,1,,"b'b"" Bionic can\'t find the packages.  When using the depends system for your own host"," you don\'t need to install:  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,1,2018-07-18 10:36:35,43.3,,1,,"b""b'  I wonder why it recommends getting the gcc-4.8 packages at all.  What is preferable about forcing a certain version?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,closed,2018-09-07 21:00:10,623.58,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,2,2018-07-18 10:36:35,580.3,,1,,"b""b' The last travis run for this pull request was 51 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,reopened,2018-09-07 21:00:11,0.02,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,3,2018-07-18 10:36:35,588.72,,1,,"b'b""  I still don\'t understand why this guide recommends getting gcc 4.8 versions specifically.  4.8 is old as the hills I don\'t remember ever needing this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,4,2018-07-18 10:36:35,1227.87,,1,,"b""b' Closing in favour of #14264.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,closed,2018-09-19 03:16:46,376.58,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,5,2018-07-18 10:36:35,15.0,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #14264 (doc: Split depends installation instructions per arch by MarcoFalke) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13702,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,opened,2018-07-19 01:50:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,title,2018-07-19 01:50:03,00:00,,1,,"b""b' docs: Document lint tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,1,2018-07-19 01:50:03,1197.85,,1,,"b""b' utACK b5f1c28bc7d875681ce5f74ea8e32d601c2557b2"," but should wait for the nit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,2,2018-07-19 01:50:03,782.07,,1,,"b""b' ping @masonicboom"," please either update for the nit or reject it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,3,2018-07-19 01:50:03,610.15,,1,,"b""b' The last travis run for this pull request was 50 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,closed,2018-09-07 21:00:07,1150.07,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,reopened,2018-09-07 21:00:08,0.02,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,4,2018-07-19 01:50:03,491.08,,1,,"b""b' Replaced by #14526.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,closed,2018-10-20 05:11:12,491.07,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13708,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,opened,2018-07-19 09:06:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,title,2018-07-19 09:06:11,00:00,,1,,"b""b' Ignore new blocks when -stopatheight target has been reached'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,body,2018-07-19 09:06:11,00:00,,1,,"b""b' If the target has been reached", a shutdown will be triggered, though, already loaded blocks will still be activated," making it impossible to precisely stop at a certain height.  This PR will ignore future blocks once the target has been reached.  Fixes #13477'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,1,2018-07-19 09:06:11,1179.42,,1,,"b""b' Note previous discussion about in #13490.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,2,2018-07-19 09:06:11,505.23,1,,,b'b\'  I tend to agree with @sdaftuar\\\'s reasoning that it is undesirable to burden the validation code further with this.  Then again," if we\\\'re not going to fix this we should close #13477 (with ""wontfix"" and this reasoning)", otherwise people will wasting time trying to fix it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,closed,2018-09-07 21:00:03,713.87,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,3,2018-07-19 09:06:11,469.23,,1,,"b""b' The last travis run for this pull request was 50 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,reopened,2018-09-07 21:00:04,0.02,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,4,2018-07-19 09:06:11,1095.33,,1,,"b""b' This change is already a lot smaller than the previous attempt.  Being able to produce a deterministic UTXO set for a given height", as well as block files and indexes, could be quite useful. There may be other approaches than  , or perhaps we can fix in a less disruptive way," e.g. by rolling back after overshooting.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,5,2018-07-19 09:06:11,625.9,,1,,"b""b' Lightly tested on testnet and it seems to indeed fix the issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,6,2018-07-19 09:06:11,559.08,,1,,"b""b' @jonasschnelli this is not good. Here is what I wished I could do:   Then somebody who wants to verify and sign the snapshot as well would repeat  Then try to import the UTXO set from the tar  Then he can add his signature to the shasum of so people can trust it more.  If you stop the node once the height is reached", then there is no way to have the hash of the utxoset with  ," and no way for somebody else to independently verify a given utxoset inside a tar file.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,7,2018-07-19 09:06:11,841.87,,1,,"b'b"" @NicolasDorier I totally agree your workflow is what we should strive for. However this PR only fixes a bug in the existing behaviour. Let\'s redefine (e.g. by adding a param) in a followup PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,8,2018-07-19 09:06:11,1016.35,,1,,"b""b' Ah got it"," this is already the current situation. I misunderstood thinking it was changing the behavior.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,9,2018-07-19 09:06:11,1231.37,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15948]url  (refactor: rename chainActive by jamesob) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,10,2018-07-19 09:06:11,1147.62,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13713,open,-,-,-,1,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,opened,2018-07-19 14:52:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,title,2018-07-19 14:52:07,00:00,,1,,"b""b' bitcoin-cli: -stdinwalletpassphrase and non-echo stdin passwords'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,body,2018-07-19 14:52:07,00:00,,1,,"b'b"" This PR * adds for use with * adds no-echo for passwords (  and above)  It may not be ideal"," but it\'s better than having to clear the screen whenever you unlock the wallet. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,1,2018-07-19 14:52:07,337.33,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,2,2018-07-19 14:52:07,1012.92,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,closed,2018-07-24 02:43:05,710.97,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,reopened,2018-07-24 02:43:08,0.05,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,3,2018-07-19 14:52:07,1164.75,,1,,"b""b' There are conflicting pull requests: this one adds new features and", as a side effect, fixes one of two bugs in bitcoin-cli help output; [#13879]url  fixes all found bugs in bitcoin-cli help output and is safe for the whole code.  So," [#13879]url  can be merged regardless of this pull request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,4,2018-07-19 14:52:07,197.73,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,5,2018-07-19 14:52:07,1233.82,,,1,"b""b' Checked that this compiles and works as-is on OpenBSD 6.3 and FreeBSD 11.2-RELEASE-p2.  Would be good to have functional tests for this"," in as far as that is possible\\xe2\\x80\\x94seems tricky to simulate a terminal'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,6,2018-07-19 14:52:07,1347.82,,,1,"b'b"" @laanwj Thanks for review and especially for testing on other distros! I\'m a bit stumped on how to make tests for this. Is it even possible to test stdin echo?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,7,2018-07-19 14:52:07,1372.83,1,,,"b'b""  Yes", it\'s certainly possible. However I\'m afraid that it\'d involve allocating a pty and emulating an actual terminal, all from python. There is code for that, but it\'s probably a bit too much to pull in a dependency for. It\'s a good indication that we should stop here at accommodating terminals, though," at the minimum possible code dedicated to this (which is easy to manually test.)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,8,2018-07-19 14:52:07,179.33,,1,,"b""b' lightly-tested ACK 2836f6fc1ef98cef41993970f8b3f7c0758484f5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,9,2018-07-19 14:52:07,363.23,1,,,"b""b' From the control flow", it seems a bit odd that one gets asked for the password first via std-in," but then get an error like  .  IMO a) we should newline after a password read and b) eventually check for missing command (and other static checks) before asking for the password.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,10,2018-07-19 14:52:07,852.28,,1,,b'b\' @jonasschnelli That particular case will never happen," as the code already checks that the command starts with ""walletpassphrase"". Are there other cases or potential cases?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,11,2018-07-19 14:52:07,676.47,,1,,"b""b' Addressed @practicalswift nits.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,12,2018-07-19 14:52:07,307.87,,,1,"b'b"" tACK b197e57 for macOS 10.14.3  Nit: return after password entry.  Needs Windows testing too"," @ken2812221?  For a followup it would be great if all wallet RPC\'s that need a private key worked directly with and just lock when they\'re done (though then the question is what default timeout you need).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,13,2018-07-19 14:52:07,999.28,,1,,"b""b' @Sjors  Hitting enter adds a newline on my mac. Where do you want one to be added? After the call?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,14,2018-07-19 14:52:07,1195.05,1,,,"b'b"" @kallewoof it didn\'t return a new line for me (macOS 10.14.3):   re-tACK 110e821""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,15,2018-07-19 14:52:07,989.62,,,1,"b""b' Oh"," okay! So this is the case for pre-existing as well. Fixed in d1688c9.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,16,2018-07-19 14:52:07,157.42,,1,,"b""b' re-tACK d1688c9'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13716,open,-,-,-,3,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,opened,2018-07-21 22:24:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,title,2018-07-21 22:24:11,00:00,,1,,"b""b' gui: Drop boost::scoped_array and use wchar_t API explicitly on Windows'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,body,2018-07-21 22:24:11,00:00,,1,,"b""b' Drop boost::scoped_array and simplify the code.  should be defined as if is defined. So we can use to get wchar_t C-style string.  Fix #13819'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,1,2018-07-21 22:24:11,343.98,,1,,"b""b' This was introduced in #5793. Looks like something similar to what you are doing was proposed at the time as well.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,2,2018-07-21 22:24:11,39.28,,1,,"b""b' Hope there is a way to see code that is before he force push.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,3,2018-07-21 22:24:11,54.65,,,1,"b""b' Concept ACK  Thanks for removing Boost dependencies. Keep it coming! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,4,2018-07-21 22:24:11,415.18,,1,,"b""b' Any suggestion on how to test this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,5,2018-07-21 22:24:11,73.25,,1,,"b""b' This is Windows-only code"," can be tested as same as url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,6,2018-07-21 22:24:11,1288.62,,1,,"b""b' Update: Since the goal is to make it unicode compatible"," just make it use wchar_t version of api explicitly.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,7,2018-07-21 22:24:11,123.85,,,1,"b""b' Tested that still works on macOS with 5d70ab0. I have no opinion on the code itself"," other than it seems good to keep making progress here: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,8,2018-07-21 22:24:11,52.92,,,1,"b""b' Tested that for commit 6031f7f (master and this pull) I can launch regtest and testnet after re-login for a user with only ascii character in the name.  (See lower left of screenshot"," Compare to url ![screenshot from 2018-07-31 10-13-36]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,9,2018-07-21 22:24:11,64.08,,1,,"b""b' @MarcoFalke Can you test this again? Now it should fix #13819.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,10,2018-07-21 22:24:11,16.97,,,1,"b""b' Now it fails for commit d41914b (master and this pull) that it can not write to the directory:  (though the folders are created"," as can be seen in the explorer in the background)  ![screenshot from 2018-08-01 11-35-25]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,11,2018-07-21 22:24:11,15.72,,1,,"b""b' @MarcoFalke That should fixed by #13426. You can merge these two PR and test locally.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,12,2018-07-21 22:24:11,66.97,,1,,"b""b' No more conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,13,2018-07-21 22:24:11,97.7,,1,,"b""b' utACK b446918'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,closed,2018-08-21 13:49:27,925.27,0,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,reopened,2018-08-21 13:49:30,0.05,0,11,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,14,2018-07-21 22:24:11,860.42,,,1,"b""b' nice cleanup"," too  utACK bb6ca65f9890e8280ace32de5a37774e14705859'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,closed,2018-09-11 08:59:10,1149.67,0,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13734,closed,-,-,-,0,11,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,opened,2018-07-22 13:44:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,title,2018-07-22 13:44:10,00:00,,1,,"b""b' qa: Intermittent failure in rpc_psbt'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,body,2018-07-22 13:44:10,00:00,,1,,"b""b' travis run: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,1,2018-07-22 13:44:10,102.9,,1,,"b""b' related: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,2,2018-07-22 13:44:10,426.53,,1,,"b""b' Going to create a new issue when I see this again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,closed,2018-11-27 22:33:36,529.43,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,reopened,2019-03-29 21:23:21,1369.75,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,3,2018-07-22 13:44:10,1370.72,,1,,"b""b' Still happens.  Steps to reproduce:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,4,2018-07-22 13:44:10,1081.2,,1,,"b""b' 8cca1fbea9'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,closed,2019-04-25 15:25:31,1082.17,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,5,2018-07-22 13:44:10,440.88,,1,,"b""b' This still exists:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,reopened,2019-04-25 22:46:24,440.88,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13738,open,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,opened,2018-07-24 12:19:56,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,title,2018-07-24 12:19:56,00:00,,1,,"b""b' Utils and libraries: Drops the  dependency'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,body,2018-07-24 12:19:56,00:00,,1,,"b""b' This pull request drops the dependency from the project. It replaces with a custom template function that has a similar API and returns exactly the same results as  .  In addition this pull request refactors an instance of  "," which was implicitly made available via the dependency to prevent having to introduce a new dependency  .  The in will be addressed in #13656 if that PR is merged after this one; or in this PR should #13656 be merged first.  The test vectors in the accompanying unit test have been validated against  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,1,2018-07-24 12:19:56,24.82,,,1,"b""b' Hmm", this is just replacing a boost header with a self-written header that offers the same functionality and comes with unit tests. Do we really want to re-implement all of boost we are currently using? I mean straightforward replacing with is fine, but re-implementing boost should be one of our low priority goals," no?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,2,2018-07-24 12:19:56,131.95,,1,,"b'b"" That\'s a fair point @MarcoFalke \\xf0\\x9f\\x91\\x8d The goal was not to re-implement boost. This is an attempt to drop the dependency with as little changes to the existing codebase as possible.  I have eliminated boost where it was trivial to do: has been refactored to a and to a  .  There are many ways to simplify this function:  e.g. no support for both and  ; no support for  .  I didn\'t want to go there initially", because I didn\'t want to break things and ease review by providing something that is straightforward to validate. Right now it is easy to swap the and functions in the unit test to validate if the external behaviour of still works as expected.  That said," I don\'t have strong opinion on this. I am happy to make changes where needed; or close the pull request if this is not what you\'re looking for.  I just hope I haven\'t messed up \\xf0\\x9f\\x98\\x85 ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,3,2018-07-24 12:19:56,3.77,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#10615]url  (RPC: Allow rpcauth configs to specify a 4th parameter naming a specific wallet by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,4,2018-07-24 12:19:56,55.73,,,1,"b""b' Concept ACK  The short self-contained non-Boost version is easier to reason about.  Every small step counts in our journey to get rid of our Boost dependencies! :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,5,2018-07-24 12:19:56,49.62,1,,,"b'b"" @practicalswift Sure", but it has to go through review to verify that it supports everything that was supported by boost the way we used it.  We are stuck with boost until we adopt C++17, since implementing or on our own wouldn\'t be too wise," imo. So at least there is no rush in getting rid of non-trivial boost features that are not already in  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,6,2018-07-24 12:19:56,132.5,,1,,"b""b' @MarcoFalke Agreed \\xe2\\x80\\x93 no rush in removing non-trivial Boost features. Let\\xe2\\x80\\x99s do it incrementally starting with the low hanging fruit :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,7,2018-07-24 12:19:56,6.88,1,,,"b""b'  @MarcoFalke"," apologies about this. I have totally misinterpreted the objective of the Boost migration. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,closed,2018-07-25 19:05:12,405.27,2,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,8,2018-07-24 12:19:56,17.37,1,,,"b""b' Sorry for being so pessimistic about it. You can definitely leave this open and see what other reviewers think. I was just saying that we have about 3 years time to finish up everything.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,reopened,2018-07-25 19:39:09,33.95,3,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,9,2018-07-24 12:19:56,18.13,,,1,"b""b' Thanks @MarcoFalke!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,10,2018-07-24 12:19:56,34.63,,1,,"b""b' @251Labs Text splitting should be in the low hanging fruit category I mentioned :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,11,2018-07-24 12:19:56,294.92,,1,,"b""b' Note there is a function with similar functionality in #13697"," but operating on  s rather than  s.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,12,2018-07-24 12:19:56,714.62,1,,,"b""b' @251Labs See if you can base your work in this PR on @sipa:s code in #13697 :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,13,2018-07-24 12:19:56,1265.92,,1,,"b""b' 5502212 addresses review comments url  and url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,14,2018-07-24 12:19:56,923.1,,1,,"b""b'  #13697 was merged we now have in   would make sense to move that to a public header instead and use that'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,15,2018-07-24 12:19:56,1400.83,,,1,"b'b"" Hey", thanks @laanwj!  Yeah, good point. I had been thinking about this a while back when @sipa and @practicalswift hinted at the same, but didn\'t see an easy non-invasive way to do this, because the code that uses relies on specific external behaviour that  doesn\'t provide.  For example: 1. expects the result in a instead of  ; 2. depends on  \'s capability to split on different separators; 3. depends on  \'s capability to merge adjacent separators  Right now, the refactor seems trivial enough, because only the calls had to be replaced with calls to a custom function with identical external behaviour (as asserted by the unit tests, which can also be ran with the original function). No other code had to be refactored. Dropping split from this pull request and trying to make the codebase work with seems very invasive, but maybe I am missing something obvious.  Alternatively, one split function could use the other one," e.g. from could use from this pull request.  I am not sure about the options here. Thoughts?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,16,2018-07-24 12:19:56,1294.6,,1,,"b'b"" @251Labs fair enough", if it\'s so much hassle it is probably better to add another function," and leave the other split() private to the descriptor parsing code""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,17,2018-07-24 12:19:56,781.2,,,1,"b""b' Thanks again @practicalswift"," I have addressed your feedback in 99074d1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,18,2018-07-24 12:19:56,786.3,,1,,"b""b' Rebased 5005a8f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,19,2018-07-24 12:19:56,303.97,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,20,2018-07-24 12:19:56,836.5,,1,,"b""b' e236c47 renames lower camel case variable names to snake_case equivalents.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,21,2018-07-24 12:19:56,1236.97,,1,,"b""b' rebased ab2a18d'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,22,2018-07-24 12:19:56,1292.95,,,1,"b""b' @251Labs Looks good. I\\xe2\\x80\\x99m near a utACK could you rebase on top of #15043 and add a fuzzer for the split method which would split random input on random delimiter(s) and then make sure the result matches the result from  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,23,2018-07-24 12:19:56,257.57,,1,,"b'b"" @luke-jr I thought we\'ve been working toward a long term goal of removing boost entirely. Is that not right?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,24,2018-07-24 12:19:56,270.12,,1,,"b""b' In contrast to @luke-jr: let me re-iterate my concept ACK. IMO we should take small incremental steps towards a code base free from Boost which is exactly what this PR does.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,25,2018-07-24 12:19:56,419.22,,1,,"b'b"" The goal is to replace Boost with standard C++ features. If C++ doesn\'t have a standard replacement yet"," then it only makes sense to keep using Boost for that until it does.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,26,2018-07-24 12:19:56,1223.35,,,1,"b'b"" rebased 6ff558f  @practicalswift: +1 That is a good suggestion!  Happy to follow up on that once it is merged and this PR is not NACked.  @luke-jr: Perhaps when it is rocket-science", battle-proven, fully audited secure tech that the dependency provides. For trivial functions that\'s nonsense. If the goal is replace Boost then this PR should _not_ be controversial:  There is no counterpart, nor will there be one for years if ever at all; The split function is straightforward, there is hardly anything going on under the hood; The external behavior of the custom split function is the same as  ," making it easy to reason about at the call sites; You can even validate this PR against by running the unit tests.  What more can you ask for? :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,27,2018-07-24 12:19:56,766.03,,1,,"b""b' @251Labs @MarcoFalke I just came here from a Boost to C++ 11 migration project page. Where can I find more information of migration plan? (if there is one). Just curious to know in case I could give it a hand :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,28,2018-07-24 12:19:56,1198.53,,1,,"b""b' The migration is pretty much just to replace with  . Though"," the low hanging fruits in C++11 have already been collected (see url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,29,2018-07-24 12:19:56,1199.7,,1,,"b'b"" If was the last dependency we used from boost", this pull could be merged," but I don\'t see that coming any time soon.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,30,2018-07-24 12:19:56,41.25,,1,,"b""b' rebased d7ff8eb'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,31,2018-07-24 12:19:56,1335.53,,1,,"b""b' rebased 388257f'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,32,2018-07-24 12:19:56,47.07,,1,,"b""b' rebased 9f811c3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,33,2018-07-24 12:19:56,1197.73,,1,,"b""b' rebased 402da1c  Travis build error is unrelated:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,34,2018-07-24 12:19:56,1205.53,,1,,"b""b' @251Labs restarted.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,35,2018-07-24 12:19:56,48.25,,,1,"b""b' Thanks @promag!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,36,2018-07-24 12:19:56,22.52,,1,,"b""b' Rebased 6186091'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13751,open,-,-,-,4,26,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,opened,2018-07-28 19:43:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,title,2018-07-28 19:43:30,00:00,,1,,"b""b' : Use pragmas to enforce necessary intrinsics for GCC and Clang'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,body,2018-07-28 19:43:30,00:00,,1,,"b""b' This avoids problems when the user specifies CXXFLAGS explicitly disabling the relevant optimisations.  Partially fixes #13758", only for .  NOTE: has the same issue (only with our build system?)," which is NOT addressed here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,1,2018-07-28 19:43:30,9.17,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13442]url  (Convert the 1-way SSE4 SHA256 code from asm to intrinsics by sipa) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,2,2018-07-28 19:43:30,1341.42,,1,,"b""b' Not sure this is the right way to go about it. IMO passing the correct compilation flags is something that needs to be fixed in the build system"," not worked around with compiler-specific pragmas in the code.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,3,2018-07-28 19:43:30,18.97,,1,,"b'b""   doesn\'t actually need this"," as it\'s written using inline assembly rather than compiler intrinsics. The assembly is passed through to the assembler without the compiler interpreting or understanding.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,4,2018-07-28 19:43:30,1267.0,,1,,"b""b' @luke-jr Is this still relevant after the recent discussion?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,closed,2019-04-28 19:11:30,1408.0,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,5,2018-07-28 19:43:30,211.47,,1,,"b""b' The last travis run for this pull request was 272 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,reopened,2019-04-28 19:11:32,0.03,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13789,open,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,opened,2018-07-31 14:23:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,title,2018-07-31 14:23:35,00:00,,1,,"b""b' More intuitive GUI settings behavior when -proxy is set'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,body,2018-07-31 14:23:35,00:00,,1,,b'b\' Given  (or using  ):  Before: There are number of confusing aspects to this:  1. it shows the default proxy URL, rather than the one in 2. the check box is unchecked, even though the proxy is enabled. If the user checks it themselves (for aesthetic reasons?)," that leads to problem (4) and (5).  3. the phrase ""options that override above options"" (it sometimes confuses me if that means anything) 4. if the user wants to turn off the proxy by unchecking it", that won\\\'t actually work 5. if the user tries to change the IP or port that won\\\'t do anything  So I changed the behavior to check the box and populate the initial setting (only done at first launch or after you reset QT settings) if is set (perhaps it\\\'s even to always do this?).  In addition the user can no longer disable the check box or edit the settings when is set. They have to remove the entry from first.  After:  #11082 and #12833 are a more rigorous solution, but there\\\'s some overlap. E.g. if a setting exists in the read-only it should be similarly disabled in the GUI, along with an instruction to remove it from if the user wishes to edit it (using the read-write  ).  This UX pattern can be applied to a few other settings as well. I found particularly useful because it\\\'s used with Tor where confusion is really not a good thing.  I\\\'m guessing that a separate Tor proxy through is less common, so I didn\\\'t touch that (yet). I find that setting confusing in general.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,1,2018-07-31 14:23:35,49.6,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15936]url  (WIP: Unify bitcoin-qt and bitcoind persistent settings by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,2,2018-07-31 14:23:35,849.27,,1,,"b""b' utACK 6bde499'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,3,2018-07-31 14:23:35,554.8,,1,,"b""b' Concept ACK This is code I really wish we (could) have tests for"," it has grown so complex.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,4,2018-07-31 14:23:35,265.82,1,,,"b""b' utACK b39ca20e771e572350bace4ac61821e14fc6e7f9 I feel uncomfortable merging this. We need tests for the proxy settings (in general for the settings window).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,5,2018-07-31 14:23:35,1008.7,,,1,"b""b' Not strictly necessary", but it may also be safer to wait for #12833.  I agree with the need to add test," though it may be a while before I get to it. Happy to cherry-pick and review tests by someone else in the mean time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,6,2018-07-31 14:23:35,1392.83,,,1,"b'b"" Recently increased enthusiasm for rw_config means it\'s better to work on top of that once merged. I agree that adding tests would be a good idea; it\'s probably going to be a while before I get to that though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,closed,2019-05-07 17:06:46,163.18,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,7,2018-07-31 14:23:35,362.18,,1,,"b""b' The last travis run for this pull request was 245 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,reopened,2019-05-07 17:06:48,0.03,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13818,open,-,-,-,1,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,opened,2018-08-01 13:35:47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,title,2018-08-01 13:35:47,00:00,,1,,"b""b' [WIP] depends: Add native_nsis to support unicode'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,body,2018-08-01 13:35:47,00:00,,,1,"b""b' Since version 3.0", nsis start to support unicode. However, Bionic still use 2.51. So," it might be a good reason to add nsis into dependency list to support unicode.  Fix #13817  Close #8825  TODO: [ ] Gitian build should be deterministic'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,1,2018-08-01 13:35:47,2.72,1,,,"b""b' Concept ACK This and was what I was looking into in regards to #13817.  Looks like the is unhappy.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,2,2018-08-01 13:35:47,20.4,,1,,"b""b' Reviewers", this pull request conflicts with the following ones: * #13515 (travis: Enable qt for all jobs by ken2812221) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,3,2018-08-01 13:35:47,4.4,,1,,"b""b' Since this is not a regression"," I have assigned the 0.18.0 milestone for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,4,2018-08-01 13:35:47,86.48,1,,,"b'b"" Crap", one of the reasons we upgraded to bionic in the first place is to upgrade NSIS, not really happy that we end up compiling it anyway now. But yes, let\'s put this for 0.18," this is not a new problem (and comes extremely last-minute for 0.17).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,5,2018-08-01 13:35:47,166.13,,1,,"b""b' @MarcoFalke This is not ready for gitian build since it is not deterministic.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,6,2018-08-01 13:35:47,960.65,,1,,"b""b' I have no idea why the following things would happen? I already put scons into faketime wrapper"," but the compiled stub files still contain timestamp in PE header. The alternative way is to hack the compiled PE file timestamp and set it to a constant.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,7,2018-08-01 13:35:47,577.08,,1,,"b""b' @theuni Do you have any idea what would break the deterministic?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,8,2018-08-01 13:35:47,1.63,,1,,"b""b' Maybe it helps if you include the output between two consecutive builds?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,9,2018-08-01 13:35:47,2.73,,1,,"b'b"" Yes", I know it contains current timestamp and checksum," that is the only differnece. But I don\'t know why it would be there. I already pack scons into faketime wrapper.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,10,2018-08-01 13:35:47,848.25,,1,,"b""b' The difference is here: url Apparently it is timestamp.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,11,2018-08-01 13:35:47,192.23,,1,,"b""b' Could you also upload both of the  results?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,12,2018-08-01 13:35:47,6.8,,1,,"b""b' url  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,13,2018-08-01 13:35:47,1048.02,,1,,"b'b"" Close it for now. I can\'t solve the gitian build deterministic issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,closed,2018-09-16 06:53:19,1037.53,2,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,14,2018-08-01 13:35:47,419.75,,1,,"b'b"" Oh", wait. Why is it required that the depends cache is deterministic? Shouldn\'t the only requirement be that the resulting  (et al) is deterministic? At least that should be the goal when we want to support deterministic builds on any host by default.  If you reopen," I can run DrahtBot on this twice to see what the effective difference is for Gitian builds.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,15,2018-08-01 13:35:47,147.42,,,1,"b'b"" >Why is it required that the depends cache is deterministic?  It has to compile installer and decompressor that runs on Windows. Thanks", but you have to clear nsis depends cache manually," otherwise it\'s deterministic.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,reopened,2018-09-16 16:20:30,567.18,2,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,16,2018-08-01 13:35:47,1259.08,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,closed,2018-10-26 14:23:48,1323.3,2,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13827,closed,-,-,-,2,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,opened,2018-08-02 05:26:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,title,2018-08-02 05:26:04,00:00,,1,,"b""b' Move  to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,body,2018-08-02 05:26:04,00:00,1,,,b'b\' For consistency with other bundled dependencies. Having it in the top-level directory makes it clear that it is a library that we\\\'re including rather than a file that is a part of the project. and  are drawn from the existing sha reference: url Existing modifications to tinyformat are moved to utilstrprintf.h, clearly separating upstream and project code.  This includes changes in: 695041e4952ea40e0 util: Update tinyformat 1b8fd35aadfad6a1e Make tinyformat errors raise an exception instead of assert()ing 9b6d4c5cdc1ad7b12 Move strprintf define to tinyformat.h 6e5fd003e04b81115 Move functions to  9eaa0afa6ec5d3dd0 tinyformat: force USE_VARIADIC_TEMPLATES b651270cd6bfdd6d7 util: Throw tinyformat::format_error on formatting error  This does not include changes below," which are cosmetic or apparently unintentional: 64fb0ac016c7fd01c Declare single-argument (non-converting) constructors ""explicit"" 4d9b4256d89d1f7c6 Fix typos  Note I excluded only the tinyformat cpp from the boost lint checks out of an abundance of caution these files are not actually built into bitcoin so are not at risk of pulling in unwanted dependencies", whereas the header, and other dependencies might be.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,1,2018-08-02 05:26:04,2.38,,1,,"b""b' This is an alternative to #13845. This includes just the header and readme", while #13845 includes the full subtree more automatic checking is possible with that," but at the cost of including support files.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,2,2018-08-02 05:26:04,162.53,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,3,2018-08-02 05:26:04,8.7,,1,,"b""b' No more conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,4,2018-08-02 05:26:04,266.83,,1,,"b'b"" Closing this in favor of  #13845"," at least I\'d say that if we\'re going to move it anyhow  go the full yard and make it a subtree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,closed,2018-08-07 12:46:31,440.45,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,reopened,2018-08-07 12:47:06,0.58,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,5,2018-08-02 05:26:04,2.18,,,1,"b'b"" Reopening because of @MarcoFalke\'s concern"," agree that #13845 pulls in a bizarrely high number (46!) of files. And the whole *intent* of is to have a file that can be easily copied into a project. It\'s not clear it is worth it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,6,2018-08-02 05:26:04,670.4,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,7,2018-08-02 05:26:04,127.93,,1,,"b""b' Dropped the readme. \\xf0\\x9f\\x91\\x8d '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,8,2018-08-02 05:26:04,583.3,,1,,"b""b' utACK c5ee680fdfe806ab6ffbfca47f6cd28e4fb4e049'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,9,2018-08-02 05:26:04,802.8,,1,,"b""b' Removed inaccurate  mention and unnecessary filter.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,10,2018-08-02 05:26:04,1088.9,,1,,"b""b' re-utACK d48249e2400487fb99a6bb15999eccd489a71318'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,11,2018-08-02 05:26:04,1095.53,,1,,"b'b"" This was discussed at the 2018-08-30 IRC meeting and there was no agreement to do this at all. If there\'s no agreement how to go forward here", I\'d say it\'s not extremely important to do," so I\'m closing both PRs for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,closed,2018-08-31 13:37:34,50.47,1,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,12,2018-08-02 05:26:04,71.03,,1,,"b""b' Imo this could still be done the next time we touch tinyformat"," but yeah no rush'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13846,closed,-,-,-,1,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,opened,2018-08-04 14:58:30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,title,2018-08-04 14:58:30,00:00,,1,,"b""b' [doc] nChainTx needs to become a 64-bit earlier due to SegWit'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,body,2018-08-04 14:58:30,00:00,1,,,"b'b"" As of block 534292 txcount is 331",282,217 (see #13794), while can handle up to 4,294,967,296. Pre segwit the [minimum transaction size]url  was 166 bytes, so the worst case number of transactions per block was ~6000. As the original source comment for says, that should last until the year 2030. With SegWit the [worst case number]url  of transactions per block is ~12195 so we might have to deal with this as early as 2024.  Given that it\'s a memory-only thing and we want to allow users many years to upgrade," I would suggest fixing this in v0.18 and back-porting it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,1,2018-08-04 14:58:30,69.78,,1,,"b""b' Something like this", plus some release notes," should do? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,2,2018-08-04 14:58:30,10.08,,1,,"b""b' Could also rename both to according to release notes? (That would also help with review"," since each usage of the member would have to be checked anyway)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,3,2018-08-04 14:58:30,48.37,,1,,"b'b"" @MarcoFalke done (I updated the link above)  I used as distinct from which can later be renamed to  . That rename surfaced a bunch of things I hadn\'t thought about"," which should be better now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,4,2018-08-04 14:58:30,108.48,1,,,"b'b"" If it\'s still necessary by that time", the following soft fork should prevent any issues for existing clients (unless I missed something):  1. The block which reaches much reach exactly total transactions. 2. The block afer that must have  . 3. Repeat this every UINT32_MAX transactions if necessary.  Alternatively, even simpler: 1. modulo may not be for any future block  Both options prevent from becoming which is the only special case, at least as of current master.  For historical reference," this counter was added in 2012: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,5,2018-08-04 14:58:30,32.87,,1,,"b'b"" Or we could eliminate the number", the only real use for it is progress estimation (vs just using it as a one bit flag to indicate if a block has been processed yet or not), and we could simply use a single shared counter and be slightly off due to reorgs (which shouldn\'t be happening during IBD regardless). As an aside, segwit didn\'t change the size of the minimum workable transaction size," both before and after a transaction can be 60 bytes. (""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,6,2018-08-04 14:58:30,10.52,,1,,"b'b"" I noticed it was used for progress measurement", which the above soft fork wouldn\'t fix, but that seemed unimportant. ~I didn\'t realize it was _only_ used for that; I assumed it was doing more given the many occurances," but hadn\'t digged into what yet.~ (nvm; you didn\'t say that)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,7,2018-08-04 14:58:30,44.85,,1,,"b'b\' As far as I know it is used (a) for progress estimation and (b) being nonzero is used as proxy for ""we have downloaded all blocks up to this point in the chain"". It certainly has no effect on consensus rules.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,8,2018-08-04 14:58:30,261.17,,,1,"b'b"" We should change the non-progress part to be a flag.  Separately", we might want to drop the field entirely just to reduce the size of the index," progress can be done in ways that don\'t involve megabytes of memory usage. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,9,2018-08-04 14:58:30,670.55,1,,,"b""b' Anyway", the comment change itself is correct," right? (ignoring the other branch where I suggest a fix)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,10,2018-08-04 14:58:30,534.7,,,1,"b'b"" Making it a global counter would mean we\'d have to keep both around for some grace period so that they could be stored in the database and allow downgrading the software?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,11,2018-08-04 14:58:30,801.37,,1,,"b'b"" utACK ca5ed1b2462520ca2df598cb2af115028534587c  Adding a comment makes sense and can\'t hurt. I think we are ready for merge.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,12,2018-08-04 14:58:30,269.12,,1,,"b'b\' utACK url Agree that is probably worth dropping longterm in lieu of a ""do we have all blocks downloaded up to this point in the chain"" flag since the only other usage is for progress logging. Memory savings on are probably worth a slightly fuzzier indication of progress.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,13,2018-08-04 14:58:30,271.1,,1,,"b""b' The last travis run for this pull request was 267 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,closed,2019-04-28 19:11:27,252.95,3,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,reopened,2019-04-28 19:11:28,0.02,3,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13875,open,-,-,-,3,10,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,opened,2018-08-08 07:32:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,title,2018-08-08 07:32:42,00:00,,1,,"b""b' validation: Pass chainparams in AcceptToMemoryPoolWorker(...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,body,2018-08-08 07:32:42,00:00,,,1,"b'b\' Remove unused argument in  .  After the merge of #13527 (""policy: Remove promiscuousmempoolflags"") yesterday the argument is no longer used in  . \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,1,2018-08-08 07:32:42,21.85,,1,,"b""b' No more conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,2,2018-08-08 07:32:42,200.07,,1,,"b""b' utACK fa61ddfbf54ca64c6807d9a49f661fff530fa5f1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,3,2018-08-08 07:32:42,448.57,,1,,"b""b' utACK fa61ddf'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,4,2018-08-08 07:32:42,40.17,,1,,"b""b' Hmm", note that there was a silent merge conflict between 24980a3e40284d375ac8c19da25fa399ee883830 (  ) and b5fea8d0ccc8117644a4ea11256bc531b60fd9a3 (adding  ) in ATMP.  I am not sure if this is the right way to solve this merge conflict.  cc @jtimon," maybe?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,5,2018-08-08 07:32:42,229.3,,,1,"b'b"" @MarcoFalke Oh"," a silent merge conflict that\'s interesting! Could we make that less likely to happen somehow via automation?  Could it theoretically be avoided by having say the @DrahtBot test merge with different git diff algorithms and report when one of the alternative algorithms report a merge conflict and the default algorithm does not?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,6,2018-08-08 07:32:42,5.42,1,,,"b""b' I doubt it"," since they are in completely different lines.  See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,7,2018-08-08 07:32:42,5.98,,,1,"b""b' @MarcoFalke Got it! Thanks for clarifying!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,8,2018-08-08 07:32:42,1010.43,,1,,"b""b' What is the correct way to proceed here? Any advice @jtimon"," @mariodian or @TheBlueMatt who touched on the silent merge conflict file? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,9,2018-08-08 07:32:42,74.25,,1,,"b""b' Passing them in to looks like the smallest diff that still makes sense.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,10,2018-08-08 07:32:42,167.5,,1,,"b""b' No activity in about a month. Closing for now. Let me know when you want to work on this again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,closed,2018-09-20 20:16:14,763.53,1,8,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,11,2018-08-08 07:32:42,801.63,,,1,"b'b"" @MarcoFalke I\'m ready. Would you mind re-opening? :-)  Does the following patch look correct?   The net change from this PR would then be: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,reopened,2018-09-21 12:05:46,949.53,1,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,12,2018-08-08 07:32:42,160.68,,,1,"b'b"" Concept NACK", there\'s uses of Params() inside the function that could use the parameter instead. Also," it calls to functions that could take CChainParams or Consensus::Params as parameter. This seems the reversal of some incomplete work I was doing to eliminate the use of the Params() global.  I strongly disagree with the seemingly general preference of using globals over passing parameters explicitly to the functions that need them. In no other project ever I had to defend the notion that generally globals should be avoided when possible. It is disappointing to see that not only people don\'t want the pseudo-global Params() to disappear but people also embrace it and undo previous changes towards making it disappear. It seems the same love exists at least for global gArgs. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,13,2018-08-08 07:32:42,18.13,,,1,"b'b"" @jtimon I don\'t have any preference for globals to be sure :-)  This PR tries to get rid of an unused parameter that\'s all :-)  Is the patch in url  in line with your suggestion?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,14,2018-08-08 07:32:42,21.13,,1,,"b'b""  You don\'t need to ask for permission to fixup a change nor need to  post patches in comments and ask for review. I believe in you that you can figure out from the feedback by jtimon and me what to do here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,15,2018-08-08 07:32:42,4.93,,,1,"b'b"" @MarcoFalke Yes perhaps I\'m too cautious sometimes :-)  @MarcoFalke @jtimon Please re-review!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,closed,2018-10-19 14:37:02,151.27,1,9,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,16,2018-08-08 07:32:42,218.38,1,,,"b""b' Oh", sorry, I missed this. A small change but 97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab looks good to me," utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,17,2018-08-08 07:32:42,1320.98,,1,,"b""b' utACK 97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,reopened,2018-10-20 19:08:12,271.17,2,10,7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,18,2018-08-08 07:32:42,267.37,,,1,"b""b' Re-opened due to indication of interest :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,closed,2018-10-21 00:19:35,311.38,2,10,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13909,closed,-,-,-,2,10,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,opened,2018-08-09 21:55:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,title,2018-08-09 21:55:36,00:00,,1,,"b""b' Additional utility RPCs for PSBT'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,body,2018-08-09 21:55:36,00:00,,1,,"b""b' This PR adds 3 new utility RPCs for interacting with PSBTs.  updates a PSBT with UTXO information from the node. It only works with witness UTXOs because full transactions (as would be needed for non-witness UTXOs) are not available unless txindex is enabled.  joins the inputs from multiple distinct PSBTs into one PSBT. e.g. if PSBT 1 has inputs 1 and 2", and PSBT 2 has inputs 3 and 4, would create a new PSBT with inputs 1,2,3, and 4.  analyzes a PSBT and determines the current state of it and all of its inputs," and the next step that needs to be done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,1,2018-08-09 21:55:36,41.42,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15404]url  ([test] Remove -txindex to start nodes by amitiuttarwar) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,2,2018-08-09 21:55:36,436.92,,1,,"b'b""  It doesn\'t look in the wallet?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,3,2018-08-09 21:55:36,13.2,,1,,"b""b' @gmaxwell already exists for that. This is a node RPC that works without a wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,4,2018-08-09 21:55:36,881.68,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,5,2018-08-09 21:55:36,64.88,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,6,2018-08-09 21:55:36,118.2,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,7,2018-08-09 21:55:36,106.82,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,8,2018-08-09 21:55:36,7.35,,1,,"b'b"" It looks like I\'m going to depend on this for my offline-signing GUI work", so we can display nice messages in the GUI about the status of PSBTs that users hand us. Can I therefore encourage its revival? :-) @achow101 Note that, assuming #14978 goes in relatively soon, a little refactoring will be needed -mostly just changing #includes I expect. The other PSBT RPCs have had their guts moved to another file, but I\'m happy to do that for these RPCs as a followup PR to this one, if you like," so you don\'t have to modify this one too much. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,9,2018-08-09 21:55:36,92.77,,1,,"b""b' Rebased and addressed comments.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,10,2018-08-09 21:55:36,1346.88,1,,,"b'b"" utACK modulo comments above. I have a general sense that analyzepsbt is a little hard to follow the logic of"," but I don\'t immediately have suggestions for improving that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,11,2018-08-09 21:55:36,874.33,1,,,"b""b' very strange!-one of the travis runs seems to be failing with  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,closed,2019-02-15 17:58:42,1203.1,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,reopened,2019-02-15 17:58:47,0.08,2,11,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,12,2018-08-09 21:55:36,251.17,,1,,"b""b' utACK 0c35f0e802274c27736b16a4542ad44bc3c7f794'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,13,2018-08-09 21:55:36,1393.22,,1,,"b""b' re-utACK 540729ef4bf1b6c6da1ec795e441d2ce56a9a58b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,closed,2019-02-16 19:46:14,107.45,2,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13932,closed,-,-,-,2,13,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,opened,2018-08-14 21:56:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,title,2018-08-14 21:56:15,00:00,,1,,"b""b' Remove 16 bits from versionbits signalling system (BIP320)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,body,2018-08-14 21:56:15,00:00,1,,,"b""b' Over 5% of the hashpower is currently using version-rolling which consumes bits from the nVersion in the blockheader. Miners are generally using the the bits within the range 0x1fffe000 as per recommendation in the [reserved bits]url  proposal as well as the [BIP 310 stratum-extension]url  for version-rolling.  Before this pull request the BIP9/versionbits system will emit false warnings for unknown softforks when version-rolling is used. This pull request removes the bits in the range 0x1fffe000 so version-rolling", or other miner use of those bits, will not falsely trigger the warning system or interfere with soft forks.  False positive warnings are toxic because it leads to node operators ignoring warning messages," thus defeating the purpose of a warning system.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,1,2018-08-14 21:56:15,487.72,,,1,"b'b"" Code df4b187f3c2c236a22aa1a333e6de6919b9e7940 looks good and corresponds to BIP proposal.  I have no particular opinion about whether or not the concept is a good idea (but I don\'t see why it wouldn\'t be).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,2,2018-08-14 21:56:15,7.87,,,1,"b'b"" Prior discussion: url I have not seen consensus for this protocol change", nor any notable effort to gain consensus for it.  I don\'t think it\'s a good precedent to set," to make protocol changes in Core simply as a result of miners violating the protocol without consensus.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,3,2018-08-14 21:56:15,349.65,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15861]url  (Restore warning for individual unknown version bits, as well as unknown version schemas by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,4,2018-08-14 21:56:15,10.58,,1,,"b""b' Potentially superseded by entirely removing this warning in #15471.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,5,2018-08-14 21:56:15,19.87,1,,,"b'b"" Concept ACK.  I really don\'t know whether this one or #15471 is preferable", but I think something needs to be done against the false positives soon as this seems to be more controversial than removing the warning. Can still be done later," if wanted.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,6,2018-08-14 21:56:15,202.67,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,7,2018-08-14 21:56:15,197.8,,1,,"b""b' Updated pull request title with assigned BIP number url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,8,2018-08-14 21:56:15,31.05,,1,,"b'b"" @TheBlueMatt does BIP-320 assign the same version bits as your [BetterHash draft BIP]url  If so"," maybe that\'s useful to point out in BIP-320  vice versa.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,9,2018-08-14 21:56:15,199.15,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,10,2018-08-14 21:56:15,924.27,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,closed,2019-02-26 14:26:52,990.62,2,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,reopened,2019-02-26 14:26:57,0.08,2,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,11,2018-08-14 21:56:15,750.88,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,13972,open,-,-,-,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,opened,2018-08-19 18:40:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,title,2018-08-19 18:40:01,00:00,,1,,"b""b' [0.17] depends: fix qt determinism'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,body,2018-08-19 18:40:01,00:00,,1,,"b""b' Backport for rc2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,closed,2018-08-19 18:44:51,4.83,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,reopened,2018-08-19 18:44:55,0.07,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,1,2018-08-19 18:40:01,286.53,,1,,"b""b' How do you see why appveyor is failing here"," and how do you restart a build? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,2,2018-08-19 18:40:01,1043.88,,1,,"b'b"" @fanquake I am not aware of a way to restart the build", but the appveyor is only meant for master anyway. Also," it doesn\'t build from depends.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,3,2018-08-19 18:40:01,34.58,,1,,"b""b' utACK 48c845902ac044af99ceb7cacc1ea3eacfaeb913.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,4,2018-08-19 18:40:01,314.07,,1,,"b""b' utACK 48c8459'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,5,2018-08-19 18:40:01,92.12,,1,,"b""b' Tested ACK 48c8459'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,closed,2018-08-21 06:25:28,700.55,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14005,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,opened,2018-08-22 03:23:16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,title,2018-08-22 03:23:16,00:00,,1,,"b""b' Import key origin data through descriptors in importmulti'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,body,2018-08-22 03:23:16,00:00,,,1,"b""b' This PR allows for key origin data as defined by the descriptors document to be imported to the wallet when importing a descriptor using  . This allows the to include the BIP 32 derivation paths for keys that it is watching that are from a different HD wallet.  In order to make this easier to use"," a new field has been added to  . Additionally I have removed as was planned. I think that this API change is fine since it was going to be removed in 0.18 anyways. has also been extended to store key origin info to facilitate this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,1,2018-08-22 03:23:16,595.82,,,1,"b""b' Nice! strong concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,2,2018-08-22 03:23:16,157.8,,1,,"b'b"" Fixed a bug where the keymetadata wasn\'t being written to the wallet file. Also added a test for that case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,3,2018-08-22 03:23:16,351.72,,1,,"b""b' Rebased and also changed the keymeta stuff to add the hd master key id at key generation and when the wallet is first loaded.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,4,2018-08-22 03:23:16,919.67,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,5,2018-08-22 03:23:16,105.9,,,1,"b""b' Concept ACK"," thanks for working on this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,6,2018-08-22 03:23:16,372.92,,1,,"b""b' I will rework this to not require #14019 as soon as I have time (in a few days)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,7,2018-08-22 03:23:16,440.43,,1,,"b""b' Closing for now due to the big changes to importmulti from #14454 and #14565. Perhaps it would be better to put more effort into supporting this through output descriptors rather than adding more data to importmulti.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,closed,2018-10-30 04:27:31,64.25,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,8,2018-08-22 03:23:16,852.65,,1,,"b'b"" +1 for only supporting this with descriptors. Suggest rebasing on #14491"," as that currently doesn\'t save origin info into the wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,reopened,2018-11-06 05:50:44,83.22,0,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,9,2018-08-22 03:23:16,670.95,,1,,"b""b' Rebased onto #14491 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,10,2018-08-22 03:23:16,173.98,1,,,"b'b"" @achow101 can you do a on your own commits so that they appear _after_ the unmerged upstream stuff? It\'s a bit hard to tell now which commits to review.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,11,2018-08-22 03:23:16,66.2,,1,,"b'b"" Seeing some warnings (might be upstream): Key origin info from now nicely shows up now in  . However", like the upstream PR, it generate invalid psbt\'s. I tried with a watch-only wallet," manually providing a change address (which isn\'t used):  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,12,2018-08-22 03:23:16,12.77,,1,,"b""b' If we narrow this PR to wallets", would that allow you to just reuse rather than undeprecating and repurposing  ? if we set during  ," would that save you from having to upgrade the wallet version? I.e. get rid of  b0c7bbd4c460fdeb5a91d34f75e96eb115e37598?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,13,2018-08-22 03:23:16,257.47,,1,,"b'b""  Yes", but I don\'t really like that. It would mean that hdseedid has two meanings," depending on whether private keys are disabled. It\'s definition would not be consistent.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,14,2018-08-22 03:23:16,19.72,,1,,"b'b"" @Sjors I\'ve updated the dates on my commits and fixed the lock issue I believe. I am unable to replicate the creation of invalid PSBTs though. The PSBTs I have created for testing are correct.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,15,2018-08-22 03:23:16,65.77,,1,,"b'b"" Isn\'t the only difference between and that the key with MAY be present in the wallet (for  )? It MAY also be absent for keys generated before (which replaces the wallet seed). They both refer to a master key that generated a set of keys in the wallet.  If we migrate to a descriptor based wallet"," there would be no difference in treatment between keys with and keys . Or am I missing something? cc @sipa""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,16,2018-08-22 03:23:16,14.58,,1,,"b'b""   is the ID of the seed. To get the master key id", the seed needs to be used to generate the master private key," and then the generated from that. There\'s one extra step of abstraction. The hd seed is not the same as the master private key.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,17,2018-08-22 03:23:16,1107.17,,1,,"b'b"" @achow101 ah"," I didn\'t know about the extra step from seed to master key. That makes sense then.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,18,2018-08-22 03:23:16,1181.1,,,1,b'b\'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers," this pull request conflicts with the following ones: * [#14075]url  (Import watch only pubkeys to the keypool if private keys are disabled by achow101)* [#13756]url  (wallet: ""avoid_reuse"" wallet flag for improved privacy by kallewoof)* [#13751]url  (Utils and libraries: Drops the  dependency by 251Labs)* [#13541]url  (: sendrawtransaction maxfeerate by kallewoof)* [#11803]url  (Bugfix: : Include HD key metadata in dumpwallet by luke-jr)* [#10973]url  (Refactor: separate wallet from node by ryanofsky)* [#10102]url  ([experimental] Multiprocess bitcoin by ryanofsky) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,19,2018-08-22 03:23:16,669.68,,1,,"b'b"" Without meaning to expand the number of PR\'s we need to keep track of"," but if this is merged then the improvement in #11803 should be updated to look for  . Currently it won\'t print and skips origin info.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,20,2018-08-22 03:23:16,834.38,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,21,2018-08-22 03:23:16,493.9,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,22,2018-08-22 03:23:16,630.25,,1,,"b'b""  I\'m not. Where do you see that it does?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,23,2018-08-22 03:23:16,401.0,,1,,"b""b' @achow101 oops", I was confusing the fingerprint (fixed size 4) with path (already a vector). All good then!  utACK 7f84a25," changes since last tACK: * more comments * using insert:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,24,2018-08-22 03:23:16,33.05,,1,,"b""b'  This is no longer true with the code change"," please update the post (as it will be included in git).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,25,2018-08-22 03:23:16,474.25,,1,,"b""b' Addressed comments and updated OP'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,26,2018-08-22 03:23:16,955.58,,1,,"b""b' @achow101 wrote inline: @ajtowns wrote: Agreed"," utACK 4908b37 (modulo squash) '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,27,2018-08-22 03:23:16,394.02,,1,,"b""b' Squashed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,28,2018-08-22 03:23:16,29.05,,1,,"b'b"" Explicit null key_origin is welcomed change.  I don\'t think you have addressed the encrypted wallet migration issue with your preferred fix?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,29,2018-08-22 03:23:16,145.52,,1,,"b'b""  Hmm. I thought I pushed that. It must\'ve gotten lost in a rebase somewhere. Pushed it now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,30,2018-08-22 03:23:16,4.87,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,31,2018-08-22 03:23:16,60.48,,,1,"b'b"" @instagibbs wrote inline: @achow101 wrote: I don\'t like this approach; more assumptions than necessary. It seems safer to also run this from  .  The rest of 4486b36 looks good to me. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,32,2018-08-22 03:23:16,5.0,,1,,"b""b' @Sjors would it make the first unlock surprisingly long?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,33,2018-08-22 03:23:16,12.88,,1,,"b'b"" I\'m assuming updating metadata entries is extremely fast"," but haven\'t tested that. You could potentially spit out a warning on first unlock (although that might stress out applications that consume std::out).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,34,2018-08-22 03:23:16,14.93,,1,,"b'b""  There\'s a bit of a problem with doing that. If the wallet is not unlocked but a user decides to use with set to  "," then the resulting psbt will have a bogus master key fingerprint. It\'s writing uninitialized memory to the psbt. This is both a problem in this PR (without the change I just pushed) and in master. it takes several seconds.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,35,2018-08-22 03:23:16,68.1,,1,,"b'b"" I\'ve reverted that change. In the new push", the key metadata will be upgraded on unlocking the wallet or on loading if the wallet is unencrypted. However, due to the issue I mentioned earlier," I\'ve changed to return the for keys whose metadata has not been upgraded to just be as if it were an independent key.  I also added release notes which mention this change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,36,2018-08-22 03:23:16,751.07,,1,,"b""b' tACK b384060ff modulo squash.  AppVeyor failure is same as on master.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,37,2018-08-22 03:23:16,333.67,,1,,"b""b' Squashed'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,38,2018-08-22 03:23:16,26.38,,1,,"b""b' utACK a8a7103'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,39,2018-08-22 03:23:16,197.4,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,40,2018-08-22 03:23:16,47.22,,1,,"b""b' only change is WALLET_FLAG_KEY_ORIGIN_METADATA flag from 0 to 1.  re-utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,41,2018-08-22 03:23:16,0.18,,1,,"b""b' utACK 1b1c6aa'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,42,2018-08-22 03:23:16,134.15,,1,,"b""b' utACK 1b1c6aa276f24ff85392915c3b557e2343c88252'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,43,2018-08-22 03:23:16,45.45,1,,,"b'b"" oops", screwed up that most recent push," don\'t merge yet""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,44,2018-08-22 03:23:16,18.08,,1,,"b'b"" Changes since @sipa\'s are just nit-fixes", a new test," and a missing brace bugfix :+1:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,closed,2019-02-14 23:12:22,1041.63,2,39,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14021,closed,-,-,-,2,39,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,opened,2018-08-23 17:10:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,title,2018-08-23 17:10:37,00:00,,,1,"b""b' p2p: Drop CADDR_TIME_VERSION checks now that MIN_PEER_PROTO_VERSION is greater'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,body,2018-08-23 17:10:37,00:00,,1,,"b""b' We do not connect to peers older than 31800.  And extract a constant for the old alert system check.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,1,2018-08-23 17:10:37,55.77,,1,,"b'b"" I\'m trying to remember what the plan was for removing the hardcoded alert I think now that the key has been revealed it\'s ok to remove that for 0.18 as well""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,2,2018-08-23 17:10:37,21.42,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15759]url  ([p2p] Add 2 outbound blocks-only connections by sdaftuar) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,3,2018-08-23 17:10:37,4.53,,1,,"b'b"" I couldn\'t find anything in url  but yeah"," might as well remove it here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,4,2018-08-23 17:10:37,16.72,,1,,"b""b' Dropped the announcement in #14034. Restored the CAddress serialization check because absent it"," tests were failing around  .  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,5,2018-08-23 17:10:37,0.75,1,,,"b'b""  The threat model seems to be: someone has been offline for quite a while (possibly using old software)", reconnects to the network," and nobody has the final alert message. Instead they get connected to someone\'s weird node that spams them with a valid signed message that isn\'t the original final alert message. Is this particularly likely to happen  bad or something we\'d want to prevent?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,6,2018-08-23 17:10:37,6.45,1,,,b'b\' Unless there is a reason to do otherwise, I think we should probably leave it in so long as we still connect to nodes that had the alert system enabled.  @kanzure  Because the alert key is published if someone starts older software that still has it," they could get a message like ""Your wallet is outdated and could lose funds! go to  to get the new official bitcoin software"".  The hardcoded final alert mitigates this by blocking the message entirely  at least causing a message that indicates that these notices might not be safe to heed.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,7,2018-08-23 17:10:37,213.95,,1,,"b'b""  Right", they were asking about removing the hardcoded alert. Anyway," I agree with leaving it inunless it\'s causing issue or problems or maintenance headache.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,8,2018-08-23 17:10:37,5.4,,1,,"b""b' Fair enough", @gmaxwell and @kanzure," I closed #14034'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,9,2018-08-23 17:10:37,657.7,,,1,"b'b""  I think this is a good policy", there is little overhead in keeping it but I also think it would make sense to add a comment saying this," so that it\'s clear for future maintainers.  (out of scope for this PR though as it no longer touches anything alert-system related) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,10,2018-08-23 17:10:37,3.27,,1,,"b'b"" Is it intentional that you\'re keeping the around in  ? FWIW", there seem to be no other constants for versions before  .  If so, please do add a comment saying this," so it won\'t be \'accidentally\' removed in a follow-up commit when someone notices that it\'s no longer used. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,11,2018-08-23 17:10:37,207.13,,1,,"b""b' utACK 66bbc8ce26547348906d4d648e7a22c6f9e3fc7a'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,12,2018-08-23 17:10:37,18.67,,,1,"b'b"" I\'d guess the remaining check can be replaced by  "," but no strong opinion.  nVersion != INIT_PROTO_VERSION diff   ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,13,2018-08-23 17:10:37,1057.97,,1,,"b""b' WIP: looking into how to test for url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,14,2018-08-23 17:10:37,516.28,,1,,"b""b' re-utACK 7fb962c4c1946caf0b4546bcfb6901b9d41d1443'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,15,2018-08-23 17:10:37,90.05,,1,,"b""b' The last travis run for this pull request was 243 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,closed,2019-05-07 17:06:40,1436.05,2,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,reopened,2019-05-07 17:06:41,0.02,2,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14033,open,-,-,-,2,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,opened,2018-08-23 19:42:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,title,2018-08-23 19:42:35,00:00,,1,,"b""b' travis: Run unit tests with-sanitizers=undefined'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,body,2018-08-23 19:42:35,00:00,,1,,"b""b' See issue #12691'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,1,2018-08-23 19:42:35,140.02,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #13863 (travis: move script sections to files in subject to shellcheck by scravy)* #13827 (wip", depends: Add native_nsis to support unicode by ken2812221)* #13515 (travis: avoid timeout without saving caches, also enable all qt by ken2812221)* #12134 (Build previous releases and run functional tests by Sjors) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,2,2018-08-23 19:42:35,71.28,,,1,"b""b' This is excellent!  Strongest possible concept ACK (assuming we\\xe2\\x80\\x99re not hitting build timeout issues blocking this \\xe2\\x80\\x93 that the builds take too long to finish)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,3,2018-08-23 19:42:35,520.28,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,4,2018-08-23 19:42:35,140.92,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,5,2018-08-23 19:42:35,130.4,,1,,"b'b"" From the build log:   In url  doesn\'t seem to be using clang at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,6,2018-08-23 19:42:35,2.88,,1,,"b""b' Yes", it is not possible to set the compiler when building from depends. I will add this back," when it is possible.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,closed,2018-08-24 17:48:33,1325.97,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,reopened,2018-08-24 22:52:41,304.13,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,closed,2018-08-25 22:41:28,1428.78,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,reopened,2018-08-26 14:54:38,973.17,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,7,2018-08-23 19:42:35,1237.0,,1,,"b""b' utACK fad8afa3883675880dfa7fa6664fe658f10b11b5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,closed,2018-08-27 09:09:16,1094.63,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14036,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,opened,2018-08-27 11:41:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,title,2018-08-27 11:41:38,00:00,,1,,"b""b' Implement sighash cache in CHECKMULTISIG'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,body,2018-08-27 11:41:38,00:00,,1,,"b""b' Currently recalculates the sighash every time it verifies a key-signature pair. It is not necessary because sighash for the same is always the same _inside_ a  . Therefore", we could reuse a sighash as long as the is not changed.  Note that in  , the trimming of (with and  ) is done before the signature checking loop. So the is always a constant in the same operation. However," this is not guaranteed across different or so a cross-opcode sighash cache could not be done in the same way.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,1,2018-08-27 11:41:38,148.03,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13360]url  ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012)* [#13266]url  ([moveonly] privatize SignatureExtractorChecker by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,2,2018-08-27 11:41:38,91.92,,1,,"b""b' @jl2012 Would it be possible to generate some benchmarks to quantify the performance effect? :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,3,2018-08-27 11:41:38,17.57,,,1,"b""b' Awesome!  I thought we already did that!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,closed,2019-05-07 17:06:30,324.87,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,4,2018-08-27 11:41:38,67.37,,1,,"b""b' The last travis run for this pull request was 253 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,reopened,2019-05-07 17:06:31,0.02,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14079,open,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,opened,2018-08-27 22:33:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,title,2018-08-27 22:33:24,00:00,,,1,"b""b' Remove unnecessary G_TRANSLATION_FUN nullptr assignment'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,body,2018-08-27 22:33:24,00:00,,1,,"b""b' Cleans url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,1,2018-08-27 22:33:24,8.17,,1,,"b""b' utACK 508b65c74b9515a62e8ee55bc4c28cb3684b0263'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,2,2018-08-27 22:33:24,131.02,,1,,"b""b' Does this improve something?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,3,2018-08-27 22:33:24,2.18,,1,,"b""b' No.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,4,2018-08-27 22:33:24,5.87,,1,,"b""b' utACK 508b65c less code is bettter code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,5,2018-08-27 22:33:24,585.37,,1,,"b""b' TBH I like the explicit construction more"," this change seems completely unnecessary'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,closed,2018-08-28 10:49:01,735.62,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,6,2018-08-27 22:33:24,181.57,,1,,"b""b' @laanwj this was initially a pointer.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,reopened,2018-08-28 13:50:39,181.63,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,7,2018-08-27 22:33:24,3.88,,1,,b'b\' oh I see, it\\\'s not a pointer, ok fine," yes then it\\\'s not sensible to assign nullptr  was just getting a bit annoyed with getting a ""clean up"" PR after every PR", sorry\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,8,2018-08-27 22:33:24,16.08,,1,,"b'b\' Tend to agree with @laanwj. According to url  both variations ""1-2) Creates an empty function."" If one variant is preferable", it should be mentioned in the developer notes.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,9,2018-08-27 22:33:24,268.43,,1,,"b'b"" I prefer 1) but I don\'t care that much.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,closed,2018-08-28 18:35:58,285.32,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14087,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,opened,2018-08-31 23:52:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,title,2018-08-31 23:52:35,00:00,,1,,"b""b' Add testcase to simulate bitcoin schema in leveldb'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,1,2018-08-31 23:52:35,596.28,,1,,"b""b' concept ack  travis fail is due to linting failure:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,closed,2019-05-07 17:06:25,1033.83,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,2,2018-08-31 23:52:35,437.57,,1,,"b""b' The last travis run for this pull request was 248 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,reopened,2019-05-07 17:06:27,0.03,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14125,open,-,-,-,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,opened,2018-09-04 09:31:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,title,2018-09-04 09:31:10,00:00,,1,,"b""b' Refactoring: Clarify code using encrypted_batch in CWallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,body,2018-09-04 09:31:10,00:00,,,1,"b'b"" This is a pure refactoring (no functional changes) that clarifies the use of as well as the code using it according to my proposal in #14139.  (A more detailed description and rationale can be [found there]url The change is split in two commits that correspond to logical units (matching the description in the [proposal]url A general cleanup of the code and the use of RAII (as also recommended in the developer guidelines) for  temporarily.  In case the second commit is seen as overengineering"," I\'m happy to change the PR to include just the first commit.  The second commit (using RAII) obsoletes #14138.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,1,2018-09-04 09:31:10,74.22,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14942]url  (wallet: Make scan / abort status private to CWallet by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,2,2018-09-04 09:31:10,569.03,,1,,"b""b' Still need rebase", so closing for now. Let me know when you want to work on this again," so I can reopen.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,closed,2018-09-20 20:14:25,643.25,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,3,2018-09-04 09:31:10,1384.88,1,,,"b'b"" Sorry", I was on vacation without proper internet access and am still travelling now (but with perhaps better options to work on this).  So please reopen," or feel free to wait until I\'ve rebased it (should happen this or next week at the latest) and reopen then.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,reopened,2018-09-24 19:22:04,1387.65,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,4,2018-09-04 09:31:10,649.55,,,1,"b'b"" Thanks for reopening"," I\'ve now rebased.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,5,2018-09-04 09:31:10,946.93,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,6,2018-09-04 09:31:10,1046.27,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,7,2018-09-04 09:31:10,749.43,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,8,2018-09-04 09:31:10,1416.25,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14144,open,-,-,-,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,opened,2018-09-05 19:03:52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,title,2018-09-05 19:03:52,00:00,,1,,"b""b' p2p: Return a max of 1000 addrs from CAddrMan::GetAddr'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,body,2018-09-05 19:03:52,00:00,,1,,"b""b' This is the documented max size for an addr response"," and was separately being limited in PushAddress to 1000 via MAX_ADDR_TO_SEND. No point in selecting a too-large random set then filtering it randomly down to a smaller set.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,1,2018-09-05 19:03:52,9.15,,1,,"b""b' I think addrman would return a larger list that is node-agnostic and then net would filter that list taking into account the node state"," no?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,2,2018-09-05 19:03:52,56.17,,,1,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #14033 (p2p: Drop CADDR_TIME_VERSION checks now that MIN_PEER_PROTO_VERSION is greater by Empact)* #13115 (addrman: Add Clang thread safety annotations for variables guarded by cs_addrMan by practicalswift) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,3,2018-09-05 19:03:52,11.5,,1,,"b'b"" @MarcoFalke the only call to / is in service of this response: url   just overwrites entry if it\'s beyond the limit: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,4,2018-09-05 19:03:52,1365.62,,1,,"b""b' I thought the two layer setup was so that multiple probes would get more addresses but not enumerate the whole table.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,5,2018-09-05 19:03:52,255.37,,1,,"b""b' @sipa ^'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,6,2018-09-05 19:03:52,855.28,,1,,"b""b' @Empact will return early when it. So when is of size 1000", it might very well send less than 1000 addresses back in the response," even though there are plenty to send. No?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,7,2018-09-05 19:03:52,661.18,,,1,"b""b' @MarcoFalke yep that sounds like the explanation. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,closed,2018-09-12 00:38:08,334.27,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,reopened,2018-09-12 00:46:30,8.37,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,closed,2018-09-16 23:26:28,1359.97,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14154,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,opened,2018-09-11 01:29:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,title,2018-09-11 01:29:19,00:00,,1,,"b""b' Pass privkey export DER compression flag correctly'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,body,2018-09-11 01:29:19,00:00,,1,,"b""b' The argument to ec_privkey_export_der is BOOLEAN GetPrivKey call ec_privkey_export_der to use the flag  SECP256K1_EC_COMPRESSED is true SECP256K1_EC_UNCOMPRESSED is true'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,1,2018-09-11 01:29:19,8.68,,1,,"b""b' Is it changing ec_privkey_export_der? Delete another branch that will never be reached  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,2,2018-09-11 01:29:19,110.13,,1,,"b""b' Looks like a bug to me...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,3,2018-09-11 01:29:19,11.62,,1,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #12461 (scripted-diff: Rename key size consts to be relative to their class by Empact) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,4,2018-09-11 01:29:19,41.03,,1,,"b""b' Please make your description and title more descriptive.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,5,2018-09-11 01:29:19,208.13,,,1,"b""b' @fingera Nice first-time contribution! Out of curiosity"," how did you find this? :-)  Related: #10041 and #10043'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,6,2018-09-11 01:29:19,25.62,,1,,"b""b' You found out before"," why not fix it?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,closed,2018-09-11 08:14:32,405.22,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,7,2018-09-11 01:29:19,7.65,,1,,"b""b' @practicalswift  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,8,2018-09-11 01:29:19,4.55,1,,,"b""b' @fingera Please re-open the PR: this is still confusing and hence unresolved :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,reopened,2018-09-11 08:29:25,14.88,1,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,9,2018-09-11 01:29:19,7.1,,1,,"b'b"" utACK (after squash)", this clearly fixes a bug," does not take a bit field (  is what takes and  ). I\'m surprised none of the tests catches this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,10,2018-09-11 01:29:19,17.67,1,,,"b""b' utACK 67e17da34de278c0b0bab0caad0ad877a053b0d6 modulo squash and a more informative commit message :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,11,2018-09-11 01:29:19,6.0,,1,,"b""b' suggested on IRC was"," to prevent the bug as well as the conversion warning without using really contorted C++:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,12,2018-09-11 01:29:19,1386.03,,1,,"b""b' merged via 9a565a8282236f29334a6ec2de6a03358f5ce86e '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,closed,2018-09-13 08:03:32,1414.12,2,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14195,closed,-,-,-,2,11,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,opened,2018-09-11 10:02:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,title,2018-09-11 10:02:15,00:00,,1,,"b""b' Bitcoin crashes seconds after start leaving .lock and .pid'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,body,2018-09-11 10:02:15,00:00,,1,,"b""b'  Bitcoin crashes seconds after start leaving .lock and .pid  not crashing every single start like  0.16.2 (0.16.0 also crashed) Linux VPC", Ubuntu 16.04, OpenVZ (?)," Kernel 2.6.32-042stab131.1    Any ideas? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,1,2018-09-11 10:02:15,1352.52,1,,,"b'b"" there\'s nothing in that log that suggests what can be the source of the crash", nor an error message,"  can you try running it in and getting a backtrace? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,2,2018-09-11 10:02:15,249.27,,1,,"b""b' Then had to recompile with -g. will try on weekend. respectively tryy to get a backtrace. Unfortunately I am not able to interpret one. :-)  But looks more and more that it is a memory (or lack of memory) problem. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,3,2018-09-11 10:02:15,1176.72,,1,,"b""b' every startup eventually ends up with: on the shell. not that helpfull. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,4,2018-09-11 10:02:15,3.77,1,,,"b""b'  I just apt-get gdb and read some on the webiste"," but the task to run bitcoind in the debugger and to get a useful output exceeds by far my knowledge and skills :-( If you leave me a short shell command which I can start as the user I usually start bitcoin with I will give it a shot. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,closed,2018-09-17 08:24:31,1342.27,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,reopened,2018-09-17 08:25:14,0.72,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,5,2018-09-11 10:02:15,517.7,,1,,"b""b' '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,6,2018-09-11 10:02:15,1261.93,,1,,"b""b' the poutput says that bitcoind quit normally?   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,7,2018-09-11 10:02:15,684.13,,1,,"b'b"" I guess you\'d have to set  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14198,open,-,-,-,2,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,opened,2018-09-15 17:27:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,title,2018-09-15 17:27:19,00:00,,1,,"b""b' mempool: Fix unintended unsigned integer wraparound in CTxMemPool::UpdateAncestorsOf(bool add"," \\xe2\\x80\\xa6) when add is false'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,body,2018-09-15 17:27:19,00:00,,1,,"b""b' Fix unintended unsigned integer wraparound in when is  .  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,closed,2018-09-15 17:43:26,16.12,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,1,2018-09-15 17:27:19,96.92,,1,,"b""b' Why did you decide to close this PR?  After some digging I believe this change correctly fixes a bug", though I think the problem is not in the unsigned integer overflow (which is well-defined), but in casting the resulting unsigned integer to a signed type (which I have recently learned is not defined behavior, when the unsigned value would be negative).  So I think this change, which casts to int64_t first before multiplying by -1," is exactly correct.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,reopened,2018-09-24 19:17:00,93.57,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,2,2018-09-15 17:27:19,20.68,,1,,"b'b"" @sdaftuar I received some feedback about my PR:s creating too much review work \\xe2\\x80\\x93 that\'s the background to the close. But I\'m happy to re-open :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,3,2018-09-15 17:27:19,31.33,,1,,"b'b"" I haven\'t reviewed the claim that @sdaftuar makes", but I checked that on my machine the bitcoind compiled with clang doesn\'t change at all," and for gcc the objdump is the same.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,4,2018-09-15 17:27:19,56.27,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13804]url  (WIP: Transaction Pool Layer by MarcoFalke) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,5,2018-09-15 17:27:19,8.7,,1,,"b""b' utACK  @ryanofsky pointed me to this:  url  from section 4.7.3 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,6,2018-09-15 17:27:19,11.25,,,1,"b""b' @sdaftuar @ryanofsky You might want to take a look at #11551 ( ) and #11535 :-)  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,7,2018-09-15 17:27:19,762.78,,1,,"b""b' | Coverage  | Change ([pull 14226]url  | Reference ([master]url   Lines   | -0.0552 %    | 87.0361 %   Functions | -0.0309 %    | 84.1130 %   Branches  | -0.0464 %    | 51.5451 %    |'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,closed,2018-12-19 15:27:52,1210.87,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14226,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,opened,2018-09-17 06:58:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,title,2018-09-17 06:58:04,00:00,,1,,"b""b' Fix for test runner UnicodeDecodeError when utf-8 is not supported'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,body,2018-09-17 06:58:04,00:00,,1,,"b'b\' When attempting to create a directory using ""/test_runner_\\xe2\\x82\\xbf_\\xf0\\x9f\\x8f\\x83_""", the following error is created.         Since, the code already checks for UTF-8  at a previous place, it makes sense to check for this string too. I am using docker container for testing bitcoin and it comes with a default  , which is how I stumbled into this. If this code will bloat the file, it might be better to use simple characters for directory name.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,1,2018-09-17 06:58:04,111.48,1,,,"b""b' Note to reviewers: This pull request conflicts with the following ones: * #14275 (tests: Write the notification message to different files to avoid race condition in feature_ by ken2812221)* #14007 (tests: Run functional test on Windows and enable it on Appveyor by ken2812221) If you consider this pull request important", please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,2,2018-09-17 06:58:04,470.95,,,1,"b'b"" I don\'t think this change is a great idea because while it fixes one place where we are using non-ascii filenames", if we want to write new tests in the future that use non-ascii filenames (or non-ascii command line arguments), this will not be sufficient, and we\'ll have to add similar workarounds in those places.  It would seem better if you could add to your dockerfile," or update to python 3.7 where this should not be an issue url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,3,2018-09-17 06:58:04,31.58,,1,,"b""b' There are some checks for Unicode before in the file here. So", if this is being enforced we should cleanup that code here to be consistent.  url At the very least, we can change the dirname.  We are introducing this dependency just for a directory name whereas at other places we checks for it . If the project ends up really using UTF-8 command line arguments," maybe it can be enforced at that time. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,closed,2018-09-17 17:12:05,614.02,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,reopened,2018-09-17 17:13:58,1.88,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,4,2018-09-17 06:58:04,5.45,,1,,"b""b' @sanket1729 We allow unicode wallet file names (while certainly not encouraged"," this should be possible today). Actually the the temp directory serves as a prefix for a wallet name.  So I guess the best way forward is to enforce unicode early in and remove unneeded checks for unicode. (E.g. L33 that you linked to)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,5,2018-09-17 06:58:04,13.42,,1,,"b""b' Understood. Should I update this PR to remove that Unicode Check (since it is the only place it is being used)or create a separate issue and PR?  Also", if test dependency  not written anywhere in build instructions for dependencies," it should also be added there. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,closed,2018-09-17 17:40:46,26.8,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,6,2018-09-17 06:58:04,26.32,,1,,"b""b' Jup", you can amend the commit and force push the changes," then change the pull request title as needed.  If you also want to adjust the documentation: Feel free to do so at url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,reopened,2018-09-17 17:57:17,16.52,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,7,2018-09-17 06:58:04,18.47,,,1,"b'b"" That stdout encoding check does looks broken. It should probably say  instead of .  I don\'t think the check should be necessarily removed though. While it\'s true any unix system should be able pass through utf-8 encoded filenames to the filesystem", it\'s not true that any terminal will happily display utf8 characters.  If you want to do remove or modify the stdout check," I would open a new PR to avoid making the earlier comments in this PR unreadable.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,8,2018-09-17 06:58:04,125.52,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,9,2018-09-17 06:58:04,0.2,,1,,"b""b' No activity in 7 days for a simple pull request. Closing for now. Let me know when you want to work on this again.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,closed,2018-09-24 20:21:30,144.22,1,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14237,closed,-,-,-,1,8,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,opened,2018-09-17 18:46:36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,title,2018-09-17 18:46:36,00:00,,1,,"b""b' Minimize vfExec counting in script handling'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,body,2018-09-17 18:46:36,00:00,1,,,"b'b"" @SergioDemianLerner described a potential attack vector by exploiting the way how is handled in script. Since the vector is scanned once for every opcode", a specially crafted script could scan up to 979K items, and it may take a couple seconds to validate a block packed with such scripts. Read more: url The article suggested an O(1) algorithm to fix the problem. I\'m trying to fix in a different way. Although it is not the optimal solution, the 5-line patch is very easy to review, and it can reduce the worst case from 979k to about 5k items to be scanned, a 99.49% reduction.  To make review easier, I\'ll make inline comments  EDIT: a regular block full of CHECKSIG might also take seconds to validate, so this consensus code fix may not be necessary. But anyway," review and comments are welcomed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,1,2018-09-17 18:46:36,804.83,,1,,"b""b' | Coverage  | Change ([pull 14245]url  | Reference ([master]url   Lines   | +0.0056 %    | 87.0361 %   Functions | +0.0618 %    | 84.1130 %   Branches  | -0.0095 %    | 51.5451 %    |'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,2,2018-09-17 18:46:36,816.9,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#10729]url  (Wrap EvalScript in a ScriptExecution class by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,closed,2019-05-07 17:06:18,1339.7,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,3,2018-09-17 18:46:36,1157.98,,1,,"b""b' The last travis run for this pull request was 231 days ago and is thus outdated. To trigger a fresh travis build"," this pull request should be closed and re-opened.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,reopened,2019-05-07 17:06:20,0.03,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14245,open,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,opened,2018-09-17 22:29:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,title,2018-09-17 22:29:15,00:00,,1,,"b""b' qt: Remove redundant stopThread() and stopExecutor() signals'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,body,2018-09-17 22:29:15,00:00,,1,,"b""b' The signal do this work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,1,2018-09-17 22:29:15,224.42,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13674]url  (Qt: Fix for bitcoin-qt becoming unresponsive during shutdown (issue #13217) by LeandroRocha84) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,2,2018-09-17 22:29:15,1169.43,,,1,"b""b' seems more elegant"," utACK 041be348b0bd96d87eb3d1a2b0edc47538dc9f66 will test soon.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,3,2018-09-17 22:29:15,856.38,,1,,"b""b' Tested ACK #041be348b0bd96d87eb3d1a2b0edc47538dc9f66 url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,4,2018-09-17 22:29:15,1194.45,,1,,"b""b' | Coverage  | Change ([pull 14250]url  | Reference ([master]url   Lines   | +0.0044 %    | 87.0361 %   Functions | +0.0154 %    | 84.1130 %   Branches  | -0.0038 %    | 51.5451 %    |'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,5,2018-09-17 22:29:15,433.83,,1,,"b""b' @Sjors Could you possibly to review this PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,6,2018-09-17 22:29:15,973.92,,,1,"b'b"" Definitely looks cleaner", but I\'m not sure what to test: quitting the app still works on macOS 10.14 in 041be348b0bd96d87eb3d1a2b0edc47538dc9f66," so that\'s good.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,7,2018-09-17 22:29:15,691.77,,1,,"b""b' Needs more tests (@Sjors", @fanquake," etc.)...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,8,2018-09-17 22:29:15,395.58,,1,,"b""b' tACK 041be34  Tested on top of 816fab9. If anyone has extra tests etc that could be run against this please post them here.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,9,2018-09-17 22:29:15,664.53,,1,,"b""b' Added similar cleanup for  . Please re-review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,10,2018-09-17 22:29:15,335.22,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,11,2018-09-17 22:29:15,76.53,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,12,2018-09-17 22:29:15,834.45,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,closed,2019-01-06 09:29:32,660.28,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,reopened,2019-01-06 09:29:39,0.12,0,12,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,13,2018-09-17 22:29:15,855.98,,1,,"b""b' Rebased. Again :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,14,2018-09-17 22:29:15,837.87,,1,,"b""b' utACK 24313fbf7e3d69145bc18c089601ba7aea35d61c'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,closed,2019-01-17 13:41:28,251.82,0,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14250,closed,-,-,-,0,14,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,opened,2018-09-18 15:39:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,title,2018-09-18 15:39:03,00:00,,1,,"b""b' Remove redundant parameter fCheckDuplicateInputs from CheckTransaction(...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,body,2018-09-18 15:39:03,00:00,,1,,"b""b' Remove redundant parameter from  .  Diff without whitespace noise: [ ]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,1,2018-09-18 15:39:03,126.38,,1,,"b""b' No more conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,2,2018-09-18 15:39:03,223.12,,1,,"b""b' utACK 0172ba4a6800ac934f8b4712c27b5ccd66deb658'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,3,2018-09-18 15:39:03,25.53,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,4,2018-09-18 15:39:03,375.6,,1,,"b""b' utACK 0172ba4'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,5,2018-09-18 15:39:03,493.27,,1,,"b""b' utACK 0172ba4.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,6,2018-09-18 15:39:03,43.67,1,,,"b'b"" NACK we\'ll probably re-introduce the optimization at some point", let\'s avoid the code churn. On September 18, 2018 3:42:40 PM UTC, practicalswift  wrote:>Remove redundant parameter from>[ ]url >You can view, comment on," or merge this pull request online at:>CheckTransaction(...)>url >You are receiving this because you are subscribed to this thread.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,closed,2018-09-19 15:38:52,1439.82,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,7,2018-09-18 15:39:03,285.33,1,,,"b""b' IMO leaving unused code that can lead to bugs is worst than code churn. This can be reverted along with proper  once and if necessary.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,8,2018-09-18 15:39:03,24.83,,1,,"b'b"" I am in agreement with @promag and was about to say similar. I don\'t see the issue with this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,reopened,2018-09-19 21:26:19,347.45,2,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,9,2018-09-18 15:39:03,190.82,,1,,"b""b' Re-opened since consensus opinion seems to closer to be ACK side than the NACK side :-)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,10,2018-09-18 15:39:03,9.5,,1,,"b""b' @practicalswift to avoid noise please gather more comments before changing PR status.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,11,2018-09-18 15:39:03,309.2,,1,,"b""b' utACK 0172ba4a6800ac934f8b4712c27b5ccd66deb658. It is safer to remove this unused code now. Any future optimizations should be written in a different way that is more clear and not easily misunderstood as benign.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,12,2018-09-18 15:39:03,27.18,,1,,"b""b' utACK 0172ba4a6800ac934f8b4712c27b5ccd66deb658'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,13,2018-09-18 15:39:03,174.67,,1,,"b'b"" NACK right now. Let\'s please take some time to study the reasons that caused the issue first before we touch this code further.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,14,2018-09-18 15:39:03,4.43,,1,,"b""b' I agree with @sipa"," cleaning up this code is not a priority now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,closed,2018-09-20 06:12:35,526.27,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14258,closed,-,-,-,2,14,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,opened,2018-09-19 21:43:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,title,2018-09-19 21:43:37,00:00,,1,,"b""b' bitcoin-qt stops while switching SSLv3 to TLS on Arch Linux'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,body,2018-09-19 21:43:37,00:00,,1,,"b""b' After updating packages on Arch Linux ( KDE Plasma", 4.18.8-arch1-1-ARCH x86_64  ), I cannot start bitcoin-qt even from a fresh installation again. No log, no error messages. Compiling from the latest source on github gives the same result.  I found the problem using sequnce and gdb points :579.  I had to disable SSLv3 Disabled code part ( ," line 579 ) I have also reported the issue to Arch Linux BBS forum and AUR page of bitcoin-git package.  Do I need to set up a TLS configuration on Arch Linux? Thanks for your help. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,1,2018-09-19 21:43:37,3.63,,1,,"b""b' I believe this is an upstream qt bug. You can work around by building from depends.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,2,2018-09-19 21:43:37,307.15,,,1,"b""b' @MarcoFalke is there an upstream issue that you could link to? Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,3,2018-09-19 21:43:37,1248.25,,,1,"b'b"" I found an interesting fix for this issue. An unnecessary SSL library version check allows bitcoin-qt to run again on Arch Linux without disabling switching SSLv3 to TLS. QSslSocket::sslLibraryVersionString() returns an empty string for me. Of course"," Q_ASSERT\'s are not necessary :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,closed,2018-09-26 23:42:39,119.03,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,reopened,2018-09-26 23:43:21,0.7,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,closed,2018-09-28 06:47:16,423.92,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,4,2018-09-19 21:43:37,951.87,,1,,"b""b' @eserlxl is this fixed somewhere?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,5,2018-09-19 21:43:37,970.73,,1,,"b'b""  I couldn\'t decide to close the issue or keep it as open. Applying a simple patch solves the issue as I mentioned. I\'ve already posted the bug to Arch Linux official forum. Today"," I will post to Arch Linux bug page. I don\'t think that this bug is directly related to bitcoin source.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,6,2018-09-19 21:43:37,978.02,,,1,"b'b"" Ok thanks. Here\'s the forum link: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,7,2018-09-19 21:43:37,1119.72,,1,,"b'b"" Yes and here\'s the bug report link for Arch Linux developers:  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14273,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,opened,2018-09-21 01:14:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,title,2018-09-21 01:14:06,00:00,,1,,"b""b'  build: Add MSVC project files for bitcoin-wallet-tool'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,body,2018-09-21 01:14:06,00:00,,1,,"b""b' Based on #13926. Add msvc project files for it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,1,2018-09-21 01:14:06,144.57,,1,,"b""b' Reviewers", this pull request conflicts with the following ones: * #14283 (WIP: Add wallet tool test by promag)* #13100 (gui: Add dynamic wallets support by promag)* #12246 (Bugfix: Only run bitcoin-tx tests when bitcoin-tx is enabled by luke-jr) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,2,2018-09-21 01:14:06,640.98,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,3,2018-09-21 01:14:06,1.37,,,1,"b'b"" Thanks for doing this @ken2812221 . I\'ve squashed your changes into the commit in #13926. (I didn\'t cherry pick as a separate commit to avoid breaking git bisect for msvc builds).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,closed,2018-09-27 14:27:44,793.63,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,reopened,2018-09-27 14:27:47,0.05,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,closed,2018-09-27 14:27:49,0.03,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14284,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,opened,2018-10-04 06:42:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,title,2018-10-04 06:42:17,00:00,,1,,"b""b' Faster Input Deduplication Algorithm'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,body,2018-10-04 06:42:17,00:00,1,,,"b'b"" This PR introduces a faster input deduplication algorithm.  In the first commit", I introduce a worst case duplicate input benchmark.  The existing code achieves the following performance.  DuplicateInputs,5,10, 0.710982, 0.0140756, 0.0143986, 0.0141852  In the next commit, I introduce a probabilistic checker which is much faster. It\'s analysis and use is documented extensively in the code comments. It achieves the following performance on the same benchmark.  DuplicateInputs,5,10, 0.166576, 0.00329314, 0.0034048," 0.0033221  This is about 4.3X faster. Future work can further improve this by back-grounding the checks and hashing to another thread. This does introduce one behavior change in which DoS error gets reported for transactions which have both duplicates and null inputs; the first error found will be the one reported.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,closed,2018-10-04 07:19:10,36.88,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,reopened,2018-10-04 07:19:13,0.05,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,1,2018-10-04 06:42:17,46.98,,1,,"b'b\' Can you post ""typical"" case benchmark comparisons?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,2,2018-10-04 06:42:17,69.45,1,,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14400]url  (Add Benchmark to test input de-duplication worst case by JeremyRubin)* [#14397]url  (Faster duplicate input check in CheckTransaction (alternative to #14387) by sipa)* [#14074]url  (Use std::unordered_set instead of set in blockfilter interface by jimpo) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,3,2018-10-04 06:42:17,19.28,,,1,"b'b"" @JeremyRubin Impressive speedup! What is the risk-reward trade-off we\'re facing with this change? More specifically: what risks do you see associated with this change to consensus critical code?  Does the change in which DoS error gets reported for transactions which have both duplicates and null inputs have any consequences or impose any risks?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,4,2018-10-04 06:42:17,875.55,,1,,"b""b' Anyone measured with and without this change? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,5,2018-10-04 06:42:17,446.47,,,1,"b'b"" My immediate reaction is that this seems very complex compared to a naive std::set comparison! This also pulls our SipHash implementation into consensus-critical code", which seems like a big price to pay for a performance win. I lean pretty strongly towards concept NACK.  @JeremyRubin your PR description talks about what this PR does, but not why. This makes block propagation faster, but do we have an understanding of how much these milliseconds matter? Is there a way we can determine whether the increased complexity introduced is a reasonable price to pay for the performance win?  Also," +1 to @MarcoFalke\'s comment here: url  . Can reviewers *please* not start nitting code before there\'s been a concept discussion. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,6,2018-10-04 06:42:17,10.5,,,1,"b'b"" Goal was to minimize the performance regression caused by the CVE fix. Understand this is sensitive code for that reason. This code is also generally theoretically useful for several other contexts because it is O(N). An adapted version (different parameters) could be used to check for duplicate inputs across a large number of txns (e.g.", mempool syncing context). It\'s actually not thaaat complicated; it\'s basically just a bloom filter. The complexity is also mostly in the performance," the correctness is somewhat easy to check.  I don\'t know if the performance win is worth it. I\'ll leave that for others to determine. Just putting it out there.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,7,2018-10-04 06:42:17,29.6,1,,,"b'b"" @JeremyRubin It is sufficiently complicated to introduce undefined behaviour in consensus critical code without any of the reviewers noticing .-)  I\'m afraid the code as it is currently formulated will trigger undefined behaviour due to shift exponents being too large. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,8,2018-10-04 06:42:17,17.15,1,,,"b""b' @practicalswift i think I fixed that -can you confirm? (and also a copy-paste error on which bit was being set :(  )'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,9,2018-10-04 06:42:17,87.55,1,,,"b'b"" @practicalswift No"," I\'m afraid the undefined behaviour is still present.  Check this code:  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,10,2018-10-04 06:42:17,667.63,,1,,"b""b' I feel like this is too much review work vs the gain.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,11,2018-10-04 06:42:17,340.77,1,,,"b'b"" @gmaxwell @sipa please re-review the updated version (should you have time). @practicalswift I think I have eliminated the UB", if not please let me know.  In this version I have kept complexity limited in scope to .  Performance wise this version is actually a bit better in the worst case compared to using the filter per-transaction (DuplicateInputs) and better in an average case (DeserializeAndCheckBlockTest) compared to master.  The simpler put all in vector then sort then find duplicate algorithm could be used here too.  The major benefit of this approach (as amended) is that we not only detect duplicate inputs per transaction," but across the entire block at the same time. This guarantees we won\'t see an in-block double spend in ConnectBlock and CheckTxInputs. This might enable us to parallelize checking that inputs exist (against a cache that tracks at what index an output created in that block was created).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,12,2018-10-04 06:42:17,866.62,,1,,"b'b""  One can\'t do that without losing the ability to cache the check as part of the wtxid validity caching"," as the simpler check could be.  I am failing to see the argument for a gain here that even justifies reviewing the change at all. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,13,2018-10-04 06:42:17,578.63,1,,,"b'b"" @gmaxwell That\'s not accurate -by fixing the salt for the hash (which should be safe -I will consider this more closely)", you could store three uint64_t\'s per input in the wtxid validity cache and then re-insert those on the forward pass of the algorithm. To be clear, this just saves sip-hashing at the expense of memory, but you can just keep a table of precomputed sip-hashes for the inputs in the top of the mempool if it\'s actually an issue. Once you have the hashes, the check itself is very inexpensive... At the very least, such a cache could be configurable. By checking (without inserting) that *all* of the outputs (not txids) created in a transaction are not already in the table as we scan we ensure that none of the inputs spent are created later in the block. This can also be done with an additional backwards pass with a new table only tracking TXIDs for no hashing (for tx in (): insert_table(txid); for input in (): check_table()). The overall expected more work on either of these approaches is around 2x, and with current parameters this is reasonable. With this check completed, it would be possible to apply all the transactions in a block out of order. Without removing any checks or adding parallelization, this should make *less fragile* much of the code after CheckBlock (e.g., ConnectBlock) because we never reach it for a block which has out-of-longchain-order transactions (and cause us to have to abort partially applied transactions).  I wanted to get *just* the duplicates checking reviewed and accepted first, then, in the future work on these other projects.  @instagibbs with this current version, it seems to minorly worse (1.5% median to median) on DeserializeAndCheckBlockTest. I\'m unaware if this is a representative sample of blocks or if this tell you anything about the larger performance of a block being validated with respect to things like number of transactions, caches, etc so I\'m reticent to give too much weight to this one in any case. If you have ideas for how we can write a better benchmark to test this for future work, let\'s chat about it.  DeserializeAndCheckBlockTest,5,160, 12.2812, 0.0153002, 0.0154073, 0.0153456 DeserializeAndCheckBlockTest,5,160, 12.5319, 0.0153902, 0.0159464, 0.0155924 Much thanks to all the reviewers who have spent their time reviewing this PR so-far," I appreciate that you took the time to review this contribution to Bitcoin.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,14,2018-10-04 06:42:17,793.13,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,15,2018-10-04 06:42:17,999.73,,1,,b'b\' @jnewbery  nothing in this PR is in the block propagation typical case anymore (not since we finally implemented the full BIP152 HB mode forwarding)," so the belief that this speeds up block propagation is largely mistaken.  ""Goal was to minimize the performance regression caused by the CVE fix."" -there wasn\\\'t one", or at least not an interesting one.  The speedup to duplicate checking was later superseded by changes to allow blocks to be propagated without validating anything more than hash consistency.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,16,2018-10-04 06:42:17,22.67,,1,,"b""b' @gmaxwell see #14837 which supersedes this PR. In my opinion", you are incorrect that CheckBlock is not latency sensitive. Certainly there are a large class of users for whom CheckBlock performance is critical (e.g., miners performing full validation before mining a new block, and miners calling testblockvalidity to get a new template).  This also has a non negligible impact on benchmarks like DeserializeAndCheckBlockTest, which suggests to me that speeding up these checks is important for reindexing, bootstrap," and other activities. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,17,2018-10-04 06:42:17,0.87,,1,,"b""b' Closing in favour of #14837.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,closed,2018-11-29 08:34:52,75.65,7,9,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,18,2018-10-04 06:42:17,15.55,,,1,"b'b""  When it was on the critical path of propagation the small delays involved were cumulative across the whole network. As a result even though one was not particularly interesting", the sum total could be.  Without that effect, you only get the single one shot delay. The effect of a one shot half millisecond delay on mining is negligible, and efforts spend considering that optimization could be better spent on things like getting testblockvalidity out of the critical path-which would be an order of magnitude larger speedup,  likely _simpler_ to review and verify, and would also further moot the new proposed benefit. That logic is spurious. Microbenchmarks are microbenchmarks.  If it had an impact on  it could be measured.  If it did make a big impact there that would be an argument in favor of it, but unless prior profiling was erroneous," that isn\'t possible.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,19,2018-10-04 06:42:17,23.93,,1,,"b""b' @JeremyRand Regarding my comment regarding UB above. The problem was the following:   ... is problematic due to ...   ... which can be contrasted to ... '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14387,closed,-,-,-,7,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,opened,2018-10-10 17:51:03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,title,2018-10-10 17:51:03,00:00,,1,,"b""b' docs: Consistent type names in RPC help descriptions'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,body,2018-10-10 17:51:03,00:00,,1,,"b""b' Followup to url Now"," only these appear in description text:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,1,2018-10-10 17:51:03,397.28,,1,,"b""b' See above comment.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,2,2018-10-10 17:51:03,575.3,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14987]url  (RPCHelpMan: Pass through Result and Examples by MarcoFalke)* [#14918]url  (RPCHelpMan: Check default values are given at compile-time by MarcoFalke)* [#14912]url  ([WIP] External signer support (e.g. hardware wallet) by Sjors)* [#14481]url  (Add P2SH-P2WSH support to listunspent RPC by MeshCollider)* [#14021]url  (Import key origin data through descriptors in importmulti by achow101)* [#12911]url  (wallet: Show fee in results for signrawtransaction* for segwit inputs by kallewoof) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,3,2018-10-10 17:51:03,989.25,,1,,"b'b"" * importprunedfunds has arguments", but they are not listed in the help string. Mind adding them? * uptime takes (and ignores) a dummy argument," whereas it shouldn\'t. Mind fixing the code to throw when a dummy is provided?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,4,2018-10-10 17:51:03,139.53,,1,,"b""b'   has an argument with a space. Mind to replace the space with underscore? has an argument name with a opening bracket. Mind to remove those brackets from the name?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,5,2018-10-10 17:51:03,15.75,,1,,"b""b' ~  and changes are already in the PR.~  Edit: All above issues by MarcoFalke have been resolved by the latest code having transitioned to  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,6,2018-10-10 17:51:03,1005.68,,1,,"b""b' Could rebase and squash with something like:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,closed,2018-11-25 18:22:01,30.97,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,reopened,2018-11-25 19:03:28,41.45,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,closed,2018-12-02 18:17:02,1393.57,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,reopened,2018-12-07 19:12:07,55.08,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,7,2018-10-10 17:51:03,875.12,,1,,"b'b"" This PR doesn\'t compile when rebased on  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,8,2018-10-10 17:51:03,857.8,,1,,"b""b' utACK 2f6fff743a2f1e7c51bee41c18498b4043ba9e48'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,9,2018-10-10 17:51:03,1180.55,,1,,"b'b\'   uses ""json object"". Imo everything should use the same\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,10,2018-10-10 17:51:03,7.45,,1,,"b""b' @MarcoFalke ~I see. To confirm", and everywhere applicable, preferred over and  , aka is set in stone? Will redo as a scripted-diff once more.~  Edit: Done. Note: and is still used in [bitcoin-]url  and [corresponding BTC tests]url  Additionally, [-](-) still uses and  ," since it mentions JSON beforehand.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,11,2018-10-10 17:51:03,1415.05,,1,,"b'b"" Rebased and ready for review @MarcoFalke. Let me know how you\'d like this squashed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,12,2018-10-10 17:51:03,1130.08,,1,,"b""b' Concept ACK.  Though I think the jargon switch to loses information.  The code", in practice, makes a difference between (in general) and  . For example where is used," only an integer will be accepted. Not a decimal value with a point. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,13,2018-10-10 17:51:03,1065.15,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14459,open,-,-,-,0,15,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,opened,2018-10-13 19:38:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,title,2018-10-13 19:38:01,00:00,,1,,"b'b"" RPC method \'encodescript\'""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,body,2018-10-13 19:38:01,00:00,,1,,"b""b' Implements proposal in #12948. Fixes the problem with white space delimiters inside single-quoted strings in  . '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,1,2018-10-13 19:38:01,743.07,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,closed,2018-10-15 12:49:56,1031.92,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,reopened,2018-10-15 12:49:59,0.05,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,2,2018-10-13 19:38:01,1428.9,,1,,"b'b"" I\'m not convinced we need more pure utility functionality as RPCs. These things can be implemented as a library or whatever.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,3,2018-10-13 19:38:01,151.12,,1,,"b'b"" I tend to agree with @sipa though also this discussion should probably have been done in #12948", @mrwhythat simply picked an open issue which didn\'t seem to have anyone protesting against it," and implemented it""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,4,2018-10-13 19:38:01,1419.67,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#13751]url  (Utils and libraries: Drops the  dependency by 251Labs) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,5,2018-10-13 19:38:01,323.58,,1,,"b""b' I created an issue to discuss a tool that could replace pure utility RPC calls: #14671'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,6,2018-10-13 19:38:01,149.02,,1,,"b""b' Closing this because #12984 was rejected.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,closed,2018-12-12 17:53:25,303.43,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14476,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,opened,2018-10-16 03:16:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,title,2018-10-16 03:16:17,00:00,,1,,"b""b' Allow descriptor imports with importmulti'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,body,2018-10-16 03:16:17,00:00,,1,,"b""b' ~~Based on #14454 #14565", last two commits only are for review.~~  Best reviewed with  Allows a descriptor to be imported into the wallet using RPC. Start and end of range can be specified for ranged descriptors. The descriptor is implicitly converted to old structures on import.  Also adds a simple test of a P2SH-P2WPKH address being imported as a descriptor. More tests to come," as well as release notes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,1,2018-10-16 03:16:17,1232.62,,1,,"b""b' After discussion with sipa", closing for now," will come back to this after #14454 is merged'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,closed,2018-10-16 23:48:59,1232.7,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,2,2018-10-16 03:16:17,1164.32,,1,,"b""b' Since #14454 has been merged"," this can be reopened?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,3,2018-10-16 03:16:17,7.23,,1,,"b""b' I believe a simpler approach is possible on top of #14565.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,4,2018-10-16 03:16:17,4.15,,1,,"b'b"" Yep I\'ll reopen this when rebased on 14565""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,reopened,2018-11-03 00:21:05,32.1,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,5,2018-10-16 03:16:17,298.55,,1,,"b'b"" Rebased on url Still planning on adding more tests + release notes"," please don\'t nitpick the lack of tests yet""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,6,2018-10-16 03:16:17,1390.42,,,1,"b'b"" @Sjors thanks for the feedback :)  It should only watch for the scriptPubKey and import no other information", watch-only is a different requirement than being solvable without private keys. You\'re right, good point. I\'ll take a look at andrews PR I think it should be allowed," because of the above reason. Using an xpub without watch only allows it to be solvable without being spendable""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,7,2018-10-16 03:16:17,6.22,,,1,"b'b\' @MeshCollider @Sjors I was imagining that ""watchonly"" would be implicit when using descriptors (  and would be watchonly; anything else would result in a solvable result).  The reason for ""watchonly"" is so that users need to be explicit about the fact they _don\\\'t_ want solvability (generally", you should always want solvability, but if you can\\\'t, you can tell importmulti that it\\\'s fine without).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,8,2018-10-16 03:16:17,557.08,,1,,"b'b"" @sipa I like your suggestion. In that case we should disallow usage of the param when combined with a descriptor.  Regarding getting origin information from the descriptors", @achow101  just rebased #14021 on top of this PR. It\'s a non trivial change. Perhaps for this PR it\'s best to not store origin information. Just make sure that if you do with bip32 flag set to true," then the result doesn\'t crash  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,9,2018-10-16 03:16:17,65.32,,1,,"b'b"" I don\'t see the problem if you want to add a ranged descriptor as watch only to import all the scriptPubKeys but not retain any more info than that?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,10,2018-10-16 03:16:17,13.62,,1,,"b""b' IIUC you would indicate that in the descriptor by wrapping the result in  . Mandating that removes ambiguity from how a descriptor ends up in a wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,11,2018-10-16 03:16:17,63.67,,,1,"b'b"" @Sjors It was my understanding that cannot contain another type of descriptor or key (e.g. a ranged BIP32 key)", only the base58/bech32 encoded address formats. If I\'m wrong then I\'m happy to change this PR," @sipa could weigh in here""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,12,2018-10-16 03:16:17,416.2,,,1,"b""b' xpub byte prefix mismatch results in very generic error; would be nice to give something more meaningful '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,13,2018-10-16 03:16:17,192.62,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15032]url  (Nit fixes for PR 14565 by MeshCollider)* [#14918]url  (RPCHelpMan: Check default values are given at compile-time by MarcoFalke) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,14,2018-10-16 03:16:17,1177.72,,1,,"b""b' ~~Can you rebase this on most recent #14565 ? It has a few logic fixes.~~ discussing what I think are bugs  In addition"," you can not ignore the field for descriptor import. needs to be set to true if the descriptor deals with public keys only: url  (this code is from the refreshed dependent PR)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,15,2018-10-16 03:16:17,988.05,,,1,"b'b"" Now might be a good to time to rebase it"," because testing this might reveal anything we\'ve missed in the overhaul PR #14565.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,16,2018-10-16 03:16:17,929.3,1,,,"b'b"" I\'ve rebased this but haven\'t tested", it was a bit of a messy rebase and still a couple of things to address such as adding the warnings to the descriptor import function," plus more tests. I\'ll hopefully finish those things off in the next couple of days too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,17,2018-10-16 03:16:17,500.73,,,1,"b'b\' By ""haven\\\'t tested"" you mean ""haven\\\'t compiled"" right? :-)  It looks like a tricky rebase. E.g. your code is referring to and  ", the latter has been renamed to  , but the former doesn\\\'t exist anymore.  The function is now duplicated.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,18,2018-10-16 03:16:17,1328.53,,1,,"b'b"" I\'ve now finished rebasing", lightly tested, added some warnings, and added a couple more tests. There is one thing that still needs addressing, which is that a descriptor which provides a private key should import that private key. Currently it only Expands() the descriptor and imports the public keys. The implementation of that is likely going to require some discussion so I will open a future PR for that," and leave it as a TODO for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,19,2018-10-16 03:16:17,766.75,,1,,"b'b"" Concept ACK. I\'ve had a quick skim of the code. A couple of high-level questions:  have you considered implementing this as a separate RPC method? There are enough modal arguments (eg (?) should only be used when importing "," range should only be used when importing descriptors) that it seems like this makes sense as a separate method. should it ever be necessary to add a argument for importing private keys with a descriptor? Can\'t you just include the private keys directly in the descriptor?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,20,2018-10-16 03:16:17,2.67,,1,,"b""b' @jnewbery IIRC a unique RPC would likely be reserved for when wallet actually has descriptor records and can have a clean API break.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,21,2018-10-16 03:16:17,1022.37,,1,,"b""b' +1 for including private keys directly in the descriptor rather than a separate keys argument'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,22,2018-10-16 03:16:17,471.98,,1,,b'b\' @jnewbery @Sjors as mentioned above  >There is one thing that still needs addressing, which is that a descriptor which provides a private key should import that private key. Currently it only Expands() the descriptor and imports the public keys. The implementation of that is likely going to require some discussion so I will open a future PR for that, and leave it as a TODO for now.  So right now," the ""keys"" field is the only way to import a private key. That is because the descriptor code doesn\\\'t currently support deriving specific private keys", Expand() only provides public keys and scripts. I have the code for importing private keys too ready, so let\\\'s discuss that issue there when I open a PR. EDIT: #15024\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,23,2018-10-16 03:16:17,845.18,,1,,"b""b' Rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,24,2018-10-16 03:16:17,664.37,,1,,"b'b"" @MeshCollider I know you\'re travelling so no rush on an answer to this"," but do you have thoughts about my questions in IRC: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,25,2018-10-16 03:16:17,6.75,,1,,"b""b'  @jnewbery you mean deprecate in or error if and are used? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,26,2018-10-16 03:16:17,21.72,,1,,"b'b""  We can\'t deprecate in  . That field is still required if importing a script not using a descriptor. My suggestion would be to error if and are provided in the same import object (in the same way that this PR errors if both and are provided).  But perhaps I don\'t have full context"," and importing with a descriptor and private keys provided separately is important functionality. Looking forward to hearing meshcollider\'s input.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,27,2018-10-16 03:16:17,37.88,,1,,"b'b"" @jnewbery I think it\'s reasonable to have a shared fully-public descriptor that all participants know"," and each has their own private key stored separately. It may be inconvenient to first need a utility to combine the public descriptor with private keys before importing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,28,2018-10-16 03:16:17,669.43,,1,,"b'b"" Agree with sipa", I don\'t see a reason for limiting one way or the other just for the sake of limitation," this flexibility seems potentially useful unless there\'s a case against it""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,29,2018-10-16 03:16:17,688.35,,1,,"b'b"" I\'ve had a go at rearranging the commits for this PR in a branch here: url  It splits up the code move and new functionality", so with and for the move commits," it should be a lot easier to review (review hints are in the commit log). I\'ve also made a very minor change that undoes the reversion here: url I think splitting up the commits in this way makes the PR much easier to review. @MeshCollider feel free to grab that branch if you agree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,30,2018-10-16 03:16:17,869.45,,,1,"b'b"" @jnewbery thanks", that is indeed way more readable. For those looking on Github," you can use  . So that just leaves my request for more tests.  I\'m quite happy with how short the meat of this change in url  is.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,31,2018-10-16 03:16:17,1277.45,,,1,"b'b"" @jnewbery Thanks! I\'ve grabbed your branch"," and I\'ll address the few other comments shortly""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,32,2018-10-16 03:16:17,332.47,,1,,"b'b""   fails when rebased on master due to test refactor.  I\'ve rebased my branch on master and fixed the test here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,33,2018-10-16 03:16:17,588.37,,1,,"b'b\' I think you\\\'ve now changed it to never importing public keys.  If I import ""pkh(036f1aef8329e88a8e7dca56a4e8f908697555478b26709f7513eba54db4acea21)""", and subsequently call  ," it says ""solvable: False"". All information for solvability is available", however. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,34,2018-10-16 03:16:17,605.52,,1,,"b""b' The following tests reproduces what @sipa found: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,35,2018-10-16 03:16:17,195.2,1,,,"b'b"" More IRC discussion: url Beyond the immediate bug that\'s been found", I\'m confused about the pubkey issues being discussed: url  url  Just at a really high level it\'s not clear to me if there is:  1. One clearly correct solution to implement in this PR. 2. One solution to implement in this PR that is clearly better than alternatives, but with known limitations that can be addressed later. 3. Disagreement about multiple solutions with different tradeoffs.  @sipa / @MeshCollider if you could clarify whether the situation is (1), (2), or (3)," it would help the discussion make more sense...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,36,2018-10-16 03:16:17,199.98,,1,,b'b\' @ryanofsky I suspect this is subjective, but this is my view:  * Due to the inherent quirks in the current IsMine logic, we can\\\'t guarantee that *just* the exact scriptPubKey implied by the provided descriptor will match. If that was possible," it would be the obvious solution but it\\\'s a choice we make by implementing this as a layer on top of the existing IsMine logic. * A strong requirement in my view is that all the things that are imported are ""policy compatible"" with the descriptor. By that I mean that all scriptPubKeys made watched by importing a descriptor must be spendable by the same group of keys that can spend the sPK corresponding to the descriptor. If this is violated", you risk accepting a payment to something you can\\\'t spend. * A weaker requirement is that whenever all information for solvability is present in the descriptor, the output is considered solvable.  I believe the above is all possible with the current IsMine logic, so I think it\\\'s the most obvious solution. It requires only importing the public keys which occur inside P2, but not those inside multisig.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,37,2018-10-16 03:16:17,40.13,,1,,"b""b' @MeshCollider See #15263"," that should make it easier.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,38,2018-10-16 03:16:17,144.82,,1,,"b""b' Tested a bit and works as expected (limited tests). A nitpick would be why the range is a JSON object rather then an array with two items.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,39,2018-10-16 03:16:17,173.98,,1,,"b'b"" @jonasschnelli I had the array initially"," but the RPCHelpMan doesn\'t support that kind of help output so I just changed it""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,40,2018-10-16 03:16:17,1254.43,,,1,"b""b' I took a stab at rebasing this"," but it was absolute hell :-) Maybe @achow101 has more luck...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,41,2018-10-16 03:16:17,421.17,,1,,"b'b"" url  is a rebase of this which handles the merge conflicts caused by #15235. It does not account for #15263 (even though that is in it\'s history).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,42,2018-10-16 03:16:17,171.58,,1,,"b'b"" I\'ve rebased and squashed as well as added some more tests for descriptor imports and fixed the public key issue now #15263 has gone in""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,43,2018-10-16 03:16:17,520.93,,1,,"b""b' utACK b985e9c850ea682eced7021faf6c7c835066c61b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,closed,2019-02-07 21:44:43,1283.63,2,34,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14491,closed,-,-,-,2,34,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,opened,2018-10-25 00:43:13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,title,2018-10-25 00:43:13,00:00,,1,,"b""b' Adjust configure so that only bip70 is disabled when protobuf is missing instead of the GUI'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,body,2018-10-25 00:43:13,00:00,,1,,"b""b' This change ensures that the GUI is still built even if protobuf is missing unless enable-bip70 is passed to configure. If protobuf is present bip70 support will be compiled in unless disable-bip70 is passed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,1,2018-10-25 00:43:13,190.73,,1,,"b""b' tACK 3852aff on macOS 10.14  With protobuf installed: Without protobuf installed: Without protobuf installed", with  : (when checking out this branch for the first time," you need a in order to see the bip70 configure option)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,2,2018-10-25 00:43:13,4.65,,1,,"b""b' I think will also get you the configure option.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,3,2018-10-25 00:43:13,1436.98,,1,,"b""b' testing 3852aff:  with protobuf and  :  with protobuf and  :  without protobuf and  :  without protobuf and  :  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,4,2018-10-25 00:43:13,58.1,,,1,"b""b' Gitian builds for commit f4e4ea1ceecfb978584bd4f43cb6826e44ba86a3 (master): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url  Gitian builds for commit 5d78c857f3117cacaea4275b474c164e3e88bbd2 (master and this pull): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,5,2018-10-25 00:43:13,366.72,,1,,"b""b' Gitian fails with  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,closed,2018-10-27 11:00:24,617.18,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,reopened,2018-10-27 11:00:31,0.12,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,6,2018-10-25 00:43:13,24.7,,1,,"b""b' Travis failure:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,7,2018-10-25 00:43:13,482.4,,1,,"b""b' @ken2812221 does this seem to be a similar issue to #14568?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,8,2018-10-25 00:43:13,267.22,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#10102]url  ([experimental] Multiprocess bitcoin by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,9,2018-10-25 00:43:13,1360.92,,1,,"b""b' This should be fixed now"," can we trigger a new gitian test build?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,10,2018-10-25 00:43:13,456.82,,,1,"b""b' Gitian builds for commit edc715240cb6738262ae96dea476544052eb5351 (master): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url  Gitian builds for commit 8ba6b08d0066e507298f5f1f2261d2f7ffd0e588 (master and this pull): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,11,2018-10-25 00:43:13,803.38,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,closed,2018-12-06 18:53:08,472.62,0,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14564,closed,-,-,-,0,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,opened,2018-11-01 01:10:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,title,2018-11-01 01:10:26,00:00,,1,,"b""b' RPC Does not work after upgrading for me '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,body,2018-11-01 01:10:26,00:00,,1,,"b'b"" Ever since I upgraded to the latest version I cannot get bitcoin-cli to run.  **When I try**  **I get a response:**   I have not changed anything besides download source", compile," replace bitcoind and bitcoin-cli files and that\'s it. Not sure why this would break all of a sudden. **My  file:**  **Versions:**  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,1,2018-11-01 01:10:26,6.52,,1,,"b""b' The option needs to be in a testnet section; since 0.17 by default it only applies to mainnet.  You can either use or  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,2,2018-11-01 01:10:26,3.45,,1,,"b""b'  Where do I find such documentation to know what other options need to be in the test net section?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,3,2018-11-01 01:10:26,1.48,,1,,"b'b"" It\'s in the release notes: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,4,2018-11-01 01:10:26,0.67,,,1,"b""b'  Thank you. To save someone time in the future possibly: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,closed,2018-11-01 01:22:33,12.12,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,5,2018-11-01 01:10:26,10.9,,1,,"b""b' Even with the updated  file I am still unable to connect via RPC '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,reopened,2018-11-01 01:33:27,10.9,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,6,2018-11-01 01:10:26,11.9,,1,,"b""b' Are you sure that bitcoind is running? If you do  "," do you see bitcoind bound to port 8332?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,7,2018-11-01 01:10:26,5.03,,1,,"b'b""  It is running but it appears to be listening on port 18332 and I have zero clue why since I have my configuration setup to use 8332. Any ideas?  **Proof it\'s running:**  **Proof this is the correct process and using the correct conf file:**   **Proof the  conf file is correct:**  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,8,2018-11-01 01:10:26,11.88,,1,,"b""b' Did you restart after updating your configuration file?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,9,2018-11-01 01:10:26,4.4,,1,,"b""b'  Yes I did.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,10,2018-11-01 01:10:26,20.4,,1,,"b""b' @tgreco  I think section name should be instead of  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,11,2018-11-01 01:10:26,2.43,1,,,"b""b' Oops"," my bad!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,12,2018-11-01 01:10:26,133.1,,1,,"b""b'  @tgreco Did this solve your problem? If so"," can you close this issue. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,13,2018-11-01 01:10:26,706.25,,1,,"b'b"" Shouldn\'t we warn when the name of the section is not recognized?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,14,2018-11-01 01:10:26,1050.87,,,1,"b'b"" Thanks"," I\'ve opened an issue for that in #14702.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,closed,2018-11-10 09:59:44,506.28,1,13,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,15,2018-11-01 01:10:26,28.28,,,1,"b""b' !'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,16,2018-11-01 01:10:26,1031.63,,,1,"b""b'  really saved my time", I was wondering why regtest rpcport not work, remain default 18443," thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14627,closed,-,-,-,1,13,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,opened,2018-11-20 02:57:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,title,2018-11-20 02:57:37,00:00,,1,,"b""b' 0.17'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,body,2018-11-20 02:57:37,00:00,,,1,b'b\' Pull requests without a rationale and clear improvement may be closed immediately.  Please provide clear motivation for your patch and explain how it improves Bitcoin Core user experience or Bitcoin Core developer experience significantly.  * Any test improvements or new tests that improve coverage are always welcome. * All other changes should have accompanying unit tests (see  ) or functional tests (see  ). Contributors should note which tests cover modified code. If no tests exist for a region of modified code, new tests should accompany the change. * Bug fixes are most welcome when they come with steps to reproduce or an explanation of the potential issue as well as reasoning for the way the bug was fixed. * Features are welcome, but might be rejected due to design or scope issues. If a feature is based on a lot of dependencies, contributors should first consider building the system outside of Bitcoin Core, if possible. * Refactoring changes are only accepted if they are required for a feature or bug fix or otherwise improve developer experience significantly. For example," most ""code style"" refactoring changes require a thorough explanation why they are useful", what downsides they have and why they *significantly* improve developer experience or avoid serious programming bugs. Note that code style is often a subjective matter. Unless they are explicitly mentioned to be preferred in the [developer notes](/-), stylistic code changes are usually rejected.  Bitcoin Core has a thorough review process and even the most trivial change needs to pass a lot of eyes and requires non-zero or even substantial time effort to review. There is a huge lack of active reviewers on the project, so patches often sit for a long time. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,closed,2018-11-20 02:58:46,1.15,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,1,2018-11-20 02:57:37,1.27,,1,,"b""b' ok '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,reopened,2018-11-20 02:58:53,0.12,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,2,2018-11-20 02:57:37,0.55,,1,,"b""b' kk'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,closed,2018-11-20 02:59:26,0.55,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14766,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,opened,2018-12-06 14:50:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,title,2018-12-06 14:50:37,00:00,,1,,"b""b' Travis: enforce Python 3.4 support through linter'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,body,2018-12-06 14:50:37,00:00,,1,,"b""b' The minimum supported version of Python is 3.4 according to []url  This PR makes the Travis linter use this version in order to catch accidental use of modern syntax.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,1,2018-12-06 14:50:37,7.48,,,1,"b""b' Concept ACK  Good idea!  ~What about bumping the requirement to 3.5 to allow for Xenial?~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,2,2018-12-06 14:50:37,1.42,,1,,"b""b' utACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,3,2018-12-06 14:50:37,7.7,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,4,2018-12-06 14:50:37,100.58,,,1,"b""b' I mean of course strong Concept ACK if you figure out a way to install older versions (specific versions) of packages in ubuntu.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,5,2018-12-06 14:50:37,128.6,,,1,"b'b"" The only way to install older or newer versions of Python is through [pyenv]url  I\'d rather not add another dependency. ~Instead", a more practical solution is to bump the minimum Python version to 3.5, because our linters use that. It\'s available on Ubuntu Xenial, but we would lose support for (almost EOL) Trusty (Python 3.4).~  In fact,  , ,  , and rely on Python 3.6 via  . However only a small subset of developers need those scripts. I made trivial workaround for so Travis can use it with Python ~3.5~ 3.4, but this workaround is not safe for the other scripts, see  #14128 ~Alternatively we could modify the linter to work with Python 3.4 syntax. I personally can\'t be bothered, but I\'ll happily cherry-pick a solution :-)~  I also added for which will cause tests with too modern syntax to fail on a developer machine before Travis. When using a script that does require Python >=3.5," you\'ll have to do  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,6,2018-12-06 14:50:37,3.23,,1,,"b""b' * Travis build fails if I add commit 5b742441bbc70a0b15a00d214321e79c58738395 with too modern syntax: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,7,2018-12-06 14:50:37,2.67,,1,,"b'b"" The python 3.4 requirement is only for the tests"," which might be run by users that compile from source. Personally I don\'t care about the python version of developer tools and linters and I don\'t mind not supporting 3.4 for those.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,8,2018-12-06 14:50:37,13.72,,,1,"b'b"" @MarcoFalke I initially thought the linter itself needed Python 3.5", but that\'s not true anymore. So in that case we don\'t have to bump the version," nice!  Travis build failure demo when you use too modern syntax: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,9,2018-12-06 14:50:37,1123.08,,1,,"b'b"" I *would* prefer having all tools work with the supported version of Python (3.4)", for consistency for developers," but agree it\'s not urgent\\xe2\\x80\\x94having the tests pass is most important.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,10,2018-12-06 14:50:37,43.45,,,1,"b'b"" @laanwj That\'s a good point. Agree.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,11,2018-12-06 14:50:37,83.42,1,,,"b'b"" I agree with that too"," but it\'s non-trivial because #14128 had to introduce Python 3.6 syntax in those tools to deal with some sort of encoding hell.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,12,2018-12-06 14:50:37,28.43,1,,,"b'b""  Yes", that particular functionality looks hard to replace. I didn\'t know that was Python 3.6 specific. (edit: whoops accidental close)  Edit: One way to handle this would be to wrap the appropriate calls and do the encoding magic only for 3.6," fall back to the system encoding in 3.4 so that it\'d at least work. But I don\'t know it\'s worth it. At some point in the future we\'ll be able to bump the minimum to 3.6 and any work there will be a waste of time.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,closed,2018-12-07 16:34:24,103.78,2,7,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,reopened,2018-12-07 16:34:28,0.07,2,7,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,13,2018-12-06 14:50:37,1058.7,,1,,"b'b"" Rebased and added a workaround for calling on a array in #14886 (cc @jnewbery)"," which doesn\'t work before Python 3.5.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,14,2018-12-06 14:50:37,123.87,,1,,"b""b' utACK 31926ee8cfc73501524dfa0fef2ccbaa786d6a00  Going to merge this immediately to avoid any non-Python3.4isms from sneaking in.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,closed,2018-12-13 12:18:09,1183.68,2,9,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,15,2018-12-06 14:50:37,355.63,,1,,"b""b' I missed a spot"," see #15285'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14884,closed,-,-,-,2,10,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,opened,2018-12-11 02:36:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,title,2018-12-11 02:36:39,00:00,,1,,"b'b\' test: Prevent ""Duplicate-wallet filename specified""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,body,2018-12-11 02:36:39,00:00,,1,,"b'b\'   may sometimes fails with ""Duplicate -wallet filename specified"" RPC command just notify the unload intention and it may delay a little bit until actual unloading.  This patch check the completion of unloading by using  .  This fixes #14917\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,1,2018-12-11 02:36:39,376.5,,1,,"b""b' Not sure if this is the right fix"," IIRC the wallet is removed from the list first and then the actual unload happens. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,2,2018-12-11 02:36:39,148.82,,1,,"b""b' The relevant code is  url The wallet itself has locks to prevent it from being loaded while already loaded"," so it seems like an OK fix to me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,3,2018-12-11 02:36:39,42.85,,1,,b'b\' @kallewoof that\\\'s what happening," it hits that error.  It\\\'s always the case that after   doesn\\\'t return but that wallet can be unloading. This change only reduces the race to the actual duplicate condition.  I see 4 solutions:  1.  add an option to to force waiting \\xf0\\x9f\\x91\\x8d \\xf0\\x9f\\x91\\x8d 2. use this change **but**  also change to actually verify if the wallet is not unloaded \\xf0\\x9f\\x91\\x8e 3. make aware the wallet is unloading and wait for it \\xf0\\x9f\\x91\\x8d 4. change the test to repeat the until it succeeds \\xf0\\x9f\\x91\\x8d \\xf0\\x9f\\x91\\x8d  \\xf0\\x9f\\x91\\x8d \\xf0\\x9f\\x91\\x8d Note that there are 2 wallet ""registries"": url  url \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,4,2018-12-11 02:36:39,163.88,,,1,"b""b' @promag @kallewoof Thank you for the discussion. I will try this.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,5,2018-12-11 02:36:39,47.75,,,1,"b'b"" @AkioNak you could add an option to  ", untested:  And then:  BTW," now I\'m more fond of @ryanofsky what are your thoughts?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,6,2018-12-11 02:36:39,66.37,,1,,"b'b""  I think a better approach would be to make unloadwallet aware that a wallet is unloading and wait for it. It\'s surprising to me that this would be an asynchronous operation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,7,2018-12-11 02:36:39,123.37,,1,,"b""b' @ryanofsky the idea was to not block especially if the wallet is being used or a rescan is going on. In that case the client could timeout and then the problem would be the same \\xe2\\x80\\x94 attempt to load would raise error. But maybe we should ignore these edge cases and make it synchronous or even add an option?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,8,2018-12-11 02:36:39,8.37,,1,,"b'b"" Agree with @ryanofsky. Seems unnecessary to make this call async. If the wallet is in use (e.g. rescan) you should be aware of it and not call unloadwallet. So shouldn\'t unloadwallet throw an error in that case? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,9,2018-12-11 02:36:39,1134.03,,1,,"b""b' Closing in favor of #14941'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,closed,2018-12-13 13:48:55,672.27,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,10,2018-12-11 02:36:39,514.68,,1,,"b""b' @laanwj Please do not close PR:s unless there is inactivity or the author is clearly not cooperating. The authors are perfectly capable of doing this themselves.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,11,2018-12-11 02:36:39,3.88,,1,,"b'b"" @kallewoof I don\'t think there\'s a point of having multiple competing PRs open", this spreads discussion around," reopening is always a possibility if discussion goes the other way""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,12,2018-12-11 02:36:39,55.62,,1,,"b""b' I understand your desire to have a clean list of PRs", but there really is no rush on the matter. This PR literally had pushes to it *hours* before you closed it. If the author judges that the replacement is objectively better they will close their PR on their own, and if they refuse," I see no problem with you making a judgement call like this one.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,13,2018-12-11 02:36:39,575.38,,,1,"b'b"" I\'m not sure how you\'re interpreting it", but for me, closing the PR is only an indication that it\'s currently not considered for merging. It doesn\'t delete the discussion, doesn\'t even prevent replying! it doesn\'t delete the code changes," etc.  That\'s a typical maintainer task. at least for me it has nothing to do with \'urgency\' or capability or non-capability of the author to do it themselves.  But anyhow if you insist I\'ll re-open.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,reopened,2018-12-14 09:07:32,1158.62,0,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,14,2018-12-11 02:36:39,26.13,,1,,"b'b"" Removing my comment as it strays off topic from the PR. I\'ve sent it to @laanwj in private.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,15,2018-12-11 02:36:39,36.87,,1,,"b'b"" @kallewoof I don\'t think it makes sense to change the test tree to later revert. There is already agreement to change unloadwallet and @laanwj just closed this in light of that being closed doesn\'t mean is locked and dead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,16,2018-12-11 02:36:39,4.47,,,1,"b'b"" Yes", so I think there\'s a misunderstanding here: Thanks @AkioNak for trying to fix the test!  However your PR made us realize that the current behavior is broken in the first place and that the unload shouldn\'t be asynchronous," and the test failure is pointing out an actual issue. It likely means that the test doesn\'t need to change.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,17,2018-12-11 02:36:39,71.77,,,1,"b""b' @kallewoof @promag @ryanofsky @MarcoFalke @laanwj  Thank you so much. Now I understand that we need to fix the behaviour of rather than changing the test. So"," I close this PR myself.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,closed,2018-12-14 11:17:23,129.85,0,14,5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,18,2018-12-11 02:36:39,12.22,,,1,"b""b' Thank you @AkioNak for identifying the problem so quick.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14919,closed,-,-,-,0,14,6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,opened,2018-12-11 12:20:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,title,2018-12-11 12:20:27,00:00,,1,,"b""b' windows: Set _WIN32_WINNT to 0x0601 (Windows 7)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,body,2018-12-11 12:20:27,00:00,,1,,"b""b' The current minimum support Windows version is Vista. So set it to 0x0600 url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,1,2018-12-11 12:20:27,7.53,,,1,"b""b' ~~Is that so? I know we dropped Windows XP support"," but did we drop support for Vista?~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,2,2018-12-11 12:20:27,8.9,,1,,"b'b"" @laanwj Oh"," I saw #12546 and thought that we didn\'t support Vista anymore. Changed to 0x0600 (Vista)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,3,2018-12-11 12:20:27,5.3,,,1,"b'b"" ~~I mean", we could still decide to drop Vista support for 0.18.0 if there\'s a good reason for it, but it\'ll require some discussion.~~ ~~(unless support for Vista was already dropped," but I don\'t know and cannot find any discussion of that?)~~  What does this change do? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,4,2018-12-11 12:20:27,16.38,,1,,"b'b"" #14881 is using and it\'s only for Vista or later. So I create this PR just for that.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,5,2018-12-11 12:20:27,207.57,,,1,"b'b"" If is the only reason", that could be easily re-implemented. Of course," if there is a need to keep Vista support. I personnaly don\'t care. :)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,6,2018-12-11 12:20:27,57.05,1,,,"b""b' @kristapsk Vista supports that", which is the minimum that is supported," so now after changing the minimum (initially it was changing it to W7) to Vista this PR is non-controversial.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,7,2018-12-11 12:20:27,16.7,,,1,"b'b"" Ok", then it\'s strong utACK from me," nobody should run Bitcoin Core on XP anymore.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,8,2018-12-11 12:20:27,467.2,,1,,"b""b' But should be mentioned in release notes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,9,2018-12-11 12:20:27,73.75,,,1,"b'b"" Prefer to see this kind of change merged as part of a PR that  it.  Release notes are already clear that XP isn\'t supported"," for several versions now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,10,2018-12-11 12:20:27,325.88,,1,,"b'b""  XP has already not been supported since *0.13.0* in 2016"," which was explicitly mentioned in the release notes then (and many a release after that): url  There\'s no need for any argument or discussion about this here. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,11,2018-12-11 12:20:27,250.13,,,1,"b""b' Gitian builds for commit 5f23460c7e316fe7c944680f3feff07ebb867f70 (master): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url  Gitian builds for commit 5d233926dec4b3df52849cd15e4a86429adfd8bc (master and this pull): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,12,2018-12-11 12:20:27,64.08,,,1,"b'b\' FWIW I spun up a Windows Vista (SP2) VM and downloaded the v0.17.0.1 binary. It ""seems"" to run ok", although I didn\\\'t test extensively: However, Qt last listed Vista as a supported platform (deployment only) in [5.6 (LTS Mar 2019)]url  so I\\\'d be happy to suggest tagging this for 0.18.0, revert to bumping to (Windows 7), and updating any releaseversions text in this PR.  I\\\'d be pretty surprised if anyone is testing on Vista (at all), and given Qt has dropped support for it, I assume it\\\'s just a matter of time before it will stop working (possibly randomly), especially if we move to a newer Qt for release builds in 0.18.0.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,13,2018-12-11 12:20:27,134.62,,1,,"b""b' @ken2812221 Could you update this PR to include docs changes.  Is the change from your last force-push intended?  Related IRC discussion [here]url  (lines 284 ~335).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,14,2018-12-11 12:20:27,32.63,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,15,2018-12-11 12:20:27,36.82,,1,,"b""b' Gitian fails with:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,16,2018-12-11 12:20:27,3.35,,1,,"b'b"" @MarcoFalke Gitian build would still be failed now. It\'s still under investigation.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,17,2018-12-11 12:20:27,20.9,,1,,"b'b"" One other thought", if we\'re changing this," do we want to explicitly pass the same version to anything in depends? i.e at the moment ends up being built with  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,18,2018-12-11 12:20:27,1220.78,,1,,"b'b""  Not sure", that depends: does any of the dependencies make use of higher APIs when explicitly defined?  does matter at all if code is not using any of the APIs exposed by the newer windows version? E.g. does it cause use of more efficient APIs for existing things, without code changes?  If either is yes, it might make sense to equalize them. If not," there\'s no point in doing this for dependencies.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,19,2018-12-11 12:20:27,1116.98,,1,,"b""b' I found it be defined in many places. So I think it would be better to use  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,20,2018-12-11 12:20:27,70.38,,1,,"b'b\'  TBH as it\\\'s part of the code itself (the ""contract"" with Windows)", I personally prefer it to be defined in the code, not in the build system. (this helps analysis tools, other IDEs, MSVC, ...)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,21,2018-12-11 12:20:27,886.27,,,1,"b""b' Gitian builds for commit 9a4334443085970a42792db3528695585fe7053b (master): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-win32-]url  * [bitcoin-0.17.99-win32-setup-]url  * [bitcoin-0.17.99-win32.zip]url  * [bitcoin-0.17.99-win64-]url  * [bitcoin-0.17.99-win64-setup-]url  * [bitcoin-0.17.99-win64.zip]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url  Gitian builds for commit fd1a996c6795374be1eb7ca68da1761ca3a782c2 (master and this pull): * [bitcoin-0.17.99-aarch64-linux-gnu-]url  * [bitcoin-0.17.99-aarch64-linux-]url  * [bitcoin-0.17.99-arm-linux-gnueabihf-]url  * [bitcoin-0.17.99-arm-linux-]url  * [bitcoin-0.17.99-i686-pc-linux-gnu-]url  * [bitcoin-0.17.99-i686-pc-linux-]url  * [bitcoin-0.17.99-osx-]url  * [bitcoin-0.17.99-osx64]url  * [bitcoin-0.17.99-riscv64-linux-gnu-]url  * [bitcoin-0.17.99-riscv64-linux-]url  * [bitcoin-0.17.99-x86_64-linux-gnu-]url  * [bitcoin-0.17.99-x86_64-linux-]url  * [bitcoin-0.17.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,22,2018-12-11 12:20:27,573.8,,1,,"b'b"" (this helps analysis tools", other IDEs, MSVC," ...)  Mingw has defined _WIN32_WINNT=0x0502 by default. This would cause compile [issue]url  if we include windows.h first and define _WIN32_WINNT later. So I think it would be better to define it in build system. So it could be defined at first. We don\'t have to consider the include order.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,23,2018-12-11 12:20:27,277.27,,1,,"b'b"" @ken2812221 Sure"," but what I don\'t understand is how this differs from the previous setting. What would go wrong with a patch that changes the value to in the existing files and nothing else?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,24,2018-12-11 12:20:27,695.77,,1,,"b""b' Since #14881 was closed"," this PR shall not be necessary anymore. This change could cause compilation issue on Mingw or we would have to define in every file that we include windows related headers. I think it does not worth to do that.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,closed,2019-01-02 01:50:30,810.05,1,17,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,25,2018-12-11 12:20:27,9.32,,1,,"b""b' @ken2812221 #14881 has just been moved to #15052.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,reopened,2019-01-23 08:23:02,392.53,1,18,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,26,2018-12-11 12:20:27,411.03,1,,,"b""b' Do we need to worry about as well? url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,27,2018-12-11 12:20:27,3.13,,1,,"b""b' Looks like you could drop this code: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,28,2018-12-11 12:20:27,0.35,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,29,2018-12-11 12:20:27,337.9,,1,,"b""b' @theuni can you weigh in here please'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,30,2018-12-11 12:20:27,570.92,,1,,"b""b' This commit shows a few more settings that can be removed: url I used the method from #15231 to identify them: url  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,31,2018-12-11 12:20:27,21.55,,1,,"b""b' utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,32,2018-12-11 12:20:27,241.23,,1,,"b""b' re-utACK url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,33,2018-12-11 12:20:27,1155.17,1,,,b'b\' Concept ACK.  Agreed with @laanwj about the depends. I would think that qt would be the most likely to be problematic, but it appears to be handled sanely there:  Which made me curious about WINVER. [This msdn Article]url  doesn\\\'t specifically mention that they need to be the same value, but imo it\\\'s implied.  So, I think we should be setting both. Then there\\\'s a new snag. Leveldb sets but not (I thought this behavior was copied from their buildsystem, but see below): I tracked that down, and we actually added it ourselves in b1024662eafddd5560fbfbac29333e5e967ca0f8: So it should be safe to bump that to whatever.  I\\\'d suggest: Define WINVER and _WIN32_WINNT together Remove the WINVER define in Edit: Whoops," I see now that @Empact already [mentioned WINVER]url  IMO we should indeed ""worry about it""", if for no other reason than to save ourselves from hard-to-track-down compile failures in the future.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,34,2018-12-11 12:20:27,109.58,,1,,"b""b'   has already been defined as at [here]url  since mingw v1.0 released. Do we really have to re-define it explicitly?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,35,2018-12-11 12:20:27,216.43,,1,,"b'b"" @ken2812221 Ok", yes," I see that: I guess the msvc headers work similarly? utACK as long as that\'s the case.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,closed,2019-02-05 17:16:09,533.12,3,26,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,14922,closed,-,-,-,3,26,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,opened,2018-12-21 21:16:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,title,2018-12-21 21:16:24,00:00,,1,,"b""b' tests: Upgrade Travis OS to Xenial'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,body,2018-12-21 21:16:24,00:00,,1,,"b""b' Update base Travis OS to from  . Link to Travis Docs for Xenial: url As noted in the documentation", Docker version is also updated from to  Also includes:   If running Bitcoin config with LSan sanitizer," Allow ptrace in Docker run command   Increase timeout of feature_assumevalid test to fix flaky tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,closed,2018-12-21 21:16:47,0.38,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,reopened,2018-12-21 21:17:31,0.73,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,1,2018-12-21 21:16:24,36.1,,1,,"b'b"" This also updates the compilers and build toolchain", but that shouldn\'t matter on the host because everything is ran inside of Docker," correct?  url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,2,2018-12-21 21:16:24,352.57,,1,,"b'b"" I can\'t find a legitimate reason by looking through the Docker changelogs or documentation", but when running tests with sanitizer," Docker requires the flag set in v18.06. This didn\'t seem to be a problem with v17.06 See relevant issue here: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,closed,2018-12-24 04:27:05,429.57,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,reopened,2018-12-24 04:27:08,0.05,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,3,2018-12-21 21:16:24,152.15,,1,,"b""b' @gkrizek please stop opening and closing this :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,4,2018-12-21 21:16:24,437.78,1,,,"b""b' Sorry", @MeshCollider. The first time was an accident then the second was to trigger a new CI run. One of the tests seems flaky," but I\\xe2\\x80\\x99ll test that in my fork. :)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,5,2018-12-21 21:16:24,805.08,,1,,"b""b' @gkrizek To trigger a new build"," you can set up an account at travisand control the builds under: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,6,2018-12-21 21:16:24,876.55,,,1,"b'b"" Thanks @Empact. I was doing that earlier and it was passing in my fork. That\'s why I thought this was good to go"," but now a test is failing so I need to investigate that more. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,7,2018-12-21 21:16:24,269.27,,1,,"b'b"" This is complete and ready for review. I\'ve fixed some issues with tests and builds are passing consistently.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,8,2018-12-21 21:16:24,763.55,,1,,"b""b' This should probably be broken into two or three commits. i.e the Travis change ( the sanitizer change) and then the test timeout change in a separate commit.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,9,2018-12-21 21:16:24,220.53,,,1,"b""b' @fanquake Updated. I split it into 3 commits. Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,10,2018-12-21 21:16:24,1101.75,,1,,"b'b"" utACK b6f0db69a9c9cdf101371720351935121590d3aa. We don\'t use any features from the travis image other than docker"," so changing it shouldn\'t matter.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,11,2018-12-21 21:16:24,15.67,,,1,"b""b' Thanks @MarcoFalke. If anything we might get [slightly faster build times]url utACK b6f0db6 appveyor is the failure.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,12,2018-12-21 21:16:24,271.2,,1,,"b""b' It looks like this ran about 5 minutes faster than another PR I have open. So I haven\\xe2\\x80\\x99t done testing to compare speeds"," but it does seem faster. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,13,2018-12-21 21:16:24,0.77,,,1,"b""b' Oh nice. Thanks for the speedup'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,closed,2018-12-29 13:39:56,552.8,1,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15022,closed,-,-,-,1,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,opened,2018-12-27 19:29:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,title,2018-12-27 19:29:06,00:00,,1,,"b""b' [test] Apply maximal flags to tx_valid tests and minimal flags to tx_invalid tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,body,2018-12-27 19:29:06,00:00,,1,,b'b\' The first commit inverts the meaning of verifyFlags for tx_valid tests, as flags being excluded. All flags are applied by default, except those found in verifyFlags. This makes sure that a new or existing flag won\\\'t invalidate a tx by accident.  The second commit reduces the number of validation flags used for tx_invalid tests, to a minimally required set to fail a test. This makes sure that a tx failed due to the tested flags," not unexpected effects of some other flags. It also uses ""BADTX"" to indicate tests not passing CheckTransaction()", vs. those failing script execution.  (If a test is expected to fail due to multiple independent flags, multiple tests should be used)  The third commit verifies that the flags excluded in tx_valid and included in tx_invalid are indeed the minimal set. In tx_valid, it adds back the excluded flags individually and expects it to fail. In tx_invalid, it removes the included flags individually and expects it to pass.  This process helped me to identify and fix some buggy tests: Remove unnecessary OP_1 at the end of most OP_CLTV and OP_CSV tx_valid tests, so there is no need to exclude CLEANSTACK An OP_CSV tx_valid test missed an OP_ADD, and is added back 2 witness tests were found with empty vout, so they failed due to CheckTransaction(), not script tests. Corrected by filling in proper vout.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,1,2018-12-27 19:29:06,987.02,,1,,"b'b""  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15921]url  (Tidy up ValidationState interface by jnewbery)* [#15074]url  (Improve CScriptNum error reporting by jl2012)* [#14696]url  (qa: Add explicit references to related CVE\'s in p2p_invalid_block test. by lucash-dev)* [#13360]url  ([Policy] Reject SIGHASH_SINGLE with output out of bound by jl2012) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,2,2018-12-27 19:29:06,477.07,,1,,"b""b' Added a commit to verify all validation flags are backward compatible (softfork)"," like #10699'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,3,2018-12-27 19:29:06,1409.98,,1,,"b""b' Added a commit to do the same in script_tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,4,2018-12-27 19:29:06,1146.18,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,5,2018-12-27 19:29:06,117.18,,1,,"b""b' @jl2012 Could you rebase this PR on and push to have Travis test the rebased version? I think there might be some UBSan runtime errors that needs to be addressed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,closed,2019-05-07 16:33:35,1264.48,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,reopened,2019-05-07 16:33:37,0.03,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15045,open,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,opened,2019-01-02 17:00:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,title,2019-01-02 17:00:26,00:00,,1,,"b""b' Unexplained 1 million block height in mempool code'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,body,2019-01-02 17:00:26,00:00,,1,,"b""b' Where is this magic number from?  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,1,2019-01-02 17:00:26,425.95,,1,,"b""b' Looks like it was introduced by @TheBlueMatt in #5267.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,2,2019-01-02 17:00:26,1167.93,,1,,"b""b' A block far far away?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,3,2019-01-02 17:00:26,6.0,,1,,"b'b"" It\'s not for testnet. On Mon", Jan 28,2019," 7:35 PM Jo\\xc3\\xa3o Barbosa <notifications@ wrote:>""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,4,2019-01-02 17:00:26,1156.57,,1,,"b'b"" I\'m having a really difficult time convincing myself this behavior could not lead to incorrect results. But this can only be hit when is non-0"," aka by default so it\'s not used in production.  I think here the is the correct height since that is where this duplicate mempool is actually at.  I\'ll think a little more how a false assertion or validation failure could hit if unchanged.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,closed,2019-04-06 16:10:50,1390.4,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,reopened,2019-04-06 16:10:58,0.13,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,5,2019-01-02 17:00:26,62.67,,1,,b'b\' I think that the height currently specified as a magic number is never accessed:  In  ," the ancestor tx of the mempool are ""spent"" in the function (adding new UTXOs to the local cache mempoolDuplicate)", providing the inputs for subsequent spending of the dependent tx, and thereby allowing to check that all tx in the mempool can be mined in some order (no orphans). While all ancestors need to be added to mempoolDuplicate, the height at which they are added is not checked in  , just their  .  I did some testing with a height of 0 instead of 1E6 and didn\\\'t see any effect. So I don\\\'t see how the current implementation could lead to a bug, though I agree that using would make more sense and might prevent future bugs.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,6,2019-01-02 17:00:26,4.4,,1,,"b""b' Lines up with my current thinking.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,closed,2019-05-29 11:08:45,1137.78,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15080,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,opened,2019-01-03 23:09:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,title,2019-01-03 23:09:29,00:00,,1,,"b""b' 0.17: Backport for #15085'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,body,2019-01-03 23:09:29,00:00,,1,,"b""b' Changes the application name to when instead of  Fixes #15079'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,1,2019-01-03 23:09:29,7.55,,1,,"b'b"" You\'ll need to wait for #15085 to be merged first. Then you can create a proper backport commit", (see [this script]url  for help) which has the correct  ," info in the commit body. See #15002 for an example.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,2,2019-01-03 23:09:29,2.88,,,1,"b""b' Oh okay"," thank you'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,closed,2019-01-03 23:19:55,10.43,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,3,2019-01-03 23:09:29,2.32,,1,,"b'b""  @fanquake didn\'t wait in #15002 :trollface: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,4,2019-01-03 23:09:29,3.67,,1,,"b""b' @benthecarman You can still use this PR though. You should be able to force push to the existing branch once 15085 is merged \\xf0\\x9f\\x91\\x8d.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,reopened,2019-01-05 13:02:57,823.03,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,5,2019-01-03 23:09:29,817.53,,1,,"b""b' @benthecarman Could you now turn this into a proper backporting commit?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,6,2019-01-03 23:09:29,169.7,,1,,"b""b' @benthecarman still not right.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,7,2019-01-03 23:09:29,1.83,,1,,"b""b' There is a script to do that: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,8,2019-01-03 23:09:29,1303.6,,1,,"b'b"" I don\'t think this warrants a separate backport PR. I think it\'s better to group these small changes"," and leave separate backport PR for difficult changes that are significantly different between branches.  That said utACK 59dd855d2de77cd72a2b3190a825783ff3627e17 for this time. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,closed,2019-01-07 13:43:15,40.3,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15094,closed,-,-,-,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,opened,2019-01-14 09:45:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,title,2019-01-14 09:45:15,00:00,,1,,"b""b' Optimization improvements'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,body,2019-01-14 09:45:15,00:00,,1,,"b'b"" These changes provide some improvements that potentially can to speed up the work of bitcoind. Cause i dont have enough resources i haven\'t done any tests", so i dont have any results which can approve that these changes can  increase the speed of work.  **SetTip method** The main idea of this change is if we want to add a new block to our vector and this block can to join to the active chain, we just add it and dont rebuild the whole vector.  **GetAncestor method** If the previous block contains in our active chain in the vector," we can obtain the needed block from the vector and dont have to walk throught the references. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,1,2019-01-14 09:45:15,797.67,,1,,"b'b\' Note travis error ""A new circular dependency in the form of ""chain -> validation -> chain"" appears to have been introduced.""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,2,2019-01-14 09:45:15,784.52,,,1,"b""b' I have fixed these places. @practicalswift"," thanks for review. And what about the GetAncestor method. As i understand i cant put locks there and without that we have unsafe code. So it will be preferable to remove these lines ?   But i think that to get the ancestor from the active chain if we can is sensible idea.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,3,2019-01-14 09:45:15,91.62,,1,,"b'b"" NACKThe main idea of this change is if we want to add a new block to our vector and this block can to join to the active chain", we just add it and dont rebuild the whole vector.  The existing code already does this without rebuilding the whole vector -after the tip is added, the loop will exit.  Also @promag is correct that GetAncestor() should not be accessing chainActive.  Some advice for optimization PRs: If you\'re not sure what the performance change of small changes like this might be, you can write a microbenchmark, see  .  In this case, I imagine that would show no improvement in the performance. In general please keep in mind that contributors have been optimizing the code for years, so it\'s helpful to take a comprehensive look at what\'s happening as a whole before deciding to try optimizing some small part.  Often we get contributions that would optimize a function that is rarely invoked, or not part of any critical path," which typically aren\'t worth merging if they make the code more complex. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,closed,2019-01-15 14:21:03,275.8,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,reopened,2019-01-15 14:21:18,0.25,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,4,2019-01-14 09:45:15,50.02,,,1,"b""b' @sdaftuar"," thank you for your comment. Maybe i will close this pull request. Thank you everyone for discussion i will keep in mind all remarks in future work.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,closed,2019-01-15 14:29:10,7.87,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15160,closed,-,-,-,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,opened,2019-01-18 21:16:18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,title,2019-01-18 21:16:18,00:00,1,,,"b""b' Immediately disconnect on invalid net message checksum'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,body,2019-01-18 21:16:18,00:00,1,,,"b""b' Currently"," messages with invalid checksums will be partially tolerated (skipped). The checksum check happens after deserialising all messages in the current read buffer.  This PR moves the checksum check to the  layer (where it probably belongs) and rejects messages with invalid checksums immediately and disconnects the peer.  This PR separates the transport from the processing layer and helps protocol upgrades like BIP151.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,1,2019-01-18 21:16:18,80.75,1,,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#14046]url  (net: Refactor message parsing (CNetMessage), adds flexibility by jonasschnelli)* [#14032]url  (Add p2p layer encryption with  by jonasschnelli) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,2,2019-01-18 21:16:18,1072.27,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,3,2019-01-18 21:16:18,73.05,1,,,"b'b"" I don\'t the deferred processing matters-the checkvalue is protecting against network corruption not malicious input or anything like that", but I also don\'t think that doing it eagerly is harmful either.  One consequence of this is that it moves more processing into the networking thread, rather than leaving it in the message processing thread. As a result it may result in lower performance in cases where hashing was a bottleneck," but I\'m doubtful the slowdown will matter much anywhere.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,4,2019-01-18 21:16:18,3.9,1,,,"b'b"" @gmaxwell It actually doesn\'t change much"," as the message hash is being computed on the fly as the message packets come in. The call only does the SHA256 finalization. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,5,2019-01-18 21:16:18,20.9,1,,,"b""b' @sipa I was aware"," but for many messages (e.g. small ones) the finalization is the hashing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,6,2019-01-18 21:16:18,210.82,,1,,"b'b\' ""The checksum check happens after deserialising all messages in the current read buffer."" <-No", this has not been the case since #9045. We hash as we receive data, only the *finalization* (ie last compression round and second hash) happen after we\\\'ve received the full message. Don\\\'t really have a strong feeling about this, it does move a tiny big of CPU cost over to the net thread from net_processing, which is nice, though.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,7,2019-01-18 21:16:18,513.28,,1,,"b""b' @TheBlueMatt: thanks for the clarification.  The intention of this PR is mainly to move the transportation protocol out of the message processing... and slowly moves towards a that is transport logic agnostic. With something like BIP150"," we will have a different checksum (Poly1305 in the case of BIP151) and a different header. I think should at one point only carry the payload and the command (and eventually the recv. time). The serialisation as well as optional  plus the checksum should happen outside of  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,8,2019-01-18 21:16:18,572.32,,,1,"b""b' Needs rebase (for sanity checking against the merged 36aeb43c01d250d99cfffdfbb70d2420b70054cc)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,9,2019-01-18 21:16:18,241.68,,1,,"b""b' Rebased (required for now merged #15246). Adapted test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,10,2019-01-18 21:16:18,875.65,,1,,"b""b'   test passes on macOS 10.14.3 for the newly rebased e7ab7d7. It [failed]url  on one of the Travis machines though.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,11,2019-01-18 21:16:18,807.97,1,,,"b'b""  Indeed. I think it is because of the immediate termination of the connection which somehow confuses  \'s getdata. I\'ll investigate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,closed,2019-02-03 04:49:59,453.68,7,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,reopened,2019-02-03 04:50:05,0.1,7,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,12,2019-01-18 21:16:18,307.58,1,,,"b'b"" Should we also worry about this breaking networking for nodes behind idiot firewalls that corrupt certain strings? We know they exist because they occasionally cause nodes to be unable to fetch certain blocks and other such sillyness.  Right now if the stupidity that triggers them is in an ephemeral message (like a ping", inv, or an addr message) it\'ll just get dropped, logged," and move on.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,13,2019-01-18 21:16:18,348.68,1,,,"b""b' I always wondered. Would the checksum could just be skipped at all?  If I understand what is being said here"," the only reason for having the checksum is so people have a clearer message in logs if the message get corrupted by firewall?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,14,2019-01-18 21:16:18,1208.92,1,,,"b""b' @NicolasDorier  It could be but it would generally be a bad idea", because then nodes would operate with silent corruption in some cases. In particular, a common failure mode (relatively speaking) is for firewalls rewrite addresses and port numbers, corrupting version handshakes and addr messages.  It was more of a concern before we started relaxing banning behaviour, but even without that, no one should have to waste countless hours troubleshooting a really dumb issue like a non-transparent firewall.  Doubly so because protocol conformance requires encoding it anyways.  (plus, there is simply no reason to do so, the time they take is essentially negligible compared to other activities," and if we wanted to reduce it the authentication in the encrypted transport is faster (and thoroughly not optional)...)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15206,open,-,-,-,10,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,opened,2019-01-27 05:31:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,title,2019-01-27 05:31:41,00:00,,1,,"b""b' [Windows"," MinGW] error windres -f invalid option'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,body,2019-01-27 05:31:41,00:00,1,,,"b""b' having the hardest time figuring out this issue for some reason it seems like its trying to pass -f option to windres during the check i dont see where -f is being passed to windres at all"," i know i know i could just build it on linux but i am trying to bring back an old project(easywinbuilder) and this seems to be my last issue im really just stuck with no solution... ![image]url  []url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,1,2019-01-27 05:31:41,16.0,,1,,"b""b' config log is big due to me having so many debug flags trying to pinpoint the issue as my past errors have really been about something else than what the error stated and i had to dig to fix past stuff ive had issues  im thinking this may be the case here to  _Sent from my Galaxy Note5 using [FastHub]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,2,2019-01-27 05:31:41,705.7,,1,,"b""b' incase any wonders how im compiling dependencies and such here is the project im working on url _Sent from my Galaxy Note5 using [FastHub]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,3,2019-01-27 05:31:41,402.72,,1,,"b'b"" Problems with your custom build system do not warrant an issue here. In any case"," I\'d recommend using the [depends system]url  instead.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,closed,2019-01-28 00:16:06,1124.42,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,4,2019-01-27 05:31:41,160.92,,1,,"b""b' that just fails for me on windows and MinGW'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,5,2019-01-27 05:31:41,6.38,,1,,"b""b' @MSFTserver if it\\xe2\\x80\\x99s failing"," can you post more information? You can also use it from inside the Windows Subsystem for Linux.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,6,2019-01-27 05:31:41,0.03,,1,,"b""b' also not sure what you mean by custom build  the same type of question everyone else asks about windows compiling so why not just close every issue about compiling on windows if you consider windows a custom build system'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,7,2019-01-27 05:31:41,6.13,,,1,"b""b' @fanquake it really doesnt have an error since im on windows the depends system only detects builders for linux and mac"," i tried tricking the system into building depends by specifying a linux BUILD with mingw HOST that somewhat worked but alot of issues calling other linux based that should work since im on mingw but thats besides this main issue im having where it checks for windres in the file with test -f commands i removed all of them that point towards windres where it was failing and the error still returns yet it isnt even in my code anymore im truely baffled at this sentient compiling lol  _Sent from my Galaxy Note5 using [FastHub]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,8,2019-01-27 05:31:41,1.68,,,1,"b""b' ![img]url example of this sentient compiling using commands that dont exist", completely fresh branch woth changes only provided to the make files," so it wasnt because i ran make or configure before changes _Sent from my Galaxy Note5 using [FastHub]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,9,2019-01-27 05:31:41,817.98,,1,,"b""b' could you reopen this issue...@fanquake you honestly didnt even look at my issue and just assumed some shit and closed this issue"," and can you clarify what you mean by custom build when your vanilla deps fail with your make file provided?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,10,2019-01-27 05:31:41,5.17,,1,,"b""b' We only support builds on windows via * url  (native", for development only) * url  (cross-compilation," for releases)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,11,2019-01-27 05:31:41,9.47,,,1,"b""b' ![img]url  im working on this(windows MinGW with POSIX) and just wanted a little help '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,12,2019-01-27 05:31:41,76.8,,,1,"b'b"" Thanks for working on this", though I presume you are the first one (or one of very few to do it)," so don\'t expect help right away. Going to reopen for now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,reopened,2019-01-28 18:20:40,1084.57,1,9,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,13,2019-01-27 05:31:41,22.37,,1,,"b""b' thanks", yea i dont expect help fast, but its worth a try where it seems the majority of you have alot of experience compiling ive tried asking around in other programmer chats and they are just dumbfounded about my error, spent atleast a month on this issue now and im just resorting to posting here for any solution, that other link may have confused fanquake, it really just launches the stuff you setup for making," all my depends seem to be in order configure doesnt fail i can see all the relevant paths compared them to some others install on linux just this one issue not sure if there some for loop that also checks all the depends because ive deleted that one on line 11227 but says its still erroring there anyway thanks again  _Sent from my Galaxy Note5 using [FastHub]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15271,open,-,-,-,1,10,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,opened,2019-02-04 14:59:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,title,2019-02-04 14:59:31,00:00,1,,,"b""b' gui: Introduce bilingual GUI error messages'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,body,2019-02-04 14:59:31,00:00,1,,,"b'b"" This PR: makes GUI error messages bilingual (English + user\'s native language) insures that only non-translated messages are written to the debug log file (that is not the case on master).  ![screenshot from 2019-02-04 16-49-16]url Note for reviewers: is out of this PR scope.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,1,2019-02-04 14:59:31,41.85,,1,,"b""b' This effectively removes all the translations as there is no to pick up anymore by gettext.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,2,2019-02-04 14:59:31,5.25,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15491]url  (wallet: Improve log output for errors during load by gwillen)* [#15487]url  ([WIP] descriptor based wallet by Sjors)* [#15329]url  (Fix InitError() and InitWarning() content by hebasto)* [#15288]url  (Remove wallet -* [#15118]url  (Refactor block file logic by jimpo)* [#15112]url  (build: Optionally enable -Wzero-as-null-pointer-constant by Empact)* [#13582]url  (Extract AppInitLoadBlockIndex from AppInitMain by Empact) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,3,2019-02-04 14:59:31,4.63,,1,,"b""b' This would be much easier to review if was named  ...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,4,2019-02-04 14:59:31,61.12,1,,,"b""b' @MarcoFalke  @laanwj  Fixed.  The main goal of this PR is to avoid printing localized messages to the debug log file and  . Bilingual GUI messages come for free.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,5,2019-02-04 14:59:31,2.87,,1,,"b""b' @luke-jr  Rationale: can accept a format string as the first argument.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,closed,2019-02-04 16:59:22,119.85,3,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,6,2019-02-04 14:59:31,143.93,1,,,"b'b"" I haven\'t looked at the code but printing error message always (additionally) in english seems to be a clever idea (especially with the faced complexity and immaturity of the UX).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,reopened,2019-02-04 22:52:22,353.0,4,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,7,2019-02-04 14:59:31,233.53,,1,,"b""b' @MarcoFalke @laanwj it works with gettext now.  @luke-jr your comment has been addressed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,8,2019-02-04 14:59:31,8.1,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,9,2019-02-04 14:59:31,1192.93,,,1,"b""b' @MarcoFalke @laanwj  Thank you for your reviews. All your comments have been addressed. Would you mind re-reviewing?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,10,2019-02-04 14:59:31,94.8,,1,,"b'b"" If the point is to make it easier to google error messages"," wouldn\'t it be more efficient to add some kind of error code to the output? E.g. the example from the screenshot could look like this in the English version:   and like this in the German version:   This would also help searchability if the English error text changes between versions. Only drawback I suppose is that somebody would have to come up with all the error codes :-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,11,2019-02-04 14:59:31,1427.4,,,1,"b'b"" I like the idea (so Concept ACK)", no thoughts on the implementation.  @flack  Trying to assign numerical error codes in the face of parallel development seems tricky... but not impossible.  The dual languages also helps in the common case that the user also reads English... since the translation may not be good or may not be clear (esp. even a native speaker of another language may have only seen various technical terms but a translator managed to use a rarely used word in the translated language). Error numbers don\'t have this benefit," so the dual language output would be useful independently of error numbers.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,12,2019-02-04 14:59:31,19.75,1,,,b'b\' @gmaxwell yes, it would require some coordination. But I suppose a linter can take care of most of the problems," esp. since the numbers don\\\'t have to be consecutive or follow any kind of logic really.  It\\\'s true what you say about wonky translations. ""K\\xc3\\xbcrzungsmodus"" from the screenshot is actually a case in point. It literally means ""shortening mode"". No way I would have guessed that this refers to pruning (or at least not on the first try). But otoh", if users have the UI set to e.g. German, then all they see are German terms," i.e. there\\\'s probably a checkbox labeled ""K\\xc3\\xbcrzungsmodus"" somewhere and they might remember that they clicked that. Throwing the word ""pruning"" into the mix might just add to the confusion at this point"," exactly because the meaning is different (""I selected shortening mode and now it\\\'s complaining about \\\'pruning\\\' ?!?""). Anyhow", I get that my suggestion cannot be easily implemented in the short term," but how about making it a bit more clear that the two messages are actually referring to the same thing (instead of being one translated error and one untranslated error)? E.g. something like:   ""Original-Meldung"" means ""original message"". Could also say ""untranslated message"" or something.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,13,2019-02-04 14:59:31,814.95,1,,,"b'b""  I think we need to be careful here also to respect the translators. They are not developers and will not understand internal technical details in error messages. If an error message has more technical terms in it than the standard bitcoin and GUI ones such as window", wallet, block," transaction \\xe2\\x80\\xa6. then it shouldn\'t be translated.  Translators will get pissed at me for this or substitute some nonsense word. In both cases no one is better off.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,14,2019-02-04 14:59:31,13.6,1,,,b'b\'  Still," you have to enable the user to make the connection between the error message and what they might have selected in the GUI settings. So e.g. if you don\\\'t translate ""prune"" in the error message", then you also shouldn\\\'t translate it in the rest of the GUI (or at least show the English term in brackets)\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,15,2019-02-04 14:59:31,24.65,1,,,"b'b\' *prune* is a grey area I guess. It doesn\\\'t go with the obvious bitcoin or computer words but it also isn\\\'t something like ""glibc sanity check failed"" which makes *no* sense to users nor translators whatsoever.  So to be clear Im not against showing error messages in both languages", but this shouldn\\\'t a reason to translate things that would otherwise not be because the English message can be used to work around a terrible translation.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,16,2019-02-04 14:59:31,679.97,,1,,"b""b' Rebased.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,17,2019-02-04 14:59:31,9.03,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,closed,2019-03-09 15:42:41,1010.32,8,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15340,closed,-,-,-,8,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,opened,2019-02-06 16:28:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,title,2019-02-06 16:28:37,00:00,,1,,"b""b'   should not be used by both node and wallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,body,2019-02-06 16:28:37,00:00,,1,,"b'b"" EDITED 2019-02-08  is a global variable", used by both the raw transaction and wallet RPCs. It\'s set from  .  ~listed in the global help text in , but is only set in  . If the wallet is disabled," then is ignored and the default is used.~  ~This behaviour has existed since the mempool was changed to limit acceptance based on in url ~  ~Short-term fix is to move the handling to in .~ EDIT: initiation bug fixed in #15357 I don\'t think we should share this setting between the node and wallet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,1,2019-02-06 16:28:37,0.12,,1,,"b""b' @MarcoFalke '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,2,2019-02-06 16:28:37,30.85,,1,,"b'b""  The wallet should still be aware of what the value is", which is why I made it shared between the node and wallet in the first place. For that to work you\'d have to parse it before parsing the wallet specific max fee. So moving it to as you suggest is probably a requirement for that. ~ is also the place where is happening," so ACK from me.~""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,3,2019-02-06 16:28:37,345.6,,1,,"b'b\'  Right this command line option was added in aa279d613152e87ea25edfdf76c86779c0632f18 to mean ""I don\\\'t want my wallet to create a transaction that has a fee higher than this"". After a few refactors", the same was recycled for use by the raw transaction RPCs. My point is that there should be a separation should be used to control wallet behaviour, and something else (probably an RPC parameter) should be used to control the raw transaction RPC behaviour.  ~We both agree that the minimal fix (move to ) is what we should do now.~\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,4,2019-02-06 16:28:37,17.38,,,1,b'b\' Creating a plethora of overlapping fee configuration options is not good for users.  The result from doing that is that users set the wrong ones then are surprised when they don\\\'t get the behaviour they\\\'re expecting.  Maxtxfee shouldn\\\'t be ignored when the wallet is disabled, for sure," but what benefit to users of the software is there in splitting  ""fee level above which we treat as something has gone wrong""  between the raw transactions interface and the wallet? I don\\\'t believe we\\\'ve ever gotten a request ""I want to set this one to X and the other one to Y"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,5,2019-02-06 16:28:37,914.73,1,,,b'b\'  I agree that having multiple config options would be confusing, which is why I suggested an RPC parameter for the and RPCs, which are the only places that is used outside the wallet. In fact, both of those RPCs already have a parameter which submits the transaction to the mempool without a parameter.  My reasoning is that those RPCs are lower-level than wallet operations," and should be separate from the wallet. The existing behaviour doesn\\\'t make really make sense to me:  currently means ""would my wallet be able to submit this to the mempool?"" rather than ""would this be accepted to the mempool over P2P?""", unless is set to true," in which case it means ""would this be accepted to the mempool over P2P?"". currently means ""broadcast this transaction if the wallet would submit it to the mempool"" rather than ""broadcast this transaction""", unless is set to true," in which case it means ""broadcast this transaction"".\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,closed,2019-02-08 19:44:59,196.37,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,reopened,2019-02-08 19:45:26,0.45,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,6,2019-02-06 16:28:37,328.48,,1,,"b'b"" #15357 doesn\'t fully resolve the issue here. Reopening.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,7,2019-02-06 16:28:37,56.92,1,,,"b'b\' I don\\\'t think there is anything left to do here after moving the parsing back to the node ( ).  Re (about the implicit use in the wallet): The wallet should never create transactions that have such a high fee that this test could fail (at least in the default setting) and currently this serves as a ""last-mile"" belt-and-suspenders check for the wallet.  Re (about the implicit use in the rpc interface): I don\\\'t object changing the rpcs to explicitly accept a fee (instead of the bool)", but that seems like it should be handled in a separate feature-request.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,8,2019-02-06 16:28:37,1232.03,,1,,"b'b"" Removed milestone", but I haven\'t received a reply either," so I intend to close this""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,9,2019-02-06 16:28:37,9.48,,1,,"b""b' This is partially fixed by #13541. If the same change is made to then could be removed from the node entirely and moved to the wallet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,10,2019-02-06 16:28:37,863.8,,1,,"b""b' I ~plan to do~ did the same change to ~later today~.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,closed,2019-04-27 13:30:43,1065.28,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15355,closed,-,-,-,2,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,opened,2019-02-08 08:41:35,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,title,2019-02-08 08:41:35,00:00,,1,,"b'b"" Why can\'t I append an UTXO unseen in the mempool in a replacement transaction?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,body,2019-02-08 08:41:35,00:00,1,,,b'b\' <!-This issue tracker is only for technical issues related to Bitcoin Core.  General bitcoin questions  support requests are best directed to the Bitcoin StackExchange at url For reporting security issues," please read instructions at url If the node is ""stuck"" during sync or giving ""block checksum mismatch"" errors", please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! - ### [Setup] I was trying the opt-in rbf feature by preparing the follow setup:    Both TX1 and TX2 have their input already marked as replaceable (I used  :  ),  ### [Expected Behaviour] I expect the second transaction will replace the first one. ### [Actual Behaviour] bitcoind sendrawtransaciton CLI returns error when trying to broadcast the second transaction:   ### [Version]  bitcoind: 0.17.0.1   ### [Investigation]  After some investigation, I found that in the code url  It checks that the vins have to be one of the previous vins used in the pool (If I understand the comment correctly).  Is this an expected behaviour? Because with this design, reusing the above setup, since the first setup I have already used up all the amount in U1 and U2, 2.9999BTC + 0.0001BTC fee. If I want to increase the fee, I must include another UTXO or I have to reduce the amount to spent in output to leave space for the relay fee. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,1,2019-02-08 08:41:35,653.08,,1,,"b""b' Full comment:  url So", in your case," the new input UB3 needs to be confirmed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,2,2019-02-08 08:41:35,507.38,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,closed,2019-02-12 04:02:04,1160.48,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,3,2019-02-08 08:41:35,14.03,,1,,"b""b' @promag May I know a bit more about the intention of making sure only confirmed UTXO are included in replacement transaction? I am trying to understand what it means for the term  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,reopened,2019-02-12 04:16:06,14.03,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,4,2019-02-08 08:41:35,570.6,,1,,"b""b' If U3 was unconfirmed"," you could use another low rate input for that one again. That would fill up the mempool (which is actually only maintained by local node rules) and this can repeat as long as you like to do so. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,5,2019-02-08 08:41:35,1150.93,,1,,"b""b' @yuhlau see b272ecfdb39f976dd61e35bacb22047da02b3416 in #6871.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15369,open,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,opened,2019-02-14 10:16:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,title,2019-02-14 10:16:15,00:00,,1,,"b""b' [build] AppVeyor: clean cache when build configuration changes'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,body,2019-02-14 10:16:15,00:00,,1,,"b'b"" AppVeyor builds started starting failing on master after I cleaned the cache in #15382. In addition"," it appeared that a new dependency (boost-process) wasn\'t getting added in that PR without at least cleaning the vcpkg cache.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,1,2019-02-14 10:16:15,0.35,1,,,"b'b"" In general it seems unhealthy that independent PRs can mess with AppVeyor cache. Not sure how Travis handles that; maybe cache can be made read-only for PR\'s and only allow master to write to it?  cc @ken2812221""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,2,2019-02-14 10:16:15,116.87,,1,,"b""b' This is due to a merge conflict between #13926 and #14372. See #15407'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,3,2019-02-14 10:16:15,9.45,,,1,"b'b"" @ken2812221 thanks! Let\'s see if your PR makes the error go away.  Do you think the cache rules in this PR make sense?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,4,2019-02-14 10:16:15,0.48,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,closed,2019-02-14 14:05:35,229.33,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,reopened,2019-02-14 14:05:37,0.03,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,5,2019-02-14 10:16:15,1267.17,,1,,"b""b' utACK 88a91e2c9d9ec1bee54d2676a74040e3f7665a2d'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,closed,2019-02-15 12:20:19,1334.7,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15405,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,opened,2019-02-15 13:55:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,title,2019-02-15 13:55:55,00:00,,1,,"b""b' snap: Bitcoin Core + Ubuntu 19 wayland-egl'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,body,2019-02-15 13:55:55,00:00,1,,,b'b\' **What behavior did you expect?** Open Bitcoin Core  **What was the actual behavior (provide screenshots if the issue is GUI-related)?** Opening Bitcoin Core generates error, through the  command," the error it displays is _This application failed to start because it could not find or load the Qt platform plugin ""wayland-egl""._ _Available platform plugins are: eglfs", linuxfb, minimal, minimalegl, offscreen, xcb._ _Reinstalling the application may fix this problem._  I tried to reinstall and it did not work  **What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)?**  Snap 0.17.0.1 Stable Beta Edge  **For the GUI-related issue on Linux provide names and versions of a distro, a desktop environment and a graphical shell (if relevant).**  Ubuntu 19 Gnome Beta 3.31.90 \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,closed,2019-02-20 01:54:44,718.82,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,reopened,2019-03-03 02:04:28,9.73,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,1,2019-02-15 13:55:55,162.9,,1,,"b""b' The package was removed. Please backup your wallet and upgrade to the package.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,2,2019-02-15 13:55:55,177.17,,,1,"b""b' Let me know if this is still an issue and what the steps to reproduce are  ![screenshot from 2019-03-04 14-34-39]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,3,2019-02-15 13:55:55,1218.87,,1,,"b'b\' In terminal  ""bitcoin-"" This application failed to start because it could not find or load the Qt platform plugin ""wayland-egl"" in """".  Available platform plugins are: xcb.  Reinstalling the application may fix this problem.  I reinstalled through the snap\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,4,2019-02-15 13:55:55,75.75,,1,,"b""b' Does this also happen on a vanilla Ubuntu 19.04? It worked for me (see screenshot above)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,5,2019-02-15 13:55:55,348.0,,1,,"b""b' On the login screen", if I am selected in the regular user, it works," but if I select Ubuntu with wayland it is that the program does not work for me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,6,2019-02-15 13:55:55,1033.92,,1,,"b""b' Thx.  For now"," you can work around this by  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,7,2019-02-15 13:55:55,113.15,,1,,"b""b' This has been fixed upstream'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,closed,2019-03-09 18:05:40,961.2,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15418,closed,-,-,-,1,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,opened,2019-02-19 20:37:25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,title,2019-02-19 20:37:25,00:00,,1,,"b""b' [0.17] backport #14409'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,body,2019-02-19 20:37:25,00:00,,1,,"b""b' Backports #14409 to the 0.17 branch.  #14409 makes the blocks directory net-specific by definition.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,1,2019-02-19 20:37:25,320.25,,1,,"b""b' @hebasto This is missing the and info for each commit. See the []url  script.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,2,2019-02-19 20:37:25,1048.57,,,1,"b""b' @fanquake  Thank you. Fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,3,2019-02-19 20:37:25,643.9,,1,,"b'b\' @fanquake ~~Is there a way to fix ""The job exceeded the maximum time limit for jobs"," and has been terminated."" error in [Travis job]url ~~\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,4,2019-02-19 20:37:25,1183.33,,1,,"b""b' Is is necessary to be backported? It seems like a breaking change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,5,2019-02-19 20:37:25,877.98,,1,,"b'b"" I don\'t think this is a breaking change. Otherwise this was missed in the original review""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,closed,2019-04-21 21:47:52,70.45,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,reopened,2019-04-21 21:53:12,5.33,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15445,open,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,opened,2019-03-06 17:29:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,title,2019-03-06 17:29:23,00:00,,1,,"b""b' gitian: Improve error handling'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,body,2019-03-06 17:29:23,00:00,,1,,"b""b' Improve error handling in gitian builds:  Set fail-on-error and pipefail flag", this causes a command to fail when either of the pipe stages fails, not only when the last of the stages fails, so this improves error detection. Also use instead of  , because will not propagate errors in the executed command," but will.  This will avoid some issues like #15541 where non-determinism is silently introduced due to errors caused by environment conditions (such as lack of disk space in that case).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,1,2019-03-06 17:29:23,53.92,,1,,"b""b' Concept ACK.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,2,2019-03-06 17:29:23,169.33,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,3,2019-03-06 17:29:23,184.5,,1,,"b'b"" url  : Independently of this we should probably increase the default LXC base VM image size (here url  )"," or make the descriptor clean up the intermediate result after each host build. I think I have a slight preference for the latter as it doesn\'t require everyone to regenerate\\xe2\\x80\\x94or resize\\xe2\\x80\\x94their base images.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,4,2019-03-06 17:29:23,409.68,,1,,"b""b' Related: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,5,2019-03-06 17:29:23,323.15,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15554]url  (docs: binary tar improvement by cisba) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,closed,2019-03-07 16:18:04,1368.68,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,reopened,2019-03-07 16:20:41,2.62,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,6,2019-03-06 17:29:23,619.28,,,1,"b""b' Gitian builds for commit d211edb34982aedbcd514ba3723396f2369ff286 (master): * [bitcoin-0.18.99-aarch64-linux-gnu-]url  * [bitcoin-0.18.99-aarch64-linux-]url  * [bitcoin-0.18.99-arm-linux-gnueabihf-]url  * [bitcoin-0.18.99-arm-linux-]url  * [bitcoin-0.18.99-i686-pc-linux-gnu-]url  * [bitcoin-0.18.99-i686-pc-linux-]url  * [bitcoin-0.18.99-osx-]url  * [bitcoin-0.18.99-osx64]url  * [bitcoin-0.18.99-riscv64-linux-gnu-]url  * [bitcoin-0.18.99-riscv64-linux-]url  * [bitcoin-0.18.99-win32-]url  * [bitcoin-0.18.99-win32-setup-]url  * [bitcoin-0.18.99-win32.zip]url  * [bitcoin-0.18.99-win64-]url  * [bitcoin-0.18.99-win64-setup-]url  * [bitcoin-0.18.99-win64.zip]url  * [bitcoin-0.18.99-x86_64-linux-gnu-]url  * [bitcoin-0.18.99-x86_64-linux-]url  * [bitcoin-0.18.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url  Gitian builds for commit 6eb1a44d8d316c144d96924ca5c55dac35bc0ca3 (master and this pull): * [bitcoin-0.18.99-aarch64-linux-gnu-]url  * [bitcoin-0.18.99-aarch64-linux-]url  * [bitcoin-0.18.99-arm-linux-gnueabihf-]url  * [bitcoin-0.18.99-arm-linux-]url  * [bitcoin-0.18.99-i686-pc-linux-gnu-]url  * [bitcoin-0.18.99-i686-pc-linux-]url  * [bitcoin-0.18.99-osx-]url  * [bitcoin-0.18.99-osx64]url  * [bitcoin-0.18.99-riscv64-linux-gnu-]url  * [bitcoin-0.18.99-riscv64-linux-]url  * [bitcoin-0.18.99-win32-]url  * [bitcoin-0.18.99-win32-setup-]url  * [bitcoin-0.18.99-win32.zip]url  * [bitcoin-0.18.99-win64-]url  * [bitcoin-0.18.99-win64-setup-]url  * [bitcoin-0.18.99-win64.zip]url  * [bitcoin-0.18.99-x86_64-linux-gnu-]url  * [bitcoin-0.18.99-x86_64-linux-]url  * [bitcoin-0.18.99]url  * [bitcoin-linux-0.18-]url  * [bitcoin-linux-]url  * [bitcoin-osx-0.18-]url  * [bitcoin-osx-]url  * [bitcoin-win-0.18-]url  * [bitcoin-win-]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,7,2019-03-06 17:29:23,29.48,,1,,"b""b' utACK 32da92bdf6bb55d6d312b0f85797d439cc942db5'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,closed,2019-03-09 05:46:31,805.83,0,8,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,8,2019-03-06 17:29:23,391.0,,1,,"b""b' This has been backported to in url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,9,2019-03-06 17:29:23,1117.62,,1,,"b""b' Just noted that option is already set in []url  So (without  ) could be sufficient.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15549,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,opened,2019-03-15 14:11:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,title,2019-03-15 14:11:32,00:00,,1,,"b""b' [Docs] Release process updates'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,body,2019-03-15 14:11:32,00:00,,1,,b'b\' Updates to  :  Write an introduction explaining how to use as a template for the release notes draft wiki for collaborative editing at url  as seen for the 0.17.0 and 0.18.0 releases.  Updates to  :  Create a release notes draft wiki at url As per url  for the period during which the release notes are being edited on the wiki, the version on the branch should be wiped and replaced with a link to the wiki which should be used for all announcements until final.  Before -final," remove the ""Needs release note"" label from relevant  and merge the release notes from the wiki into the branch.  Create a pinned meta-issue dedicated to testing the release candidate and communicate it in release announcements where useful. The former is done in practice (e.g. url  url  and the latter addresses the discussion here yesterday: url Reorganise the headers in the Branch Updates section.  Update the version numbers in the examples.  Adapt and merge in the updates in url  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,1,2019-03-15 14:11:32,619.83,,1,,"b""b' utACK. Please squash your changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,2,2019-03-15 14:11:32,743.65,,,1,"b""b' Updated and squashed. Thanks for reviewing :+1: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,3,2019-03-15 14:11:32,1436.63,,1,,"b""b' ~~utACK ff41428~~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,4,2019-03-15 14:11:32,1424.33,,1,,"b""b' Could you also mention somewhere that all  should have the label removed after  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,5,2019-03-15 14:11:32,1433.58,,1,,"b'b\' Added both suggestions as ""Before the final release"". We can stipulate the release notes merge before and the labels removal after if needed.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,closed,2019-03-22 12:29:34,1338.03,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,reopened,2019-03-22 12:29:47,0.22,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,6,2019-03-15 14:11:32,9.38,,1,,"b'b\' Also added url  as an example for the meta issue because it now mentions:  ""Let us know which version you tested on which operating system. If you find an issue"," please search Github for known issues first and then open a new Github issue.""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,7,2019-03-15 14:11:32,576.08,,1,,"b'b\' Updated as per core dev IRC discussion url ""For the period during which the notes are being edited on the wiki"," the version on the branch should be wiped and replaced with a link to the wiki which should be used for all announcements until final.""\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,8,2019-03-15 14:11:32,945.15,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsNo conflicts as of last run.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,9,2019-03-15 14:11:32,1245.72,,1,,"b""b' rebased'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,10,2019-03-15 14:11:32,191.42,,,1,"b""b' ACK beside nits. Thanks for sticking with this'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,11,2019-03-15 14:11:32,81.27,,,1,"b""b' Thanks for reviewing @MarcoFalke. Kept the new commits separate for now"," will squash if these changes are all good.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,12,2019-03-15 14:11:32,158.8,,1,,"b""b' ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,13,2019-03-15 14:11:32,0.2,,1,,"b""b' Please squash your commits according to url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,14,2019-03-15 14:11:32,59.58,1,,,"b""b' Squashed down to 2 logical commits with updated commit messages"," and updated the PR description.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,closed,2019-05-10 20:00:50,451.05,1,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15607,closed,-,-,-,1,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,opened,2019-03-21 13:22:05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,title,2019-03-21 13:22:05,00:00,,1,,"b""b' listtransactions no sent txs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,body,2019-03-21 13:22:05,00:00,,1,,b'b\' Found an issue in v0.17.1," which is related to listing the txs for wallet account. According to these release notes url  I am able to specify the ""-deprecatedrpc=accounts"" option", in order to obtain the  txs for the certain account. However, I still see only incoming txs in a reply.  Here is my config:  Here is my test address: 2NEKqdWqcF649fkHW8osPUht42zY7gY3iQK And reply:  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,1,2019-03-21 13:22:05,432.62,1,,,"b'b\' This is not a regression. (I tested with Bitcoin Core 0.14.0 that ""sent txs"" are not listed for accounts)  If I am mistaken", please provide exact steps to reproduce. ![Screenshot from 2019-03-21 16-34-06]url \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,closed,2019-03-21 20:35:00,432.92,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,2,2019-03-21 13:22:05,557.75,1,,,"b'b"" Thanks for the reply. It seems", that I\'ve provided in the example the wrong address really sorry for that. Anyway, here is my case: I have the btc testnet. I make the curl request:   Get the reply:   Here I see only received txs. However, when I do request like this:   I receive:  So, in the second case, I get 2 txs one sent," and one received. I believe that in the first case I should receive both txs as well. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,reopened,2019-03-22 15:38:02,1143.03,2,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,3,2019-03-21 13:22:05,803.58,,,1,"b""b' Closing. This is not a regression as far as I can see.  0.16.1 would only ever display received txs:  ![Screenshot from 2019-03-22 15-15-21]url  ![Screenshot from 2019-03-22 15-15-10]url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,closed,2019-03-22 19:16:02,218.0,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,4,2019-03-21 13:22:05,1051.28,,1,,"b'b\' Could you please try against this address ""2N8QJEnkuD4S5T6gKAd9e6744taLkGo7QWs"" (or any other address"," which has incoming and outcoming txs) and check that you are able to receive the txs of both categories ""receive"" and ""sent""?\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,5,2019-03-21 13:22:05,1184.88,1,,,b'b\' @ega-forever Is this a bug report (regression) or feature request?  If it is a regression," please specify a version of Bitcoin Core that returned the ""correct"" result  If it is a feature request", please be reminded that accounts have been completely removed as of 0.18.0 (to be released in two weeks). The concept of sending from an account (or address) was highly misleading. Is there a specific use case you are trying to solve?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,6,2019-03-21 13:22:05,1230.63,,1,,"b'b\' ""accounts have been completely removed"" i thought they will be replaced with ""label"" but functionality will remain the same.  Anyway", here is my use case: we are going to use bitcoind for tracking the balance /utxo /tx history of our users. For the moment we do it like so: when a new user registers, we add his address to wallets on bitcoind (through the import API). After that, we are able to show him the balance, utxo, and transactions.  So, my questions are: 1) how do we can to obtain all transactions for the certain address (especially when we have 100+ addresses already added)? 2) is it difficult for you to implement an option, which will index all balances / utxo / txes for all addresses (so we could skip the step with adding the watch-only addresses)? 3) in case the second point is possible, is there any chances that forks like litecoin or bitcoin cash will add this feature as well (as far as I know they are forks of bitcoin)?\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,7,2019-03-21 13:22:05,1240.15,,1,,"b'b"" Bitcoin Core\'s wallet is not a database to keep track of individual user\'s funds of your service. This is out of scope for our software project.  The high level idea is to track user\'s balances and tx history in your own database. You give each user a new address for each incoming send and record that payment (txid) in your database as soon as it is sufficiently confirmed. You ask each user for a new address for each outgoing send and record the txid in your database as well.  If the user needs access to utxos"," you should encourage them to use Bitcoin Core or another wallet that holds the private keys for them.  Be reminded that this issue tracker is used to track technical issues related to the Bitcoin Core code base and not for consulting or support. Those general bitcoin questions  support requests are best directed to the [Bitcoin StackExchange]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15634,closed,-,-,-,3,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,opened,2019-03-26 14:32:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,title,2019-03-26 14:32:39,00:00,,1,,"b""b' Transaction confirmation prompt too big buttons not clickable'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,body,2019-03-26 14:32:39,00:00,,,1,"b'b"" _Second try first issue got deleted suddenly..._  When confirming too big transactions", depending on screen resolution with each output the buttons move lower and lower until they are not visible anymore on the screen.  Additionally randomly after a couple transactions the client starts to repeat its content in the confirmation prompt making even the smalest 1:1 transaction unusable as the buttons are not visible," again. (See screenshot)  I (A) would expect that the buttons are visible no matter how big the transaction content is (for example by making the content scrollable) and (B) don\'t understand why the content is repeating suddenly.  Using Bitcoin Knots 17 but have been directed by the developers that the issue belongs to ![bug-NEW]url Windows 10 1920x1080 Intel i7""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,1,2019-03-26 14:32:39,14.97,,1,,"b""b' Does this happen in Bitcoin Core as well?  Otherwise: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,closed,2019-03-26 14:47:37,14.97,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,2,2019-03-26 14:32:39,56.35,,1,,"b""b' Yes also with bitcoin core @MarcoFalke '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,3,2019-03-26 14:32:39,56.62,,,1,"b""b' Thanks"," then please include the version of Bitcoin Core that you are using to reproduce the issue and how to reproduce.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,4,2019-03-26 14:32:39,386.45,,1,,"b""b' @MarcoFalke Bitcoin Core Version 0.17.1  Easy to reproduce. Just make a transaction with 20 outputs. Result: The confirmation prompt will be too big for your screen and the buttons are not visible anymore.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,5,2019-03-26 14:32:39,92.37,,1,,"b""b' I think we can improve this while ditching usages.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,6,2019-03-26 14:32:39,651.92,,1,,"b""b' Status remains closed?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,7,2019-03-26 14:32:39,3.82,,1,,"b'b"" I\'d reopen and tag 0.19.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,reopened,2019-03-28 13:39:39,1372.03,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,closed,2019-06-06 11:13:16,1293.62,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15667,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,opened,2019-03-29 17:27:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,title,2019-03-29 17:27:06,00:00,,1,,"b""b' [qa] test_runner: Move feature_pruning to base tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,1,2019-03-29 17:27:06,0.92,,1,,"b'b"" Let\'s see what travis\' network-hdd says""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,closed,2019-04-29 19:48:37,141.52,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,reopened,2019-04-29 19:48:39,0.03,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,2,2019-03-29 17:27:06,347.27,,1,,"b""b' This is failing on travis because the is creating blocks with too-old timestamps. This only becomes apparent when running the test on slow systems. I have a fix i the branch here: url  Feel free to take that commit for this PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,closed,2019-04-30 14:12:24,1103.75,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15696,closed,-,-,-,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,opened,2019-04-03 22:14:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,title,2019-04-03 22:14:55,00:00,,1,,"b""b' importtmulti help text typo'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,body,2019-04-03 22:14:55,00:00,,1,,b'b\' The importmulti help text reads," in part:  This is a value for which a key is missing; it should be ""range"": { ...\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,1,2019-04-03 22:14:55,462.38,,1,,"b'b"" Where is this in the Core codebase? I can\'t see the above in the help text.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,2,2019-04-03 22:14:55,13.48,,1,,b'b\' It\\\'s in importmulti in ," search for ""If a ranged descriptor is used"". But apparently it was not in 0.17", and the code I\\\'m currently running is already different from HEAD, as this was refactored in #15497. I am very perplexed as to how the code I\\\'m looking at is generating the help text I\\\'m seeing, and I wonder if there\\\'s a bug in RPCHelpMan, but I don\\\'t know that it\\\'s worth chasing, since the code has changed at HEAD and I\\\'m not willing to rebase up right now to see if that fixed it.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,3,2019-04-03 22:14:55,475.6,,1,,"b""b' Is this a bug in 0.17 (any tag or branch) or 0.18 (any tag or branch) or master? If not"," this issue should be closed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,4,2019-04-03 22:14:55,4.07,,1,,"b'b\' ""range"" is not in 0.17 and the help text in master (should be the same for 0.18) reads: \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,closed,2019-04-04 14:10:27,955.53,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,5,2019-04-03 22:14:55,18.88,,,1,"b""b' Thy bug report is still valid"," though. Thanks for reporting!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,reopened,2019-04-04 14:29:20,18.88,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,closed,2019-04-10 01:21:40,652.33,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15737,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,opened,2019-04-04 01:28:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,title,2019-04-04 01:28:11,00:00,,1,,"b""b' importmulti falsely warns private keys present when importing descriptor'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,body,2019-04-04 01:28:11,00:00,,1,,"b""b' Command:   Result:   And according to getdescriptoinfo:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,1,2019-04-04 01:28:11,273.52,,1,,"b""b' It seems that ProcessImportDescriptor finds no pubkeys in this descriptor (pubkey_map is empty)", so it concludes that, trivially," all privkeys are provided.  This probably has the same cause as #15743.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,2,2019-04-04 01:28:11,60.5,,1,,"b'b"" Yeah I\'m going to close this as a duplicate of #15743", which is more substantive," because the cause is the same.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,closed,2019-04-04 07:02:12,334.02,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,reopened,2019-04-06 00:33:45,1051.55,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,3,2019-04-04 01:28:11,1053.85,,1,,"b'b"" Reopened because the fix for #15743 won\'t end up fixing this.  THAT fix is going to cause key origins to be successfully record for multisigs in ProcessImportDescriptor", but according to @sipa it is intentional that pubkeys are not imported, and this will not be changed.  Possibly all that needs to be changed is the comment:  The comment claims that we will falsely warn that threshold multisigs are not spendable, even when they are, but ACTUALLY we falsely warn that they are spendable," even when they are not.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,4,2019-04-04 01:28:11,36.77,,1,,"b'b"" Right", there is an additional issue here; namely that only to-be-imported pubkeys are being analyzed for spendability," rather than all involved keys. I\'ll PR a fix soon.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,5,2019-04-04 01:28:11,684.98,,1,,"b""b' Fixed by url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,closed,2019-04-09 12:37:51,724.1,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15742,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,opened,2019-04-09 20:18:11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,title,2019-04-09 20:18:11,00:00,,1,,"b""b' [wallet] Move maxtxfee from node to wallet'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,body,2019-04-09 20:18:11,00:00,,1,,"b""b' Closes #15355  Moves the from the node to the wallet. See discussion in issue for details.  This is a cleanup. There is no change in behaviour.  Completes #15620'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,1,2019-04-09 20:18:11,0.47,,1,,"b'b"" ~Builds on #15638. Only the last commit is for this PR.~  EDIT: base PR is merged. I\'ve rebased on master.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,2,2019-04-09 20:18:11,8.03,,,1,"b'b"" This only requires d38cfdf of the other pull request. The other pull request has a lot of conflicts and might need a long time for review to get in", so I\'d prefer if you just cherry-picked that commit and your maxtxfee changes here. Review can then happen here instead of the larger pull request. No strong opinion," though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,3,2019-04-09 20:18:11,22.67,,,1,"b'b"" Thanks for looking at this @MarcoFalke . I\'m in no rush for this to get merged", and would much prefer to see progress on #15638, so I\'m going to try to avoid causing rebases for Russ.  (incidentally, 15638 is a very easy review. It\'s almost entirely move-only and all the commits are well commented," so in theory at least it should be possible to  quite quickly).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,4,2019-04-09 20:18:11,96.2,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,5,2019-04-09 20:18:11,897.97,,1,,"b""b' This now requires rebase. I plan not to do that until #15638 is merged. Review is still welcomed for the last commit (although ACKs will need to be refreshed after rebase).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,6,2019-04-09 20:18:11,36.38,,1,,"b""b' Rebased on master. This is ready for review.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,7,2019-04-09 20:18:11,48.18,,1,,"b""b' Many tests fail. Do they pass locally in valgrind?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,8,2019-04-09 20:18:11,18.2,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15870]url  (wallet: Only fail rescan when blocks have actually been pruned by MarcoFalke)* [#15845]url  (wallet: Fast rescan with BIP157 block filters by MarcoFalke)* [#15764]url  (Native descriptor wallets by achow101)* [#15713]url  (refactor: Replace chain  by higher method by ariard)* [#12419]url  (Force distinct destinations in CWallet::CreateTransaction by promag)* [#12096]url  ([rpc] [wallet] Allow specifying the output index when using bumpfee by kallewoof) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,9,2019-04-09 20:18:11,204.12,,1,,"b'b""  You\'re right. Investigating now.  EDIT: I wasn\'t initializing properly. Should be fixed now.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,closed,2019-04-10 18:30:40,1332.48,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,reopened,2019-04-10 21:27:19,176.65,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,10,2019-04-09 20:18:11,1283.57,1,,,"b""b' Moved the max tx fee option to be a per-wallet setting. This required adding a parameter to and which is ugly. I hope we can remove clean those up in a future PR.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,11,2019-04-09 20:18:11,46.23,,1,,"b""b'  I think you could use the CWalletTx::pwallet pointer to avoid this. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,12,2019-04-09 20:18:11,1.4,,,1,"b'b""  You\'re right. Thanks. ~Will fix.~ EDIT: Fixed.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,13,2019-04-09 20:18:11,1373.1,,1,,"b""b' For unknown reasons GitHub delivers a corrupt branch when fetching this pull request. This leads to erroneous conflict calculations in DrahtBot", and the ci systems unable to run.  8c3e6f9cb2 is delivered," whereas this pull request was force pushed in the meantime.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,closed,2019-04-18 15:34:43,1087.4,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,reopened,2019-04-18 15:34:49,0.1,1,11,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,14,2019-04-09 20:18:11,1313.92,,1,,"b""b' utACK 5c759c73b2602c7fde1c50dbafe5525904c1b64c  Show signature  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,closed,2019-04-27 13:30:43,1315.9,1,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15778,closed,-,-,-,1,12,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,opened,2019-04-09 22:19:17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,title,2019-04-09 22:19:17,00:00,,1,,"b""b' test: Add wallet_balance benchmark'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,1,2019-04-09 22:19:17,957.15,,1,,"b""b' Going to reopen next week'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,closed,2019-04-11 14:16:26,957.15,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,reopened,2019-04-15 17:33:36,197.17,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,2,2019-04-09 22:19:17,248.18,,1,,"b""b' this is ready for review now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,3,2019-04-09 22:19:17,1301.17,,1,,"b""b' utACK fa46ac3127142358116c8473741708b3bb70ca15'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,4,2019-04-09 22:19:17,168.65,,1,,"b""b' Added a method to the wallet to handle notifications (and removed the workarounds in tests)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,closed,2019-04-17 19:15:54,102.3,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15779,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,opened,2019-04-19 20:25:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,title,2019-04-19 20:25:12,00:00,,1,,"b""b' Faster tests with topological mempool rpc sync \\xf0\\x9f\\x9a\\x80'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,body,2019-04-19 20:25:12,00:00,1,,,"b'b"" Most of the tests spend time waiting for the poisson tx send to timeout. However", tests that don\'t test p2p behaviour, don\'t need to.  Speed them up by syncing transactions over rpc.  Overall," the tests run three times as fast for me now:  * Before:   * After: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,1,2019-04-19 20:25:12,8.02,,,1,"b""b' Nice! This has been on my list for a long time. Thanks for doing it!  \\xf0\\x9f\\x9a\\x80 concept ACK '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,2,2019-04-19 20:25:12,946.87,,,1,"b""b' This is an impressive improvement in speed! ACK fad26ed5fa5bf9fc0cf60e84a135e7d03c934000  a test here:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,3,2019-04-19 20:25:12,15.23,,1,,"b""b' Added a commit to extend the docstring"," as requested by @promag and @jonatack'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,4,2019-04-19 20:25:12,531.45,,,1,"b""b' Aesthetic disagreements aside"," this is a great improvement. utACK faac5a8ff6c9966daa880bc8c02951fea804589d'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,closed,2019-04-23 21:02:12,37.0,1,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,5,2019-04-19 20:25:12,1073.27,1,,,"b""b' Going back to this approach"," since modifying bitcoind is interpreted as too controversial'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,reopened,2019-04-24 15:20:03,1097.85,2,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,6,2019-04-19 20:25:12,0.32,,1,,"b""b' Unless there are objections this will be merged on Monday'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,7,2019-04-19 20:25:12,5.77,,1,,"b""b' Could make sense to skip this optimization in one of the travis job?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,8,2019-04-19 20:25:12,62.77,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15911]url  (Use wallet RBF default for walletcreatefundedpsbt by Sjors)* [#15891]url  (test: Require standard txs in regtest by default by MarcoFalke) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,9,2019-04-19 20:25:12,386.98,,1,,"b""b' Functional tests on master at 8da1aa4 with Linux Debian 4.19.28-2 (2019-03-15) x86/64  ALL             | \\xe2\\x9c\\x93 Passed  | 1824 s (accumulated) Runtime: 466 s  ALL             | \\xe2\\x9c\\x93 Passed  | 1867 s (accumulated)  Runtime: 476 s  ALL             | \\xe2\\x9c\\x93 Passed  | 1856 s (accumulated)  Runtime: 473 s  ALL             | \\xe2\\x9c\\x93 Passed  | 1774 s (accumulated)  Runtime: 453 s   Functional tests with this PR at url  rebased on master at 8da1aa4  ALL             | \\xe2\\x9c\\x93 Passed  | 1372 s (accumulated)  Runtime: 352 s  ALL             | \\xe2\\x9c\\x93 Passed  | 1388 s (accumulated)  Runtime: 357 s  ALL             | \\xe2\\x9c\\x93 Passed  | 1472 s (accumulated)  Runtime: 377 s  ALL             | \\xe2\\x9c\\x93 Passed  | 1449 s (accumulated)  Runtime: 373 s  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,closed,2019-04-30 20:15:16,295.22,2,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,10,2019-04-19 20:25:12,1283.33,,1,,"b'b""  I prefer this approach as well. I think the only use for this", ever, is the tests," so I\'d prefer not to change with a special case for it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15858,closed,-,-,-,2,7,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,opened,2019-04-25 13:53:24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,title,2019-04-25 13:53:24,00:00,,1,,"b""b' test: Require standard txs in regtest by default'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,body,2019-04-25 13:53:24,00:00,1,,,"b'b"" I don\'t see a reason why regtest should allow non-standard txs", as it makes testing mainnet behaviour such as #15846 unnecessarily hard and unintuitive.  Of course," testnet policy remains unchanged to allow propagation of non-standard txs.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,1,2019-04-25 13:53:24,2.03,,,1,"b""b' Sounds good to me.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,2,2019-04-25 13:53:24,1.47,,1,,"b""b' Yes"," please.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,3,2019-04-25 13:53:24,15.55,1,,,"b'b"" Concept ACK.  FYI I found the title of the PR and the PR description a bit confusing", because it wasn\'t clear to me if this was going to make it so that we would be able to configure a regtest node to accept non-standard transactions," or if regtest would be treated the same as mainnet and it would not be allowed at all.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,4,2019-04-25 13:53:24,7.83,,1,,"b""b' Adjusted title as requested by @sdaftuar   Also", please review commit-by-commit. The first commit is a cleanup of (8d1de43f0c Remove internal miner)," the others are explained in the commit subject line. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,5,2019-04-25 13:53:24,26.42,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,6,2019-04-25 13:53:24,95.02,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#16171]url  (Remove -mempoolreplacement to prevent needless block prop slowness. by TheBlueMatt)* [#16060]url  (Bury bip9 deployments by jnewbery)* [#15329]url  (Fix InitError() and InitWarning() content by hebasto)* [#15169]url  (Parallelize CheckInputs() in AcceptToMemoryPool() by sdaftuar) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,7,2019-04-25 13:53:24,837.97,,1,,"b""b' Concept NACK. Tests affected by policy (other than tests for the policy itself) are broken. Not enforcing policy on such tests helps improve test quality.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,8,2019-04-25 13:53:24,232.83,,1,,b'b\' I don\\\'t particularly like re-introducing a chain type enumeration. The introduction of the ChainParams structure was supposed to make the entire chain information data-driven (with a possibility to add custom hybrid chain types for specific testing, for example, in the future)," and this seems a step back from this by making it easier to match on ""chain type"" instead of add a  to the structure for a specific property.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,9,2019-04-25 13:53:24,136.07,,1,,"b'b"" Perhaps instead it should be toggled in the test framework\'s default options?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,10,2019-04-25 13:53:24,41.77,,1,,"b'b"" In this case the property really is  ", which does not have a bit allocated in the struct.  Personally," I don\'t see why an enumeration can not have an additional type if needed. But if I am also happy to use string matching on the chain name (could lead to weird run-time behavior) or add a bit to indicate if the params are the mainnet params.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,11,2019-04-25 13:53:24,314.7,,,1,"b""b' Remove the two intermediate refactoring commits (thanks for the review @sipa and @laanwj) and fixed up the release notes in the last commit (thanks for the review @practicalswift"," @Sjors and @jnewbery)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,closed,2019-05-22 19:50:19,356.92,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,reopened,2019-05-22 19:50:21,0.03,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,12,2019-04-25 13:53:24,157.63,1,,,"b""b' Sorry had to rebase due to silent merge conflicts in the tests'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,13,2019-04-25 13:53:24,147.32,,1,,"b""b' utACK cd338016f5663703cd6eb87bd4403a8fcb4f27a9'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,14,2019-04-25 13:53:24,1070.03,,1,,"b""b' @jnewbery Looks like you posted this on the wrong repo?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,15,2019-04-25 13:53:24,1183.25,1,,,"b""b' Oops. Sorry"," I rebased this PR on a later master which is how I got the cd33801.. hash.  utACK faa36e1303773bec382600cb70ccd65eb5bbd33b'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15891,open,-,-,-,4,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,opened,2019-04-30 05:59:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,title,2019-04-30 05:59:39,00:00,,1,,"b""b' getblock performance issue on verbosity'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,body,2019-04-30 05:59:39,00:00,,1,,"b'b""   is slow on verbosity", it\'s happened because applied for whole function including JSON generation url I added few lines which print spent time:  and numbers looks like:  i.e. everything before JSON generation takes 15-30ms, while JSON takes minimum 190ms and lock for all this time. As result it\'s possible extract only ~5 blocks per second.  Looking on the code I think it\'s possible copy data from to extra structure," so in this case can be unlocked right after  . url  As result in verbosity mode should be much faster (in case if will be adjusted too).  Does this make sense?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,1,2019-04-30 05:59:39,13.38,,1,,"b'b\' Reducing the usage of the lock is desirable. Though your approach ""only"" focuses on increasing the concurrency efficiency.  IMO the JSON RPC interface is not made for efficiency.  If you seek fast block fetches", you are much better off with using a) **the p2p API** or b) **the REST API** with binary or at least hex encoding.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,2,2019-04-30 05:59:39,505.98,,,1,"b'b""  This is good advice", but it\'s still interesting to know how time is being spent in the RPC," and I don\'t think we\'d reject a simple PR optimizing it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,3,2019-04-30 05:59:39,283.75,,1,,"b'b"" So JSON serialization takes around 10 times more than loading the block? \\xf0\\x9f\\x99\\x84  Edit: I\'d say can be optimized for concurrency (#15932 by @MarcoFalke \\xf0\\x9f\\x91\\x8f) and for efficiency (TODO?).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,4,2019-04-30 05:59:39,31.15,,1,,"b""b' Yeah"," could be the typical o2 complexity thing with univalue?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,5,2019-04-30 05:59:39,10.92,,1,,"b""b' Adding UniValue functions with move  refs would help a lot...'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,6,2019-04-30 05:59:39,26.42,,1,,"b'b""  I don\'t think it\'s the case here.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,closed,2019-05-03 12:11:57,372.3,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,reopened,2019-05-03 12:13:57,2.0,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,7,2019-04-30 05:59:39,943.6,,1,,"b""b' Keeping this open since translating to json takes 100ms"," which seems a bit extreme.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,8,2019-04-30 05:59:39,1132.52,,,1,"b""b'  Sounds good to me'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,9,2019-04-30 05:59:39,1153.4,,1,,"b'b"" Just to have some idea of what\'s going on with  ", this is a rough (some of the fields are commented) benchmark with block 413567. ![Screenshot 2019-05-07 at 16 40 33]url  BTW," this was taken with some already implemented.  (running a not-yet-pushed  )""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15925,open,-,-,-,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,opened,2019-05-09 15:38:27,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,title,2019-05-09 15:38:27,00:00,,1,,"b""b' Bugfix: fix pruneblockchain returned prune height'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,body,2019-05-09 15:38:27,00:00,,1,,"b'b"" The help of tells us that the return value is  ","... but the implementation naively returns the provided input and therefore not respecting that pruning can\'t be done on all possible blockheight due to the fact that we only prune complete blockfiles (which combine multiple blocks).  This fixes the return value to actually return the correct prune height.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,1,2019-05-09 15:38:27,379.8,,1,,"b""b' Tested ACK 2b3849d", but should fix the extended test  ," which gives the following error: With this change I think it makes sense to compare the result with  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,2,2019-05-09 15:38:27,40.05,,,1,"b""b' utACK 2b3849dcd2f8678f03d738c618828602bd249d1b  @promag Thanks for running the test ;)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,closed,2019-05-15 21:49:44,371.28,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,reopened,2019-05-15 21:49:48,0.07,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,3,2019-05-09 15:38:27,785.97,,1,,"b""b' Travis fails in pruning: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,4,2019-05-09 15:38:27,1246.43,,1,,"b""b' @jonasschnelli are you still working on this?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,5,2019-05-09 15:38:27,1111.83,,,1,"b'b"" I haven\'t started working on the prune test fix... I have plans to do this the next week. But happy to pull in a commit if someone else wants to fix it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,6,2019-05-09 15:38:27,700.17,,1,,"b""b' @jonasschnelli promag@22ff1bbe7 is an option"," if accepted should be squashed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,7,2019-05-09 15:38:27,514.5,,,1,"b'b"" Added 22ff1bbe71c4acc1fd4303399abbb3a52f436667 from @promag repo (test fix). I don\'t think it needs squashing.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,8,2019-05-09 15:38:27,768.25,,1,,"b""b' @jonasschnelli Are you sure you pushed the correct branch? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,9,2019-05-09 15:38:27,700.67,,1,,"b""b' @jonasschnelli My previous ACK was 2b3849d", which is a small bugfix. The current pull request adds a config option," which does not qualify as a bugfix that should be backported.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,10,2019-05-09 15:38:27,701.4,,1,,"b""b'  The test will fail otherwise"," breaking  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,11,2019-05-09 15:38:27,991.12,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15606]url  ([experimental] UTXO snapshots by jamesob) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,15991,open,-,-,-,0,10,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,opened,2019-05-17 15:56:15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,title,2019-05-17 15:56:15,00:00,,1,,"b""b' depends: Build secondary deps statically.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,body,2019-05-17 15:56:15,00:00,,1,,"b'b"" Secondary dependencies don\'t need to be shared. Comes at theuni\'s request.  ~~To do: add documentation so future secondary dependencies aren\'t shared.~~ DONE   Let\'s merge this first as url  is based on this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,1,2019-05-17 15:56:15,94.83,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,2,2019-05-17 15:56:15,13.77,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#15844]url  (depends: Purge libtool archives by dongcarl)* [#15277]url  ([Help Wanted] contrib: Enable building in Guix containers by dongcarl) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,3,2019-05-17 15:56:15,274.25,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,4,2019-05-17 15:56:15,1307.7,,1,,"b""b' Added more detailed justifications to  .'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,5,2019-05-17 15:56:15,69.12,,1,,"b""b' Rebooted all the tests.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,6,2019-05-17 15:56:15,1244.43,,1,,"b""b' utACK 27226e6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,7,2019-05-17 15:56:15,787.82,,1,,"b""b' utACK 27226e64625e3e35edba8f1c55954340362d23b2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,8,2019-05-17 15:56:15,326.95,,1,,"b""b' utACK 27226e64625e3e35edba8f1c55954340362d23b2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,9,2019-05-17 15:56:15,145.27,,1,,"b'b"" Update: squashed the two commits.  Let\'s merge this first as url  is based on this PR.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,10,2019-05-17 15:56:15,187.55,,,1,"b""b' Concept ACK"," thanks for picking this up!  Reviewing.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,11,2019-05-17 15:56:15,6.1,,1,,"b""b'   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,12,2019-05-17 15:56:15,7.85,1,,,"b'b"" A few things about this make me nervous", so I\'m going to look in more depth. Some of these static libs (libXext for example) obviously still work when compiled as non-pic, implying that they never end up linked into anything. In these cases where they\'re not used, we may be able to avoid the dependencies altogether. Maybe only headers are needed? I\'m nervous about duplicate symbols in static libs where versioning tricks might have otherwise been used for shared libs. Qt, for example, builds internal copies of some of our libs. I can\'t come up with any tangible problems though, so this point is very thin. I would\'ve expected these changes to require a little more hand-holding for pkg-config. For example," I would have expected [this to be necessary]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,13,2019-05-17 15:56:15,172.98,,1,,"b'b"" In this PR we identify 4 secondary deps that should be built statically:  dbus expat libXext xtrans  However", only expat required being built for depends builds to succeed, which is rather odd. Therefore, the rest of the deps must not be linked in, or are headers-only.  Results of my investigation (please verify these as I might be completely wrong):  ### libXext  The only package that we declare as depending on libXext is qt, and it doesn\'t actually... Tested by removing the package definition and references to it, everything seems to compile fine.  ### xtrans  It seems that xtrans is just code+headers and not a library that needs to be linked in. We can verify this by looking at the build outputs.  Its configure is very confused as to why we supply it with  . It is, however," required as a build-time dependency for libX11.  ### dbus  The only reference to dbus is in the configure options for qt:  . Which indicates to qt to dynamically open libdbus-1 at runtime (with dlopen?). I believe this means that we don\'t actually use the dbus we build. (This one I\'m the least sure about)  @theuni""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,14,2019-05-17 15:56:15,1053.82,,1,,"b""b' Needs rebase'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,15,2019-05-17 15:56:15,8.1,,1,,"b'b"" This has been merged as part of #15844. I\'ve opened #16150 to keep track of followup depends changes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,closed,2019-06-05 14:56:47,1380.53,1,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,16,2019-05-17 15:56:15,7.6,1,,,"b'b"" Oops. Didn\'t realize this was a separate PR and reviewed this as part of #15844. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,reopened,2019-06-05 15:12:41,15.9,2,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,closed,2019-06-05 15:14:01,1.33,2,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16041,closed,-,-,-,2,15,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,opened,2019-05-27 13:57:01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,title,2019-05-27 13:57:01,00:00,,1,,"b""b' Coin Selector UI is Showing The OK Button on the Left Side.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,body,2019-05-27 13:57:01,00:00,1,,,b'b\' <!-This issue tracker is only for technical issues related to Bitcoin Core.  General bitcoin questions  support requests are best directed to the Bitcoin StackExchange at url For reporting security issues," please read instructions at url If the node is ""stuck"" during sync or giving ""block checksum mismatch"" errors", please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! - BitcoinQT\\\'s Input selector is showing the button on the left side instead of the right side. All the buttons in the app show on the right side, so they should be there, especially the button.  Ok button on the right. Ok button on the left. ![image]url ![image]url    I\\\'m using  . On a x86_64  Ubuntu 19.04 Gnome 3.32.1.    \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,1,2019-05-27 13:57:01,90.2,,1,,"b'b"" @igorgue There is a fix for this in #16113 if you\'d like to test it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,2,2019-05-27 13:57:01,10.42,,,1,"b""b' Thanks I\\xe2\\x80\\x99ll close this then.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,closed,2019-05-28 15:37:39,100.63,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,3,2019-05-27 13:57:01,1.1,1,,,"b""b' Oh it was for this issue. Apologize I\\xe2\\x80\\x99ll test.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,reopened,2019-05-28 15:38:44,1.08,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,closed,2019-05-29 07:03:52,925.13,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16101,closed,-,-,-,2,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,opened,2019-06-10 19:15:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,title,2019-06-10 19:15:26,00:00,,1,,"b""b' scripted-diff: gitian: Use REFERENCE_DATETIME directly.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,body,2019-06-10 19:15:26,00:00,1,,,"b""b' Fixes regression introduced by #16141.    Note that this could have been fixed by escaping properly", but using directly is simpler.  Future note: is a bit ridiculous. At the very _least_ gitian should use epoch, as it is the most parse-able," and preferably set SOURCE_DATE_EPOCH.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,1,2019-06-10 19:15:26,28.72,,1,,"b""b' Can you explain how the regression was introduced?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,2,2019-06-10 19:15:26,0.17,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,3,2019-06-10 19:15:26,4.47,,1,,"b""b' Concept ACK. Thanks.  @MarcoFalke It was my poor copy-paste"," followed by some over-the-shoulder review.  Also a little related discussion in the IRC channel.  edit: closing obviously accidental. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,closed,2019-06-10 19:48:48,33.37,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,reopened,2019-06-10 19:48:51,0.05,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,4,2019-06-10 19:15:26,3.47,,1,,"b""b' Oh", let me rephrase: Why did && work previously," but does no longer?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,5,2019-06-10 19:15:26,14.83,,1,,"b""b'  @MarcoFalke  url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,6,2019-06-10 19:15:26,21.77,,1,,"b""b' Ah", so the issue could be fixed by escaping properly," but you decided to use directly. Sounds fair. Maybe mention that in the OP?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,7,2019-06-10 19:15:26,13.25,,1,,"b""b'  Done.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,8,2019-06-10 19:15:26,24.33,,1,,"b'b""   I don\'t think it was actually being used", it was in a variable and then copied and pasted into the sed by #16141 which broke the build," but should have been escaped""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,9,2019-06-10 19:15:26,28.55,,1,,"b""b'  @sidhujag It was being used pre-16141"," see: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,10,2019-06-10 19:15:26,1083.52,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,11,2019-06-10 19:15:26,30.12,,1,,"b""b' Gitian builds for commit 8a503a6c6dd419921373f45d7aa6f1787c9b8884 (master): Gitian builds for commit c80f31d50042212dc773aae2a64334038c2067d4 (master and this pull): * [bitcoin-0.18.99-aarch64-linux-gnu-]url  * [bitcoin-0.18.99-aarch64-linux-]url  * [bitcoin-0.18.99-arm-linux-gnueabihf-]url  * [bitcoin-0.18.99-arm-linux-]url  * [bitcoin-0.18.99-i686-pc-linux-gnu-]url  * [bitcoin-0.18.99-i686-pc-linux-]url  * [bitcoin-0.18.99-osx-]url  * [bitcoin-0.18.99-osx64]url  * [bitcoin-0.18.99-riscv64-linux-gnu-]url  * [bitcoin-0.18.99-riscv64-linux-]url  * [bitcoin-0.18.99-win64-]url  * [bitcoin-0.18.99-win64-setup-]url  * [bitcoin-0.18.99-win64.zip]url  * [bitcoin-0.18.99-x86_64-linux-gnu-]url  * [bitcoin-0.18.99-x86_64-linux-]url  * [bitcoin-0.18.99]url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,closed,2019-06-11 16:14:18,1225.45,1,12,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,12,2019-06-10 19:15:26,746.92,,,1,"b""b' Thanks! POsthumous utACK 993aa414d3c54f760c8ae4eb39cb49363acc7f33'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,13,2019-06-10 19:15:26,151.1,1,,,"b""b' Grr"," sorry for missing this in review. Post-merge ACK 993aa414d3c54f760c8ae4eb39cb49363acc7f33.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16184,closed,-,-,-,2,12,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,opened,2019-06-20 17:55:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,title,2019-06-20 17:55:54,00:00,,1,,"b""b' util: Remove code to cache datadir'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,body,2019-06-20 17:55:54,00:00,1,,,"b""b' The rationale for caching the datadir is given as   However", since 8c2d695c4a45bdd9378c7970b0fcba6e1efc01f9," the debug log location is actually cached itself in  .  So remove the now-useless caching.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,1,2019-06-20 17:55:54,13.17,,1,,"b""b' Will reopen after #16252'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,closed,2019-06-20 18:09:05,13.18,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,2,2019-06-20 17:55:54,909.07,,1,,"b""b' Concept ACK'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,reopened,2019-06-25 10:21:29,972.4,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,3,2019-06-20 17:55:54,470.6,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#16273]url  (refactor: Remove unused includes by practicalswift)* [#15871]url  (Handle exception when creating default -datadir by promag)* [#15864]url  (Fix datadir handling by hebasto) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,4,2019-06-20 17:55:54,1080.63,,1,,"b""b' A side-effect of caching was that this code was only run the first call to  .  Right now", it will try to create the data directory every time: (this not only results in system call spam, but also a change in behavior if, for some reason," the datadir disappears) A simple solution to avoid this would be to add a static bool flag for this. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,5,2019-06-20 17:55:54,9.98,,1,,"b'b""  that\'s good?  @laanwj wouldn\'t it be better to just call as soon as possible"," like it should belong to the startup? Currently is kind of hard to know when directories are actually created.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,6,2019-06-20 17:55:54,32.13,1,,,"b'b""  That definitely isn\'t good", if the datadir disappears while running you want the process to die as soon as possible and not mess with creating directories. Yes that would be better, however this is very hard to reason about, and review, with the complexity of our startup sequence. Maybe better to leave for a future PR," which is why I suggested the most straightforward solution. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,7,2019-06-20 17:55:54,267.97,1,,,b'b\' It is indeed weird to write to disk in a method, whose name implies it is a simple getter.  Added a guard to the disk access for now," but this should be improved in the future. (See also ""Fix datadir handling"" #15864)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,8,2019-06-20 17:55:54,111.5,,1,,"b""b' I  think this is not worth it"," so giving up on this for now. Someone should move out the first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,closed,2019-06-27 18:14:59,473.5,3,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16255,closed,-,-,-,3,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,opened,2019-06-26 20:36:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,title,2019-06-26 20:36:23,00:00,,1,,"b""b' qt: test: Create at most one testing setup'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,body,2019-06-26 20:36:23,00:00,,1,,"b""b' It is assumed that ideally only one BasicTestingSetup exists at any point in time for each process (due to use of globals).  This assumption is violated in the GUI tests", as a testing setup is created as the first step of the function and then (sometimes) another one for the following test cases.  So," the gui tests create two testing setups: * in (added in fa4a04a5a942d582c62773d815c7e1e9897975d0) * a testing setup for individual test cases  Avoid that by destructing the testing setup in main after creation and then move the explicit to the only places where it is needed (before and after  ).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,1,2019-06-26 20:36:23,33.58,,1,,"b""b'  The following sections might be updated with supplementary metadata relevant to reviewers and maintainers. ### ConflictsReviewers", this pull request conflicts with the following ones: * [#10102]url  ([experimental] Multiprocess bitcoin by ryanofsky) If you consider this pull request important, please also help to review the conflicting pull requests. Ideally," start with the one that should be merged first.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,2,2019-06-26 20:36:23,14.28,1,,,"b""b' fa3b441 works for me on macOS 10.14.5"," but Travis looks quite unhappy.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,closed,2019-06-26 23:44:57,188.57,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,3,2019-06-26 20:36:23,1120.72,1,,,"b'b"" Why\'s this closed? It\'s confusing when a PR or issue is closed with no comment.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,4,2019-06-26 20:36:23,35.88,,1,,"b'b"" I didn\'t think it was worth it"," but let\'s see what others think.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,reopened,2019-06-27 16:40:52,1015.92,2,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,5,2019-06-26 20:36:23,72.33,,1,,"b""b' The comment was by github"," it said: So the issue itself was already fixed with the linked pull request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,6,2019-06-26 20:36:23,85.95,,1,,"b'b"" #16289 was the easiest way to fix a broken master branch for macOS tests"," but this PR seems like a more thorough long term solution. I don\'t entirely understand the original problem though.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,7,2019-06-26 20:36:23,95.88,,,1,"b'b"" Thanks", I didn\'t understand the github comment. I also don\'t fully understand the original issue, or why BasicTestingSetup can\'t seem to clean up after itself," and seems to need additional ECC_Stop() / DisconnectTestLogger() calls.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,8,2019-06-26 20:36:23,115.47,,1,,"b""b'  It does clean up after itself", but the assumption is that ideally only one BasicTestingSetup exists at any point in time for each process (due to use of globals).  We violate this assumption in the GUI tests," as a testing setup is created as the first step of the function and then (sometimes) another one for the following test cases.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bitcoin,16294,open,-,-,-,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
