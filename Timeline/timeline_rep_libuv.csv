REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,
libuv,3,closed,opened,2011-04-18 05:07:58,,,,,,,,,,,,,,,,,
libuv,3,closed,title,2011-04-18 05:07:58,00:00,,1,,"b'b"" check that echo_server doesn\'t return non-zero during ping_pong test""'",,,,,,,,,,,,
libuv,3,closed,body,2011-04-18 05:07:58,00:00,,1,,"b'b\' test-runner bug it should fail if a helper fails.@gissues:{""order"":75","status"":""backlog""}\''
libuv	3	closed	1	piscisaureus	2011-04-18 05:07:58	286.88		+1		b""b' Then there needs to be a way to gracefully shutdown echo_server.'",,,,,,,,,,,
libuv,3,closed,closed,2011-04-18 09:54:51,286.88,0,3,0,,,,,,,,,,,,,
libuv,3,closed,reopened,2011-04-18 09:58:09,3.3,0,3,0,,,,,,,,,,,,,
libuv,3,closed,2,2011-04-18 05:07:58,14.48,,,1,"b""b' not necessarilyyou can use the process_wait with a small timeout on each of the helpers after the main process exits. if process_wait has not timed out then kill the helper and assume everything is fine. '""",,,,,,,,,,,,
libuv,3,closed,closed,2011-04-18 10:19:25,21.27,0,3,1,,,,,,,,,,,,,
libuv,3,closed,reopened,2011-04-18 10:30:27,11.03,0,3,1,,,,,,,,,,,,,
libuv,3,closed,3,2011-04-18 05:07:58,21.55,1,,,"b'b"" sorry above was accidentally pushed. it\'s not in the history any longer""'",,,,,,,,,,,,
libuv,3,closed,4,2011-04-18 05:07:58,2.05,,1,,"b""b' something like this url  would catch crash errors from echo_server'""",,,,,,,,,,,,
libuv,3,closed,5,2011-04-18 05:07:58,8.88,,,1,"b'b"" Looks good. should we change process_wait to not take a vector? We\'re not using it anyway.Is the race condition intentional? During the process can still exit gracefully. But if that happens the timeouts in are probably wrong"," so it\'s good that ASSERT(result != 0); fails.""'",,,,,,,,,,,
libuv,3,closed,6,2011-04-18 05:07:58,385.22,,1,,"b'b"" let\'s keep the vector. i\'ll land this once i figure out how to wait with timeouts in unix it\'s not so easy.""'",,,,,,,,,,,,
libuv,3,closed,7,2011-04-18 05:07:58,914.6,1,,,"b""b' Closing old stalled issues"," please reopen at url  if still needed.'""",,,,,,,,,,,
libuv,3,closed,closed,2014-11-26 08:21:38,1311.18,2,5,2,,,,,,,,,,,,,
libuv,3,closed,-,-,-,2,5,2,,,,,,,,,,,,,
libuv,4,closed,opened,2011-04-18 05:08:43,,,,,,,,,,,,,,,,,
libuv,4,closed,title,2011-04-18 05:08:43,00:00,,1,,"b""b' class structure for uv_handle_t like in ev_watcher'""",,,,,,,,,,,,
libuv,4,closed,body,2011-04-18 05:08:43,00:00,,1,,"b""b'   oio_tcp_handle  oio_npipe_handle  oio_file_handle  oio_tty_handle  oio_timer_handle ?'""",,,,,,,,,,,,
libuv,4,closed,1,2011-04-18 05:08:43,288.55,,1,,"b""b' yes'""",,,,,,,,,,,,
libuv,4,closed,closed,2011-04-18 09:57:16,288.55,0,3,0,,,,,,,,,,,,,
libuv,4,closed,reopened,2011-04-18 09:57:53,0.62,0,3,0,,,,,,,,,,,,,
libuv,4,closed,2,2011-04-18 05:08:43,170.28,,1,,"b""b' No timer handleThe drawback of having multiple handle classes is that you need multiple oio_read and oio_write implementations _or_ the user needs to cast every time read / write is called.'""",,,,,,,,,,,,
libuv,4,closed,3,2011-04-18 05:08:43,260.5,,1,,"b'b"" casting isn\'t a big deal""'",,,,,,,,,,,,
libuv,4,closed,closed,2011-06-03 09:05:06,1387.22,0,5,0,,,,,,,,,,,,,
libuv,4,closed,-,-,-,0,5,0,,,,,,,,,,,,,
libuv,12,closed,opened,2011-04-18 06:01:04,,,,,,,,,,,,,,,,,
libuv,12,closed,title,2011-04-18 06:01:04,00:00,,1,,"b""b' close_cb_stack should be in a file of similar name'""",,,,,,,,,,,,
libuv,12,closed,body,2011-04-18 06:01:04,00:00,,1,,"b""b' that is"," rename  '""",,,,,,,,,,,
libuv,12,closed,1,2011-04-18 06:01:04,94.52,,1,,"b""b' in general i would like all of the tests to have a similar filename so that i can make my Makefile easier. tests should have the form  . All other files should not: should change to (or something)'""",,,,,,,,,,,,
libuv,12,closed,2,2011-04-18 06:01:04,133.02,,1,,"b""b' Allright. I imagined having multiple tests in one file"," hence teststack in test-callback-stack.c.'""",,,,,,,,,,,
libuv,12,closed,closed,2011-04-18 09:48:37,227.55,0,4,0,,,,,,,,,,,,,
libuv,12,closed,reopened,2011-04-18 09:58:34,9.95,0,4,0,,,,,,,,,,,,,
libuv,12,closed,3,2011-04-18 06:01:04,36.72,,1,,"b""b' Ah"," okay. That makes sense.  i still would like to be called something else.'""",,,,,,,,,,,
libuv,12,closed,4,2011-04-18 06:01:04,143.47,,1,,"b'b\' I renamed the runner to just ""runner"".\''",,,,,,,,,,,,
libuv,12,closed,closed,2011-04-18 12:48:47,170.22,0,6,0,,,,,,,,,,,,,
libuv,12,closed,-,-,-,0,6,0,,,,,,,,,,,,,
libuv,13,closed,opened,2011-04-18 07:04:42,,,,,,,,,,,,,,,,,
libuv,13,closed,title,2011-04-18 07:04:42,00:00,,1,,"b""b' oio_accept() should require oio_tcp_handle_init() called before'""",,,,,,,,,,,,
libuv,13,closed,body,2011-04-18 07:04:42,00:00,,1,,"b""b' because it makes the system much simpler on unix'""",,,,,,,,,,,,
libuv,13,closed,1,2011-04-18 07:04:42,0.48,,,1,"b""b' test changed in 2ba25c8249f562d37c4dcc111111e55f647d08a3'""",,,,,,,,,,,,
libuv,13,closed,closed,2011-04-18 07:13:28,8.77,0,2,1,,,,,,,,,,,,,
libuv,13,closed,reopened,2011-04-18 09:49:13,155.75,0,2,1,,,,,,,,,,,,,
libuv,13,closed,2,2011-04-18 07:04:42,167.35,,1,,"b'b"" Isn\'t it possible to do call tcp_handle_init implicity from oio_accept on linux?On windows this complicates stuff because socket options are set and iocp association is made in tcp_handle_init.That work is wasted when you call oio_accept because the accepted socket is a different one.""'",,,,,,,,,,,,
libuv,13,closed,closed,2011-04-18 09:52:32,3.32,0,3,1,,,,,,,,,,,,,
libuv,13,closed,reopened,2011-04-18 10:06:04,13.53,0,3,1,,,,,,,,,,,,,
libuv,13,closed,3,2011-04-18 07:04:42,14.0,,1,,"b""b' ok i can do.'""",,,,,,,,,,,,
libuv,13,closed,closed,2011-04-18 10:19:25,13.35,0,4,1,,,,,,,,,,,,,
libuv,13,closed,4,2011-04-18 07:04:42,14.55,,1,,"b""b' did a force push just then. the actual fixing commit is c3eda7a4daea6036eecaac5f268a6b0f86cb9b82'""",,,,,,,,,,,,
libuv,13,closed,-,-,-,0,5,1,,,,,,,,,,,,,
libuv,16,closed,opened,2011-04-18 15:33:59,,,,,,,,,,,,,,,,,
libuv,16,closed,title,2011-04-18 15:33:59,00:00,,1,,"b""b' MinGW errors and Makefile?'""",,,,,,,,,,,,
libuv,16,closed,body,2011-04-18 15:33:59,00:00,,,1,"b""b' Hello", I was peeking into the project (heard from Rubinius guys at CodeConf) and was trying to build it using mingw-w64 GCC native on Windows. url  It seems there are only two supported builds: Unix Makefile, which depends on libev and Windows solution files for Visual Studio. Attempt to compile locally with it resulted in warnings and failure: url  Considering not everybody will use Visual Studio," perhaps adding a could help others to get started and help out? Thank you.'""",,,,,,,,,
libuv,16,closed,1,2011-04-18 15:33:59,40.57,,,1,"b'b"" The library and test runner now builds without error using MinGW. I didn\'t try with mingw-w64 as I don\'t have that on my machine and I\'m not installing it anytime soon. A makefile for MinGW builds _is_ welcome although it may be a little early to start maintaining that; I think it should be based on the linux makefile and I expect that one to change a lot.""'",,,,,,,,,,,,
libuv,16,closed,2,2011-04-18 15:33:59,5.6,,1,,"b""b' Can you tell me which version of MinGW did work for you? GCC 3.4.5", official build from : url  mingw-w64 in 32bits mode provides better headers, but normally everything should work. I can create a Makefile for it," but first need to get it to compile ;-)'""",,,,,,,,,
libuv,16,closed,3,2011-04-18 15:33:59,3.52,,,1,"b""b' Scratch that"," forgot to pull. Now both 3.4.5 and 4.7.0 experimental compiles perfectly. Will create a makefile and supply in a pull request. Thank you.'""",,,,,,,,,,,
libuv,16,closed,closed,2011-04-18 16:23:40,49.68,0,2,3,,,,,,,,,,,,,
libuv,16,closed,4,2011-04-18 15:33:59,52.98,1,,,"b'b\' I\\\'m changing a bit more because apparently the ""normal"" MinGW sucks.\''",,,,,,,,,,,,
libuv,16,closed,5,2011-04-18 15:33:59,72.05,,1,,"b'b"" can the makefile be the same as the linux one? i\'d like to attempt to setup a cross-compile env here""'",,,,,,,,,,,,
libuv,16,closed,6,2011-04-18 15:33:59,62.38,,1,,"b""b' @ry", yes, it could be the same," but dependencies on libev and files will need to be conditional. Let me think about it a bit more and will send a pull request.'""",,,,,,,,,
libuv,16,closed,7,2011-04-18 15:33:59,1.17,,1,,"b'b"" You\'ll also need to link with libws2_32.a"," and leave out libev.""'",,,,,,,,,,,
libuv,16,closed,reopened,2011-04-18 20:35:20,251.67,1,5,3,,,,,,,,,,,,,
libuv,16,closed,8,2011-04-18 15:33:59,1042.17,,1,,"b'b"" Hello", I was not able to associate a pull request and since my current makefile is incomplete, decided to gist it instead: url  It misses the benchmark tasks because I\'m unable to compile yet: Produces this: url  Also the makefile is able to provide basic cross-compiler support. Either you can compile natively on Windows or cross compile using mingw-w64 builds doing: That will prefix all gcc, ar and others to use the right ones. You can get mingw-w64 automated builds from their SourceForge page," under automated builds targeting Win32. url ""'",,,,,,,,
libuv,16,closed,closed,2011-05-09 14:45:46,1090.43,1,6,3,,,,,,,,,,,,,
libuv,16,closed,-,-,-,1,6,3,,,,,,,,,,,,,
libuv,18,closed,opened,2011-04-18 20:18:41,,,,,,,,,,,,,,,,,
libuv,18,closed,title,2011-04-18 20:18:41,00:00,,1,,"b""b' x-platform error handling'""",,,,,,,,,,,,
libuv,18,closed,body,2011-04-18 20:18:41,00:00,,,1,"b'b"" Need an API for it. Define error constants / strings / ... to unambiguously identify errors in a portable way.Retain the original error code somewhere so the platform\'s strerror / FormatMessage functionality can be used.Do it in a way that integrates nicely with node"," and play nice with other parts of node that also report system errors.""'",,,,,,,,,,,
libuv,18,closed,1,2011-04-18 20:18:41,529.3,1,,,"b'b"" I think we should define our own messages instead of using strerror. We do not need to retain the original code. I\'d like the error codes to be Unix-y"," e.g.  ""'",,,,,,,,,,,
libuv,18,closed,2,2011-04-18 20:18:41,266.33,,1,,"b""b' we will use int only for errors: 111536c9e567a08530516b904c6d7f34d307538a The library needs to have a [one-to-one mapping]url  from the OS error codes into the OIO error codes. This will allow strerror look ups given any _used_ OIO error code.'""",,,,,,,,,,,,
libuv,18,closed,3,2011-04-18 20:18:41,117.82,1,,,"b'b"" I agree that 1 to 1 mappnings would be ideal. The only thing is that windows has this:  So do you want to have OIO_EMFILE1 and OIO_EMFILE2? That sucks. I think it would be better if we left the error number untouched"," and then provide something like: Also maybe we shouldn\'t use int -users will be tempted to make assumptions.  ""'",,,,,,,,,,,
libuv,18,closed,4,2011-04-18 20:18:41,12.97,,1,,"b""b' Or we could not expose error numbers at all. Just use and to obtain a symbolic name and a description for the last error.'""",,,,,,,,,,,,
libuv,18,closed,5,2011-04-18 20:18:41,265.03,,1,,"b'b"" we should wrap the errnos for full control. i guess the mapping can\'t be one-to-one given your example"," but you\'ll still need a way to take OIO_EMFILE and pull it back to one of those two codes.""'",,,,,,,,,,,
libuv,18,closed,6,2011-04-18 20:18:41,14.8,,1,,"b""b' Sure. This is what I mean: we keep the original OS error number somewhere. We expose two apis", one that translates the error number to a cross-platform symbolic name," and another api that lets the os describe the error.'""",,,,,,,,,,
libuv,18,closed,closed,2011-04-19 16:24:56,1206.25,2,5,1,,,,,,,,,,,,,
libuv,18,closed,7,2011-04-18 20:18:41,4.7,,1,,"b""b' my pref would be for a single int. if you want then go ahead.'""",,,,,,,,,,,,
libuv,18,closed,reopened,2011-04-19 16:43:19,18.38,2,6,1,,,,,,,,,,,,,
libuv,18,closed,8,2011-04-18 20:18:41,14.3,,1,,"b'b\' Then that ""single int"" shall be the original OS error number.We provide an API for translating that to a platform independent error. I think the most convenient would be:  \''",,,,,,,,,,,,
libuv,18,closed,9,2011-04-18 20:18:41,5.58,,1,,"b'b"" I want the values of the codes to be cross platform otherwise we\'re leaking platform specific stuff into the program. We should have our own set of error descriptions.  (But obviously having some way of accessing the platform\'s error strings is going to be important for debugging.)  ""'",,,,,,,,,,,,
libuv,18,closed,10,2011-04-18 20:18:41,23.08,1,,,b'b\' Ok, so we could have:  Ok, but bear in mind that windows defines _a lot_ (several thousands) of error codes. So either we\\\'re going to ignore a lot of them, or we\\\'ll add a 100kb or more to the executable. Most of these errors you\\\'ll rarely see if ever," but when you _do_ encounter one and liboio only tells you ""unknown error""", debugging is going to suck bigtime. And it\\\'ll likely affect node users.\'',,,,,,,
libuv,18,closed,11,2011-04-18 20:18:41,324.4,,1,,"b'b"" OK some final details. We agreed that functions return 0 on success and -1 on failure.You want to store errors on a per-handle basis or globally? So would we use oio_last_error() or oio_last_error(handle) to obtain the error. The latter is less convenient but more flexible imho.What to do with callbacks that have an error parameter (currently connect_cb and close_cb). Should \'error\' be the actual error code or just 0|-1? I would vote for the second option.""'",,,,,,,,,,,,
libuv,18,closed,12,2011-04-18 20:18:41,10.92,,1,,"b""b' I think we should follow Windows and do i also vote for second option.'""",,,,,,,,,,,,
libuv,18,closed,closed,2011-04-20 00:47:59,484.67,3,10,1,,,,,,,,,,,,,
libuv,18,closed,-,-,-,3,10,1,,,,,,,,,,,,,
libuv,24,closed,opened,2011-04-19 15:06:29,,,,,,,,,,,,,,,,,
libuv,24,closed,title,2011-04-19 15:06:29,00:00,,1,,"b""b' Windows: allow the user to defer calling oio_accept'""",,,,,,,,,,,,
libuv,24,closed,1,2011-04-19 15:06:29,68.18,,1,,"b""b' it should be failing a test first. see #10.'""",,,,,,,,,,,,
libuv,24,closed,2,2011-04-19 15:06:29,394.2,,1,,"b""b' Test landed in c61b38f'""",,,,,,,,,,,,
libuv,24,closed,closed,2011-04-21 22:48:52,462.38,0,3,0,,,,,,,,,,,,,
libuv,24,closed,reopened,2011-04-21 22:49:01,0.15,0,3,0,,,,,,,,,,,,,
libuv,24,closed,3,2011-04-19 15:06:29,1402.72,,1,,"b""b' Landed in 2b07bc34ce46670bcb94'""",,,,,,,,,,,,
libuv,24,closed,closed,2011-05-04 22:11:35,1402.57,0,4,0,,,,,,,,,,,,,
libuv,24,closed,-,-,-,0,4,0,,,,,,,,,,,,,
libuv,25,closed,opened,2011-04-20 17:25:13,,,,,,,,,,,,,,,,,
libuv,25,closed,title,2011-04-20 17:25:13,00:00,,1,,"b""b' Build in Visual Studio Express 2010'""",,,,,,,,,,,,
libuv,25,closed,body,2011-04-20 17:25:13,00:00,,,1,b'b\' I\\\'ve been able to follow along find in Visual Studio Express 2010. Keeping the Visual Studio Projects at the Express level will make it easier to get new developers involved, since there is no cash requirement beyond the Windows license. With the latest Visual Studio solution file, there is a new feature in use,Solution Items, that is disabled on Visual Studio Express. The code appears to build," but the current branch is not building for other reasons. I\\\'m not sure what ""Solution Items"" are. I\\\'m waiting to see if I can still build in Express. If they are not a big win for other developers", if you were just trying something out, I\\\'m letting you know that it doesn\\\'t work in Express. I\\\'d like to keep this issue around, opened and closed, for general discussion of Visual Studio Express, if we continue to support it. If we don\\\'t, I\\\'d like to at least commit an alternative express compatible build in a subdirectory. If that\\\'s not cool, I suppose I can create a project that sits in a sibling directory.\''
libuv,25,closed,1,2011-04-20 17:25:13,2.5,,1,,"b""b' I agree"," if at all possible we should target Express.'""",,,,,,,,,,,
libuv,25,closed,2,2011-04-20 17:25:13,16.95,,1,,"b'b"" It currently doesn\'t build in express because it doesn\'t build at all.""'",,,,,,,,,,,,
libuv,25,closed,closed,2011-04-20 17:44:40,19.45,0,3,1,,,,,,,,,,,,,
libuv,25,closed,reopened,2011-04-20 17:44:49,0.15,0,3,1,,,,,,,,,,,,,
libuv,25,closed,3,2011-04-20 17:25:13,2.18,,1,,"b'b\' I know. I\\\'m noting that I get a warning message that ""Solution Items"" are not supported. An there is grayed area in the sidebar. I noting this before someone sinks eight hours into the perfect ""Solution Items"" configuration.\''",,,,,,,,,,,,
libuv,25,closed,4,2011-04-20 17:25:13,47.92,,1,,b'b\' VS express 2010 will be supported. If there are problems," you should indeed create a an issue. Wrt. the ""solution items""", it\\\'s just a stale reference. I\\\'ll remove it in a minute.\'',,,,,,,,,,
libuv,25,closed,closed,2011-04-20 18:35:44,50.92,0,5,1,,,,,,,,,,,,,
libuv,25,closed,5,2011-04-20 17:25:13,45.18,,,1,"b'b"" Thank you. If in the future there\'s a new issue"," I\'ll reopen this issue so that we can keep the conversation in one place.""'",,,,,,,,,,,
libuv,25,closed,6,2011-04-20 17:25:13,652.63,1,,,b'b\' I just cloned this," opened up a Visual Studio 2010 Express command prompt and typed """".  It failed to build any of the three projects (main"," test and benchmark) due to inability to find ""stdint.h"" for each. d:\\\\VCS\\\\GIT\\\\libuv-clone\\\\include\\\\uv.h(35): fatal error C1083: Cannot open include tory [D:\\\\VCS\\\\GIT\\\\libuv-clone\\\\]... I can get it to compile by making the following approximate addition in the three respective places", but it is clearly not the correct solution.     \\\'C:/Program Files (x86)/Microsoft Visual Studio 10.0/\\\',   ],\'',,,,,,,
libuv,25,closed,7,2011-04-20 17:25:13,686.93,,1,,b'b\' Okay, this was because it generated VC2008 Express solutions and projects," which do not appear to have ""stdint.h"".  Presumably if I can get it to use 2010 instead", it will just work.\'',,,,,,,,,
libuv,25,closed,8,2011-04-20 17:25:13,937.48,,1,,"b""b' Hi what is the status of this exactly?  I just cloned libuv and gyp generates vs2008 project files for me still. I have both vs2008 ultimate and 2010 ultimate installed. Is there a way to tell gyp to generate vs2010 project files?'""",,,,,,,,,,,,
libuv,25,closed,9,2011-04-20 17:25:13,201.33,,1,,"b""b' I figured out this is a gyp issue. I am posting here for other unfortunate souls who stumble upon the same issue: If multiple versions of Visual Studio are installed", gyp picks 2008 first, then 2005, then 2010 (as of time of this writing): url  To force gyp to generate VS 2010 projects, the easiest way is to set the GYP_MSVS_VERSION environment variable to 2010. url  Cheers,"-Nikolay'""",,,,,,,
libuv,25,closed,10,2011-04-20 17:25:13,1185.73,,,1,"b""b' The Nikolay post was really helpfull"," thanks.For others that stumble on this add this:set GYP_MSVS_VERSION=2010in the first lines of '""",,,,,,,,,,,
libuv,25,closed,11,2011-04-20 17:25:13,1118.33,,1,,"b""b' Fixed on #504'""",,,,,,,,,,,,
libuv,25,closed,-,-,-,1,9,3,,,,,,,,,,,,,
libuv,34,closed,opened,2011-04-27 11:27:23,,,,,,,,,,,,,,,,,
libuv,34,closed,title,2011-04-27 11:27:23,00:00,,1,,"b""b' Distinguish pending and nonpending requests'""",,,,,,,,,,,,
libuv,34,closed,body,2011-04-27 11:27:23,00:00,,1,,"b'b"" As discussed", oio_write, oio_read and oio_connect _might_ complete synchronously. When that happens the request callback will not be made. How do we tell the user that this happened? options: Return 0 on immediate completion, return -1 and set the last error to OIO_PENDING when the request pends. Return 0 on immediate completion, -1 on error, and -2 when the request pends. remarks: Maybe It\'s hard to imagine a situation where a connect completes immediately. However, the windows ConnectEx call I\'m making does not guarantee that the overlapped operation always returns WSA_IO_PENDING. Also it is not unexpected that connecting a pipe / fifo could be done synchronously.Implementations might choose to always report that a request is pending. For example," windows XP always reports completion asynchronously even if a request could be serviced immediately. (on later windowses this behavior can be specified with SetFileCompletionNotificationModes).""'",,,,,
libuv,34,closed,1,2011-04-27 11:27:23,150.47,,1,,"b'b"" also it does not call the callback on immediate completion. I like option one as it\'s more windows-y""'",,,,,,,,,,,,
libuv,34,closed,2,2011-04-27 11:27:23,4.25,,1,,"b'b\' ""When that happens the request callback will not be made."" I think we agreed on beforehand. :-)\''",,,,,,,,,,,,
libuv,34,closed,3,2011-04-27 11:27:23,6.95,,1,,"b""b' How do you get the return value of number of bytes read?'""",,,,,,,,,,,,
libuv,34,closed,4,2011-04-27 11:27:23,2.82,,1,,"b""b' Return it? Use int instead of size_t. Also merge the status and nread arguments for oio_read_cb"," make that an int too. People are not going to  '""",,,,,,,,,,,
libuv,34,closed,5,2011-04-27 11:27:23,2.78,,1,,"b""b' Why  ? Should be  '""",,,,,,,,,,,,
libuv,34,closed,6,2011-04-27 11:27:23,1.33,,1,,"b'b"" Oh yes that\'s okay -I wasn\'t aware of the existence of ssize_t.""'",,,,,,,,,,,,
libuv,34,closed,closed,2011-04-27 14:15:59,168.6,0,8,0,,,,,,,,,,,,,
libuv,34,closed,reopened,2011-04-27 14:16:03,0.07,0,8,0,,,,,,,,,,,,,
libuv,34,closed,7,2011-04-27 11:27:23,472.43,,1,,"b""b' This idea was dropped -all requests will complete async. Closing.'""",,,,,,,,,,,,
libuv,34,closed,closed,2011-05-04 22:08:25,472.37,0,9,0,,,,,,,,,,,,,
libuv,34,closed,-,-,-,0,9,0,,,,,,,,,,,,,
libuv,40,closed,opened,2011-05-17 04:25:23,,,,,,,,,,,,,,,,,
libuv,40,closed,title,2011-05-17 04:25:23,00:00,,1,,"b""b' remove some of these unnecessary status codes and int return values'""",,,,,,,,,,,,
libuv,40,closed,body,2011-05-17 04:25:23,00:00,,1,,"b""b' e.g on the uv_loop_cb what else?'""",,,,,,,,,,,,
libuv,40,closed,1,2011-05-17 04:25:23,505.92,1,,,"b'b"" uv_async_cb has the same useless status code. On windows uv_prepare|check|idle|timer_init can never fail", I don\'t know about unix. On windows ev_timer_start can fail if the btree is in inconsistent state. However I kill the loop if that happens, because it would probably mean that there is a bug in libuv or the user specified a nonexisting handle. We need to think about what checks uv functions do. E.g. do they check if the handle type is correct, do they check if the handle isn\'t closing, do they check if the socket is connected when doing a read," does it check whether a req is improperly reused?""'",,,,,,,
libuv,40,closed,closed,2011-05-17 12:51:18,505.92,1,2,0,,,,,,,,,,,,,
libuv,40,closed,reopened,2011-05-17 12:51:22,0.07,1,2,0,,,,,,,,,,,,,
libuv,40,closed,2,2011-05-17 04:25:23,496.13,,1,,"b""b' #1190 landed"," closing... :-)'""",,,,,,,,,,,
libuv,40,closed,closed,2014-03-17 21:07:26,496.07,1,3,0,,,,,,,,,,,,,
libuv,40,closed,-,-,-,1,3,0,,,,,,,,,,,,,
libuv,71,closed,opened,2011-06-28 12:19:24,,,,,,,,,,,,,,,,,
libuv,71,closed,title,2011-06-28 12:19:24,00:00,,1,,"b""b' src/ and include/ directories'""",,,,,,,,,,,,
libuv,71,closed,body,2011-06-28 12:19:24,00:00,,1,,"b""b' Please reorganize the project tree so that and are in include/ and the source files are in  . Patch should fix build systems on all platforms.'""",,,,,,,,,,,,
libuv,71,closed,1,2011-06-28 12:19:24,4.72,,1,,"b""b' wait until the multiplicity patch is landed.'""",,,,,,,,,,,,
libuv,71,closed,2,2011-06-28 12:19:24,640.22,,1,,"b""b' not waiting for multiplicity. @piscisaureus can you please review url  '""",,,,,,,,,,,,
libuv,71,closed,closed,2011-07-07 00:09:46,710.37,0,4,0,,,,,,,,,,,,,
libuv,71,closed,3,2011-06-28 12:19:24,65.8,,1,,"b""b' also here url '""",,,,,,,,,,,,
libuv,71,closed,reopened,2011-07-07 01:57:46,108.0,0,5,0,,,,,,,,,,,,,
libuv,71,closed,4,2011-06-28 12:19:24,108.0,1,,,"b""b' Sorry this is unreviewable. Can you explain to me what you have done?'""",,,,,,,,,,,,
libuv,71,closed,5,2011-06-28 12:19:24,6.12,,1,,"b'b"" i\'ve moved the public headers into a directory and source code into and updated the  ",  ," and  ""'",,,,,,,,,,
libuv,71,closed,6,2011-06-28 12:19:24,555.93,,1,,"b""b' Okay lgtm.I will make the necessary modifications to the msvc projects.'""",,,,,,,,,,,,
libuv,71,closed,7,2011-06-28 12:19:24,330.27,,1,,"b""b' complete in 81bb15feed871a3f7fc91ce608b378ce0a6f86bc'""",,,,,,,,,,,,
libuv,71,closed,closed,2011-07-07 16:50:28,892.7,1,8,0,,,,,,,,,,,,,
libuv,71,closed,-,-,-,1,8,0,,,,,,,,,,,,,
libuv,109,closed,opened,2011-07-13 16:30:38,,,,,,,,,,,,,,,,,
libuv,109,closed,title,2011-07-13 16:30:38,00:00,,1,,"b'b"" libuv doesn\'t compile on VC++ express""'",,,,,,,,,,,,
libuv,109,closed,body,2011-07-13 16:30:38,00:00,,,1,"b'b"" after ares was added\\xef\\xbc\\x8clibuv doesn\'t compile using VCExpress 2010\\xef\\xbc\\x88WIN32\\xef\\xbc\\x89","message after open sln: C:\\\\Users\\\\meegogo\\\\Desktop\\\\joyent-libuv-9c19391\\\\msvs\\\\ : warning  : Platform \'x64\' referenced in the project file \'libuv\' cannot be found. Please make sure you have it installed under \'%VCTargetsPath%\\\\Platforms\\\\x64\'. C:\\\\Users\\\\meegogo\\\\Desktop\\\\joyent-libuv-9c19391\\\\msvs\\\\libuv: warning  : Platform \'x64\' referenced in the project file \'libuv-test\' cannot be found. Please make sure you have it installed under \'%VCTargetsPath%\\\\Platforms\\\\x64\'. C:\\\\Users\\\\meegogo\\\\Desktop\\\\joyent-libuv-9c19391\\\\msvs\\\\libuv: warning  : Platform \'x64\' referenced in the project file \'libuv-benchmark\' cannot be found. Please make sure you have it installed under \'%VCTargetsPath%\\\\Platforms\\\\x64\'. C:\\\\Users\\\\meegogo\\\\Desktop\\\\joyent-libuv-9c19391\\\\msvs\\\\c: warning  : Platform \'x64\' referenced in the project file \'c-ares\' cannot be found. Please make sure you have it installed under \'%VCTargetsPath%\\\\Platforms\\\\x64\'. error message after trying to build the ""'",,,,,,,,,,,
libuv,109,closed,1,2011-07-13 16:30:38,1305.97,,1,,"b'b\' I solved the ""The project file \\\' \\\' has been renamed or is no longer in the solution"" problem by deleting the included solution file and creating a new one", adding all projects back. The x64 platform warnings can probably be ignored.\'',,,,,,,,,,,
libuv,109,closed,2,2011-07-13 16:30:38,1120.28,,1,,"b'b"" tried","didn\'t work""'",,,,,,,,,,,
libuv,109,closed,closed,2011-08-04 08:56:53,986.25,0,3,1,,,,,,,,,,,,,
libuv,109,closed,reopened,2011-08-04 08:57:00,0.12,0,3,1,,,,,,,,,,,,,
libuv,109,closed,3,2011-07-13 16:30:38,48.07,,1,,"b""b' @meegogo there has been a lot of work on the windows build structure"," could you try again with latest master tree and confirm if this problem is still reproducable?'""",,,,,,,,,,,
libuv,109,closed,closed,2012-03-15 01:56:20,1019.33,0,4,1,,,,,,,,,,,,,
libuv,109,closed,-,-,-,0,4,1,,,,,,,,,,,,,
libuv,160,closed,opened,2011-08-30 09:49:08,,,,,,,,,,,,,,,,,
libuv,160,closed,title,2011-08-30 09:49:08,00:00,,1,,"b""b' Adding the way to set affinity'""",,,,,,,,,,,,
libuv,160,closed,body,2011-08-30 09:49:08,00:00,,1,,"b""b' I would like to add a possibility of  affinity for each spawned process. I want to:extend uv_process_options_t to contain an array(?) of cores to set process affinity to","add functions to  affinity on given process What you think?'""",,,,,,,,,,,
libuv,160,closed,1,2011-08-30 09:49:08,27.58,,1,,"b""b' can you suggest some API?'""",,,,,,,,,,,,
libuv,160,closed,2,2011-08-30 09:49:08,197.05,,1,,"b""b' Extend uv_process_options_t with unsigned long cpu_affinity? int uv_set_affinity(uv_process_t\\\\* process", unsigned long cpu_affinity);int uv_get_affinity(uv_process_t\\\\* process," unsigned long cpu_affinity*); EDIT: Missclicked comment & close.'""",,,,,,,,,,
libuv,160,closed,closed,2011-08-30 13:33:46,224.63,0,4,0,,,,,,,,,,,,,
libuv,160,closed,reopened,2011-08-30 13:33:50,0.07,0,4,0,,,,,,,,,,,,,
libuv,160,closed,3,2011-08-30 09:49:08,712.35,,1,,"b'b"" Closing"," we\'re not going to do this.""'",,,,,,,,,,,
libuv,160,closed,closed,2012-03-15 01:26:07,712.28,0,5,0,,,,,,,,,,,,,
libuv,160,closed,-,-,-,0,5,0,,,,,,,,,,,,,
libuv,172,closed,opened,2011-09-02 18:45:39,,,,,,,,,,,,,,,,,
libuv,172,closed,title,2011-09-02 18:45:39,00:00,,1,,"b""b' Encoding specification in API'""",,,,,,,,,,,,
libuv,172,closed,body,2011-09-02 18:45:39,00:00,1,,,b'b\' The API should be capable of accepting Unicode strings in file names and paths, domain names, error messages, command line arguments. Currently," those strings are just defined as ""char *"" which says nothing about the expected encoding.\''",,,,,,,,
libuv,172,closed,1,2011-09-02 18:45:39,426.43,,1,,"b""b' Fixed in 72b5976. Possibly needs documenting in uv.h. @piscisaureus or @igorzi?'""",,,,,,,,,,,,
libuv,172,closed,closed,2012-03-15 01:52:05,426.43,1,2,0,,,,,,,,,,,,,
libuv,172,closed,reopened,2012-03-15 14:44:13,772.13,1,2,0,,,,,,,,,,,,,
libuv,172,closed,2,2011-09-02 18:45:39,773.32,,1,,b'b\' This issue is valid it\\\'s a documentation bug. We should document that on windows filenames (and other stuff) are expected to be in utf-8," whereas on unix the ""terminal encoding"" (for tty) or ""binary"" strings are expected.\''",,,,,,,,,,,
libuv,172,closed,3,2011-09-02 18:45:39,59.43,1,,,"b'b"" This issue is _not_ issue #201. Here I\'m talking about encoding in other areas than just the file I/O: domain names", error messages," command line arguments. Please add references to others commits if those are fixed too.""'",,,,,,,,,,
libuv,172,closed,4,2011-09-02 18:45:39,9.28,1,,,"b'b"" Domain names: utf8 (probably just ascii) on windows", don\'t know about unixError messages: asciiCommand line arguments: utf8 on windows," binary on unix.""'",,,,,,,,,,
libuv,172,closed,5,2011-09-02 18:45:39,4.53,,1,,"b""b' A restricted subset of ASCII on all platforms.'""",,,,,,,,,,,,
libuv,172,closed,6,2011-09-02 18:45:39,986.65,1,,,"b""b' Closing old stalled issues"," please reopen at url  if still needed.'""",,,,,,,,,,,
libuv,172,closed,closed,2014-11-26 08:25:19,1061.1,4,4,0,,,,,,,,,,,,,
libuv,172,closed,-,-,-,4,4,0,,,,,,,,,,,,,
libuv,195,closed,opened,2011-09-22 06:56:50,,,,,,,,,,,,,,,,,
libuv,195,closed,title,2011-09-22 06:56:50,00:00,,1,,"b""b' CFLAGS from environment'""",,,,,,,,,,,,
libuv,195,closed,body,2011-09-22 06:56:50,00:00,,1,,"b""b' Inherit CFLAGS from environment'""",,,,,,,,,,,,
libuv,195,closed,1,2011-09-22 06:56:50,450.78,,1,,"b'b"" I\'ll merge it but can you sign [the CLA]url ""'",,,,,,,,,,,,
libuv,195,closed,2,2011-09-22 06:56:50,15.65,,1,,"b""b' Signed"," using the google form'""",,,,,,,,,,,
libuv,195,closed,closed,2011-09-22 14:43:16,466.43,0,4,0,,,,,,,,,,,,,
libuv,195,closed,reopened,2011-09-22 15:16:15,32.98,0,4,0,,,,,,,,,,,,,
libuv,195,closed,3,2011-09-22 06:56:50,55.37,,,1,"b""b' Thanks"," Marek. Merged in d9fb84c.'""",,,,,,,,,,,
libuv,195,closed,closed,2011-09-22 15:38:38,22.38,0,4,1,,,,,,,,,,,,,
libuv,195,closed,-,-,-,0,4,1,,,,,,,,,,,,,
libuv,206,closed,opened,2011-10-01 02:25:56,,,,,,,,,,,,,,,,,
libuv,206,closed,title,2011-10-01 02:25:56,00:00,,1,,"b""b' -common.c:92: uv_err_name: Assertion '""",,,,,,,,,,,,
libuv,206,closed,body,2011-10-01 02:25:56,00:00,,1,,"b""b' my node  is breaking from time to time with this error: -common.c:92: uv_err_name: Assertion '""",,,,,,,,,,,,
libuv,206,closed,1,2011-10-01 02:25:56,1165.8,,1,,"b""b' Try this: Post the backtrace here.'""",,,,,,,,,,,,
libuv,206,closed,2,2011-10-01 02:25:56,1.68,,1,,"b'b"" Oh"," and make sure you build Node with (and substitute node with node_g). The release build doesn\'t have debug symbols so the backtrace won\'t be very enlightening.""'",,,,,,,,,,,
libuv,206,closed,3,2011-10-01 02:25:56,11.62,,1,,"b""b' ok i will try that and post what i find out... how do i (and substitute node with node_g). ? node_g  ? or gdb args node  ?'""",,,,,,,,,,,,
libuv,206,closed,4,2011-10-01 02:25:56,10.22,,,1,"b'b"" Program received signal SIGPIPE", Broken pipe.[Switching to Thread 0x7fabbdf6c6f0 (LWP 18634)]0x00007fabbc7b275b in write () from / (gdb) backtrace#0  0x00007fabbc7b275b in write () from /#1  0x0000000000803a5a in uv__write (stream=0x1d16208) at :354#2  0x00000000008048b3 in uv_write (req=0x1cd9d88, stream=0x1d16208, bufs=0x7fffa250af30,   bufcnt=1," cb=0x54a320 )  at :730#3  0x000000000054a678 in node::StreamWrap::Write (args=)  at ../:242#4  0x00000817031d9b2a in ?? ()#5  0x00007fffa250afd0 in ?? ()#6  0x00007fffa250afd8 in ?? ()#7  0x0000000000000001 in ?? ()#8  0x0000000000000000 in ?? () then i start it over and get: :48    throw arguments[1]; // Unhandled \'error\' event    ^Error: accept ENOTCONN  at errnoException (net_:561:11)  at  (net_:707:17) Program exited with code 01. backtrace gives no stack""'",,,,,,,
libuv,206,closed,5,2011-10-01 02:25:56,7.95,,,1,"b""b' another one:Program received signal SIGPIPE", Broken pipe.[Switching to Thread 0x7fceb97926f0 (LWP 23027)]0x00007fceb7fd875b in write () from /(gdb) backtrace#0  0x00007fceb7fd875b in write () from /#1  0x0000000000803a5a in uv__write (stream=0xf025f8) at :354#2  0x00000000008048b3 in uv_write (req=0xf22e78, stream=0xf025f8, bufs=0x7fffa2762830,   bufcnt=1," cb=0x54a320 )  at :730#3  0x000000000054a678 in node::StreamWrap::Write (args=)  at ../:242#4  0x000001eedc0ee7ca in ?? ()#5  0x00007fffa27628d0 in ?? ()#6  0x00007fffa27628d8 in ?? ()#7  0x0000000000000001 in ?? ()#8  0x0000000000000000 in ?? ()'""",,,,,,,
libuv,206,closed,6,2011-10-01 02:25:56,15.53,,1,,"b""b' now i compiled the  stable version with debug.. works longer. but comes up with this: [New Thread 0x7f2a70fbd6f0 (LWP 25400)] Program received signal SIGPIPE"," Broken pipe.[Switching to Thread 0x7f2a70fbd6f0 (LWP 25400)]0x00007f2a6f803720 in __write_nocancel () from /(gdb) backtrace#0  0x00007f2a6f803720 in __write_nocancel () from /#1  0x000000000052ba8d in Write (args=@0x7fffd46912e0) at ../:988#2  0x0000000000582ec3 in v8::internal::Builtin_HandleApiCall ()#3  0x00007f2a4b28c24a in ?? ()#4  0x0000000000beafc0 in ?? ()#5  0x00007f2a4b28c1c1 in ?? ()#6  0x00007fffd4691360 in ?? ()#7  0x00007fffd46913d0 in ?? ()#8  0x00007f2a4b2c5e30 in ?? ()#9  0x00007f2a4b242b31 in ?? ()#10 0x00000acd00000000 in ?? ()#11 0x0000000000000000 in ?? ()'""",,,,,,,,,,,
libuv,206,closed,7,2011-10-01 02:25:56,24.3,,1,,b'b\' $ gdb args node / proxyGNU gdb (GDB) Fedora (7.3-43.fc15)Copyright (C) 2011 Free Software Foundation, Inc.License GPLv3+: GNU GPL version 3 or later url This is free software: you are free to change and redistribute it.There is NO WARRANTY," to the extent permitted by law.  Type ""show copying""and ""show warranty"" for details.This GDB was configured as ""i686-redhat-linux-gnu"".For bug reporting instructions", please see:url Reading symbols from /.(gdb) break uv-common.c:92Breakpoint 1 at 0x8409807: file -common.c, line 92.(gdb) handle SIGPIPE nostop noprint passSignal    Stop  Print Pass to program DescriptionSIGPIPE   No  No  Yes   Broken pipe(gdb) runStarting program: / / proxy[Thread debugging using libthread_db enabled][New Thread 0xb7fb7b70 (LWP 20914)][New Thread 0xb777bb70 (LWP 20915)]  \'',,,,,,,,
libuv,206,closed,8,2011-10-01 02:25:56,2.63,,,1,"b""b' another one node v0.4.12 Program received signal SIGPIPE"," Broken pipe.[Switching to Thread 0x7fe5dda596f0 (LWP 28196)]0x00007fe5dc29f75b in write () from /(gdb) backtrace#0  0x00007fe5dc29f75b in write () from /#1  0x000000000052ba8d in Write (args=@0x7fff8b391510) at ../:988#2  0x0000000000582ec3 in v8::internal::Builtin_HandleApiCall ()#3  0x00007fe5b7d2824a in ?? ()#4  0x00007fe5b7683f09 in ?? ()#5  0x00007fe5b7d281c1 in ?? ()#6  0x00007fff8b391590 in ?? ()#7  0x00007fff8b391600 in ?? ()#8  0x00007fe5b7d61e30 in ?? ()#9  0x00007fe5b7cdeb31 in ?? ()#10 0x0000015800000000 in ?? ()#11 0x0000000000000000 in ?? ()'""",,,,,,,,,,,
libuv,206,closed,9,2011-10-01 02:25:56,1.77,,,1,"b""b' Program received signal SIGPIPE"," Broken pipe.[Switching to Thread 0x7fa7f67de6f0 (LWP 32186)]0x00007fa7f5024720 in __write_nocancel () from /(gdb) backtrace#0  0x00007fa7f5024720 in __write_nocancel () from /#1  0x000000000052ba8d in Write (args=@0x7fffa80535c0) at ../:988#2  0x0000000000582ec3 in v8::internal::Builtin_HandleApiCall ()#3  0x00007fa7d0aae24a in ?? ()#4  0x00007f0100000001 in ?? ()#5  0x00007fa7d0aae1c1 in ?? ()#6  0x00007fffa8053640 in ?? ()#7  0x00007fffa80536b0 in ?? ()#8  0x00007fa7d0aead10 in ?? ()#9  0x00007fa7d0a66bc1 in ?? ()#10 0x0000017800000000 in ?? ()#11 0x0000000000000000 in ?? ()'""",,,,,,,,,,,
libuv,206,closed,10,2011-10-01 02:25:56,6.58,,1,,"b""b' From the kernel sources: As I can sometimes reproduce the error by disconnecting and then reconnecting the network interface while streaming stuff from nodejs"," this seems like it could be it.'""",,,,,,,,,,,
libuv,206,closed,11,2011-10-01 02:25:56,5.33,,,1,"b'b"" Do those SIGPIPE errors really matter? I used to get the interesting data... but then again"," I don\'t know much about C or gdb or anything from that topic.""'",,,,,,,,,,,
libuv,206,closed,12,2011-10-01 02:25:56,7.07,,1,,"b""b' ok trying it also with handle sigpipe...'""",,,,,,,,,,,,
libuv,206,closed,13,2011-10-01 02:25:56,3.32,,1,,"b'b"" Actually", I\'m not so sure about that disconnecting and then reconnecting the network interface thing being the cause, it randomly crashes now without me manually disrupting it," too.""'",,,,,,,,,
libuv,206,closed,14,2011-10-01 02:25:56,990.77,,1,,"b""b' I got that error on 0.5.9 with a very tiny  server"," too. So i guess it is triggered by something in . (there are no other dependencies and i never assert anything in the other 30 lines that power the server)'""",,,,,,,,,,,
libuv,206,closed,15,2011-10-01 02:25:56,6.33,,1,,"b""b' Can one you guys run your script through strace (i.e.  ) and post the output?'""",,,,,,,,,,,,
libuv,206,closed,16,2011-10-01 02:25:56,1044.12,,1,,"b""b' [Here you go.]url This was run on: Linux live-059 2.6.32-33-server # 72-Ubuntu SMP Fri Jul 29 21:21:55 UTC 2011 x86_64 with this [script]url '""",,,,,,,,,,,,
libuv,206,closed,17,2011-10-01 02:25:56,224.78,,1,,"b""b' @The two possible culprits I see in the strace log are ECONNRESET and EPIPE but both are handled in libuv.  Can you try this? EDIT: if you upgrade to master.'""",,,,,,,,,,,,
libuv,206,closed,18,2011-10-01 02:25:56,131.52,,1,,"b""b' do i need to recompile node with special parameters if i want to do this?'""",,,,,,,,,,,,
libuv,206,closed,19,2011-10-01 02:25:56,16.18,,1,,"b""b'   <builds node_g'""",,,,,,,,,,,,
libuv,206,closed,20,2011-10-01 02:25:56,1149.02,,,1,"b'b""   Little context"," this only happens when running  . Non-keepalive works fine. The code being performance tested is Connect\'s staticCache. It should be serving the requested jpeg from memory.""'",,,,,,,,,,,
libuv,206,closed,21,2011-10-01 02:25:56,227.82,,,1,"b""b' @ryanrolds: Thanks. Not sure how that can happen. Will investigate.'""",,,,,,,,,,,,
libuv,206,closed,22,2011-10-01 02:25:56,192.53,,1,,"b""b' If you need more information"," just ask.'""",,,,,,,,,,,
libuv,206,closed,23,2011-10-01 02:25:56,98.95,,1,,"b'b"" Confirming that I\'m experiencing the same issue in 0.5.10rc2.""'",,,,,,,,,,,,
libuv,206,closed,24,2011-10-01 02:25:56,128.98,,,1,"b""b' Hello", With v0.5.11-pre is the same problem, but with -common.c:94. The result of gdbs is:Breakpoint 1, uv_err_name (err=...) at -common.c:94warning: Source file is more recent than executable.94    assert(0);(gdb) backtrace#0  uv_err_name (err=...) at -common.c:94#1  0x0815a665 in node::SetErrno (err=...) at ../:1098#2  0x0817d81c in node::StreamWrap::AfterWrite (req=0x69, status=-1)  at ../:337#3  0x0845264d in uv__write_callbacks (stream=0x8a17e58)  at :476#4  0x08452f70 in uv__stream_io (loop=0x86631a0, watcher=0x8a17ebc, revents=2)  at :677#5  0x0845878d in ev_invoke_pending (loop=0x86631a0) at :2143#6  0x08459347 in ev_run (loop=0x86631a0, flags=0) at :2519#7  0x0844a292 in uv_run (loop=0x8662f20) at :188#8  0x0815d9ec in node::Start (argc=3, argv=0x69) at ../:2532#9  0x081566bb in main (argc=3," argv=0xbffff0e4) at ../:25(gdb)'""",,,
libuv,206,closed,25,2011-10-01 02:25:56,1389.48,,1,,"b""b' confirming in 0.6'""",,,,,,,,,,,,
libuv,206,closed,26,2011-10-01 02:25:56,27.3,,1,,"b""b' the error code failing is 104"," which under linux is connection reset: adding an additional reset to the uv_error_code enum in uv.h: and adding a case to uv_err_name in uv-common.c: fixes the assertion failure and allows node to recover correctly. connection reset appears to occur under heavy load.'""",,,,,,,,,,,
libuv,206,closed,27,2011-10-01 02:25:56,70.03,1,,,"b""b' We should the bad error code '""",,,,,,,,,,,,
libuv,206,closed,28,2011-10-01 02:25:56,4.12,,1,,"b""b' @ry did that", error code was 104 (linux connection reset).  i added it to the maps," but the patch got rejected.'""",,,,,,,,,,
libuv,206,closed,29,2011-10-01 02:25:56,1434.53,,1,,"b""b' Looks like same issue on ubuntu 11.10"," node 0.6.1-pre (updated from master branch and recompiled). node: -common.c:58: uv_err_name: Assertion '""",,,,,,,,,,,
libuv,206,closed,30,2011-10-01 02:25:56,257.88,,1,,"b""b' this issue was fixed in fd2b04d784d6cc10ca985a5548835310622bda50'""",,,,,,,,,,,,
libuv,206,closed,closed,2011-11-11 02:44:06,18.17,1,23,8,,,,,,,,,,,,,
libuv,206,closed,31,2011-10-01 02:25:56,971.23,,1,,"b""b' node: -common.c:58: uv_err_name: Assertion '""",,,,,,,,,,,,
libuv,206,closed,reopened,2011-11-13 19:48:12,1024.1,1,24,8,,,,,,,,,,,,,
libuv,206,closed,32,2011-10-01 02:25:56,864.15,,1,,"b""b' same problem with @pyrostrex. node 0.6.1 on REHL 5.3node cluster is used.'""",,,,,,,,,,,,
libuv,206,closed,33,2011-10-01 02:25:56,738.93,,1,,"b""b' I also got a broken pipe:  '""",,,,,,,,,,,,
libuv,206,closed,34,2011-10-01 02:25:56,55.52,,1,,"b""b' SIGPIPE should be ignored... url '""",,,,,,,,,,,,
libuv,206,closed,35,2011-10-01 02:25:56,7.17,,1,,"b'b"" It\'s an artefact of how gdb reports some signals: it reports them even if the program ignores them. makes gdb ignore them as well.""'",,,,,,,,,,,,
libuv,206,closed,36,2011-10-01 02:25:56,946.6,,1,,"b""b' It turns out"," it is not because of cluster. I tried to turn off cluster but it still raise up.'""",,,,,,,,,,,
libuv,206,closed,37,2011-10-01 02:25:56,307.38,,1,,"b'b"" @ry Are you okay with applying the patch below as a band aid? It doesn\'t fix the root issue (unmapped errors) but at least it gives people a chance to handle the error themselves.  ""'",,,,,,,,,,,,
libuv,206,closed,38,2011-10-01 02:25:56,37.22,,1,,"b'b"" I want to root cause this. They shouldn\'t be seeing this error now that all of the errnos are mapped.""'",,,,,,,,,,,,
libuv,206,closed,39,2011-10-01 02:25:56,165.32,,1,,"b""b' Confirmed to be still happening with nodeJS 0.6.1: node: -common.c:58: uv_err_name: Assertion '""",,,,,,,,,,,,
libuv,206,closed,40,2011-10-01 02:25:56,448.85,,1,,"b'b"" please insert a printf there and tell us the code: you\'ll need to do  ""'",,,,,,,,,,,,
libuv,206,closed,41,2011-10-01 02:25:56,7.95,1,,,"b""b' In future", do not debug hard," maybe you put this patch in the repository?Will be simple to communicate only error code without using gdb.'""",,,,,,,,,,
libuv,206,closed,42,2011-10-01 02:25:56,491.93,1,,,"b""b' bad  = 104node: -common.c:59: uv_err_name: Assertion '""",,,,,,,,,,,,
libuv,206,closed,43,2011-10-01 02:25:56,139.7,,1,,"b""b' here is from the bt full:  '""",,,,,,,,,,,,
libuv,206,closed,closed,2011-11-16 21:02:44,74.53,3,34,8,,,,,,,,,,,,,
libuv,206,closed,44,2011-10-01 02:25:56,241.05,,1,,"b""b' Updated Node v0.6 branch with this fix in @44314ccf48332c91db57a53d5fc0e3de48642681'""",,,,,,,,,,,,
libuv,206,closed,45,2011-10-01 02:25:56,969.28,,1,,"b""b' Got this on node v0.6.1: PROCESS TITLE: -common.c:58: uv_err_name: Assertion '""",,,,,,,,,,,,
libuv,206,closed,46,2011-10-01 02:25:56,1117.97,,1,,"b""b' @daniel-j Yes"," use the newest node v0.6.'""",,,,,,,,,,,
libuv,206,closed,47,2011-10-01 02:25:56,1133.77,,1,,"b""b' I am getting this often on my  v0.6.17'""",,,,,,,,,,,,
libuv,206,closed,48,2011-10-01 02:25:56,1146.62,,1,,"b'b"" @veeru-as On what platform? If you\'re on a UNIX"," can you try this: Please post the output.""'",,,,,,,,,,,
libuv,206,closed,-,-,-,3,39,8,,,,,,,,,,,,,
libuv,213,closed,opened,2011-10-06 13:03:15,,,,,,,,,,,,,,,,,
libuv,213,closed,title,2011-10-06 13:03:15,00:00,,1,,"b""b' FreeBSD: Fix FreeBSD build.'""",,,,,,,,,,,,
libuv,213,closed,body,2011-10-06 13:03:15,00:00,,1,,"b'b"" Fix FreeBSD 8 build. Still fails 3 tests. I\'ll look into it later..Fatal error in -tcp-close.c on line 151: never_cb should never be calledAssertion failed in -udp-ipv6.c on line 142: recv_cb_called == 1Assertion failed in -pipe-bind-error.c on line 56: r == -1""'",,,,,,,,,,,,
libuv,213,closed,1,2011-10-06 13:03:15,13.1,,1,,"b'b"" Right that\'s Darwin code"," not FreeBSD code. I\'ll merge it but can you sign [the CLA]url ""'",,,,,,,,,,,
libuv,213,closed,2,2011-10-06 13:03:15,8.02,,1,,"b'b"" PS: and are known broken (not specific to FreeBSD). fails because the dual-stack UDP server doesn\'t receive datagrams from the IPv4 client.""'",,,,,,,,,,,,
libuv,213,closed,3,2011-10-06 13:03:15,44.68,,1,,"b""b' I did.'""",,,,,,,,,,,,
libuv,213,closed,closed,2011-10-06 14:09:03,65.8,0,5,0,,,,,,,,,,,,,
libuv,213,closed,reopened,2011-10-06 14:09:16,0.22,0,5,0,,,,,,,,,,,,,
libuv,213,closed,4,2011-10-06 13:03:15,1.22,1,,,"b""b' Yup"," tapped wrong place.. sorry.'""",,,,,,,,,,,
libuv,213,closed,5,2011-10-06 13:03:15,52.58,,,1,"b""b' Thanks"," much appreciated. Merged in d1016de.'""",,,,,,,,,,,
libuv,213,closed,closed,2011-10-06 15:02:51,53.58,1,5,1,,,,,,,,,,,,,
libuv,213,closed,-,-,-,1,5,1,,,,,,,,,,,,,
libuv,229,closed,opened,2011-10-28 12:05:06,,,,,,,,,,,,,,,,,
libuv,229,closed,title,2011-10-28 12:05:06,00:00,,1,,"b""b' fixed  write data overwrites the old data  when open a file with O_APPEND flag.'""",,,,,,,,,,,,
libuv,229,closed,body,2011-10-28 12:05:06,00:00,,1,,"b""b' fixed  write data overwrites the old data  when open a file with O_APPEND flag.'""",,,,,,,,,,,,
libuv,229,closed,1,2011-10-28 12:05:06,130.13,,1,,"b""b' @piscisaureus and @igorzi: Looks OK to me. Test passes on UNIX.'""",,,,,,,,,,,,
libuv,229,closed,2,2011-10-28 12:05:06,225.78,,,1,"b""b' Looks good.'""",,,,,,,,,,,,
libuv,229,closed,3,2011-10-28 12:05:06,148.3,,,1,"b'b"" @runner-mei: Thanks"," I\'ll merge it. Can you sign [the CLA]url ""'",,,,,,,,,,,
libuv,229,closed,4,2011-10-28 12:05:06,179.77,,1,,"b""b' how to sign the CLA?'""",,,,,,,,,,,,
libuv,229,closed,5,2011-10-28 12:05:06,18.18,,1,,"b""b' Go to [this part]url  fill in your details and submit it (there are other options", like printing, signing and e-mailing it," but doing it electronically is the most convenient one).'""",,,,,,,,,
libuv,229,closed,6,2011-10-28 12:05:06,279.55,,1,,"b""b' I sign it'""",,,,,,,,,,,,
libuv,229,closed,7,2011-10-28 12:05:06,444.53,,,1,"b""b' Note that this patch does not completely solve the problem", when the call fs__write with offset != -1," there will still be the problem.'""",,,,,,,,,,
libuv,229,closed,8,2011-10-28 12:05:06,275.08,,1,,"b'b"" I don\'t like the patch. We should specify the correct flags for CreateFile instead. From a user comment at the[CreateFile documentation page]url ""'",,,,,,,,,,,,
libuv,229,closed,9,2011-10-28 12:05:06,1167.48,,1,,"b""b' Oh", you have a better way," then I closed it. Please fix it as soon as possible.'""",,,,,,,,,,
libuv,229,closed,closed,2011-11-03 11:53:55,1428.82,0,8,3,,,,,,,,,,,,,
libuv,229,closed,reopened,2011-11-04 13:44:28,110.55,0,8,3,,,,,,,,,,,,,
libuv,229,closed,10,2011-10-28 12:05:06,615.97,,1,,"b""b' This was landed in fe97c4dc63552ac830a82340f1c59c2a8bdfafe1.'""",,,,,,,,,,,,
libuv,229,closed,closed,2011-11-04 22:09:53,505.42,0,9,3,,,,,,,,,,,,,
libuv,229,closed,-,-,-,0,9,3,,,,,,,,,,,,,
libuv,256,closed,opened,2011-11-23 06:40:55,,,,,,,,,,,,,,,,,
libuv,256,closed,title,2011-11-23 06:40:55,00:00,,1,,"b""b' Enable omitting pages from filesystem cache  read'""",,,,,,,,,,,,
libuv,256,closed,body,2011-11-23 06:40:55,00:00,,1,,"b'b"" Necessary when reading a large number of files exactly once", as for backup or indexing or synchronization. On Linux, posix_fadvise() provides this. I don\'t believe it\'s in libeio. Note," on ARM Linux the syscall is  ""'",,,,,,,,,
libuv,256,closed,closed,2011-11-28 01:07:04,1106.15,0,2,0,,,,,,,,,,,,,
libuv,256,closed,1,2011-11-23 06:40:55,1315.08,,,1,"b""b' This would be worth adding to fs-ext rather than node core. Patches are always welcome.'""",,,,,,,,,,,,
libuv,256,closed,2,2011-11-23 06:40:55,58.18,,1,,"b'b"" I don\'t understand why it doesn\'t belong in libuv. Flagging whether or not to impact the filesystem cache is required for any procedure reading a large number of files once each (backup", indexing, synchronization). Please reopen," unless this is covered by another issue.""'",,,,,,,,,
libuv,256,closed,3,2011-11-23 06:40:55,13.67,1,,,"b'b"" It\'s probably hard to do cross platform and isn\'t really necessary for core use of node. Honestly there are WAY more important things that should be in core than this (flock"," for example).""'",,,,,,,,,,,
libuv,256,closed,4,2011-11-23 06:40:55,16.55,,,1,"b""b' The fact that the APIs are so different on unix & windows is a strong argument to do this in libuv. At least writing an flock binding is trivial for all platforms.'""",,,,,,,,,,,,
libuv,256,closed,5,2011-11-23 06:40:55,499.78,1,,,"b'b\' Flock is probably equivalently ""hard"".\''",,,,,,,,,,,,
libuv,256,closed,6,2011-11-23 06:40:55,285.05,,1,,"b'b"" Oh"," I\'d thought it or fcntl were common C lib functions; apparently not...""'",,,,,,,,,,,
libuv,256,closed,reopened,2011-11-30 10:12:31,545.45,2,4,2,,,,,,,,,,,,,
libuv,256,closed,7,2011-11-23 06:40:55,427.3,,1,,"b'b"" I don\'t see a pressing need to add this to libuv. Closing unless you can convince me otherwise.""'",,,,,,,,,,,,
libuv,256,closed,closed,2012-03-15 02:16:32,964.02,2,5,2,,,,,,,,,,,,,
libuv,256,closed,8,2011-11-23 06:40:55,96.73,,,1,"b'b"" Some apps need to read a potentially large tree of files", each exactly once, for synchronization or backup purposes, which will wipe out the file cache," unless this feature is available. I\'d be glad to provide a patch. (Tho won\'t get to it for a while yet.)""'",,,,,,,,
libuv,256,closed,9,2011-11-23 06:40:55,697.65,,1,,"b'b"" If someone can show me a real world libuv application where fs cache trashing is the bottleneck", I\'ll consider it. Until then," I won\'t be taking patches.""'",,,,,,,,,,
libuv,256,closed,10,2011-11-23 06:40:55,714.2,,,1,"b'b"" I can\'t speak for unix variants", but at least windows is quite good in detecting access patterns and adjusting caching behavior accordingly. If it detects a serial read it\'ll quickly start doing only read-ahead caching and nothing else. If you really care, there is a flag for CreateFile (the winapi equivalent of open) that tells windows that the read is going to be serial. I don\'t really think we need this. I would consider adding proper file stream support, and adding an option to use O_DIRECT. That would also allow us to do truly async file io on linux and windows," so it could have significant benefits.""'",,,,,,,,
libuv,256,closed,11,2011-11-23 06:40:55,1038.05,,1,,"b'b"" Imagine the disk is virtual", accessed over a network. Reloading a large cache from that source would cause a significant drop in throughput. It\'s a fair Q whether a series of sequential reads will really wipe out most of the cache, and I have verified that, as recently as Linux 2.6.32 with ext4, reading each file in a tree sequentially does pull  of the tree into the cache. O_DIRECT might be a solution," however libuv would have to mask this:url ""'",,,,,,,
libuv,256,closed,-,-,-,2,7,4,,,,,,,,,,,,,
libuv,400,closed,opened,2012-05-01 19:22:03,,,,,,,,,,,,,,,,,
libuv,400,closed,title,2012-05-01 19:22:03,00:00,,1,,"b""b' Building on Centos 5 fails (O_CLOEXEC not defined) (* with PATCH *)'""",,,,,,,,,,,,
libuv,400,closed,body,2012-05-01 19:22:03,00:00,,1,,"b'b"" Hi", Building on Centos 5 fails because O_CLOEXEC is not defined (it was introduced in linux kernel 2.6.23, but Centos 5 is still on 2.6.18 -at least the version I have available). Here\'s a possible (simple) patch," although O_CLOEXEC functionality will (obviously) be missing. Kevin""'",,,,,,,,,
libuv,400,closed,1,2012-05-01 19:22:03,304.57,,,1,"b""b' Thanks for pointing that out. Does this patch resolve the issue?  '""",,,,,,,,,,,,
libuv,400,closed,2,2012-05-01 19:22:03,212.27,,,1,"b""b' Yes"," that patch resolves it. Thanks! Kevin'""",,,,,,,,,,,
libuv,400,closed,closed,2012-05-02 03:58:54,516.85,0,2,2,,,,,,,,,,,,,
libuv,400,closed,reopened,2012-05-02 03:59:10,0.27,0,2,2,,,,,,,,,,,,,
libuv,400,closed,3,2012-05-01 19:22:03,0.62,,,1,"b'b"" I suppose I shouldn\'t close the issue until you apply the patch... :-) Kevin""'",,,,,,,,,,,,
libuv,400,closed,closed,2012-05-02 15:43:14,704.07,0,2,3,,,,,,,,,,,,,
libuv,400,closed,4,2012-05-01 19:22:03,704.48,,,1,"b""b' Thanks for testing"," Kevin. The fix is committed in 1ebe14e.'""",,,,,,,,,,,
libuv,400,closed,-,-,-,0,2,4,,,,,,,,,,,,,
libuv,403,closed,opened,2012-05-04 23:46:07,,,,,,,,,,,,,,,,,
libuv,403,closed,title,2012-05-04 23:46:07,00:00,,1,,"b""b' windows: fix mingw32 cross-compilation'""",,,,,,,,,,,,
libuv,403,closed,body,2012-05-04 23:46:07,00:00,,1,,"b""b' @piscisaureus LGTY?'""",,,,,,,,,,,,
libuv,403,closed,1,2012-05-04 23:46:07,928.95,,1,,"b""b' ntdef.h is not available for normal msvc users. Is there no other way?'""",,,,,,,,,,,,
libuv,403,closed,2,2012-05-04 23:46:07,265.65,,1,,"b'b"" @piscisaureus @bnoordhuis I think the issue is coming from NTDEF checks and that it clashes with mentioned in #381: url url  Both are defining it"," but none is defining to avoid it being defined again. Isn\'t the one in redundant since will be included before?""'",,,,,,,,,,,
libuv,403,closed,3,2012-05-04 23:46:07,71.42,1,,,"b'b"" Sounds plausible. The core issue is that mingw is complaining that NTSTATUS and PNTSTATUS are being redefined (see below). A quick grep suggests that they\'re defined in ntdef.h"," ntsecapi.h and subauth.h. Each file has #ifdef guards in place to prevent redefinition.  ""'",,,,,,,,,,,
libuv,403,closed,4,2012-05-04 23:46:07,1071.67,,1,,"b""b' Problem is that those headers might not be available on Windows native under some circumstances", mostly will require you install the Platform SDK with is an extra download. I think that is why it was defined in first. As I commented before," removing the definition from seems to solve _that_ issue:  '""",,,,,,,,,,
libuv,403,closed,5,2012-05-04 23:46:07,588.98,,1,,"b'b"" @piscisaureus See @luislavena\'s comment"," why are those typedefs in winapi.h?""'",,,,,,,,,,,
libuv,403,closed,6,2012-05-04 23:46:07,1422.05,,1,,"b""b' @piscisaureus ping?'""",,,,,,,,,,,,
libuv,403,closed,closed,2012-06-02 15:36:57,950.83,1,7,0,,,,,,,,,,,,,
libuv,403,closed,reopened,2012-06-02 15:39:17,2.33,1,7,0,,,,,,,,,,,,,
libuv,403,closed,closed,2012-06-02 15:39:38,0.35,1,7,0,,,,,,,,,,,,,
libuv,403,closed,-,-,-,1,7,0,,,,,,,,,,,,,
libuv,422,closed,opened,2012-05-21 05:47:36,,,,,,,,,,,,,,,,,
libuv,422,closed,title,2012-05-21 05:47:36,00:00,,1,,"b""b' Fix compilation with MingW: NTSTATUS & PNTSTATUS were redefined.'""",,,,,,,,,,,,
libuv,422,closed,body,2012-05-21 05:47:36,00:00,,,1,"b""b' Once in uv-win.h"," then in winapi.h'""",,,,,,,,,,,
libuv,422,closed,1,2012-05-21 05:47:36,479.07,,1,,"b""b' @bnoordhuis @piscisaureus this is exactly the issue I described in #403'""",,,,,,,,,,,,
libuv,422,closed,2,2012-05-21 05:47:36,3.95,,1,,"b'b"" It is. But changing a to doesn\'t seem like a proper fix to me.""'",,,,,,,,,,,,
libuv,422,closed,3,2012-05-21 05:47:36,6.2,,1,,"b""b' @bnoordhuis I see **adding** in the diff", to avoid the redefinition caused by winapi issue. AFAIK is that inside there are other things beyond  ," and with this change we still have the duplicated code between the uv-internal and winapi headers.'""",,,,,,,,,,
libuv,422,closed,4,2012-05-21 05:47:36,2.3,1,,,"b'b"" Sorry"," that\'s what I mean. That\'s why it doesn\'t look like a proper fix to me but I\'ll let @piscisaureus decide.""'",,,,,,,,,,,
libuv,422,closed,5,2012-05-21 05:47:36,95.02,1,,,"b""b' Sorry for leaving this out there for so long"," I was busy with other stuff.'""",,,,,,,,,,,
libuv,422,closed,closed,2012-06-02 15:36:57,589.35,2,4,1,,,,,,,,,,,,,
libuv,422,closed,6,2012-05-21 05:47:36,3.35,,,1,"b""b' @piscisaureus we understand", no problem. Bring chocolate next time and we will forgive you :wink: Please also see my comments on #403," both pull requests attempt to workaround the real issue: duplicated code around in the headers. Let us know your thoughts.'""",,,,,,,,,,
libuv,422,closed,reopened,2012-06-02 15:39:04,2.12,2,4,2,,,,,,,,,,,,,
libuv,422,closed,closed,2012-06-02 15:39:38,0.57,2,4,2,,,,,,,,,,,,,
libuv,422,closed,-,-,-,2,4,2,,,,,,,,,,,,,
libuv,427,closed,opened,2012-05-23 16:04:33,,,,,,,,,,,,,,,,,
libuv,427,closed,title,2012-05-23 16:04:33,00:00,,1,,"b'b\' Remove ""return 0"" in uv_run_once()\''",,,,,,,,,,,,
libuv,427,closed,body,2012-05-23 16:04:33,00:00,,,1,b'b\' (Linux) Current looks like: int uv_run_once(uv_loop_t* loop) {  uv__run(loop);  return 0;}  The problem is that it always returns 0 so I cannot make my own loop. For example I would like to to this: while ( !do_stop && uv_run_once(loop) );  So if my code sets the loop will exit (later I will clean it, no problem). For this to work," I just need to remove the ""return 0"" in the  : int uv_run_once(uv_loop_t* loop) {  return  uv__run(loop);}  I don\\\'t think this would break nothing. Is it possible to do it?\''",,,,,,,,,,
libuv,427,closed,closed,2012-05-23 18:33:29,148.93,0,1,1,,,,,,,,,,,,,
libuv,427,closed,reopened,2012-05-23 18:35:25,1.93,0,1,1,,,,,,,,,,,,,
libuv,427,closed,1,2012-05-23 16:04:33,151.12,,1,,"b""b' @piscisaureus Can you review c9b590f?'""",,,,,,,,,,,,
libuv,427,closed,closed,2012-05-23 18:49:22,13.95,0,2,1,,,,,,,,,,,,,
libuv,427,closed,2,2012-05-23 16:04:33,17.38,,1,,"b""b' Fixed in 7c8313b.'""",,,,,,,,,,,,
libuv,427,closed,3,2012-05-23 16:04:33,38.2,,,1,"b""b' Thanks a lot.'""",,,,,,,,,,,,
libuv,427,closed,-,-,-,0,3,2,,,,,,,,,,,,,
libuv,469,closed,opened,2012-06-18 09:44:29,,,,,,,,,,,,,,,,,
libuv,469,closed,title,2012-06-18 09:44:29,00:00,,1,,"b""b' fs test fixes'""",,,,,,,,,,,,
libuv,469,closed,body,2012-06-18 09:44:29,00:00,,1,,b'b\' These are some minor test improvements that will prevent unneeded test failures moving forward. The file watching tests in all use the same directory for their fixtures  .  If a test fails from an assertion error, it doesn\\\'t clean up, and this can cause other tests to fail," simply due to the other tests trying to rmdir(""watch_dir"") when there are still other files left in the directory.  I\\\'ve replaced the repetitive and not always accurate manual cleanups with a helper method",  , that reads the directory first, and cleans up whatever is actually there. I added a second commit to skip one of the test cases if the tests are being run as root.  The test expects to fail a normal user can\\\'t something to root but if the current uid is 0, it succeeds, which makes the test fail.  This seemed spurious.\'',,,,
libuv,469,closed,1,2012-06-18 09:44:29,521.8,,1,,"b""b' I have force-pushed the branch with some fixes for windows.  e0124ab and 04ade2e are now the two commits.'""",,,,,,,,,,,,
libuv,469,closed,2,2012-06-18 09:44:29,222.33,,1,,"b""b' @bnoordhuis force-pushed again"," commits now 9dd5295 and 244de4b.'""",,,,,,,,,,,
libuv,469,closed,3,2012-06-18 09:44:29,34.73,,,1,"b""b' Thanks Charlie"," landed in 7573f4a and f3fd8e3.'""",,,,,,,,,,,
libuv,469,closed,closed,2012-06-25 22:43:21,778.87,0,4,1,,,,,,,,,,,,,
libuv,469,closed,reopened,2012-06-29 03:33:04,289.72,0,4,1,,,,,,,,,,,,,
libuv,469,closed,4,2012-06-18 09:44:29,291.87,,1,,"b'b"" I reverted this in e9b17bc. It broke on windows", and the cleanup_watch_dir needs proper review. (e.g. don\'t remove files without checking if chdir succeeds etc.) Also I\'d prefer to use  /  instead of remove," because remove() actually doesn\'t really work well here.""'",,,,,,,,,,
libuv,469,closed,5,2012-06-18 09:44:29,1254.1,,1,,"b'b"" I\'m going to close this. @AvianFlu If you want to submit it again"," please open a new PR.""'",,,,,,,,,,,
libuv,469,closed,closed,2012-07-03 00:29:19,1256.25,0,6,1,,,,,,,,,,,,,
libuv,469,closed,6,2012-06-18 09:44:29,1133.83,,1,,"b""b' Will do been very busy lately.'""",,,,,,,,,,,,
libuv,469,closed,7,2012-06-18 09:44:29,1137.58,,,1,"b'b"" Aren\'t we all? :-) No rush.""'",,,,,,,,,,,,
libuv,469,closed,-,-,-,0,7,2,,,,,,,,,,,,,
libuv,543,closed,opened,2012-09-03 09:26:09,,,,,,,,,,,,,,,,,
libuv,543,closed,title,2012-09-03 09:26:09,00:00,,1,,"b""b' make test assertion failed mingw on windows7(32bit)'""",,,,,,,,,,,,
libuv,543,closed,body,2012-09-03 09:26:09,00:00,,1,,"b""b' I make and make test libuv on windows7(32bit) with mingw.unit-test output some errors. url '""",,,,,,,,,,,,
libuv,543,closed,1,2012-09-03 09:26:09,814.6,,1,,"b""b' @rayfill Can you gist the output of for me?'""",,,,,,,,,,,,
libuv,543,closed,2,2012-09-03 09:26:09,14.55,,1,,"b""b' FWIW"," all tests pass here with mingw32. This is a windows 7 enterprise (64 bit) system.'""",,,,,,,,,,,
libuv,543,closed,3,2012-09-03 09:26:09,228.37,,,1,"b'b"" 1. fs_file_loop Create loop symbolic link in test. It is failed. My environment is UAC on. runpermit administrator"," test is succeed!.2. dlerror LoadLibraryEx API load to  is failed. because I checkout using cygwin\'s git. load_ file is not executable. cygwin is this permission projected to windows \'\\xe3\\x83\\x95\\xe3\\x82\\xa9\\xe3\\x83\\xab\\xe3\\x83\\x80\\xe3\\x81\\xae\\xe3\\x82\\xb9\\xe3\\x82\\xad\\xe3\\x83\\xa3\\xe3\\x83\\xb3/\\xe3\\x83\\x95\\xe3\\x82\\xa1\\xe3\\x82\\xa4\\xe3\\x83\\xab\\xe3\\x81\\xae\\xe5\\xae\\x9f\\xe8\\xa1\\x8c\'(scan  file) permission. LoadLibraryEx API check this permission. if dropped it then return another error.3. poll_close It is yet debugging now. but I think my environment problem...""'",,,,,,,,,,,
libuv,543,closed,4,2012-09-03 09:26:09,1.8,,1,,"b'b"" netsh winsock show catalog\'s result.url ""'",,,,,,,,,,,,
libuv,543,closed,5,2012-09-03 09:26:09,328.87,,1,,"b'b"" @rayfill I think the poll_close failure happens due to the fact that you have X-FORT LSP installed. A poll_close failure is expected on windows xp but not on windows 7", so I\'ll have to look into this.  Do you have any idea where this X-FORT LSP comes from? [LSPs]url  are typically associated with parental control software, firewalls," and malware.""'",,,,,,,,,
libuv,543,closed,6,2012-09-03 09:26:09,1252.08,,,1,"b""b' I test another environment.(windows 7 32bit enterprise english and windows 7 64bit ultimate japanese)error is not occured.poll_close problem is probably cause from X-FORT.(X-FORT is system management tool. It install from company. url  ) Thank you for your advice.'""",,,,,,,,,,,,
libuv,543,closed,closed,2012-10-02 05:26:25,1200.27,0,6,2,,,,,,,,,,,,,
libuv,543,closed,reopened,2012-10-04 23:05:09,1058.73,0,6,2,,,,,,,,,,,,,
libuv,543,closed,7,2012-09-03 09:26:09,1059.52,,,1,b'b\' @rayfill Reopening," I believe we can do better here. The X-Fort LSP is of a ""nice"" type for which there should be no need to fail poll_close.\''",,,,,,,,,,,
libuv,543,closed,8,2012-09-03 09:26:09,927.95,,1,,"b""b' Inactive for over 2 years now"," closing.'""",,,,,,,,,,,
libuv,543,closed,closed,2014-06-27 14:33:53,928.73,0,7,3,,,,,,,,,,,,,
libuv,543,closed,-,-,-,0,7,3,,,,,,,,,,,,,
libuv,544,closed,opened,2012-09-04 07:21:21,,,,,,,,,,,,,,,,,
libuv,544,closed,title,2012-09-04 07:21:21,00:00,,1,,"b""b' Corrupted files on linux with many concurrent write calls'""",,,,,,,,,,,,
libuv,544,closed,body,2012-09-04 07:21:21,00:00,1,,,"b""b' url  this gist is test case + sample strace output. WTF may not appear after every run. Changing to does not change anything. All syscalls come after last syscall. This only happens if many writes fired at once. Writing from time to time is ok. OS X is not affected (i have ssd so this may be just too fast)"," Linux is affected (spinning disks at least). cc @bnoordhuis @indutny'""",,,,,,,,,,,
libuv,544,closed,1,2012-09-04 07:21:21,30.02,,1,,"b""b' Info: url '""",,,,,,,,,,,,
libuv,544,closed,2,2012-09-04 07:21:21,0.3,,1,,"b'b"" And also", not sure why," but if you\'ll initialize those buffers error will disappear.""'",,,,,,,,,,
libuv,544,closed,3,2012-09-04 07:21:21,36.47,,1,,"b""b' From irc with @indutny: url  100 writes < 4096 bytes"," all after last \\xe2\\x80\\x94 same results.'""",,,,,,,,,,,
libuv,544,closed,4,2012-09-04 07:21:21,64.42,,1,,"b""b' So this is all on BSDs?'""",,,,,,,,,,,,
libuv,544,closed,5,2012-09-04 07:21:21,23.03,,1,,"b""b' I see this on Linux. I may ask for FreeBSD machine to check if it matters.'""",,,,,,,,,,,,
libuv,544,closed,6,2012-09-04 07:21:21,36.8,,1,,"b'b"" Maybe I\'m missing something. You\'re doing lots of concurrent overlapping writes"," of course you\'re going to get corrupted results.""'",,,,,,,,,,,
libuv,544,closed,7,2012-09-04 07:21:21,0.95,,1,,"b""b' Writes are not overlapping.'""",,,,,,,,,,,,
libuv,544,closed,8,2012-09-04 07:21:21,0.47,,1,,"b""b' @bnoordhuis they do not overlap'""",,,,,,,,,,,,
libuv,544,closed,9,2012-09-04 07:21:21,9.93,,1,,"b'b"" You\'re doing concurrent writes at the end of the file", right? Let\'s say thread A writes 100 bytes at position 100, thread B writes 100 bytes at position 200 and they\'re doing it concurrently. On most operating systems it\'s undetermined what actually happens. If A comes before B or vice versa, you\'ll probably get the right results. If A and B overlap in time," non-determinate things happen.""'",,,,,,,,
libuv,544,closed,10,2012-09-04 07:21:21,4.82,,1,,"b'b"" By the way"," the reason that you\'re not seeing this on OS X is that all writes get serialized through a big mutex. It was considered necessary because pwrite() comes with even less guarantees on that platform.""'",,,,,,,,,,,
libuv,544,closed,11,2012-09-04 07:21:21,1.33,,1,,"b""b' Yep"," platforms without will work because of libeio emulation with mutex :)'""",,,,,,,,,,,
libuv,544,closed,12,2012-09-04 07:21:21,57.83,,1,,"b'b"" That\'s not quite what I mean. We use pwrite() on OS X but all calls are guarded by a single Big Lock.""'",,,,,,,,,,,,
libuv,544,closed,closed,2012-09-04 11:47:47,266.43,1,13,0,,,,,,,,,,,,,
libuv,544,closed,13,2012-09-04 07:21:21,18.58,,1,,"b""b' url  here we go again. sequential writes (no overlapping)"," but file is corrupted from time to time.'""",,,,,,,,,,,
libuv,544,closed,reopened,2012-09-04 13:22:40,94.88,1,14,0,,,,,,,,,,,,,
libuv,544,closed,14,2012-09-04 07:21:21,76.55,,1,,"b""b' @bnoordhuis looks valid"," I can reproduce this on ubuntu.'""",,,,,,,,,,,
libuv,544,closed,15,2012-09-04 07:21:21,64.45,,1,,"b'b"" @piscisaureus there\'s a bug in this code"," closing.""'",,,,,,,,,,,
libuv,544,closed,closed,2012-09-04 14:27:19,64.65,1,16,0,,,,,,,,,,,,,
libuv,544,closed,16,2012-09-04 07:21:21,33.87,1,,,"b'b\' Final update: this was ""a+"" behaviour on linux. Gist to prove that: url  Maybe it should be documented somehow", because it\\\'s kind of unexpected thing to see. Waiting for final @bnoordhuis words to close this mess.\'',,,,,,,,,,,
libuv,544,closed,reopened,2012-09-04 15:01:10,33.85,2,16,0,,,,,,,,,,,,,
libuv,544,closed,17,2012-09-04 07:21:21,1261.08,,,1,"b""b' Hmm... go in peace", my son? I welcome documentation patches," by the way. :-)'""",,,,,,,,,,
libuv,544,closed,closed,2012-09-05 12:02:15,1261.08,2,16,1,,,,,,,,,,,,,
libuv,544,closed,-,-,-,2,16,1,,,,,,,,,,,,,
libuv,701,closed,opened,2013-02-07 02:21:35,,,,,,,,,,,,,,,,,
libuv,701,closed,title,2013-02-07 02:21:35,00:00,,1,,"b""b' unix"," windows: fix order of timer callback'""",,,,,,,,,,,
libuv,701,closed,body,2013-02-07 02:21:35,00:00,1,,,"b""b' When two timer handles have the same timeout value", callbacks should follow the order of start. is the best to compare handles to work with it. Please review this. This fix is requested by @saghul in  url  . The comment from Ben, url was very valuable for me to rewrite this patch but I missed it at that time. Sorry," Ben.  [Edit] The patch is modified so as to use timer_counter'""",,,,,,,,,
libuv,701,closed,1,2013-02-07 02:21:35,59.8,1,,,"b""b' Will this work? I find it rather odd because: (a) Timers in the tree are always active", and.(b) if inactive timers were there, then removing a timer from the tree might fail because the compare function no longer provides an absolute ordering," so the wrong branch may be traversed. @bnoordhuis This was your idea? :-p'""",,,,,,,,,
libuv,701,closed,2,2013-02-07 02:21:35,3.83,,1,,"b'b"" @piscisaureus Oh", No. It\'s my own ideal. Ben suggest me for to think of a->loop->timer_being_inserted. Hmm," I\'d better to use counter instread of this.""'",,,,,,,,,,
libuv,701,closed,closed,2013-02-07 03:25:13,63.63,2,2,0,,,,,,,,,,,,,
libuv,701,closed,reopened,2013-02-10 01:52:59,1347.77,2,2,0,,,,,,,,,,,,,
libuv,701,closed,3,2013-02-07 02:21:35,1351.67,,1,,"b'b"" @piscisaureus Per IRC communication"," I\'ve changed this so as to use loop->timer_couner. Please review this.""'",,,,,,,,,,,
libuv,701,closed,4,2013-02-07 02:21:35,891.9,,,1,"b""b' LGTM. Thanks Shigeki"," landed in fadfeaf.'""",,,,,,,,,,,
libuv,701,closed,closed,2013-02-10 16:48:48,895.82,2,3,1,,,,,,,,,,,,,
libuv,701,closed,5,2013-02-07 02:21:35,1.97,,,1,"b""b' Awesome! thanks @shigeki!'""",,,,,,,,,,,,
libuv,701,closed,-,-,-,2,3,2,,,,,,,,,,,,,
libuv,765,closed,opened,2013-04-05 15:39:20,,,,,,,,,,,,,,,,,
libuv,765,closed,title,2013-04-05 15:39:20,00:00,,1,,"b""b' doc","unix: uv_udp_open supports all datagrams'""",,,,,,,,,,,
libuv,765,closed,body,2013-04-05 15:39:20,00:00,,1,,"b""b' On Unix", uv_udp_open can be used with any socket as long as the socket follows the datagram contract. This means that any datagram-socket, like for example netlink or raw sockets, can be used with libuv. I think this is very useful and expands the possible use cases for libuv," and should be documented.'""",,,,,,,,
libuv,765,closed,1,2013-04-05 15:39:20,0.05,,,1,"b""b' Thank you for contributing this pull request! Here are a few pointers to make sure your submission will be considered for inclusion. Commit @7395e69551e7f70b0f0077688cfbcd06a817709a has the following error(s):First line of commit message must be no longer than 50 charactersCommit message must indicate the subsystem this commit changes Commit @fe46d81cd32678983d8bfc276d58ff9f77273ceb has the following error(s):Commit message must indicate the subsystem this commit changes The following commiters were not found in the CLA:Kristian Evensen Please see []url  for more information'""",,,,,,,,,,,,
libuv,765,closed,2,2013-04-05 15:39:20,83.15,,1,,"b""b' squash into 1 commit'""",,,,,,,,,,,,
libuv,765,closed,closed,2013-04-05 17:12:49,93.48,0,3,1,,,,,,,,,,,,,
libuv,765,closed,reopened,2013-04-05 17:16:05,3.27,0,3,1,,,,,,,,,,,,,
libuv,765,closed,3,2013-04-05 15:39:20,46.85,,,1,"b""b' Thanks for letting me know! Thought I had done it"," but apparently not :)'""",,,,,,,,,,,
libuv,765,closed,4,2013-04-05 15:39:20,685.2,1,,,"b""b' Fixed the messages from Jenkins. Please let me know if there is something else to "," and if I should create a new pull request with correct commit message.'""",,,,,,,,,,,
libuv,765,closed,5,2013-04-05 15:39:20,567.38,,1,,"b'b"" @kristrev Did you sign the CLA? I can\'t find you in the list. Re: commit log"," I\'d probably prefix it with  ""'",,,,,,,,,,,
libuv,765,closed,6,2013-04-05 15:39:20,11.22,,,1,"b""b' @bnoordhuis Thanks"," I forgot that. I have signed the CLA and updated the commit.'""",,,,,,,,,,,
libuv,765,closed,7,2013-04-05 15:39:20,2.83,,,1,"b""b' Thanks Kristian"," landed in 1e8fe45.'""",,,,,,,,,,,
libuv,765,closed,closed,2013-04-08 14:56:01,1299.93,1,4,4,,,,,,,,,,,,,
libuv,765,closed,-,-,-,1,4,4,,,,,,,,,,,,,
libuv,911,closed,opened,2013-08-30 02:18:51,,,,,,,,,,,,,,,,,
libuv,911,closed,title,2013-08-30 02:18:51,00:00,,1,,"b""b' v0.11.11 causes assertion errors in Node'""",,,,,,,,,,,,
libuv,911,closed,body,2013-08-30 02:18:51,00:00,,,1,"b'b""   Commenting out line 150 of makes everything work fine. This was added in 3f2d4d535867a99170b4964f2e3db1ef70968c23 by @bnoordhuis (indeed", it\'s all that 3f2d4d535867a99170b4964f2e3db1ef70968c23 does)," so perhaps Node is one of those programs calling when there are still outstanding work reqs?""'",,,,,,,,,,
libuv,911,closed,1,2013-08-30 02:18:51,202.65,,,1,"b""b' By the way", it may well be that this is a node bug rather than a libuv bug.  Just tracked down an otherwise-seems-to-be-fine Node program to this line in libuv," so figured we could start over here.'""",,,,,,,,,,
libuv,911,closed,2,2013-08-30 02:18:51,5.77,,1,,"b'b"" Yes", this is a node bug. Probably it\'s [this]url  invocation," so it only affects the debug build. Deleting a loop that has pending requests (or open handles) can lead to memory corruption and other badness. Therefore removing this assertion is not the way forward.""'",,,,,,,,,,
libuv,911,closed,closed,2013-08-30 05:47:16,208.42,0,2,2,,,,,,,,,,,,,
libuv,911,closed,reopened,2013-08-30 05:47:46,0.5,0,2,2,,,,,,,,,,,,,
libuv,911,closed,3,2013-08-30 02:18:51,0.95,,1,,"b'b"" On the contrary", run you\'ll see that test-dns will fail," and there are other scenarios in release mode this happens""'",,,,,,,,,,
libuv,911,closed,closed,2013-08-30 05:50:34,2.8,0,3,2,,,,,,,,,,,,,
libuv,911,closed,4,2013-08-30 02:18:51,2.45,,1,,"b'b"" didn\'t actually mean to reopen.""'",,,,,,,,,,,,
libuv,911,closed,5,2013-08-30 02:18:51,297.77,,,1,"b'b"" Yeah", NDEBUG is never defined in UNIX builds. I added that call to uv_loop_delete() in @556b890 with the express purpose of catching bugs.  Seems it works. :-) The tests all pass for me on Linux and OS X, including the internet ones," but I can reproduce it with Isaac\'s example.  I\'ll take a look node probably needs to walk the open handles and close them before exiting.""'",,,,,,,,,
libuv,911,closed,-,-,-,0,4,3,,,,,,,,,,,,,
libuv,926,closed,opened,2013-09-12 02:23:08,,,,,,,,,,,,,,,,,
libuv,926,closed,title,2013-09-12 02:23:08,00:00,,1,,"b""b' Passing sockets over pipes fails on windows'""",,,,,,,,,,,,
libuv,926,closed,body,2013-09-12 02:23:08,00:00,,,1,"b'b"" I\'m working on implementing an FFI implementation of libuv for ruby compatible with the v0.11.13 release of libuv: url  All of my tests run on unix without issue however I cannot pass sockets over pipes on Windows. I continually receive: no matter how much I delay or retry the  . Once again this works flawlessly on all unix variants so I don\'t think I am doing anything wrong. Also regular sockets and regular pipes work on windows", just not having any luck with or  ... ping @piscisaureus this may be relevant, I noticed that you\'ve been working on windows compatibility.Also, and unrelated," having an issue using on windows after creating and writing a file with permissions.""'",,,,,,,,
libuv,926,closed,1,2013-09-12 02:23:08,162.62,,,1,"b'b"" Also @bnoordhuis you were working on the win write2 implementation recently. Any ideas?I\'m working through the libuv code atm""'",,,,,,,,,,,,
libuv,926,closed,2,2013-09-12 02:23:08,115.52,,,1,"b""b' Does the libuv test suite pass for you? Last time I checked IPC worked fine on Windows.'""",,,,,,,,,,,,
libuv,926,closed,3,2013-09-12 02:23:08,1222.37,1,,,"b'b"" I\'m trying to pass sockets from one uv loop to another in the same process. I looked at the test suite however was a little confused as to if it was passing sockets across different processes. Then if so"," does this mean Windows doesn\'t support same process IPC only inter-process. As this would explain the issue.""'",,,,,,,,,,,
libuv,926,closed,4,2013-09-12 02:23:08,5.75,,1,,"b'b"" @stakach I don\'t think I actually ever tested passing sockets within the same process. However there is no theoretical reason it shouldn\'t work. However it could be that the socket isn\'t getting duplicated properly.  Just", guessing here," it\'s a long time ago: uv_spawn() sets some magic property on the uv_pipe_t handle so uv_write2 knows which process to duplicate the handle to. If you aren\'t spawning then this property might not set and WSADuplicateSocket could be failing. Also note that passing uv_pipe_t handles over the IPC channel is currently not supported on windows.""'",,,,,,,,,,
libuv,926,closed,5,2013-09-12 02:23:08,11.6,,,1,"b'b"" Thanks for the pointer. I\'ll fiddle around with the libuv code and see if I can make it work then post any finding here / a pull request. TCP connections are the only handles my tests are passing over IPC.""'",,,,,,,,,,,,
libuv,926,closed,6,2013-09-12 02:23:08,157.37,,1,,b'b\' Ok," it seems: ""Sockets can be shared among threads in a given process without using the WSADuplicateSocket function because a socket descriptor is valid in all threads of a process."" Source url So a special case may need to be made when process ids match? Although not entirely sure how to go about this.. If it is possible.\''",,,,,,,,,,,
libuv,926,closed,7,2013-09-12 02:23:08,163.13,,1,,"b'b"" @stakach What the MSDN documentation is saying is that you don\'t _need_ to call WSADuplicateSocket()"," not that you _can\'t_. Can you test if -multi-accept.c works for you?""'",,,,,,,,,,,
libuv,926,closed,8,2013-09-12 02:23:08,643.4,1,,,"b'b"" @stakach You need to duplicate in order not to mess up libuv\'s internal bookkeeping.""'",,,,,,,,,,,,
libuv,926,closed,9,2013-09-12 02:23:08,175.95,,1,,"b'b"" I\'m having the same problems on Windows.  Also"," the tests named tcp_multi_accept\\\\* all fail in -multi-accept.c Is there any progress on a fix?""'",,,,,,,,,,,
libuv,926,closed,10,2013-09-12 02:23:08,369.77,,,1,"b""b' I am working with @grittygrease above on this and we are seeing the following. We have a TCP server written using libuv with threads that works perfectly on Linux and Mac OS X but fails on Windows. The TCP server binds to a port in the main program", spawns a number of threads and passes the bound socket to them using pipes. Our code is similar in operation to -multi-accept.c. In the threads we uv_listen() on the now duplicated socket and that call is successful. We then uv_run() but never receive a callback when a connection is made and, therefore," never get to call uv_accept() etc.'""",,,,,,,,,
libuv,926,closed,11,2013-09-12 02:23:08,22.77,,1,,"b""b' I have a suspicion that the duplication of the socket is failing when in the same process because is not set. The code does the following:   only gets set in or  . Neither will happen if sending a via a pipe within the same process (but to a different thread). Thus will be 0 and an error will occur.'""",,,,,,,,,,,,
libuv,926,closed,12,2013-09-12 02:23:08,11.43,,,1,"b'b"" I did some basic multiprocess socket passing on windows", to see if it would make a difference," and had no luck there either. The same code worked on OSX however haven\'t had the time to dig into the internals of libuv""'",,,,,,,,,,
libuv,926,closed,13,2013-09-12 02:23:08,730.3,,1,,"b""b' Will work on it'""",,,,,,,,,,,,
libuv,926,closed,14,2013-09-12 02:23:08,0.67,,1,,"b""b' Basically"," the idea is to send pids in both ways at the pipe initialization and to use them as value'""",,,,,,,,,,,
libuv,926,closed,15,2013-09-12 02:23:08,0.1,,1,,"b""b' That was note for myself ^'""",,,,,,,,,,,,
libuv,926,closed,16,2013-09-12 02:23:08,29.42,,,1,"b'b"" Thanks. The other question I had about the source code is that when the happens the socket handle is duplicated (done in via a call to  ). will do a on the \'parent\' socket. Then (in the  thread) will call which does When I do a on the socket in the  thread this flag prevents a from happening on the duplicated socket. I\'m unsure if that matters to the problem at hand but was something I spotted while reviewing the code.""'",,,,,,,,,,,,
libuv,926,closed,17,2013-09-12 02:23:08,153.8,1,,,"b'b"" After considering this"," I found that sending pid over the IPC pipe is quite racey as users may start sending handles on that pipe before the PID message will arrive. I\'ll need to think about it for a bit...""'",,,,,,,,,,,
libuv,926,closed,18,2013-09-12 02:23:08,1074.4,,1,,"b""b' Is there any news on this?'""",,,,,,,,,,,,
libuv,926,closed,19,2013-09-12 02:23:08,158.97,,,1,"b'b"" Not really", I don\'t think that this is going to work on windows (i.e. sending handles inside the same process), I\'ll consider working on another problem somewhere later," but I\'m not really a windows guy here :) cc @piscisaureus ""'",,,,,,,,,
libuv,926,closed,20,2013-09-12 02:23:08,0.5,,1,,"b'b"" Though"," I\'ll review and land a PR if you\'ll send one ;)""'",,,,,,,,,,,
libuv,926,closed,21,2013-09-12 02:23:08,1350.83,,,1,"b'b"" How far did you get? I\'m interested in picking this up and seeing if we can patch it ourselves. ""'",,,,,,,,,,,,
libuv,926,closed,22,2013-09-12 02:23:08,1294.67,,1,,"b'b"" @jgrahamc I got to this url  . I think it should be possible to wait for other side\'s ack before sending handles"," just need to find time to implement it.""'",,,,,,,,,,,
libuv,926,closed,23,2013-09-12 02:23:08,12.55,,,1,"b'b"" Thanks. I\'ll see what I can do. John. On Mon", Feb 17, 2014 at 1:18 PM, Fedor Indutny notifications@:##  My book: The Geek Atlas," 128 Places Where Science and Technology Come Aliveurl Signed copies: url ""'",,,,,,,,
libuv,926,closed,24,2013-09-12 02:23:08,725.95,,,1,"b'b\' Was just having a play around with the latest commits.Looks like now when we have a pipe that supports write2 the pipe fails to accept: ""accept error resource temporarily unavailable"" Regular pipes continue to work fine in Windows for me.\''",,,,,,,,,,,,
libuv,926,closed,25,2013-09-12 02:23:08,379.58,1,,,"b""b' No IPC tests fail for me on Windows. Using pripes to send TCP handles across processes"," that is. Unfortunately passing handles across threads continues to be an unsolved problem.'""",,,,,,,,,,,
libuv,926,closed,26,2013-09-12 02:23:08,624.07,,1,,b'b\' Fedor, I wonder if your pid sending patch is somewhere on the way. Another (easier) option would be to leave it to the user, i.e. provide a windows-only function to set the field on Windows before they can send handles. Yeah, clumsy," but more robust and can be ""officially"" backed by platform ""security requirements"".:-)\''",,,,,,,,
libuv,926,closed,27,2013-09-12 02:23:08,13.42,,1,,"b'b"" CloudFlare is willing to pay a small bounty for proper support for this onWindows. We would like to use libuv cross platform for a networkedapplication that we will be open sourcing. If there\'s someone who is wantsto work on this and has the skillset please get in contact with me directly. John. On Thu", Mar 27, 2014 at 6:20 PM, Arseny Vakhrushev <notifications@##  My book: The Geek Atlas," 128 Places Where Science and Technology Come Aliveurl Signed copies: url ""'",,,,,,,,
libuv,926,closed,closed,2014-04-14 16:45:44,862.6,4,14,11,,,,,,,,,,,,,
libuv,926,closed,28,2013-09-12 02:23:08,357.97,,1,,"b""b' @indutny Did you intend to close this issue with your commit?'""",,,,,,,,,,,,
libuv,926,closed,reopened,2014-04-16 07:06:21,860.62,4,15,11,,,,,,,,,,,,,
libuv,926,closed,29,2013-09-12 02:23:08,737.22,,1,,"b""b' Any news on this topic?'""",,,,,,,,,,,,
libuv,926,closed,30,2013-09-12 02:23:08,49.35,,1,,"b""b' What are the use cases that people need this for?Load balancing incoming connections"," or something else? @jgrahamc and @stakach '""",,,,,,,,,,,
libuv,926,closed,31,2013-09-12 02:23:08,162.27,,1,,"b""b' Specifically"," we (CloudFlare) have a piece of software based on libuv that uses OpenSSL and we use libuv for threading and for handling a listen socket with multiple connections. See my original comment above: url '""",,,,,,,,,,,
libuv,926,closed,32,2013-09-12 02:23:08,124.15,,1,,"b""b' If the bounty is still up"," I can look at it at the weekend.'""",,,,,,,,,,,
libuv,926,closed,33,2013-09-12 02:23:08,597.02,,1,,"b'b"" Is possible setup ipc_pid in every call write2()? I would like create my own pipe server side in my parent processes and control when pass tcp handles to my child processes. Using uv_spawn() to pass pipe to child processes", libuv create 1 temporary pipe handle server side to each child process. Creating 1000 child processes, I\'ll have 1000 temporary pipes server handles and 1000  locally pipe handles passes to child processes using stdio struct in uv_spawn()," getting a total of 2000 handles. If I use my own created server pipe handle this number is reduced to 1001 handles in parent process. Today I need set ipc_pid = GetCurrentProcessId() to use write2() and don\'t get error.  (tested in libuv v1.4.2)""'",,,,,,,,,
libuv,926,closed,34,2013-09-12 02:23:08,10.12,,1,,"b'b"" @juanper I\'m not sure I understand the question  how it relates to the issue of passing TCP handles over pipes on Windows within the one process? Or are you saying that if you create a proxy process and pass the handles to it you can then have the second process pass the sockets back to the original process?""'",,,,,,,,,,,,
libuv,926,closed,35,2013-09-12 02:23:08,93.28,,1,,b'b\' You should be able to create the pipe yourself (pass 1 for IPC inuv_pipe_init) and then in uv_spawn use the UV_INHERIT_STREAM flag.On Apr 30, 2015 6:22 AM,"Juan Jos\\xc3\\xa9 Pereira"" notifications@wrote:\''
libuv	926	closed	36	juanper	2013-09-12 02:23:08	367.47		+1		b""b' @stakach in my case, I create a process who accept tcp connection, read first data block and according content of data block transfers tpc stream handle to a child process.'",,,,,,,,,,
libuv,926,closed,37,2013-09-12 02:23:08,40.92,,,1,"b'b\' @saghul I used UV_INHERIT_STREAM but all my attemps fails. In uv__stdio_create() there is a test if ""stream->flags & UV_HANDLE_CONNECTED"" that allway fails in my tests. Have you a example code to follow? Thanks.\''",,,,,,,,,,,,
libuv,926,closed,38,2013-09-12 02:23:08,1184.77,,1,,"b""b' Fixed in url '""",,,,,,,,,,,,
libuv,926,closed,closed,2015-11-06 08:38:32,92.18,4,24,12,,,,,,,,,,,,,
libuv,926,closed,39,2013-09-12 02:23:08,42.47,,,1,"b""b' Amazing work! Thanks!'""",,,,,,,,,,,,
libuv,926,closed,40,2013-09-12 02:23:08,141.73,,,1,"b""b' Great"," thanks!'""",,,,,,,,,,,
libuv,926,closed,41,2013-09-12 02:23:08,1186.88,1,,,"b'b"" Sorry to revive a dead thread", but this still doesn\'t work by default and this is the first thread that comes up in searches.  So if you\'re wondering how to pass sockets between two _different_ processes on windows: the trick is that WSADuplicateSocket(used inside uv_write2) actually requires the PID of the process that you want to pass the socket _to_, not the process that you\'re passing the socket _from_(which is what libuv currently assumes).  There\'s not really a way to do this internally to libuv," so you end up having to send a few handshake messages where you trade PIDs when you\'re setting up your connections.  Then you can just manually set  = WhateverThePIDOfTheOtherProcessIs sometime before you call uv_write2.""'",,,,,,,,,
libuv,926,closed,-,-,-,5,24,14,,,,,,,,,,,,,
libuv,933,closed,opened,2013-09-20 17:52:20,,,,,,,,,,,,,,,,,
libuv,933,closed,title,2013-09-20 17:52:20,00:00,,1,,"b""b' build: use -pthread on sunos'""",,,,,,,,,,,,
libuv,933,closed,body,2013-09-20 17:52:20,00:00,,1,,"b""b' When building on sunos with autoconf make sure to specify -pthreadotherwise there will be race conditions with errno and etc @bnoordhuis'""",,,,,,,,,,,,
libuv,933,closed,1,2013-09-20 17:52:20,125.73,,1,,"b""b' LGTM. I take it that was the source of the test failures?'""",,,,,,,,,,,,
libuv,933,closed,closed,2013-09-20 19:58:04,125.73,0,3,0,,,,,,,,,,,,,
libuv,933,closed,reopened,2013-09-20 19:58:08,0.07,0,3,0,,,,,,,,,,,,,
libuv,933,closed,closed,2013-09-20 21:05:16,67.13,0,3,0,,,,,,,,,,,,,
libuv,933,closed,2,2013-09-20 17:52:20,67.75,,1,,"b""b' @bnoordhuis ya"," errno was getting stomped on by something else'""",,,,,,,,,,,
libuv,933,closed,-,-,-,0,4,0,,,,,,,,,,,,,
libuv,941,closed,opened,2013-09-27 23:24:37,,,,,,,,,,,,,,,,,
libuv,941,closed,title,2013-09-27 23:24:37,00:00,,1,,"b""b' uv__read() blocks sometimes when reading from a pipe'""",,,,,,,,,,,,
libuv,941,closed,body,2013-09-27 23:24:37,00:00,,1,,"b""b' uv__read() immediately retries a read when a preceding read fills the entire buffer. This presents a problem when a stream being read is a pipe (for example a redirected standard input). If a process on the write end of the pipe writes exactly 64k of data to the pipe", then uv__read() will issue a second read immediately on an empty pipe, and it will block. Here is a reproduction in : If we feed a small amount of data to the script, it works as expected, calling the interval callback every second: If however we feed 64k of data," the callback is not called: Here is an strace output from a normal run: Here is an strace output from a blocked process: GDB stack trace:  '""",,,,,,,
libuv,941,closed,1,2013-09-27 23:24:37,61.63,,1,,"b'b"" It seems that an easy workaround is to stick a uv__nonblock call into uv_open_pipe. I\'m not sure whether it is a proper solution or not though.""'",,,,,,,,,,,,
libuv,941,closed,2,2013-09-27 23:24:37,498.38,,,1,"b""b' Thanks for the bug report"," good catch.  Fixed in 8fe4ca6.'""",,,,,,,,,,,
libuv,941,closed,closed,2013-09-28 08:44:38,560.02,0,3,1,,,,,,,,,,,,,
libuv,941,closed,3,2013-09-27 23:24:37,15.77,,1,,"b""b' @bnoordhuis should the fix also be applied to uv_ ?'""",,,,,,,,,,,,
libuv,941,closed,4,2013-09-27 23:24:37,93.4,,1,,"b'b"" I\'ll update those as well.""'",,,,,,,,,,,,
libuv,941,closed,5,2013-09-27 23:24:37,499.43,,1,,"b'b"" Reopening for now.  I\'ve rolled 8fe4ca6 back in 8c9cbee.  It so happens that  currently relies on the blocking behavior of pipes...""'",,,,,,,,,,,,
libuv,941,closed,reopened,2013-09-28 18:53:14,608.6,0,6,1,,,,,,,,,,,,,
libuv,941,closed,closed,2013-10-01 11:23:17,990.05,0,6,1,,,,,,,,,,,,,
libuv,941,closed,-,-,-,0,6,1,,,,,,,,,,,,,
libuv,947,closed,opened,2013-10-04 03:48:26,,,,,,,,,,,,,,,,,
libuv,947,closed,title,2013-10-04 03:48:26,00:00,,1,,"b""b' uv_pipe_bind fail on windows 7 64 bit "," compiled use mingw-w64'""",,,,,,,,,,,
libuv,947,closed,body,2013-10-04 03:48:26,00:00,,1,,"b'b\' # define TEST_PIPENAME ""test-pipe"" int main(int argc", char **argv){  uv_pipe_t server1, server2;  int r; r = uv_pipe_init(uv_default_loop(), &server1, 0);  assert(r == 0);  r = uv_pipe_bind(&server1, TEST_PIPENAME);  assert(r == 0); //****************fail on this line,mean uv_pipe_bind fail return 0;}\'',,,,,,
libuv,947,closed,closed,2013-10-04 03:49:09,0.72,0,2,0,,,,,,,,,,,,,
libuv,947,closed,reopened,2013-10-04 03:49:13,0.07,0,2,0,,,,,,,,,,,,,
libuv,947,closed,1,2013-10-04 03:48:26,234.8,,1,,"b'b"" That\'s not a valid pipe name on Windows", AFAIK," try this one instead: url ""'",,,,,,,,,,
libuv,947,closed,2,2013-10-04 03:48:26,181.28,,,1,"b""b' it works ","thanks a lot'""",,,,,,,,,,,
libuv,947,closed,closed,2013-10-04 10:44:31,415.3,0,3,1,,,,,,,,,,,,,
libuv,947,closed,-,-,-,0,3,1,,,,,,,,,,,,,
libuv,982,closed,opened,2013-11-03 04:45:11,,,,,,,,,,,,,,,,,
libuv,982,closed,title,2013-11-03 04:45:11,00:00,,1,,"b""b' Calling uv_read_stop on stdin tty causes EOF to never be read'""",,,,,,,,,,,,
libuv,982,closed,body,2013-11-03 04:45:11,00:00,,1,,"b'b""   When I compile that program", and then run it via  , the program will never exit (it never sees EOF for stdin). If the call to is omitted, however, then the program will successfully exit. I also found out that running and then hitting ctrl+D does indeed see the EOF (and the program exits). This program was initially tested on linux (where it didn\'t work), but it turns out that on osx this does work (both and + ctrl-d). I also found out that the reading one byte at a time is important," If I read a larger buffer then this works as expected (at least in the small cases).""'",,,,,,
libuv,982,closed,1,2013-11-03 04:45:11,43.35,1,,,"b'b"" Hm it appears that I haven\'t investigated this enough. I seem to have prematurely opened this (I think the code is right). Closing for now until I figure out what\'s going on. Sorry for the noise!""'",,,,,,,,,,,,
libuv,982,closed,closed,2013-11-03 05:28:33,43.37,1,2,0,,,,,,,,,,,,,
libuv,982,closed,2,2013-11-03 04:45:11,52.85,,1,,"b""b' Investigated a bit more", updated the program," and it looks like this may actually be a bug.'""",,,,,,,,,,
libuv,982,closed,reopened,2013-11-03 06:21:23,52.83,1,3,0,,,,,,,,,,,,,
libuv,982,closed,3,2013-11-03 04:45:11,242.92,,,1,"b""b' Confirmed"," thanks.  Possibly related to #971.'""",,,,,,,,,,,
libuv,982,closed,closed,2013-11-08 16:29:55,608.53,1,3,1,,,,,,,,,,,,,
libuv,982,closed,4,2013-11-03 04:45:11,366.98,,,1,"b""b' Thanks for looking into this!'""",,,,,,,,,,,,
libuv,982,closed,-,-,-,1,3,2,,,,,,,,,,,,,
libuv,986,closed,opened,2013-11-05 07:36:10,,,,,,,,,,,,,,,,,
libuv,986,closed,title,2013-11-05 07:36:10,00:00,,1,,"b""b' darwin: fsevents reports events from before watcher start'""",,,,,,,,,,,,
libuv,986,closed,body,2013-11-05 07:36:10,00:00,,1,,"b""b' Run in node: The above works as expected on linux (it just sits there) but throws the following exception on darwin: /cc @indutny'""",,,,,,,,,,,,
libuv,986,closed,1,2013-11-05 07:36:10,114.2,,1,,"b""b' Not something I could affect"," perhaps FSEvents is sending previously received event.'""",,,,,,,,,,,
libuv,986,closed,closed,2013-11-05 09:51:07,134.95,0,3,0,,,,,,,,,,,,,
libuv,986,closed,2,2013-11-05 07:36:10,230.2,,1,,"b'b"" That\'s what happens"," yes.  Can\'t we filter out such events with e.g. FSEventsGetLastEventIdForDeviceBeforeTime()?""'",,,,,,,,,,,
libuv,986,closed,3,2013-11-05 07:36:10,9.3,,1,,"b""b' The event will most likely have EventId bigger than this time"," but I can recheck it if you want me to.'""",,,,,,,,,,,
libuv,986,closed,reopened,2013-11-05 13:29:52,218.75,0,5,0,,,,,,,,,,,,,
libuv,986,closed,4,2013-11-05 07:36:10,267.1,1,,,"b'b"" @bnoordhuis I\'m afraid it won\'t work with mounted directories... I mean", you may watch  , which has which is a mount of another device. Perhaps," I\'m stressing it too much and it will work just fine?""'",,,,,,,,,
libuv,986,closed,5,2013-11-05 07:36:10,3.13,,1,,"b'b"" Also", I\'ve just measured event ids. And they seem to be bigger than that I took right before starting FSEventStream. So I guess it is just an OSX bug," and not something that we could fix there.""'",,,,,,,,,,
libuv,986,closed,closed,2013-11-05 18:00:14,270.37,1,6,0,,,,,,,,,,,,,
libuv,986,closed,-,-,-,1,6,0,,,,,,,,,,,,,
libuv,1028,closed,opened,2013-12-06 15:19:46,,,,,,,,,,,,,,,,,
libuv,1028,closed,title,2013-12-06 15:19:46,00:00,,1,,"b""b' stream: introduce uv_try_write(...)'""",,,,,,,,,,,,
libuv,1028,closed,body,2013-12-06 15:19:46,00:00,,1,,"b""b'   acts like  ","but without queueing actual write until UV_POLLOUT (or IOCP completion).This is useful for doing writes using on-stack requests. see #1025 for details.'""",,,,,,,,,,,
libuv,1028,closed,1,2013-12-06 15:19:46,0.92,1,,,"b'b"" @saghul I\'m not really confident about windows"," hopefully CI will let me know if I had wrong assumptions about it. @piscisaureus want to weigh in?""'",,,,,,,,,,,
libuv,1028,closed,2,2013-12-06 15:19:46,342.38,,,1,"b'b"" Looks like its totally borked on windows", and won\'t work ever. Thanks @piscisaureus for explaining it on IRC. After all, it wouldn\'t be possible to have on-stack," and thus no point in additional API for this.""'",,,,,,,,,
libuv,1028,closed,closed,2013-12-06 21:03:04,343.3,1,2,1,,,,,,,,,,,,,
libuv,1028,closed,reopened,2013-12-13 11:30:26,867.37,1,2,1,,,,,,,,,,,,,
libuv,1028,closed,3,2013-12-06 15:19:46,867.8,,1,,"b'b"" @saghul looks like it may give us 30% improvement for some cases. Let\'s return on windows"," LGTY?""'",,,,,,,,,,,
libuv,1028,closed,4,2013-12-06 15:19:46,15.07,,,1,"b'b"" Left a couple of comments on the Unix side. For Windows"," why can\'t it succeed? I see this in the code: url  @piscisaureus can you shed some light? :-)""'",,,,,,,,,,,
libuv,1028,closed,5,2013-12-06 15:19:46,4.23,,,1,"b'b"" @saghul I can\'t unqueue write.. that\'s why :)""'",,,,,,,,,,,,
libuv,1028,closed,6,2013-12-06 15:19:46,4.22,,1,,"b'b"" @indutny You mean the overlapped handle can\'t be cancelled?""'",,,,,,,,,,,,
libuv,1028,closed,7,2013-12-06 15:19:46,3.12,,1,,"b""b' This just crossed my mind: since the req is kind of a throwaway in this function"," what if we dump it from the function signature and use a stack allocated one internal to it instead?  '""",,,,,,,,,,,
libuv,1028,closed,8,2013-12-06 15:19:46,1.93,,,1,"b""b' Oh", that is a good idea," actually!'""",,,,,,,,,,
libuv,1028,closed,9,2013-12-06 15:19:46,2.87,1,,,"b""b' Ah", looks like @piscisaureus already explained it to you over IRC," disregard my previous comment for Windows. I guess the appropriate errno would be ENOSYS.'""",,,,,,,,,,
libuv,1028,closed,10,2013-12-06 15:19:46,20.03,,1,,"b'b"" What about partial writes?  Don\'t take this the wrong way but the current approach seems pretty brittle.""'",,,,,,,,,,,,
libuv,1028,closed,11,2013-12-06 15:19:46,5.6,,,1,"b'b"" On 12/13/13 1:22 PM", Ben Noordhuis wrote:Thanks for chiming in Ben! I guess we should return the number of bytes we where able to write... Then I\'m not sure if we can deal with trying to write multiple buffers. Maybe we need to rethink this and do: int uv_try_write(uv_stream_t *handle," const uv_buf_t *buf); And return error or the number of bytes out of that buffer we were able to write. ##  Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9url ""'",,,,,,,,,,
libuv,1028,closed,12,2013-12-06 15:19:46,0.55,,,1,"b'b"" @bnoordhuis thanks for a tip"," didn\'t think about that.""'",,,,,,,,,,,
libuv,1028,closed,13,2013-12-06 15:19:46,288.08,,1,,"b""b' @saghul updated"," please take a look.'""",,,,,,,,,,,
libuv,1028,closed,14,2013-12-06 15:19:46,42.47,,1,,"b""b' LGTM.'""",,,,,,,,,,,,
libuv,1028,closed,15,2013-12-06 15:19:46,30.25,,,1,"b""b' Thanks"," landed in b5e7798'""",,,,,,,,,,,
libuv,1028,closed,closed,2013-12-13 18:29:17,418.85,2,8,7,,,,,,,,,,,,,
libuv,1028,closed,-,-,-,2,8,7,,,,,,,,,,,,,
libuv,1049,closed,opened,2013-12-20 13:11:52,,,,,,,,,,,,,,,,,
libuv,1049,closed,title,2013-12-20 13:11:52,00:00,,1,,"b""b' Remove unused tags.'""",,,,,,,,,,,,
libuv,1049,closed,body,2013-12-20 13:11:52,00:00,,1,,"b""b' It would help browing if some tags could get removed. multiplicity2/multiplicity3 is no longer relevant as it was used to add multiple loop support for libuv"," which is already a core feature.'""",,,,,,,,,,,
libuv,1049,closed,1,2013-12-20 13:11:52,124.5,,,1,"b""b' Thanks"," done.'""",,,,,,,,,,,
libuv,1049,closed,closed,2013-12-20 15:16:22,124.5,0,2,1,,,,,,,,,,,,,
libuv,1049,closed,2,2013-12-20 13:11:52,1262.75,,1,,"b""b' I mean like going through all the branches and removing the once who are  than 5 months'""",,,,,,,,,,,,
libuv,1049,closed,3,2013-12-20 13:11:52,68.17,,1,,"b""b' @txdv do you want to help us with this? ;)'""",,,,,,,,,,,,
libuv,1049,closed,4,2013-12-20 13:11:52,244.2,,,1,"b'b"" I don\'t have repo access and if I say something you still have to check it up yourself: blocking-pipes", c-ares, cleanup-gyp-build, dlopen, emfile_trick, file_watcher, fs, fs_link, ipc, ipc2," ipc-listen can get removed. They are really old. Do wee need cpp-ify? I don\'t see the benefits of the one change in that branch. What does funnel do?""'",,
libuv,1049,closed,reopened,2013-12-21 18:12:17,175.92,0,4,2,,,,,,,,,,,,,
libuv,1049,closed,5,2013-12-20 13:11:52,1148.52,,,1,"b'b\' @indutny please create topic branches in your own repository instead of creating branches in . saghul does it like that and it is a good way to do it. people tend to forget to delete the branches and it is just clutter which is not really useful when a user is inspecting the repository. Look at how many branches we already have which are older then half a year because Igor forgot to delete them and nobody is deleting them now because it is ""useless"" work which doesn\\\'t really improve the lib itself. It isn\\\'t useless", people who look into the project will appreciate a good branch structure. Main repo should only have stable, unstable(master) branches. The current tagging mechanism is very good and specifies versions so I don\\\'t think we need a branch for every major version. \'',,,,,,,,,,
libuv,1049,closed,6,2013-12-20 13:11:52,191.45,,1,,"b""b' I did it only for one thing recently. But yes"," I agree with you.'""",,,,,,,,,,,
libuv,1049,closed,7,2013-12-20 13:11:52,1001.25,,1,,"b'b"" We still have 51 branches. Please just remove every topic branch which are older than 1 year from the main repo. 90% of them are by piscisaureus and bnoordhuis and they won\'t be looking into them ever again.  ""'",,,,,,,,,,,,
libuv,1049,closed,8,2013-12-20 13:11:52,5.15,,1,,"b'b"" I\'ve been pruning them slowly"," I\'ll get to just 3.""'",,,,,,,,,,,
libuv,1049,closed,9,2013-12-20 13:11:52,28.7,,1,,"b""b' url  35 branches are '""",,,,,,,,,,,,
libuv,1049,closed,10,2013-12-20 13:11:52,1.92,1,,,"b""b' I know. There is just som much time in a day"," sorry.'""",,,,,,,,,,,
libuv,1049,closed,11,2013-12-20 13:11:52,204.72,,1,,"b""b' One branch a day keeps the clutter away.'""",,,,,,,,,,,,
libuv,1049,closed,12,2013-12-20 13:11:52,15.47,,,1,"b""b' On 06/26/2014 02:33 PM"," Andrius Bentkus wrote:Down to 45!'""",,,,,,,,,,,
libuv,1049,closed,13,2013-12-20 13:11:52,173.75,,,1,"b""b' Down to 29. Keep going"," you are strong @saghul '""",,,,,,,,,,,
libuv,1049,closed,14,2013-12-20 13:11:52,322.5,,1,,"b""b' We are at 15"," now a person can with one simple look overview all the branches. '""",,,,,,,,,,,
libuv,1049,closed,15,2013-12-20 13:11:52,540.23,,,1,"b'b"" We are down to 10 now. I\'m going to close this and leave it like that for the time being. Yes", some of those branches are old," but they contain some experiments I might want to look at some time :-) Also 10 is not that bad!""'",,,,,,,,,,
libuv,1049,closed,closed,2014-07-03 06:05:08,712.85,1,10,6,,,,,,,,,,,,,
libuv,1049,closed,-,-,-,1,10,6,,,,,,,,,,,,,
libuv,1101,closed,opened,2014-02-07 13:08:19,,,,,,,,,,,,,,,,,
libuv,1101,closed,title,2014-02-07 13:08:19,00:00,,1,,"b""b' Assertion failed: (w->events == UV__POLLIN)", function uv__io_poll, file ../," line 190.'""",,,,,,,,,
libuv,1101,closed,body,2014-02-07 13:08:19,00:00,1,,,"b""b' using v0.10.25", build from github on mac os 10.9 mavericks box / clang 5.0 was running coffee 1.7.1 in continuous compile mode (have been the last couple days), suddenly died with this error: Unfortunately, loading the core w/ lldb gives errors," but I am attaching the backtrace nonetheless.  Also included is the  from local build.  Looking into sharing the core.  '""",,,,,,,,
libuv,1101,closed,1,2014-02-07 13:08:19,206.53,,,1,"b'b"" @benfleis I have no idea how it could happen", and haven\'t seen any issue reports like this. If you still able to reproduce it," may I ask you to add this code: on that line and recompile node? Please let me know if you\'ll be able to gather some info! Thank you!""'",,,,,,,,,,
libuv,1101,closed,2,2014-02-07 13:08:19,1127.2,,,1,"b'b"" @indutny It has never reproduced", despite running that code lots and lots. I have a  core file, but attaching to it w/ lldb suggests that it is corrupted somehow.  I can send it to you, but even zipped it\'s 100M.  Send me a pm and I will happily send it your way. I will also add the patch to my code and recompile," jic.""'",,,,,,,,
libuv,1101,closed,3,2014-02-07 13:08:19,14.22,,1,,"b'b"" I don\'t think that there is any real need in a core file", since you had a release binary with enabled optimizations and without debugging symbols anyway. Please let me know, if you\'ll be able to reproduce it. Going to close the issue for now," assuming that it was a random neutrino crashing into your laptop\'s RAM.""'",,,,,,,,,
libuv,1101,closed,closed,2014-03-01 11:36:16,1347.95,1,2,2,,,,,,,,,,,,,
libuv,1101,closed,4,2014-02-07 13:08:19,30.42,,1,,"b'b"" The very same thing happened to me right now in Node v0.10.26 when using a lot. I haven\'t found a way to reproduce this neutrino induced crash \\xe2\\x80\\x93 just wanted to let you know that this happens to others"," too. Also running OS X 10.9.2.""'",,,,,,,,,,,
libuv,1101,closed,reopened,2014-03-06 12:12:58,36.7,1,3,2,,,,,,,,,,,,,
libuv,1101,closed,5,2014-02-07 13:08:19,6.4,,1,,"b""b' Ok"," will take another look at it.'""",,,,,,,,,,,
libuv,1101,closed,6,2014-02-07 13:08:19,642.6,,1,,"b""b' Should be fixed in 9b38c01b540b60408f8eb1d9c288656405e25f7e'""",,,,,,,,,,,,
libuv,1101,closed,closed,2014-03-10 22:56:09,643.18,1,5,2,,,,,,,,,,,,,
libuv,1101,closed,7,2014-02-07 13:08:19,1399.62,,,1,"b""b' Just ran into this myself. What do I need to do to pull in the fix? Thanks!'""",,,,,,,,,,,,
libuv,1101,closed,8,2014-02-07 13:08:19,542.57,,1,,"b""b' @kristoferjoseph you can get the v0.10 libuv and node branches"," then copy libuv/\\\\* to  and rebuild. That should do.'""",,,,,,,,,,,
libuv,1101,closed,9,2014-02-07 13:08:19,982.27,,,1,"b'b"" @saghul Cool. Is there an imminent release that will have this patch? More importantly is there a better place I can look to track it\'s inclusion?Thank you so much for the information. ""'",,,,,,,,,,,,
libuv,1101,closed,10,2014-02-07 13:08:19,984.13,1,,,"b'b"" It\'s already past of the v0.10 branch", so the next Node 0.10.x release will have it included. As for the release date, I have no idea," sorry :-/""'",,,,,,,,,
libuv,1101,closed,-,-,-,2,6,4,,,,,,,,,,,,,
libuv,1111,closed,opened,2014-02-14 12:27:13,,,,,,,,,,,,,,,,,
libuv,1111,closed,title,2014-02-14 12:27:13,00:00,,1,,"b""b' export UV_VERSION macro '""",,,,,,,,,,,,
libuv,1111,closed,body,2014-02-14 12:27:13,00:00,,1,,"b""b' If API changes so dramatically version by version"," is it possible to moveUV_VERSION_MAJOR UV_VERSION_MINOR UV_VERSION_PATCH UV_VERSION_IS_RELEASE UV_VERSION  to uv.h?'""",,,,,,,,,,,
libuv,1111,closed,1,2014-02-14 12:27:13,41.98,,1,,"b""b' Nope"," you should be using these: url '""",,,,,,,,,,,
libuv,1111,closed,closed,2014-02-14 13:09:12,41.98,0,3,0,,,,,,,,,,,,,
libuv,1111,closed,2,2014-02-14 12:27:13,2.1,,1,,"b'b"" Knowing the version at runtime doesn\'t help with compiling the program in the first place"," where a macro would be much more helpful to conditionally compile the correct calls.""'",,,,,,,,,,,
libuv,1111,closed,3,2014-02-14 12:27:13,2.23,,1,,"b""b' @saghul indeed"," we need to consider exporting them. Do you have any objections?'""",,,,,,,,,,,
libuv,1111,closed,reopened,2014-02-14 13:13:33,4.35,0,5,0,,,,,,,,,,,,,
libuv,1111,closed,4,2014-02-14 12:27:13,7.72,,1,,"b'b"" Hum"," I hadn\'t considered that. I would definitely not export UV_VERSION_IS_RELEASE.""'",,,,,,,,,,,
libuv,1111,closed,5,2014-02-14 12:27:13,325.97,,1,,"b""b' @saghul actually", it seems that this was intentionally removed from v0.11," because all patch versions have ABI compatibility.'""",,,,,,,,,,
libuv,1111,closed,6,2014-02-14 12:27:13,6.18,1,,,"b'b"" Patch versions may have ABI compatibility", but minor have significant  differences, and thus it\'s difficult to know against whom you\'re building, so you can\'t write code that targets two stables easily. In Node it\'s not a problem because we do keep the same minor," but we also export useful macros. A well behaved C library should definitely include version macros.""'",,,,,,,,
libuv,1111,closed,7,2014-02-14 12:27:13,8.3,,1,,"b'b"" @saghul mind if I\'ll ask you help me with this? ;)""'",,,,,,,,,,,,
libuv,1111,closed,8,2014-02-14 12:27:13,10.62,,1,,b'b\' No problem, I\\\'ll make a patch.On Feb 14, 2014 8:01 PM,"Fedor Indutny"" notifications@ wrote:\''
libuv	1111	closed	9	saghul	2014-02-14 12:27:13	43.83		+1		b""b' Fixed in url '",,,,,,,,,
libuv,1111,closed,closed,2014-02-17 19:56:09,402.6,1,10,0,,,,,,,,,,,,,
libuv,1111,closed,-,-,-,1,10,0,,,,,,,,,,,,,
libuv,1129,closed,opened,2014-02-19 12:45:47,,,,,,,,,,,,,,,,,
libuv,1129,closed,title,2014-02-19 12:45:47,00:00,,1,,"b""b' [v0.10.25 Linux x86_64] make test fails'""",,,,,,,,,,,,
libuv,1129,closed,body,2014-02-19 12:45:47,00:00,1,,,"b""b' /-v0.10.25/run-tests  Output from process  :  uv_get_process_title: /-v0.10.25/run-tests  uv_resident_set_memory: 626688uv_uptime: 3139754.693615uv_cpu_info:  model: Intel(R) Xeon(R) CPU    3065  @ 2.33GHz  speed: 2333  : 18256400  : 23592500  : 1272896128  : 0  : 1367400  model: Intel(R) Xeon(R) CPU    3065  @ 2.33GHz  speed: 2333  : 18728500  : 20407300  : 1260810828  : 0  : 1241200uv_interface_addresses:  name: lo  internal: 1  address: 127.0.0.1  name: eth0  internal: 0  address: 12.34.56.78  name: lo  internal: 1  address: ::1  name: eth0  internal: 0  address: ipv6  name: eth0  internal: 0# address: ipv6 failed: exit code 134Output from process  :exit_cb# Assertion failed in -spawn.c on line 58: exit_status == 1 failed: exit code 134Output from process  :# Assertion failed in -fs.c on line 200: req->result == -1 make: **\\\\* [test] Error 2'""",,,,,,,,,,,,
libuv,1129,closed,1,2014-02-19 12:45:47,7.1,,1,,"b""b' What kind of environment are you using?'""",,,,,,,,,,,,
libuv,1129,closed,2,2014-02-19 12:45:47,34.2,,1,,"b'b\' Ubuntu 13.10 64bit. Sent with my TI99/4AIl 19/ 13:53 ""Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9"" notifications@ hascritto:\''",,,,,,,,,,,,
libuv,1129,closed,3,2014-02-19 12:45:47,31.35,1,,,"b'b"" More precisely I confused my desktop with the server.It\'s 32bit 12.04.4. # lsb_release -a No LSB modules are available.Distributor 4 LTSRelease:    12.04Codename:   precise # cat / Linux version 3.2.0-57-generic-pae (buildd@lamiak) (gcc version 4.6.3 ( 4.6.3-1ubuntu5) ) #87-Ubuntu SMP Tue Nov 12 21:57:43 UTC 2013 # gcc -v Using built-in specs.COLLECT_GCC=gccCOLLECT_LTO_WRAPPER=/-linuxwrapperTarget: i686-linux-gnuConfigured with: ../ -v with-pkgversion=\' 4.6.3-1ubuntu5\' with-bugurl=file:///-4.6/ enable-languages=c",c++,fortran,objc,"obj-c++ prefix=/usr program-suffix=-4.6 enable-shared enable-linker-build-id with-system-zlib libexecdir=/ without-included-gettext enable-threads=posix with-gxx-include-dir=/++/4.6 libdir=/ enable-nls with-sysroot=/ enable-clocale=gnu enable-libstdcxx-debug enable-libstdcxx-time=yes enable-gnu-unique-object enable-plugin enable-objc-gc enable-targets=all disable-werror with-arch-32=i686 with-tune=generic enable-checking=release build=i686-linux-gnu host=i686-linux-gnu target=i686-linux-gnuThread model: posixgcc version 4.6.3 ( 4.6.3-1ubuntu5) ""'",,,,,,,,
libuv,1129,closed,4,2014-02-19 12:45:47,146.58,,,1,"b""b' This is probably something related to a specific setting in OP environment"," as 0.10.25 is built fine on Debian autobuilders: url '""",,,,,,,,,,,
libuv,1129,closed,5,2014-02-19 12:45:47,16.58,,,1,"b'b"" Thanks @lucab. I\'ll tentatively close this then. ""'",,,,,,,,,,,,
libuv,1129,closed,closed,2014-03-02 16:41:36,235.82,2,3,2,,,,,,,,,,,,,
libuv,1129,closed,6,2014-02-19 12:45:47,250.75,1,,,"b""b' I would like to reopen the ticket and am willing to help as much as possible in shoothing this trouble down.I need to build libuv and am not able to. Unless 32bit LTS Ubuntu is not considered a viable build architecture.'""",,,,,,,,,,,,
libuv,1129,closed,reopened,2014-03-02 21:09:51,268.25,3,3,2,,,,,,,,,,,,,
libuv,1129,closed,7,2014-02-19 12:45:47,20.33,1,,,"b'b"" I just reopened it. Unfortunately", I\'m not able to help you find the cause for this, since I cannot reproduce it. Of course Ubuntu LTS is a viable build architecture," but the fact that some tests fail doesn\'t mean you are not able to use libuv. Can you consistently reproduce these test failures?""'",,,,,,,,,
libuv,1129,closed,8,2014-02-19 12:45:47,5.95,,1,,b'b\' The same build attempt failed 6 time out of 6. Of course as my system is(still) a deterministic one.Tomorrow I will hand check the error within the source code and will reportback here.And, by the way," libuv seems not to be supported in 64 bit Linux. Sent with my TI99/4AIl 02/ 22:12 ""Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9"" notifications@ hascritto:\''",,,,,,,,,,
libuv,1129,closed,9,2014-02-19 12:45:47,2.08,,,1,"b'b"" On 03/02/2014 10:18 PM", notorand-it wrote:Thanks!Why do you think that? That\'s certainly not true. My workstation is a 64bit Debian system," and we have a Jenkins infrastructure which tests libuv in 32 and 64 bits in different operating systems.##  Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9 ""'",,,,,,,,,,
libuv,1129,closed,10,2014-02-19 12:45:47,5.08,,1,,"b'b\' Sent with my TI99/4AIl 02/ 22:20 ""Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9"" notifications@ hascritto:There seems to be no 64 bit Linux in the mentioned autobuild list.\''",,,,,,,,,,,,
libuv,1129,closed,11,2014-02-19 12:45:47,7.42,,1,,"b""b' There certainly is. Here is the latest build that was made for the master branch"," for example: url  ##  Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9 '""",,,,,,,,,,,
libuv,1129,closed,12,2014-02-19 12:45:47,33.62,,1,,"b'b\' OK. The pace Luca referenced was not reporting any 64 bit Linux. Sent with my TI99/4AIl 02/ 22:33 ""Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9"" notifications@ hascritto:\''",,,,,,,,,,,,
libuv,1129,closed,13,2014-02-19 12:45:47,68.68,,1,,"b'b"" I\'m sorry that it gave you the wrong impression", however:that list is only for _debian_ autobuilders, and it\'s not authoritative for the libuv project itself. It was just given as a proof that the same version is fine on similar systems. that list only contains autobuilders logs. I\'ve built and uploaded the first binary from my 64bits machine myself," so you won\'t see the logs there.""'",,,,,,,,,
libuv,1129,closed,14,2014-02-19 12:45:47,11.68,,,1,"b'b"" @notorand-it can you provide a download link to the platform you\'re trying to build and test on? Seeing Linaro in the conversation makes me think of the ARM related portions and not the Intel parts. There\'s clearly a disconnect here", we\'re building and testing fine on stock Debian, Ubuntu, and Centos. I\'m not particularly looking to increase the matrix of build and test environments in the CI," but it seems there are still some crucial pieces of information about your environment we\'re missing.""'",,,,,,,,
libuv,1129,closed,15,2014-02-19 12:45:47,563.62,,1,,"b'b"" 2014-03-03 0:27 GMT+01:00 Timothy J Fontaine notifications@:url No ARM. It\'s plain old 32bit x86 Intel architecture.""'",,,,,,,,,,,,
libuv,1129,closed,16,2014-02-19 12:45:47,281.75,1,,,"b'b\' I have re-run the whole build from scratch using v0.11.21.To cut it short: it\\\'s still failing at the ""make check"". Build result (make check): I am attaching the whole output of: as well as the  produced by the configure script itself. : :  : make_: If you need more details", please just ask.\'',,,,,,,,,,,
libuv,1129,closed,17,2014-02-19 12:45:47,3.75,,1,,"b""b' On 03/03/2014 02:32 PM"," notorand-it wrote:Please try latest master. Those asserts on uv_loop_close have been fixed.> make[1]: Leaving directory'""",,,,,,,,,,,
libuv,1129,closed,18,2014-02-19 12:45:47,12.35,,1,,"b'b\' The make check ended like this: Which I would interpret as ""it\\\'s OK"".I am little bit puzzled now. I understand that in the past there have been actual failures in the build process.Those somehow have been relegated to some ""weird build environment"" at the beginning.Now", on the very same system the build succeeds.Was that a build environment issue, or some sort of compatibility with Ubuntu 12.04.4 LTS?\'',,,,,,,,,,
libuv,1129,closed,19,2014-02-19 12:45:47,4.58,1,,,"b'b"" Yes", that\'s correct.I don\'t see any build failures, in the previous output messages you\'ve pasted here.Can you try latest 0.10 branch? The build process was different then," I guess it\'s possible some issue may manifest on your system which I cannot see / reproduce.""'",,,,,,,,,
libuv,1129,closed,20,2014-02-19 12:45:47,15.68,,,1,"b'b\' You are right. There has been no actual build failure. Only ""make check""failures.In my personal opinion and view"," a build process is successful only whenall steps are successful. But this is actually philosphy. In the first reported case the built library was .One hor ago I build v0.11.21 (lastest version)Both failing at the ""make check"". A few minutes ago I have built the current master version"," passing the""make check"". Now I have built v0.10.25 _on the very same system_ as in the past. Now""make test"" suceeds. I guess some system update fixed something as",clearly, I haven\\\'t fixed it myself. So bottom line is v0.11 doesn\\\'t build clean on up-to-date Ubuntu 12.04.4,while now v0.10 does. Good to know. ##  Vincenzo Romano  ## Information Technologies cel. +39 339 8083886fax. +39 02 700506964 ## tel. +39 0823 454163 NON QVIETIS MARIBVS NAVTA PERITVS 2014-03-03 14:53 GMT+01:00 Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9 notifications@:\'',,,,,,,
libuv,1129,closed,21,2014-02-19 12:45:47,7.78,,,1,"b'b"" On 03/03/2014 03:08 PM", notorand-it wrote:Latest master (unreleased 0.11) does build, right? I\'ll close this now, since the same version that used to fail before is working now," Thanks for your thorough testing!""'",,,,,,,,
libuv,1129,closed,closed,2014-03-03 14:16:55,1027.07,6,11,6,,,,,,,,,,,,,
libuv,1129,closed,22,2014-02-19 12:45:47,1.73,,,1,"b""b' make check runs fine"," as you saw.Yes I think you can close the ticket. ##  Vincenzo Romano  ## Information Technologies cel. +39 339 8083886fax. +39 02 700506964 ## tel. +39 0823 454163 NON QVIETIS MARIBVS NAVTA PERITVS 2014-03-03 15:16 GMT+01:00 Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9 notifications@:'""",,,,,,,,,,,
libuv,1129,closed,-,-,-,6,11,7,,,,,,,,,,,,,
libuv,1183,closed,opened,2014-03-07 12:47:07,,,,,,,,,,,,,,,,,
libuv,1183,closed,title,2014-03-07 12:47:07,00:00,,1,,"b""b'  minor fixes'""",,,,,,,,,,,,
libuv,1183,closed,body,2014-03-07 12:47:07,00:00,,1,,"b""b' fix uv_handle_size and uv_req_size when failing return 0fix VC++ warning C4244fix VC++ warning C4389'""",,,,,,,,,,,,
libuv,1183,closed,1,2014-03-07 12:47:07,0.03,,,1,"b""b' Thank you for contributing this pull request! Here are a few pointers to make sure your submission will be considered for inclusion. Commit @77a7ef6f6602089728f48218149ef662a3222977 has the following error(s):First line of commit message must be no longer than 50 characters The following commiters were not found in the CLA:Rasmus Christian Pedersen You can fix all these things _without_ opening another issue. Please see []url  for more information'""",,,,,,,,,,,,
libuv,1183,closed,2,2014-03-07 12:47:07,6.62,,1,,"b""b' @Nodejs-Jenkins signed CLA'""",,,,,,,,,,,,
libuv,1183,closed,3,2014-03-07 12:47:07,9.35,,,1,"b""b' @retep998 thanks"," you are right. Will fix it.'""",,,,,,,,,,,
libuv,1183,closed,4,2014-03-07 12:47:07,133.98,,1,,"b""b' Revert to my original fix returning 0?'""",,,,,,,,,,,,
libuv,1183,closed,5,2014-03-07 12:47:07,1.28,,1,,"b""b' I guess so"," yes. The size of a handle needs to be '""",,,,,,,,,,,
libuv,1183,closed,6,2014-03-07 12:47:07,249.52,,1,,"b""b' @saghul reverted to original fix"," hope this is better?'""",,,,,,,,,,,
libuv,1183,closed,7,2014-03-07 12:47:07,129.67,,,1,"b""b' @saghul this I like better"," should be warning-less and even a tad prettier'""",,,,,,,,,,,
libuv,1183,closed,8,2014-03-07 12:47:07,757.65,,,1,"b""b' The test failure on smartos build doesnt appear as related'""",,,,,,,,,,,,
libuv,1183,closed,closed,2014-03-10 10:15:13,1288.1,0,6,4,,,,,,,,,,,,,
libuv,1183,closed,reopened,2014-03-10 10:15:26,0.22,0,6,4,,,,,,,,,,,,,
libuv,1183,closed,closed,2014-04-16 19:58:51,583.42,0,6,4,,,,,,,,,,,,,
libuv,1183,closed,-,-,-,0,6,4,,,,,,,,,,,,,
libuv,1211,closed,opened,2014-03-23 10:57:14,,,,,,,,,,,,,,,,,
libuv,1211,closed,title,2014-03-23 10:57:14,00:00,,1,,"b'b"" process: don\'t close stdio fds during spawn""'",,,,,,,,,,,,
libuv,1211,closed,body,2014-03-23 10:57:14,00:00,,1,,"b'b"" Original Node issue: #7331Simpler testcase for the same issue: url  What is going on here(afaik) is that when stdio fd\'s are already closed during spawn then they are reused for creating pipes between the processes. Spawn doesn\'t handle this case"," duplicates the pipe endpoint back to stdio and closes the old fd(effectively closing its own stdio). The regression is at #1083. One way to fix this would be to only close non-stdio fd\'s. Others will be closed automatically by  . 42408065 This does not happen in because 359d6678 already forbids ever closing stdio. So the other way would be to get this under as well. cc @indutny ""'",,,,,,,,,,,
libuv,1211,closed,1,2014-03-23 10:57:14,1256.18,,,1,"b'b"" The problem here is unrelated to in AFAIK. The problem is that node v0.10 is closing stdio fds", while it definitely shouldn\'t. You could try backporting url  to your fork and see if it\'ll fix the problem. Closing the issue for now, but please let me know if it doesn\'t work for you and you are sure that it is a libuv problem. Thanks for reporting," though!""'",,,,,,,,,
libuv,1211,closed,closed,2014-03-26 07:53:25,1256.18,0,2,1,,,,,,,,,,,,,
libuv,1211,closed,2,2014-03-23 10:57:14,82.3,,,1,"b'b"" Hi Fedor Thanks for looking into it. @e796e11 seems to be already merged under so that doesn\'t help me much. I added strace output to my testcase gist before and after #1083 that made me think this was the regression point. If you\'re just saying that never closing stdio is better solution to this problem then I totally agree. There are probably more problems that may come from this that I\'m not aware of. Regarding your comment that this is a Node-only issue can you clarify what is wrong with the libuv testcase that doesn\'t pass under  . url ""'",,,,,,,,,,,,
libuv,1211,closed,3,2014-03-23 10:57:14,55.37,,1,,"b'b"" Hm... If I get you right", you are talking about following 4. And get\'s closed in  ," which causes an error? Something like this or more complicated?""'",,,,,,,,,,
libuv,1211,closed,4,2014-03-23 10:57:14,0.42,,1,,"b""b' If so it should be fixed after fixing url '""",,,,,,,,,,,,
libuv,1211,closed,5,2014-03-23 10:57:14,16.08,,1,,"b""b' Yes"," thats pretty much it. url  is the most likely cause imho. More complicated fd mapping support may very well solve this but note that in my case I do not care about the main process stdio fd-s at all. I just want a pipe to talk to the child process. Starting main process from a pipe that is already closed forbids me from doing that. Also just a reminder that this is only the case in and  .'""",,,,,,,,,,,
libuv,1211,closed,reopened,2014-03-26 10:31:22,157.95,0,5,2,,,,,,,,,,,,,
libuv,1211,closed,6,2014-03-23 10:57:14,4.22,,,1,"b""b' Ah"," I think I finally got what you was talking about :) Does this patch fix problem for you:  '""",,,,,,,,,,,
libuv,1211,closed,7,2014-03-23 10:57:14,2.7,,1,,"b""b' Yes"," that looks equal to 4240806 that worked for me.'""",,,,,,,,,,,
libuv,1211,closed,8,2014-03-23 10:57:14,21.35,,,1,"b""b' Ok"," good. Mind submitting your patch with instead of  ?'""",,,,,,,,,,,
libuv,1211,closed,9,2014-03-23 10:57:14,22.13,,1,,"b""b' Sure"," here it is: #1217'""",,,,,,,,,,,
libuv,1211,closed,closed,2014-03-26 16:45:22,374.0,0,7,4,,,,,,,,,,,,,
libuv,1211,closed,10,2014-03-23 10:57:14,86.97,,1,,"b'b"" It looks like this is causing a regression in the test suite:  While I can\'t reproduce it on any of my machines"," it has been observed by Debian builders and your jenkins linux builder:url url ""'",,,,,,,,,,,
libuv,1211,closed,11,2014-03-23 10:57:14,92.92,,1,,"b""b' @indutny I think 69f9f6ff should be backported to v0.10 '""",,,,,,,,,,,,
libuv,1211,closed,12,2014-03-23 10:57:14,273.78,,,1,"b""b' Thanks"," backported in c38e97e'""",,,,,,,,,,,
libuv,1211,closed,-,-,-,0,9,5,,,,,,,,,,,,,
libuv,1252,closed,opened,2014-04-23 15:12:04,,,,,,,,,,,,,,,,,
libuv,1252,closed,title,2014-04-23 15:12:04,00:00,,1,,"b""b' addr in uv_udp_recv_cb() is garbage when using uv_udp_open() in Linux'""",,,,,,,,,,,,
libuv,1252,closed,body,2014-04-23 15:12:04,00:00,,1,,"b""b' I pass a non-blocking AF_UNIX SOCK_DGRAM socket to  ", so I can use the UDP API of libuv.  It works perfectly. But... when I inspect the given in the  : In OSX (Mavericks): I inspect the family of and, indeed, it is (OK). Linux (Debian 7): I inspect the family of and it is unknown. This is, the given is not a at all," but garbage. I expect this is a bug (in Linux) given that libuv should not provide a garbage  .'""",,,,,,,
libuv,1252,closed,1,2014-04-23 15:12:04,64.58,,1,,"b'b"" Sorry for opening this issue after publishing the same in the mailing list"," in which I\'ve got a very good response including a patch: url ""'",,,,,,,,,,,
libuv,1252,closed,2,2014-04-23 15:12:04,11.82,,,1,b'b\' Opss," you must write ""fix #NNN"" instead of ""fixes #NNN"" if you want that Github automatically closes the issue :) \''",,,,,,,,,,,
libuv,1252,closed,closed,2014-04-23 16:28:28,76.4,0,3,1,,,,,,,,,,,,,
libuv,1252,closed,3,2014-04-23 15:12:04,0.63,,1,,"b'b"" PR hasn\'t landed yet ;)""'",,,,,,,,,,,,
libuv,1252,closed,reopened,2014-04-23 16:29:06,0.63,0,4,1,,,,,,,,,,,,,
libuv,1252,closed,4,2014-04-23 15:12:04,0.98,1,,,"b""b' right"," sorrry'""",,,,,,,,,,,
libuv,1252,closed,closed,2014-04-23 17:23:22,54.27,1,4,1,,,,,,,,,,,,,
libuv,1252,closed,-,-,-,1,4,1,,,,,,,,,,,,,
libuv,1296,closed,opened,2014-05-22 08:45:43,,,,,,,,,,,,,,,,,
libuv,1296,closed,title,2014-05-22 08:45:43,00:00,,1,,"b""b' Fix build on mingw'""",,,,,,,,,,,,
libuv,1296,closed,body,2014-05-22 08:45:43,00:00,,1,,"b""b' add getnameinfo.c to define WSAPOLLFD on mingwcall getnameinfo if GetNameInfo is not defined", and it out localized characters," so convert to wide characters.define COMMON_LVB_REVERSE_VIDEO if not defined'""",,,,,,,,,,
libuv,1296,closed,1,2014-05-22 08:45:43,1351.25,,,1,"b""b' Hey @mattn", thank you for this! Can you please explain why some of the changes are needed? We never needed to define WSAPOLLFD before, nor COMMON_LVB_REVERSE_VIDEO, and AFAIS GetNameInfoW is supported on Windows >= XP SP2," which is enough. What MinGW version are you using? and what Windows version?'""",,,,,,,,
libuv,1296,closed,2,2014-05-22 08:45:43,23.27,,,1,"b'b"" mingw32 doesn\'t have definition of WSAPOLLFD. Also COMMON_LVB_REVERSE_VIDEO.I know GetNameInfoW can be used after XP SP2"," But mingw32 doesn\'t have definition of that.   It don\'t have definition it self of WSAPOLLFD. this too.""'",,,,,,,,,,,
libuv,1296,closed,3,2014-05-22 08:45:43,8.8,1,,,"b'b"" I have a quite fresh copy of mingw-w64 and I do have all those definitions. Given the sorry state of MinGW ( vs MinGW-w64 vs whatever other pack) I\'m not sure what is the correct way of pleasing everyone. I\'ll be away for a couple of weeks", but when I\'m back I\'ll make sure everything works correctly on MinGW-w64 (both 32 and 64 bits), update the README and call it a day. Long story short: you need a better MinGW. I\'m keeping this open as a reminder to myself, but I won\'t be merging the changes for the aforementioned reasons, sorry. It\'s not your fault," it\'s MinGW\'s.""'",,,,,,,
libuv,1296,closed,4,2014-05-22 08:45:43,4.3,,1,,"b""b' NP. :)'""",,,,,,,,,,,,
libuv,1296,closed,5,2014-05-22 08:45:43,820.47,,1,,"b'b"" Ok", I\'m closing this now. I just pushed a fix and there are now no compilation warnings on MinGW-w64, both on 32 and 64 bits. The error in this error seems to happen with the older MinGW toolchains, I can reproduce it with: So, for future reference," my advice is to use MinGW-w64.""'",,,,,,,
libuv,1296,closed,closed,2014-06-19 21:33:48,768.08,1,4,2,,,,,,,,,,,,,
libuv,1296,closed,6,2014-05-22 08:45:43,219.13,,1,,"b""b' This issue is not fixed yet.  '""",,,,,,,,,,,,
libuv,1296,closed,7,2014-05-22 08:45:43,3.07,,1,,"b""b' This caused by a reason that WSAPOLLFD is not defined on mingw32'""",,,,,,,,,,,,
libuv,1296,closed,8,2014-05-22 08:45:43,457.63,,1,,"b""b' As I said here: url  you need a better MinGW.'""",,,,,,,,,,,,
libuv,1296,closed,9,2014-05-22 08:45:43,1289.48,,1,,"b'b"" I\'m thinking that there are many people using mingw32 (not mingw-w64) still in the world.""'",,,,,,,,,,,,
libuv,1296,closed,10,2014-05-22 08:45:43,2.88,1,,,"b'b"" I\'ll send an email to the mailing list requesting some feedback about this. At least Debian has packages for both cross compilers", so testing is not that hard," but everything adds up...""'",,,,,,,,,,
libuv,1296,closed,reopened,2014-06-23 06:26:02,532.23,2,8,2,,,,,,,,,,,,,
libuv,1296,closed,11,2014-05-22 08:45:43,7.6,,1,,"b""b' OK", currently, to build libuv on mingw32," it need a patch following.  '""",,,,,,,,,
libuv,1296,closed,12,2014-05-22 08:45:43,1.72,,1,,"b""b' I reopened the PR"," mind force-pushing your changes?'""",,,,,,,,,,,
libuv,1296,closed,13,2014-05-22 08:45:43,2.33,,1,,"b""b' No problem.'""",,,,,,,,,,,,
libuv,1296,closed,14,2014-05-22 08:45:43,0.58,,1,,"b'b"" If you need a patch against master latest master branch"," I\'ll make it""'",,,,,,,,,,,
libuv,1296,closed,15,2014-05-22 08:45:43,0.53,,1,,"b""b' That would be ideal :-)'""",,,,,,,,,,,,
libuv,1296,closed,16,2014-05-22 08:45:43,0.33,,1,,"b""b' FTR: url '""",,,,,,,,,,,,
libuv,1296,closed,17,2014-05-22 08:45:43,25.52,,1,,"b""b' Pushed forcely.'""",,,,,,,,,,,,
libuv,1296,closed,18,2014-05-22 08:45:43,9.25,,1,,"b""b' What you do mean  ? About conversion failure?'""",,,,,,,,,,,,
libuv,1296,closed,19,2014-05-22 08:45:43,1.97,,1,,"b""b' On line 78 we conver the wide chars to multibyte. Here we convert multibyte to wide char. Is this double conversion necessary when using instead of  ?'""",,,,,,,,,,,,
libuv,1296,closed,20,2014-05-22 08:45:43,4.32,,1,,"b'b"" In japanese", we are using cp932 encoding. And CJK people uses others. This part convert characters to  ," and convert into characters.Windows doesn\'t provide APIs which can convert to directly.""'",,,,,,,,,,
libuv,1296,closed,21,2014-05-22 08:45:43,2.72,1,,,"b'b"" Ah"," sorry url  GetNameInfoW is provided after Windows XP. So it shouldn\'t put the covert. it should be only adding prototype of missing definition.""'",,,,,,,,,,,
libuv,1296,closed,22,2014-05-22 08:45:43,0.23,,1,,"b'b"" I\'ll fix in soon.""'",,,,,,,,,,,,
libuv,1296,closed,23,2014-05-22 08:45:43,8.5,1,,,"b""b' Sorry about noisy replies. Done.'""",,,,,,,,,,,,
libuv,1296,closed,24,2014-05-22 08:45:43,4.67,,,1,b'b\' Thanks!On Jun 23, 2014 9:22 AM,"mattn"" notifications@ wrote:\''
libuv	1296	closed	25	k-takata	2014-05-22 08:45:43	135.42		+1		b'b""   This line might cause a problem on MinGW-w64 32-bit version because isn\'t defined. (It is only defined on 64-bit version.)Maybe the following is better?:   will be defined only when is typedef\'ed.""'
libuv	1296	closed	26	saghul	2014-05-22 08:45:43	25.6		+1		b""b' This seems to be the correct check for MinGW32 / w64:  '",,,,,,,,,,
libuv,1296,closed,27,2014-05-22 08:45:43,9.58,,1,,"b""b' Using seems better than mine.'""",,,,,,,,,,,,
libuv,1296,closed,28,2014-05-22 08:45:43,1226.12,,,1,"b'b"" Hi there", I tested this, but unfortunately it\'s not enough :-( I had to disable CRT debugging on MinGW32, though it works on MinGW-w64: url  Also, aligned allocation function are not present, so: url  Now, after adding those to your changes," I get: I guess defining GetNameInfoW is not enough. Can you add the fallback to plain ascii like you did before? Thanks!""'",,,,,
libuv,1296,closed,29,2014-05-22 08:45:43,936.75,,1,,"b""b' Ping :-)'""",,,,,,,,,,,,
libuv,1296,closed,30,2014-05-22 08:45:43,124.47,,1,,"b'b"" It\'s wired thing...However using ANSI API fixes this issue.""'",,,,,,,,,,,,
libuv,1296,closed,31,2014-05-22 08:45:43,434.3,,,1,"b""b' Thanks! Almost there! Looks like GetAddrInfoW and FreeAddrInfoW are also missing: Mind provising a patch for that too?'""",,,,,,,,,,,,
libuv,1296,closed,32,2014-05-22 08:45:43,14.12,1,,,"b'b"" Really? It\'s too strange. Those APIs are containing after Windows XP. url ""'",,,,,,,,,,,,
libuv,1296,closed,33,2014-05-22 08:45:43,11.15,1,,,"b""b' Yeah", AFAIS they should be there :-/ Not sure if it could be due to the mingw32 toolchain on Debian," unfortunately I have no way of testing it on Windows ATM.'""",,,,,,,,,,
libuv,1296,closed,34,2014-05-22 08:45:43,9.75,,,1,"b'b"" Hum", looks related to the runtime version or something, which seems to be ancient on Debian. I downloaded a more recent one from url  but got the same. This probably means that the change for GetNameInfoW was unnecessary :-( I\'ll try to setup a MinGW32 environment on Windows and test this out," not to waste your time. Thanks for your effort!""'",,,,,,,,,
libuv,1296,closed,35,2014-05-22 08:45:43,624.08,1,,,"b""b' Finally managed to get around this. Landed url  and url  which fix the build in MinGW32. Unfortunately", the cross-compiler toolchain in Debian and Ubuntu is too old so I cannot create a Jenkins configuration to test compilation. At least I did get the environment up and running on my Windows 7 machine. Sigh. Anyway, my advice to you, future reader," is to stick to MinGW-w64.'""",,,,,,,,
libuv,1296,closed,closed,2014-07-06 18:47:36,741.57,7,24,6,,,,,,,,,,,,,
libuv,1296,closed,36,2014-05-22 08:45:43,317.42,,,1,"b""b' Awesome! thank you'""",,,,,,,,,,,,
libuv,1296,closed,-,-,-,7,24,7,,,,,,,,,,,,,
libuv,1320,closed,opened,2014-06-18 08:52:05,,,,,,,,,,,,,,,,,
libuv,1320,closed,title,2014-06-18 08:52:05,00:00,,1,,"b""b' Add uv_udp_try_send()'""",,,,,,,,,,,,
libuv,1320,closed,body,2014-06-18 08:52:05,00:00,,1,,"b""b' For real-time applications in which UDP is mostly used", having (equivalent to  ) would be very useful as it may avoid buffer memcpy for each send call. With we can first try it and," in case it returns zero (so the socket is not ready for writing right now) we can continue with current procedures. Could you please implement this?'""",,,,,,,,,,
libuv,1320,closed,1,2014-06-18 08:52:05,2.22,,,1,"b""b' Patches are welcome :-)'""",,,,,,,,,,,,
libuv,1320,closed,2,2014-06-18 08:52:05,1.5,,1,,"b""b' Yes"," I will try. But for me it is very difficult to get deep into UV internal structures.'""",,,,,,,,,,,
libuv,1320,closed,3,2014-06-18 08:52:05,358.17,,1,,"b'b"" Streams have a write queue and [a field called write_queue_size which exposes how much left there is in the write queue to write]url This field [get\'s used in uv_tcp_try_write]url  to determine if one can write or not. So the first step is to actually expose the same functionality in udp because udp doesn\'t have this field"," but it has a write queue and you can\'t just write force push something before the write queue is empty.""'",,,,,,,,,,,
libuv,1320,closed,4,2014-06-18 08:52:05,12.55,,,1,"b'b\' Great info. I will start with that :) BTW: in -unix.h: and in uv.h: May I understand why alloc_cb and read_cb are ""public"" on uv_stream while they are ""private"" on  uv_udp?\''",,,,,,,,,,,,
libuv,1320,closed,5,2014-06-18 08:52:05,151.42,,,1,"b'b"" No reason. Inconsistency in libuv. Should they be public or private? I think they should be public", it lets the user change the callbacks without running tcp_read and udp_recv again, but then the callbacks field in the _ functions would become obsolete? The callbacks in the function arguments are useful for easier FFI, so they have to stay. Make the callbacks public," so the cool kids can change them and leave them in the _ arguments so I don\'t have to fiddle with the handle offsets all the time. @saghul Any comments?""'",,,,,,,,
libuv,1320,closed,6,2014-06-18 08:52:05,1.93,,1,,"b""b' Here is a write_queue_size in the udp handle for unix: url  uv_count_bufs is duplicated in my code though. I think this function should be made public because it is a useful utility function if people use multiple buffers. @saghul any comments on uv_count_bufs?'""",,,,,,,,,,,,
libuv,1320,closed,7,2014-06-18 08:52:05,44.7,,1,,"b""b' I looked at the windows code url  And I see that it tries to write the stuff immediately even when using the normal _send function. Care to elaborate @piscisaureus @bnoordhuis @indutny ? Why does the try_write for unix when windows seems to have this already build in on all handles that windows supports? Even in the tcp code windows tries to write immediately: url '""",,,,,,,,,,,,
libuv,1320,closed,8,2014-06-18 08:52:05,5.02,,1,,"b""b' Ws strongly need the API. Otherwise we always need to allocate a specific buffer for the call"," which is not true when using  .'""",,,,,,,,,,,
libuv,1320,closed,9,2014-06-18 08:52:05,237.08,1,,,b'b\' I don\\\'t disagree but I won\\\'t be the one writing it.  :-) Some random observations:1. returns the number of bytes written.  That would be kind of superfluous for because datagram writes are atomic: everything is written or nothing is but partial writes don\\\'t happen.  A boolean is probably sufficient but then again," returning the number of bytes written doesn\\\'t actually hurt and is ""bool-y"" too.2. The current implementation is kind of inefficient because it always queues the datagram and polls the socket for write readiness first.  More efficient would be to try to write immediately when the write queue is empty and only queue when that fails with EAGAIN.\''",,,,,,,,,,,
libuv,1320,closed,10,2014-06-18 08:52:05,593.38,1,,,"b""b' Why is UDP always the poor brother in any I/O library? :('""",,,,,,,,,,,,
libuv,1320,closed,closed,2014-06-24 08:20:03,1407.97,2,7,3,,,,,,,,,,,,,
libuv,1320,closed,reopened,2014-06-24 08:20:04,0.02,2,7,3,,,,,,,,,,,,,
libuv,1320,closed,11,2014-06-18 08:52:05,4.48,,,1,b'b\' I\\\'m not sure what kind of answer you are expecting," so I\\\'m going to go with ""patches are welcome"".\''",,,,,,,,,,,
libuv,1320,closed,12,2014-06-18 08:52:05,4.02,,,1,b'b\' It was rather a rhetorical question :) And yes," I will work on this ""feature"" (more than a patch I think).\''",,,,,,,,,,,
libuv,1320,closed,13,2014-06-18 08:52:05,33.85,,,1,"b""b' 1. Should the read_cb and and alloc_cb be public or private in stream and udp? Currently in stream they are public while in udp they are private. IMO they should be public. Reason is above.2. Should we make uv_count_bufs public? It is useful code and I need it for the udp write_queue_size implementation anyway. Currently it is implemented two times in seperated places [win#1]url  [unix#2]url  '""",,,,,,,,,,,,
libuv,1320,closed,14,2014-06-18 08:52:05,3.03,,1,,"b""b' Yes to 1 and 2 :)And it seems that write_queue_size is a MUST in order to add  .'""",,,,,,,,,,,,
libuv,1320,closed,15,2014-06-18 08:52:05,0.4,,1,,"b'b"" I don\'t we need to handle that for this PR. Personally I consider them private.We can probably move it to uv-common and rename it to  "," as it\'s an internal function.""'",,,,,,,,,,,
libuv,1320,closed,16,2014-06-18 08:52:05,1.83,,1,,"b""b' Should uv__count_bufs be inline like the windows code suggests?'""",,,,,,,,,,,,
libuv,1320,closed,17,2014-06-18 08:52:05,6.37,,1,,"b""b' We only use it in a couple of places", so I guess it could be inline," yes.'""",,,,,,,,,,
libuv,1320,closed,18,2014-06-18 08:52:05,34.18,,1,,"b""b' @txdv what is your roadmap? I assume:1. Add a common and include it into UDP.2. Improve [bullet 2]url  commented by @bnoordhuis (so unix becomes more efficient). Am I right?'""",,,,,,,,,,,,
libuv,1320,closed,19,2014-06-18 08:52:05,11.02,,1,,"b'b"" 1. I will put it into uv_common as a common internal lib function", we can make it public afterwards if it is needed.2. This change depends on write_queue_size or a write_queue_count. Now that bnoordhuis mentioned it, in the udp version we don\'t send buffer lengths. We send entire buffers, if they are too big and don\'t fit in the underlying udp packet, they will be truncated and the rest has to be disgarded (even from write_queue_size, which is not currently done correctly in my commit). So maybe adding a write_queue_count along the write_queue_size is kind of reasonable because it gives you some more information about how full the queue is. My plan is now:1. make uv__count_bufs internally available in the library as an inline function2. implement write_queue_size and write_queue_count using uv__count_bufs. write_queue_count represents the number of sends, not the number of bufs given to send.3. implement try_send4. implement more efficient normal send 4 and 3 do not depend on each other," they both depend on 2 though which depends on 1.""'",,,,,
libuv,1320,closed,20,2014-06-18 08:52:05,7.85,,1,,"b'b"" Not sure I follow. Can\'t we substract the length of the buffer and not the length of what was sent from write_queue_size?""'",,,,,,,,,,,,
libuv,1320,closed,21,2014-06-18 08:52:05,0.68,,,1,"b'b"" @saghul This is exactly what I\'m going to do and what I wanted to say. However the write_queue_size is not a very useful metric for measuring how full the queue is"," so I\'m think adding a write_queue_count would be nice.""'",,,,,,,,,,,
libuv,1320,closed,22,2014-06-18 08:52:05,2.05,,,1,"b""b' @txdv so great!'""",,,,,,,,,,,,
libuv,1320,closed,23,2014-06-18 08:52:05,15.2,,1,,"b'b"" I don\'t see  write_queue_count would help", can you provide an example use case? In TCP the queue size can be used to implement backoff, here not really, but gives the user the udea of how many bytes are pending to be sent," and he can stop sending for a bit until he sees that the level went down (by checking in send_cb) for example.""'",,,,,,,,
libuv,1320,closed,24,2014-06-18 08:52:05,51.48,,1,,"b""b' What useful information does write_queue_size give you if you add a buffer with a 64k buffer and a buffer with 1 byte? It will be 64k + 1", but is there anything you can reason about this number? You still have two sends, copying 64k takes probably a bit longer," but we are still crossing  which introduces somekind of overhead as well. write_queue_count in this case gives us the value 2. 2 operations until the queue is freed.'""",,,,,,,,,
libuv,1320,closed,25,2014-06-18 08:52:05,8.02,,1,,"b'b"" Tells me how much data is in the queue exactly. After each write operation (in the callback) I can check how much is left.I\'m -1 on this. We might change how writes are dealt with internally in the future and coalesce them"," so the number of requests won\'t be equal to the number of operations.""'",,,,,,,,,,,
libuv,1320,closed,26,2014-06-18 08:52:05,1.22,,1,,"b""b' @saghul please remember we are talking about UDP. You must send entire datagrams one by one"," regardless how long each one is.'""",,,,,,,,,,,
libuv,1320,closed,27,2014-06-18 08:52:05,8.08,,1,,"b""b' They will be in udp. This is exactly the point.'""",,,,,,,,,,,,
libuv,1320,closed,28,2014-06-18 08:52:05,1.1,,1,,"b'b"" Doh", you guys are right. Sorry," I\'m doing multiple things at once. It\'s fine then.""'",,,,,,,,,,
libuv,1320,closed,29,2014-06-18 08:52:05,17.72,1,,,"b""b' First step: url  I have to check if it works on windows before a pull request. It is strange that in WINDOWS you have to CAPSLOCK the INLINE keyword.'""",,,,,,,,,,,,
libuv,1320,closed,30,2014-06-18 08:52:05,3.98,,1,,"b""b' We might need some UV_INLINE helper macro"," for MSVC.'""",,,,,,,,,,,
libuv,1320,closed,31,2014-06-18 08:52:05,14.53,,1,,"b""b' According to this: url [Now we look into the code]url  and yes", @saghul you are right. Now the question is," where do we put the UV_INTERNAL?'""",,,,,,,,,,
libuv,1320,closed,32,2014-06-18 08:52:05,21.75,,1,,b'b\' @txdv humm, you are defining an inline function in uv-common.c," that is not good and will cause ""undefined symbol"" if you call that funcion from two or more different source files (which is true). And in uv-common.h you\\\'ve added an inline declaration (with no body)"," which honestly I don\\\'t understand. AFAIK inline functions must be declared and defined in header files. The only case in which you can declare a function as inline within a source file (.c) is when such a function is ""private"" and just called from the same source file. Correct me if I\\\'m wrong", please.\'',,,,,,,,
libuv,1320,closed,33,2014-06-18 08:52:05,1.35,,1,,"b'b"" I\'d put it in uv-common.""'",,,,,,,,,,,,
libuv,1320,closed,34,2014-06-18 08:52:05,6.9,,1,,"b'b"" @ibc is right. uv-common.c will be compiled to uv-common.o", so no code sharing can happen unless you define the function on the h file. So, lets drop the inline," I don\'t think it\'ll matter.""'",,,,,,,,,
libuv,1320,closed,35,2014-06-18 08:52:05,167.42,,1,,"b'b"" @ibc [You are right]url  I think this goes the same for C compilers. If this function is worthy inlining"," the compiler will do it itself. url  now we don\'t need to rely on UV_INTERNAL anymore.""'",,,,,,,,,,,
libuv,1320,closed,36,2014-06-18 08:52:05,155.55,,1,,"b""b' +1'""",,,,,,,,,,,,
libuv,1320,closed,37,2014-06-18 08:52:05,135.53,,1,,"b'b"" I added and tested write_queue_size  both windows and unix versions: url  I copied the code from the tcp code base", so it should work... Well, they lack a testcase itself," but .... Is it possible to add one? Create one socket which doesn\'t read and write into it with the other until something is queued? What do you think guys? Will you give me many thumb ups if I create some test cases?""'",,,,,,,,,
libuv,1320,closed,38,2014-06-18 08:52:05,48.72,,,1,"b""b' The point is: what do you want to test it? right now you have not added new API yet so by using your libuv modified version (which has same API yet) I cannot figure how to test the new additions (may be I miss something). I expect that the way to go is", once is added, code a test similar to  , but note that such a test DOES NOT require that can write (or not) all the given buffer (it may happen or not, which depends on the host, CPU usage," etc).'""",,,,,,
libuv,1320,closed,39,2014-06-18 08:52:05,45.55,,1,,"b""b' we have write_queue_size on udp which we can test.'""",,,,,,,,,,,,
libuv,1320,closed,40,2014-06-18 08:52:05,3.73,,1,,"b""b' There are some stuff in current tests:  '""",,,,,,,,,,,,
libuv,1320,closed,41,2014-06-18 08:52:05,0.35,,,1,"b""b' Major props for extra tests! Plus"," first round on me if you ever find yourself in Amsterdam :-)'""",,,,,,,,,,,
libuv,1320,closed,42,2014-06-18 08:52:05,3.57,,1,,"b""b' looks like I have to add an assert after each udp test to check if the write_queue_size is empty '""",,,,,,,,,,,,
libuv,1320,closed,43,2014-06-18 08:52:05,1067.65,,1,,"b""b' I just added the tests. I just piggy bagged them with the other tests. url  @indutny @saghul I think this should be a self contained pull request. What do you think? Is adding just some asserts in the other testcases enough of a test? I will add  now.'""",,,,,,,,,,,,
libuv,1320,closed,44,2014-06-18 08:52:05,20.52,,1,,b'b\' I would rather have it as a commit of the try_send PR.On Jun 29, 2014 5:49 PM,"Andrius Bentkus"" notifications@ wrote:\''
libuv	1320	closed	45	txdv	2014-06-18 08:52:05	188.08		+1		b""b' Should I name the fields send_queue_size? and send_queue_count?'",,,,,,,,,,
libuv,1320,closed,46,2014-06-18 08:52:05,16.4,,1,,b'b\' Yes, much better. ##  I\\xc3\\xb1aki Baz Castilloibc@On Jun 29, 2014 9:18 PM,"Andrius Bentkus"" notifications@ wrote:\''
libuv	1320	closed	47	saghul	2014-06-18 08:52:05	12.1			+1	b'b\' Sounds good.On Jun 29, 2014 9:17 PM, ""Andrius Bentkus"" notifications@ wrote:\''
libuv	1320	closed	48	ibc	2014-06-18 08:52:05	32.6		+1		b'b\' Yep, write has a ""streaming"" meaning.On Jun 29, 2014 9:46 PM, ""Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9"" notifications@wrote:\''
libuv	1320	closed	49	txdv	2014-06-18 08:52:05	25.87	+1			b""b' That name confused @saghul earlier'",,,,,,,,,
libuv,1320,closed,50,2014-06-18 08:52:05,78.48,,1,,"b""b' Here is my initial pull request: url  Please move the discussion over there and review the code.'""",,,,,,,,,,,,
libuv,1320,closed,51,2014-06-18 08:52:05,70.25,,1,,"b""b' Closing"," continues on #1344'""",,,,,,,,,,,
libuv,1320,closed,closed,2014-06-29 23:13:31,893.45,4,38,11,,,,,,,,,,,,,
libuv,1320,closed,-,-,-,4,38,11,,,,,,,,,,,,,
libuv,1329,closed,opened,2014-06-22 00:40:16,,,,,,,,,,,,,,,,,
libuv,1329,closed,title,2014-06-22 00:40:16,00:00,,1,,"b""b' InitializeCriticalSection can throw an exception on out of memory conditions'""",,,,,,,,,,,,
libuv,1329,closed,body,2014-06-22 00:40:16,00:00,,1,,"b'b"" InitializeCriticalSection can throw an exception on out of memory conditions. It\'s use should be replaced by InitializeCriticalSectionAndSpinCount so the error can be caught and reported. The uses are:url url url url ""'",,,,,,,,,,,,
libuv,1329,closed,1,2014-06-22 00:40:16,948.2,,,1,"b""b' Hello"," thank you! Would it be interesting for you to provide a Pull Request fixing it?'""",,,,,,,,,,,
libuv,1329,closed,2,2014-06-22 00:40:16,56.52,,1,,"b'b"" Sure"," I would like to but I don\'t think libuv builds on gcc\'s cross compiler or runs under wine and I don\'t have a Windows VM at the moment.""'",,,,,,,,,,,
libuv,1329,closed,3,2014-06-22 00:40:16,919.87,,,1,"b'b"" It does build! That\'s how I do it", FWIW. Anyway, I don\'t think you\'ll need to compile it, you just plan to in case of error," right?""'",,,,,,,,
libuv,1329,closed,4,2014-06-22 00:40:16,758.52,1,,,"b'b"" I\'ll double check building libuv but maybe I just have an old versionof the Windows headers on my old distribution. I don\'t think libuv has a clear and documented policy on memorymanagement and if it should abort on memory allocation errors withfunctions such as  . Does libuv promise toreport back all errors of being unable to allocate memory? If itdoesn\'t then defining is a lie to users of libuv and shouldbe removed.  Having an inconsistent policy on this would be really",really bad and possibly cause security vulnerabilities. I have two ideas for possible good memory handling policies:libuv should report memory allocation failures back through error  variables with all libuv function calls.  libuv is a low level IO abstraction method for servers and VMs. It  should support handling out of memory conditions so that malicious  VM programs and malicious server clients can\'t attack the VM or  server and so that such attacks can be tracked and reported.  Moreover, having libuv not being able to handle out of memory  failures means that low level privileged system service that must  not fail can not use libuv.libuv should log and abort on all memory allocation failures  Current operating systems don\'t encourage handling out of memory  conditions at a per function level anyways. They have overcommit  policies and swap memory out to disk. For that reason, libuv  should log and abort on all memory allocation failures so that a  higher privileged and easier to audit tiny server manager can ban  malicious clients, report the failure and restart the server or  VM.  Moreover," even if memory could be locked in RAM it would be a  possible security risk as malicious clients of a server or  programs in a VM using libuv could mount Slowloris type attacks  against the server or VM as connections couldn\'t be paged out of  memory.  Failing is a fact of life. There can always be a sudden power  outage or component failure. Properly written programs should be  able to handle the user yanking the power cord.""'",,,,,,,
libuv,1329,closed,5,2014-06-22 00:40:16,72.18,1,,,"b'b"" Unfortunately no", there is no clear documented policy. We do report memory errors,  possible. I\'m not sure we could come up with a set of rules that can be applied always. Basically I\'d say it boils down to:if a memory error  occurs when the user calls a function we report itif there is an unrecoverable error we abort()if there is an error in some internal processing or an unrecoverable condition is met, we usually abort()," but this studied on a case by case basis""'",,,,,,,,
libuv,1329,closed,6,2014-06-22 00:40:16,46.93,1,,,"b'b"" Having a mix of both reporting errors and aborting is really", really bad. This means users have to pay the mental cost of checking for out of memory conditions and also have to handle the fact that libuv can abort their process on them. For example, consider the case of Neovim which uses libuv for it\'s IO. Because libuv reports out of memory errors if Neovim doesn\'t check for out of memory conditions after calling functions from libuv Neovim could accidentally obtain a null pointer instead of an allocated buffer. If such a buffer was really big then Neovim could write not to the unmapped memory page starting at zero but past it and into valid to write to program memory and therefore cause memory corruption which when saved would corrupt one\'s file. Alternatively," because libuv can also abort on internal out of memory conditions if Neovim doesn\'t make sure to overwrite save files atomically then Neovim could abort on an out of memory condition and leave a corrupted file (I\'m pretty sure that Neovim probably writes to a temporary file on the same filesystem and atomically renames over the old file but this is still an extra pitfall one has to handle). These all would be bugs in Neovim but libuv\'s current behaviour would make both bugs worse.""'",,,,,,,,,
libuv,1329,closed,7,2014-06-22 00:40:16,503.1,,1,,"b'b"" I won\'t argue that the current situation is ideal", but it is what it is. There is no mental effort to be made AFAIS: libuv will report memory errors when it can, just like others, they are not treated different, so it\'s responsibility of the user to check for errors, of course. Yes, libuv may () under certain exceptional conditions, but those are usually strategically placed to catch bugs, or when unrecoverable errors happen.That is not the case. If libuv cannot allocate memory for something it won\'t swallow the error, it will return it and the user needs to check for it, just like any other error.If an unrecoverable error condition is met libuv will abort(), that\'s how things are. If you think you can improve this," please go ahead and write some design document and open a new issue where we can check it and analyze all current occurrences of abort().""'"
libuv,1329,closed,8,2014-06-22 00:40:16,10.37,1,,,"b'b"" No", no. I\'m not saying that libuv will swallow the error! I\'m just saying that having libuv report the error instead of aborting and having the user check the error is yet another thing the user has to worry about.Sure," this conversation is off topic for this specific bug anyways.""'",,,,,,,,,,
libuv,1329,closed,9,2014-06-22 00:40:16,1.87,,1,,"b""b' The user already needs to check for errors", ENOMEM is in no way special, just look around the code. Also, libuv tries to malloc as little memory as possible. We push the responsibility to the user for allocating buffers, handles," loops and so on.'""",,,,,,,
libuv,1329,closed,10,2014-06-22 00:40:16,28.93,,,1,"b'b"" The discussion did derail a bit :-) I\'m closing this"," if you want go catch those erros in InitializeCriticalSection please send a pull request and I\'ll happily review it!""'",,,,,,,,,,,
libuv,1329,closed,closed,2014-08-10 08:26:45,466.48,4,5,3,,,,,,,,,,,,,
libuv,1329,closed,11,2014-06-22 00:40:16,1437.53,,,1,"b""b' This is exactly what I said and I never read that post! Open up this bug"," I will fix it myself!'""",,,,,,,,,,,
libuv,1329,closed,12,2014-06-22 00:40:16,5.08,,,1,"b""b' Feel free to send a PR and ref this bug"," thanks Andrius.'""",,,,,,,,,,,
libuv,1329,closed,reopened,2014-08-23 08:29:22,2.62,4,5,5,,,,,,,,,,,,,
libuv,1329,closed,13,2014-06-22 00:40:16,2.55,,1,,"b""b' Reentrant library"," do you remember?'""",,,,,,,,,,,
libuv,1329,closed,14,2014-06-22 00:40:16,3.1,,,1,"b'b"" Yep. We probably have some more"," they\'ll show up with time and we can make things better gradually :-)""'",,,,,,,,,,,
libuv,1329,closed,15,2014-06-22 00:40:16,7.17,1,,,"b'b"" The reason why I didn\'t post more in the reentrant library pull request is because I thought 0.12 is just around the corner and you just want the current shit to be delivered.""'",,,,,,,,,,,,
libuv,1329,closed,16,2014-06-22 00:40:16,4.17,,1,,"b""b' Yeah. that was the idea. But in the end I want to ship the API docs", so there is a bit of time and we chan add a few more bugfixes there. As you have seen I also plan to add uv_fileno. If I work all the time on the docs I go nuts," gotta write some actual code :-)'""",,,,,,,,,,
libuv,1329,closed,17,2014-06-22 00:40:16,2.78,,1,,"b""b' uv_fileno is a function addition"," not behavioral change it can be added whenever one feels coding it.'""",,,,,,,,,,,
libuv,1329,closed,18,2014-06-22 00:40:16,229.55,,,1,"b'b"" According to url  The function doesn\'t return the exception since Windows Vista"," only on Windows XP and Windows Server 2003.""'",,,,,,,,,,,
libuv,1329,closed,19,2014-06-22 00:40:16,1.3,,,1,"b'b"" Windows < Vista will be going away after the next release"," I wouldn\'t bother about it :-)""'",,,,,,,,,,,
libuv,1329,closed,20,2014-06-22 00:40:16,4.4,1,,,"b""b' It is actually not that hard of an exception to check: url  I would add this.'""",,,,,,,,,,,,
libuv,1329,closed,21,2014-06-22 00:40:16,1.37,,1,,"b'b"" Ok", actually it is," because mingw doesn\'t understand #include exception. I don\'t think msys2/ has the header files for SEH exceptions.""'",,,,,,,,,,
libuv,1329,closed,22,2014-06-22 00:40:16,6.15,,,1,"b'b"" Ok", only for Windows XP and Windows 2003 with the microsoft visual compiler and SEH extensions. I think it is save to close this, because mingw doesn\'t even support SEH (or for that matter any other compiler) and Microsoft has removed it itself," because they didn\'t see any value in it.""'",,,,,,,,,
libuv,1329,closed,23,2014-06-22 00:40:16,0.5,,,1,"b""b' Ok", closing then. Thanks for looking into it," Andrius.'""",,,,,,,,,,
libuv,1329,closed,closed,2014-08-26 12:52:24,263.03,6,9,10,,,,,,,,,,,,,
libuv,1329,closed,24,2014-06-22 00:40:16,494.18,,,1,"b'b"" @txdv that\'s great news then.""'",,,,,,,,,,,,
libuv,1329,closed,-,-,-,6,9,11,,,,,,,,,,,,,
libuv,1344,closed,opened,2014-06-29 22:02:20,,,,,,,,,,,,,,,,,
libuv,1344,closed,title,2014-06-29 22:02:20,00:00,,1,,"b""b' add uv udp try send'""",,,,,,,,,,,,
libuv,1344,closed,body,2014-06-29 22:02:20,00:00,,1,,"b""b' Please review the commits and give me comments on them.'""",,,,,,,,,,,,
libuv,1344,closed,1,2014-06-29 22:02:20,75.13,,1,,"b""b' I made a quick review"," will do it more in deep tomorrow.'""",,,,,,,,,,,
libuv,1344,closed,2,2014-06-29 22:02:20,0.4,,,1,"b""b' Oh"," and thanks a lot for working on this Andrius!'""",,,,,,,,,,,
libuv,1344,closed,3,2014-06-29 22:02:20,523.62,,1,,"b""b' One question: why do we need to keep the number of bytes to be sent (I mean the  )? In UDP the number of bytes does not matter but just the number of pending datagrams (Regardless how long they are). Would not make more sense a or  ?'""",,,,,,,,,,,,
libuv,1344,closed,4,2014-06-29 22:02:20,9.53,,1,,"b""b' Your application may want to stop trying to write until the queue is down to certain number of bytes"," perhaps in a memory constrained environment. A long shot? Maybe yes.'""",,,,,,,,,,,
libuv,1344,closed,5,2014-06-29 22:02:20,3.9,,1,,"b""b' Are we assuming then that  is public API? if so it should be documented.'""",,,,,,,,,,,,
libuv,1344,closed,6,2014-06-29 22:02:20,8.4,,,1,"b'b"" Yes"," it is part of the public API. We don\'t have a good track record of documenting struct members though.""'",,,,,,,,,,,
libuv,1344,closed,7,2014-06-29 22:02:20,1.77,,,1,"b'b"" 2014-06-30 10:23 GMT+02:00 Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9 notifications@:That\'s not true", there is no documentation about struct members at all XD. Yes," patches are welcome. ##  I\\xc3\\xb1aki Baz Castilloibc@""'",,,,,,,,,,
libuv,1344,closed,8,2014-06-29 22:02:20,43.23,,1,,"b""b' All current comments have been addressed. I am going to squash the additions into the original commits.'""",,,,,,,,,,,,
libuv,1344,closed,9,2014-06-29 22:02:20,4.4,1,,,"b'b"" The only one I didn\'t address was the name of the field send_queue_count. What would be the best name for it? I don\'t like send_queue_datagrams or send_queue_packets because they have an unclear meaning. A testcase for try_write is missing as well. I\'ll add one in the evening"," i\'ll just copy the try_write test case and adjust it to test udp.""'",,,,,,,,,,,
libuv,1344,closed,10,2014-06-29 22:02:20,17.9,,1,,"b""b' I havent run the tests"," but LGTM. Can you add a test for  ?'""",,,,,,,,,,,
libuv,1344,closed,11,2014-06-29 22:02:20,6.08,,1,,"b""b' How? It is difficult to test that. Same for for which there is a test unit (test-tcp-try-write.c) but it does not test that it is able to write at the moment"," but just that it somehow seems to work.'""",,,,,,,,,,,
libuv,1344,closed,12,2014-06-29 22:02:20,2.75,,1,,"b'b"" By brute-forcing it. Look at the test for  ", we do it in an infinite loop. If it doesn\'t succeed in the test-timeout time," the test will be killed anyway.""'",,,,,,,,,,
libuv,1344,closed,13,2014-06-29 22:02:20,10.05,,1,,"b""b' Opps"," missed that. OK.'""",,,,,,,,,,,
libuv,1344,closed,14,2014-06-29 22:02:20,138.02,1,,,"b'b"" @saghul on stream sockets you can just not read on the other side until there is too much congestion for the os buffer to handle and the call returns something. With udp if I use 127.0.0.1 it will just send the thing regardless. I fear that it might be possible that I won\'t be able to generate enough packets on the loopback interface to actually block it. But we will see when I get home.""'",,,,,,,,,,,,
libuv,1344,closed,15,2014-06-29 22:02:20,1437.12,,1,,"b'b"" I need some help on debugging @saghul . Tried to write a test but ain\'t nothing working.""'",,,,,,,,,,,,
libuv,1344,closed,16,2014-06-29 22:02:20,8.57,,1,,"b""b' Please let me know how to test it. Must I compile your branch and just run the tests?'""",,,,,,,,,,,,
libuv,1344,closed,17,2014-06-29 22:02:20,1.33,1,,,"b'b"" I\'ll see if I can debug it. At a first glance I don\'t see any obvious mistake :-O""'",,,,,,,,,,,,
libuv,1344,closed,18,2014-06-29 22:02:20,4.42,,1,,"b""b' bash command on unix: will compile and run the test'""",,,,,,,,,,,,
libuv,1344,closed,19,2014-06-29 22:02:20,22.67,,1,,"b'b\' Which branch should I test? I see various branches about ""udp"".\''",,,,,,,,,,,,
libuv,1344,closed,20,2014-06-29 22:02:20,1.02,,,1,"b""b' Look at the top of the page:  Open txdv  wants to merge 9 commits into joyent:master  from txdv:uv_udp_try_send'""",,,,,,,,,,,,
libuv,1344,closed,21,2014-06-29 22:02:20,1.03,,1,,"b""b' Edit the  file in your libuv directory and make sure origin looks like this: Then:  '""",,,,,,,,,,,,
libuv,1344,closed,22,2014-06-29 22:02:20,0.35,,1,,"b""b' You can use the HTTPS url'""",,,,,,,,,,,,
libuv,1344,closed,23,2014-06-29 22:02:20,25.03,,1,,"b'b\' I\\\'ve tryed in my code. I get a ""address not available"" error (which does not happen with or  ). I guess that the sockaddr\\\\* pointer being passed to is not being correctly handled.\''",,,,,,,,,,,,
libuv,1344,closed,24,2014-06-29 22:02:20,20.3,,1,,"b""b' Fixed it. url  Going to work now on the test now.'""",,,,,,,,,,,,
libuv,1344,closed,25,2014-06-29 22:02:20,13.23,,,1,"b""b' It works! Great :)'""",,,,,,,,,,,,
libuv,1344,closed,26,2014-06-29 22:02:20,45.15,,1,,"b'b"" @saghul url This is the case on my machine. max udp packet size is 65507  I can\'t get it to spit out an EAGAIN or EWOULDBLOCK when using the loopback. SO I can\'t test for that specifically.""'",,,,,,,,,,,,
libuv,1344,closed,27,2014-06-29 22:02:20,13.27,,1,,"b""b' I cannot even compile it. Can you please use /\\\\* */ for comments?'""",,,,,,,,,,,,
libuv,1344,closed,28,2014-06-29 22:02:20,4.42,1,,,"b""b' Its not a clean patch"," just for showcasing. removing 3 comments is not the hardest thing to do :/ But I pushed a patch anyway.'""",,,,,,,,,,,
libuv,1344,closed,29,2014-06-29 22:02:20,16.92,,,1,"b'b"" Doesn\'t work here either. I\'d go for trying to write and bailing out the first time we succeed"," instead of saturating. A test for EMSGSIZE would also be nice :-)""'",,,,,,,,,,,
libuv,1344,closed,30,2014-06-29 22:02:20,19.47,,1,,"b""b' @saghul it compiles for me (clang). Which compiler are you using?'""",,,,,,,,,,,,
libuv,1344,closed,31,2014-06-29 22:02:20,2.08,,1,,"b""b' GCC.'""",,,,,,,,,,,,
libuv,1344,closed,32,2014-06-29 22:02:20,2.83,,1,,"b'b\' @txdv one question about the return value of  . In case of success it returns ""size"" which is the return value of (which means the number of bytes sent). So", in case I try to send too big data, what is the current behavior of both and  :1. The former indicates UV_EMSGSIZE in the send_cb and the latter returns UV_EMSGSIZE error.2. The former indicates OK in the send_cb and the latter returns the number of bytes sent... but," shouldn\\\'t just return EMSGSIZE in case of a datagram instead of the ""truncated"" size?? According to the spec:\''",,,,,,,,,
libuv,1344,closed,33,2014-06-29 22:02:20,15.6,1,,,"b'b"" #### current uv_udp_try_sent x is the buffer sizeif there is something in the queue =error =x 0 truncated sent buffer value If you try to send buffer with the size of 0"," it will return 0 regardless if the queue is empty and the message has been sent succesfully or the queue is full. #### uv_udp_send I don\'t know how it works. I have to look into it ... and we should adjust the behavior of uv_udp_try_send to uv_udp_send I guess.""'",,,,,,,,,,,
libuv,1344,closed,34,2014-06-29 22:02:20,0.92,1,,,b'b\' In fact," I\\\'m testing: and clearly returns ""message too long"" (so EMSGSIZE error). This  length", so I suggest changing the documentation in uv.h:  \'',,,,,,,,,,
libuv,1344,closed,35,2014-06-29 22:02:20,2.73,,,1,"b'b"" @txdv Not in my host. I call with a 60000 bytes length buffer and get EMSGSIZE. I\'m not able to reproduce any case in which the return value is positive but less than the given buffer.""'",,,,,,,,,,,,
libuv,1344,closed,36,2014-06-29 22:02:20,1.05,,1,,"b""b' What OS are you using? The test case should then fail for you.'""",,,,,,,,,,,,
libuv,1344,closed,37,2014-06-29 22:02:20,1.13,,1,,"b""b' OSX 10.9.3.'""",,,,,,,,,,,,
libuv,1344,closed,38,2014-06-29 22:02:20,7.73,,1,,b'b\' No," but... not sure. If I run ""make check"" I get an error about an unrelated test unit. If I run I get no output and return code is 0", so seems to work, yes.\'',,,,,,,,,
libuv,1344,closed,39,2014-06-29 22:02:20,0.92,,1,,"b""b' I have updated the test case"," pull again and run the test. You can see 3 of the 4 different behaviors in the test case here:  url  In order to test the particular test you have to execute this command:  '""",,,,,,,,,,,
libuv,1344,closed,40,2014-06-29 22:02:20,3.75,1,,,b'b\' Sorry @txdv, not sure how you are doing commits," but every time I do I get a Git conflict (and I\\\'ve not modified the code at all): Are you using ""git push force""??\''",,,,,,,,,,
libuv,1344,closed,41,2014-06-29 22:02:20,2.63,,,1,"b'b"" if txdv is my repo name then: Yes I am using push force", I am constantly squashing changes into one nice patch. I\'ll try to not squash immediately from now on," only after the discussion about the current patch is over so you can use pull.""'",,,,,,,,,,
libuv,1344,closed,42,2014-06-29 22:02:20,3.37,,1,,"b""b'   This is because is returning EMSGSIZE rather than a size less than MAX_UDP_PACKET_SIZE.'""",,,,,,,,,,,,
libuv,1344,closed,43,2014-06-29 22:02:20,4.78,,1,,"b'b"" It doesn\'t fail on my Ubuntu 14.04 64bit. So we need to tweak the flags of the udp creation I guess? Maybe there is an ioctl call or something for MAX_UDP_PACKET_SIZE on all unixes? Don\'t know"," we need @saghul or someone else who has experience with macosx.""'",,,,,,,,,,,
libuv,1344,closed,44,2014-06-29 22:02:20,2.62,,1,,"b'b\' According to the man:May be that depends on the OS? is there any flag to set such an ""atomicy"" request? BTW: I will test the same for  . If I get same results it means that your is consistent with (regardless the behavior is different on different OSes).\''",,,,,,,,,,,,
libuv,1344,closed,45,2014-06-29 22:02:20,6.18,,1,,"b""b' OK", here the send status of both and in OSX 10.9.3:len = 500 =len = 65536 =len = 65000 =So," the behavior is consistent between both API calls. The fact that the result is different on OSX and Linux does not matter (as the doc currently says that return value may be less than the given buffer length).'""",,,,,,,,,,
libuv,1344,closed,46,2014-06-29 22:02:20,1.93,,1,,"b""b' ...but please"," remove the ASSERT in the test :)'""",,,,,,,,,,,
libuv,1344,closed,47,2014-06-29 22:02:20,3.88,,1,,"b""b' I will leave it"," but I will add a check for UV_EMSGSIZE as well like this url '""",,,,,,,,,,,
libuv,1344,closed,48,2014-06-29 22:02:20,1.15,,1,,"b""b' @saghul it compiles in my Debian with gcc version 4.7.2 (Debian 4.7.2-5).'""",,,,,,,,,,,,
libuv,1344,closed,49,2014-06-29 22:02:20,1.05,,,1,"b""b' Now check Solaris"," BSD and Windows!'""",,,,,,,,,,,
libuv,1344,closed,50,2014-06-29 22:02:20,2.17,,1,,"b""b' @txdv You have al ready added a test for EMSGSIZE", but anyhow," it should be UV_EMSGSIZE:  '""",,,,,,,,,,
libuv,1344,closed,51,2014-06-29 22:02:20,2.63,,1,,"b""b' I already pushed it in: url  and url  Something wrong with the timezone setting I guess"," because it shows the commits only behind our posts which already happened.'""",,,,,,,,,,,
libuv,1344,closed,52,2014-06-29 22:02:20,2.1,,,1,"b'b"" Interesting: on Debian I can send a 65000 bytes datagram (with both API calls). And get EMSGSIZE if 65536. I\'m not able at all to generate a truncated datagram :)""'",,,,,,,,,,,,
libuv,1344,closed,53,2014-06-29 22:02:20,2.32,,1,,"b'b"" The loopback interface won\'t truncate"," you have to use your ethernet card. Try changing 127.0.0.1 to the ip address that your ethernet card has.""'",,,,,,,,,,,
libuv,1344,closed,54,2014-06-29 22:02:20,5.37,,1,,"b""b' Using non-local interface now. Same on OSX. Never get a truncated datagram", but EMSGSIZE. Anyhow, really, this **also** happens with  ," nothing to fix here :)'""",,,,,,,,
libuv,1344,closed,55,2014-06-29 22:02:20,27.67,,1,,b'b\' I\\\'ll have Jenkins run tests a bit later.On Jul 1, 2014 6:42 PM,"I\\xc3\\xb1aki Baz Castillo"" notifications@wrote:\''
libuv	1344	closed	56	saghul	2014-06-29 22:02:20	72.18		+1		b'b"" IIRC truncation can only happen on the receiving side, if the provided buffer is not big enough to for the whole datagram. On the sending side you\'d get an error.""'
libuv	1344	closed	57	txdv	2014-06-29 22:02:20	1.9		+1		b""b' If that is the case, then the code is correct, because you will receive a UV_EMSGSIZE'",,,,,,,,,,
libuv,1344,closed,58,2014-06-29 22:02:20,156.92,,,1,"b""b' Wow", so it is done," right? anything missing? good work!'""",,,,,,,,,,
libuv,1344,closed,59,2014-06-29 22:02:20,24.32,,1,,"b""b' Jenkins is on it: url '""",,,,,,,,,,,,
libuv,1344,closed,60,2014-06-29 22:02:20,2.78,,1,,b'b\' I do not understand the result. ##  I\\xc3\\xb1aki Baz Castilloibc@On Jul 1, 2014 11:25 PM,"Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9"" notifications@wrote:\''
libuv	1344	closed	61	saghul	2014-06-29 22:02:20	2.88			+1	b""b' Click around, there is not much to figure out :-) Test fails on SmartOS: url '",,,,,,,,,,
libuv,1344,closed,62,2014-06-29 22:02:20,677.48,,,1,"b""b' Whats with the test on SmartOS? Do you want me to install SmartOS and investigate?'""",,,,,,,,,,,,
libuv,1344,closed,63,2014-06-29 22:02:20,2.08,,1,,"b""b' Info here: url '""",,,,,,,,,,,,
libuv,1344,closed,64,2014-06-29 22:02:20,5.03,,1,,"b""b' It hangs and the test runner kills it. You can add debug commits and I can trigger Jenkins builds.'""",,,,,,,,,,,,
libuv,1344,closed,closed,2014-07-02 08:56:11,653.85,7,46,13,,,,,,,,,,,,,
libuv,1344,closed,reopened,2014-07-02 08:56:14,0.05,7,46,13,,,,,,,,,,,,,
libuv,1344,closed,65,2014-06-29 22:02:20,5.45,1,,,"b'b"" @ibc  This is the exact opposite of info", it is lack of info. @saghul  The round trip time for modify, check, debug, compile is too long using Jenkins. I can\'t wait that long. My hdd is already like sliced bread consisting of partitions, so I\'ll just hit one with SmartOS or eventually run it in a VM when I get home. Sorry for closing and reopening," I clicked the wrong button.""'",,,,,,
libuv,1344,closed,66,2014-06-29 22:02:20,5.12,,,1,"b""b' If that works better for you"," go ahead! :-)No worries! ##  Sa\\xc3\\xbal Ibarra Corretg\\xc3\\xa9 '""",,,,,,,,,,,
libuv,1344,closed,67,2014-06-29 22:02:20,189.65,,,1,"b'b"" Squashed everything", re-review," I\'ll check smartos today out when I come home.""'",,,,,,,,,,
libuv,1344,closed,68,2014-06-29 22:02:20,20.95,,1,,"b'b"" Can the implementation guarantee than it would just fail (this is"," return a UV_ error) in the **same** cases in which would fail? Of course may return 0 (so the user may use after that) but it should just fail in the same cases in which fails. Probably this is already true. I\'m just wondering.""'",,,,,,,,,,,
libuv,1344,closed,69,2014-06-29 22:02:20,0.58,,1,,"b'b"" I don\'t understand the question.""'",,,,,,,,,,,,
libuv,1344,closed,70,2014-06-29 22:02:20,2.95,,1,,"b""b' @ibc No. only fails if the suplied parameters are incorrect", otherwise failures are reported in the callback, whereas reports erros synchronously. Also," would never report EAGAIN.'""",,,,,,,,,
libuv,1344,closed,71,2014-06-29 22:02:20,0.35,,1,,"b'b"" I mean that if I use the same buffer and destination address for both and they both must behave identically"," which means that there should be no one case in which any of them fails and the other not. NOTE: Let me make clear that I don\'t consider an error when returns 0.""'",,,,,,,,,,,
libuv,1344,closed,72,2014-06-29 22:02:20,2.03,,1,,b'b\' @saghul:OK, let me improve the question: I mean that if I use the same buffer and destination address for both uv_udp_try_send() and uv_udp_send() they both must behave identically, which means that there should be no one case in which any of them fails and the other not. And of course,"fail"" in may happen in two places (the return code when supplied parameters are incorrect, and the  ).\''
libuv	1344	closed	73	txdv	2014-06-29 22:02:20	2.3		+1		b'b"" uv_udp_try_send will fail when there is something in the queue and will return UV_EAGAIN while uv_udp_send will queue it and won\'t return an error. How do you propose we should change this?""'
libuv	1344	closed	74	ibc	2014-06-29 22:02:20	2.32		+1		b'b\' That is wrong. If sendmsg() fails with EAGAIN or EWOULDBLOCK that means that it cannot immediately send the datagram and thus the function uv_udp_try_send() should reply 0 rather than an error. This is what the doc says and this is how uv_try_write() behaves (it does never return UV_EAGAIN to the user but 0, which means ""0 bytes written so try uv_write() if you want"").\''
libuv	1344	closed	75	saghul	2014-06-29 22:02:20	2.22		+1		b'b"" @ibc, no, you are wrong. In UDP you can send an empty datagram, so sendmsg would return 0. That\'s why we return the error in this case. uv_try_write is different, because on TCP you can\'t send an empty packet.""'
libuv	1344	closed	76	ibc	2014-06-29 22:02:20	0.1		+1		b""b' So lines 464 and 483 must be rather than  : url '",,,,,,,,,
libuv,1344,closed,77,2014-06-29 22:02:20,2.1,,1,,"b""b' Think about the corner case of empty udp packets. It sends only the header"," no content. The returned length is 0. If try_send returns 0 on not immediate writes as well it will be ambiguous whether the empty packet has been sent successfully or the queue is full and we need to wait.'""",,,,,,,,,,,
libuv,1344,closed,78,2014-06-29 22:02:20,0.05,,1,,"b'b"" @saghul I don\'t think your comment is related to what I said. Please check lines 464 and 483 in [udp.c]url  and let me know whether they should be or not.""'",,,,,,,,,,,,
libuv,1344,closed,79,2014-06-29 22:02:20,0.28,,1,,"b'b"" As a side note"," I\'ll probably also make uv_try_write return EAGAIN.""'",,,,,,,,,,,
libuv,1344,closed,80,2014-06-29 22:02:20,0.45,,,1,"b""b' @saghul I found this issue"," I will do the patch!'""",,,,,,,,,,,
libuv,1344,closed,81,2014-06-29 22:02:20,0.57,,1,,"b""b' @ibc it is related. If we return 0 on EAGAIN and 0 on empty datagram"," how do we know if the empty datagram was sent or not?'""",,,,,,,,,,,
libuv,1344,closed,82,2014-06-29 22:02:20,1.82,,1,,"b""b' OK"," may we please refactor the API documentation for so then it is easier to understand how the code must behave? :)'""",,,,,,,,,,,
libuv,1344,closed,83,2014-06-29 22:02:20,2.5,,,1,"b""b' It looks perfectly clear to me as it is right now.'""",,,,,,,,,,,,
libuv,1344,closed,84,2014-06-29 22:02:20,0.38,,,1,"b""b' Oh", it has been already updated: OK," I should have known this before checking the code :) @saghul if you plan to do the same for please clarify it as some of us currently rely on 0 return code ;)'""",,,,,,,,,,
libuv,1344,closed,85,2014-06-29 22:02:20,8.17,,1,,"b'b"" @ibc sure"," I\'ll update the docs too.""'",,,,,,,,,,,
libuv,1344,closed,86,2014-06-29 22:02:20,8.12,,1,,"b""b' That would be an API change. I propose to wait for to be merged so you can release a new libuv version.'""",,,,,,,,,,,,
libuv,1344,closed,87,2014-06-29 22:02:20,0.9,1,,,"b""b' Do you think this pull request will get into the stable branch?'""",,,,,,,,,,,,
libuv,1344,closed,88,2014-06-29 22:02:20,0.38,,1,,"b'b"" It\'s 0.11 aka unstable", so we are allowed to make changes. I\'m not going to propose the change right away," of course.""'",,,,,,,,,,
libuv,1344,closed,89,2014-06-29 22:02:20,0.4,1,,,"b""b' Next stable"," 0.10 is in bugfix mode only.'""",,,,,,,,,,,
libuv,1344,closed,90,2014-06-29 22:02:20,1.28,1,,,"b""b' According to Semantic Versioning you can add APIs in stable branches"," but not remove or change.'""",,,,,,,,,,,
libuv,1344,closed,91,2014-06-29 22:02:20,0.58,,1,,"b'b"" We don\'t do that in libuv.""'",,,,,,,,,,,,
libuv,1344,closed,92,2014-06-29 22:02:20,562.92,,,1,"b'b"" @txdv doh", looks like I missed your last message :-S I modified a bit your test indeed sidestepping that part and tests pass on SmartOS. Here is your branch with my changes (plus some cosmetic ones): url  and the jenkins build: url  Great work!! I\'ll squash the commits before merging, I think this is ready for landing. @indutny," mind taking a quick look at this? If you are too busy you can trust my judgement :-)""'",,,,,,,,,
libuv,1344,closed,93,2014-06-29 22:02:20,642.1,,1,,"b""b' The patch looks solid"," except few style nits.'""",,,,,,,,,,,
libuv,1344,closed,94,2014-06-29 22:02:20,9.32,,1,,"b""b' @txdv are you going to squash / address the comments or should I on merge?'""",,,,,,,,,,,,
libuv,1344,closed,95,2014-06-29 22:02:20,2.07,1,,,"b""b' @saghul  Please respond to this comment: url  You just removed the MAX_UDP_PACKET size send completely. I guess that is one way of solving the problem"," but the function still behaves in 3 different ways on 3 platforms.linux: it sends the packetmacosx: emsgsizesolaris: silently fucks everything up '""",,,,,,,,,,,
libuv,1344,closed,96,2014-06-29 22:02:20,5.98,,1,,"b'b"" @saghul: I\'m going to address them. How do you want me to squash them? One big patch?""'",,,,,,,,,,,,
libuv,1344,closed,97,2014-06-29 22:02:20,0.07,,,1,"b'b"" I removed it because it\'s an unreliable test", as you discovered :-) Thus testing that doesn\'t tell us anything useful, does it? We do have a test for EMSGSIZE and for try_send itself," I\'d say we have our bases well covered.""'",,,,,,,,,
libuv,1344,closed,98,2014-06-29 22:02:20,1.72,,1,,"b""b' 1 patch for the uv__count_bufs", 1 patch for send_queue_, 1 patch for try_send and please rebase," since you are there :-)'""",,,,,,,,,
libuv,1344,closed,99,2014-06-29 22:02:20,7.63,,1,,"b""b' so what is it with the sizeof? Do you want me to force to put some ( ) and make the code inconsistent in the same file or do you want me to leave it like it is?'""",,,,,,,,,,,,
libuv,1344,closed,100,2014-06-29 22:02:20,0.92,,1,,"b'b"" I\'d go for no parens"," keeping it consistent with the rest of the file.""'",,,,,,,,,,,
libuv,1344,closed,101,2014-06-29 22:02:20,1.53,,1,,"b""b' @saghul: Can I squash your test changes into my commit?'""",,,,,,,,,,,,
libuv,1344,closed,102,2014-06-29 22:02:20,0.5,,,1,"b""b' @txdv sure thing!'""",,,,,,,,,,,,
libuv,1344,closed,103,2014-06-29 22:02:20,401.02,,,1,"b""b' Thank you so much @txdv! Landed in :sparkles: url  url  and url  :sparkles: '""",,,,,,,,,,,,
libuv,1344,closed,closed,2014-07-04 16:33:45,457.52,12,71,22,,,,,,,,,,,,,
libuv,1344,closed,104,2014-06-29 22:02:20,33.27,,,1,"b""b' Excellent work @txdv!! Congrats.'""",,,,,,,,,,,,
libuv,1344,closed,105,2014-06-29 22:02:20,45.42,1,,,"b""b' :heart: :+1:  and shit'""",,,,,,,,,,,,
libuv,1344,closed,-,-,-,13,71,23,,,,,,,,,,,,,
libuv,1487,closed,opened,2014-09-22 11:29:23,,,,,,,,,,,,,,,,,
libuv,1487,closed,title,2014-09-22 11:29:23,00:00,,1,,"b""b' Write queue after connect windows'""",,,,,,,,,,,,
libuv,1487,closed,1,2014-09-22 11:29:23,9.15,,1,,"b'b"" tty works", doesn\'t need a queue," because  is always open. pipe on the other hand is a bit more difficult.""'",,,,,,,,,,
libuv,1487,closed,2,2014-09-22 11:29:23,124.6,1,,,"b'b"" Boom", rebase fellas. @saghul please check the return error codes in uv_write I want to merge tcp_write_after_connect and pipe_write_after_connect into write_after_connect and rename it to write_before_connect. Furthermore i\'m not happy with uv_pipe_connect not returning an int and returning all the error codes only in the callback. [This is some ancient code]url  and I think this should be different. This also let me think a bit about the returning codes. We need to try to make it consistent that returning codes which are returned immediately or in the callback should be consistent on all platforms. uv_pipe_connect returned everything in the callbacks, which is easier to debug, but I don\'t feel like EINVAL on a bad handle input should be returned in the callback (it makes the code slower," because we have to run an entire loop tick just to return a bad handle error code).""'",,,,,,,,
libuv,1487,closed,3,2014-09-22 11:29:23,8.52,,1,,"b'b"" I don\'t disagree", but please don\'t derail into other issues here," just open a new one.""'",,,,,,,,,,
libuv,1487,closed,4,2014-09-22 11:29:23,434.7,,1,,"b""b' Left a first round of comments.'""",,,,,,,,,,,,
libuv,1487,closed,5,2014-09-22 11:29:23,0.25,,,1,"b""b' Thanks for working on this"," Andrius.'""",,,,,,,,,,,
libuv,1487,closed,6,2014-09-22 11:29:23,757.47,,1,,"b""b' Another thing"," how do we check for TCP? shouldnt we better check with instead that invalid handle value?'""",,,,,,,,,,,
libuv,1487,closed,7,2014-09-22 11:29:23,3.07,,1,,"b""b' Check what exactly?Yes and no"," that flag is only set after connet succeeds. So we need to determine if we are trying to connect beforehand.'""",,,,,,,,,,,
libuv,1487,closed,8,2014-09-22 11:29:23,3.48,,1,,"b""b' Yeah"," I already done that.'""",,,,,,,,,,,
libuv,1487,closed,9,2014-09-22 11:29:23,8.33,,1,,"b'b"" Please leave a nothe when you\'re done addressing comments"," GH doesn\'t notify me when you add new commits.""'",,,,,,,,,,,
libuv,1487,closed,10,2014-09-22 11:29:23,0.62,,1,,"b'b"" it removes the once addressed from this view"," i\'ll add a comment anyway.""'",,,,,,,,,,,
libuv,1487,closed,11,2014-09-22 11:29:23,1310.2,,1,,"b""b' Left a second round of comments. As a general comment"," please rename all internal functions you are touching to use the internal convention of  .'""",,,,,,,,,,,
libuv,1487,closed,12,2014-09-22 11:29:23,64.55,,1,,"b""b' you said to rename the internal functions", but was an internal function before," should I rename it as well?'""",,,,,,,,,,
libuv,1487,closed,13,2014-09-22 11:29:23,2.78,,1,,"b'b"" Since you\'re moving related code around"," please do.""'",,,,,,,,,,,
libuv,1487,closed,14,2014-09-22 11:29:23,1401.78,,1,,"b'b"" We are going to need a big comment in the code explaining what and when we queue data. I see that in some cases (when we don\'t queue) we just assign the buffers passed by the user to and call for example", but when we queue the request we allocate memory for it, which we then need to free. We need to find a way to make this obvious and easy to follow. One possibility would be to modify so that it gets the buffers passed as a parameter. In one case they would come stratight from the user, in another they would come from the request itself," and freed right afterwards.""'",,,,,,,,
libuv,1487,closed,15,2014-09-22 11:29:23,97.2,,1,,"b'b"" Freeing is not the difficult part"," its a simple check against handle->buf == handle->smbuf. The problem I\'m facing right now is guaranteeing that the callbacks are called in order. It is tedious for examples like these:  ""'",,,,,,,,,,,
libuv,1487,closed,16,2014-09-22 11:29:23,3.15,,1,,"b'b"" Nope. Imagine I want to write 5 buffers. If I do it while connecting we\'ll malloc the space and memcpy the structures to req->bufs. If I do the same once the connection has been made", however," you just assign req->bufs to whatever the used passes to us. This makes the code complicated and potentially error prone and needs to be addressed.""'",,,,,,,,,,
libuv,1487,closed,17,2014-09-22 11:29:23,3.52,,1,,"b'b"" Isn\'t this enough? (example for uv__tcp_write_req) So"," always queue the req with its result.""'",,,,,,,,,,,
libuv,1487,closed,18,2014-09-22 11:29:23,4.55,,1,,"b""b' In uv__run_write_callbacks we kinda pass the queued writes (before connect was issued) to the IOCP and we can free the bufs afterwards'""",,,,,,,,,,,,
libuv,1487,closed,19,2014-09-22 11:29:23,3.93,,1,,"b'b"" I know"," but we shouldn\'t use req->bufs to store some pointers which need to be freed and some which don\'t. (assuming nbufs ""'",,,,,,,,,,,
libuv,1487,closed,20,2014-09-22 11:29:23,1283.2,,1,,"b""b' @txdv ping'""",,,,,,,,,,,,
libuv,1487,closed,21,2014-09-22 11:29:23,621.95,,1,,"b'b"" I\'m back from my holiday on wednesday. I won\'t have access to a windows machine until then. ""'",,,,,,,,,,,,
libuv,1487,closed,22,2014-09-22 11:29:23,28.43,,,1,b'b\' Kewl, thanks for the heads up!On Oct 6, 2014 7:56 PM,"Andrius Bentkus"" notifications@ wrote:\''
libuv	1487	closed	23	txdv	2014-09-22 11:29:23	1143.38		+1		b'b"" I don\'t get it, do you want me to create a separate field for the bufs which libuv allocates? It is very simple to keep track of them. We are no connected, libuv mallocs them. When we connect we pass the queued requests to IOCP and free the buffers. Why can\'t we have them in the same field?""'
libuv	1487	closed	24	txdv	2014-09-22 11:29:23	36.2		+1		b""b' Review please again, I addressed all comments but your last @saghul.'",,,,,,,,,
libuv,1487,closed,25,2014-09-22 11:29:23,450.9,1,,,"b""b' The problem I have is that req->bufs can point to 3 types of things: user allocated memory (when we write immediately)libuv malloc-ed memory (when nbufs req->bufsml(when nbufs <= 4 and write is queued) Distinguishing between the last 2 is easy", but I worry the first case will give us trouble. What I suggested is to pass bufs and nbufs to the function that does the immediate write, this way the parameters will always be untouched," but can come from 2 places:user passed structuresstructures which we hold in the req'""",,,,,,,,,
libuv,1487,closed,26,2014-09-22 11:29:23,4.02,,1,,"b""b' Finished another review round.'""",,,,,,,,,,,,
libuv,1487,closed,27,2014-09-22 11:29:23,919.4,,1,,"b""b' Well", from now on it will never hold user allocated memory, bufs seems to be a private field," so I guess that is ok.'""",,,,,,,,,
libuv,1487,closed,28,2014-09-22 11:29:23,1317.87,,1,,"b""b' As I was writing the patch for the correct ordering"," I saw that I forgot to count the pending write requests. '""",,,,,,,,,,,
libuv,1487,closed,29,2014-09-22 11:29:23,263.9,,1,,"b""b' This is my approach. Works currently only for tcp. The code duplicated is now huge because we have tcp_do_write and pipe_do_write"," can I write a common abstraction with both now?'""",,,,,,,,,,,
libuv,1487,closed,30,2014-09-22 11:29:23,957.08,,1,,"b""b' The code looks overly complicated right now", specially with the manual counter management. Also, prev_write_req seems to be only assigned in a single place, with a pointer pointing to the contained request," so looks like it could be removed and compare requests instead (I might be missing something here). I need to read this more thoroughly when I find the time.'""",,,,,,,,
libuv,1487,closed,31,2014-09-22 11:29:23,73.87,,1,,"b""b' When will you find the time? Any approximation?'""",,,,,,,,,,,,
libuv,1487,closed,32,2014-09-22 11:29:23,8.5,,1,,"b'b"" As soon as I can. I\'ll try to do so in the upcoming days", since I\'m leaving for a conference + vacation on friday. Building and destroying the mental model for this is quite time consuming :-( Also, FWIW, I\'m planning on dropping this from the 1.0.0 release. It\'s pretty late in the process, and I don\'t want us to introduce such a big patch as of now. I think neither of us knew it was going to grow this big / involved," and I\'d rather not rush things. Once we are happy with it it shall land in master.""'",,,,,,,
libuv,1487,closed,33,2014-09-22 11:29:23,1.33,,1,,"b'b"" I don\'t really care about it landing in 1.0.0. I actually want you to release 1.0.0 ASAP so I can start doing breaking changes.""'",,,,,,,,,,,,
libuv,1487,closed,34,2014-09-22 11:29:23,112.3,,1,,"b""b' Yeah I figured"," I hoped for a quantified answer.'""",,,,,,,,,,,
libuv,1487,closed,35,2014-09-22 11:29:23,1396.57,,1,,"b""b' @saghul you still alive?'""",,,,,,,,,,,,
libuv,1487,closed,36,2014-09-22 11:29:23,244.0,,1,,"b""b' Still out", at about 600ms from any continent. On Tue, Nov 4, 2014 at 4:50 AM," Andrius Bentkus notifications@wrote:##  /Sa\\xc3\\xbal '""",,,,,,,,
libuv,1487,closed,37,2014-09-22 11:29:23,13.32,,1,,"b'b"" Best time to ask for a 1on1 quake match I guess. I\'ll just start writing the patch for queuing the shutdown request on top of this. When are you comming back?""'",,,,,,,,,,,,
libuv,1487,closed,38,2014-09-22 11:29:23,1110.33,,1,,"b""b' no resolution'""",,,,,,,,,,,,
libuv,1487,closed,closed,2014-11-18 08:37:50,1268.45,2,35,2,,,,,,,,,,,,,
libuv,1487,closed,39,2014-09-22 11:29:23,4.33,,1,,"b""b' I still planned to continue reviewing this after 1.0"," I just got back on Sunday.'""",,,,,,,,,,,
libuv,1487,closed,reopened,2014-11-18 08:43:25,5.58,2,36,2,,,,,,,,,,,,,
libuv,1487,closed,40,2014-09-22 11:29:23,72.08,,,1,"b'b"" Keeping the linked list with requests seems to work (I haven\'t run the code yet though)", but I\'d like to explore another approach to the solution, which is actually analogous to what we do on Unix: write one request at a time. The idea qould be to only do the actual write if there are no other queued writes, and when one write completed do the write for the next. I talked with @piscisaureus and he told me that letting the kernel handle all the queuing might not always be a good idea, because there some uknown threshold and after reaching it the kernel won\'t report sucess untill all write operations have been completed. The open question is, of course," if there is a performance hit.""'",,,,,,
libuv,1487,closed,41,2014-09-22 11:29:23,13.67,,1,,"b""b' Why **all**?'""",,,,,,,,,,,,
libuv,1487,closed,42,2014-09-22 11:29:23,5.98,,1,,"b""b' I wish I knew... This is probably what was happening in a test case where we queued 100k write requests and the whole thing would even blow up from time to time.'""",,,,,,,,,,,,
libuv,1487,closed,43,2014-09-22 11:29:23,15.53,,1,,"b'b"" 100K writes? It is kinda a big threshold"," I would be more concerned with returning NOMEM in the right places.... But I guess we could try to benchmark it. Are you saying that this won\'t be merged until I do the benchmark with queuing and only processing N processes at once? Where N might or might not be 1 as well?""'",,,,,,,,,,,
libuv,1487,closed,44,2014-09-22 11:29:23,62.62,,1,,"b'b"" I don\'t know where the threshold really is", I do remember seeing weird things with that load, that\'s all.Yes, kind of. The current approach (assuming it covers all cases) is pretty hard to follow / maintain. I\'d like to see how the other approach performs before taking any decission here. If there is no performance penalty I\'d favor that one. (N being 1) Also, @piscisaureus," I summon you!""'",,,,,,,
libuv,1487,closed,45,2014-09-22 11:29:23,269.2,1,,,"b'b"" The issue on windows is that if you queue a lot of data to the kernel", completion of async writes start to behave differently. Effectively instead of getting a completion notification for a write as soon its data has been sent (which is what normally happens), all completion notifications seem to be held back until the kernel send buffer is completely empty. This effect seems to be triggered by queuing a lot of send data to the kernel (in big chunks), not necessarily a lot of write operations per se. I recall there was a node issue where the problem was demonstrated in detail but I couldn\'t find it, although url  seems to reference it also. When I first saw it with my own eyes I was shocked and surprised. I don\'t know why this happens. The trick is going to be to limit the number of simultaneously queued requests / bytes (per socket) that is dispatched to the kernel; if the user writes more it\'ll be buffered in user space until a kernel-queued write returns. So let me draft a reasonable proposal.If there are less than 2 write requests queued to the kernel," queue a new write to the kernel also.If there is less than 128k of write data queued to the kernel queue a new write to the kernel also.Otherwise queue in userland.""'",,,,,,,
libuv,1487,closed,46,2014-09-22 11:29:23,1028.98,,1,,"b""b' You could have told me that right in the beginning of the patch... I could have worked immediately on this.'""",,,,,,,,,,,,
libuv,1487,closed,closed,2016-03-06 20:24:14,700.82,3,41,3,,,,,,,,,,,,,
libuv,1487,closed,-,-,-,3,41,3,,,,,,,,,,,,,
libuv,1508,closed,opened,2014-10-01 13:02:49,,,,,,,,,,,,,,,,,
libuv,1508,closed,title,2014-10-01 13:02:49,00:00,,1,,"b""b' 1.0.0rc sets library version to 1.0.0. Intentional?'""",,,,,,,,,,,,
libuv,1508,closed,body,2014-10-01 13:02:49,00:00,1,,,"b'b"" Since the library version is now 1.0.0 but the release says it\'s an rc; should consumers of libuv treat the release as abi stable? There already seems to be some changes in the 1.0.0 branch (for instance #1431) that could potentially conflict with this.""'",,,,,,,,,,,,
libuv,1508,closed,1,2014-10-01 13:02:49,10.72,,1,,"b'b"" No", ABI might change a bit. I wanted to avoid it but couldn\'t. Either way, AFAIS the soname cannot be set to something like 1.0.0rcX , hence the 1.0.0. Once 1.0.0 is released there will be no ABI breakage, until 2.0.0," that is.""'",,,,,,,
libuv,1508,closed,closed,2014-10-01 13:13:32,10.72,1,2,0,,,,,,,,,,,,,
libuv,1508,closed,2,2014-10-01 13:02:49,6.35,,1,,"b'b\' Thanks for elaborating. This pretty much makes pkg-config checks pointless since it wouldn\\\'t know the difference between 1.0rc\\\\* and 1.0 though :( Hopefully package managers that exposes libuv handles dependencies differently. There\\\'s really no problem bumping abi versioning differently from package version -so the cleanest approach would just be major bumping abi on the ""real"" 1.0.\''",,,,,,,,,,,,
libuv,1508,closed,3,2014-10-01 13:02:49,1.12,,,1,"b'b"" Well"," package managers shouldn\'t package rc versions anyway :-)""'",,,,,,,,,,,
libuv,1508,closed,4,2014-10-01 13:02:49,4.8,1,,,"b'b\' @saghul The problem with that statement is that everyone treats versioning and naming differently. I can imagine a pretty common use case is downloading latest available through github releases which doesn\\\'t really mention ""do not trust this abi version"". At the end of the day", what we want to trust is really abi versioning. Worst case, people could have two versions of the libuv  object with the same name.\'',,,,,,,,,,
libuv,1508,closed,5,2014-10-01 13:02:49,7.45,,1,,"b""b' @jbergstroem I understand your concern. I did a quick test and while the soname will stay as 1:0:0", we can set the version to 1.0.0-rc1 in autoconf and the pc file is generated just fine: So," my bad. Will fix for rc2!'""",,,,,,,,,,
libuv,1508,closed,reopened,2014-10-01 13:33:15,19.72,2,4,1,,,,,,,,,,,,,
libuv,1508,closed,6,2014-10-01 13:02:49,2.47,,,1,"b'b\' Perfect. I guess another ""solution"" would be avoiding distributing releases publicly", but through controlled environment (mailing list, whatnot) where people also would understand the possible implications of using said release.\'',,,,,,,,,,
libuv,1508,closed,7,2014-10-01 13:02:49,453.17,,,1,"b""b' Just released rc2 including this fix. Thanks for reporting @jbergstroem!'""",,,,,,,,,,,,
libuv,1508,closed,closed,2014-10-20 21:08:53,455.63,2,4,3,,,,,,,,,,,,,
libuv,1508,closed,-,-,-,2,4,3,,,,,,,,,,,,,
libuv,1535,closed,opened,2014-10-21 14:59:41,,,,,,,,,,,,,,,,,
libuv,1535,closed,title,2014-10-21 14:59:41,00:00,,1,,"b""b' SIGPIPE thrown when a web browser closes the connection'""",,,,,,,,,,,,
libuv,1535,closed,body,2014-10-21 14:59:41,00:00,,1,,"b""b' When a uv_write_t request is in progress", and the client (web browser) closes the connection," a SIGPIPE will be thrown before the callback called.'""",,,,,,,,,,
libuv,1535,closed,1,2014-10-21 14:59:41,6.72,,1,,"b""b' Can you provide a test case?'""",,,,,,,,,,,,
libuv,1535,closed,2,2014-10-21 14:59:41,2.18,,1,,"b'b"" I didn\'t handle the uv_write error. It\'s my fault.""'",,,,,,,,,,,,
libuv,1535,closed,closed,2014-10-21 15:08:35,8.9,0,4,0,,,,,,,,,,,,,
libuv,1535,closed,3,2014-10-21 14:59:41,16.03,,1,,"b'b"" My program started a write request", then the read callback reported that the connection has been closed, soon the write request will cause a SIGPIPE. (Linux," v0.11) I don\'t know how to deal with it except handling SIGPIPE. Cancelling the request?""'",,,,,,,,,
libuv,1535,closed,reopened,2014-10-21 15:24:37,16.03,0,5,0,,,,,,,,,,,,,
libuv,1535,closed,4,2014-10-21 14:59:41,36.4,,1,,"b""b' You need to ignore SIGPIPE signal using sigaction.'""",,,,,,,,,,,,
libuv,1535,closed,closed,2014-10-21 16:01:01,36.4,0,6,0,,,,,,,,,,,,,
libuv,1535,closed,-,-,-,0,6,0,,,,,,,,,,,,,
