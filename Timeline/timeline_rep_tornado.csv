REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,opened,2011-05-17 12:35:54,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,title,2011-05-17 12:35:54,00:00,,1,,"b""b' Added a setting to disable automatic generation of etags.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,body,2011-05-17 12:35:54,00:00,,1,,"b'b\' Turn off automatic generation of etag headers by setting ""auto_etag"" to False.Can be overridden on requests with  = False. Defaults to Truefor backwards compability.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,1,2011-05-17 12:35:54,1085.23,,,1,"b'b"" Instead of a global setting"," this should be controlled through a RequestHandler method that can be overridden.  Ideally this would take the form of a method to compute the Etag (or return None to suppress) so applications could get the benefit of the built-in If-None-Match handling (although I haven\'t checked the code to see if that\'s feasible with a simple interface) Your content-type change doesn\'t do anything since the default Content-Type is added in reset().""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,2,2011-05-17 12:35:54,34.67,,,1,"b'b"" Hello", thanks for your feedback! You can override the global setting for individual RequestHandlers by doing  = . It should probably be a method as you say, but in my case I wanted to disable etag hashing for all my handlers. As for the content-type change, do you mean the clear() method? Are there any cases where it\'s called after a write()? The change I did was in the write method," where content-type gets forced to  when passing in a dict.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,closed,2011-05-19 07:15:48,1119.9,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,reopened,2011-05-19 09:05:49,110.02,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,3,2011-05-17 12:35:54,110.32,,1,,"b'b"" Not sure how I closed the pull request"," I\'m new to Github.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,closed,2011-05-27 12:53:35,227.77,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,265,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,opened,2011-08-01 19:53:42,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,title,2011-08-01 19:53:42,00:00,,1,,"b""b' SimpleAsyncHTTPClient and Connection:Keep-Alive'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,body,2011-08-01 19:53:42,00:00,,,1,"b""b' SimpleAsyncHTTPClient does not support keep-alive requests"," or at least not obviously so. Happy to fork this and build it in if pointed in the right direction.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,1,2011-08-01 19:53:42,150.55,,,1,"b""b' This would be great for me as well. +1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,2,2011-08-01 19:53:42,1121.38,,,1,"b'b"" You\'re right that SimpleAsyncHTTPClient doesn\'t support any kind of connection reuse.  Very roughly", to build this you\'d add a pool of idle connections in SimpleAsyncHTTPClient that would be used in _process_queue if the host, port, and scheme match.  Connections would add themselves to this pool when they finish a request if the server didn\'t close the connection.  While idle, a connection would still need to listen for errors on the socket to know if the server has dropped the connection," and it\'s important to make sure that StackContext doesn\'t leak from one request to the next (I think that\'s already taken care of).  Some sort of garbage collection of old connections that don\'t get reused would be nice. Another consideration is proxies when we add proxy support the semantics around connections will change.  I\'m not sure what that will look like yet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,3,2011-08-01 19:53:42,17.67,,,1,"b""b' Ok awesome"," we had exactly this in mind. Would you be interested in a pull request once we have this working?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,closed,2011-08-03 17:23:18,1289.6,0,1,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,reopened,2011-08-03 17:23:26,0.13,0,1,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,4,2011-08-01 19:53:42,1.18,,1,,"b""b' Yes"," of course.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,5,2011-08-01 19:53:42,118.65,,1,,"b""b' Have a fix for this"," cleaning it up now'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,6,2011-08-01 19:53:42,74.42,,1,,"b""b' Did that fix ever happen @NickNeedsAName ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,324,open,-,-,-,0,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,opened,2011-09-06 21:43:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,title,2011-09-06 21:43:34,00:00,,1,,"b""b'  does not work with callbacks that have kwargs'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,body,2011-09-06 21:43:34,00:00,,1,,b'b\' I\\\'m playing around with , and it seems to croak on callbacks that are triggered with keyword arguments. Specifically," asyncmongo sends an ""error"" keyword argument to the callback you specify. The  class\\\'s callback() method isn\\\'t set up to handle this. Here is the relevant code: the error: ""TypeError: callback() got an unexpected keyword argument \\\'error\\\'"" I\\\'m hacking around trying to figure out a fix to this", but I still haven\\\'t wrapped my head around the  code. I tried just adding a **kwargs argument to the callback() function, but that didn\\\'t work (the Runner loop timed out). this is similar to the hack I used to make this code work with swirl.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,closed,2011-09-06 21:44:53,1.32,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,reopened,2011-09-06 21:45:13,0.33,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,1,2011-09-06 21:43:34,1.93,,1,,"b""b' accidentally closed the issue"," reopened it'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,2,2011-09-06 21:43:34,27.87,,1,,"b'b"" actually", adding **kwargs to the callback() method does fix the problem," but does nothing to expose those keyword arguments. don\'t know the best way to expose them...""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,3,2011-09-06 21:43:34,400.68,1,,,"b'b"" Yeah", the trick is that we can only pass a single object through the yield expression.  The only way to handle all the possible argument scenarios would be to pass a (args, kwargs) tuple, but that\'s awkward to work with.  Does asyncmongo ever give both positional and keyword arguments at the same time?  If not, we could automatically detect no args, one positional arg," or no positional args with keyword arguments (but then kwargs would come through as a dictionary and be indistinguishable from one positional arg that happened to be a dict).  The most general solution is to have several variants of  depending on the expected signature.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,4,2011-09-06 21:43:34,468.05,,1,,"b'b"" I think asyncmongo always passes an \'error\' kwarg", and the result ispassed as a positional argument. What if we detected kwargs andreturned (args,kwargs) in this case? The only problem is when thecallback signature is  on the result, but in thatcase you should be prepared to check for kwargs anyway. On Sep 7,2011, at 12:54 AM," bdarnellreply@wrote:""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,5,2011-09-06 21:43:34,422.3,1,,,"b'b"" Returning (args", kwargs) is really awkward to work with.  You don\'t want to have to do something like this on every call: You can kind of make an adapter with the  interface: That could be made a little less clunky with support in Callback (and a few standard adapters could be predefined), but it\'s still messy (and making the analogous change to Task risks name collisions): Maybe returning (args, kwargs) and requiring postprocessing is the best solution (especially since the postprocessing can easily be put into a function and not entangled with the gen framework). The case of a single positional argument is so common that it probably deserves to be handled specially," even if that means isinstance checks will be required for functions whose signatures vary.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,closed,2011-09-11 22:51:22,66.15,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,351,closed,-,-,-,2,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,opened,2012-02-09 12:59:20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,title,2012-02-09 12:59:20,00:00,,1,,"b'b\' Replace """" by """" in simple_\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,body,2012-02-09 12:59:20,00:00,,1,,"b'b\' Replace """" by """" in simple_.This case ""HOST"" header to be deleted form Original Request on line 384 of simple_", which cause to Key error exception.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,1,2012-02-09 12:59:20,990.83,,1,,"b'b"" I\'ll fix this"," but I\'m curious when exactly you saw the KeyError?  The Host header should be re-added once the next request in the redirect chain is made.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,closed,2012-02-20 05:31:06,991.77,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,reopened,2012-02-20 05:39:28,8.37,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,2,2012-02-09 12:59:20,10.1,,1,,"b'b"" Simply replacing  with  broke the tests.  I\'ve reverted that change and will look into this more later.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,3,2012-02-09 12:59:20,559.47,,1,,"b'b\' Ttraceback: WARNING:root:uncaught exceptionTraceback (most recent call last):  File ""/2.2-py2.7""", line 310," in cleanup  yield  File ""/2.2-py2.7""", line 202, in wrapped  callback(_args," *_kwargs)  File ""/2.2-py2.7""", line 388," in _on_body  del new_[""Host""]  File ""/2.2-py2.7""", line 132, in __delitem__  dict.**delitem**(self, norm_name)    aclient = (max_clients=, \\\\               max_simultaneous_connections=)    req = (url=,"             method=""GET""",             headers= ,             body=None)....... (req, )........  ()\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,4,2012-02-09 12:59:20,882.17,,1,,"b'b"" Ah", I see now.  You\'re reusing the headers object across multiple requests.  To fix the problem we need to duplicate the headers at the beginning (before we add the Host header in the first place)," not when we\'re copying the request for a redirect.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,closed,2012-03-06 05:50:17,10.82,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,459,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,opened,2012-07-21 04:35:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,title,2012-07-21 04:35:12,00:00,,1,,"b""b' The claimed_id should be available as it is the unique id for an openid user'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,body,2012-07-21 04:35:12,00:00,,1,,"b""b' ...pen_id user. This is the id that uniquely identifies this user and will not change even if the e-mail address or username change.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,closed,2012-07-22 05:04:31,29.32,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,reopened,2012-07-22 05:11:21,6.83,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,1,2012-07-21 04:35:12,662.22,1,,,"b'b"" Why is this using get_argument directly and not get_ax_arg?  Have you tested this with at least all the openid providers covered in ?  Do they all send the  value?  I\'d be more comfortable with this change if it tested for the presence of claimed_id and degraded gracefully if the provider didn\'t send the parameter.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,2,2012-07-21 04:35:12,199.08,,1,,"b'b"" According to the Open ID spec. it is a required field. I didn\'t useget_ax_arg because it\'s not an attribute extension", it\'s part of the coreOpenID specification. Even if the provider doesn\'t supply or attributeextensions, or if the user log\'s in and then says no to the attribute sendscreen, you still get the claimed_id. The only OpenID provider I tested against was Google, I didn\'t see anyother OpenID providers specifically in , Friend Feed, Twitter andFacebook are all oAuth providers. I plan on implementing my code for theother major OpenID providers, so I will be adding them in, I just haven\'tgotten to it yet. On Sun, Jul 29, 2012 at 11:37 AM," bdarnell <reply@##  Michael Robellard(216)288-2745Play Railroad Empire: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,3,2012-07-21 04:35:12,958.17,,1,,"b'b"" In url  it says that for openid 1.1 compatibility you must not depend on claimed_id being present.  I\'m not sure if openid 1.1 still matters any more"," but I think it\'s worth explicitly testing for the presence of claimed_id and only setting it in the response if it was provided by the server.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,4,2012-07-21 04:35:12,1078.13,,1,,"b""b' I added an explicit test for the presence of claimed_id and I also added support for Yahoo OpenID and oAuth"," I tested this and it is working.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,5,2012-07-21 04:35:12,1132.6,,1,,"b'b\' I\\\'ll add the claimed_id field (with a change to use get_argument(""open_""", None) in the check so it doesn\\\'t blow up, but I don\\\'t want to add any more one-off authentication providers to the module (they should probably go in a third-party package, or ideally the base classes should be refactored so it\\\'s easy to just plug in the urls for the appropriate provider).\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,closed,2012-08-26 23:47:16,1115.92,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,6,2012-07-21 04:35:12,40.25,,1,,"b'b"" For straight OpenID it should be very straightforward to create a genericOpenID provider where you pass the url into the Auth call. In the Yahoocase", like the Google case the class provides both OpenID and oAuthtogether, however the implementation is different then Google\'s. On Sun, Aug 26, 2012 at 7:45 PM," bdarnell notifications@ wrote:##  Michael Robellard(216)288-2745Play Railroad Empire: url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,568,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,opened,2012-11-13 11:38:51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,title,2012-11-13 11:38:51,00:00,,1,,"b""b' kill the child process after the master process be killed when use multiprocess funciton'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,body,2012-11-13 11:38:51,00:00,1,,,"b""b' sorry", my english is not good. when call fork_process(), we need to kill the child process after the master process be killed.  for example, use Supervisor to control the Tornado process, when we stop the master process," the work process has not be killed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,closed,2012-11-13 12:19:12,40.35,1,1,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,1,2012-11-13 11:38:51,60.67,,1,,"b""b' The Travis build failed. RuntimeWarning when running on pypy: RuntimeWarning: C function without declared arguments called'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,2,2012-11-13 11:38:51,1217.62,,1,,"b""b' If you use Supervisor with Tornado"," try the and options. See url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,3,2012-11-13 11:38:51,331.75,,,1,"b'b"" @codeb2cc thank you. it\'s  a good idea.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,4,2012-11-13 11:38:51,974.62,,1,,"b""b' Supervisord only support command such as  to kill master and worker process", but the worker process cant not to be terminated when the termination signal sent to the master process," so i think this patch is necessary.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,reopened,2013-11-22 06:43:30,1104.3,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,5,2012-11-13 11:38:51,864.53,,,1,"b'b"" If you\'re using supervisord I\'d recommend using the option to create a supervisor process group instead of using fork_processes within the application. It would be nice to kill the child processes when the parent process is killed"," but it\'s tricky to do portably we can\'t use the linux-only prctl().""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,6,2012-11-13 11:38:51,951.45,,,1,"b'b"" @bdarnell thanks"," i\'ll try it.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,closed,2014-02-19 12:59:29,375.98,1,4,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,7,2012-11-13 11:38:51,1295.03,,1,,"b""b' you can try my code for kill and kill -9 and ctl+c '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,636,closed,-,-,-,1,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,opened,2013-03-22 15:44:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,title,2013-03-22 15:44:06,00:00,,1,,"b""b' if use StaticFileHandler to process static file. Accept partial range http request"," enable html5 viedo to seek by drag progress bar or other partial request. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,body,2013-03-22 15:44:06,00:00,,1,,"b'b\' if there is a ""range"" in request\\\'s header", response a 206 status  and send a portion of file.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,closed,2013-04-09 05:52:12,848.1,0,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,1,2013-03-22 15:44:06,1180.37,,,1,"b'b"" Hi"," I would like to use this change. Was there a reason it wasn\'t merged? Thanks""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,reopened,2013-04-29 11:56:07,363.92,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,2,2013-03-22 15:44:06,937.13,,,1,"b'b"" When serving a byte range", the Etag header should still be set based on the entire file, so any handler that supports ranges should override etag handling. More generally, there\'s a lot of complexity that goes into serving static files well if you\'re working with files large enough that range support matters, then you\'ll probably want to cache etags and have well-regulated memory use.  This is a substantial project, and if there\'s interest in a tornado-based static file server (as opposed to just using nginx or apache)," I think it should be its own project instead of building on  (which is more based on serving  files during development or small-scale production and emulating the url practices of various other servers and CDNs)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,3,2013-03-22 15:44:06,34.48,,,1,"b""b' I have got it. thank you~'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,closed,2013-04-30 03:36:17,940.17,0,2,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,4,2013-03-22 15:44:06,293.2,,1,,"b'b"" Thanks for your reply. I should explain why I was asking the IPython notebook uses StaticFileHandler to serve static files along with the dynamic notebooks", and a common use of this is to render an animation then display it in the notebook as an HTML5 video. Unfortunately as described [here]url  in Chrome this doesn\'t work properly unless the static file server supports partial content requests, even if the file is small enough that range support isn\'t really needed. So from that point of view, it is desirable to have even very basic support for partial range requests. I don\'t know enough about it to know if this is just Chrome being picky or a reasonable requirement," so I\'ll leave it now thanks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,701,closed,-,-,-,0,3,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,opened,2013-03-27 19:19:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,title,2013-03-27 19:19:43,00:00,,1,,"b""b' parse_config_file broken on Python 3'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,body,2013-03-27 19:19:43,00:00,,1,,"b""b' Need to replace the call to execfile().'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,1,2013-03-27 19:19:43,10.88,,1,,"b""b' Tornado 3.0 no longer requires 2to3.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,closed,2013-03-27 19:30:36,10.88,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,2,2013-03-27 19:19:43,3.28,,1,,"b""b' So is execfile overridden somewhere then? It is used in  and breaks reading config files.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,3,2013-03-27 19:19:43,2.3,,1,,"b'b"" Ah"," didn\'t notice that.  Config files are simply broken on python 3 then.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,reopened,2013-03-27 19:36:38,6.03,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,closed,2013-03-28 02:55:30,438.87,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,702,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,opened,2013-04-06 08:16:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,title,2013-04-06 08:16:26,00:00,,1,,"b""b' OverflowError execption in '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,body,2013-04-06 08:16:26,00:00,,1,,"b'b"" I am using Tornado 2.4.1 and get an OverflowError exception in  when trying to load a []url sketch using Tornado on Windows 7. I can\'t reproduce it on Linux. What happens is that calling returns  This causes an OverflowError exeption in :  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,1,2013-04-06 08:16:26,467.5,1,,,"b'b"" Have you tired to run it in python interactive shell? Here is my result in Interactive Shell (Python2.7.3 on Linux)As you see", I did\'t get any OverflowError, but I noticed that the time is before 1970 so that seconds is less than zero...And, it should be  rahter than , isn\'t it ??And, I dont\'t think it is an error related with ," for email and time are standand module in python  I did\'t try your code in ... Best wishes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,2,2013-04-06 08:16:26,18.57,,1,,"b""b' [time docs]url  state that [OverflowError]url  is raised from underlying C libraries and  This seems to be a Windows platform issue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,3,2013-04-06 08:16:26,209.4,1,,,"b""b' I tried the above example in IPython using Windows and Linux.Windows:  In [5]: (date_tuple)-OverflowError           Traceback (most recent call last) in ()OverflowError: mktime argument out of range Linux (Opensuse 12.2):  In [5]: (date_tuple)Out[5]: -315622800.0 Linux (Raspberry Pi running Archlinux):  In [5]: (date_tuple)Out[5]: -315619200.0 The standard library documentation [url  says: The epoch is the point where the time starts. On January 1st of that year", at 0 hours, the \\xe2\\x80\\x9ctime since the epoch\\xe2\\x80\\x9d is zero. For Unix, the epoch is 1970. To find out what the epoch is, look at gmtime(0). The functions in this module do not handle dates and times before the epoch or far in the future. The cut-off point in the future is determined by the C library; for Unix, it is typically in 2038. So as I understand it,  is not expected to work with dates before 1970 and what happens is undefined. Under Linux it returns different results, depending on architecture," Windows throws an exception. How should this be handled ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,4,2013-04-06 08:16:26,10.88,,,1,"b'b"" Using instead of might be a good idea (haven\'t tested on Win). You should close this issue.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,5,2013-04-06 08:16:26,10.83,,1,,"b""b' OK", I will close this issue. Still," I had to patch my local copy of  Tornado and IPython notebook (which uses the same  code) in order to catch the OverflowError exception on Windows. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,closed,2013-04-06 20:13:37,717.18,2,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,6,2013-04-06 08:16:26,116.72,1,,,"b'b"" Sigh. is asking for trouble by using a pre-epoch timestamp in a field that has no reason to ever see a timestamp that predates HTTP", but it\'s still a valid header and tornado shouldn\'t blow up if it sees a value far in the past (or future).  This code is already using datetimes," so it should probably be rewritten to construct the datetimes without going through a time_t.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,reopened,2013-04-06 22:10:20,116.72,3,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,closed,2013-04-13 22:21:10,10.83,3,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,713,closed,-,-,-,3,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,opened,2013-06-08 00:42:26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,title,2013-06-08 00:42:26,00:00,,1,,"b""b' Laziness of '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,body,2013-06-08 00:42:26,00:00,,1,,"b'b"" The  getter defers the evaluation of  until it\'s needed. However", when either  or UIModule.**init** is called, the current_user getter is called, and get_current_user is evaluated. This should be avoided, since the current request might not need the current user at all," and get_current_user might be expensive to evaluate.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,1,2013-06-08 00:42:26,3.12,,1,,"b""b' The UIModule can be easily fixed by adding a current_user getter which returns . Fixing  might be trickier.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,2,2013-06-08 00:42:26,1028.25,,,1,"b""b' Hmm", good point.  I guess the template namespace should probably be a special object kind of like the UIModule namespace," although this might be a little delicate since we allow people to modify this dictionary in get_template_namespace.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,3,2013-06-08 00:42:26,1278.43,,1,,"b""b' Is it ok if I fix the UIModule part"," and write tests for the other part?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,4,2013-06-08 00:42:26,42.92,,1,,"b""b' Sure"," go ahead and put together a patch.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,closed,2013-07-16 01:28:39,46.22,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,reopened,2013-07-16 01:28:46,0.12,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,820,open,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,opened,2013-06-21 02:04:31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,title,2013-06-21 02:04:31,00:00,,1,,"b""b' tornado memory leaks when serve html5 page with '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,body,2013-06-21 02:04:31,00:00,,1,,"b'b"" I was trying to write a static file server with tornado", but memory leaks when it serves html5 videos, the code is pretty simple.### ### ### Details:1. My platform: windows 7 64bit, chrome 27, python 2.7, tornado 2.42. When the html page was loaded, \'s memory goes up.3. Every time I reload the page, memory goes up again ( + 5MB for every reload in my situation )4. On reloading, an error was raised by tornado ( see the last part )5. If I play the video," I can see the memory going down during the playing (but always higher than last reload)### Error Traceback on Page Reloading  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,1,2013-06-21 02:04:31,1293.43,,1,,"b'b"" Hmm.  10053 looks like windows\' ECONNABORTED.  Sometimes we catch both ECONNABORTED and ECONNRESET", and sometimes we only catch ECONNRESET.  We should probably catch both of them every time. Separately, we appear to have a reference cycle or leak that is preventing or delaying garbage collection.  If you add a call to () in your handler," does the memory usage stop increasing?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,2,2013-06-21 02:04:31,51.32,,1,,"b""b' I tried to add a call to () in  . The error is still raised"," but memory usage is under control.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,3,2013-06-21 02:04:31,1030.97,1,,,"b'b"" OK.  I can\'t reproduce this myself", but I\'ve got a change that should more or less fix it.  The IOStream object itself will still be alive until the next garbage collection," but the bulk of the data will be freed (and the error message will be gone).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,closed,2013-07-07 17:48:40,944.15,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,4,2013-06-21 02:04:31,704.03,,1,,"b""b' I tried the latest branch c43996288e52a8f68728164f9284cf286d38543a "," but memory still leaks as bigger as before (~5m every refresh)'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,reopened,2013-08-04 22:08:30,259.83,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,closed,2013-08-04 22:13:01,4.52,1,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,5,2013-06-21 02:04:31,1010.05,,1,,"b""b' @luwenjin"," try again with commit f2e2367.  That should cover a case that the earlier change missed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,6,2013-06-21 02:04:31,1435.87,,,1,"b""b' @bdarnell ", This commit is perfect, no Exception," no leakage.Thanks a lot!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,828,closed,-,-,-,1,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,opened,2013-07-11 09:22:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,title,2013-07-11 09:22:10,00:00,,1,,"b""b' Leaking file descriptors when using asynchronous stdin STREAM'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,body,2013-07-11 09:22:10,00:00,,,1,"b'b"" Hello! Please"," look at this code example. I\'ve tested it on Centos 6 and Ubuntu 12.04 using current master branch of Tornado. On my machine output is something like: File descriptors not closing and remain open which leads to leaking. Or am I doing something wrong?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,1,2013-07-11 09:22:10,25.62,1,,,"b'b"" Sorry"," I think I\'ve provided a bad example because I use stderr  STREAM here. I\'ll try to reproduce my problem in a correct way and will make another issue or reopen this one.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,closed,2013-07-11 09:47:49,25.65,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,reopened,2013-07-11 10:00:13,12.4,1,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,2,2013-07-11 09:22:10,12.75,,1,,"b'b"" I\'ve updated issue description""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,3,2013-07-11 09:22:10,964.75,,1,,"b""b' The leak is in your test code:  you always pass stdin=STREAM", but you only call sub_() if stdin_data is given.  If you move the () call out of the if statement (or only pass stdin=STREAM if stdin_data is present)," the leak is gone.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,closed,2013-07-12 02:05:17,965.07,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,4,2013-07-11 09:22:10,241.97,,,1,"b""b' Oh", so obvious," but I missed that. Thank you!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,849,closed,-,-,-,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,opened,2013-11-16 19:12:04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,title,2013-11-16 19:12:04,00:00,,1,,"b""b' Pass timeout argument to '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,body,2013-11-16 19:12:04,00:00,,1,,"b""b' Hi","This pull request add support for timeout parameter of (timeout=None) method.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,1,2013-11-16 19:12:04,1387.5,,1,,"b'b"" The timeout argument should not be used with Futures in a Tornado application"," since waiting for the Future to complete will block the IOLoop (and if the Future depends on the IOLoop (which is probably the case for any uses of Tornado\'s customized TracebackFuture class) it will deadlock and time out without making any progress).  You must wait for the Future to complete (probably by yielding it in a coroutine or using ) before asking for its result. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,closed,2013-11-30 18:19:34,1387.5,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,2,2013-11-16 19:12:04,999.77,1,,,"b'b"" Hi", I understand I should not do this. But still, this is want I want to do. Even if it means shooting myself in the feet. Also, as timeout is exposed in _DummyFuture implementation," and since you try to comply with  interface. Wouldn\'t be better to unify API between all implementations ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,3,2013-11-16 19:12:04,224.55,,1,,"b'b"" Hmm", if _DummyFuture accepts a timeout (but ignores it) then I suppose TracebackFuture might as well too.  I\'m not sure when this would ever be useful (unless you\'re using TracebackFuture as a wrapper for threaded-style Future usage)," but it\'s harmless enough.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,reopened,2013-12-01 14:43:53,1224.32,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,closed,2013-12-01 14:44:10,0.28,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,936,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,opened,2014-02-19 09:19:57,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,title,2014-02-19 09:19:57,00:00,,1,,"b'b"" Calling close() on an IOStream doesn\'t cancel pending read callbacks""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,body,2014-02-19 09:19:57,00:00,,1,,"b'b"" I don\'t know if this is a bug or expected behavior", but I think I\'m running into a situation where I want to close a stream, and then immediately reconnect. The problem is that when I call close on it, it doesn\'t cancel cancel read callbacks and so I end up getting AssertionError: Already reading. Is this something that can be fixed in tornado," or do I need to figure out a workaround. Any ideas?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,1,2014-02-19 09:19:57,385.95,,1,,b'b\' Hmm," I didn\\\'t realize that it was even possible to ""reconnect"" an IOStream after a stream is closed you\\\'re expected to throw it away and create a new IOStream object for a new connection; the state of a stream after it\\\'s been closed is undefined (as is the case for most python objects with a ""close"" method)\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,closed,2014-02-20 15:45:54,385.95,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,2,2014-02-19 09:19:57,215.0,,1,,"b""b' I guess my question then would be how do I cancel the callbacks on an iostream?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,3,2014-02-19 09:19:57,22.67,,1,,"b""b' Callbacks are cancelled (or really just abandoned) when the connection is closed"," but there is no support for the application to cancel its own callbacks.  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,4,2014-02-19 09:19:57,743.7,1,,,b'b\' So, once you call close() on an iostream, it shouldn\\\'t call any callbacks after that? I think I\\\'m running into a situation where it is calling callbacks after being closed. I spent a bunch of time removing code from my app so that I could sort of get a minimal test case. I\\\'m hoping its small enough to take a look at. Here\\\'s the code:url  The included  is a modified version of this library:url  To get it working, you\\\'ll need to install the requirements from  and set environment variables to connect to the Twitter API. (or just modify the code with the API keys) If you don\\\'t have an app to test with, you can get one here:url  Then just run:python  After a few seconds," I get an error message:""AssertionError: Already reading"" I\\\'m pretty sure  closes the connection to an iostream before creating a new one", but it appears a callback from the old stream gets called after it is closed.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,5,2014-02-19 09:19:57,1030.8,,1,,"b'b"" If the other side closes a connection"," the close_callback will be the last thing you hear from the stream.  If you close the connection yourself I\'m not sure if we do the right thing.  I think  should check the state of the stream and not run the callback if it\'s been closed.  Could you give that a try and see if it fixes the problem you\'re seeing?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,reopened,2014-02-22 01:18:04,572.17,1,6,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,6,2014-02-19 09:19:57,462.93,,1,,"b""b' Do you mean like this? This made other stuff break. Like"," external HTTP requests were timing out.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,7,2014-02-19 09:19:57,1041.27,,1,,"b'b"" Yes"," that\'s what I meant.  I guess it needs something more complicated along the lines of _maybe_run_close_callback.  All this deferred-callback logic is tricky.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,8,2014-02-19 09:19:57,1007.22,,1,,"b""b' In Tornado 6.0"," there are no more read callbacks. Read *futures* will raise a StreamClosedError.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,closed,2019-01-01 19:09:29,1071.42,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,987,closed,-,-,-,1,9,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,opened,2014-02-28 15:39:38,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,title,2014-02-28 15:39:38,00:00,,1,,"b""b' Add JSON support to parse_body_arguments'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,body,2014-02-28 15:39:38,00:00,,1,,"b""b' This patch adds support for a JSON request body for  requests. JSON bodies are constructed the same as the other request body arguments to ensure API compatibility with  and . Additionally minimal added test coverage to parse_body_arguments'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,1,2014-02-28 15:39:38,77.13,1,,,"b'b"" It feels very weird to me to contort json objects to fit the get_ data model one of the advantages of using json over form-encoding is that there is a type-safe distinction between a single value and a one-element list.  It seems to me that you\'d be better off just storing the decoded object and accessing it with ordinary dict methods instead of get_argument[s]"," unless you have a particular desire to gloss over the distinction between json and form-encoding.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,2,2014-02-28 15:39:38,1386.02,,,1,"b'b"" I\'m closing this PR because I don\'t think it makes sense to mix the data model for HTML forms and other bodies.  Additionally", I think any enhancements to body parsing should really be done at the RequestHandler level instead of parse_body_arguments," because the latter is difficult for the application to customize and has no good error-handling path.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,closed,2014-05-25 16:02:47,23.15,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,3,2014-02-28 15:39:38,411.17,,1,,"b""b' Would you consider something like that [url  ? '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,4,2014-02-28 15:39:38,881.02,,1,,"b""b' Last conversation is we were going to add a  attribute and not apply any of the  type behavior on it.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,5,2014-02-28 15:39:38,3.9,,1,,"b""b' With this approach we can accomplish any body processing", not only JSON, maybe a change from processed_body to parsed_body, and the developer have the power to do any implementation and error handling," what do you think @gmr ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,6,2014-02-28 15:39:38,9.48,,1,,"b'b"" That\'s more of a @bdarnell question than for me. I owe a PR doing the json_body bit. Not opposed to it", but what I was looking for was to remove the work in dealing with since it\'s a fairly standard convention at this point in writing APIs. Your approach would require that I implement the ," and what I was trying to accomplish was not having to think about it ;-)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,7,2014-02-28 15:39:38,68.98,,,1,b'b\' I would prefer your implementation, it is more seamless, but we don\\\'t have only JSON," maybe a good change would be a ""default"" tornado processing if possibility to developer to make their own.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,8,2014-02-28 15:39:38,602.8,,1,,"b'b"" Regarding @wsantos\'s gist", the current_ pattern has proven confusing and I\'d rather not repeat it. As a baseline, if you don\'t care about checking content-type, you can do this in one line today:  def post(self):   = json_decode() So opting in has to be very simple if it is to be worthwhile.  One way in which a centralized implementation can be valuable is by handling content-type correctly.  This suggests some sort of registry in which handlers for different content-types can be added.  But then we\'re back to the original question, which is whether it makes sense for divergent parsing functions to write their results into a single object, and if so what that object should look like. Another consideration, which is perhaps a separate and larger project, is how to handle asynchronous parsing of large bodies.  For  uploads in particular," it would be nice to handle these in some incremental way from data_received.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,reopened,2014-08-23 01:00:08,537.35,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,9,2014-02-28 15:39:38,1334.77,,1,,"b""b' So", the idea is to centralize the body processor ? i was thinking in something like RequestHandlers, here is an code sample, of course we must have a default list for some handlers like, application/x-www-form-urlencoded," -data and etc. i still thinking in how to expose the processed data. I like this approach but some parts need to be polished.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,10,2014-02-28 15:39:38,130.52,1,,,b'b\' Yes, something like that.  I had been thinking of configuring it in the RequestHandler subclass," but the Application works too.  (I would avoid the word ""handler"" for the new type; it\\\'s best to save that word for RequestHandler and its subclasses.) The question is", as you say, how to expose the data.  form-urlencoded and json both produce a single object, which is usually a dictionary with string keys, which makes it appealing (but IMHO awkward) to massage the json output to match the legacy form-urlencoded schema.  Other encodings produce more divergent results: -data produces a dict as in the first case but also a separate files object; a  parser would produce an object that is not dict-like at all. I think that applications generally do want to coerce all input formats they support into one consistent object model, but they disagree about which format should dominate.  For example, apps that use protobufs may want to accept the [json serialization of protobufs]url  and access the results as the decoded protobuf instead of the raw json dict.  Apps that use a json schema ([example]url  may want to use that schema to upgrade form-encoded data to the json format instead of downgrading json to the ambiguous form-encoded format. So after thinking about it that way, maybe the answer is not a collection of parsers keyed by content-type, but a single parser (per handler or application) which may support multiple content-types and coerce them all into a consistent model.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,11,2014-02-28 15:39:38,1371.45,,1,,"b""b' Closing this as to not clutter up the  list.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,closed,2015-06-16 00:16:52,1396.73,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,997,closed,-,-,-,2,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,opened,2014-08-05 07:58:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,title,2014-08-05 07:58:19,00:00,,1,,"b""b'  for ipv6 tests on OSX 10.6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,body,2014-08-05 07:58:19,00:00,,1,,"b'b"" I\'m getting three of these errors running on Pythons 2.7 through 3.4 on OSX 10.6: url  The errors are of form: I get the same errors using compiled tornado 4.0 release (via wheels) and not-compiled on current trunk (installing with no compiler).  I don\'t get this error on a 10.7 machine (current trunk"," with compiler).  Could this be something specific to do with 10.6 and ipv6?  Any suggestions for further tests I could try?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,1,2014-08-05 07:58:19,381.2,,1,,b'b\' It could be a 10.6 issue," but I don\\\'t have any way to test older versions of osx.  It could also just be an issue with the configuration of this build farm.  These tests are expecting to resolve ""localhost"" in ipv6-only mode"," i.e. you need the line ""::1 localhost"" in / (which is there by default at least in 10.9).  \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,2,2014-08-05 07:58:19,175.88,,1,,"b'b"" The machine I\'m testing on (via buildbot and ssh) is just a bare install of 10.6 + git", I haven\'t (as far as I know) altered the default hosts configuration.  It\'s running on my home network. Here is /: My 10.6 desktop machine (at work, attached by wire to the Berkeley network) does not raise error, nor does my 10.9 laptop," running on my home network. Is there anything else I can check?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,3,2014-08-05 07:58:19,54.23,,1,,"b'b"" I suppose / or something in // might affect things"," but I\'m not sure.  You can test this in isolation by running  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,4,2014-08-05 07:58:19,402.03,,1,,"b'b"" Sure enough: and I don\'t think OSX uses /: This python issue looks as though the reporter is picking up something similar"," and implies I\'m not the only one running into this problem: url  .  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,5,2014-08-05 07:58:19,61.22,,1,,"b'b"" I\'m going to close this since it looks like IPv6 name resolution is simply having problems on this machine and it doesn\'t look like there\'s anything else Tornado can do about it.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,closed,2014-08-11 01:52:53,1074.57,0,7,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,6,2014-08-05 07:58:19,10.28,,1,,"b""b' Sure I was guessing you might like to skip these tests if the name lookup failed"," but letting them through is no problem from my side.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,7,2014-08-05 07:58:19,393.05,,1,,"b""b' For anyone googling"," the error is only for the case of port number == 0:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,8,2014-08-05 07:58:19,251.23,,1,,"b'b"" Ah"," that is a problem we can do something about.  We use AI_PASSIVE when binding to port 0; it\'s reasonable for a getaddrinfo implementation to reject requests for port 0 without AI_PASSIVE (although it\'s quirky to do so for ipv6 but not ipv4).  Using any non-zero port in these tests will fix this.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,reopened,2014-08-12 12:47:27,654.57,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,closed,2014-08-12 12:55:18,7.85,0,10,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,9,2014-08-05 07:58:19,289.37,,,1,"b""b' Great thanks.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1136,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,opened,2014-09-15 09:52:32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,title,2014-09-15 09:52:32,00:00,,1,,"b""b' Improved the build matrix.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,1,2014-09-15 09:52:32,133.67,,,1,"b""b' This is good to go. Please merge.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,2,2014-09-15 09:52:32,50.6,,1,,"b'b"" Actually I have another idea on how to improve this. Don\'t merge yet.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,3,2014-09-15 09:52:32,729.87,,1,,"b'b\' Closing since it has been months since your ""Don\\\'t merge yet"" comment.\''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,closed,2015-01-12 01:06:40,914.13,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,4,2014-09-15 09:52:32,364.65,,1,,"b""b' I tried to make the build faster for PyPy but the monotonic clock extension is slowing it down.I think this should be merged as is for now.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,reopened,2015-01-12 14:08:52,782.2,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,5,2014-09-15 09:52:32,427.63,,,1,"b'b"" Why do you run pypy with  ? The tests should be run in as close to a real environment as possible", and the JIT is the whole point of pypy, so I\'d be concerned if we didn\'t run it in our tests. also does network operations (installing certifi and -match-hostname)," so it should probably also be run with travis_retry (it would be nice if we could tell travis to just retry the entire install block if any of it fails)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,6,2014-09-15 09:52:32,1025.87,,1,,"b""b' I tried to make the pypy tests run faster.I can turn it back on.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,7,2014-09-15 09:52:32,389.73,,1,,"b'b"" Since that was the last commit in the branch I\'ll just manually merge up to bbd1f90.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,closed,2015-01-14 14:22:03,13.18,0,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1190,closed,-,-,-,0,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,opened,2014-11-06 20:48:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,title,2014-11-06 20:48:37,00:00,,1,,"b""b' Anyway to modify sec_websocket_protocol using websocket_connect()?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,body,2014-11-06 20:48:37,00:00,,,1,"b'b"" I use original websocket in javascript", which is OK to add a subprotocol; And I use tornado httpserver to handle websocket subprotocols, which is also perfect; Now I\'m trying to crate a python websocket client," but I figure out that it seems impossible to change the subprotocol using websocket_connect(). So do you plan to add sudprotocol as an argument in the future? Or I should use another way to create a websocket client which supports subprotocol in python?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,1,2014-11-06 20:48:37,1293.42,,1,,"b""b' There is no explicit support for subprotocols in the client"," but you can manually pass the header:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,2,2014-11-06 20:48:37,132.85,,,1,"b""b' Thanks for your explanation"," I really appreciate it. And it will be great if you can mention it in the document under websocket_connect()!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,closed,2014-11-08 20:34:53,1426.27,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,3,2014-11-06 20:48:37,1041.93,,1,,"b""b' I agree about adding this to the documentation at least.  Subprotocols is an integral part of websockets so why not have it directly in the API?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,4,2014-11-06 20:48:37,4.53,,1,,"b""b' Yeah"," this should have first-class support. Want to submit a PR?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,reopened,2015-09-07 14:01:21,1046.47,0,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,5,2014-11-06 20:48:37,17.08,1,,,"b'b"" I will if I get some time over... Just not that familiar with the Tornado source"," so I\'d be afraid to break something. I guess this should be a quite trivial change though :) ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,6,2014-11-06 20:48:37,509.63,,1,,"b""b' Client-side subprotocol support is coming in Tornado 5.1'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,closed,2018-06-10 22:48:04,526.72,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1243,closed,-,-,-,1,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,opened,2015-03-05 07:46:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,title,2015-03-05 07:46:41,00:00,,1,,"b""b' Blog demo uses deprecated GoogleMixin'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,body,2015-03-05 07:46:41,00:00,,1,,"b""b' I try run "," it display need change anything?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,1,2015-03-05 07:46:41,333.77,,1,,"b""b' Yes", the blog demo is using the deprecated GoogleMixin, and needs to be updated to use GoogleOAuth2Mixin. Google no longer allows the older protocol for unregistered domains," and will soon be turning it off completely.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,closed,2015-03-06 06:43:02,1376.35,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,reopened,2015-03-06 13:42:47,419.75,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,2,2015-03-05 07:46:41,438.75,,1,,"b""b' Today I updated the blog demo to use its own  login instead of GoogleMixin.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,closed,2015-03-29 20:39:12,416.42,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1368,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,opened,2015-04-10 02:36:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,title,2015-04-10 02:36:55,00:00,,1,,"b""b'  on how to write non-blocking drivers to support Tornado IOLoop'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,body,2015-04-10 02:36:55,00:00,,,1,"b""b' Need official extensive  with examples on how to write non-blocking networking IO based drivers to interact with external application.That would be nice addon for developers who want to write libraries around Tornado. And it will benefit tornado community.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,1,2015-04-10 02:36:55,798.35,,1,,"b""b' Can you elaborate on what you mean exactly (maybe a use case you have in mind)? I have made several demo programs for myself to test things out and have thought about combining them into a full-fledged demo.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,2,2015-04-10 02:36:55,326.75,1,,,"b""b' What I meant", for example, lets pretend there is no Redis client available which supports Tornado. One that is officially available is blocking. So how should one proceed with analyzing blocking area," and what API to use to make it async (). How to read chunk when available on socket and when to yield control back to main loop. The best practices and supplements. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,3,2015-04-10 02:36:55,602.97,,,1,"b""b' @rskumar  thats very good proposal. I believe @ajdavis  will be able to enlighten us when he free. He is developer of Motor driver for Tornado and active contributor of Tornado. His blog usually wrote about how motor is implemented. url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,4,2015-04-10 02:36:55,728.85,,1,,"b'b"" @rskumar I don\'t have anything so complex as manually connecting to a redis server", but I did make a proof of concept TCP echo  [here]url  Another alternative for tasks suitable for running in the background might be to use the decorator combined with to notify the IO loop that a result is ready. I think this method works quite well in many cases for applications, though it might be less suitable for a library," in which case coroutines probably make more sense.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,closed,2015-11-21 20:54:07,1097.2,1,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,5,2015-04-10 02:36:55,80.95,1,,,"b""b' closed by mistake.. Reopening it again'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,reopened,2015-11-21 20:54:47,0.67,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1414,open,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,opened,2015-07-24 01:55:39,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,title,2015-07-24 01:55:39,00:00,,1,,"b""b' fix Content-Type for gzip in StaticFileHandler'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,body,2015-07-24 01:55:39,00:00,,1,,"b""b' Python mimetypes module only recognizes gzip as the encoding. This willdetect a gzip encoding from mimetypes and make sure the Content-Typeends up as  This replaces #1465.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,1,2015-07-24 01:55:39,33.17,,,1,"b'b"" This looks good"," but can you add a test for it? You can add some small files with or extensions in and test for them in  . You\'ll also need to add the new data files to and  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,2,2015-07-24 01:55:39,50.4,,1,,"b'b"" OK"," I\'ll create a new PR with both the test and the fixes.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,closed,2015-07-30 03:19:13,83.57,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,3,2015-07-24 01:55:39,1.7,,1,,"b'b"" You don\'t have to close this PR; you can just push a new commit to the branch. It\'s usually better to re-use an existing PR to keep all the discussion about a change in one place.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,4,2015-07-24 01:55:39,2.62,,1,,"b""b' Oh"," OK. Reopening and pushing new changes.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,reopened,2015-07-30 03:23:32,4.32,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,5,2015-07-24 01:55:39,49.5,,1,,"b'b"" Some of the test failures aren\'t your fault; rebase or merge to get fixes for the  stuff. You also need to replace a set literal in the test for python 2.6 compatibility.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,6,2015-07-24 01:55:39,1005.15,,1,,"b""b' OK"," rebased and fixed.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,closed,2015-07-31 01:10:48,1307.27,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1468,closed,-,-,-,0,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,opened,2015-08-24 15:49:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,title,2015-08-24 15:49:29,00:00,,1,,"b""b' PEP-0492: Infinite loop in convert_yielded'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,body,2015-08-24 15:49:29,00:00,,1,,"b""b' Trying to await more than two coroutines nested starts an infinite loop. Am I using everything correctly ?  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,1,2015-08-24 15:49:29,174.87,,1,,"b'b"" I wrote a wrap for awaiting multiple coroutines. Even though I can\'t guarantee the efficiency"," it just works for me.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,2,2015-08-24 15:49:29,778.77,,1,,"b""b' @zguangyu : What you propose does not do what (or yielding a list of futures for tornado coroutines) does. The important thing here is to start _every_ coroutines and then to wait for all to complete", not start the first one, wait for completion, start the second one, wait for completion, \\xe2\\x80\\xa6 With a bit more testing," I just realized the problem has nothing to do with but rather with the number of nested coroutines: This fails just as well with an infinite recursion loop. I will update the first post'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,3,2015-08-24 15:49:29,337.82,,1,,"b'b"" I was missing the here"," hence why the coroutines weren\'t handled correctly.The error could be a bit more explicit though""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,closed,2015-08-25 13:20:56,1291.45,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,4,2015-08-24 15:49:29,81.33,,,1,"b'b"" Hmm", that shouldn\'t be happening.  The infinite recursion is because requires PEP 492 Awaitables to ultimately result in objects that can be yielded to the Tornado coroutine runner. The problem is that while we can always tell when an object is Awaitable, whether it is yieldable depends on which packages have been imported. In this case, are yieldable only if has been imported. I\'m not sure if there\'s any good way to detect this and handle it more gracefully than a stack overflow. Maybe we should import asyncio and make yieldable by default (when asyncio is available)," although I\'m not sure it makes much difference since any realistic use of will require the IOLoop configuration (as you saw here  requires the the asyncio event loop to be running).""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,reopened,2015-08-25 14:42:16,81.33,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,closed,2015-09-15 03:42:29,780.22,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1499,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,opened,2015-12-21 08:53:07,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,title,2015-12-21 08:53:07,00:00,,1,,"b""b' how to upload files with AsyncHTTPClient'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,body,2015-12-21 08:53:07,00:00,,1,,"b'b"" if using requests", codes like: data = {...}addr = \'...\'with file( ... ) as f:   response = ( addr, data = data," files = { \'file\': f } ) please show me the async code using AsyncHTTPClient.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,1,2015-12-21 08:53:07,1091.52,,1,,"b""b' The purpose of the issue tracker is to report bugs or feature requests for Tornado. Questions like this are better suited for the mailing list or stack overflow.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,closed,2015-12-22 03:04:38,1091.52,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,2,2015-12-21 08:53:07,38.93,,1,,"b""b' there are same questions already in stackoverflow. but no answer.if this feature is not exist. regard this as a feature request.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,3,2015-12-21 08:53:07,550.72,,1,,b'b\' I have the same problem, all I want is as following but I am not sure how to do that : = AsyncHTTPClient()(," \\\\        method = ""POST""", \\\\        request_timeout = 10," \\\\        files = {""f1"": ""./""","f2"":""./""}, \\\\ ### upload files to HttpServer        body = (params, ensure_ascii = False), \\\\        callback = )     #ioloop will run continually     ().start()\''
tornado	1616	closed	4	ajdavis	2015-12-21 08:53:07	43.25		+1		b""b' This is a plausible example of uploading a file with AsyncHTTPClient: url  I agree it could be a useful feature for AsyncHTTPClient to support file upload more easily. Multipart form encoding is not in the Python standard library so each HTTP implementation has to implement its own eventually. _Or_, since file upload with AsyncHTTPClient is easily implemented without any changes to Tornado itself, this would make a useful little standalone package.'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,5,2015-12-21 08:53:07,772.2,,,1,"b""b' Omm"," Thank you for your kindly reply.  Indeed I use the way as your link to send a file instead of AsyncHTTPClient.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,6,2015-12-21 08:53:07,639.17,1,,,"b'b\' Here\\\'s an example. Run this file-receiver server in one terminal window: Create two files in the local directory named ""foo"" and ""bar"" with any contents", and run this file in another terminal window (I\\\'ve tried to make it compatible with Python 2.7 or Python 3):  \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,7,2015-12-21 08:53:07,0.52,,,1,"b'b"" @bdarnell what\'s a good next step on this ticket? Shall I add this to  ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,8,2015-12-21 08:53:07,93.4,,1,,"b'b"" @saintthor I just updated my example to use a streaming upload"," and to set each file\'s mime-type correctly.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,reopened,2016-11-01 14:42:49,698.18,1,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,9,2015-12-21 08:53:07,741.7,,,1,"b""b' that is perfect.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,10,2015-12-21 08:53:07,199.6,,,1,"b""b' Yeah", I think checking this in as an example is a good idea. We might even want two versions of the file-upload example: one like this with the wrapper," and one that uploads the raw file with a PUT (and therefore can use streaming requests on the server side). We probably want to recommend the PUT version to users who are not constrained by backwards compatibility with HTML forms. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,closed,2016-11-20 09:14:48,1111.98,1,7,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,11,2015-12-21 08:53:07,1179.42,,1,,"b""b' Add mutiple args support"," files and params any. used in my testcase.  url  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1616,closed,-,-,-,1,8,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,opened,2016-03-21 16:08:12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,title,2016-03-21 16:08:12,00:00,,1,,"b'b"" When Use : \'GZipContentEncoding\' object has no attribute \'_gzip_file\'""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,body,2016-03-21 16:08:12,00:00,,1,,"b'b\'  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 781," in render    (html)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 932," in finish    (include_footers=True)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 891, in flush    chunk = (chunk," include_footers)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 2763, in transform_chunk    (chunk)  AttributeError: \\\'GZipContentEncoding\\\' object has no attribute \\\'_gzip_file\\\'\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,1,2016-03-21 16:08:12,1274.22,1,,,"b""b' Something weird is going on. This line is only reached when is true"," and in that case always sets  . Can you post a complete code sample that demonstrates the error?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,2,2016-03-21 16:08:12,451.27,,1,,"b""b' Closing as unreproducible. Feel free to reopen if you can post more complete reproduction instructions.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,closed,2016-04-03 20:53:41,285.48,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,3,2016-03-21 16:08:12,438.65,1,,,"b'b"" I\'m sorry to reply you so long.I am try to write a Proxy Server\\xe3\\x80\\x82the Server recv Client\'s Request","then use HttpClient().fetch to get response and back to client  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,4,2016-03-21 16:08:12,993.3,1,,,"b'b"" I still don\'t see what\'s going on. The stack trace you posted in the first message is in  ", so it\'s not coming from  . Also, from the line numbers there," is being called _after_ (because is set). There\'s no call to visible here but it looks like there\'s something going on outside the code that you\'ve posted.  Are you doing anything with threads? That\'s one way something weird like this might happen.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,5,2016-03-21 16:08:12,423.02,,1,,"b'b"" I\'m not doing anything with threads"," I just  listen client\'s request then use asynchttpclient remote request and response back to client\\xe3\\x80\\x82like this:  client request -remote server ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,6,2016-03-21 16:08:12,338.65,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,7,2016-03-21 16:08:12,301.95,,,1,"b'b"" Thanks for the more complete example. I\'ve added the imports and other bits necessary to actually run it"," and it\'s working for me. I tested with  . Do you have a specific example of a request that is causing this to fail?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,8,2016-03-21 16:08:12,3.73,1,,,"b""b' Sorry", as you know, this for http Proxy server,,the request is so much,and  some web test ok, some request error,"Thanks for your help!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,9,2016-03-21 16:08:12,11.6,,1,,b'b\' Test China popular chat soft named QQ\\xef\\xbc\\x8c  [E 160410 22:47:03 web:1524] Uncaught exception GET url  (127.0.0.1)  HTTPServerRequest(protocol=\\\'http\\\', host=\\\'\\\', method=\\\'GET\\\', uri=\\\'url  version=\\\'\\\', remote_ip=\\\'127.0.0.1\\\', headers={\\\'Host\\\': \\\'\\\', \\\'Upgrade-Insecure-Requests\\\': \\\'1\\\', \\\'Accept-Encoding\\\': \\\'gzip, deflate, sdch\\\', \\\'Accept\\\': \\\',+xml,;q=0.9,,_/_;q=0.8\\\', \\\'User-Agent\\\': \\\' (Windows NT 6.3; WOW64)  (KHTML, like Gecko)  \\\', \\\'Cookie\\\': \\\'ts_uid=; eas_sid=e1v4D5r7m7R980T8O3h8m2g4L8; pgv_pvid=6839864088; ptui_loginuin=793556434@; luin=o0793556434; lskey=000100003153706e05580f4367fdc8b4815828becd1360835c8c626e23b235bb6b6bbbe2ed9ed56243322fec; ptcz=2b2ec554a520a51788c9cf0d9815687ef841ced1928efb1b23371338f8d4efe0; pt2gguin=o0892768447; uin=o0892768447; skey=@m1l1Ymebc; qm_username=892768447; qm_sid=94e78a273be92b968ed24a31db196aa2,qakVzcFpHUEJHaldDanFRNW81aTI0WUpoSkt1UndKRVZnUlV3WVdzQnJHb18.; qqmusic_uin=; qqmusic_key=; qqmusic_fromtag=; pgv_info=ssid=s5110283928; ptisp=ctc\\\', \\\'Accept-Language\\\': \\\'zh-CN,"zh;q=0.8\\\'})  Traceback (most recent call last):  File ""G:\\\\\\xe5\\x90\\x8c\\xe6\\xad\\xa5\\xe7\\x9b\\x98\\\\Workspace\\\\PythonProject\\\\Capture\\\\""", line 150," in get    (response)  File ""G:\\\\\\xe5\\x90\\x8c\\xe6\\xad\\xa5\\xe7\\x9b\\x98\\\\Workspace\\\\PythonProject\\\\Capture\\\\""", line 123," in handle_response    (body)  # \\xe5\\x8f\\x91\\xe9\\x80\\x81\\xe7\\xbb\\x99\\xe5\\xae\\xa2\\xe6\\x88\\xb7\\xe7\\xab\\xaf  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 932," in finish    (include_footers=True)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 872, in flush    chunk," include_footers)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 2736, in transform_first_chunk    headers[\\\'Vary\\\'] += b\\\'," Accept-Encoding\\\'  TypeError: Can\\\'t convert \\\'bytes\\\' object to str implicitly [E 160410 22:47:03 web:953] Cannot send error response after headers written[E 160410 22:47:03 web:963] Failed to flush partial response  Traceback (most recent call last):  File ""G:\\\\\\xe5\\x90\\x8c\\xe6\\xad\\xa5\\xe7\\x9b\\x98\\\\Workspace\\\\PythonProject\\\\Capture\\\\""", line 150," in get    (response)  File ""G:\\\\\\xe5\\x90\\x8c\\xe6\\xad\\xa5\\xe7\\x9b\\x98\\\\Workspace\\\\PythonProject\\\\Capture\\\\""", line 123," in handle_response    (body)  # \\xe5\\x8f\\x91\\xe9\\x80\\x81\\xe7\\xbb\\x99\\xe5\\xae\\xa2\\xe6\\x88\\xb7\\xe7\\xab\\xaf  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 932," in finish    (include_footers=True)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 872, in flush    chunk," include_footers)  File ""D:\\\\Python3.4.3\\\\lib\\\\site-packages\\\\tornado-4.3-py3.4-win32.egg\\\\tornado\\\\""", line 2736, in transform_first_chunk    headers[\\\'Vary\\\'] += b\\\', Accept-Encoding\\\'  TypeError: Can\\\'t convert \\\'bytes\\\' object to str implicitly  \''
tornado,1670,closed,10,2016-03-21 16:08:12,43.73,,,1,b'b\' Aha! That is the real problem. We don\\\'t handle preexisting headers correctly on python 3. Furthermore," an error in the ""transform"" phase leaves things in a broken state. \''",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,reopened,2016-04-10 15:28:20,1114.65,4,6,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,11,2016-03-21 16:08:12,3.98,,,1,"b'b"" Ok! this maybe some error", I like tornado very much," it\'s very good. thanks!!""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,closed,2016-04-24 00:11:54,523.57,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1670,closed,-,-,-,4,6,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,opened,2016-10-15 11:18:40,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,title,2016-10-15 11:18:40,00:00,,1,,"b'b"" RedirectHandler re substitution doesn\'t work""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,body,2016-10-15 11:18:40,00:00,,1,,"b""b' ### Code  ### visit will raise TypeError: get() takes 1 positional argument but 2 were given  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,1,2016-10-15 11:18:40,40.4,,1,,"b'b"" Tornado doesn\'t support pattern-matching redirects like that. Is that Apache mod_redirect syntax? You can implement something like this yourself using syntax like instead of regex substitution syntax like  :  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,closed,2016-10-15 11:59:04,40.4,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,2,2016-10-15 11:18:40,8.42,,,1,"b""b' thanks"," but this code is on [url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,reopened,2016-10-15 12:32:25,33.35,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,3,2016-10-15 11:18:40,29.93,1,,,"b'b"" Apologies"," I didn\'t know about that code in the docs. @bdarnell did RedirectHandler ever really work that way?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,4,2016-10-15 11:18:40,869.93,,1,,"b""b'   This code will get the same exception in Python 3.5.2 and Python 2.7.12. Tornado 4.4.2.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,5,2016-10-15 11:18:40,513.75,1,,,"b'b"" Hmm", I wonder what I was thinking when I wrote that in the docs. This has never worked (the code in question has been untouched since the first git commit in 2009). We should just remove it from the docs for now, although it\'s not a bad idea to support this (and the syntax is a better fit than the syntax," as you point out). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,6,2016-10-15 11:18:40,10.48,,1,,"b""b' no"," the problem is not the regex substitution syntax. His code will raise the same exception.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,7,2016-10-15 11:18:40,17.88,,1,,"b'b"" Not if the method is changed from to  . Then I\'m pretty sure it will work (or at least raise a different exception). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,8,2016-10-15 11:18:40,826.25,,1,,"b""b' I can implement this if neither of you has started on it yet.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,closed,2016-11-05 15:59:21,206.93,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,1861,closed,-,-,-,2,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,opened,2017-04-19 03:39:22,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,title,2017-04-19 03:39:22,00:00,,1,,"b""b' tornado 4.5 Breaks  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,body,2017-04-19 03:39:22,00:00,,,1,"b""b' I am not 100% about the integrity of my python installation but after upgrading to Tornado 4.5 I get the following error: After downgrading to like so: Jupyter runs just fine.  This SO answer suggested the downgrade: url **Specifics:** openSuse 42.2 Python 3.4.5 Jupyter 4.3.0'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,1,2017-04-19 03:39:22,4.0,,1,,"b""b' Duplicate of #2013. Fix is being developed in #2014.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,closed,2017-04-19 03:43:22,4.0,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,2,2017-04-19 03:39:22,0.5,,,1,"b""b' Wait"," this is happening on linux? Interesting. Is there something wrong with the package in your installation of python?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,reopened,2017-04-19 03:43:52,0.5,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,3,2017-04-19 03:39:22,26.9,1,,,"b""b' @bdarnell How would I go about checking? Like I said I am not 100% sure if my Python 3.4.5 install is up to snuff"," I just got done messing around with some issues building 3.4.6 (w/ altinstall).'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,4,2017-04-19 03:39:22,7.7,,,1,"b'b"" Does it work if you at a python prompt? Or maybe jupyter is doing something funny with stderr that\'s breaking ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,5,2017-04-19 03:39:22,14.73,,,1,"b""b' Huh"," turns out was not  not installed correctly. now works with both and  .  I guess downgrading just happened to work out for me.  Thanks for the help!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,6,2017-04-19 03:39:22,1274.15,1,,,"b'b""  you have the python package installed? The error occurs (I think) when curses is missing and colorama is present but () has not been called (colorama is only useful on windows"," but it\'s possible you\'ve installed it on linux too). If you\'re seeing this error without colorama installed then there might be something else going on that I don\'t quite understand. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,7,2017-04-19 03:39:22,6.73,,1,,"b""b' It appears that has been installed the entire time.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,closed,2017-04-20 03:16:39,1412.78,2,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,8,2017-04-19 03:39:22,85.42,,1,,"b'b"" There\'s a fix for this in the master branch of url  I\'m planning to release it as Tornado 4.5.1 tomorrow.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2015,closed,-,-,-,2,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,opened,2017-05-05 09:53:29,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,title,2017-05-05 09:53:29,00:00,,1,,"b""b'  does not work after changing system time backwards'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,body,2017-05-05 09:53:29,00:00,,1,,"b""b' run the code:  then always print the log:   but if I change my system time 2017-5-5 to 2017-5-4"," the code will stop print log. I think tornado should add the feature like libevent that auto correct timer after time running backwards:   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,1,2017-05-05 09:53:29,239.3,,1,,b'b\' You can configure Tornado to use a monotonic clock," but I couldn\\\'t find clear documentation. (All Tornado\\\'s ""configurable"" classes would benefit from more docs.) I think this is correct:   You can check it worked like so:   Ben", is this the right way to do it? If so I\\\'ll submit a patch to the docs.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,2,2017-05-05 09:53:29,11.93,,1,,"b""b' The [documentation]url  indicates that is the default. Maybe (when available) should be made the default?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,3,2017-05-05 09:53:29,762.15,,,1,"b""b' Thanks @ajdavis It is work well use  []url  that compatible with Python 2 and Python 3:  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,closed,2017-05-06 02:48:34,1015.08,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,reopened,2017-05-06 02:53:47,5.22,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,closed,2017-05-06 02:54:44,0.95,0,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,4,2017-05-05 09:53:29,1151.18,,1,,"b'b"" Making the default is only safe if every user of and related methods is careful to use instead of  . We\'ve been recommending the former for a long time now", but it\'s such an easy mistake to make that I expect a lot of code out in the world would break if we made monotonic mode the default.  This is correct for now (you could also use None in place of  , although it\'s going to break in Tornado 5.0 when asyncio becomes the default. I think the future-proof way is  ," which will opt in to the current Tornado IOLoops on 5.0.  I don\'t know what asyncio does about monotonic and regular clocks. It\'s probably not a good idea to promote the use of monotonic clocks until we know how it will work under asyncio too.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,5,2017-05-05 09:53:29,679.75,,,1,"b""b' Those are all sensible reasons. Thanks for the explanation!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2035,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,opened,2017-06-25 19:46:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,title,2017-06-25 19:46:53,00:00,,1,,"b""b' Feature request: Implement for  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,body,2017-06-25 19:46:53,00:00,,1,,"b""b' This line seems implies the body is always a text", which is not always true: url Can we unify the API," e.g. wrap to  ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,1,2017-06-25 19:46:53,3.9,,1,,"b""b' The function does not require that its input be text. It accepts either text strings or byte strings", and if it is a text string," uses utf8 to convert it to bytes. So you can simply pass bytes directly here (and most places in tornado). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,closed,2017-06-30 19:50:47,3.9,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,2,2017-06-25 19:46:53,105.13,,1,,"b'b\' I should clarify my intention: I need to ""stream"" a large body (by PUT method) with  ", since somehow does not support in  , I have to use to register a read function.  In this case I have to set  , and it\\\'s not enough, because will be overwrite anyway: url So I\\\'m not able to use to stream body with PUT.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,3,2017-06-25 19:46:53,314.3,,1,,"b'b"" I see. I\'ve retitled the issue to reflect that. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,reopened,2017-07-05 02:50:13,419.43,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2096,open,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,opened,2017-08-23 02:57:10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,title,2017-08-23 02:57:10,00:00,,1,,"b""b' routing exception when not find any handler'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,body,2017-08-23 02:57:10,00:00,,1,,"b""b'   please fix the bug when not find any handler. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,1,2017-08-23 02:57:10,296.87,,1,,"b""b' Hi", can you post an exception and a stack trace that you experienced in your application? Can you please tell us what behavior you expected," and how that behavior is different from what actually happened?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,2,2017-08-23 02:57:10,47.45,,1,,"b'b"" Could you please post the code to reproduce this?  If you\'re using directly", you could handle this situation by adding a match-all rule ( ) to the end of rule list or by overriding the method and providing a suitable delegate.  is independent from the application context, so there could be no reasonable default route until you provide it by yourself. For example," this is how it\'s done in  : url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,3,2017-08-23 02:57:10,59.92,,1,,"b""b'  then $ curl url   '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,4,2017-08-23 02:57:10,4.08,,1,,"b""b' I just want 404 and no exception if the url rule not defined. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,5,2017-08-23 02:57:10,63.43,,1,,"b'b\' The thing is that with there could be no ""default rule""", because if there was, would always return some valid delegate and we wouldn\\\'t examine any other routes in the chain (imaging using a nested in place of \\xe2\\x80\\x94 in this case routes would never be examined). So you should add the default route by yourself.  You could rewrite your rule list like this: This way will be responsible for serving 404 pages.  Or you could explicitly add a fallback router that always returns 404:   The same can be achieved by overriding  :   Note that in any case you need a particular instance to generate a 404 page, because it\\\'s needed for instantiation.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,6,2017-08-23 02:57:10,52.43,,,1,"b""b' Perfect! thanks for your answer with patience. Good job @SuminAndrew '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,7,2017-08-23 02:57:10,187.22,,1,,"b""b' Also", if you use [Application]url  instead of RuleRouter," you get  404 handling.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,8,2017-08-23 02:57:10,39.25,,1,,"b""b' First of all"," Your answer is correct @ploxiln .  but I think Applcation of tornado like [Blueprint]url  in flask.  so I can factor a Large project into multi applications.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,closed,2017-08-24 02:51:59,1434.82,0,9,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,9,2017-08-23 02:57:10,210.8,,,1,"b'b"" I think it\'s fine that to *customize* a 404 page you have to add a catch-all rule at the end of the list"," but it\'s not good that a misconfigured router results in stack traces. We should detect None somewhere and generate a minimal 404 response (in http1?)""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,reopened,2017-08-27 18:58:37,966.63,0,9,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,10,2017-08-23 02:57:10,785.18,,1,,"b'b"" Ok"," I\'ll have a look at this in a couple of days.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,11,2017-08-23 02:57:10,907.13,,1,,"b""b' Fixed by #2148.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,closed,2017-11-05 23:10:57,252.33,0,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2141,closed,-,-,-,0,11,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,opened,2017-11-15 03:49:37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,title,2017-11-15 03:49:37,00:00,,1,,"b""b' Update '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,body,2017-11-15 03:49:37,00:00,,1,,"b'b"" Sometimes there will be a KeyError: \'Content-Type\'.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,1,2017-11-15 03:49:37,21.05,,1,,"b'b"" Please make your PRs against  ", not  . The CI build on the branch appears to have rotted," but I\'m not sure why. Travis isn\'t giving me any error logs. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,closed,2017-11-20 02:42:58,1373.35,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,reopened,2017-11-20 02:43:13,0.25,0,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,2,2017-11-15 03:49:37,1298.93,1,,,"b'b"" This branch has gotten kind of messed up; you need to rebase and get rid of everything but the one commit you\'re adding. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,closed,2017-12-08 09:39:08,415.92,1,3,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,3,2017-11-15 03:49:37,475.67,,1,,"b""b' #2210 '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2197,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,opened,2017-12-15 13:26:34,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,title,2017-12-15 13:26:34,00:00,,1,,"b""b' How to keep reference of HTTP request in logging ?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,body,2017-12-15 13:26:34,00:00,,,1,"b'b"" I\'m using (a lot) logging through  . Each time I implement a little bit more complex handler", I\'m adding some to keep trace of what I\'m doing and obviously to help maintenance and debugging.  However, since tornado has a great asynchronous pattern," I have logs mixed across simultaneous requests. It makes debugging impossible !  The easiest solution would be to add reference of HTTP request concerned by the log line. The question is then: _how to do it ?_ ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,1,2017-12-15 13:26:34,82.83,,1,,"b'b"" AFAIK"," the most relevant solution is to keep track of request using url  It\'s like coroutine-local storage. But I ended up with a solution when I attach  = ContextAdapter(inherited from ) with generated trace_id.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,2,2017-12-15 13:26:34,120.5,,,1,"b'b\' @noxiouz : then I should inherit my handlers from ""LoggerHandler"" .. or is it better to do a decorator to monkey patch handler  its methods ? Do you have an example ? Thanks in advance", \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,3,2017-12-15 13:26:34,122.98,1,,,"b'b"" Lots of details hide what you really need", but: url  it\'s inside decorator, where I attached context Also, the format should contain trace_id field like this url  That\'s the adapter itself: url The only disadvantage is you need to log everything using . It might be an issue to gather logs from libraries which rely on the globally accessible logger.  Unfortunately," I have no example with stack_context right now""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,4,2017-12-15 13:26:34,53.62,,1,,"b'b"" @rmedaer that\'s an example with stack_context. I believe it\'s the best approach: Example of logs:  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,5,2017-12-15 13:26:34,1310.22,,,1,"b'b"" This is the sort of thing that stack context is designed for", but it has flaws: it slows things down, and it\'s incompatible with coroutines (which are the way of the future). I\'ve considered deprecating it and removing it from future versions of tornado. I wouldn\'t recommend using it for anything operationally critical," although adding a bit of extra context to log messages should be fine. There is a [proposal]url  to add a similar feature which would work with in future versions of python. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,6,2017-12-15 13:26:34,1122.77,,,1,"b""b' @noxiouz thank you for the example. I also found [the following example]url  which is using private function to call the  .  I used both of them to implement it using class decorator:  Instead of add new Record property"," I modify the with if set.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,closed,2017-12-18 19:53:40,387.1,1,3,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,7,2017-12-15 13:26:34,1206.4,,1,,"b'b"" Hi guys","  I\'m waking up this issue because of next Tornado release (6.0) where is deprecated: see url Few questions: How can we implement the same feature ? I guess using [contextvars]url  which is available from Python 3.7 ? Could we plan to embed this feature in Tornado itself ?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,reopened,2018-09-24 08:25:53,752.22,1,4,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,8,2017-12-15 13:26:34,943.23,1,,,"b'b"" Yes", is the future for this sort of thing (or explicitly passing data around where it is needed). Unfortunately in order to be compatible with native coroutines, it requires support in the Python runtime," so we can\'t emulate this feature in Tornado alone. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,9,2017-12-15 13:26:34,1154.38,,1,,"b""b' The module will work as expected in Tornado 6.0 and Python 3.7 (tested in #2561). '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,closed,2018-12-29 19:23:30,657.62,2,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2216,closed,-,-,-,2,5,4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,opened,2018-02-02 13:44:43,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,title,2018-02-02 13:44:43,00:00,,1,,"b""b' Unexpected uncaught exception using AsyncHTTPClient'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,body,2018-02-02 13:44:43,00:00,1,,,"b'b"" Tornado: 4.5.2 (but the code it the same in current versions)  We internally have implemented proxy support for the AsyncHTTPClient. The standard advice is to use the Curl HTTP client but on the platform we were using it had some issues with the client EC certificates", which the Tornado client has no problems with. Anyway, we\'re running into a problem with uncaught exceptions and think there is a bug in the tornado code.  In the code looks at follows:   Note that  is an instance of the TCPClient class and  is marked  . Note that instead of yielding on the it uses the argument which the wrapper handles for you.  The problem is that if the method throws an exception, sometimes but not always (it apparently depends on where the exception is thrown) becomes an uncaught exception. The stack trace is as follows:  The callback passed to connect ( ) does not expect to be passed an exception tuple, and the won\'t catch it either if it is not in the first part of the connect method. You are apparently not allowed to yield within a block, so that explains the lack of yield. But then I don\'t understand how exceptions in the connect are supposed to propagate from  .  I\'ve also tried other things like setting to the exception and simply returning the stream, but cause strange effects (double stack traces, and still the unexpected exception).  What am I missing?  For reference," the proxy support we wrote is here: ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,1,2018-02-02 13:44:43,765.12,,1,,"b'b""  What you\'re missing is the magic of StackContext: any part of Tornado that deals in callbacks is (supposed to) capture the current stack context and restore it when executing a callback", so that it can catch any exception that is raised. Each step of the connect coroutine is supposed to be run in a fresh instance of the HTTP client\'s ExceptionStackContext. This, of course, had the downside of being quite fragile (but still better than the manual callbacks that prevailed before). Once coroutines were developed, they proved to be a better solution, but the older callback-oriented parts of Tornado remained untouched. What\'s probably needed here is for the line in to change to  . In the long run," all of this should be rewritten to use coroutines throughout instead of callbacks. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,2,2018-02-02 13:44:43,412.15,,,1,"b'b"" Thanks @bdarnell the clearing up that this is indeed very old code that should be updated.  Incidently", we found out through experimentation that if we change one line of code: that all of a sudden it works as expected. Don\'t understand why," but I\'m closing this issue as it serves no real purpose. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,closed,2018-02-13 09:21:59,1177.27,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,3,2018-02-02 13:44:43,777.78,,1,,"b'b"" I think there\'s still a purpose for this issue. From my previous comment:  What\'s probably needed here is for the  = connect line in  to change to  = stack_(connect). In the long run"," all of this should be rewritten to use coroutines throughout instead of callbacks.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,reopened,2018-02-25 22:19:46,777.78,1,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,4,2018-02-02 13:44:43,1225.9,,1,,b'b\'  Ah. It sounds like all the StackContext wiring is working as expected, but you\\\'re running into this:  url We expect StreamClosedErrors at any time," but other errors can be raised as ""uncaught"" if they arrive too late. I think what probably happened is that you got a timeout and returned it to the client before you got the 503 from the proxy. The practical solution is definitely to use StreamClosedError instead of HTTPError to make your proxy layer act more like a regular IOStream. I\\\'ve done some testing and can\\\'t find any mishandled StackContexts", so I\\\'m closing this issue again.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,closed,2018-03-11 18:45:40,1225.9,1,4,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,5,2018-02-02 13:44:43,1007.8,,,1,"b""b' Thanks for pointing out the piece of code that did it and verifying our guess.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2267,closed,-,-,-,1,4,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,opened,2018-03-24 14:51:19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,title,2018-03-24 14:51:19,00:00,,1,,"b'b""  \'HTTPClient\' object has no attribute \'_closed\'  in tornado5.0""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,body,2018-03-24 14:51:19,00:00,,,1,"b'b\' about () I can\\\'t execute http_client = () in tornado==5.0 running this will throw Exception this\\xef\\xbc\\x9a Traceback (most recent call last): File ""/-""", line 85," in del () File ""/-""", line 89, in close if not : AttributeError: \\\'HTTPClient\\\' object has no attribute \\\'_closed\\\'  but in tornado==4.5.2 it works fine, this issue on macOS\\xef\\xbc\\x8ccan you tell me why\\xef\\xbc\\x9f\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,1,2018-03-24 14:51:19,144.62,,1,,"b""b' Is this the only error in your logs? It looks like there was an exception in the constructor which kept the attribute from being set"," and then this exception occurred in the destructor trying to clean up. The first exception is the real error. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,closed,2018-03-25 04:25:01,813.7,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,reopened,2018-03-25 04:26:36,1.58,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,2,2018-03-24 14:51:19,682.05,,1,,"b""b' you are right\\xef\\xbc\\x8cthe whole error log is and my demo code is this:  note: I use python3.6'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,3,2018-03-24 14:51:19,563.27,,1,,b'b\' OK. The real error,RuntimeError: Cannot run the event loop while another loop is running, is a limitation of  . You can\\\'t use the synchronous in an asynchronous Tornado application when is used. You have to use instead.\'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,4,2018-03-24 14:51:19,15.93,,,1,"b'b"" why the  error not in tornado4.5? what\'s the difference between 4.5 and 5"," may be I should  read 5.0 document seriously.  : ( thanks for your reply ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,5,2018-03-24 14:51:19,1.12,,1,,"b""b' In Tornado 5.0"," asyncio is used automatically when it is available. In 4.5 you had to opt in to asyncio integration separately. '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,6,2018-03-24 14:51:19,1.92,,,1,"b""b' I get it thank you again'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,closed,2018-03-25 14:20:13,593.62,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2325,closed,-,-,-,0,5,3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,opened,2018-04-20 05:09:53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,title,2018-04-20 05:09:53,00:00,,1,,"b""b' websocket: Allow open() to be a coroutine'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,body,2018-04-20 05:09:53,00:00,,1,,"b'b"" According to this PR"," the websocket handler\'s method cannot be a coroutine: url Is this still true?""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,1,2018-04-20 05:09:53,877.85,,1,,"b'b"" Yes"," it\'s still true.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,2,2018-04-20 05:09:53,2.87,1,,,"b'b"" Actually"," I think you could make it a coroutine but it may not do what you expect: blocking in an coroutine doesn\'t block incoming messages (in the way that coroutines can be used for flow control). ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,3,2018-04-20 05:09:53,6.0,,,1,"b""b' @bdarnell Thanks for the response. Are there plans to allow to block  ? I have to call some async  as part of my WebSocket setup and would like to be able to do this cleanly without the need for a Queue.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,4,2018-04-20 05:09:53,17.03,1,,,"b'b"" I don\'t personally have any immediate plans to work on this. It shouldn\'t be too hard", but it would need some refactoring of the websocket code. As a quick fix, you could create a  in  ," call on it at the end of and at the beginning of  . ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,5,2018-04-20 05:09:53,13.1,,,1,"b'b"" Thanks. I\'ll keep an eye out for this change to be coming down the line.""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,closed,2018-04-27 03:44:28,1354.58,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,reopened,2018-05-08 22:05:59,1101.52,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,closed,2018-05-12 22:31:08,25.15,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2358,closed,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,opened,2018-06-01 11:58:55,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,title,2018-06-01 11:58:55,00:00,,1,,"b""b' _HTTPConnection: check location on _should_follow_redirect() and retain safe request when following redirects'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,body,2018-06-01 11:58:55,00:00,,1,,"b'b"" 1. url  According to the spec", the temporary URI may not be specified when the request method was HEAD. **while check _should_follow_redirect(), doesn\'t verify whether location is specified.** url 2.  **AsyncHTTPClient always use GET method on following redirects**\\xef\\xbc\\x9a url   **but while use CURL with HEAD method," CURL will also use HEAD method on following redirects:**  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,1,2018-06-01 11:58:55,1169.58,1,,,"b""b' Sorry",  I really misunderstood the spec because of my poor English\\xef\\xbc\\x81 When following 301/302/303 redirects, should we retain the original request method if it is GET," HEAD or OPTIONS?'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,closed,2018-06-03 11:49:59,1431.07,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,reopened,2018-06-03 11:50:01,0.03,1,2,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,2,2018-06-01 11:58:55,1059.93,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,closed,2018-06-28 01:08:42,798.68,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2409,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,opened,2018-06-01 13:28:23,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,title,2018-06-01 13:28:23,00:00,,1,,"b""b' demo: update s3server to newest python'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,body,2018-06-01 13:28:23,00:00,,,1,"b""b' The s3server demo has many bugs runnning under Python2.7+ or python3+!  '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,closed,2018-06-01 14:25:53,57.5,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,reopened,2018-06-01 14:25:58,0.08,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,1,2018-06-01 13:28:23,193.42,,,1,"b'b"" Thanks! I clearly haven\'t looked at this demo in a long time. Is it still useful? ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,closed,2018-06-02 16:41:53,135.92,0,1,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,2,2018-06-01 13:28:23,844.02,,1,,"b""b' I think this demo is still helpful for tornado newcomers.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2410,closed,-,-,-,0,2,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,opened,2018-08-21 03:45:06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,title,2018-08-21 03:45:06,00:00,,1,,"b'b"" Ioloop\'s time function uses by default""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,body,2018-08-21 03:45:06,00:00,,,1,"b'b"" As Tornado 6.0 will drop support for Python 2.7 and 3.4", maybe ioloop\'s time function needs to use by default?  1. Since Python 3.5, function is always available; 2. Since Python 3.5, many builtin functions switch to use a monotonic clock to compute timeouts," such as socket methods. See url 3. is faster than on many platforms:   on Windows: ![image]url   on Linux: ![image]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,closed,2018-08-21 09:17:08,332.03,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,reopened,2018-08-21 09:17:11,0.05,0,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,1,2018-08-21 03:45:06,404.07,,1,,"b'b"" CI build failed in docs. It seems to be caused by  \'s bug.  url I tested it on 1.7.6 and it was ok. But later versions have problems. ![image]url ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,2,2018-08-21 03:45:06,939.05,,1,,"b'b"" This is a backwards-incompatible change. Currently", the following are equivalent unless the application has opted in to the monotonic clock:  io_(io_() + 1, f)   io_(() + 1, f)  If becomes an alias for  , the second usage would break. It\'s been deprecated for a long time, but since there\'s no easy way to give deprecation warnings or otherwise force people to clean this up, it is common and will become subtly broken. Fortunately, in AsyncIOLoop, isn\'t used for much. The asyncio event loop uses a monotonic clock internally, and as long as the application uses instead of where appropriate, only the monotonic clock matters. Given that," I think we can just deprecate completely and leave it as an alias for  . ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,closed,2018-09-13 01:11:16,954.08,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2477,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,opened,2019-03-01 16:55:08,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,title,2019-03-01 16:55:08,00:00,,1,,"b""b' Import failure using Python 3.5.2'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,body,2019-03-01 16:55:08,00:00,,,1,"b""b' Hi",  Tornado 6.0 module seems to not be importable on Python 3.5.1 as can be seen on that backtrace:  Please note that it seems to fail on 3.5.2 as well, but works fine on Python 3.5.6, so  is probably relying on a feature introduced in between, maybe that one: url Best regards," Douglas'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,1,2019-03-01 16:55:08,11.02,,1,,"b""b' Hi",  FWIW our only requirement is  ," so the Python version requirement of 6.0 should be bumped up.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,2,2019-03-01 16:55:08,44.75,,1,,"b""b' I can reproduce with python-3.5.2 included with Ubuntu 16.04. Some experiments that may help narrow down the issue faster: '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,3,2019-03-01 16:55:08,22.62,1,,,"b'b"" Sigh. I hate that cpython adds new features like this in patch releases. It\'s really hard to test with every possible patch release; the only practical answer is to require that users upgrade to the latest patch release in whatever major release they\'re using. We already declare a [requirement of python 3.5]url  does this setuptools feature support patch releases too? (the release notes say we require 3.5.2 due to changes in syntax in that version"," so that\'s another reason why we can\'t support the oldest 3.5 releases). I\'m not sure what exactly changed here but changing all occurrences of to might work. Adding more quoting tends to make the type annotations invisible to anything but mypy. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,4,2019-03-01 16:55:08,16.35,,1,,"b""b' It looks like does support patch version"," according to the example in the doc: url '""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,5,2019-03-01 16:55:08,102.55,1,,,"b""b' python-3.5.3 included with Debian stretch (current stable) works'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,6,2019-03-01 16:55:08,0.82,,1,,"b""b' I think I have all the necessary workarounds in #2605.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,closed,2019-03-01 21:17:52,262.73,2,5,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,7,2019-03-01 16:55:08,67.7,,1,,"b'b"" I intend to do a 6.0.1 release for this"," but won\'t be able to do it today. I\'m going to leave the issue open until then so that if anyone comes looking they won\'t file duplicates. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,reopened,2019-03-01 21:20:56,3.07,2,6,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,8,2019-03-01 16:55:08,1126.08,1,,,"b'b""  The syntax supports it", but do the tools do the right thing? Pip 9.0.1 doesn\'t appear to enforce the patch version requirement (pip 19 does. Or maybe it\'s a setuptools version issue instead). Since we\'re able to support 3.5.2 (and there doesn\'t seem to be much reason to worry about 3.5.0 and 3.5.1)," I\'m not going to touch the python_requires field for 6.0.1. ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,9,2019-03-01 16:55:08,149.65,,1,,"b""b' 6.0.1 is live.'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,closed,2019-03-03 18:36:40,1275.73,3,7,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,10,2019-03-01 16:55:08,920.58,,,1,"b""b' That seems to have fixed our issues"," thanks a lot. Douglas'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2604,closed,-,-,-,3,7,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,opened,2019-03-26 10:35:41,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,title,2019-03-26 10:35:41,00:00,,1,,"b""b' Strict type checking fails because of Any in RequestHandler __init__'""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,body,2019-03-26 10:35:41,00:00,,1,,"b'b"" First of all", thanks for adding type annotations to Tornado :slightly_smiling_face: For stricter type checking, in our code base we have enabled mypy\'s flag. Unfortunately, this leads to errors in conjunction with Tornado\'s current type annotations.  Consider  , a shortened version of the [hello world example]url  Running mypy on it produces the following error:   The reason is that the signature of contains  . The type system interprets as  . Using the class as an expression (passing it to  ) will then trigger the (correct) error.  It seems to me the current convention is to rather use in constructors and make use of only if something cannot be expressed completely by the type system. For example, this is what the [typeshed coding style]url  says: Thus, a solution for the problem would be to swap with for  .  PS: Grepping through the Tornado code base," I found 29 occurrences of in init. So for a general solution it may be necessary to look at each constructor and determine case-by-case if would be more appropriate than  .""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,1,2019-03-26 10:35:41,831.78,,,1,"b'b"" The in could certainly be changed to (it\'s only used in a line anyway). But most of the time", when Tornado uses instead of  , it does so deliberately. Consider the dictionary, a  . If that were changed to  , every access to this dict would have to gain a from the useless to the real type. But this cast wouldn\'t mean anything; it would still rely on a run-time type check of what is actually in the dict. I think it\'s more in keeping with the spirit of python and gradual typing to use than to use with a bunch of  . Also remember that typeshed contains stubs, not python code. Casts are not a concern there, so it is appropriate for typeshed to recommend object instead of Any. That doesn\'t necessarily mean that annotations in runnable code should follow the same rule.  If you want to use in your own code, that\'s fine, but I think you should make a feature request to mypy to allow this flag to apply on a per  basis (and distinguish between locally-defined methods and those inherited from elsewhere)," so you can use it for your code even when you\'re using libraries like Tornado that don\'t use this flag.  ""'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,closed,2019-03-27 14:58:27,262.77,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,reopened,2019-03-27 14:58:55,0.47,0,2,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,2,2019-03-26 10:35:41,909.12,,,1,b'b\' Thanks for taking the time to reply! :slightly_smiling_face: Not entirely relevant to the issue, just making sure we are on the same page: A *does not* require casting if we use a runtime check / guard. The following code is type safe and will check fine:   That said, I agree with your point, just because it works does not mean it is nice / pythonic. makes sense in certain situations (another example is the standard module) and I am not arguing to remove it from Tornado in general or make Tornado use the flag :) . I understand the internal perspective in the sense that type annotations are used to check Tornado itself. The annotations also serve as external interface for users of Tornado, and from this perspective I am not sure why the difference between stubs and runnable code matters here? Maybe I\\\'m missing the point, could you elaborate what you mean? :slightly_smiling_face: The issue of vs in constructors is also discussed by the mypy developers [here]url  The conclusion is the same as the typeshed quote above, however the discussion quickly involves typeshed, so this might be helpful or not :wink:  . The major use case of  ,  as I understand it, is to find any occurrence of  ," so that one can avoid its ""chaining"" effects (i.e. if x is  ", z will also be...). Disabling it for imported functions would counter that use case (and I could imagine that a feature request for it would be rejected by the mypy devs).  For sure, as a workaround, I can disable the flag for our module that contains the Tornado RequestHandlers. So, the issue is not super important, just a nice-to-have for Tornado users who have enabled. :relaxed: \'',,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,3,2019-03-26 10:35:41,716.63,,1,,b'b\'  Right. It doesn\\\'t require casting, but it does require some change at (some) call sites.  From the perspective of the calling code, function arguments annotated and are equivalent: anything is accepted. Typeshed made the stylistic decision to prefer (there are non-stylistic reasons for this in some contexts other than function arguments). When a function body is present, though," there is a difference: uses permissive rules inside the function while is restrictive. Applying the typeshed ""use object instead of Any"" rule would be a burden in this case. And because and are equivalent in the caller\\\'s context", you shouldn\\\'t need to care which one I use.  That is helpful it explains that is special, and that\\\'s why the from is being reported as if it\\\'s defined in your code.  forbids any *expressions* typed as  , but permits you to pass arguments (typed as some concrete type) to functions that *accept*  . The problem is that the way this is implemented, it just walks the type annotations looking for  . This includes the argument portion of (and types are callable, with the arguments of their method). That doesn\\\'t normally produce any false positives, because when you define a function whose type includes Any, there is necessarily an expression of type Any within it. However, it\\\'s possible to inherit a function that accepts Any from another module, and that\\\'s where this false positive comes from.  So this, I think, is the bug in mypy: should not delve into the arguments of Callable types. It should just ignore them (all of them, not the skipping of Type objects from #3718), and instead detect problematic Any types from its analysis of the expressions within function bodies. \'',,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,closed,2019-03-31 03:33:13,754.3,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
tornado,2634,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
