REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,,,,,,,,
phpunit,74,closed,opened,2010-11-16 17:35:23,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,74,closed,title,2010-11-16 17:35:23,00:00,,1,,"b""b' catchable fatal error in 3.5'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,body,2010-11-16 17:35:23,00:00,,1,,"b""b' Catchable fatal error: Argument 2 passed to PHPUnit_Framework_TestResult::addError() must be an instance of Exception", instance of __PHP_Incomplete_Class given," called in / on line 222 and defined in / on line 237 Using the command-line test runner'""",,,,,,,,,,,,,,,,,
phpunit,74,closed,1,2010-11-16 17:35:23,774.0,,1,,"b""b' I will need a small reproducing test case to investigate this further.'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,2,2010-11-16 17:35:23,921.43,,,1,"b'b"" I\'ve made hours worth of changes since then and worked around the problem"," but (I believe) it centered around trying to (erroneously) throw an abstract Exception class. I\'m continuing to dig through my change logs and if I can roll back to a non-working state and isolate this I\'ll let you know. Thanks. ""'",,,,,,,,,,,,,,,,,,
phpunit,74,closed,3,2010-11-16 17:35:23,1385.8,,1,,"b'b\' here is the recipe::<?phpclass TestException extends Exception {}function doThrow() {    throw new TestException(""BLA"");} //EOF:<?phprequire_once(\\\'\\\');class phpunitTestBase extends PHPUnit_Framework_TestCase {    protected function setUp() {      require_once(\\\'\\\');    }}class phpunitTest extends phpunitTestBase {    public function testSomething() {      doThrow();    }} //EOF test with:phpunit process-isolation  PHPUnit 3.5.3 by Sebastian Bergmann. PHP Catchable fatal error:  Argument 2 passed to PHPUnit_Framework_TestResult::addError() must be an instance of Exception", instance of __PHP_Incomplete_Class given, called in / on line 235 and defined in / on line 237 Catchable fatal error: Argument 2 passed to PHPUnit_Framework_TestResult::addError() must be an instance of Exception, instance of __PHP_Incomplete_Class given, called in / on line 235 and defined in / on line 237 feel free to ask if you need more info ;)\'',,,,,,,,,,,,,,,
phpunit,74,closed,4,2010-11-16 17:35:23,818.42,,1,,"b""b' Should be fixed.'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,5,2010-11-16 17:35:23,422.52,1,,,"b""b' sorry for making noise here again", in what version should it be fixed? i just checked against PHPUnit 3.5.10 and it still shows that error:PHP Catchable fatal error:  Argument 2 passed to PHPUnit_Framework_TestResult::addError() must be an instance of Exception, instance of __PHP_Incomplete_Class given," called in / on line 235 and defined in / on line 242 regards cobexer'""",,,,,,,,,,,,,,,,
phpunit,74,closed,6,2010-11-16 17:35:23,34.63,,1,,"b""b' It should have been fixed in PHPUnit 3.5.10. Please provide a small yet complete reproducing example so that I can further investigate.'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,7,2010-11-16 17:35:23,858.92,,,1,"b""b' still happens with the example posted above!'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,8,2010-11-16 17:35:23,424.98,,1,,"b""b' Still reproducing phpunit 3.5.13 / centos 5'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,reopened,2011-04-28 15:36:12,1320.82,1,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,74,closed,9,2010-11-16 17:35:23,1364.55,,1,,b'b\' I also reproduced this: phpunit 3.5.13," ubuntu 10.04.Note this issue is only reproduced with ""process-isolation"" option.You can see a test case here url \''",,,,,,,,,,,,,,,,,,
phpunit,74,closed,10,2010-11-16 17:35:23,654.23,1,,,"b""b' This is actually expected behavior if you understand how process isolation works.  During process isolation you have one main PHPUnit process that is collecting tests and then a separate PHPUnit process for each test that the main process collects.  When one of the separate test processes finishes", it serializes the results and sends them back to the main process. The problem with your code is that the separate test process is including a file which defines a new exception class that the main process knows nothing about.  So when your test throws this new exception, it gets serialized as part of the result object and sent back to the main process.  When the main process tries to unserialize the result object," PHP gives a object for all classes which are not yet defined in the main process (your new exception object).  The unfortunate side effect of this is that fails a type check which causes the error you are reporting. The remedy for this is pretty simple: be cognizant of how process isolation works and make sure that you are not hiding classes from the main process.  The simplest way to do this is to move your file include outside of the class definition.  A better way is to use an autoloader.'""",,,,,,,,,,,,,,,,
phpunit,74,closed,11,2010-11-16 17:35:23,276.0,,,1,"b""b' My main concern with this is that a test that fails and unexpectedly throws an unknown exception crashes the PHPUnit main process!why not fix it this way:the child process knows how to handle that exception. extract all the information the parent process needs in the child process and avoid any such problem. fixing this in my code is easy"," but if it fails it destroys the complete test run. and fixing such a problem in a third party library may not be easy / wanted.'""",,,,,,,,,,,,,,,,,,
phpunit,74,closed,12,2010-11-16 17:35:23,19.37,,1,,"b'b"" I think it\'s definitely possible for PHPUnit to handle this more gracefully (and @sebastianbergmann may have some desire to do so)", but ultimately the problem is that you\'re structuring your test in a way that is not compatible with process isolation.  If you structure your tests properly," you won\'t ever encounter this and it won\'t matter how PHPUnit handles it.""'",,,,,,,,,,,,,,,,,
phpunit,74,closed,13,2010-11-16 17:35:23,654.82,1,,,b'b\' Hmm i do something and as a result PHPUnit crashes," oh of course i must beholding it wrong... do you work for apple? /rant I still think it\\\'s a bug and should be fixed.Am 20.05.2011 08:10 schrieb ""whatthejeff"" <reply@>:\''",,,,,,,,,,,,,,,,,,
phpunit,74,closed,14,2010-11-16 17:35:23,32.68,,1,,"b'b"" I\'ve acknowledged that PHPUnit could handle this situation more gracefully\\xe2\\x80\\x93I was actually planning on looking into this later tonight. I just wanted to help you understand what\'s going on and how to avoid this situation as it can take a while before patches make it into an official release of PHPUnit and there\'s no guarantee that Sebastian will accept a patch for this.""'",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,15,2010-11-16 17:35:23,99.87,,,1,"b'b"" That would be great!Since i do use code coverage and have code running directly on inclusion ofthe class in question. I\'m sadly depending on process isolation", it makestests run slower too," but this bug was the most annoying part of it.Many thanks!""'",,,,,,,,,,,,,,,,,
phpunit,74,closed,closed,2011-05-23 06:08:04,871.87,3,10,4,,,,,,,,,,,,,,,,,,,,
phpunit,74,closed,16,2010-11-16 17:35:23,686.78,,1,,"b""b' What is the status of this issue? Is it fixed or left as it is? If fixed in which release will it be shipped?'""",,,,,,,,,,,,,,,,,,,
phpunit,74,closed,-,-,-,3,11,4,,,,,,,,,,,,,,,,,,,,
phpunit,137,closed,opened,2011-01-26 09:49:49,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,137,closed,title,2011-01-26 09:49:49,00:00,,1,,"b""b' Different number of test per line'""",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,body,2011-01-26 09:49:49,00:00,,1,,"b'b"" Hi"," don\'t know if it is a bug or a feature but after upgrading from 3.5.6 to 3.5.10 the number of tests shown per line differs from one test suite to the other. Examples: or here:  ""'",,,,,,,,,,,,,,,,,,
phpunit,137,closed,1,2011-01-26 09:49:49,39.55,,1,,"b""b' Not a bug. The number of tests shown per line depends on the length of the string that represents the total number of tests: is less than  "," so there are more tests per line in the former than in the latter case.'""",,,,,,,,,,,,,,,,,,
phpunit,137,closed,2,2011-01-26 09:49:49,706.78,,1,,"b'b"" Is there a command line flag or other  that can be supplied to set the desired line width in newer versions of the package? I don\'t find one documented anywhere.""'",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,3,2011-01-26 09:49:49,926.07,,1,,"b'b"" @mrmarkfrench The output is designed to fit into a terminal. The width is hardcoded in :545 function startTestSuite I don\'t really see why it would be useful to make it configurable but then again as long as it is xml configuration only (no new cli switches) It might not hurt ether. ""'",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,4,2011-01-26 09:49:49,44.65,,,1,"b'b"" @edorian Yeah", I found the line of code. I was just hoping that there was a solution I could handle in my configs, rather than needing to modify that line of code each time I upgrade to a new version of the package. I understand that it is set to fit on an 80-column terminal, but this is no longer 1978, and I don\'t code on a VT100, so some flexibility to allow me to use more columns (and as a result fewer lines) would be helpful in my development environment. I grant you that lots of people still use 80-column terminals, so I think that\'s a great default," but the option to change it with a config would be a nice piece of flexibility.""'",,,,,,,,,,,,
phpunit,137,closed,5,2011-01-26 09:49:49,1347.1,,1,,"b""b' phpunit could use environment variable when it is available. It is automatically populated by zsh and bash. in cases when it is not set"," sticking to 80 is a sane fallback'""",,,,,,,,,,,,,,,,,,
phpunit,137,closed,reopened,2012-07-27 13:29:23,219.57,0,6,1,,,,,,,,,,,,,,,,,,,,
phpunit,137,closed,6,2011-01-26 09:49:49,36.17,,,1,"b'b"" I like the suggestion of using the COLUMNS variable. I\'d implement it like that if @sebastianbergmann also likes it :)""'",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,7,2011-01-26 09:49:49,101.05,,,1,"b""b' Fine by me. Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,8,2011-01-26 09:49:49,1280.2,,1,,"b'b"" The LINES and COLUMNS variables are not  to php and are not available via getenv or $_ENV by default.  The usable workarounds\\\\* seems to ether rely on seldomly installed extensions or on exec calls both of which don\'t make much sense to me for that usecase. It\'s a shame. I\'d like to have the feature even so to me", to be honest," it doesn\'t look all that great on a 180 col layout having only 8 very long lines for ~2k tests. But thats presumably just me being used to that. If someone knows a way to access this vars without using exec I\'d like to hear it. For now the only thing I could see us doing is to allow for a setting for the xml config. (For all the other output we don\'t insert linebreaks do having a setting might be misleading?)  *url url ""'",,,,,,,,,,,,,,,,,
phpunit,137,closed,9,2011-01-26 09:49:49,329.75,,1,,"b""b' In bash", one should explicitly in .bashrc In zsh it is exported by default," I think. But I might be wrong'""",,,,,,,,,,,,,,,,,
phpunit,137,closed,10,2011-01-26 09:49:49,444.97,,1,,"b'b"" I run functional tests (selenium with real browsers) using phpunit and it takes some time to finish.The ant task only outputs the line when it\'s terminated with end line character"," so I have to wait until the whole line of dots is filled and it may take minutes for that. If it was parameterized I would just set the width to something between and get the information faster""'",,,,,,,,,,,,,,,,,,
phpunit,137,closed,11,2011-01-26 09:49:49,1084.13,1,,,"b""b' How zf2 handles this (via @chasepeeler): url '""",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,12,2011-01-26 09:49:49,1123.12,,,1,"b""b' Hello. I would like to change the number of columns that phpunit is using to output test results to 140 columns. I am using Linux and phpunut 4.2.2. built in Codeception. Is there any easy way to do this ? Thanks'""",,,,,,,,,,,,,,,,,,,
phpunit,137,closed,closed,2014-10-22 06:43:02,1033.65,1,9,4,,,,,,,,,,,,,,,,,,,,
phpunit,137,closed,-,-,-,1,9,4,,,,,,,,,,,,,,,,,,,,
phpunit,199,closed,opened,2011-03-15 13:13:13,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,199,closed,title,2011-03-15 13:13:13,00:00,,1,,"b""b' 3.5.13 fix private test case vars'""",,,,,,,,,,,,,,,,,,,
phpunit,199,closed,body,2011-03-15 13:13:13,00:00,,1,,"b""b' This reverts the change in PHPUnit_Framework_TestCase which made most member variables private instead of let them protected. This change made it impossible to derive a custom TestCase class and modify the behaviour.But I got a use case where I needed it (Process Isolation", Autoloading, Very large Objects to pass between the processes," ...).I am sure that I am not the only one who needs the members variables to be readand writable.So please either accept this pull request or provide at least raw getter and setter methods for each private member variable'""",,,,,,,,,,,,,,,,
phpunit,199,closed,1,2011-03-15 13:13:13,31.3,,1,,"b'b"" Private members are painful. I don\'t see any reason to use them unless (protected) accessors are provided.""'",,,,,,,,,,,,,,,,,,,
phpunit,199,closed,2,2011-03-15 13:13:13,171.45,,1,,"b""b' Accepting this PR would fix issue #210 as well. One could pass in MockObjects from a derived class using the variable $mockObjects which is private currently. Setters and Getters would do the trick"," too.'""",,,,,,,,,,,,,,,,,,
phpunit,199,closed,3,2011-03-15 13:13:13,951.98,,1,,"b""b' There is a reason why all attributes in should be private: to remove the risk of breaking PHPUnit by  any of these attributes in a test case class. This happened in the past where users", for instance," created objects in and stored them in an attribute whose name conflicted with one internal to PHPUnit.'""",,,,,,,,,,,,,,,,,
phpunit,199,closed,closed,2011-05-06 08:27:57,1154.73,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,199,closed,reopened,2011-05-06 10:59:24,151.45,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,199,closed,4,2011-03-15 13:13:13,151.58,,1,,"b""b' Could it be an solution to provide protected  with _raw access_ the variables?'""",,,,,,,,,,,,,,,,,,,
phpunit,199,closed,5,2011-03-15 13:13:13,43.93,,1,,"b'b"" I second Branleb\'s request for accessors.""'",,,,,,,,,,,,,,,,,,,
phpunit,199,closed,6,2011-03-15 13:13:13,18.1,,1,,"b""b'  this for 3.7'""",,,,,,,,,,,,,,,,,,,
phpunit,199,closed,closed,2012-08-31 08:53:43,1314.32,0,8,0,,,,,,,,,,,,,,,,,,,,
phpunit,199,closed,-,-,-,0,8,0,,,,,,,,,,,,,,,,,,,,
phpunit,244,closed,opened,2011-05-08 01:36:50,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,244,closed,title,2011-05-08 01:36:50,00:00,,1,,"b""b' Expected Exception should support string codes'""",,,,,,,,,,,,,,,,,,,
phpunit,244,closed,body,2011-05-08 01:36:50,00:00,,1,,"b""b' Exceptions can return any type from [getCode()]url  specifically [PDOException::getCode()]url  returns a string. PHPUnit_Framework_TestCase should not restrict exception codes to integers.'""",,,,,,,,,,,,,,,,,,,
phpunit,244,closed,1,2011-05-08 01:36:50,912.42,,1,,"b'b"" This works with PHP 3.6.2 so i consider the issue solved. Let me know if it doesn\'t work out for you  ""'",,,,,,,,,,,,,,,,,,,
phpunit,244,closed,closed,2011-11-10 16:49:15,912.42,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,244,closed,2,2011-05-08 01:36:50,73.78,,1,,"b""b' No"," exception codes are still cast to int: url '""",,,,,,,,,,,,,,,,,,
phpunit,244,closed,reopened,2011-11-10 18:09:34,80.32,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,244,closed,3,2011-05-08 01:36:50,6.55,,1,,"b'b"" The assertion is only made if it is an integer. Ok. I should have also tried to produce a failure. Point taken. I\'ll solve this later""'",,,,,,,,,,,,,,,,,,,
phpunit,244,closed,4,2011-05-08 01:36:50,10.03,,1,,"b""b' It may also be worthwhile testing codes prefixed with numerals", such as  ," since the class handles them differently than non-numeric strings. url '""",,,,,,,,,,,,,,,,,
phpunit,244,closed,closed,2011-11-10 18:58:26,48.87,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,244,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,249,closed,opened,2011-05-12 09:52:09,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,249,closed,title,2011-05-12 09:52:09,00:00,,1,,"b'b"" assertType() reports float scalar type as \'double\'""'",,,,,,,,,,,,,,,,,,,
phpunit,249,closed,body,2011-05-12 09:52:09,00:00,,,1,b'b\' I had a test with PHPUnit reported: So I changed it to Which resulted in Of course," the right type is ""float"""," not ""double""", so this works just fine: \'',,,,,,,,,,,,,,,,
phpunit,249,closed,1,2011-05-12 09:52:09,25.58,,1,,"b""b' Try to use as is removed from version 3.6.'""",,,,,,,,,,,,,,,,,,,
phpunit,249,closed,2,2011-05-12 09:52:09,4.87,,1,,"b""b'   has exactly the same behavior: it reports a as  '""",,,,,,,,,,,,,,,,,,,
phpunit,249,closed,closed,2011-05-12 10:22:36,30.45,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,249,closed,reopened,2011-05-12 10:22:56,0.33,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,249,closed,3,2011-05-12 09:52:09,1286.05,,1,,"b'b"" I just saw the Zend Studio debugger report a float as  ", so I checked the PHP manual. It turns out that [is_double()]url  is an alias of  , but isn\'t listed as a [scalar type]url  I guess PHP is inconsistent internally," so this probably isn\'t really PHPUnit\'s fault at all.""'",,,,,,,,,,,,,,,,
phpunit,249,closed,closed,2011-05-13 15:21:27,298.52,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,249,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,277,closed,opened,2011-06-20 12:32:53,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,277,closed,title,2011-06-20 12:32:53,00:00,,1,,"b""b' bootstrap does not contain env options defined in '""",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,body,2011-06-20 12:32:53,00:00,,,1,"b'b"" I tried to define option in the  file: And found out that this option wouldn\'t avaliable in  : but but perfectly exist in the test.  can you comment on this behavior because for me it seems right to have those options in  ""'",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,1,2011-06-20 12:32:53,192.07,,1,,"b'b"" This works (for me at least) with PHPUnit 3.6.2 so I\'ll just to ahead and close this. Dumping $_ENV shows me all the env options defined for me CLI envinroment and also that I\'ve added to the xml config. If that doesn\'t still work out for you feel free to reopen and maybe add a small reproduce if you can.""'",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,closed,2011-11-10 15:44:57,192.07,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,277,closed,2,2011-06-20 12:32:53,1078.18,,1,,"b""b' Actually I am experiencing this as well with PHPUnit 3.7.20 running on php 5.3.10-1ubuntu3.6. I do not experience that with php running on OS X. I guess this might be platform-specific. In : In :  '""",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,reopened,2013-05-17 03:10:53,685.93,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,277,closed,3,2011-06-20 12:32:53,1054.77,,1,,"b'b"" The problem occurs when [auto-globals-jit]url  is enabled because [the implementation of this feature]url  make use of variable variables. I\'ll provide a fix for this shortly.""'",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,closed,2013-05-17 03:50:22,39.48,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,277,closed,4,2011-06-20 12:32:53,489.1,,1,,"b'b"" I\'m experiencing this issue in PHPUnit 4.5.0""'",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,5,2011-06-20 12:32:53,840.4,,,1,"b'b\' I\\\'m having this issue with PHPunit 5.2.11 installed via composer. Funny enough if i use a PHPunit 4.5 runtime (left over in /) it will run saying ""5.2.11"" but will load vars.\''",,,,,,,,,,,,,,,,,,,
phpunit,277,closed,6,2011-06-20 12:32:53,842.08,,,1,"b""b' @rdohms Please open a new ticket that contains a minimal", self-contained," reproducing test case. Thanks!'""",,,,,,,,,,,,,,,,,
phpunit,277,closed,7,2011-06-20 12:32:53,846.75,,1,,"b""b' ok"," let me give it a try'""",,,,,,,,,,,,,,,,,,
phpunit,277,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,,,
phpunit,292,closed,opened,2011-07-08 01:08:02,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,292,closed,title,2011-07-08 01:08:02,00:00,,1,,"b""b' CodeCoverage with Selenium not setting PHPUNIT_SELENIUM_TEST_ID Session Variable'""",,,,,,,,,,,,,,,,,,,
phpunit,292,closed,body,2011-07-08 01:08:02,00:00,,1,,"b'b"" I have a PHP web application that I am trying to get code coverage using PHPUnit.  I\'ve defined in my test class and included per the docs: protected $coverageScriptUrl = \'url  and set up phpunit_", , . As it turns out," $_COOKIE[\'PHPUNIT_SELENIUM_TEST_ID\']) is never set hence xdebug_start_code_coverage is never called. This is on CentOS 64-bit with PHP 5.3.5 and PHPUnit 3.5""'",,,,,,,,,,,,,,,,
phpunit,292,closed,1,2011-07-08 01:08:02,83.58,,1,,"b'b"" In debugging the code further"," I do see createCookie being called on line 675 of  but the cookie isn\'t set when  php files are reached. I\'m using Firefox 3.6.13 64-bit.""'",,,,,,,,,,,,,,,,,,
phpunit,292,closed,closed,2011-07-08 02:31:37,83.58,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,292,closed,reopened,2011-07-08 04:16:37,105.0,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,292,closed,2,2011-07-08 01:08:02,1358.93,,1,,"b""b' This was an issue with the httpd config ServerName being 127.0.0.1.  changing it to locahost fixed the issue.'""",,,,,,,,,,,,,,,,,,,
phpunit,292,closed,closed,2011-07-13 01:10:33,1253.93,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,292,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,322,closed,opened,2011-08-18 10:26:48,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,322,closed,title,2011-08-18 10:26:48,00:00,,1,,"b""b' group commandline option should override  setting in '""",,,,,,,,,,,,,,,,,,,
phpunit,322,closed,body,2011-08-18 10:26:48,00:00,,1,,"b""b' The commandline option does not seem to overide the setting. IMHO it should. Use case: I have a few very slow tests that I put into a single group ( ). Normally I do not want to run them", so I put them in the tag in to ignore them. Sometimes I do want to run them, so I type this on the commandline: I expect PHPUnit to run all the tests in the group because commanline options override  options. But in reality, no tests are run. Furthermore," there seems to be no other way to un-exclude a group on the commandline that has been exlcuded in the xml file.'""",,,,,,,,,,,,,,,
phpunit,322,closed,1,2011-08-18 10:26:48,423.13,,1,,"b""b' This is exactly how PHPUnit behaves:  '""",,,,,,,,,,,,,,,,,,,
phpunit,322,closed,closed,2011-08-25 17:29:56,423.13,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,322,closed,2,2011-08-18 10:26:48,884.03,,1,,"b""b' The problem is not with the but with  . See this (nearly identical) example: On that second command"," I expect that testOne is run.'""",,,,,,,,,,,,,,,,,,
phpunit,322,closed,reopened,2011-08-26 08:19:00,889.07,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,322,closed,3,2011-08-18 10:26:48,369.67,,1,,"b""b' Closing as duplicate of #320'""",,,,,,,,,,,,,,,,,,,
phpunit,322,closed,closed,2011-11-10 14:23:38,364.63,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,322,closed,4,2011-08-18 10:26:48,292.43,,1,,"b'b"" I\'ve added a workaround on #320""'",,,,,,,,,,,,,,,,,,,
phpunit,322,closed,5,2011-08-18 10:26:48,286.3,,1,,"b""b' Reopening here as the issue seems the same: Running a test that contains only tests:  '""",,,,,,,,,,,,,,,,,,,
phpunit,322,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,,,
phpunit,325,closed,opened,2011-08-19 23:14:17,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,325,closed,title,2011-08-19 23:14:17,00:00,,1,,"b""b' Problem with global variables on bootstrap file'""",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,body,2011-08-19 23:14:17,00:00,1,,,b'b\' Hello," I\\\'m trying to create some tests to a legacy system and it use some global variables that are used throughout the system. I see that the code in bootstrap can\\\'t access its own global variables. I did some tests and I see that it doesnt work: $test = ""ok"";function foo() {  global $test;  echo $test;}foo(); .. but if I use global keyword on global scope it works: global $test;$test = ""ok"";function foo() {  global $test;  echo $test;}foo(); I\\\'m using PHPUnit 3.4.13 and running this simple code as:phpunit  (the last code shows ""ok"" before give error Class teste could not be found)... orphpunit bootstrap  verbose no-globals-backup no-configuration  myclassdirectory Its a PHPUnit problem? Sorry for my bad english. Ty\''",,,,,,,,,,,,,,,,,,
phpunit,325,closed,1,2011-08-19 23:14:17,1087.28,,,1,"b""b' Can you please check whether your problem is still present in the latest version of PHPUnit? PHPUnit 3.4 has not been supported for about a year now. Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,2,2011-08-19 23:14:17,148.73,,1,,"b'b"" Sebastian"," Now I\'m using PHPUnit 3.5.15 and the problem still happens.""'",,,,,,,,,,,,,,,,,,
phpunit,325,closed,closed,2011-09-01 19:50:18,1236.02,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,325,closed,reopened,2011-09-01 19:50:27,0.15,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,325,closed,3,2011-08-19 23:14:17,1091.8,,,1,"b'b"" I can confirm this problem in PHPUnit 3.5.15. I imagine this happens because of the way variable scoping works in PHP. To expand on espiao\'s code example above: would work fine in normal PHP", but if you were to run the same code in the context of another function: $test would be null inside the nested function," despite being globalled. It only works if you global the variable before it is used: No idea how you would work around this in PHPUnit though.""'",,,,,,,,,,,,,,,,,
phpunit,325,closed,4,2011-08-19 23:14:17,238.23,,1,,b'b\' I believe that PHPUnit include files inside a function scope to run his tests. Then, from [PHP documentation]url  A solution I use now is create a bootstrap test that calls my system bootstrap. On bootstrap test I declare my known globals. The problem with this approach is that you have to know all globals to set on bootstrap test. In a big not well-written legacy system this can be a big problem to start using PHPUnit. I\\\'ll try to found any better solution, but for a while maybe is better include this subject on documentation to any other users who is in this situation. Runing with    globals $my, $system, $globals," $here;  require_once(""/"");\''",,,,,,,,,,,,,,
phpunit,325,closed,5,2011-08-19 23:14:17,21.65,,1,,"b""b' PHPUnit includes the bootstrap file using  . That method propagates variables that are global in the bootstrap script to the actual global scope.'""",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,6,2011-08-19 23:14:17,49.37,,,1,b'b\' But in the case that you have files in bootstrap system that defines global variables and other who consume this global variables, we have a problem. Run the following code and you\\\'ll see what happens: system-exampleAs you can see I\\\'m setting and trying to use it. In you load the file and takes his scope variables (system globals is local variables until you finish the load method). Then," if I run I can\\\'t see my string ""test"" test-bootstrap-withoutBut If I run I have no problems. test-bootstrap-withI know its not a good practice", but I\\\'m working in a legacy system and when I call my system bootstrap he sets my table names, connection credentials etc in some global variables, then he connects in my DB and do some operations to registrer who\\\'s online and other things. Since it does all this operations on bootstrap, your load don\\\'t have a chance to make my global (now local) variables really globals. I believe I\\\'m not the unique person with this problem and since we can\\\'t move the project to trash and start a new from scratch, we can work on some refactorings but have to write some tests don\\\'t break any system part we\\\'re working. \'',,,,,,,,,,,,
phpunit,325,closed,7,2011-08-19 23:14:17,1243.13,,1,,"b'b"" espiao", I have the same problem \\xe2\\x80\\x93 working on a legacy project, relying on some implicitly assigned globals. I don\'t see how PHPUnit could solve our problem. Loading the file at the top level would be too big of a hassle for PHPUnit. At many places," I have just explicitly made variables global  instead of just: This change is always harmless.""'",,,,,,,,,,,,,,,,
phpunit,325,closed,8,2011-08-19 23:14:17,1255.95,1,,,"b'b"" I sadly don\'t see a way for PHPUnit to help you with that and can\'t tell you more than @nb already did and what worked for you. If you have an concrete idea what would be done in PHPUnit to help you feel free to reopen this ""'",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,closed,2011-11-10 12:50:26,1019.98,2,5,3,,,,,,,,,,,,,,,,,,,,
phpunit,325,closed,9,2011-08-19 23:14:17,114.78,,1,,"b""b' @edorian my last comment was a solution. My sugestion was to document the solution.'""",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,10,2011-08-19 23:14:17,122.48,,1,,"b'b"" The documentation doesn\'t have any bigger section on legacy issues but I\'ll keep it in mind""'",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,11,2011-08-19 23:14:17,1297.98,,,1,"b'b"" @onlab your suggestion does not work for me.in  i have something like:$global a;$a = \'val\';include(\'\');  has: class Foo{ static function method()  {  $global a;  echo $a; }} Foo:a(); the global variable a is null.  I am running phpunit with a configuration file which configures a bootstrap file.  thanks for any help""'",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,12,2011-08-19 23:14:17,316.55,,1,,"b""b' @afayes you have some failures on your sample code:$global a instead of global $aFoo:a() instead of Foo::a()"," calling a function a() instead of a Foo method a()static function method() instead static function a() But I tested this behavior again using the version 3.6.10 and is the same as I mentioned before. Fixing your sample I could test:    Command to run this test: Generated output:  '""",,,,,,,,,,,,,,,,,,
phpunit,325,closed,13,2011-08-19 23:14:17,1317.27,,1,,"b""b' this issue still occurs if global variable $a is a reference variable  '""",,,,,,,,,,,,,,,,,,,
phpunit,325,closed,-,-,-,2,9,4,,,,,,,,,,,,,,,,,,,,
phpunit,349,closed,opened,2011-09-22 19:43:14,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,349,closed,title,2011-09-22 19:43:14,00:00,,1,,"b'b"" Running zetacomponent\'s Template tests with code coverage enabled doesn\'t work""'",,,,,,,,,,,,,,,,,,,
phpunit,349,closed,body,2011-09-22 19:43:14,00:00,1,,,"b'b"" When I run the Template (regression) tests", phpunit aborts with a fatal error. Command:  Output: PHPUnit 3.5.15 by Sebastian Bergmann. Zeta Components:         ezcTemplateRegressionTest:  Fatal error: Uncaught exception \'ReflectionException\' with message \'Method ezcTemplateRegressionTest::() does not exist\' in / on line 218 ReflectionException: Method ezcTemplateRegressionTest::() does not exist in / on line 218 Call Stack:  0.0002   672712 1. {main}() /:0  0.0345  3172008 2. PHPUnit_TextUI_Command->run($argv = array (0 =  0.2013 15476176 3. PHPUnit_TextUI_TestRunner->doRun($suite = class PHPUnit_Framework_TestSuite { protected $backupGlobals = NULL; protected $backupStaticAttributes = NULL; protected $name = \'Zeta Components\'; protected $groups = array (\'**nogroup**\' =  0.2034 15821304 4. PHPUnit_Framework_TestSuite->run($result = class PHPUnit_Framework_TestResult { protected $passed = array (); protected $errors = array (); protected $deprecatedFeatures = array (); protected $failures = array (); protected $notImplemented = array (); protected $skipped = array (); protected $listeners = array (0 =  0.2167 15846464 5. PHPUnit_Framework_TestSuite->run($result = class PHPUnit_Framework_TestResult { protected $passed = array (); protected $errors = array (); protected $deprecatedFeatures = array (); protected $failures = array (); protected $notImplemented = array (); protected $skipped = array (); protected $listeners = array (0 =  0.2169 16001544 6. PHPUnit_Framework_TestSuite->runTest($test = class ezcTemplateRegressionTest { public $interactiveMode = FALSE; public $directories = array (0 =......  0.4846 27340216  11. PHP_CodeCoverage_Util::getLinesToBeCovered($className = \'ezcTemplateRegressionTest\', $methodName = \'\') /:527  0.4846 27343208  12. ReflectionMethod->__construct(\'ezcTemplateRegressionTest\'," \'\') /:218  ""'",,,,,,,,,,,,,,,,
phpunit,349,closed,closed,2011-09-22 19:43:15,0.02,1,1,0,,,,,,,,,,,,,,,,,,,,
phpunit,349,closed,reopened,2011-09-22 19:46:15,3.0,1,1,0,,,,,,,,,,,,,,,,,,,,
phpunit,349,closed,1,2011-09-22 19:43:14,3.48,,1,,"b'b"" Ugh"," github issues FTL. It\'s open again.""'",,,,,,,,,,,,,,,,,,
phpunit,349,closed,2,2011-09-22 19:43:14,1224.75,1,,,"b""b' I do not work on PHPUnit 3.5 anymore"," sorry. With PHPUnit 3.6 the Zeta Components test suite does not work at all any more due to its custom test runner: Now would be the time to finally get rid off the custom test runner.'""",,,,,,,,,,,,,,,,,,
phpunit,349,closed,closed,2011-09-24 16:11:28,1225.22,2,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,349,closed,-,-,-,2,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,384,closed,opened,2011-10-26 15:52:48,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,384,closed,title,2011-10-26 15:52:48,00:00,,1,,"b""b' TRUNCATE statement fails due to FK constraints (MySQL 5.5+)'""",,,,,,,,,,,,,,,,,,,
phpunit,384,closed,body,2011-10-26 15:52:48,00:00,,1,,"b""b' When extending PHPUnit_Extensions_Database_TestCase"," a TRUNCATE statement seems to be executed for all tables found in the fixture. These TRUNCATE statements result in an Exception. The actual cause for this error is because I am running MySQL 5.5.  In the manual I found @ url '""",,,,,,,,,,,,,,,,,,
phpunit,384,closed,1,2011-10-26 15:52:48,9.35,,1,,"b""b' Should run this first before trying to TRUNCATE  '""",,,,,,,,,,,,,,,,,,,
phpunit,384,closed,closed,2011-10-26 16:02:09,9.35,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,384,closed,reopened,2011-10-26 16:02:23,0.23,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,384,closed,2,2011-10-26 15:52:48,0.45,1,,,"b'b"" Crap"," didn\'t mean to close it.""'",,,,,,,,,,,,,,,,,,
phpunit,384,closed,3,2011-10-26 15:52:48,1372.03,1,,,"b'b""  is probably not the best solution"," since it will not trigger cascade delete. Here\'s a **dirty** hack I put in PHPUnit_Extensions_Database_Operation_Truncate $query = \'DELETE FROM \'.$connection->quoteSchemaObject($table->getTableMetaData()->getTableName()).\';    ALTER TABLE \'.$connection->quoteSchemaObject($table->getTableMetaData()->getTableName()).\' AUTO_INCREMENT = 1;\'; ""'",,,,,,,,,,,,,,,,,,
phpunit,384,closed,4,2011-10-26 15:52:48,25.92,,1,,"b""b' This is a issue and not a issue.'""",,,,,,,,,,,,,,,,,,,
phpunit,384,closed,closed,2011-11-02 15:20:33,1398.17,2,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,384,closed,5,2011-10-26 15:52:48,55.67,,1,,"b""b' I disagree nivl4. Anyway I discussed it with the author of DbUnit as you suggested Sebastian"," and his solution ( url  ) worked for me :-)'""",,,,,,,,,,,,,,,,,,
phpunit,384,closed,-,-,-,2,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,414,closed,opened,2011-11-18 16:03:07,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,414,closed,title,2011-11-18 16:03:07,00:00,,1,,"b""b' Fixes phpunit-selenium issue #72: ReflectionException when running selen...'""",,,,,,,,,,,,,,,,,,,
phpunit,414,closed,body,2011-11-18 16:03:07,00:00,,1,,"b""b' ...ese test. This also applies to magical methods which have no accessible reflection Fixes issue #389:url '""",,,,,,,,,,,,,,,,,,,
phpunit,414,closed,1,2011-11-18 16:03:07,133.25,,,1,"b'b"" Closing this until there is a consensus on what to do over at url  and if that is the correct fix I\'ll reopen and merge. Hope that fine :)""'",,,,,,,,,,,,,,,,,,,
phpunit,414,closed,closed,2011-12-15 18:16:22,133.25,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,414,closed,2,2011-11-18 16:03:07,267.1,,1,,"b'b\' @sebastianbergmann Can we pull this to ""fix"" selenium? \''",,,,,,,,,,,,,,,,,,,
phpunit,414,closed,reopened,2012-02-17 22:43:29,267.12,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,414,closed,3,2011-11-18 16:03:07,6.38,,1,,"b""b' If it does not break anything else: go ahead.'""",,,,,,,,,,,,,,,,,,,
phpunit,414,closed,4,2011-11-18 16:03:07,1309.55,,1,,"b""b' Merged in 980a13b19524f134118504c898e6330b5251eec9'""",,,,,,,,,,,,,,,,,,,
phpunit,414,closed,closed,2012-02-18 20:39:25,1315.93,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,414,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,433,closed,opened,2011-12-06 15:58:49,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,433,closed,title,2011-12-06 15:58:49,00:00,,1,,"b""b' expectOutputString not completely working as expected'""",,,,,,,,,,,,,,,,,,,
phpunit,433,closed,body,2011-12-06 15:58:49,00:00,,1,,"b""b' Hello all", The following testcase: When I run the test, I get: It added some output at the end of the dots, this happened after I upgraded from 3.6.0 to 3.6.4. Regards," Matthijs M\\xc3\\xb6hlmann'""",,,,,,,,,,,,,,,
phpunit,433,closed,closed,2011-12-12 16:26:15,27.43,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,433,closed,1,2011-12-06 15:58:49,28.43,,,1,"b'b"" Thanks for report! @sebastianbergmann Please review this. I\'m not really happy with the implementation but I didn\'t find any clearer way to get rid of this""'",,,,,,,,,,,,,,,,,,,
phpunit,433,closed,2,2011-12-06 15:58:49,997.18,,,1,"b""b' Thanks"," this fixed the problem.'""",,,,,,,,,,,,,,,,,,
phpunit,433,closed,3,2011-12-06 15:58:49,106.65,,1,,"b'b"" I was a bit early with saying it was fixed. Say I have a testcase where the expect failed", then it is still printed within the dots, like:PHPUnit 3.6.4 by Sebastian Bergmann. ...............................................................  63 / 136 ( 46%).................................F1.7642171382904F8.7260499000549............................ 126 / 136 ( 92%).......... It is reproducable with a testcase where the expected string doesn\'t match the output. Regards, Matthijs M\\xc3\\xb6hlmann PS: I can\'t reopen this bug," so I hope you will read this comment..""'",,,,,,,,,,,,,,,
phpunit,433,closed,reopened,2011-12-13 10:51:36,1105.35,0,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,433,closed,4,2011-12-06 15:58:49,6.95,,1,,"b'b"" My bad"," must have overlooked this. Thanks for testing it. I\'ll adapt the patch and the test today""'",,,,,,,,,,,,,,,,,,
phpunit,433,closed,closed,2011-12-13 12:12:08,80.53,0,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,433,closed,-,-,-,0,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,436,closed,opened,2011-12-08 06:23:24,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,436,closed,title,2011-12-08 06:23:24,00:00,,1,,"b""b' PHP API to deal with code coverage filter'""",,,,,,,,,,,,,,,,,,,
phpunit,436,closed,body,2011-12-08 06:23:24,00:00,,1,,"b""b' PHPUnit should provide PHP API to let tests (or test bootstrap files) deal with code coverage filter. This feature needed when coverage parameters (such as pathes", file sets," etc) are determined dynamically.'""",,,,,,,,,,,,,,,,,
phpunit,436,closed,1,2011-12-08 06:23:24,4.43,,1,,"b""b' Original conversation: url '""",,,,,,,,,,,,,,,,,,,
phpunit,436,closed,closed,2011-12-08 07:30:42,67.3,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,436,closed,reopened,2011-12-08 07:34:31,3.82,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,436,closed,2,2011-12-08 06:23:24,67.87,,1,,"b""b' Please explain why you need this. I will try to implement this"," but not because of the wrong reason.'""",,,,,,,,,,,,,,,,,,
phpunit,436,closed,3,2011-12-08 06:23:24,4.42,1,,,"b""b' Currently I have to generate XML Config and then pass it to the PHPUnit"," which is KINDA strange. Frequently file sets to blacklist or whitelist are built dynamically. Especially if you are dealing with complex multi-moduled application.'""",,,,,,,,,,,,,,,,,,
phpunit,436,closed,4,2011-12-08 06:23:24,6.48,,,1,"b""b' Why do you need to generate the blacklist or whitelist dynamically? This is information that should not change between runs. Even in complex multi-module applications I have never seen a need for this. One more thing: if such an API existed"," where do you want to use it? In the bootstrap script for PHPUnit (configured via or passed via  ? In a custom class (which has been discouraged to use for years)? In a custom test runner? I am trying to understand your problem and find a solution for it. So please tune down your language a bit. Thank you.'""",,,,,,,,,,,,,,,,,,
phpunit,436,closed,5,2011-12-08 06:23:24,10.35,,1,,"b'b"" In my case I can  plugins as well as  them. All those operations affect  list of coverage as every plugin has its own requirements.In my case the best solution would be in TestSuite class (as TestSuite is the only who\'s responsible for his area of files). But bootstrap case is ok too"," but less preferable. ""'",,,,,,,,,,,,,,,,,,
phpunit,436,closed,6,2011-12-08 06:23:24,2.38,,1,,"b'b"" We have several build (and testing) environments", with a different set of installed PHP modules. Some of this modules provides classes," from which we descending some classes of our app. Currently in bootstrap file we checking availability of these modules and excluding from white list files containing dependent classes. If we don\'t do this PHP will die with an error of unexistent class.""'",,,,,,,,,,,,,,,,,
phpunit,436,closed,7,2011-12-08 06:23:24,1.93,,,1,"b""b' Oh! I a have an idea. In case when module not exists we can define missed classes in our bootstrap file.So may be this API is not really needed for us\\xe2\\x80\\xa6'""",,,,,,,,,,,,,,,,,,,
phpunit,436,closed,8,2011-12-08 06:23:24,0.57,,1,,"b""b' I am very inclined to say that this is not a valid reason to implement this feature. But as others would like the API as well I will try to find time to explore whether it is possible. Do note", however," that I will not implement it if the implementation requires a Singleton or another form of additional global state. This will not happen. I am slowly killing one Singleton at a time within the code base and I will not starting adding them again. Once again: you do not want to use custom (ala  ) classes. They have been discouraged for a long time.'""",,,,,,,,,,,,,,,,,
phpunit,436,closed,9,2011-12-08 06:23:24,18.97,1,,,b'b\' Sorry for me being a bit offensive," but in this year I had to spend too many working hours to work around situation ""pear upgrade broke all testing"". I still dont get the way phpunit is being changed and why backward compatibility is being broken so frequently. Okay", for now I\\\'ve got a walk-around for the last version. I needed dynamic filtering and code coverage results object. So I came up with this code: Is it the correct way? Will it be compatible with future versions?\'',,,,,,,,,,,,,,,,,
phpunit,436,closed,10,2011-12-08 06:23:24,1380.03,1,,,"b'b"" After avoiding upgrading to 3.6 due to these changes as well", I finally sat down to find a solution. The code coverage filter is available via the TestResult object, so I add my files to the whitelist by overriding my base TestCase\'s runBare() to check for the first test to be run. It\'s an ugly hack but not too complicated. You can see the details here if you are interested: To get our custom testing framework files from appearing in assertion failure stack traces, I used reflection to append to the global state\'s list of PHPUnit files. Another ugly hack. I understand that you want to avoid singletons, but there needs to be some way to provide a handle to the PHPUnit objects upon startup. You could set a global variable before loading ," or add a new TestListener bootstrap method that could receive the top-level object.""'",,,,,,,,,,,,,,
phpunit,436,closed,11,2011-12-08 06:23:24,179.6,,1,,"b""b' I am refactoring the configuration system for PHPUnit 3.7 (early development in branch). Hopefully that will make what you need possible.'""",,,,,,,,,,,,,,,,,,,
phpunit,436,closed,12,2011-12-08 06:23:24,485.28,,,1,"b'b"" Thanks"," I\'ll take a look at the branch.""'",,,,,,,,,,,,,,,,,,
phpunit,436,closed,13,2011-12-08 06:23:24,592.73,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,436,closed,closed,2015-10-02 04:18:27,1243.93,4,8,3,,,,,,,,,,,,,,,,,,,,
phpunit,436,closed,-,-,-,4,8,3,,,,,,,,,,,,,,,,,,,,
phpunit,466,closed,opened,2012-01-23 18:03:55,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,466,closed,title,2012-01-23 18:03:55,00:00,,1,,"b'b\' ""Undefined offset: 0 in / on line 860""\''",,,,,,,,,,,,,,,,,,,
phpunit,466,closed,body,2012-01-23 18:03:55,00:00,,,1,b'b\' My configuration XML file contains this: Previous versions of PHPUnit (through 3.6.7) worked fine, but this morning I upgraded to PHPUnit 3.6.8, and when I run it with my configuration file, it fails: Call Stack:  0.0004   322840 1. {main}() /:0  0.0056   695048 2. PHPUnit_TextUI_Command::main() /:46  0.0057   695384 3. PHPUnit_TextUI_Command->run() /:125  0.0057   695384 4. PHPUnit_TextUI_Command->handleArguments() /:134  0.0536  3176768 5. PHPUnit_Util_Configuration->getTestSuiteConfiguration() /:666  0.0537  3177312 6. PHPUnit_Util_Configuration->getTestSuite() /:768 Fatal error: Uncaught exception \\\'InvalidArgumentException\\\' with message \\\'Argument #1 of PHPUnit_Framework_TestSuite::addTestFile() must be a string\\\' in / on line 69 InvalidArgumentException: Argument #1 of PHPUnit_Framework_TestSuite::addTestFile() must be a string in / on line 69 Call Stack:  0.0004   322840 1. {main}() /:0  0.0056   695048 2. PHPUnit_TextUI_Command::main() /:46  0.0057   695384 3. PHPUnit_TextUI_Command->run() /:125  0.0057   695384 4. PHPUnit_TextUI_Command->handleArguments() /:134  0.0536  3176768 5. PHPUnit_Util_Configuration->getTestSuiteConfiguration() /:666  0.0537  3177312 6. PHPUnit_Util_Configuration->getTestSuite() /:768  0.1290  3375148 7. PHPUnit_Framework_TestSuite->addTestFile() /:878 The problem is line 859 of ," which changes ""getFilesAsArray($file)"" to ""getFilesAsArray($this->toAbsolutePath($file))"". For my file"," $this->toAbsolutePath($file) returns: / ""/"" is duplicated in the path", which makes the path incorrect.\'',,,,,,,,,,,,,
phpunit,466,closed,1,2012-01-23 18:03:55,3.72,1,,,"b'b"" I broke this (sorry!) in 3.6.8.  If the file does not exist / can\'t be found it will generate this error. If the file does exist the error goes away. Please note that the path is relative to the xml file location so changes are you need to remove the part. The next phpunit release will have a fix for this. **Thanks for taking the time to report this!**""'",,,,,,,,,,,,,,,,,,,
phpunit,466,closed,closed,2012-01-23 18:07:38,3.72,1,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,466,closed,2,2012-01-23 18:03:55,0.77,,1,,"b""b' Fixed in 6009484efa00238f946d692d3d378d783ee4ad4e'""",,,,,,,,,,,,,,,,,,,
phpunit,466,closed,3,2012-01-23 18:03:55,36.17,,,1,"b'b"" If I remove \'/\'", then it works for me but breaks for people on earlier versions of 3.6.x, which now can\'t find the files, so I can\'t check that fix in to my group\'s repository. (We\'ve got a fairly lengthy process of approving new versions of tools.) It looks like, in previous versions," the path was relative to the project\'s root directory; it also appears that other paths in the configuration XML files are still (in 3.6.8) relative to the project\'s root directory. How do I express file paths in the config file in a way that\'s compatible with PHPUnit 3.6.8 as well as 3.6.7?""'",,,,,,,,,,,,,,
phpunit,466,closed,4,2012-01-23 18:03:55,1.97,,,1,"b""b' (Thank you for having responded so quickly"," by the way!)'""",,,,,,,,,,,,,,,,,,
phpunit,466,closed,5,2012-01-23 18:03:55,11.9,,1,,"b'b"" It wasn\'t supposed to change behavior and if it It did we are going to revert to the old behavior anyways so I\'d say the best course of action for you would be to say at 3.6.7 for now if possible. I\'m going to test this and see what happend there. As far as I\'m aware all pathes should be relative to the location of the  file.  So if your  is in / than it should work.. nevertheless that should not change in a minor version and I\'m going to revert that in 3.6.9 if it breaks things for you.""'",,,,,,,,,,,,,,,,,,,
phpunit,466,closed,reopened,2012-01-23 18:58:29,50.85,1,3,3,,,,,,,,,,,,,,,,,,,,
phpunit,466,closed,6,2012-01-23 18:03:55,20.4,1,,,b'b\' I see you have PHPUnit 3.6.9 out now," but that fails for me with a different error. ""DefaultTestSuite"" is the test suite name in my config file (see the two lines I pasted above)"," but previously I haven\\\'t had any  file.  Fatal error: Uncaught exception \\\'PHPUnit_Framework_Exception\\\' with message \\\'Neither """" nor """" could be opened.\\\' in / on line 100  PHPUnit_Framework_Exception: Neither """" nor """" could be opened. in / on line 100  Call Stack:   0.0003   322840 1. {main}() /:0   0.1222   695048 2. PHPUnit_TextUI_Command::main() /:46   0.1223   695384 3. PHPUnit_TextUI_Command->run() /:125   0.2712  3820888 4. PHPUnit_Util_Skeleton_Test->__construct() /:152\''",,,,,,,,,,,,,,,,,
phpunit,466,closed,7,2012-01-23 18:03:55,9.47,,,1,"b'b\' Another interesting detail. I get the above error if I have this in the ""testsuite"" section of my configuration XML file: But if I change the first """" to a period", the tests run without errors: FYI," if it helps: my project is in a directory named ""main"""," all source code is in """""," and the directory """" contains the configuration XML files as well as all test files.\''",,,,,,,,,,,,,,,
phpunit,466,closed,8,2012-01-23 18:03:55,4.75,,,1,b'b\' (Actually,"the tests run without errors"" is a bit optimistic. phpunit completes without errors, but no tests actually get run.)\''
phpunit	466	closed	9	edorian	2012-01-23 18:03:55	904.08			+1	b""b' Should be fixed in 3.6.10 once released. The old behavior was restored in 93279fb88cc31afe56677e7767c17bb8e314cfac & 21051ec5511b1a34a8ff3020cd9956bf5a827713 Thanks again for the report'",,,,,,,,,,,,,,,,,,
phpunit,466,closed,closed,2012-01-27 10:37:25,938.93,2,3,6,,,,,,,,,,,,,,,,,,,,
phpunit,466,closed,10,2012-01-23 18:03:55,339.13,,1,,"b'b"" Verified. PHPUnit 3.6.10 fixes the problems and lets me run my tests again. Thank you very much! On a related note", if PHPUnit can\'t find one of the files named in the config XML, I\'d prefer it display a helpful message rather than silently ignoring the file," since if the config names a file that doesn\'t exist it\'s probably due to a mistake on the user\'s part.""'",,,,,,,,,,,,,,,,
phpunit,466,closed,11,2012-01-23 18:03:55,532.35,,1,,"b'b"" Chances are you will get an error message with phpunit 3.7 as there is a configuration parsing re-factoring in progress. For 3.6 we can\'t nicely provide error output without possible breaking more stuff :) ""'",,,,,,,,,,,,,,,,,,,
phpunit,466,closed,12,2012-01-23 18:03:55,1037.23,,1,,"b""b' Just change the file  Add  To the top of the toAbsolutePath function. like so.  '""",,,,,,,,,,,,,,,,,,,
phpunit,466,closed,-,-,-,2,6,6,,,,,,,,,,,,,,,,,,,,
phpunit,495,closed,opened,2012-02-09 17:22:32,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,495,closed,title,2012-02-09 17:22:32,00:00,,1,,"b""b' Added testsuite argument"," allowing to filter  by parent testsuite name attribute'""",,,,,,,,,,,,,,,,,,
phpunit,495,closed,body,2012-02-09 17:22:32,00:00,1,,,"b""b' Before", we could run the test suite of a component as such:  Database But the new test runner does not allow this. For example, consider this : url  Phpunit filter Database will not behave as expected in two ways: 0) test cases without Database in the class name will be omited (ie. ezcQueryExpressionTest from )1) test cases with Database in the class name from other components will be included (ezcDatabaseSchemaGenericTest from ) As a more alarming example: filter MvcTools runs 124 tests," wheras testsuite MvcTools runs 168. Credit to Derick Rethans who participated in this little task. Long live the Components ! (this is a follow up to: url '""",,,,,,,,,,,,,,,,
phpunit,495,closed,1,2012-02-09 17:22:32,1248.17,,,1,"b'b\' I\\\'ve tested it and it seems fine to me.  You shouldn\\\'t need to recurse the check as testsuites can\\\'t be in testsuites. If anything that check should be only done once outside of the foreaches. if $testSuiteNode->getAttribute(\\\'name\\\') does not match $testSuiteFilter  return $suite; // the empty suite Also I\\\'d name the argument $testSuiteFilter and not $testSuiteName as its there for filtering. Another point is that the help entry is missing and **maybe** it would be nicer to say ""contains"" instead of ""equals"" so that you could say ""all testsuites named by passing testsuite integration. For the test hit me up on irc if you need any help \''",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,2,2012-02-09 17:22:32,90.77,,,1,"b'b\' ""testsuites"" tags might not be nestable"," but ""testsuite"" tags are... In the  that Sebastian commited url  there is such a structure: You should see the nested ""testsuite"" tags here. Although one level nesting is relevant in this case (according to Sebastian\\\'s commit)", I don\\\'t know if more levels of nesting would be. Also: That would work if that method was called with every testsuite tag as argument. Which is not the case. Of course this is not obvious, I don\\\'t know if this is a bug or design decision. I did spend quite some time before i realized that the nested testsuite tags were **totally omited**. For this very reason, there is probably no elegant way of filtering out by nested testsuite tag. The reason of that is in here: url The xpath,\\\'\\\', clearly omits nested testsuite tags. So your idea won\\\'t work because $testSuiteNode is (or any testsuite tag that has a testsuites tag as parent). The method getTestSuite is **not** called with the nested testsuite elements as arguments **ever**. In this loop url  : $testSuiteNode **is**  , and $directoryNode are the  elements **of all children**, from those in  to those in  . So the only way to filter them out seems to be in the for loop. Anyway, it\\\'s of course improvable as you mentionned a wildcard for example. But you know, YAGNI, I personnaly wouldn\\\'t decide to implement it until I actually need it I would be more likely to do it wrong, trying to implement something I don\\\'t need. But if you make it a requirement to accept the pull request then I can implement wildcard support in the name (but why not accept a regexp rather than a wildcard for example ?). Wouldn\\\'t that be consistent with filter ? Then maybe shouldn\\\'t we consider another testsuite-filter (or even testsuite-name-filter) option ?\'',,,,,,,
phpunit,495,closed,3,2012-02-09 17:22:32,220.67,,1,,"b""b' Please tell me how to help you integrate this feature before it conflicts with updates :)'""",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,4,2012-02-09 17:22:32,166.75,,1,,"b'b"" I\'ll try to find the time this weekend to look into this.""'",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,5,2012-02-09 17:22:32,663.9,,,1,"b'b"" +1 from me. I\'d like to have a test or two for it (  tests) but I can write those too once this is pulled. Especially having a test for nested name testsuites would be needed as I\'m quite sure this is going to break at some point in the future if we don\'t have one for it :) So if you already have a sample for this @jpic  please include it :=)""'",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,6,2012-02-09 17:22:32,835.58,,1,,"b""b' +1 on this.'""",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,7,2012-02-09 17:22:32,37.42,1,,,"b'b"" Guys",Why does it hang here for 3 month? If it doesn\'t work for all cases and nobody volunteering to fix it right for nested testsuites it means nobody needs it for nested testsuites. I don\'t have to tell you all these is new stuff and it shouldn\'t break anything.If it\'s so hard to pull into framework such simple features," who will volunteer to work on more complex extensions?""'",,,,,,,,,,,,,,,,,
phpunit,495,closed,8,2012-02-09 17:22:32,520.78,1,,,"b'b"" @soid It\'s on the list of things i  to get done for the 3.7 release and getting that feature in with regression testing"," documentation (which someone has to write too) and possible clean ups will take at least 4 hours. Time i current don\'t have for stuff that is not a urgent bug fix but a feature for a future version that I\'d much rather test with all the other stuff. My current goal is to get 3.7 out of the door as soon as possible but between having a day job and $personalReasons I currently don\'t have the time.. you taking a piss / venting some sort of frustration in a rather random place doesn\'t really help ether""'",,,,,,,,,,,,,,,,,,
phpunit,495,closed,9,2012-02-09 17:22:32,712.8,1,,,"b'b"" It\'s not frustration", I\'m just trying to understand why it takes so hard.This is not a feature request that requires you to implement it. Its implemented feature that should be reviewed by people who know the code (13 minutes), merged (1 minute) and changelog updated (1 minute). That\'s it. If it doesn\'t pass the code review it takes even less. And of course if it\'s merged it should come to unstable branch anyway.I fully understand all your reasons and I appreciate the time you spent on the project. But you shouldn\'t block it if it\'s not perfect enough. That way the project will involve more volunteers and finally you will have to spend less time on it. PS. I\'ll try to contribute here and we\'ll write some tests for the feature. I hope it won\'t hang for months :-DPPS. Okay," I cheated a bit in numbers but I think the idea is clear.""'",,,,,,,,,,,,,,,,
phpunit,495,closed,10,2012-02-09 17:22:32,199.47,1,,,b'b\' I had a chance to look at the code from this request and I can say this is piece of shit. 1. It doesn\\\'t follow existing standards while introducing the new arguments (e.g. PHPUnit_TextUI_TestRunner isn\\\'t changed while it plays important role in arguments processing);2. It works only for testsuites set in xml config and conceptually broken as it sorts out testsuites while parsing the xml. I would rather make it work like filter argument; I\\\'d like to volunteer here and implement it right way. I wouldn\\\'t introduce a new argument and would just use existing filter. I\\\'d store parent testsuite for all tests and suites," and then I\\\'d generate somewhere in PHPUnit_Util_Test::describe() strings like ""ParentTestSuite::ChildSuite::TestCase"". So it would be possible to use it like filter=ParentTestSuite::ChildSuite for sorting out suites. How do you think would it work? Or it\\\'s better to leave testsuite option?\''",,,,,,,,,,,,,,,,,,
phpunit,495,closed,11,2012-02-09 17:22:32,449.42,1,,,"b'b"" Thanks for the objective review. I don\'t know what this code did to you but you seem pretty mental about it", so please accept my sincere apologies about that. Please understand that I was just trying to help," not to alienate random people. We don\'t need this feature anymore so I\'m closing the request.""'",,,,,,,,,,,,,,,,,
phpunit,495,closed,closed,2012-04-27 07:08:15,825.72,6,4,3,,,,,,,,,,,,,,,,,,,,
phpunit,495,closed,12,2012-02-09 17:22:32,83.62,1,,,"b'b"" Sorry for being straightforward. It\'s just my opinion"," I don\'t really know much about the phpunit code and I can be wrong.Anyway thanks for your contributions.""'",,,,,,,,,,,,,,,,,,
phpunit,495,closed,13,2012-02-09 17:22:32,730.72,,1,,"b'b"" @soid This is not acceptable behavior. Please refrain from talking like that to people sending contribution to a project you are not involved in. And cleaned up", and tested," and documented and then someone needs to apologize to the contributor that got insulted but someone hickjacking this pull request.To be honest: You won\'t get any special (at least not positive) threatmeant for insulting people and shouting around about project managment in some random pull request you have stumbled upon without even talking to the project maintainer or asking whats up on IRC. @jpic First off: I\'m sorry that you got disturbed my this dicussion as it has nothing to do the with pull request: Like stated: This can easily go into 3.7 and I can see the need for the feature (at least it would make testsuites a lot more useable again). So if you don\'t mind I\'d gladly merge it into master once I get around to. P.S so zeta switched their test layout? I\'d merge it anyways if thats fine""'",,,,,,,,,,,,,,,,,
phpunit,495,closed,14,2012-02-09 17:22:32,619.37,1,,,"b""b' Thank you", @edorian for making clear that this kind of language is not appropriate. I have to apologize that I did not step up earlier and make this clear. I, too," still want this feature but of course the implementation has to be clean. I trust your judgement of whether or not to merge this pull request.'""",,,,,,,,,,,,,,,,
phpunit,495,closed,15,2012-02-09 17:22:32,360.53,,,1,"b'b"" The components move from having a single repo with a single  to being each in its own repo with each it\'s own . I love this decision. This means that the components project might become an open coding standard rather than a commercially supported set of libraries. We all have our bad days so I\'m cool. Probably we all humiliated ourselves on a forum once in our lives"," no big deal B)""'",,,,,,,,,,,,,,,,,,
phpunit,495,closed,16,2012-02-09 17:22:32,344.95,1,,,"b'b"" My apologies for being rude. I\'m still learning English and definitely didn\'t get what I said :-) Just wanted to be straightforward. I\'m glad the request has moved on and @edorian decided to merge the request. It\'s what I was talking about. But I think some code-tuning should be done here and I\'d like to volunteer. I\'ll try to catch you in IRC.""'",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,17,2012-02-09 17:22:32,290.38,,1,,"b'b"" Allright"," here\'s my approach. I believe the right way to filter out the suites is to place the logic in PHPUnit_Framework_TestSuite::run() where phpunit runs all tests. It\'s akin to existing filter option but extends it and filters testsuites too.Let me know if you have concerns about something I\'ll easily fix it. I have one concern: $parent member isn\'t introduced in PHPUnit_Framework_Test and set dynamically in PHPUnit_Framework_TestSuite::addTest(). As PHP interfaces can\'t specify members it would require to introduce something like getParent() and setParent() and its implementation for all classes implemented PHPUnit_Framework_Test so the change would broke many code implemented PHPUnit_Framework_Test (outside phpunit). What do you link about it?""'",,,,,,,,,,,,,,,,,,
phpunit,495,closed,18,2012-02-09 17:22:32,974.53,,1,,"b'b\' I don\\\'t like the approach taken in your pull request. It puts additional complexity in the filter parameter and since we only have one it would not be possible to say ""All tests with \\\'mysql\\\' from testsuite \\\'db\\\' "" which would be one of the usecases I see.  That could maybe solved with allowing multiple filter arguments but it would (I\\\'m guessing) lead to a lot more false positives. Apart from that it\\\'s a BC issue that might not hit a view people but it\\\'s something to take into account. For me @jpic seems a lot cleaner", better documented, less error prone and more fitting for the use cases i see.\'',,,,,,,,,,,,,,,,,
phpunit,495,closed,reopened,2012-05-08 15:52:24,524.15,9,7,4,,,,,,,,,,,,,,,,,,,,
phpunit,495,closed,19,2012-02-09 17:22:32,263.48,,1,,"b'b"" I don\'t have preferences about either to use the new testsuite option or including the logic in the filter. However my main concern regarding the first commits that it\'s working only when testsuites configuration set in XML file.So what do you think if I would introduce testsuite option again but it would match testsuites like filter option does but only in testsuite names?  I would also leave the ability to filter hierarchical suites but it\'s not what I really need as I need the ability to filter testsuites. It\'s just nice to have feature so if you don\'t like that parent-child relations I introduced for suites then I can remove it. Also I\'m not sure whether the new testsuite option should match regex as the filter option does. I\'d like to do it as regex because: 1. it\'s more flexible"," 2. it\'s how filter works so they would work equally. What do you think about it?""'",,,,,,,,,,,,,,,,,,
phpunit,495,closed,20,2012-02-09 17:22:32,1395.22,,,1,"b'b"" Good points about the xml config. The reason i didn\'t care is that the feature is deprecated anyways (even so we might make that clearer) but it was removed from the docs quite some time ago. Because of that i was fine with it only working for the xml config :) having testsuites work like filter would be great. I agree on that. ""'",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,closed,2012-05-09 20:15:36,263.2,9,8,5,,,,,,,,,,,,,,,,,,,,
phpunit,495,closed,21,2012-02-09 17:22:32,47.18,1,,,"b""b' @jpic Thanks a lot for the patch and again: sorry for how the discussion went.'""",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,22,2012-02-09 17:22:32,48.63,,,1,"b""b' Excellent! When are you guys expecting to release a new version? I need this pretty bad.'""",,,,,,,,,,,,,,,,,,,
phpunit,495,closed,23,2012-02-09 17:22:32,52.12,,1,,"b'b"" @grahamc The milestone for the next release is here: url  I\'ll work on all outstanding issues but I", sadly," can\'t make any promises.  You could run this from the git checkouts or just patch your locally installed version. Apart from that there will be a 3.7-beta-phar somewhere down the line. ""'",,,,,,,,,,,,,,,,,
phpunit,495,closed,24,2012-02-09 17:22:32,53.85,,,1,"b""b' Thank you! ##  Graham Christensen On Wednesday", May 9, 2012 at 4:23 PM," Volker Dusch wrote:'""",,,,,,,,,,,,,,,,
phpunit,495,closed,-,-,-,10,9,7,,,,,,,,,,,,,,,,,,,,
phpunit,508,closed,opened,2012-02-21 17:37:42,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,508,closed,title,2012-02-21 17:37:42,00:00,,1,,"b""b' Allow PHP in expectedExceptionMessage annotation'""",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,body,2012-02-21 17:37:42,00:00,,1,,"b""b' See #484'""",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,1,2012-02-21 17:37:42,1.1,,,1,"b'b"" @edorian last comment on #484: Definitely looks a lot nicer. The @ is a nice idea. One issue:So we\'d need you to properly rebase the changes  switch branches again as 3.6 is closed for features and 3.7 will be out in the forseeable future. Having this around as a possible including would be a lot more manageable.""'",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,2,2012-02-21 17:37:42,1243.42,,,1,"b'b"" Just to confirm the above isn\'t an issue with this pull request :)""'",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,3,2012-02-21 17:37:42,1306.92,,1,,"b""b' @sebastianbergmann Can i merge this? '""",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,4,2012-02-21 17:37:42,1121.53,1,,,"b""b' I do not want PHP code in annotations"," sorry.'""",,,,,,,,,,,,,,,,,,
phpunit,508,closed,closed,2012-03-25 06:50:40,792.97,1,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,508,closed,5,2012-02-21 17:37:42,200.07,,,1,"b""b' @sebastianbergmann the need for php code and eval() was removed from this. Please could you quickly check over the code once more to see how this works as I think it would be a useful feature. thanks.'""",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,6,2012-02-21 17:37:42,488.67,,1,,"b'b\' @sebastianbergmann The proposed syntax would be the following and it would resolve via ""constant"".\''",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,7,2012-02-21 17:37:42,819.1,,1,,"b""b' Okay"," if is not used and the documentation is amended: +1 for PHPUnit 3.7.'""",,,,,,,,,,,,,,,,,,
phpunit,508,closed,reopened,2012-03-27 07:58:31,67.85,1,5,3,,,,,,,,,,,,,,,,,,,,
phpunit,508,closed,8,2012-02-21 17:37:42,9.37,,1,,"b""b' Yeah I can do the docs. assigning to milestone'""",,,,,,,,,,,,,,,,,,,
phpunit,508,closed,closed,2012-03-31 12:13:11,254.67,1,6,3,,,,,,,,,,,,,,,,,,,,
phpunit,508,closed,-,-,-,1,6,3,,,,,,,,,,,,,,,,,,,,
phpunit,604,closed,opened,2012-07-13 17:27:40,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,604,closed,title,2012-07-13 17:27:40,00:00,,1,,"b""b' Support Traversable interfaces in mock objects'""",,,,,,,,,,,,,,,,,,,
phpunit,604,closed,body,2012-07-13 17:27:40,00:00,,,1,"b""b' Currently", PHPUnit fails when trying to mock an interface that implements because PHP expects implementations of that interface to also either implement or  . The fix currently is to extend the interface for testing purposes and to add one of the two required interfaces (_Note_: The order of the interfaces is important here!) IMO PHPUnit should be able to add that interface automatically in such situations, i.e.:when the mock is created for an interface or an abstract class, andthat  class implements  ," but not nor  '""",,,,,,,,,,,,,,,
phpunit,604,closed,1,2012-07-13 17:27:40,1215.17,,,1,"b'b"" He"," thanks for the detailed bug report. I\'m currently failing to understand which use case requires one to extend the traversable interface. It should work to throw that into the mock building but I\'d like to state a use case in the tests for that.""'",,,,,,,,,,,,,,,,,,
phpunit,604,closed,2,2012-07-13 17:27:40,79.9,,1,,b'b\' Any interface whose implementation is supposed to be traversable needs to extend it. A very simple example: Interfaces usually specify a contract," without specifying _how_ that contract should be implemented. These core interfaces are special in that specifies the contract (""This object should be iterable"") while and specify how that contract is implemented. Consequently", no userland interface should them, but always IMHO.\'',,,,,,,,,,,,,,,,
phpunit,604,closed,3,2012-07-13 17:27:40,77.77,,,1,"b'b\' So what the interface is saying there is ""I can foreach over things that implement this but i don\\\'t care how the implementing class makes that happen (Iterator or IteratorAggregate). Makes sense to me. Thanks for explaining :)\''",,,,,,,,,,,,,,,,,,,
phpunit,604,closed,4,2012-07-13 17:27:40,1.18,,1,,"b""b' Exactly :)'""",,,,,,,,,,,,,,,,,,,
phpunit,604,closed,5,2012-07-13 17:27:40,855.98,,1,,"b'b\' The PHP Manual states ""This is an internal engine interface which cannot be implemented in PHP scripts. Either IteratorAggregate or Iterator must be used instead."" While the documentation continues with ""When implementing an interface which extends Traversable"," make sure to list IteratorAggregate or Iterator before its name in the implements clause.""", I do not think that should be used in userland at all and therefore am against adding support for this edge-case to PHPUnit.\'',,,,,,,,,,,,,,,,,
phpunit,604,closed,closed,2012-10-07 06:37:40,790.0,0,4,3,,,,,,,,,,,,,,,,,,,,
phpunit,604,closed,6,2012-07-13 17:27:40,121.05,,1,,"b""b' @sebastianbergmann IMHO you are misquoting the manual. The manual talks about _implementing_ Traversable", not _extending_ it. As I have shown above," there is a very clear and valid use case for extending Traversable in other interfaces (without contradicting the manual you quoted).'""",,,,,,,,,,,,,,,,,
phpunit,604,closed,7,2012-07-13 17:27:40,217.42,,1,,"b""b' Clarification on my blog: url '""",,,,,,,,,,,,,,,,,,,
phpunit,604,closed,8,2012-07-13 17:27:40,21.75,,1,,"b""b' If the traversable interface was internal to the engine"," it would not be exported to userland.'""",,,,,,,,,,,,,,,,,,
phpunit,604,closed,reopened,2012-10-07 19:42:53,785.22,0,7,3,,,,,,,,,,,,,,,,,,,,
phpunit,604,closed,9,2012-07-13 17:27:40,426.02,,1,,"b""b' I would accept a pull request for that implements the fix described in the original ticket.'""",,,,,,,,,,,,,,,,,,,
phpunit,604,closed,closed,2012-10-07 19:43:54,1.02,0,8,3,,,,,,,,,,,,,,,,,,,,
phpunit,604,closed,10,2012-07-13 17:27:40,69.08,,1,,"b""b' Ok. I opened a corresponding ticket in that repository.'""",,,,,,,,,,,,,,,,,,,
phpunit,604,closed,-,-,-,0,9,3,,,,,,,,,,,,,,,,,,,,
phpunit,634,closed,opened,2012-09-03 15:57:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,634,closed,title,2012-09-03 15:57:31,00:00,,1,,"b""b' Allow custom CLI options'""",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,body,2012-09-03 15:57:31,00:00,1,,,b'b\' I want to run some Selenium tests with PHPUnit. For this, I need to know what browser and what base-URL to use inside my tests. Since I boot-up phpunit with my own CLI runner wrapper script, I wanted to do something like this: Unfortunately," PHPUnit does not allow any other paramters that its own. The ""PHPUnit-way"" would be to use sections inside the XML config files (I use XML config files", by the way) to define env variables. But this would make me have a ton of config files (Firefox + url  Firefox + Domain B, Chrome + Domain A, Chrome + Domain B, etc.) I understand the reasoning behind not allowing unknown options. But it should be possible to allow all options starting with (or something like that). This would make the CLI runner much more useful and still be relatively safe against typos and  options. Currently, as a extremely ugly hack, I remove my elements from to make PHPUnit work, but I would like to remove this hack some time in the future. Maybe I\\\'m missing something from the docs about how to run PHPUnit with custom options?\'',,,,,,,,,
phpunit,634,closed,1,2012-09-03 15:57:31,1002.02,,,1,"b'b"" Sounds like a valid use case. I personally didn\'t have that issue for quite some time but i can see your point. Last time I ran into it i was using ether or a generated setting files for this. We\'re planning on maybe introducing a where key might (or any other xml path) but I\'m not sure about the details and there is no timeframe yet :)""'",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,2,2012-09-03 15:57:31,430.48,,1,,"b""b' Allowing more custom opts again in #655 might also help until we have another system in place.'""",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,closed,2012-09-24 15:50:01,1432.5,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,634,closed,3,2012-09-03 15:57:31,182.87,,1,,"b""b' Ok"," but why did you close this issue?'""",,,,,,,,,,,,,,,,,,
phpunit,634,closed,4,2012-09-03 15:57:31,125.07,,1,,"b'b"" I didn\'t see a point in leaving it open as a tracking issue but I noticed we currently don\'t have a issue open for the config rework. (Which i thought we did).""'",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,reopened,2012-09-24 20:57:57,307.93,1,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,634,closed,5,2012-09-03 15:57:31,1137.98,,,1,b'b\' Is the feature mentioned as planned here  already supported? I need to pass in 1 URL argument for each request in order to start debug session. This is the only solution I found, but it seems not being supported so far. In my case," I need to pass in following arguments: which tells the server ""start remote debug session ID 12345 via localhost at port 7869 without profiling"". How can I pass such arguments to CLI phpunit if this option is not supported? Thank you.\''",,,,,,,,,,,,,,,,,
phpunit,634,closed,6,2012-09-03 15:57:31,1330.75,,1,,"b'b"" Is this in the pipeline? I\'m using Selenium / WebDriver in conjunction with phpunit for acceptance testing. I\'d like other members of my team to be able to pass in custom arguments to the command line (this is via xvfb) to change default options like the browser used during the tests"," the window size etc _without a configuration file change_. I need this. Any chance of an update?""'",,,,,,,,,,,,,,,,,,
phpunit,634,closed,7,2012-09-03 15:57:31,400.7,,1,,"b'b\' @J7mbo I succeeded sending custom arguments to phpunit via CLI through argument -d on windows as follows: 1. I created file d:_projects\\\\ with following content: Then I just go into ""d:_projects\\\\"" and hit """".Better way would be including those paths into global environmental variable PATH then you could run ""phpunit"" globally from any directory.\''",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,8,2012-09-03 15:57:31,158.07,,1,,"b'b\' Really all that needs to be done is to remove the ""unrecognized option"" check. What\\\'s the point of it anyway? I\\\'ll also point out that you can bypass that check if you execute a single test of the form: \''",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,9,2012-09-03 15:57:31,1294.08,,1,,"b'b"" Perhaps if some kind of validation on built in PHPUnit options is still desirable", you could use some kind of option delimiter. E.g.  , so that arguments prior to this are still checked for validity. Not sure if I\'ve represented the usage convention of correctly," but it doesn\'t necessarily need use this operator.""'",,,,,,,,,,,,,,,,
phpunit,634,closed,10,2012-09-03 15:57:31,1058.22,,1,,"b'b\' It would be very useful if you could remove the check about the ""unrecognized option""", at the moment I have to rely on environment variables if I want to pass any option to my tests\'',,,,,,,,,,,,,,,,,,
phpunit,634,closed,11,2012-09-03 15:57:31,1386.68,,,1,"b""b' Would be greatly useful for us too.'""",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,12,2012-09-03 15:57:31,165.75,,1,,"b""b' It seems that at the moment you can just execute: and then parse  '""",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,13,2012-09-03 15:57:31,2.93,,1,,"b'b"" I think this only works with the simple file filter didn\'t work with the whole directory if I remember correctly. Plus PhpStorm cannot add arguments at the end of the line (partly their problem", I know). But it\'s some workaround for simple scenarios," that\'s true.""'",,,,,,,,,,,,,,,,,
phpunit,634,closed,14,2012-09-03 15:57:31,1351.58,,1,,"b""b' +1. Would be hugely helpful for us as well.'""",,,,,,,,,,,,,,,,,,,
phpunit,634,closed,15,2012-09-03 15:57:31,793.12,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,634,closed,closed,2015-10-02 04:17:49,439.87,2,12,3,,,,,,,,,,,,,,,,,,,,
phpunit,634,closed,-,-,-,2,12,3,,,,,,,,,,,,,,,,,,,,
phpunit,660,closed,opened,2012-09-23 08:17:58,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,660,closed,title,2012-09-23 08:17:58,00:00,,1,,"b""b' Running PHPUnit when using the composer autoloader fails '""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,body,2012-09-23 08:17:58,00:00,,1,,b'b\' Dear Sebastian and @claylo," When I try to execute PHPUnit using the """" executable I receive the following error: I have used the following  to receive this result: and use the following configuration file: Given the error message I have been investigating what may be the cause and it would _seem_ that the php-token-stream autoloader is somehow invoked twice. If I remove the \\\'files\\\' entry for the php-token-stream from then it works. This same behaviour can also be experienced by the travis for phpDocumentor itself: url  I have tried to be as complete as possible in my bug report", please let me know if any information is missing.\'',,,,,,,,,,,,,,,,,
phpunit,660,closed,1,2012-09-23 08:17:58,1.17,,1,,"b""b' Try running  '""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,2,2012-09-23 08:17:58,2.78,,1,,"b""b' @michilehr though the  was downloaded a few days ago I did as you asked but that does not solve it:  '""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,3,2012-09-23 08:17:58,428.9,1,,,"b""b' Use : 3.7.*@stable to get the latest version that fixes this issue.'""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,closed,2012-09-23 18:47:42,629.73,1,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,660,closed,4,2012-09-23 08:17:58,289.98,,1,,"b""b' At first I thought this did indeed solve the issue but I just started a new repo and am still encountering those issues: url '""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,5,2012-09-23 08:17:58,1180.53,,1,,"b'b"" @mvriel For me it\'s working (now) using your  Working for you too?""'",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,6,2012-09-23 08:17:58,70.0,,1,,"b""b' @edorian the installation is not the problem; the execution of PHPUnit is.'""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,7,2012-09-23 08:17:58,237.15,1,,,"b'b"" Ah sorry. Didn\'t try that as the project didn\'t have any tests. Also fails for me then (after removing the  )""'",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,reopened,2012-09-24 21:08:29,140.78,2,7,0,,,,,,,,,,,,,,,,,,,,
phpunit,660,closed,8,2012-09-23 08:17:58,1253.78,,1,,"b""b' @edorian I just did an update of my Composer file and pushed the lock to master so to test if this is still an issue.According to travis it is: url '""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,9,2012-09-23 08:17:58,1204.25,,1,,"b'b\' I also got the problem today. My  is:{  ""require"" : {    ""php"": "">=5.3.0""",""": ""0.0.2""  }, } php -vPHP 5.4.6 (cli) (built: Sep 21 2012 18:22:59) Copyright (c) 1997-2012 The PHP GroupZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\''
phpunit	660	closed	10	jvanalst	2012-09-23 08:17:58	231.77		+1		b""b' I also just encountered this error:PHP Fatal error:  Cannot redeclare php_tokenstream_autoload() (previously declared in /-apitoken-:45) in /-apitokenon line 230 php -vPHP 5.3.15 with Suhosin-Patch (cli) (built: Jul 31 2012 14:49:18) Copyright (c) 1997-2012 The PHP GroupZend Engine v2.3.0, Copyright (c) 1998-2012 Zend Technologies Composer version 2854df2  '",,,,,,,,,,,,,,,,,,
phpunit,660,closed,11,2012-09-23 08:17:58,238.53,,1,,"b""b' This appears to affect dev"," 3.7.1 and 3.7.0'""",,,,,,,,,,,,,,,,,,
phpunit,660,closed,12,2012-09-23 08:17:58,295.97,,,1,"b'b"" Perhaps the -tokenis \'included\' more than once. ( I didn\'t find out) Here is some dirty fix in -token-if (!function_exists(\'php_tokenstream_autoload\')) {  function php_tokenstream_autoload($class = NULL)  ...  } }""'",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,13,2012-09-23 08:17:58,1208.28,,,1,"b""b' @tiw Sure! php_token_stream autoloader is required in the package through a url  What makes it fail is that Composer uses for the key and for the classes loaded through the key"," in the file.'""",,,,,,,,,,,,,,,,,,
phpunit,660,closed,14,2012-09-23 08:17:58,841.43,1,,,"b'b"" I\'m having issues with this too and just like @theUniC said. Composer is using require instead of require_once", and they seem unwilling to go for require_once, arguing that the loader should only be included once, and that require_once is heavier. I would argue that the performance gain from using require vs require_once is miniscule and a bad case of premature micro optimization. But you PHPUnit could implement an include guard in all its autoloaders," like @tiw mentions.  ""'",,,,,,,,,,,,,,,
phpunit,660,closed,closed,2012-10-05 19:09:09,1320.67,3,11,2,,,,,,,,,,,,,,,,,,,,
phpunit,660,closed,15,2012-09-23 08:17:58,401.68,,1,,"b""b' For the record: I can confirm that the release of 3.7.5 fixes this issue'""",,,,,,,,,,,,,,,,,,,
phpunit,660,closed,-,-,-,3,12,2,,,,,,,,,,,,,,,,,,,,
phpunit,663,closed,opened,2012-09-24 03:28:53,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,663,closed,title,2012-09-24 03:28:53,00:00,,1,,"b""b' Wrong num tests when using group filter'""",,,,,,,,,,,,,,,,,,,
phpunit,663,closed,body,2012-09-24 03:28:53,00:00,,1,,"b""b' When running the phpunit with param it do not affect the number of tests in the output", affecting the percentage too. Ie,"   Note that in the first block the number of tests are the same of the tests without filter. The correct value in this case should be  .'""",,,,,,,,,,,,,,,,,
phpunit,663,closed,1,2012-09-24 03:28:53,37.32,,1,,"b""b' Looking into the code to send a pull request I see the use  ", but the groups to be filtered are sent as parameter in the  . It means that the method in the test suite are not able to filter it. It could be possible adding an attribute with the groups to filter, but the lose the goal, which is inform the number of tests from the suite, not the current running state (let me know if I am wrong saying that). So, what should be the approach to fix it? Change the behavior, or change ResultPrinter to use a different method (ie, call  ," which will call or custom in case of group filters)?'""",,,,,,,,,,,
phpunit,663,closed,2,2012-09-24 03:28:53,14.6,1,,,"b""b' I am afraid there is not clean way to do this before url '""",,,,,,,,,,,,,,,,,,,
phpunit,663,closed,3,2012-09-24 03:28:53,743.43,,1,,"b""b' See #358 and #541'""",,,,,,,,,,,,,,,,,,,
phpunit,663,closed,4,2012-09-24 03:28:53,1376.47,,1,,"b""b' Fixed with merging #781'""",,,,,,,,,,,,,,,,,,,
phpunit,663,closed,closed,2013-01-26 15:40:43,731.83,1,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,663,closed,5,2012-09-24 03:28:53,1073.67,,1,,"b'b"" It\'s still reproducible in phpunit 3.7.21""'",,,,,,,,,,,,,,,,,,,
phpunit,663,closed,6,2012-09-24 03:28:53,522.28,,,1,"b""b' Thanks"," @zerkms. I just tested and can confirm this issue still exists.'""",,,,,,,,,,,,,,,,,,
phpunit,663,closed,reopened,2013-06-04 18:16:39,155.93,1,6,1,,,,,,,,,,,,,,,,,,,,
phpunit,663,closed,7,2012-09-24 03:28:53,741.47,,1,,"b""b' @zerkms The fix for this is in the 3.8 release as it required public API changes.'""",,,,,,,,,,,,,,,,,,,
phpunit,663,closed,closed,2013-06-06 06:38:07,741.47,1,7,1,,,,,,,,,,,,,,,,,,,,
phpunit,663,closed,-,-,-,1,7,1,,,,,,,,,,,,,,,,,,,,
phpunit,669,closed,opened,2012-09-25 12:05:12,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,669,closed,title,2012-09-25 12:05:12,00:00,,1,,"b""b' Shortening arrays"," objects and strings in console output'""",,,,,,,,,,,,,,,,,,
phpunit,669,closed,body,2012-09-25 12:05:12,00:00,1,,,"b""b' PHPUnit started to shorten arrays", objects and even longer strings in console output. It leads to something like this: This message is absolutely useless. Is is possible to, at least," add some configuration option to turn this off?'""",,,,,,,,,,,,,,,,
phpunit,669,closed,1,2012-09-25 12:05:12,157.63,,1,,"b""b' When did that change and do you have a reproduce case?'""",,,,,,,,,,,,,,,,,,,
phpunit,669,closed,2,2012-09-25 12:05:12,47.6,,1,,"b'b"" No feedback and can\'t reproduce. cat   Feel free to come back with a reproduce case where the diff is useless :)""'",,,,,,,,,,,,,,,,,,,
phpunit,669,closed,closed,2012-09-30 15:30:26,205.23,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,669,closed,3,2012-09-25 12:05:12,52.63,,1,,"b'b"" I\'m coming across (what I think is) a similar problem. The problem is triggered by there being extra or missing nested arrays in the  results: cat  phpunit ""'",,,,,,,,,,,,,,,,,,,
phpunit,669,closed,4,2012-09-25 12:05:12,3.33,,1,,"b""b' Sounds like the -directive?'""",,,,,,,,,,,,,,,,,,,
phpunit,669,closed,5,2012-09-25 12:05:12,12.48,1,,,"b""b' This is what I thought originally too", but that is turned off in my config. It seems that this is actually produced by PHPUnit_Util_Type::shortenedExport(). The Array comparator uses shortenedExport when exporting missing or remaining array keys. Obviously this is useful in the case of deeply-nested arrays (or indeed ones with circular references) to avoid huge dumps of data," but it can make the output fairly useless sometimes as well. Perhaps it would be useful to have a configuration option to allow one to specify the depth to which shortenedExport will go before truncating the output?'""",,,,,,,,,,,,,,,,,
phpunit,669,closed,6,2012-09-25 12:05:12,25.23,,,1,b'b\' As a matter of fact, I finally realized, that this is correct output, but there are troubles with understanding it. Because of readability," phpunit is trying to show errors on the meaningful ""level of interest"" (in case of arrays). So in case of testEquality", log is trying to say, that you have additional array in yout result. It is not neccessary to know the values of that array (even though it would be useful some times) because they are on the lower level of interest. Just add second empty array to the expectation part of the assert, the level of interest will change and you will see expected diff. In the case of testEquality2, you are missing whole array in the result. The level of interest is inside the first array. If you add empty array as the second array in result part of the assert, you will change the level of interest and you will see expected diff. Is it at least somehow understandable? :-)\'',,,,,,,,,,
phpunit,669,closed,7,2012-09-25 12:05:12,57.42,,,1,"b'b\' I guess my point is that the ""level of interest"" can be different depending on the use case. The issue is that (e.g. in testEquality) I\\\'m expecting an array containing one array"," but I in fact have an array containing two arrays. It would be extremely useful for me to know what this second array is when I\\\'m trying to track down the cause of the problem. To give this a concrete use case in my case each sub-array in the result is a row of data returned from a database object. I should only have 1 row (so I have 1 row in my ""expected"" array)"," but the database is returning 2 (hence two  entries in my ""actual"" array). To track down why I have an extra row of data", it would help to know what that extra row of data _is_. I guess, as a workaround, I could modify my  arrays before asserting them to ensure they have the same number of rows (inserting empty rows where possible), but that seems a bit hacky to me.\'',,,,,,,,,,,,,
phpunit,669,closed,reopened,2013-01-12 01:30:12,599.77,2,5,2,,,,,,,,,,,,,,,,,,,,
phpunit,669,closed,8,2012-09-25 12:05:12,679.62,,1,,"b'b"" +1 To answer edorian\'s question at the top of this thread", PHPUnit 3.4 definitely would output the whole array (for better or for worse); possibly 3.6 too, but I no longer have a 3.6 to test with. I\'d love to be able to customize this: I would prefer failing unit tests to err on the side of too noisy than too quiet, but appreciate this might be personal preference. The workaround is to change into  , but that violates the DRY principle. E.g. when I\'m not simply testing  ," but  ""'",,,,,,,,,,,,,,
phpunit,669,closed,9,2012-09-25 12:05:12,599.62,1,,,"b'b"" It\'s insane that this issue is still open after almost two years. To recover sane behavior"," see url ""'",,,,,,,,,,,,,,,,,,
phpunit,669,closed,10,2012-09-25 12:05:12,46.83,1,,,"b'b"" @jameshfisher:1. Your stackoverflow post shows the intended behavior. At one time", PHPUnit dumped the entire data structure and gave a diff. This had issues, however, with large recursive data structures and would often crash PHPUnit (see #773). The new solution shows you the exact site where the difference occurs. It\'s obviously not a perfect solution, but it\'s a much better solution than we had previously.2. The stackoverflow response is totally inaccurate. The behavior has nothing to do with Xdebug, serializing," or  . Nothing inside our equality constraint calls  .3. This particular issue on Github is not the same as what you\'ve posted on stackoverflow. This issue describes an edge case where the context is completely unclear. It\'s still open because it\'s hard to solve and seldom reported.""'",,,,,,,,,,,,,
phpunit,669,closed,11,2012-09-25 12:05:12,730.1,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,669,closed,closed,2015-10-02 04:17:42,167.5,5,6,2,,,,,,,,,,,,,,,,,,,,
phpunit,669,closed,-,-,-,5,6,2,,,,,,,,,,,,,,,,,,,,
phpunit,674,closed,opened,2012-09-29 22:17:19,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,674,closed,title,2012-09-29 22:17:19,00:00,,1,,"b""b' $this->at($index); bug?'""",,,,,,,,,,,,,,,,,,,
phpunit,674,closed,body,2012-09-29 22:17:19,00:00,1,,,"b'b\' I\\\'m fairly sure this does not work as intended.  Consider this: With a test that does: This works exactly as . ""Returns a matcher that matches when the method it is evaluated for is invoked at the given $index."" However"," if another method is called on the mock. For instance: The test now fails with an unhelpful error ""Mocked method does not exist"". It does exist and it works perfectly until the call to $mock->test().  Either the documentation needs to be updated to say that $index is the running count of the total number of methods called on the mock or the code needs updating to count on a per method basis. As it stands"," the test will fail based on implementation changes to the code being tested in which it shouldn\\\'t fail the test. I don\\\'t see why my second test should fail. It\\\'s still being called with the right parameters in the correct order. The fact that $mock->test() has been called is irrelevant. As a bare minimum the returned error ""mocked method does not exist"" needs to be updated. It\\\'s both incorrect and misleading. \''",,,,,,,,,,,,,,,,,
phpunit,674,closed,closed,2012-09-29 22:20:33,3.23,1,1,0,,,,,,,,,,,,,,,,,,,,
phpunit,674,closed,reopened,2012-09-29 22:20:36,0.05,1,1,0,,,,,,,,,,,,,,,,,,,,
phpunit,674,closed,1,2012-09-29 22:17:19,45.87,,1,,"b""b' This is a working fix. In PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex  '""",,,,,,,,,,,,,,,,,,,
phpunit,674,closed,2,2012-09-29 22:17:19,730.5,1,,,"b'b"" Hi", thanks for the report. This has been discussed various times and there should be a couple of closed bugs with longer discussions here and on mock-object.Yeah, surely the wording on url  could be improved or a note could be added. I\'m open to suggestions. The issue with the current matcher is that there is no way at all for us to change it\'s behavior. Applying the fix you\'re suggesting (count per method and not on the class) breaks every test suite of every major php framework. There is no question that the matcher is ugly. The docs should maybe discourage it\'s usage more than they do and suggest alternatives ( url  ) but I hope it\'s clear that we can\'t just change it. If anything we could add another matcher that works on a per method basis. I\'m not sure if thats worth it," it surely would make certain scenarios easier to test and since the order of calls is sometimes important it might be worth considering it. If order of all method calls really matters and should be tested (thats what was for initially iirc (and to work around the fact that back then there where no alternatives for multi-method-calls)) still would have to be used. ""'",,,,,,,,,,,,,,,,
phpunit,674,closed,3,2012-09-29 22:17:19,6.85,,1,,"b'b\' For the doc part I\\\'ve opened: -documentation#73 and for the rest all i can say in the end ""Sorry. It was designed that way"," it\\\'s not nice but we can\\\'t change it now due to BC"". Hope thats fine with you and if you have a  for another matcher feel free to add it :)\''",,,,,,,,,,,,,,,,,,
phpunit,674,closed,closed,2012-09-30 11:20:32,779.93,2,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,674,closed,4,2012-09-29 22:17:19,95.85,,1,,"b'b"" That\'s understandable but as I understand it", there\'s no way to test whether a method has been called multiple times without using at() unless the method returns a value. Using exactly() requires that the method is called with the same parameters. Essentially I want to test that a method has been called multiple times with specific parameters. (e.g. in my example," a 1 then a 2. The order doesn\'t actually matter) Either the documentation doesn\'t make it clear how this can be achieved or I can find no way to do it.""'",,,,,,,,,,,,,,,,,
phpunit,674,closed,5,2012-09-29 22:17:19,238.48,,,1,"b'b"" After looking into it further", I believe the best way to achieve this would be to add a logicalEach() or However, it passes if foo is called with twice, which isn\'t what I want to test. I had a very quick try at implementing this:  Which, in theory, should work. However I don\'t know enough about the internals of PHPUnit to know how it works. In this example above with a call to _$mock->foo(1);_ then _$mock->foo(2);_, PHPUnit_Framework_Constraint_Each::evaluate() is called five times. Twice with and three times with Firstly: Do you think the addition of logicalEach() or something with a more appropriate name is the right approach? ->at() isn\'t ideal in a lot of cases because it exposes implementation details to the test.  Secondly: If so," why is evaluate called five times? I was expecting to see it called twice. Once for each call to _$mock->foo()_ Thanks for your time! ""'",,,,,,,,,,,,
phpunit,674,closed,6,2012-09-29 22:17:19,346.05,,,1,"b'b\' Oh. Quite nice idea!  I was thinking about something like but your idea is really nice too :) Your implementation doesn\\\'t depend on the order of arguments but just makes sure each one would get passed once. Maybe another  could also be to match the return but sounds very nice and short indeed. I\\\'m just not sure if ""pick any of those but just once"" is specific enough (when it comes to multiple method parameters there might be strange results?). For the implementation part: I\\\'m not fluent in the mock object lib myself but I\\\'ve tried it myself and i also get 5 calls to the object. No immediate clue why though and digging through the backtraces and figuring out the code and how it\\\'s resolved will take some time. In general i like your proposal even so I\\\'m not sure if: should match  or rather just strictly  \''",,,,,,,,,,,,,,,,,,,
phpunit,674,closed,7,2012-09-29 22:17:19,379.83,,1,,"b'b"" I think the second one or tests become far too vague. Perhaps rather than logicalEach it should be named logicalSequence or your suggestion of logicalOnConsecutiveCalls which also implies the parameters are called in a sequence. Implementation wise", I\'ve tracked down two of the extra calls.  In PHPUnit_Framework_MockObject_Matcher_Parameters::matches() it calls $this->verify() which is what is calling PHPUnit_Framework_Constraint_Each::evaluate() . I can\'t see the reasoning behind calling $this->verify() in matches() though.  I haven\'t been able to track down the final call to PHPUnit_Framework_Constraint_Each::evaluate()," however.""'",,,,,,,,,,,,,,,,,
phpunit,674,closed,8,2012-09-29 22:17:19,545.87,,,1,"b'b"" Here\'s an incredibly crude workaround. It\'s the same as before but keeps track of the number of calls to evaluate(). While this ensures compatibility with all existing code and is entirely self-contained", it\'s rather brittle. If evaluate() gets called  times it\'ll stop working as intended. That said... it does work: Some test code. This passes: This Edit: The example above works as you\'d specified in your first less strict example This passes: As does: Whereas this doesn\'t: I\'m not quite sure how I can change it to allow for the stricter variant you mentioned because to do that," I believe each logicalEach() would need access to the other logicalEach(). If you or anyone else can point me in the right direction that\'d be great! I\'d be interested to see others opinions on this idea as well.""'",,,,,,,,,,,,,,,,,
phpunit,674,closed,9,2012-09-29 22:17:19,413.9,,,1,"b""b' Thanks for your work that far :) I hope to get around to digger depper soonish. Maybe @sebastianbergmann could also give some pointers :)'""",,,,,,,,,,,,,,,,,,,
phpunit,674,closed,10,2012-09-29 22:17:19,735.5,,,1,"b'b"" ah i know that deep digging in the issues would do the trick :) i\'m +1 for that or anything that helps getting around the at() thingy ..""'",,,,,,,,,,,,,,,,,,,
phpunit,674,closed,11,2012-09-29 22:17:19,38.73,,1,,"b""b' I implemented a atMethod($method", $index)which filters the counts to currentIndex with the given $method. its a little verbose," because you would write: Should i send a pull request  to MockObjects?'""",,,,,,,,,,,,,,,,,
phpunit,674,closed,12,2012-09-29 22:17:19,291.15,1,,,"b'b"" Incredibly sorry to ping all of the honorable participants", but I still don\'t understand how to achieve this, 5 years later. If it was down to returning values every time, then maybe I could do with and  . However, my method needs to throw on one of the invocations. @pscheit, was your fix ever incorporated," and if so where?""'",,,,,,,,,,,,,
phpunit,674,closed,13,2012-09-29 22:17:19,437.58,1,,,"b'b"" No", it wasn\'t incorporated. I implemented my own expectation in phpunit," but was never very happy with it.  Just use  for this ""'",,,,,,,,,,,,,,,,,
phpunit,674,closed,-,-,-,4,6,5,,,,,,,,,,,,,,,,,,,,
phpunit,682,closed,opened,2012-10-05 22:57:52,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,682,closed,title,2012-10-05 22:57:52,00:00,1,,,"b""b' PHPUnit shows weird message and number of lines'""",,,,,,,,,,,,,,,,,,,
phpunit,682,closed,body,2012-10-05 22:57:52,00:00,1,,,"b""b' Every fail", PHPUnit shows me something like this: ![Image]url  This line,  ," is really strange. Is there any way I can hide this?'""",,,,,,,,,,,,,,,,
phpunit,682,closed,closed,2012-10-06 07:08:00,490.13,2,0,0,,,,,,,,,,,,,,,,,,,,
phpunit,682,closed,1,2012-10-05 22:57:52,1087.48,,,1,"b'b"" Still didn\'t solve the problem"," like you can see: ![Image]url  Is there any step I should do besides updating it to 3.7.5?""'",,,,,,,,,,,,,,,,,,
phpunit,682,closed,2,2012-10-05 22:57:52,350.15,,1,,"b""b' I cannot reproduce this from a Git checkout", nor from a PEAR install, nor from a PHAR. But when PHPUnit is installed via Composer I get it," too:  '""",,,,,,,,,,,,,,,,
phpunit,682,closed,reopened,2012-10-06 22:55:30,947.5,2,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,682,closed,3,2012-10-05 22:57:52,14.62,,1,,"b""b' Fixed in 4c5545c8686c28a224c879a11f5b6263d13d4b90.'""",,,,,,,,,,,,,,,,,,,
phpunit,682,closed,closed,2012-10-06 23:10:07,14.62,2,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,682,closed,-,-,-,2,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,687,closed,opened,2012-10-11 18:07:33,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,687,closed,title,2012-10-11 18:07:33,00:00,,1,,"b""b' PHPUnit Fatal Errors for PHP 5.2.17'""",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,body,2012-10-11 18:07:33,00:00,1,,,"b'b"" When using Travis-CI and PHP-Build along with PHP-Unit on PHP 5.2.17 we are running into this error Perhaps some bad code was pushed into pear a while back and it is just now trickling down. We\'ve been pointed in several different directions on this one after doing some code review myself it seems as though the offending file is actually part of PHP-Unit. (though It might have already been fixed) Please reference: url  and url  For more details""'",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,1,2012-10-11 18:07:33,931.52,,,1,"b'b"" It seems travis-ci upgraded you to PHPUnit 3.7 which is  . Given that PHP 5.2 isn\'t supported anymore for 2 years we decided to switch PHPUnit to 5.3 for the new version. If you depend on 5.2 support downgrade to PHPUnit 3.6 ( you seem to be doing so in -build-plugin-phpunit#1 anyways). From a PHPUnit side there is not much we can do here. The version change is needed and the old version is not going away. I think we pushed out another 3.6 release to help with dependency management but for all 5.2 projects CI envs have to use PHPUnit 3.6  hope thats fine and feel free to join #phpunit on freenode if you run into issues""'",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,closed,2012-10-12 09:39:04,931.52,1,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,687,closed,2,2012-10-11 18:07:33,2.22,,1,,"b'b"" @edorian makes sense I think we\'ll get it figured out in url  I understand about moving up and onward. 5.2 is something like 4-5 years old anyways.""'",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,3,2012-10-11 18:07:33,1350.05,,1,,b'b\' Is it possible to make PHPUnit 3.6 depend on  ," and  ? Seems like the autoloading was changed to use Closures in the latest versions of these packages. So when one does just he has a broken PHPUnit on 5.2. Also I get the error of ""duplicate"" packages when trying to install PHPUnit  : When I manually install then I will get the same error just with and  .\''",,,,,,,,,,,,,,,,,,
phpunit,687,closed,4,2012-10-11 18:07:33,15.93,,1,,"b""b' What you suggest has already been done: PHPUnit 3.6.12 has been re-released with updated metadata information.'""",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,reopened,2012-10-13 08:27:16,1368.2,1,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,687,closed,5,2012-10-11 18:07:33,12.42,,1,,"b'b\' I don\\\'t know how graceful pear is when it comes to downgrading versions but for installing a new phpunit (what you seem to be doing in your vbox) I think it should pick up the right dependencies. The re-release was done a couple weeks back iirc to ease ""staying on 3.6"" without installing fixed versions for all deps. If that doesn\\\'t work out like planned I\\\'ll have another look\''",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,6,2012-10-11 18:07:33,2.43,,1,,"b""b'  '""",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,closed,2012-10-13 08:42:18,15.03,1,6,1,,,,,,,,,,,,,,,,,,,,
phpunit,687,closed,7,2012-10-11 18:07:33,6.78,1,,,"b'b"" @edorian Could you please have another look? PEAR complains about duplicate packages", just like in the error message I\'ve posted. I got the error I\'ve posted just about half an hour ago, when trying to do  . For travis, I explicitly install the right versions of these dependencies for now," then it works.""'",,,,,,,,,,,,,,,
phpunit,687,closed,8,2012-10-11 18:07:33,31.5,,1,,"b""b' Looks like a bug in PEAR to me: url '""",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,9,2012-10-11 18:07:33,102.12,,,1,"b""b' Thanks Sebastian! :smiley: '""",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,10,2012-10-11 18:07:33,517.17,,1,,"b""b' I was having the same issue and did something similar to CHH to install 3.6.12; I installed manually the dependencies that threw an error and then installed the phpUnit package.'""",,,,,,,,,,,,,,,,,,,
phpunit,687,closed,11,2012-10-11 18:07:33,292.83,1,,,"b'b"" Hi Sebastian", Today I spend some time searching why I couldn\'t install PHPUnit 3.6.12. Beside bug above there was also below error:Fatal error: Call to undefined function php_timer_autoload() in ..... For the benefit of people that are still using this version could you please add a rule that  package should have version of 1.0.2. Bug was appearing in version 1.0.4 probably method have been deleted there. PS. Sorry for not creating separate bug ticket. Thanks," Kamil""'",,,,,,,,,,,,,,,,,
phpunit,687,closed,-,-,-,3,8,2,,,,,,,,,,,,,,,,,,,,
phpunit,710,closed,opened,2012-11-08 11:26:27,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,710,closed,title,2012-11-08 11:26:27,00:00,,1,,"b""b' process-isolation causes Notice'""",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,body,2012-11-08 11:26:27,00:00,,1,,"b""b' Notice: Undefined variable: time in / on line 296 $ phpunit versionPHPUnit 3.7.9 by Sebastian Bergmann.'""",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,1,2012-11-08 11:26:27,524.2,,,1,"b'b"" Thanks for the report but I don\'t really see how this can happen.  Do you overwrite phpunits custom error handler with a custom set_error_handler call? If not I can\'t reproduce this and would need a sample""'",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,2,2012-11-08 11:26:27,913.92,,1,,"b'b"" I\'ve got the same error when I use @runInSeperateProcess annotation for a test and also using process-isolation. phpunit versionPHPUnit 3.7.10 by Sebastian Bergmann. PHP version 5.3.10 on Ubuntu 12.04""'",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,3,2012-11-08 11:26:27,865.15,,1,,"b'b"" Like i said. Can\'t reproduce. Not with 5.4", nor with 5.3 with PHPUnit 3.6.12," 3.7.10 and dev versions. So if anyone has a reproduce  for this I\'d gladly take it. Just some random test cases with process-isolation just work out for me.""'",,,,,,,,,,,,,,,,,
phpunit,710,closed,closed,2013-01-04 01:49:43,863.27,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,710,closed,4,2012-11-08 11:26:27,322.1,,1,,"b""b' Try these:url '""",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,5,2012-11-08 11:26:27,617.12,,,1,"b'b"" Would have been easier If I\'d knew how to run the test and that I had to install the extension but I figured it out and there it fails. Can reproduce now. Thanks a bunch""'",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,6,2012-11-08 11:26:27,7.2,,1,,"b'b\' So there returns ""false"" but no E_NOTICE is issued. This", apparently, happens when is an empty string. I\\\'m not really sure why the child result is empty in that case or if that is acceptable behavior. Any input @sebastianbergmann ?\'',,,,,,,,,,,,,,,,,
phpunit,710,closed,7,2012-11-08 11:26:27,1255.92,,1,,"b""b' I can confirm this issue on phpunit 3.7.10 . Should this issue not be open?'""",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,8,2012-11-08 11:26:27,257.67,,,1,"b'b"" I\'ve closed this because I didn\'t have a reproduce case. When i got one i forgot to reopen it.  @emil-nasso If you have short reproduce has for this (that doesn\'t require compiling an extension) I\'d gladly take it to add it to the regression suite :)""'",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,reopened,2013-01-08 18:49:44,1020.02,0,7,3,,,,,,,,,,,,,,,,,,,,
phpunit,710,closed,9,2012-11-08 11:26:27,843.85,,1,,"b""b' I can reproduce this by setting and in and running the test included with PHPUnit.'""",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,10,2012-11-08 11:26:27,1427.03,,1,,"b""b' I think this can be closed now.'""",,,,,,,,,,,,,,,,,,,
phpunit,710,closed,closed,2013-01-13 08:51:35,841.85,0,9,3,,,,,,,,,,,,,,,,,,,,
phpunit,710,closed,-,-,-,0,9,3,,,,,,,,,,,,,,,,,,,,
phpunit,724,closed,opened,2012-11-20 14:21:20,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,724,closed,title,2012-11-20 14:21:20,00:00,,1,,"b""b' Comparing Mocks fails since 3.7.2'""",,,,,,,,,,,,,,,,,,,
phpunit,724,closed,body,2012-11-20 14:21:20,00:00,,1,,"b""b'   Expected Result:  Actual Result: Solution:Change line 82 of  (method toArray($object))from  to  '""",,,,,,,,,,,,,,,,,,,
phpunit,724,closed,1,2012-11-20 14:21:20,10.2,,1,,"b""b' This is just a workaround however"," for this one still fails:  '""",,,,,,,,,,,,,,,,,,
phpunit,724,closed,2,2012-11-20 14:21:20,14.38,,1,,"b""b' The other issues should be fixed in the recent PHPUnit / Mock Object release. The one in the comment is expected behavior because means and since the objects are instances of different classes they are different. Hope everything works out for you now. If not please us know :)'""",,,,,,,,,,,,,,,,,,,
phpunit,724,closed,closed,2012-11-24 14:45:55,24.58,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,724,closed,3,2012-11-20 14:21:20,1314.05,,1,,"b""b' There is no comparison or in any of my examples.(If PHPUnit would perform such a comparison", it would be a bug per se ...) The expectation my first example should be satisfied, not because and do not have any fields,but because must always result in  . By the way: If there would be any comparison  , it  must always result in  .In PHP it is essential, that: PHP never considers objects to be equal, if they are of different classes. But  does not compare  .It asserts, that the method is called with an object equal to  .And this is definitely done in The same is true for the example with  .It asserts," that the method is called with the  -instance.And this is definitely done in   A failure of this expectation definitely is not expected behaviour.Please reopen this ticket.'""",,,,,,,,,,,
phpunit,724,closed,4,2012-11-20 14:21:20,400.95,1,,,"b'b"" Oh. I\'m very sorry. I\'ve totally misread your commit. Thanks for explaining it again.""'",,,,,,,,,,,,,,,,,,,
phpunit,724,closed,reopened,2012-11-26 19:20:55,275.0,1,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,724,closed,5,2012-11-20 14:21:20,18.17,,,1,"b""b' What i was trying to say is that $this->equalsTo() behaves like PHPs == (which is also the default comparator) and that $this->identicalTo behaves like ===  The issue has recently been taken care off: cat Produces: Hope that solves you problem. Thanks you a lot for the verbose bug report and your time!'""",,,,,,,,,,,,,,,,,,,
phpunit,724,closed,closed,2012-11-26 19:39:05,18.17,1,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,724,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,734,closed,opened,2012-11-30 00:06:39,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,734,closed,title,2012-11-30 00:06:39,00:00,,1,,"b""b'  cannot be executed if it is renamed'""",,,,,,,,,,,,,,,,,,,
phpunit,734,closed,body,2012-11-30 00:06:39,00:00,,1,,"b""b' Came across this while trying to replace my pear version with a phar:  '""",,,,,,,,,,,,,,,,,,,
phpunit,734,closed,1,2012-11-30 00:06:39,1317.37,1,,,"b'b\' This is actually not a bug but a (known?) restriction in the phar handling of php. A phar archive has to have the .phar extension to be used as an ""executable"" phar.  You can verify this behavior by using any random filename and adding or removing the .phar extension from it. FYI: PHP does not use the actual filename after initially loading the file but an internally set alias which for PHPUnit happens to be the original filename due to the use of PHPAB to generate the phar.Hence the error message might be a bit confusing.\''",,,,,,,,,,,,,,,,,,,
phpunit,734,closed,2,2012-11-30 00:06:39,7.98,,,1,"b""b' A workaround for you might be a bash script: #!/  / The filename for this shell script", placed at the same path where the phar is," will be free from any restrictions for the phar handling.'""",,,,,,,,,,,,,,,,,
phpunit,734,closed,3,2012-11-30 00:06:39,763.25,,1,,"b""b' Closing"," as there is nothing we can do here.'""",,,,,,,,,,,,,,,,,,
phpunit,734,closed,closed,2012-12-01 10:55:15,648.6,1,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,734,closed,4,2012-11-30 00:06:39,1130.82,,1,,"b'b"" I\'m not convinced it\'s a known restriction"," as Composer\'s phar distribution handles this situation with no problems:  ""'",,,,,,,,,,,,,,,,,,
phpunit,734,closed,5,2012-11-30 00:06:39,373.32,,,1,"b""b' Reopening. I am open for suggestions on how to implement that for the PHPUnit PHAR. It will be a couple of weeks before I will have the time to investigate this myself. As always: any help is appreciated. Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,734,closed,reopened,2012-12-02 11:59:23,64.13,1,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,734,closed,closed,2012-12-02 12:37:47,38.4,1,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,734,closed,6,2012-11-30 00:06:39,1362.28,,,1,"b""b' Thanks for the fix", just grabbed the latest version," and it works nicely.'""",,,,,,,,,,,,,,,,,
phpunit,734,closed,-,-,-,1,4,3,,,,,,,,,,,,,,,,,,,,
phpunit,736,closed,opened,2012-12-02 18:02:18,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,736,closed,title,2012-12-02 18:02:18,00:00,1,,,"b""b' Binary strings in assertion messages'""",,,,,,,,,,,,,,,,,,,
phpunit,736,closed,body,2012-12-02 18:02:18,00:00,1,,,"b""b' url  It seems nobody on our team knows what a binary string is or how to convert it to a normal string. Any ideas? To clarify"," I want to see the readable text in the assertion message itself. This is the test file: url '""",,,,,,,,,,,,,,,,,,
phpunit,736,closed,1,2012-12-02 18:02:18,159.83,,1,,b'b\' It looks like you\\\'re trying to compare a binary file to some HTML. My guess is that whatever the binary string is," it\\\'s the contents of the test file that was ""uploaded"".\''",,,,,,,,,,,,,,,,,,
phpunit,736,closed,2,2012-12-02 18:02:18,7.08,,1,,"b""b' No", it is actually the response. We hunted down where this originated: url  In the case being discussed, the data is mostly ascii. We use unicode quotes in language strings, perhaps they or similar are making phpunit decide the string is binary. A more practical implementation would check to see how many nonprintable characters a string has. If, say, less than 10%," then only replace those with \\\\xxx escapes.'""",,,,,,,,,,,,,
phpunit,736,closed,3,2012-12-02 18:02:18,113.02,1,,,"b'b"" Escaping non printable chars with \\\\xxx and mixing that with the actual output would create an irreversible output that can\'t be turned back. With the current way all that is needed to get the binary data is to take it and it. If you have chars that are printable but falsely detected by the regex (maybe due to missing flags?) let me know but I don\'t think creating a completely unparseable / irreversible output string would help anyone. For comparing html might also be an option. Closing this for now"," feel free to get back to me on this if you disagree""'",,,,,,,,,,,,,,,,,,
phpunit,736,closed,closed,2012-12-10 22:42:14,279.93,3,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,736,closed,4,2012-12-02 18:02:18,441.1,,1,,"b'b\' url url  What is your definition of ""printable""? The characters I used are supposed to be used by all language strings in phpbb: url  We tell people to replace ascii quotes and ellipses with those unicode ones.\''",,,,,,,,,,,,,,,,,,,
phpunit,736,closed,5,2012-12-02 18:02:18,1.27,1,,,"b'b"" I\'m sorry but I don\'t understand this. How are \\\\xxx escapes irreversible?""'",,,,,,,,,,,,,,,,,,,
phpunit,736,closed,6,2012-12-02 18:02:18,872.43,,,1,"b'b\' The definition in the code is the one you linked to: url  If that can be improved let me know :)The output string might be ""Hello \\\\0123 whatever"" and mixing this with escaped unicode chars would make it impossible to turn the string back without breaking it in the process? Thanks for the reproduce case in url Those should all get printed and not be a cause of the output turned into binary.\''",,,,,,,,,,,,,,,,,,,
phpunit,736,closed,reopened,2012-12-19 20:37:02,1314.8,4,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,736,closed,7,2012-12-02 18:02:18,249.73,,1,,"b'b\' You could have three output formats:1. ascii text2. ascii text with non-ascii characters escaped and backslashes etc. also escaped to make the inverse correct3. ""binary string""\''",,,,,,,,,,,,,,,,,,,
phpunit,736,closed,8,2012-12-02 18:02:18,210.43,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,736,closed,closed,2015-10-02 04:17:12,460.17,5,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,736,closed,-,-,-,5,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,797,closed,opened,2013-01-30 00:44:25,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,797,closed,title,2013-01-30 00:44:25,00:00,,1,,"b""b' Refactor bootstrap running test in separate process'""",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,body,2013-01-30 00:44:25,00:00,,1,,"b'b"" Right now the code template used to run a test in a separate process only includes the configured bootstrap if preserving global state has set to be preserved through  . I feel this is a bug and likely not intended behavior by the calling code. Although global state might not need to be preserved the test case being ran in the separate process still needs to be bootstrapped. This pull request:Adds a new template value \'bootstrapPath\' and conditionally requires file based on this valueAdds public method to retrieve bootstrap pathAdds tests for TestCase to ensure the template being rendered includes the appropriate \'bootstrapPath\' value regardless of preserving global state Although this fixes the problem of code in separate processes having bootstrap included this does not remove the dependency on global state to retrieve the bootstrap path. It may be worthwhile to consider removing this dependency at some point. My pull request does not include this because this is my first contribution to the project so didn\'t want to make drastic changes.""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,1,2013-01-30 00:44:25,23.37,,,1,"b'b"" He Charles"," thanks for the PR! Like we discussed before I agree that the behavior of not running the bootstrap feels like a bug. The test look good to me with the exception of which doesn\'t make much sense to me and was added in  d873cd97d5. I wouldn\'t mind having a regression test for this (at all) but the number should be .""'",,,,,,,,,,,,,,,,,,
phpunit,797,closed,2,2013-01-30 00:44:25,7.3,,1,,"b'b"" @edorian That is quite peculiar", I\'m not sure how that file got into the commits. I never made any regression tests. I will close this pull request," make the appropriate changes and resubmit.""'",,,,,,,,,,,,,,,,,
phpunit,797,closed,closed,2013-01-30 01:15:05,30.67,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,797,closed,3,2013-01-30 00:44:25,24.33,,,1,"b'b"" @cspray You can just push to  cspray:refactor-bootstrap-separate-process to add stuff to this. No real need to  history. But any way is fine. If you\'d be so nice to rebase for the next PR than travis also should work out again .)""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,4,2013-01-30 00:44:25,24.58,,1,,"b""b' @edorian Ok"," I will push the appropriate changes and reopen this request when the time is right.'""",,,,,,,,,,,,,,,,,,
phpunit,797,closed,5,2013-01-30 00:44:25,1352.42,1,,,"b'b"" Ok", I have removed the erroneous test. I wouldn\'t mind writing a regression test for this but I\'m not entirely sure what they are for or what I\'m supposed to be testing. I could write one similar to other regression tests, just not sure it would actually be beneficial. I rebased as well," however I\'m not entirely familiar with the command and may have screwed something up as I tend to do. Let me know if there\'s anything else I need to do for this PR.""'",,,,,,,,,,,,,,,,
phpunit,797,closed,reopened,2013-01-31 00:36:26,1401.35,1,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,797,closed,6,2013-01-30 00:44:25,52.78,,1,,"b'b"" Ok"," regression tests have been added to ensure that this issue stays fixed. Let me know if there\'s anything else I can do.""'",,,,,,,,,,,,,,,,,,
phpunit,797,closed,7,2013-01-30 00:44:25,264.83,1,,,"b'b"" Ya know"," I got to thinking and these aren\'t very good regression tests at all. I kinda failed to look at this the correct way. I\'m going to revisit this tomorrow and look at making them not suck so much.""'",,,,,,,,,,,,,,,,,,
phpunit,797,closed,8,2013-01-30 00:44:25,1126.53,,1,,b'b\' Ok," I have added more appropriate regression tests based on what we discussed. I had to use some ""trickery"" to get the test to  when expected. Before I was setting the bootstrap explicitly in the command line configuration for \\\'797.phpt\\\'. This was causing the regression test to pass even if the bootstrap was not included in isolation. By removing this command line switch and explicitly setting the isolation bootstrap I can reliably get the regression test to  as expected. I feel that this wraps up the PR and this is ready for merging.\''",,,,,,,,,,,,,,,,,,
phpunit,797,closed,9,2013-01-30 00:44:25,717.3,,,1,"b'b"" Cool. Thanks :) I\'ll have another look at it in the next couple of days""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,10,2013-01-30 00:44:25,54.05,,1,,"b'b"" @edorian Was wondering if you\'ve gotten a chance to take a look at this?""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,11,2013-01-30 00:44:25,250.95,,1,,"b""b' This might be a significant BC break. I know some projects use the bootstrap file to set up complicated fixtures", modify the include path with  , enable profiling / logging," etc. The current behavior at least allows you the option not to include the bootstrap before every isolated test. This PR removes that option altogether.'""",,,,,,,,,,,,,,,,
phpunit,797,closed,12,2013-01-30 00:44:25,305.8,,1,,"b'b\' @whatthejeff I understand that this might be a BC break but I don\\\'t think the current implementation provides a ""real"" option to  include the bootstrap when running an isolated test. You have the option of turning  _global state_ which will also turn  the bootstrap. However", when running in isolation, a bootstrap for the testing framework relying on global data being preserved feels wrong and the workaround involves framework users having to manually include this file for every test ran in isolation. Perhaps a configuration option can be set in the TestCase that explicitly states whether the bootstrap should be included in isolated tests regardless of preserving global data?\'',,,,,,,,,,,,,,,,,
phpunit,797,closed,13,2013-01-30 00:44:25,318.62,,1,,"b""b' @cspray", yeah, I would prefer an option along the lines of: This will help us preserve BC. Also," do you think you can squash some of these commits?'""",,,,,,,,,,,,,,,,
phpunit,797,closed,14,2013-01-30 00:44:25,10.25,,1,,"b'b"" @whatthejeff Sure thing. I\'ll implement the change to make this configurable and squash everything down into one commit.""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,15,2013-01-30 00:44:25,1.72,,,1,"b""b' Thanks a lot"," @cspray.'""",,,,,,,,,,,,,,,,,,
phpunit,797,closed,16,2013-01-30 00:44:25,1351.25,,1,,"b""b' @cspray"," any clue why the travis build failed?'""",,,,,,,,,,,,,,,,,,
phpunit,797,closed,17,2013-01-30 00:44:25,38.2,,1,,"b'b"" @whatthejeff Something in the updates to master between the PR broke something. If I run  I get to a certain spot and it just hangs and doesn\'t do anything. I\'m running individual test suites now and looking at logs. I\'m not entirely sure why they are failing at the moment but will update the PR when I do.""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,18,2013-01-30 00:44:25,49.72,,1,,"b'b"" @whatthejeff Ok", update on what I\'ve discovered so far.1. Still not sure why  hangs. When I run tests and test suites individually they all pass...2. Except 2 tests and are failing. For some reason the array is empty when these tests are ran. I don\'t feel that really explains why the tests are just hanging for no reason, going on 10 mins," and with no indication of what\'s going on in there I\'m kinda stumped at the moment. I\'ve taken a look at the diff on github and don\'t notice anything in my code that would really cause to be empty. I\'m taking a break from this tonight as I\'ve just racked my brain. I\'ll dive back in tomorrow and figure out what\'s going on.""'",,,,,,,,,,,,,,,,
phpunit,797,closed,19,2013-01-30 00:44:25,1137.68,,1,,"b'b"" After some more digging around I have been able to determine that the problem is in PreserveGlobalStateTestCase in the templated code running in a separate process. There\'s some file being included that is causing some kind of fatal error. I\'m trying to pinpoint which file that is.""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,20,2013-01-30 00:44:25,28.82,,,1,"b""b' Thanks for the update"," @cspray :)'""",,,,,,,,,,,,,,,,,,
phpunit,797,closed,21,2013-01-30 00:44:25,1389.47,1,,,"b'b"" @whatthejeff I created a separate branch and implemented the bare minimum needed to get a test case running in isolation without any of the changes that I made for the bootstrap refactor. The problem where the tests hangs in the code ran in isolation occurs then as well. This problem exists in master and is probably related to the changes from when this PR being implemented and about 4 days ago when the build started failing. [Branch showing error is here]url  (sorry for the typo in branch name just didn\'t notice until I had already pushed) I\'ll update with a link to a Travis CI build once I get it up and running.""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,22,2013-01-30 00:44:25,591.5,,1,,"b""b' Any update on this"," @cspray?'""",,,,,,,,,,,,,,,,,,
phpunit,797,closed,23,2013-01-30 00:44:25,312.82,1,,,"b'b"" Unfortunately no", there is no update on this. My own personal Travis build for this branch url  is passing. However, when I run the tests on my own local environment I can get them to fail but the errors are occurring in the generated code. So far I haven\'t been able to determine what errors are occurring, let alone why they\'re occurring and debugging the process within a process has proven to be difficult and time consuming. To be honest, I\'m completely baffled as to why this is happening. Personally I think it was something to do with the long wait between initial PR and when it was finally ready, which is totally on me. I\'m inclined to just close this PR," start over with a fresh branch and hopefully find the problem before all the changes are made and it can be more easily isolated.""'",,,,,,,,,,,,,
phpunit,797,closed,24,2013-01-30 00:44:25,906.93,,,1,"b'b"" That sounds good to me"," @cspray. Let me know if there\'s anything I can do to help.""'",,,,,,,,,,,,,,,,,,
phpunit,797,closed,closed,2013-05-17 05:05:39,269.22,4,16,6,,,,,,,,,,,,,,,,,,,,
phpunit,797,closed,25,2013-01-30 00:44:25,1303.13,,1,,"b'b"" @whatthejeff I believe I have finally figured this out on why this is failing. It has something to do with invoked here: url  The script consistently hangs on this line. Taking a look at docs for I found this user comment: url  In a nutshell I believe that STDOUT is blocking indefinitely because of some STDERR output. Following the suggestion in this comment I was able to change STDERR from \'w\' =However"," this is way out of scope for what I was wanting to do and would like to discuss with somebody the impact of this change.""'",,,,,,,,,,,,,,,,,,
phpunit,797,closed,26,2013-01-30 00:44:25,725.5,,,1,"b'b"" True", especially on Windows.  See #1340  Any chance to resurrect this issue? The most minimal fix is to change the else code path to force-generate the global variable holding the  file pointer: However, even though this will resolve the problem, ultimately, I don\'t think that\'s the right approach.  This value shouldn\'t be a global variable to begin with.  It should be a constant instead, because it can only exist once and must not be manipulated.  (Furthermore, the file should be included first, but that\'s for another .) It\'s not clear to me whether the current status of this issue represents an intentional _won\'t fix_ If there\'s a chance for doing the minimal fix above," then I\'d be happy to re-roll this PR into a new one.""'",,,,,,,,,,,
phpunit,797,closed,27,2013-01-30 00:44:25,741.52,,1,,"b'b"" Hi @sun I actually haven\'t had the opportunity to work on this issue any as I\'ve been busy with a bunch of other things. I can try to set aside some time over the next few days to dig back into this and see if we can\'t get this issue resolved.""'",,,,,,,,,,,,,,,,,,,
phpunit,797,closed,28,2013-01-30 00:44:25,888.75,,1,,"b'b"" @cspray No worries.  Created #1343 just now.  Didn\'t incorporate your code in the end"," because a simple phpt regression test exposed the problem much more prominently. :wink: ""'",,,,,,,,,,,,,,,,,,
phpunit,797,closed,-,-,-,4,19,7,,,,,,,,,,,,,,,,,,,,
phpunit,894,closed,opened,2013-04-19 13:59:59,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,894,closed,title,2013-04-19 13:59:59,00:00,,1,,"b""b' Error when using @runInSeparateProcess with markTestSkipped()'""",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,body,2013-04-19 13:59:59,00:00,1,,,"b""b'   **ERROR MESSAGE:**  '""",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,1,2013-04-19 13:59:59,250.05,,1,,"b""b' Does adding the annotation fix the problem?'""",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,2,2013-04-19 13:59:59,395.45,,1,,"b""b' Any update on this?'""",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,3,2013-04-19 13:59:59,1370.57,1,,,"b'b"" I\'m going to go ahead and close this as I suspect will fix your problem. Please re-open if I\'m incorrect.""'",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,closed,2013-04-23 23:36:03,576.07,2,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,894,closed,4,2013-04-19 13:59:59,358.3,,,1,"b'b"" Hi @whatthejeff  thank you for help but adding **@preserveGlobalState disabled** doesn\'t solve my problem and I get the same error.""'",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,5,2013-04-19 13:59:59,1.57,,1,,"b""b' Do you have a runnable example I can test against?'""",,,,,,,,,,,,,,,,,,,
phpunit,894,closed,reopened,2013-04-24 05:35:55,359.87,2,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,894,closed,6,2013-04-19 13:59:59,19.13,1,,,"b""b' Oh", I actually misread your original stacktrace. This is actually a duplicate of #254. Unfortunately," there is no solution for this at the moment.'""",,,,,,,,,,,,,,,,,
phpunit,894,closed,closed,2013-04-24 05:55:03,19.13,3,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,894,closed,-,-,-,3,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,opened,2013-10-10 17:27:55,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,title,2013-10-10 17:27:55,00:00,,1,,"b'b\' Automatically rerun failed tests to test for ""flaky"" tests\''",,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,body,2013-10-10 17:27:55,00:00,1,,,b'b\' When a test fails particularly with integration tests that failure may be due to many factors related to environment or code that relies on some form of global state. In order to keep test failures completely actionable to the exact commit under test," I\\\'m requesting PHPUnit\\\'s native ability to rerun a test ""failure"" any config-defined number of times", and, if any of those re-runs pass, to mark the test as suspect for abnormal behavior. I see the potential for running a test as follows:1 test passes = Success1 test fails, $n reruns with 100% failure = Failure1 test fails, $n reruns and <100% failure = Abnormal\'',,,,,,,,,,,,,
phpunit,1022,closed,1,2013-10-10 17:27:55,887.55,,,1,"b""b' Thanks for the suggestion", @zarthsan," but I think this is probably something that should be handled outside of PHPUnit by a 3rd party tool.'""",,,,,,,,,,,,,,,,,
phpunit,1022,closed,closed,2013-10-12 08:15:28,887.55,1,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,2,2013-10-10 17:27:55,309.13,,1,,"b""b' Actually"," I told @zarthsan to open a feature request for this :-)'""",,,,,,,,,,,,,,,,,,
phpunit,1022,closed,reopened,2013-10-12 13:24:37,309.15,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,3,2013-10-10 17:27:55,181.12,1,,,"b""b' Oops :P'""",,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,4,2013-10-10 17:27:55,216.28,,1,,"b""b' No worries ;-)'""",,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,5,2013-10-10 17:27:55,1347.77,,1,,"b'b"" Is this issue still in the works? I\'ve been looking around for a solution to rerunning flaky tests"," and I can\'t think of a better way than to have phpunit handle them. I\'d like to propose an  to the feature request as well. Add an annotation that marks a test as flaky instead of needing to run it multiple times. This way we don\'t have to rely on preserved global state (logs) to identify problems. The testing environment is the same no matter when or where it\'s run.""'",,,,,,,,,,,,,,,,,,
phpunit,1022,closed,6,2013-10-10 17:27:55,254.88,,1,,"b'b"" Apache Maven Surefire has this feature: url  And Jenkins has a plugin that supports it: url  Looks convenient"," but we would like to stick with PHPUnit ;-)Who\'s up for the task? Ps: the Python community has url ""'",,,,,,,,,,,,,,,,,,
phpunit,1022,closed,7,2013-10-10 17:27:55,1422.52,,1,,"b""b' Initial code for an approach that builds upon the already existing parameter can be found at url '""",,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,8,2013-10-10 17:27:55,3.0,,1,,"b""b' is this something that we will get in the near future?'""",,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,9,2013-10-10 17:27:55,344.95,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,1022,closed,closed,2015-10-02 04:15:07,890.5,3,7,1,,,,,,,,,,,,,,,,,,,,
phpunit,1022,closed,-,-,-,3,7,1,,,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,opened,2013-12-04 18:39:10,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,title,2013-12-04 18:39:10,00:00,,1,,"b""b' Implemented version-check'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,body,2013-12-04 18:39:10,00:00,1,,,"b""b' This adds a option to the console -convenient to all package distributions (inc. Phar). It uses tags from the main PHPUnit repo on Github () to extract the latest (and stable) version numbers to compare against. I could move this code to if it is preferable? For the story"," I started to implement in **3.7** and  I was about to PR -just to find out that **master** had a an implementation too... '""",,,,,,,,,,,,,,,,,,
phpunit,1066,closed,1,2013-12-04 18:39:10,903.53,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,2,2013-12-04 18:39:10,526.57,,1,,"b""b' Is it or  ? The code seems to use both.'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,3,2013-12-04 18:39:10,216.3,,1,,"b""b' It is seems I made a typo when I updated the inline help... now fixed.'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,4,2013-12-04 18:39:10,899.1,,1,,"b""b' The indentation here is still pretty inconsistent. Why are you using 2 spaces some of the time?'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,5,2013-12-04 18:39:10,14.25,,1,,"b""b' @GrahamCampbell Where are the space inconsistencies?'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,6,2013-12-04 18:39:10,25.83,,1,,"b""b' Example: url '""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,7,2013-12-04 18:39:10,1.48,,1,,"b""b' @sebastianbergmann generally uses two spaces for indentions within a single multi-line statement.'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,8,2013-12-04 18:39:10,0.52,,1,,"b""b' But to that point"," it is still inconsistent here.'""",,,,,,,,,,,,,,,,,,
phpunit,1066,closed,9,2013-12-04 18:39:10,13.52,,1,,"b""b' PS: I can always clean up the coding standards after I pull in the changes.'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,10,2013-12-04 18:39:10,1.42,,1,,"b""b' It seems @sebastianbergmann uses  levels of indentation e.g. class properties vs nested arrays. @whatthejeff It is all merged for you to take over ;-) '""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,11,2013-12-04 18:39:10,2.52,,1,,"b""b' What are those deleted test files?'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,12,2013-12-04 18:39:10,21.43,1,,,b'b\' @GrahamCampbell Oops," seems I have mocked things up during merge... It might be due to be a  case issue somewhere down the line... somehow the ""/tests"" folder on my local working repo is upper first case ""/Tests""? Which conflicted with these 3 files...\''",,,,,,,,,,,,,,,,,,
phpunit,1066,closed,13,2013-12-04 18:39:10,54.22,,1,,"b""b' @whatthejeff Could you take over from here?'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,14,2013-12-04 18:39:10,0.92,,,1,"b""b' Yeah"," I think so. Thanks for your work on this feature!'""",,,,,,,,,,,,,,,,,,
phpunit,1066,closed,15,2013-12-04 18:39:10,127.03,,,1,"b""b' Great"," many thanks for all your various contribs here and beyond...'""",,,,,,,,,,,,,,,,,,
phpunit,1066,closed,closed,2014-07-08 17:28:03,1368.88,2,13,2,,,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,reopened,2014-07-08 17:29:22,1.32,2,13,2,,,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,16,2013-12-04 18:39:10,4.03,,,1,"b""b' No"," thank **you** :)'""",,,,,,,,,,,,,,,,,,
phpunit,1066,closed,17,2013-12-04 18:39:10,0.57,,1,,"b'b"" Hm.  Shouldn\'t this be limited to the PHAR?  (like the ) Because", if installed via Composer, then this is practically the same as: Sadly, there\'s no equivalent command to [ ]url  yet," which produces a nice tabular report; e.g.:  ""'",,,,,,,,,,,,,,,
phpunit,1066,closed,18,2013-12-04 18:39:10,888.5,,1,,"b""b' Implemented in f796a70200be4db1cec9fddf8129a971345c0e46'""",,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,closed,2015-06-03 08:20:54,891.53,2,15,3,,,,,,,,,,,,,,,,,,,,
phpunit,1066,closed,-,-,-,2,15,3,,,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,opened,2013-12-27 13:29:27,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,title,2013-12-27 13:29:27,00:00,1,,,"b""b' assertEquals complains about array property type differences'""",,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,body,2013-12-27 13:29:27,00:00,,1,,"b'b"" Comparing two arrays with differing property types assertEuqals compains: As it wouldn\'t complain about string  int if not inside an array this behaviour seems unexpected.""'",,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,1,2013-12-27 13:29:27,9.68,,1,,"b""b' Would you mind providing a reproducible test case? I think this is actually a variant of #1027.'""",,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,2,2013-12-27 13:29:27,79.53,,,1,"b'b"" Closing as invalid. Can\'t reproduce anymore"," please forgive me.""'",,,,,,,,,,,,,,,,,,
phpunit,1083,closed,closed,2013-12-27 14:58:40,89.22,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,3,2013-12-27 13:29:27,4.23,,1,,"b'b"" Ups. Please reopen. I\'ve finally managed to reproduce. The assertion is actually working but the array diff is wrong as it compares by type:  ""'",,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,reopened,2013-12-27 15:02:54,4.23,1,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,4,2013-12-27 13:29:27,4.17,,,1,"b""b' Thanks for providing a reproducible test case. I think we should leave this closed as it does appear to be a variant of #1027.'""",,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,closed,2013-12-27 15:07:04,4.17,1,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,1083,closed,-,-,-,1,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,opened,2014-03-07 19:32:18,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,title,2014-03-07 19:32:18,00:00,,1,,"b'b"" phpt runner doesn\'t look at STDERR""'",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,body,2014-03-07 19:32:18,00:00,,1,,"b""b' On 4.0.3 + HHVM master"," this causes  and  to fatal. from #1904'""",,,,,,,,,,,,,,,,,,
phpunit,1169,closed,1,2014-03-07 19:32:18,4.1,,1,,"b""b' I hope to find the time over the weekend to fix the issue. It will be addressed in PHPUnit 4.0.X ASAP. Maybe you beat me with a pull request to it ;-)'""",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,2,2014-03-07 19:32:18,10.0,,1,,"b'b"" Could this actually be related to HHVM\'s ini support? Is it able to understand [this]url  yet?""'",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,3,2014-03-07 19:32:18,3.82,,1,,"b'b"" @whatthejeff: phpunit definitely ignores stderr", and the missing data that makes the test fail is definitely in $jobResult[\'stderr\']. This should work. If one of those ini settings is supposed to make it so the error goes to stdout instead," that would be a separate issue to file against HHVM.""'",,,,,,,,,,,,,,,,,
phpunit,1169,closed,4,2014-03-07 19:32:18,1.43,,1,,"b""b' @fredemmott means to use stdout for errors.'""",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,5,2014-03-07 19:32:18,11.88,,,1,"b'b"" Thanks"," I\'ll fix that.""'",,,,,,,,,,,,,,,,,,
phpunit,1169,closed,6,2014-03-07 19:32:18,1.18,,1,,"b""b' No problem. Might also be worth mentioning that should prevent errors from going to stderr.'""",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,7,2014-03-07 19:32:18,7.07,,1,,"b'b"" Which is to say that doesn\'t actually mean redirect errors to stdout. It just means that errors are also written to stdout.""'",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,8,2014-03-07 19:32:18,32.87,,1,,"b""b' @fredemmott Did #2006 solve this issue?'""",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,9,2014-03-07 19:32:18,42.65,,1,,"b'b"" @whatthejeff: #2006 was part of fixing these tests under HHVM", and this issue is no longer an HHVM blocker but I think it\'s still a real," separate issue.""'",,,,,,,,,,,,,,,,,
phpunit,1169,closed,10,2014-03-07 19:32:18,31.93,,1,,"b'b"" @fredemmott Yeah", I think you\'re right. Even though PHP errors will go to STDOUT," something like: won\'t.""'",,,,,,,,,,,,,,,,,
phpunit,1169,closed,11,2014-03-07 19:32:18,533.1,,1,,"b""b' The test suite of PHPUnit 4.0 passes 100% with HHVM 3.0.0-dev. I think we can close this.'""",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,closed,2014-03-21 06:52:20,680.03,0,12,1,,,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,12,2014-03-07 19:32:18,2.43,,1,,"b'b"" @sebastianbergmann This wasn\'t the root cause of the HHVM failure but is still an actual issue. Look at the last few comments.""'",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,reopened,2014-03-21 06:54:46,2.43,0,13,1,,,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,13,2014-03-07 19:32:18,4.42,1,,,"b""b' Okay"," my bad.'""",,,,,,,,,,,,,,,,,,
phpunit,1169,closed,14,2014-03-07 19:32:18,1.4,,1,,"b'b"" I\'ll work on a fix in the next couple of weeks if I have the time.""'",,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,15,2014-03-07 19:32:18,392.98,,1,,"b'b"" I just sent #1825", to fix this problem. However, @whatthejeff\'s code wont work anyway: The constants  , and are not defined when you run PHP in interactive mode," which is what PHPUnit does. The [run-]url  script creates a temporary file then removes it after the execution. If PHUnit does the same the PHPT tests will be slowest.""'",,,,,,,,,,,,,,,
phpunit,1169,closed,16,2014-03-07 19:32:18,880.02,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,1169,closed,closed,2015-10-02 04:13:35,1278.82,2,15,1,,,,,,,,,,,,,,,,,,,,
phpunit,1169,closed,-,-,-,2,15,1,,,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,opened,2014-03-16 15:29:01,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,title,2014-03-16 15:29:01,00:00,1,,,"b""b' severe performance regression after upgrading to 4.0.7'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,body,2014-03-16 15:29:01,00:00,,1,,"b'b\' PHPUnit-3.7.28:real  1m2.351suser  0m53.526ssys   0m8.633s PHPUnit-4.0.7:real  5m27.942suser  4m22.707ssys   1m4.248s config parameters:backupGlobals=""false""backupStaticAttributes=""false""processIsolation=""true""verbose=""false""command:phpunit -c  tap coverage-html normal test execution (without coverage-html) also got a little slower", but not that much.\'',,,,,,,,,,,,,,,,,,
phpunit,1187,closed,1,2014-03-16 15:29:01,1152.78,,,1,b'b\' PHPUnit-3.7.32:Time: 6.52 minutes, Memory: 417.00Mb OK, but incomplete or skipped tests!Tests: 4601, Assertions: 8661, Incomplete: 95, Skipped: 17. PHPUnit-4.0.7:Time: 8.94 minutes, Memory: 738.25Mb OK, but incomplete, skipped, or risky tests!Tests: 4601, Assertions: 8661, Incomplete: 95, Skipped: 17. Command:phpunit bootstrap unit_  Notice: I have xdebug disabled and don\\\'t want to have code coverage in the normal daily work. With 3.7. PHPUnit wasn\\\'t even trying to generate a code coverage report. Now it seems," that he always tries to generate it and gives the normal warning that xdebug has to be enabled. ""The Xdebug extension is not loaded. No code coverage will be generated.""\''",,,,,,
phpunit,1187,closed,2,2014-03-16 15:29:01,29.45,,,1,"b""b' Thank you"," @cobexer and @dreis2211 for bringing this to my attention. I am investigating the issue right now.'""",,,,,,,,,,,,,,,,,,
phpunit,1187,closed,3,2014-03-16 15:29:01,17.65,,,1,"b""b' I do have xdebug installed and want to collect coverage (which works fine"," just slower).'""",,,,,,,,,,,,,,,,,,
phpunit,1187,closed,4,2014-03-16 15:29:01,8.35,1,,,"b'b\' @dreis2211 PHPUnit was not trying to generate a code coverage report. It just erroneously  displayed the ""The Xdebug extension is not loaded. No code coverage will be generated."" message. This was fixed by url \''",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,5,2014-03-16 15:29:01,11.92,1,,,"b""b' I am unable to reproduce a severe regression in performance from PHPUnit 3.7 to PHPUnit 4.0. Without access to a test suite that exhibits the performance regression I cannot investigate and fix the issue. ## The example project I used ## The PHP version I used ## PHPUnit 3.7 ## PHPUnit 4.0  '""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,6,2014-03-16 15:29:01,5.22,1,,,"b""b' This is awkward: I was unable to reproduce the performance regression because I have apparently fixed it already since PHPUnit 4.0.8. Because if I run the example test suite with that version I get I think we can close this issue now.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,closed,2014-03-17 11:54:23,1225.37,4,1,3,,,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,reopened,2014-03-17 11:56:39,2.27,4,1,3,,,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,7,2014-03-16 15:29:01,3.58,,1,,"b""b' Nevermind. The run with PHPUnit 4.0.8 shown in url  was with Xdebug enabled whereas the other ones were with Xdebug disabled. This means that what I wroted in url  is still valid: without access to a test suite that exhibits the performance regression I cannot investigate and fix the issue.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,8,2014-03-16 15:29:01,5.0,,1,,"b""b' the project that I have the issue with is: url you probably need to comment out line 14 of .then simply run  '""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,9,2014-03-16 15:29:01,18.68,,,1,"b'b"" Thank you", @cobexer," for a test suite to reproduce the issue with. ## The example project I used ## The PHP version I used ## PHPUnit 3.7 ## PHPUnit 4.0 The only apparent difference between the test suite I used earlier and yours is that your uses process isolation. I will investigate the way that code coverage data is passed from the isolated process to the main process as this is the most likely candiate for a cause for the performance regression. BTW: I was not able to reproduce a performance regression using @cobexer\'s test suite when no code coverage report is requested.""'",,,,,,,,,,,,,,,,,
phpunit,1187,closed,10,2014-03-16 15:29:01,28.62,,1,,"b""b' you probably need a slow netbook to reproduce ;) my main computer also executes the testsuite far faster ;) I could check with my netbook without coverage and show you the numbers on my way back home today. @sebastianbergmann could you check the slowdown with a phpunit build that is not inside a phar (or compressed with a lower compression level)? maybe thats the issue'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,11,2014-03-16 15:29:01,1.42,,1,,"b""b' I did not check with a PHAR but with a Git checkout of PHPUnit.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,12,2014-03-16 15:29:01,92.03,,1,,"b""b' The numbers from @dreis2211 above are also without code coverage. A lot of the tests are integration tests and involve database fixtures"," maybe that made the performance difference more obvious.'""",,,,,,,,,,,,,,,,,,
phpunit,1187,closed,13,2014-03-16 15:29:01,89.85,,1,,"b""b' @sebastianbergmann Some numbers for []url  To test with 3.7: To test with 4.0:  '""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,14,2014-03-16 15:29:01,87.8,,1,,"b'b"" Here\'s the result of some memory profiling I did with PHPUnit 4.0 and @christeredvartsen\'s test suite:  ""'",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,15,2014-03-16 15:29:01,200.1,,1,,"b""b' We are experiencing a similar increase in runtime and memory usage. From ~15 seconds to ~1 minute and a memory exhaustion error.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,16,2014-03-16 15:29:01,120.92,,1,,"b""b' @lstrojny Any chance of getting profiling information?'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,17,2014-03-16 15:29:01,47.62,1,,,"b""b' I am experiencing similar performance issues with PHPUnit 4. Unfortunately I can only provide some facts from my test runs", because the library I am working on is not publicly available but hopefully my results will help finding the bugs nevertheless. (I guess there are at least 2 bugs or design decisions causing bad performance! See below.) All my tests are properly isolated, pure unit tests:using only scalar values, small value objects or mock objectscontaining one to three assertions. It should be mentioned thatboth PEAR and Composer installations yielded nearly the same results (differences < 3 %)strict mode  had no significant impact on execution times (differences < 5 %)I did not constantly pay attention to memory usage, because the increase from PHPUnit 3.7.32 to 4.0.7 was insignificantly small (presumably due to the quite small codebase with few dependencies)all tests were executed without process isolation. In addition to the results listed below, I noticed the following conspicuous behavior patterns:Tests that (would) get categorized as being risky by PHPUnit 4 were extremely slower than all the others but only when executed with PHPUnit 4 with code coverage enabled," regardless of strict mode .Tests that create mock objects (regardless whether or not their methods get configured in some way) were significantly slower than all the others when executed with PHPUnit 4. Here are the average execution times in seconds: #### Test suite 110 test case classes714 tests:  ~ half of the tests creating mock objects  303 tests categorized as being risky by PHPUnit 4 #### Test suite 2subset of test suite 11 test case class85 tests:   0 tests creating mock objects  76 tests categorized as being risky by PHPUnit 4 #### Test suite 3subset of test suite 11 test case class186 tests:  0 tests creating mock objects  0 tests categorized as being risky by PHPUnit 4  '""",,,,,,,,,,,,,
phpunit,1187,closed,18,2014-03-16 15:29:01,463.37,,1,,"b'b"" Reverting url  and url  reduces the memory footprint from 303.25Mb to 301.75Mb on my machine for PHPUnit 4.0 and @christeredvartsen\'s test suite.""'",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,19,2014-03-16 15:29:01,20.85,,1,,"b""b'   When I run the test above with the memory consumption of both PHPUnit 3.7 and 4.0 is 3.00Mb. PHPUnit 3.7 takes 33.24 seconds to run and PHPUnit 4.0 takes 37.88 seconds. Seems like something related to mock objects got slower.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,20,2014-03-16 15:29:01,15.0,1,,,"b'b"" Unfortunately I couldn\'t get my XHProf running on my Windows machine with PHP 5.5 with the needed cpu and mem usage flags", but I was able to generate at least some reports," which would confirm a problem somewhere in the creation of mock objects. Below listed the top 10 functions with PHPUnit 3.7.28 and 4.0 PHPUnit 3.7.28 PHPUnit 4.0.9  ""'",,,,,,,,,,,,,,,,,
phpunit,1187,closed,21,2014-03-16 15:29:01,3.82,,1,,"b""b' @dreis2211 What is  ? It is not part of PHPUnit.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,22,2014-03-16 15:29:01,6.97,,,1,"b'b"" @sebastianbergmann This is part of our class loading part in our project. Interesting side-note: This shouldn\'t be in there. In fact"," this happens when he tries to load a class that doesn\'t exist. In that case he tries to load a test that is using a data provider. Class he tries to load: ""'",,,,,,,,,,,,,,,,,,
phpunit,1187,closed,23,2014-03-16 15:29:01,34.68,,1,,"b'b"" @sebastianbergmann I don\'t have too much time to look into this at the moment"," but is it possible that -mock-objects@fd2951c42698977802655a475ce3992bdaff6f99 makes the mock object cache less useful?""'",,,,,,,,,,,,,,,,,,
phpunit,1187,closed,24,2014-03-16 15:29:01,2.32,,1,,"b""b' @sebastianbergmann I used your example and added the data provider mechanism to it. Here are the results PHPUnit 3.7.32 PHPUnit 4.0.9  '""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,25,2014-03-16 15:29:01,0.57,,,1,"b""b' @dreis2211 Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,26,2014-03-16 15:29:01,0.3,,1,,"b'b"" @whatthejeff That would at least make sense. I\'ll investigate.""'",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,27,2014-03-16 15:29:01,3.47,,1,,"b""b' @sebastianbergmann I can confirm that making the cache static fixes the data provider issue posted by @dreis2211.'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,28,2014-03-16 15:29:01,23.28,,1,,"b""b' @dreis2211 Can you check whether url  fixes your issue?'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,29,2014-03-16 15:29:01,22.75,,1,,"b""b' @sebastianbergmann Seems to be better. With my example it still uses 2-3 times more memory than with 3.7.32"," but in regards of time it seems okay. Also our real project seems to be back to normal values. PHPUnit4.0.9 PHPUnit3.7.32  '""",,,,,,,,,,,,,,,,,,
phpunit,1187,closed,30,2014-03-16 15:29:01,14.85,,1,,"b""b' @sebastianbergmann That patch seems to fix the issues in my test suite at least: 4.0.9 (with patch) 3.7.32 4.0.9 (with patch) with code coverage 3.7.32 with code coverage  '""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,31,2014-03-16 15:29:01,26.63,,,1,"b""b' Closing this issue now. If there are other performance regressions that still exist in PHPUnit 4.0.10 please open a new ticket. Thanks! Thank you", @cobexer, @dreis2211, and @christeredvartsen, @HenryPrang, @lstrojny for your extensive feedback that helped track down the memory usage regression. Thank you," @whatthejeff for figuring out the root cause.'""",,,,,,,,,,,,,
phpunit,1187,closed,closed,2014-03-18 10:08:51,1332.2,6,20,7,,,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,32,2014-03-16 15:29:01,2.32,,1,,"b""b' No problem :)'""",,,,,,,,,,,,,,,,,,,
phpunit,1187,closed,-,-,-,6,21,7,,,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,opened,2014-06-06 03:34:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,title,2014-06-06 03:34:31,00:00,,1,,"b""b' Exit with PHPUnit_TextUI_TestRunner::FAILURE_EXIT when Composer is missing'""",,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,1,2014-06-06 03:34:31,3.98,,,1,"b""b' Nice catch!'""",,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,closed,2014-06-06 03:38:30,3.98,0,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,reopened,2014-06-06 03:38:40,0.17,0,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,closed,2014-06-06 03:38:45,0.08,0,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,2,2014-06-06 03:34:31,683.18,,1,,"b'b"" :thumbsup: Shouldn\'t this be [in 4.1.4]url ""'",,,,,,,,,,,,,,,,,,,
phpunit,1281,closed,-,-,-,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,opened,2014-06-25 07:27:45,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,title,2014-06-25 07:27:45,00:00,,1,,"b""b' testsuite support for groups'""",,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,body,2014-06-25 07:27:45,00:00,,,1,"b""b' Hi! I just want to make a suggestion that when configuring testsuites via xml it would be really nice to allow  by group. A simple application of this might be an ability to tell phpunit to run certain tests first (@group unit) and longest last (@group integration) and otherwise control test execution sequence. Currently we need either manually type in each test  case file in suite or split tests for a single entity into multiple files in order to put them in separate directories which is a maintenance headache. Thank you and have a great day :)'""",,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,1,2014-06-25 07:27:45,104.8,,1,,"b""b' This is what the [ ]url  configuration element is for.'""",,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,closed,2014-07-06 09:12:33,104.8,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,2,2014-06-25 07:27:45,140.32,,1,,"b'b"" @whatthejeff the configuration is not supported inside the element. I believe that is what @dmitrybelyakov meant (correct me if I\'m wrong) and that would indeed be very helpful. For example to split tests and have them executed in a specific order (the order in which the test suites are defined).""'",,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,3,2014-06-25 07:27:45,109.5,,1,,"b""b' @fieg that was exactly my point'""",,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,4,2014-06-25 07:27:45,197.93,1,,,"b""b' Sorry"," I misunderstood :)'""",,,,,,,,,,,,,,,,,,
phpunit,1305,closed,reopened,2015-02-26 16:40:18,447.75,1,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,5,2014-06-25 07:27:45,290.8,,,1,"b""b' Any progress here? :) I was looking for the same thing: ordered groups inside testsuites.'""",,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,6,2014-06-25 07:27:45,400.7,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,1305,closed,closed,2015-10-02 04:11:48,691.5,2,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,1305,closed,-,-,-,2,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,opened,2014-07-25 14:49:49,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,title,2014-07-25 14:49:49,00:00,,1,,"b""b' Wrong bootstrap filepath is not notified'""",,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,body,2014-07-25 14:49:49,00:00,,1,,"b""b' When running  (intentional typo) the command line just prints out: with no warning or notice whatsoever about the missing bootstrap file or wrong option format.'""",,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,1,2014-07-25 14:49:49,269.55,,1,,"b""b' The options are expected before the argument(s). The following should have the desired effect:  '""",,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,closed,2014-07-25 19:19:22,269.55,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,reopened,2014-07-25 19:20:08,0.77,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,2,2014-07-25 14:49:49,76.93,,,1,"b""b' Also ran into this", but since some options were respected, and only some others not, I was able to quickly conclude that the order seems to matter.  I agree that the UX is suboptimal. Did we already consider to replace with [Symfony Console]url It has an excellent  parser," which allows you to specify options anywhere in the command line.  Also used by [Composer]url '""",,,,,,,,,,,,,,,
phpunit,1353,closed,3,2014-07-25 14:49:49,9.7,,,1,"b'b"" Yeah"," @sebastianbergmann is already using Symfony Console for some other PHPUnit-related projects and I believe he\'s expressed interest in using it for PHPUnit as well.""'",,,,,,,,,,,,,,,,,,
phpunit,1353,closed,4,2014-07-25 14:49:49,25.55,,,1,"b""b' Great", created a dedicated issue for that: #1355  Guess this can be closed," since the current options parser works as designed.'""",,,,,,,,,,,,,,,,,
phpunit,1353,closed,closed,2014-07-25 21:14:39,114.52,0,3,3,,,,,,,,,,,,,,,,,,,,
phpunit,1353,closed,-,-,-,0,3,3,,,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,opened,2014-07-28 19:36:22,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,title,2014-07-28 19:36:22,00:00,,1,,"b""b'  is not loaded in process isolation with $preserveGlobalState = FALSE'""",,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,body,2014-07-28 19:36:22,00:00,,1,,"b'b"" Resolves #797Duplicates #1343 + #1346 for PHPUnit 4.2 The added regression test prominently exposes the problem:  If the test\'s custom  file is not loaded", then PHPUnit itself and does not exist \\xe2\\x86\\x92 Fatal error. :collision: :wink:  Discussion in #797 debated whether this would be a backwards-incompatible change, but due to the above, and because I\'m experiencing the exact same problem in Drupal tests in case process isolation is triggered, I\'m considering this as a straight bug fix. This is a bug, because PHPUnit fails to boot itself. If you specify a file in your configuration, then phpunit is instructed to load the specified file, regardless of which process. Currently," this fundamental configuration value is ignored when a child process is spawned and is  .  Failure to include it means that e.g. your class loader won\'t exist.""'",,,,,,,,,,,
phpunit,1364,closed,1,2014-07-28 19:36:22,1.48,,1,,"b""b' BTW"," master corresponds to 4.3 :)'""",,,,,,,,,,,,,,,,,,
phpunit,1364,closed,2,2014-07-28 19:36:22,9.72,1,,,"b'b"" oh noes... forgot to change the target.  Sadly"," GitHub fails to detect the proper merge-base when opening PRs.  So if you don\'t change it before creating the PR\\xe2\\x80\\xa6 master.""'",,,,,,,,,,,,,,,,,,
phpunit,1364,closed,3,2014-07-28 19:36:22,2.12,1,,,"b""b' Yeah"," this is crazy annoying haha.'""",,,,,,,,,,,,,,,,,,
phpunit,1364,closed,closed,2014-07-28 19:54:05,17.72,2,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,reopened,2014-07-28 20:41:40,47.58,2,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,closed,2014-07-28 20:41:55,0.25,2,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,4,2014-07-28 19:36:22,52.55,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,1364,closed,-,-,-,2,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,opened,2014-07-30 13:17:04,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,title,2014-07-30 13:17:04,00:00,,1,,"b""b' Fixed performance of TestSuite::addTestFile() + missing docs'""",,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,body,2014-07-30 13:17:04,00:00,1,,,b'b\' Apologies.  My advice in #1362 was based on utterly wrong and outdated information.  It\\\'s my duty to correct that mistake.1. url 2. Even after reviewing and studying #1362 for a while," it still wasn\\\'t clear to me why all of this futzing is necessary in the first place.  Dissecting history yielded url  (_""5096""_ points to former issue in Trac", which no longer exists) and url  (same commit," but says _""Be more restrictive.""_)", and finally url  (original recreation of svn trunk in git in 2006). \\xe2\\x80\\x94 Therefore, I had to reverse-engineer the original intentions in order to document what\\\'s actually going on.  I stopped after the loop starts to prevent scope creep even though I had to dissect the full function body in order to draw final conclusions.  In essence, the code assumes PSR-1 [long before php-fig was a thing], one class per file, classname == filename, and uses reflection to reverse-map discovered class **short**\\xe2\\x81\\xa3name[s] back to filename[s].  Only upon a direct match, the test class is found.  (It doesn\\\'t account for various edge-case conditions though; specifically, the array is not reset to a single element if there\\\'s no direct match, in which case the entire  of classes will be processed.)  The only way around that funky logic would be to have direct access to the active classloader(s), which would allow to manually reverse-map a filesystem path to a classname.\'',,,,,,
phpunit,1369,closed,1,2014-07-30 13:17:04,30.3,,1,,"b""b' Huh? #1368 passed on all envs"," including PHP 5.6. Almost looks like a random failure to me?Can you trigger a re-test of the failing build?'""",,,,,,,,,,,,,,,,,,
phpunit,1369,closed,2,2014-07-30 13:17:04,6.08,,1,,"b""b' In my opinion", your benchmark does not apply to the code in question. In the reverse foreach benchmark, you call _once_, but in the code in question would be called once _per test file_," i.e. N times. Therefore I think that a reverse for is more appropriate here.'""",,,,,,,,,,,,,,,
phpunit,1369,closed,3,2014-07-30 13:17:04,62.92,,,1,"b'b"" You\'re right.  However", the problem with a loop is that it relies on a consistent  numbering, which isn\'t the case here, due to the reversed additions. Now, IMO the business logic of this function is complex enough on its own already.  Instead of making it even more complex," I\'d suggest to simply go with the KISS way of  -ing the newly found classes into the total stack in the desired ~LIFO order right from the start: url ""'",,,,,,,,,,,,,,
phpunit,1369,closed,4,2014-07-30 13:17:04,12.07,,1,,"b""b' IMO using foreach to add the entries (with consistent indices) and a reverse for to iterate is very simple"," and at the same time avoids the array copying done by and  . But I guess this is where it comes down to taste. :)'""",,,,,,,,,,,,,,,,,,
phpunit,1369,closed,5,2014-07-30 13:17:04,6.25,,,1,"b'b"" I just tried it out.  The keys of positive matches are additionally unset", so it gets more hairy: Didn\'t study further," but this also breaks some tests; not sure why.""'",,,,,,,,,,,,,,,,,
phpunit,1369,closed,6,2014-07-30 13:17:04,2.98,,,1,"b'b"" Ah right :) Did you try using an SplDoublyLinkedList? I know that we\'re probably over-optimizing here"," but I think it\'s an interesting case study.""'",,,,,,,,,,,,,,,,,,
phpunit,1369,closed,7,2014-07-30 13:17:04,11.38,,,1,"b'b"" I also think it\'s interesting :) FWIW", removing the from the $newClasses diff made tests pass.  Now I\'m a bit confused, because the processing order shouldn\'t have major effects like that. Also, somehow, some of the test failures look suspiciously _correct_ to me: Meanwhile," I\'ll also try out SplDoublyLinkedList.""'",,,,,,,,,,,,,,
phpunit,1369,closed,8,2014-07-30 13:17:04,37.98,,1,,"b""b' Slapped some var_dump()s into that code. \\xe2\\x86\\x92 Apparently"," the (preexisting) code can trigger false-positives fairly easily; even more so after collecting all $foundClasses in #1362 example:  '""",,,,,,,,,,,,,,,,,,
phpunit,1369,closed,9,2014-07-30 13:17:04,286.5,,1,,"b'b"" Alright", spent some (too much) time to debug and also profile this.  Final conclusions:1. Aforementioned false-positive matches are an actual bug in the code.  It was unlikely to be triggered before #1362, because the code only looped over immediately new classes.  It\'s fairly hard to trigger, because every found class\'s actual filename is additionally checked against the given  .  At minimum, it causes unnecessary reflections of classes that are not tests.2. I looked into SplDoublyLinkedList in LIFO iterator mode and it _almost_ worked but there appears to be an undocumented bug, which causes to\\xe2\\x80\\xa6 unset the wrong key in the linked list.  In turn, the wrong key is removed from and in turn the regression test of #1362 fails.  I debugged this intensively and literally confirmed that the wrong key gets unset.  Nevertheless, I added this option to the [bench]url 3. Lastly, given that both and were ruled out, I checked once more whether the double approach would allow us to reflect less files, but var-dumping all interactions confirmed that the single achieves exactly the same. Therefore," I think this is ready to fly now.  I\'ll squash the fixup commits if you agree.""'",,,,,,,,
phpunit,1369,closed,10,2014-07-30 13:17:04,16.67,,1,,"b'b"" Hm. Travis doesn\'t seem to get notified. They experienced GH API hook notification issues today"," but those should be resolved already.  Let\'s see whether it will still be picked up; otherwise I\'ll rebase later.""'",,,,,,,,,,,,,,,,,,
phpunit,1369,closed,11,2014-07-30 13:17:04,2.43,,1,,"b""b' @sun Sounds good. Thanks for all your hard work on this one. Your solution looks good to me. PS: Do you have a standalone gist for the bug?'""",,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,12,2014-07-30 13:17:04,14.0,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,closed,2014-07-30 22:10:13,533.15,1,9,4,,,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,reopened,2014-07-30 22:41:18,31.08,1,9,4,,,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,13,2014-07-30 13:17:04,229.15,1,,,"b'b"" Travis is back.  With failures; silly me only ran the small test suite during debugging. Apparently", tests expect the following, which is fairly confusing and comes unexpected: whereas:  1. The of these files contains a dot  2. Even without the double-extension, the file\'s basename doesn\'t match the class name _at all_. It\'s not clear to me how those test classes could have been discovered before, without ignoring any possible relationship between the  and the class name. The failures are caused by the reset of after performing the diff (as mentioned in the OP).  Without that reset, all of the validations are executed and they fail, but the original list of newly declared classes is still defined, so all of the arbitrary new classes are added to the test suite. Three options: A) I can remove that (newly added) reset, but the effective result of doing so is that the entire reverse-mapping + validation action that\'s going here is pointless and superfluous.  We could remove it altogether, same result. B) Alternatively, we can define an exception to the rule:  If loading a file results in exactly 1 newly declared class, then the test class to be added is exactly that class (without further validation).**EDIT:** This would be for BC purposes only; does not work for inherited classes (#1362), because the diff would be empty. C) No longer support that (strange) edge-case of arbitrary classnames in arbitrary filenames.  If necessary," only support double-file-extensions ( ).""'",,,,,,
phpunit,1369,closed,14,2014-07-30 13:17:04,662.83,,1,,"b'b"" Wanted to go ahead with B)", but _yuck_," the very first diff contains PHPUnit\'s own classes:  ""'",,,,,,,,,,,,,,,,,
phpunit,1369,closed,15,2014-07-30 13:17:04,33.03,,1,,"b'b"" Alright.  Since this is a follow-up fix for #1362 and should go into 4.1+"," I went with option A) and reverted the reset of to retain the current behavior as-is \\xe2\\x80\\x94 even though it doesn\'t make sense. I\'ll create a separate issue to discuss option C) for master.""'",,,,,,,,,,,,,,,,,,
phpunit,1369,closed,16,2014-07-30 13:17:04,1315.7,,1,,"b'b"" I think that the code is currently a little over-complicated for what it is supposed to do. We\'re doing regular expression checks on the same classes over and over again (well not quite", since we break on success which is likely for the first iterations in the loop but that\'s not quite obvious in the code). IMO the code could be greatly simplified by storing each test class by its file and removing it after the file has been processed. We need to instantiate instances anyway," so doing so upfront shouldn\'t make things worse:  ""'",,,,,,,,,,,,,,,,,
phpunit,1369,closed,17,2014-07-30 13:17:04,237.98,,,1,"b'b"" The approximate LIFO order prevents that newly discovered classes are checked first.  My verbose debugging confirmed that in almost all cases", only a single comparison is performed and only a single class is reflected.That\'s not exactly true, as far as I can see.  Classes that don\'t pass the simple condition are not reflected currently (if the stack contains an entry that matches, which it normally does). By reflecting all declared classes, you are quickly reflecting the _entire_ PHP code of your .  I understand the intention of the current code to prevent that, where possible. I can perfectly relate to that intention, because in my case (Drupal), just merely _loading_ all code would immediately bump memory consumption to ~140 MB.  I didn\'t try yet, but I assume that additionally _reflecting_ all code would double that number. Drupal\'s custom testing framework ran into the same problem.  Users encountered out of memory errors _before_ tests are even executed.  That\'s why I created [StaticReflection]url  a super-lightweight re-implementation of ReflectionClass to reflect class declarations without loading them, with a strong focus on performance.Ultimately, the root cause for this complexity is that we\'re trying to reverse-map an arbitrary filename to a class name.  For 5.x, IMO we should investigate whether we can find a smarter solution that attempts to leverage the information of the classloader because the moment you\'re aware of  mappings, you\'re able to forward-map and reverse-map in any way you like," sans reflection and all the rest.""'",,,,,,
phpunit,1369,closed,18,2014-07-30 13:17:04,1033.8,,,1,"b""b' Fair enough :) Thanks for the detailed explanation!'""",,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,closed,2014-08-05 22:29:22,1428.07,2,12,6,,,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,19,2014-07-30 13:17:04,870.43,,,1,"b""b' Thanks @sun and @webmozart :)'""",,,,,,,,,,,,,,,,,,,
phpunit,1369,closed,-,-,-,2,12,7,,,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,opened,2014-08-07 11:15:42,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,title,2014-08-07 11:15:42,00:00,,1,,"b""b' PHPUnit 4.1.5 / assertMatch returns Unexpected end tag : hr'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,body,2014-08-07 11:15:42,00:00,,1,,"b""b' Tests running on PHPUnit 4.1.4 went without problems [0]:(on the tests that use ) but when running the same tests against 4.1.5 that use a is returned without having changed those specific tests in months. [0] url  [1] url '""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,1,2014-08-07 11:15:42,9.0,,1,,"b""b' I think this is probably related to #1354. Ping @sun.'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,2,2014-08-07 11:15:42,7.32,,1,,"b""b' Also"," might be worth mentioning that will be deprecated soon (see: #1292).'""",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,3,2014-08-07 11:15:42,6.25,,1,,"b'b"" @mwjames Would you mind providing us with the HTML you\'re testing against so that we can build a regression test case?""'",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,4,2014-08-07 11:15:42,7.87,,1,,"b'b"" While providing the matcher isn\'t the problem: Providing the html itself is an issue as it is generated by MediaWiki\'s  "," methods. EDIT: The html the test run against would look like [this]url ""'",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,5,2014-08-07 11:15:42,10.57,,1,,"b'b"" The first failure appears to be in url  It seemingly asserts a basic form with a simple input element.  Can you explain where a HTML element is involved in that test? Are these the only tests that are failing?  If so", are you sure that the tests are correct?\\xe2\\x80\\xa6sounds as if the test fixture document would contain e.g. instead of  , and there might have been updates to either PHP core, any involved XML parsers, or possibly also in PHPUnit, which are now catching the issue and properly exposing it? In any case," I\'m not able to relate this unexpected failure to any recent changes in PHPUnit.""'",,,,,,,,,,,,,
phpunit,1380,closed,6,2014-08-07 11:15:42,6.97,,1,,"b'b"" The generator uses something like (which doesn\'t help you much since this is MediaWiki specific but the element is expected to be generated). Currently", my only concern is that 4.1.4 run went smooth but 4.1.5 doesn\'t without having changed the source nor the tests.I just locally switched from 4.1.5 to 4.1.4 where the issue does not appear (same environment," same installed base) but as soon as I go back to 4.1.5 the error appears.""'",,,,,,,,,,,,,,,,,
phpunit,1380,closed,7,2014-08-07 11:15:42,0.65,,,1,"b'b"" Yep"," I can confirm this. I\'ll see what I can find :)""'",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,8,2014-08-07 11:15:42,7.4,,1,,"b""b' Seems c1bf461 is exposing errors that were hidden before.'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,9,2014-08-07 11:15:42,5.7,,1,,"b""b' Oh", yes," indeed.  I assumed that was a Windows-only quirk.  Looks like it was also hiding away libxml parser errors on non-Windows platforms?'""",,,,,,,,,,,,,,,,,
phpunit,1380,closed,10,2014-08-07 11:15:42,2.35,,1,,"b""b' Yeah. Seems we were previously only reporting errors. Now we are reporting general  because of the new  .'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,11,2014-08-07 11:15:42,8.37,1,,,"b'b\' So I guess we unknowingly improved error reporting and this ""works as designed""\\xe2\\x80\\xa6? Perhaps just the  message in the test result could be a bit more clear?\''",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,12,2014-08-07 11:15:42,10.43,,1,,"b'b"" @sun Let\'s wait and see what kind of feedback we get from the community / @sebastianbergmann. It is an improvement"," but it does break BC because I can\'t say for sure that this was the way the code was intended to work. @mwjames The failure is caused by having a closing tag in  . There are two easy fixes:1. Tell the component that generates the HTML that you don\'t need the  .2. Tell that you are testing XML:  ""'",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,13,2014-08-07 11:15:42,1417.23,,1,,"b'b"" Using solved the issue for the first failed test but for the second failed test even after changing it returns with a new  therefore switching to to avoid more surprises from  . When removing from the assert repository"," using is a poor man\'s replacement and #1292 doesn\'t give any good alternatives.""'",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,14,2014-08-07 11:15:42,8.88,1,,,"b""b' @mwjames Sorry for the inconvenience. I think we will probably revert this change (or make it optional) for the next release.Yeah"," sorry about that. I hope to have a plugin that we can recommend shortly.'""",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,15,2014-08-07 11:15:42,1.0,,1,,"b""b' @sun what do you think about making this optional?'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,16,2014-08-07 11:15:42,1261.27,,1,,"b'b"" @mwjames I\'ve started working on an alternative here: url  It\'s still a work in progress", but it should be available by the time  ,  ," etc. are officially removed.""'",,,,,,,,,,,,,,,,
phpunit,1380,closed,17,2014-08-07 11:15:42,216.32,,,1,"b'b\' Adding an optional parameter to the load() method to fail on all errors instead of just ""DOM soup"" warnings sounds good to me.  I\\\'ve to admit I wasn\\\'t aware that the utility method is not only used by the XML configuration loader", but also by assertions.  Due to that, the new parameter should probably default to and only the configuration loader passes  .\'',,,,,,,,,,,,,,,,,
phpunit,1380,closed,18,2014-08-07 11:15:42,0.83,,,1,"b""b' @sun Sounds good. Thanks :)'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,closed,2014-08-13 15:29:20,253.63,2,15,3,,,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,reopened,2014-08-13 15:32:00,2.67,2,15,3,,,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,19,2014-08-07 11:15:42,148.32,,1,,"b""b' Reopening until we have a regression test :)'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,20,2014-08-07 11:15:42,16.05,,,1,"b'b"" Alright", I\'ll ping @sebastianbergmann to roll a new release for us. Thanks for your patience," @mwjames.""'",,,,,,,,,,,,,,,,,
phpunit,1380,closed,21,2014-08-07 11:15:42,1317.9,,1,,"b'b"" Alright"," we\'ve released 4.1.6 which should fix this regression.""'",,,,,,,,,,,,,,,,,,
phpunit,1380,closed,22,2014-08-07 11:15:42,37.23,,,1,"b""b' Thanks'""",,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,closed,2014-08-17 14:23:36,1371.6,2,17,5,,,,,,,,,,,,,,,,,,,,
phpunit,1380,closed,-,-,-,2,17,5,,,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,opened,2014-09-04 19:44:19,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,title,2014-09-04 19:44:19,00:00,,1,,"b""b' Unittests running twice in parent class'""",,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,body,2014-09-04 19:44:19,00:00,,,1,"b""b' For many good reasons I put some tests into parent test class und some tests in inhereted class. I have got this structure then: // This command I use to start phpunit: phpunit configuration  I tried this one too", but with same result: phpunit configuration  testsuite foo So now I want to run all tests in a folder foo. Problem is," that tests in  will be running twice and I have no idea why. Do someone has the answer to that? Is it maybe a feature of phpunit? How can I told phpunit not to run them twice? If I run everything works fine and test function in is running only once. __ __ _Unittest responce_ __  '""",,,,,,,,,,,,,,,,,
phpunit,1426,closed,1,2014-09-04 19:44:19,6.45,,1,,"b""b' That is the expected behaviour. The foo_test has two public test methods"," so both are run.'""",,,,,,,,,,,,,,,,,,
phpunit,1426,closed,2,2014-09-04 19:44:19,21.43,,,1,"b""b' The problem is"," its running 2 times! And why if I run everything works fine and test function in  is running only once? '""",,,,,,,,,,,,,,,,,,
phpunit,1426,closed,closed,2014-09-04 20:14:15,29.93,0,2,2,,,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,reopened,2014-09-04 20:14:22,0.12,0,2,2,,,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,3,2014-09-04 19:44:19,15.57,,1,,"b'b"" Yes", that\'s the expected behaviour. When phpunit runs your bar_test class it runs one test. When phpunit runs your foo_test class it runs two more tests. It doesn\'t know if the test was run already, it just runs all the tests for each class one by one. You should have 3 tests executed here," and you do.""'",,,,,,,,,,,,,,,,
phpunit,1426,closed,4,2014-09-04 19:44:19,9.6,,,1,"b""b' And why if I run phpunit  everything works fine and test function in  is running only once?'""",,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,5,2014-09-04 19:44:19,7.07,,1,,"b""b' Did you read what I just wrote?'""",,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,6,2014-09-04 19:44:19,1.8,,1,,"b""b'   has two test methods:   has one test method:Executing runs both tests from and nothing from  .'""",,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,7,2014-09-04 19:44:19,22.18,,1,,"b""b' @GrahamCampbell Yep. If I use command the test in patent class runs 2 times"," as if the test class were in folder too. If I run  directly the class is used as parent. Do u see what my problem is? @whatthejeff I want to run all tests in folder foo. To do this I use testsuites. But phpunit loads parent class as if this class were in foo  but its not there.'""",,,,,,,,,,,,,,,,,,
phpunit,1426,closed,8,2014-09-04 19:44:19,111.52,,1,,"b""b' The issue with test suite loading has to do with the way the files are named. In order for PHPUnit to map test classes to files", PHPUnit expects the filename to mirror the class name. For instance, your test files should be named and  . Also," you might want to upgrade since fixes some bugs related to test suite loading when test class inheritance is involved.'""",,,,,,,,,,,,,,,,
phpunit,1426,closed,9,2014-09-04 19:44:19,1194.85,,,1,"b""b' @whatthejeff Thanks a lot! Problem was with class naming"," if its the same like file name then everthing is working fine. I will upgrade and testing if this comes then. '""",,,,,,,,,,,,,,,,,,
phpunit,1426,closed,closed,2014-09-05 18:54:47,1360.42,0,7,4,,,,,,,,,,,,,,,,,,,,
phpunit,1426,closed,-,-,-,0,7,4,,,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,opened,2014-11-07 14:21:08,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,title,2014-11-07 14:21:08,00:00,,1,,"b""b' PHP Warning:  strpos(): Empty needle in .. on line 114'""",,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,body,2014-11-07 14:21:08,00:00,,,1,"b'b"" Hi"," I have this warning when i test my application. Apparently it\'s only when the test fail. I have only one test case. And my  PHPUnit 4.3.4  Thanks for your awesome work !""'",,,,,,,,,,,,,,,,,,
phpunit,1497,closed,1,2014-11-07 14:21:08,1353.95,,1,,"b'b"" I\'m not able to reproduce this by running your tests. Is it possible this has something to do with zephir?""'",,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,2,2014-11-07 14:21:08,30.92,,1,,"b'b"" I\'m not able to reproduce too", because my vagrant vm crash and after re-install a new one," the test pass correctly. What should i do with the issue ? Close it ?""'",,,,,,,,,,,,,,,,,
phpunit,1497,closed,3,2014-11-07 14:21:08,1.52,,1,,"b""b' Yeah"," reopen if it pops up again.'""",,,,,,,,,,,,,,,,,,
phpunit,1497,closed,4,2014-11-07 14:21:08,0.58,,,1,"b""b' Thanks :+1: '""",,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,closed,2014-11-14 13:28:06,1386.97,0,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,5,2014-11-07 14:21:08,0.35,,1,,"b""b' No problemo :)'""",,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,6,2014-11-07 14:21:08,1290.7,,,1,b'b\' Hi, The issue happen again," after investigate i found the probleme.I have addded this code at url  The output  phpdoc about getFileName Thats mean the ""Doctrine\\\\Instantiator\\\\Instantiator"" is considered as CORE class"," and it\\\'s true... i explain. I\\\'m actualy working on project thats translate php to zephir. I have translate ""Doctrine\\\\Instantiator"" and add it as php extension. Do you think it is good to add a check for this very specifique case ? Thanks\''",,,,,,,,,,,,,,,,
phpunit,1497,closed,reopened,2014-11-28 10:59:10,1291.07,0,5,3,,,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,7,2014-11-07 14:21:08,1025.05,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,1497,closed,closed,2015-10-02 04:04:12,1025.03,1,5,3,,,,,,,,,,,,,,,,,,,,
phpunit,1497,closed,-,-,-,1,5,3,,,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,opened,2014-12-12 15:22:22,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,title,2014-12-12 15:22:22,00:00,,1,,"b""b' Allow multiple options for colors flag'""",,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,body,2014-12-12 15:22:22,00:00,,1,,"b""b' Per my comment on url '""",,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,1,2014-12-12 15:22:22,1.82,,1,,"b""b' Maybe this would be better targeted at 4.5 rather than 4.6?'""",,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,2,2014-12-12 15:22:22,1.35,,1,,"b""b' Maybe. I forked it from master after reading "," I thought that was the Done Thing (tm).'""",,,,,,,,,,,,,,,,,,
phpunit,1525,closed,closed,2014-12-12 15:25:32,3.17,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,reopened,2014-12-12 15:25:36,0.07,0,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,3,2014-12-12 15:22:22,0.73,1,,,"b""b' Pushing to the master means you will have to wait 15 more weeks before this ends up in a stable release.'""",,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,4,2014-12-12 15:22:22,0.43,,1,,"b""b' Derp.'""",,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,closed,2014-12-12 15:28:32,2.93,1,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,5,2014-12-12 15:22:22,1127.17,,1,,"b'b\' The branch is already ""locked"" for anything but bugfixes. This will have to go into  .\''",,,,,,,,,,,,,,,,,,,
phpunit,1525,closed,-,-,-,1,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,opened,2014-12-12 15:34:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,title,2014-12-12 15:34:31,00:00,,1,,"b""b' Allow to define options to display colors'""",,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,body,2014-12-12 15:34:31,00:00,,1,,"b'b"" Related to #1458 and #1525. It\'s basically the same idea of #1526 but this also allows you to use the configuration file to define the colors while #1526 only allows you to do it by command line.""'",,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,1,2014-12-12 15:34:31,17.13,,1,,"b'b"" Doesn\'t this break BC by enforcing that colors must now have an argument?""'",,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,2,2014-12-12 15:34:31,2.5,,1,,"b'b"" Exactly the opposite"," it doesn\'t.""'",,,,,,,,,,,,,,,,,,
phpunit,1527,closed,3,2014-12-12 15:34:31,29.92,,1,,"b'b"" I will close that pull request in favor of #1526"," I don\'t @sebastianbergmann is going to have a different opinion of you guys.@jbladen feel free to take the documentation part of this pull request to yours.""'",,,,,,,,,,,,,,,,,,
phpunit,1527,closed,closed,2014-12-12 16:24:04,49.55,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,reopened,2014-12-12 16:54:16,30.2,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,4,2014-12-12 15:34:31,34.4,,1,,"b""b' I decided to change some stuff"," create a PHPT test and keep the pull request opened for a while.'""",,,,,,,,,,,,,,,,,,
phpunit,1527,closed,closed,2014-12-15 10:22:58,1048.7,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,5,2014-12-12 15:34:31,1058.08,,1,,"b""b' :-('""",,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,6,2014-12-12 15:34:31,1061.12,,1,,"b'b"" @remicollet What\'s wrong?""'",,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,7,2014-12-12 15:34:31,1068.95,1,,,b'b\' The old colors=true in configuration file make terribly ugly output in build log (reason for the change to detect if colors are possible) Allowing colors=always, which is going to be used by some projects (to get colors in travis)  will put us in the same bad situation as previous, having to patch tons of configuration files. More, it will make the configuration file (which use colors=always) incompatible with older phpunit version, thus," raising dependency on phpunit 4.x only for this ""cosmetic"" feature I still really think that change need to be applied in hasColorSupport() to properly detect case where colors are possible", and that," if this ""force"" mode is allowed", it should be only allowed from command line, not from configuration file.\'',,,,,,,,,,
phpunit,1527,closed,8,2014-12-12 15:34:31,1073.97,,,1,"b""b' I understand your perspective", Remi, but I think for PHPUnit we should focus on its users and not on the users of its users," if that makes sense. Patches to improve are appreciated as well as disallowing in the configuration file.'""",,,,,,,,,,,,,,,,
phpunit,1527,closed,9,2014-12-12 15:34:31,1191.15,,1,,"b""b' @sebastianbergmann thanksSee url '""",,,,,,,,,,,,,,,,,,,
phpunit,1527,closed,10,2014-12-12 15:34:31,1226.32,,,1,"b'b"" @remicollet", I saw what you did on #1529, but as you already know what you tried to fix in #1458 was not fixed yet and it must be fixed on [Environment]url  Now you can use  , and but the BC (  and  ) was kept and this the most important. You said it is _incompatible with older PHPUnit versions_ but this is a new feature, so IMHO it\'s perfectly acceptable, unless new features are not allowed in the configuration file. There is quite difference between  , and I think if a person want use it, specifically," is for a good reason.""'",,,,,,,,,,,
phpunit,1527,closed,11,2014-12-12 15:34:31,1263.3,1,,,b'b\' @henriquemoody sorry," I haven\\\'t understood your last comment :( My feeling:colors enable when no support for colors was fixed by 1458colors not enabled when supported is a new bug in Environment / hasColorSupportnew options colors=always is only a (poor) workaround to this second bug. I don\\\'t say new feature are not allowed in configuration. I just mean that some project are going to use colors=""always"" and raise dependency on phpunit 4.6 just for this ""comestic""", which is terrible tricky. I think hasColorSupport() is enough for me. If people want to improve it, they can (ex add detection for Travis), but I really don\\\'t care: Having colors where not supported is critical (reason for 1529)Not having colors where supported is NOT critical. Remember: PHPUnit is a tool to run unit test. I really think we should focus on test feature.\'',,,,,,,,,,,,,,,
phpunit,1527,closed,12,2014-12-12 15:34:31,1290.0,,,1,"b'b"" #1458 may fix the problem of having in a Linux environment but for me it\'s desperate solution since it creates duplications. This checking is already made in the [PHPUnit_TextUI_ResultPrinter]url  which is", in fact, the responsible for it.As I can see, looks like you have cases when is not supported but it still is enabled.No, it\'s not, it\'s a new feature. I\'m sure you know  , for example, does the same. Now you can pipe the output and still have colors, you can read it with  , for example. BTW, [hasColorSupport()]url  as you can see in its docblock it is just a copy of [Symfony\\\\Console]url  and I haven\'t seem people reporting bugs like that, maybe there is something I didn\'t catch yet.Agreed, but it doesn\'t mean we don\'t have to care about anything else," I think that\'s the same reason you sent #1458.""'",,,,,,
phpunit,1527,closed,-,-,-,2,9,3,,,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,opened,2015-02-14 20:37:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,title,2015-02-14 20:37:31,00:00,,1,,"b""b' Switch the order in which @before methods and setUp() are executed'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,body,2015-02-14 20:37:31,00:00,,1,,"b""b' The methods that are tagged with are called _after_ the method. That makes it impossible to use traits for some generic setup code and then use the already existing services from the generic setup to do a specialed  "," example:  '""",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,1,2015-02-14 20:37:31,790.7,,,1,"b""b' I would love this feature too. :+1: '""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,2,2015-02-14 20:37:31,1274.42,,1,,"b""b' Can you send a pull request"," @beberlei? I think this can go into  .'""",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,3,2015-02-14 20:37:31,825.13,,1,,"b""b' \\xf0\\x9f\\x91\\x8d agreed'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,4,2015-02-14 20:37:31,1338.28,,1,,"b""b' I want to open a PR for this. Some questions to avoid implementing the wrong thing:1. what should be the behavior for  ? By simmetry it should be called after  ?2. what should be the behavior of and  ? Will they follow the same pattern of being called respectively before and after and  ?'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,5,2015-02-14 20:37:31,1144.7,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,6,2015-02-14 20:37:31,59.58,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,7,2015-02-14 20:37:31,1278.53,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,8,2015-02-14 20:37:31,663.4,,1,,"b'b"" +1 @giorgiosironi what\'s the status of PR 1722? I see it failed a CI check.""'",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,9,2015-02-14 20:37:31,689.28,,1,,"b""b' It failed the run on PHP 7 which was unstable at the time"," no test failure on current versions of PHP.My questions at url  stills stand to define some other behavior so that I can finish it.'""",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,10,2015-02-14 20:37:31,11.97,,1,,"b'b"" I don\'t know what the right behavior would be", @giorgiosironi. Mostly due to the fact that I don\'t use  ," etc.""'",,,,,,,,,,,,,,,,,
phpunit,1616,closed,11,2015-02-14 20:37:31,101.63,,1,,"b""b' +1'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,12,2015-02-14 20:37:31,1290.12,,1,,"b""b' This should do what you propose", @beberlei," right?  '""",,,,,,,,,,,,,,,,,
phpunit,1616,closed,13,2015-02-14 20:37:31,62.77,,1,,"b""b' As discussed with @beberlei"," only the order for and must be changed.'""",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,closed,2015-10-14 11:28:49,891.3,0,14,1,,,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,14,2015-02-14 20:37:31,203.02,,1,,"b""b' :-1:'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,15,2015-02-14 20:37:31,0.12,,1,,"b""b' This breaks every single Laravel application.'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,16,2015-02-14 20:37:31,1.1,,1,,"b""b' This is indeed a breaking change.'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,17,2015-02-14 20:37:31,7.45,1,,,"b""b' I do not consider this a breaking change. The behavior was undefined before", now it is defined. You were relying on undocumented behavior," sorry.'""",,,,,,,,,,,,,,,,,
phpunit,1616,closed,18,2015-02-14 20:37:31,1.0,,1,,"b""b' While the order of the before annotations was not defined", the fact they were after the setup method," was defined. This is breaking.'""",,,,,,,,,,,,,,,,,
phpunit,1616,closed,19,2015-02-14 20:37:31,4.98,,1,,"b'b\' @GrahamCampbell could you explain how this ""breaks every single Laravel application""? I wonder if projects that use phpunit as a dependency", like [codeception]url  would have issues too.\'',,,,,,,,,,,,,,,,,,
phpunit,1616,closed,20,2015-02-14 20:37:31,1.58,,1,,"b""b' Everyone will now get a fatal error because the setup method created an object that before methods then used.'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,21,2015-02-14 20:37:31,0.5,,1,,"b'b"" @GrahamCampbell That\'s not how breaking changes work. If you rely on undocumented", untested behavior," nothing is set in stone.""'",,,,,,,,,,,,,,,,,
phpunit,1616,closed,22,2015-02-14 20:37:31,0.22,,1,,"b'b"" I don\'t see how the actual details matter though. It\'s a breaking change"," if you consider it\'s behaviour to have been defined.""'",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,23,2015-02-14 20:37:31,0.85,1,,,"b'b"" Just because something\'s undocumented"," doesn\'t mean you should break it. There\'s plenty other stuff not documented that people would be unhappy about if it broke.""'",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,24,2015-02-14 20:37:31,0.67,1,,,"b'b"" That\'s an example of the mess this makes: url ""'",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,25,2015-02-14 20:37:31,23.75,,,1,b'b\' Yeah," to me a breaking change is defined as something worked before and now it doesn\\\'t. That\\\'s ""breaking"" as in you broke applications. Is that not a good definition of ""breaking""?\''",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,26,2015-02-14 20:37:31,0.9,,1,,"b""b' why not making the behavior configurable through the ?We could release a phpunit 5.1.1 which fixes that and in phpunit 6 the old behavior can be dropped as breaking changes can be done in major releases according to semantic versioning.'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,27,2015-02-14 20:37:31,1.32,,1,,"b""b' @Ma27 PHPUnit already has way too many configuration settings"," so no on that.'""",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,28,2015-02-14 20:37:31,3.82,,1,,"b'b"" @taylorotwell No", if you rely, for example, on the existence of an internal global variable, and you use it for your purposes, and someone refactors that global variable away, it is not a breaking change. Breaking changes are changes to the documented, tested, defined, public API. If you rely on behavior that only incidentally works from the way the code was written, but that behavior was not defined or tested,  it does not constitute a breaking change. Things don\'t need to be explicitly defined to be undefined," in order to be undefined.""'",,,,,,,
phpunit,1616,closed,reopened,2015-12-07 15:43:26,254.62,3,25,2,,,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,29,2015-02-14 20:37:31,18.35,1,,,"b'b"" I\'m going to look at this in a few minutes and see how hard it is for us to be agonstic about what order these things are run in.""'",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,30,2015-02-14 20:37:31,2.38,,1,,"b""b' @taylorotwell The change has been reverted for PHPUnit 5.1 and was rescheduled for PHPUnit 6. If you want to look at something today ... why not look at url  ;-)'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,31,2015-02-14 20:37:31,271.0,,1,,"b""b' Just wanted to note that on the Laravel side we insulated ourselves from this change. Not sure if that effects you wanting to go ahead and put this in a 5.x series release since we were somewhat edge case in our usage.'""",,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,32,2015-02-14 20:37:31,0.92,,1,,"b'b"" :+1: for that"," regardless of what laravel\'s doing.""'",,,,,,,,,,,,,,,,,,
phpunit,1616,closed,33,2015-02-14 20:37:31,1327.12,1,,,"b'b"" @sebastianbergmann Do you still think it\'s not worthwhile to introduce a configuration? I\'m asking because currently PHPUnit 5.x has the order (also  )", and PHPUnit 6.x will change it, right? Then it\'s hard for us to build something reliable leveraging this feature that works on both. Are there any suggestions for that? In particular," I\'m trying to build an e2e test harness for a PaaS. It\'s very similar to the first comment from @beberlei but I\'m actually trying to do the opposite. I want to run something before @beforeClass.  ""'",,,,,,,,,,,,,,,,
phpunit,1616,closed,closed,2016-08-19 14:23:39,1360.22,5,28,2,,,,,,,,,,,,,,,,,,,,
phpunit,1616,closed,34,2015-02-14 20:37:31,298.3,,1,,"b'b"" Came here because I upgraded phpunit6 in a Laravel 5.4 application and my own trait extensions broke because of this change.  Before this change", I was able to do this:      Previously, with these examples, it was possible to just by including you could run additional code **after** setUp.  The way Laravel augmented this is they have which [checks if a certain trait was loaded and calls its (trait specific) initializer method]url Of course it\'s possible to do it that way, but before I change my code I would rather find out if there is a better way?  Can I, by using or something similar," run code now between the and the actual test method with phpunit6 so I don\'t have to be specific about it via my  ?""'",,,,,,,,,,,,,
phpunit,1616,closed,-,-,-,5,29,2,,,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,opened,2015-04-24 12:23:15,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,title,2015-04-24 12:23:15,00:00,,1,,"b""b' PharException Broken signature installing PHPUnit'""",,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,body,2015-04-24 12:23:15,00:00,,,1,"b'b\' Hm I can\\\'t find any subject talking about my problem.. I try to install PHPUnit (using this process: url  on my debian. But nothing appears on my prompt when I type this: php  version I add a breakpoint after ""Phar::mapPhar(\\\'phpunit-4.6.4.phar\\\');"" on the ", line 17," ant then I got this error on my prompt: PHP Fatal error:  Uncaught exception \\\'PharException\\\' with message \\\'phar ""/-"" has a broken signature\\\' in /-:16Stack trace:#0 /-(16): Phar::mapPhar(\\\'phpunit-4.6.4.p...\\\')#1 {main} thrown in /on line 16 can you help me with this one? Thank\\\'s in advance!\''",,,,,,,,,,,,,,,,,
phpunit,1694,closed,closed,2015-04-24 12:25:02,1.78,0,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,reopened,2015-04-24 12:25:17,0.25,0,1,1,,,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,1,2015-04-24 12:23:15,2.75,,1,,"b""b' Do you have Suhosin enabled? If so"," please have a look at url '""",,,,,,,,,,,,,,,,,,
phpunit,1694,closed,2,2015-04-24 12:23:15,6.82,,,1,"b'b"" Hm didn\'t know that I have Suhosin enabled on this server"," this solves my problem.Really thank you!""'",,,,,,,,,,,,,,,,,,
phpunit,1694,closed,closed,2015-04-24 12:32:49,7.53,0,2,2,,,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,3,2015-04-24 12:23:15,1.65,,1,,"b""b' AFAIK it is enabled by default on Debian.'""",,,,,,,,,,,,,,,,,,,
phpunit,1694,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,opened,2015-06-16 14:35:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,title,2015-06-16 14:35:31,00:00,,1,,"b""b' Drop support for PHP 5'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,1,2015-06-16 14:35:31,77.35,,1,,"b""b' :+1:'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,2,2015-06-16 14:35:31,1.45,,1,,"b""b' :tada:'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,3,2015-06-16 14:35:31,1123.67,,1,,"b""b' :+1:'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,4,2015-06-16 14:35:31,2.12,,1,,"b""b' :+1: '""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,5,2015-06-16 14:35:31,150.35,,1,,"b""b' Drop support for PHP =))) '""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,6,2015-06-16 14:35:31,1104.03,,1,,"b""b' :thumbsup:'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,7,2015-06-16 14:35:31,927.97,,,1,"b'b"" @sebastianbergmann When will all of phpunit\'s dependencies and phpunit itself be getting namespaced and psr4 autoloaded? v5 or v6 look like good opportunities to me? Perhaps do everything but  for v5"," then everything in v6?""'",,,,,,,,,,,,,,,,,,
phpunit,1751,closed,8,2015-06-16 14:35:31,368.63,,1,,"b""b' Eventually all code will be namespaced. I do not see any value for the end user in namespacing the code so that is not a high priority for me. I also do not see any value in PSR-X-based autoloading and will stick with the class map.'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,9,2015-06-16 14:35:31,323.35,,,1,"b""b' Uhm"," what does drop support for PHP 5 mean?! As in drop supporting 5.0 and increase required level to something in range of 5.3?'""",,,,,,,,,,,,,,,,,,
phpunit,1751,closed,10,2015-06-16 14:35:31,0.72,,1,,"b""b' Oh my bad"," it is tagged PHPUnit 6 :) Guess its a release exclusively for PHP 7 then.'""",,,,,,,,,,,,,,,,,,
phpunit,1751,closed,11,2015-06-16 14:35:31,134.47,,1,,"b""b' Drop support for all 5.x.'""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,12,2015-06-16 14:35:31,1424.58,,1,,"b""b' :+1: '""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,closed,2015-10-02 04:52:09,856.63,0,11,2,,,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,reopened,2015-12-07 15:46:49,654.67,0,11,2,,,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,13,2015-06-16 14:35:31,12.8,,1,,"b""b' :+1: '""",,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,closed,2016-08-19 06:58:43,911.9,0,12,2,,,,,,,,,,,,,,,,,,,,
phpunit,1751,closed,-,-,-,0,12,2,,,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,opened,2015-07-15 22:34:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,title,2015-07-15 22:34:31,00:00,,1,,"b""b' Add support for expectations'""",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,body,2015-07-15 22:34:31,00:00,,1,,b'b\' **NOTE**: This is not a production PR, but should be used as a point-of-reference for the discussion of additions.## What are expectations Quite simply," expectations are assertions that don\\\'t immediately fail tests. They can accumulate over the execution of a test.## Why? Expectations provide the ability to get richer and more complete failure data.## How it works: Simply replace ""assert"" with ""expect"" in any valid assertion call. The rest is handled by the framework. Instead of a failure halting the test (as with an assertion)", expectations keep executing. **For the proof-of-concept** expectation errors are only displayed if there was no other assertion failure. This should be fixed in the future.## When would I use expect instead of assert: In short, if a failure in one place means you can\\\'t get any meaningful data out of the rest of the failures, then use assert. Otherwise use expect. Example: The first is an assertion, because continuing the test may be dangerous. The rest are expectations because if one fails, it means nothing to the others. So by using expectations, you get more complete failure information.## Output: The POC will generate for the following code: The following failure:  ## Real World The very test included in this pull request uses expectations. In this case, we\\\'re asserting that there were 2 failed expectations, but then expecting each individual message. PHPUnit\\\'s own test suite has areas where this could be used: In this case, the first 2 calls  be calls.## Next steps This is just a dirty proof-of-concept to frame the discussion. Check this PR out, try it and see the behavior. And discuss.\'',,,,,,,
phpunit,1793,closed,1,2015-07-15 22:34:31,52.67,1,,,"b'b"" @GrahamCampbell Look at the bloody first line of this pull request. Please get off your high horse and realize that this was a 2 minute patch to prove a concept. Not something that\'s attempting to be production ready.""'",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,2,2015-07-15 22:34:31,3.15,1,,,"b'b"" @ircmaxell Sorry. I was just doing a quick code review. Didn\'t intend to be rude.""'",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,3,2015-07-15 22:34:31,727.48,,1,,"b""b' @ircmaxell I will probably not have time to look into this before the weekend.'""",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,4,2015-07-15 22:34:31,110.67,,1,,"b'b"" I like the idea though. :} Can\'t really comment on the implementation (or the PoC actually) as I don\'t have enough insights on how PHPUnit runs and handles its assertion"," but the way you handled expectations seems logic too.""'",,,,,,,,,,,,,,,,,,
phpunit,1793,closed,5,2015-07-15 22:34:31,161.9,,1,,"b""b' For a little background on the verb choice: url '""",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,6,2015-07-15 22:34:31,737.85,1,,,"b'b"" Dear contributor", let me start by apologizing for not commenting  working on the issue you have reported or merging the pull request you have sent sooner. PHPUnit 5.0 was released today. And today I am closing all open bug reports and pull requests for PHPUnit and its dependencies that I maintain. Please do not interpret the closing of this ticket as an insult or a lack of interest in your problem. I am sorry for any inconvenience this may cause. If the topic of this ticket is still relevant then please open a new ticket or send a new pull request. If your ticket or pull request is about a defect then please check whether the issue still exists in PHPUnit 4.8 (which will received bug fixes until August 2016). If your ticket or pull request is about a new feature then please port your patch PHPUnit 5.0 before sending a new pull request. I hope that today\'s extreme backlog grooming will allow me to respond to bug reports and pull requests in a more timely manner in the future. Thank you for your understanding,"Sebastian""'",,,,,,,,,,,,,,,,,
phpunit,1793,closed,closed,2015-10-02 04:28:14,353.72,3,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,reopened,2015-10-03 05:48:22,80.13,3,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,7,2015-07-15 22:34:31,894.72,,,1,"b""b' I would really like that idea too!'""",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,8,2015-07-15 22:34:31,1182.93,,,1,"b""b' Also"," it would be great to introduce it in 4.x line !'""",,,,,,,,,,,,,,,,,,
phpunit,1793,closed,9,2015-07-15 22:34:31,0.53,,1,,"b""b' @keradus PHPUnit 4.8 is bug fixes only.'""",,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,10,2015-07-15 22:34:31,0.38,,1,,"b""b' As discussed with @ircmaxell IRL"," I will not accept this feature.'""",,,,,,,,,,,,,,,,,,
phpunit,1793,closed,closed,2015-12-07 15:06:48,558.43,3,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,1793,closed,11,2015-07-15 22:34:31,6.82,,,1,"b""b' @sebastianbergmann @ircmaxell can you please provide a short summary (a few sentences) for the rest of us"," why is this not a good idea?'""",,,,,,,,,,,,,,,,,,
phpunit,1793,closed,12,2015-07-15 22:34:31,8.75,,1,,"b""b' Sure: IMO"," having this feature would encourage test more than makes sense in a single test method. It is a design decision to abort the execution of a test after its first assertion has failed.'""",,,,,,,,,,,,,,,,,,
phpunit,1793,closed,13,2015-07-15 22:34:31,10.73,,,1,"b""b' Ok"," thanks! '""",,,,,,,,,,,,,,,,,,
phpunit,1793,closed,-,-,-,3,8,4,,,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,opened,2015-10-06 20:18:01,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,title,2015-10-06 20:18:01,00:00,,1,,"b""b' Mark a test as risky that does not execute the code it wants to test'""",,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,body,2015-10-06 20:18:01,00:00,,1,,"b""b' A test that has a annotation", for instance," should be marked as risky when the method is not executed.'""",,,,,,,,,,,,,,,,,
phpunit,1899,closed,1,2015-10-06 20:18:01,0.82,,1,,"b""b' Related to url '""",,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,2,2015-10-06 20:18:01,1077.97,,1,,"b""b' @sebastianbergmann Should this behaviour be added to the strict-coverage flag? Or should tests always be marked as risky in this case? '""",,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,3,2015-10-06 20:18:01,1213.03,,1,,"b""b' It should be added to the flag.'""",,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,closed,2016-01-11 09:53:44,815.72,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,4,2015-10-06 20:18:01,102.72,,1,,"b""b' Reverted 580f71513dfa67056c8ea2f2035e3759d17485a2 until url  is fixed.'""",,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,reopened,2016-02-08 12:12:33,138.82,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,closed,2016-02-08 12:21:28,8.92,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,1899,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,opened,2015-10-06 23:29:41,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,title,2015-10-06 23:29:41,00:00,,1,,"b""b' self-update updates to phpunit 5.0"," even on PHP < 5.6'""",,,,,,,,,,,,,,,,,,
phpunit,1901,closed,body,2015-10-06 23:29:41,00:00,,1,,"b'b"" I just ran on my PHP 5.5 system. When that was done", I ran  ," to which it replied Presumably it self-updated to phpunit 5.x. Shouldn\'t check the PHP version and update to the most recent _supported_ version?""'",,,,,,,,,,,,,,,,,
phpunit,1901,closed,1,2015-10-06 23:29:41,651.52,,1,,"b'b"" To be honest"," to me that is expected behavior. While PHPUnit 4 will get bug fixes for a year it is not the current version. So: don\'t use if you are on an outdated version of PHP.""'",,,,,,,,,,,,,,,,,,
phpunit,1901,closed,closed,2015-10-07 10:21:12,651.52,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,2,2015-10-06 23:29:41,7.97,1,,,"b""b' I should not have disregared this issue and closed it. Sorry for that.'""",,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,reopened,2015-10-07 10:29:10,7.97,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,closed,2015-10-07 10:44:01,14.85,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,3,2015-10-06 23:29:41,391.15,,,1,"b""b' Thanks for the fix!'""",,,,,,,,,,,,,,,,,,,
phpunit,1901,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,1902,open,opened,2015-10-07 02:27:31,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1902,open,title,2015-10-07 02:27:31,00:00,,1,,"b""b' Mark tests as risky when they perform assertions on a mock'""",,,,,,,,,,,,,,,,,,,
phpunit,1902,open,body,2015-10-07 02:27:31,00:00,,1,,"b""b' As discussed over dinner tonight: mark tests as risky that run assertions on mock objects. If", however, an abstract class is being tested through a mock," the test should not be marked as risky.'""",,,,,,,,,,,,,,,,
phpunit,1902,open,closed,2015-10-08 01:52:25,1404.9,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,1902,open,1,2015-10-07 02:27:31,1406.9,,,1,"b""b' This is not exactly what you wanted as it only marks a test as risky when it only performs assertions on test doubles. If I figure out a good way to mark a test as risky when it performs any assertion on a test double then I will implement that"," too.'""",,,,,,,,,,,,,,,,,,
phpunit,1902,open,2,2015-10-07 02:27:31,532.67,,,1,"b""b' Figured it out :-) See c8ac190ae54701725e5b8bb178e99e5886e68311'""",,,,,,,,,,,,,,,,,,,
phpunit,1902,open,3,2015-10-07 02:27:31,59.62,,1,,"b""b' Hi", I understand the meaning of this enhancement, but what about if doubles are tested to test a real implementation? This is not easy to get along your intention," but I think this case should be separated from the commit you did. What do you think?'""",,,,,,,,,,,,,,,,
phpunit,1902,open,reopened,2016-02-07 05:06:44,194.32,0,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,1902,open,4,2015-10-07 02:27:31,1050.6,,1,,"b""b' Reverted 22df98f7c5e2726af05f26b9d3b1ccaaf32a5224 and c8ac190ae54701725e5b8bb178e99e5886e68311 due to #2042.'""",,,,,,,,,,,,,,,,,,,
phpunit,1902,open,-,-,-,0,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,opened,2015-11-18 14:06:49,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,title,2015-11-18 14:06:49,00:00,,1,,"b""b' Fix throwing Prophet error'""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,body,2015-11-18 14:06:49,00:00,,1,,"b""b' This simple fix allows to throw Prophet predictions exceptions. Btw"," very similar error is in current dev version url '""",,,,,,,,,,,,,,,,,,
phpunit,1959,closed,closed,2015-12-08 10:59:40,1252.85,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,reopened,2015-12-08 10:59:42,0.03,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,1,2015-11-18 14:06:49,91.67,1,,,"b""b' @sebastianbergmann sorry to bother", but could you take a look at this PR? Its is fairly simple," and merging it will help me a lot in my projects :)'""",,,,,,,,,,,,,,,,,
phpunit,1959,closed,2,2015-11-18 14:06:49,35.85,,1,,"b""b' Closed via 1f44c091efc32e8957ab71ebd3eaf3595a0d800b'""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,closed,2015-12-10 16:14:20,314.63,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,3,2015-11-18 14:06:49,978.08,,,1,"b""b' Thank you. Bug is still in 5.0 though url '""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,4,2015-11-18 14:06:49,923.85,,1,,"b""b' PHPUnit 5.0 is no longer supported.'""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,5,2015-11-18 14:06:49,196.27,,,1,"b""b' Oh. Thank you for your help.'""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,6,2015-11-18 14:06:49,476.97,,1,,"b""b' @sebastianbergmann I think would make sense to merge this into the 4.8 as well. Right now using the prophecy integration and shouldBeCalled() is broken due to this.'""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,7,2015-11-18 14:06:49,858.17,,,1,"b""b' @ddelbondio A pull request for PHPUnit 4.8 would be appreciated.'""",,,,,,,,,,,,,,,,,,,
phpunit,1959,closed,-,-,-,1,5,3,,,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,opened,2015-12-07 17:17:50,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,title,2015-12-07 17:17:50,00:00,,1,,"b""b' PHPUnit 4.6.0-4.8.x: Incorrect minimum PHP version in '""",,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,body,2015-12-07 17:17:50,00:00,,1,,"b""b' In PHPUnit versions 4.6.0 4.8.x", there is the dependency  , and PHPUnit itself claims to require  . Depending on which version of Symfony Yaml will be installed, however, this is not true. With version 2.7.0, Symfony Yaml requires  , and with version 3.1.0 it is even  . To stick to PHP 5.3.3, the according require should thus be  . Or you leave it like it is," but change the required PHP version to 5.5.9 (in which case you could also just require anyway).'""",,,,,,,,,,,
phpunit,1989,closed,1,2015-12-07 17:17:50,2.43,,1,,"b""b' PHPUnit 4.6 and PHPUnit 4.7 are end-of-lifed and there will be no changes to them", much less new releases. PHPUnit 4.8 must be compatible with PHP 5.3, PHP 5.4, PHP 5.5," and PHP 5.6. Not sure what to do here. Maybe @stof can advise?'""",,,,,,,,,,,,,,,
phpunit,1989,closed,2,2015-12-07 17:17:50,2.0,,,1,"b""b' Yes", I know the state of PHPUnit 4.6 and 4.7, I just tracked down where that require originated," and wanted to share what I found. :) Thanks for the super-fast reply.'""",,,,,,,,,,,,,,,,
phpunit,1989,closed,3,2015-12-07 17:17:50,19.97,1,,,"b'b"" _allowing_ to install Yaml 3.0 does not make things incompatible with PHP 5.3. Composer will select the appropriate version based on your PHP version. The case where an issue might happen is when dependencies are resolved on a different PHP version than the target one. But composer has a feature to cover this: you can tell it what the platform configuration is instead of making it read from the current platform (well", to be exact, you can overwrite some data, but this won\'t unset other extensions detected from the system): url  There is an example of such usage in Composer itself," to ensure that dependencies used in the composer phar stay compatible with PHP 5.3: url ""'",,,,,,,,,,,,,,,
phpunit,1989,closed,4,2015-12-07 17:17:50,5.45,,1,,"b'b"" url  I\'d totally recommend doing that. I do that in my applications so they work on the production environment.""'",,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,5,2015-12-07 17:17:50,0.28,,1,,"b""b' Totally correct. ;)'""",,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,6,2015-12-07 17:17:50,0.48,,,1,"b""b' Thank you"," @stof. As far as I understand there is nothing for me to do here.'""",,,,,,,,,,,,,,,,,,
phpunit,1989,closed,closed,2015-12-07 17:48:27,30.62,1,5,2,,,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,7,2015-12-07 17:17:50,3.62,,1,,"b""b' @sebastianbergmann well"," you need to ensure that the phpunit phar for 4.8 does not ship with Yaml 3.0 (as it would make the phar require PHP 5.5+). So the 4.8 branch should use this option in the  to make sure the phar is shipped in the right way (and the 5.0 branch should do the same with PHP 5.6 to ensure it does not build with a dependency version requiring PHP 7)'""",,,,,,,,,,,,,,,,,,
phpunit,1989,closed,reopened,2015-12-07 17:52:37,4.17,1,6,2,,,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,8,2015-12-07 17:17:50,3.4,,1,,"b""b' There you go: url '""",,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,9,2015-12-07 17:17:50,4.6,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,closed,2015-12-07 18:00:04,7.45,1,7,3,,,,,,,,,,,,,,,,,,,,
phpunit,1989,closed,-,-,-,1,7,3,,,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,opened,2015-12-23 09:00:00,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,title,2015-12-23 09:00:00,00:00,,1,,"b""b' Prefix all code bundled in PHAR distribution with  namespace'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,body,2015-12-23 09:00:00,00:00,,1,,"b""b' Issues such as #2014 happen when the code under test shares dependencies with PHPUnit but requires different versions than the ones bundled in the PHAR.  Depends on url  being ready for real world usage.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,1,2015-12-23 09:00:00,1.83,,,1,"b'b"" I was working on it but php-scoper is not on packagist yet. See url  I\'m not sure of the work here"," can you please elaborate? :-)""'",,,,,,,,,,,,,,,,,,
phpunit,2015,closed,2,2015-12-23 09:00:00,1.8,,1,,"b""b' AFAIK", this will partially resolve #2014. The .phar will be fixed, but not global composer install," right?'""",,,,,,,,,,,,,,,,
phpunit,2015,closed,3,2015-12-23 09:00:00,130.55,,,1,"b'b"" Excellent idea! We just had trouble testing our Symfony 2.8 project. PHPUnit\'s phar (tested with 5.1.4) comes with the Yaml component of Symfony 3.0. Since Yaml::parse() does not support file names anymore", important dependencies such as Doctrine ORM are broken with this version (YAML config files can not be read anymore and you see misleading error messages). I can imagine," many developers are facing similar problems without understanding the reason. They might stop writing unit tests right in this moment. You should really fix this.""'",,,,,,,,,,,,,,,,,
phpunit,2015,closed,4,2015-12-23 09:00:00,17.57,,1,,"b""b' @lastzero In a scenario such as the one you describe you have to install PHPUnit via Composer for the time being.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,5,2015-12-23 09:00:00,56.47,1,,,"b'b"" @sebastianbergmann Sure", but my developers didn\'t figure this out on their own. It\'s just plain dangerous to bundle a common standard component such as the Symfony YAML parser in a version with all backwards compatibility removed. Actually, I think there was a previous release of phpunit(.phar), that checked if a vendor directory exists and only used the bundled libraries if not. _Hint for other developers: If you\'re facing issues like this," you can use url  to get the filename of a class to see if it\'s coming from vendor or from a phar file._""'",,,,,,,,,,,,,,,
phpunit,2015,closed,6,2015-12-23 09:00:00,184.28,,1,,"b'b\' We have stucked with the same problem. ""-injection"" v3.2 (master) has a dependency ""use Symfony\\\\Component\\\\Yaml\\\\Yaml;"" in ""/"". And", also," phpunit has an implementation (hard-coded) of ""**Yaml**"" class in phpunit\\\'s  file. Solution is to set up in your  requirement of **exactly ""3.0"" version** of **-injection**. You can type smth like this:""-injection"": ""3.0"". Thanks @iplus for found solution to the problem.\''",,,,,,,,,,,,,,,,,
phpunit,2015,closed,7,2015-12-23 09:00:00,27.97,,1,,"b'b"" @ssnikiforov I tried adding but it doesn\'t seem to work. (with Symfony 3.2 beta1) (and php 5.5)  ""'",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,8,2015-12-23 09:00:00,1065.88,,1,,"b""b' +1  This came up during my test of Symfony 3.3.0-RC1 today. The app runs normally but PhpUnit crashes on the first test", because some new constants in the Yaml class are not defined. Turns out," the Yaml classes are all loaded from the phpunit phar and not from the vendor folder.'""",,,,,,,,,,,,,,,,,
phpunit,2015,closed,closed,2017-12-23 09:28:35,28.58,1,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,9,2015-12-23 09:00:00,94.42,,,1,"b'b"" :+1: nice to see this happened ;)  hm... doesn\'t look like a bc breaker"," why pushed to 7.0 instead of 6.x ?""'",,,,,,,,,,,,,,,,,,
phpunit,2015,closed,reopened,2017-12-23 15:09:59,341.4,1,7,3,,,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,10,2015-12-23 09:00:00,244.17,,1,,"b""b' defa9b90c0fce11347e1fb9e6843ced933cbea9f had to be reverted because of regressions. After the holidays I will have another go at it.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,11,2015-12-23 09:00:00,343.3,,,1,"b""b' Could you please share some insights @sebastianbergmann please? What was the issue? It would be interesting for anyone thinking about prefixing the phar build.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,12,2015-12-23 09:00:00,521.92,,1,,"b'b\' ""After the holidays I will have another go at it."" means that I will investigate next week and share my findings here. One of the issues found  documented in #2939.\''",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,13,2015-12-23 09:00:00,748.12,,,1,"b""b' yeah", I was not wondering about solution," but about what was the issue :D thanks ;)'""",,,,,,,,,,,,,,,,,
phpunit,2015,closed,14,2015-12-23 09:00:00,1176.27,1,,,"b""b' Just a side note: Only vendor should be prefixed"," not PHPUnit classes to avoid confusion on IDE completion for example. :+1: '""",,,,,,,,,,,,,,,,,,
phpunit,2015,closed,15,2015-12-23 09:00:00,331.68,,1,,b'b\' I worked on this issue on the PHPUnit Code Sprint in Hamburg, specifically on the regression described in #2939. Reason of this regression was an issue in the php-scoper. Fortunately this issue has been fixed in latest release of the php-scoper (for reference it was the pull request url  But the new version of php-scoper introduce another problems. For example, if the test depended on any of prefixed classed in the phar file eg.: it use class _PHPUnit_Framework_MockObject_MockObject_ in a return type definition, it will break. For these cases there is a configuration option in the php-scoper," which allows to ""whitelist"" particular classes. By ""whitelisting"" it\\\'s meant", that the for the prefixed class an alias with original name will be created. Whitelisted classes can be specified only by their fully qualified class names and nothing else. Usage of this feature thus mean creation of the class list by hand or in automatic manner, for example by using composer classmap. Which is not very robust. To solve this, an issue for the php-scoper has been created (-scoper#192) with propose of whitelisting according namespace names or (FQCN) class name prefixes.  In the meantime I prepare a solution, which is by no means meant as a final one (its actualy a proof of concept). There is a pull request url  for it. At this moment i am omitting files in following folders:   -mock-objects, -code-coverage and -token-stream This must be also whitelisted, because of the dynamic object instantiation in  \'',,,,,,,,,
phpunit,2015,closed,16,2015-12-23 09:00:00,854.08,,,1,b'b\' Wow," this all seems to be a lot of work. Did you check how many classes outside the PHPUnit scope are actually used? Would it be an option to simply ""fork"" them", let\\\'s say if it\\\'s just the YAML parser? Or use a simpler YAML parser that can be bundled with PHPUnit?\'',,,,,,,,,,,,,,,,,
phpunit,2015,closed,17,2015-12-23 09:00:00,1381.33,,,1,"b'b"" @sebastianbergmann ", sounds like perfect candidate to whitelist all classes except those marked as  . maybe it\'s good occasion to add that for classes that were not meant to be public, not meant to be under BC promise? I can prepare a PR which would mark all classes as  ," and then we would publish those which shall be public ?""'",,,,,,,,,,,,,,,,
phpunit,2015,closed,18,2015-12-23 09:00:00,0.92,,1,,"b""b' I would rather not mix these two topics.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,19,2015-12-23 09:00:00,333.92,,,1,"b""b' I just released PHPUnit 8.0.6 which is the first release for which an experimental scoped PHAR is available at  . Please test this if you can and provide feedback here in this ticket. Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,20,2015-12-23 09:00:00,281.57,,,1,"b""b' Thanks", great to see you got this ! Not working on the project that had this problem anymore," otherwise I would have tested it quickly.'""",,,,,,,,,,,,,,,,,
phpunit,2015,closed,21,2015-12-23 09:00:00,905.52,,1,,"b""b' @lastzero There is a lot of value in testing the scoped PHAR in projects that do not have the problem that the scoped PHAR solves.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,22,2015-12-23 09:00:00,1138.4,,1,,"b""b' Please test with url  which was built using the latest PHP-Scoper.'""",,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,closed,2019-07-03 14:22:35,1392.6,2,13,9,,,,,,,,,,,,,,,,,,,,
phpunit,2015,closed,-,-,-,2,13,9,,,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,opened,2016-01-23 21:43:42,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,title,2016-01-23 21:43:42,00:00,1,,,"b""b' Misleading error message when whitelist configuration contains paths that do not exist'""",,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,body,2016-01-23 21:43:42,00:00,,,1,b'b\' Hello: Suppose the following section in :  Which did work fine until I moved all my code from to  . At that point, when I did run the tests to check everything," phpunit generated the following error:  It would be much nicer to have another error such as ""Whitelist directory doesn\\\'t exist"" instead so it is easier to spot. I\\\'m posting this here instead of php-code-coverage because the error is generated over here: url If however", you need the issue to be created in the php-code-coverage repo let me know and I\\\'ll create it over there.  Greetings.  # TL;DR:  Check whether the directory listed in your tag exists. If it does not, correct your  so that it points to the correct folder.\'',,,,,,,,,,,,,,,
phpunit,2049,closed,1,2016-01-23 21:43:42,1195.87,,,1,"b'b"" Yeah", i\'am using 5.5.0and the same problem to me too :( my   then i execute then i receive please," how can i do fix this? Thanks!""'",,,,,,,,,,,,,,,,,
phpunit,2049,closed,2,2016-01-23 21:43:42,202.62,,1,,"b""b' you should whitelist files which contain logic (which you want to test", not your test files)," your whitelist should be  '""",,,,,,,,,,,,,,,,,
phpunit,2049,closed,3,2016-01-23 21:43:42,808.05,,,1,"b""b' Thats ok", now I figured out .... but any one of my tests are not executed .... in the console it say to me: No tests executed!  Probably I made some mistake on my paths!  Anyway," thank you for the help!'""",,,,,,,,,,,,,,,,,
phpunit,2049,closed,4,2016-01-23 21:43:42,583.45,,1,,"b'b"" I have the same problem (phpunit version 5.6)  My  configuration is:   And I am getting \' No whitelist configured"," no code coverage will be generated\'.  ""'",,,,,,,,,,,,,,,,,,
phpunit,2049,closed,5,2016-01-23 21:43:42,1301.03,,,1,"b'b"" Same problem for me.  Bizarrely", same config works just fine on a Windows machine running PHP 7.0," but not on a Linux machine running PHP 5.5.  PHPUnit version is 5.7.16 Not sure if it\'s relevant but using PHPStorm IDE V 2016.3 Xdebug is installed in both environments Tests run just fine without coverage (both environments)""'",,,,,,,,,,,,,,,,,
phpunit,2049,closed,6,2016-01-23 21:43:42,93.45,,,1,"b'b"" Same here my  has:  and I\'m running PHP7.1 on ubuntu 16.04 in docker", phpunit version 6.0.10.  Getting  . I\'ve confirmed I\'m reading in the right  file by changing the colors setting and that is taking effect.  Any help or ideas for what else to check would be appreciated," and if I can provide any more info let me know :)""'",,,,,,,,,,,,,,,,,
phpunit,2049,closed,7,2016-01-23 21:43:42,1177.97,,1,,"b""b' Same issue as @katzien '""",,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,8,2016-01-23 21:43:42,1263.83,1,,,"b'b"" I got this error with a misconfigured directory within whitelist. Maybe it\'s just a matter of inappropriate wording of the error message.""'",,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,9,2016-01-23 21:43:42,31.47,,,1,"b'b"" I fixed it! As @elmar-hinz said"," it was a misconfigured path. The thing to remember is to make sure the path in whitelist is relative to the  file! D\'oh. Sounds obvious now :D""'",,,,,,,,,,,,,,,,,,
phpunit,2049,closed,10,2016-01-23 21:43:42,1.57,,1,,b'b\' @elmar-hinz Yeah," I guess would be nice if the message was something like ""invalid whitelist path"" or something"," rather than ""no whitelist configured"" but oh well :)\''",,,,,,,,,,,,,,,,,
phpunit,2049,closed,11,2016-01-23 21:43:42,74.07,,,1,b'b\' @katzien And that is exactly what this issue is about: you MUST configure correctly your whitelist," however an indication about the correct folder would be nice(r).  I will try to edit the first post so that (one of) the ""solutions"" to this problem becomes more obvious.  Greetings.\''",,,,,,,,,,,,,,,,,,
phpunit,2049,closed,closed,2017-03-31 14:26:04,1002.37,2,4,7,,,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,reopened,2017-03-31 15:01:10,35.1,2,4,7,,,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,closed,2017-04-01 08:23:27,1042.28,2,4,7,,,,,,,,,,,,,,,,,,,,
phpunit,2049,closed,-,-,-,2,4,7,,,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,opened,2016-05-10 11:59:52,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,title,2016-05-10 11:59:52,00:00,,1,,"b""b' Phpunit Blank'""",,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,body,2016-05-10 11:59:52,00:00,,1,,"b""b' Phpunit blank whatever the command are",  should return the version instead of blank, after reading minimum requirement in docs, i know problem are it did not meet minimum php version, and probably other php ext requirement," PHPunit should return exception detailing what causing error instead of blank in the command-line. url  it should display Mockery not found error in cli instead of blank'""",,,,,,,,,,,,,,
phpunit,2157,closed,closed,2016-05-16 16:42:57,283.08,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,reopened,2016-05-16 16:51:11,8.23,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,1,2016-05-10 11:59:52,1116.52,,1,,"b""b' Can you please provide information on how you obtained PHPUnit", how you installed it," and how you executed it?'""",,,,,,,,,,,,,,,,,
phpunit,2157,closed,2,2016-05-10 11:59:52,1037.58,,1,,"b""b' i tried executing the phar file using  recently upgraded to php 7 still blank'""",,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,3,2016-05-10 11:59:52,318.7,,1,,"b""b' Are you using Suhosin?'""",,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,4,2016-05-10 11:59:52,550.62,,1,,"b""b' Not '""",,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,closed,2017-02-06 14:35:13,1304.03,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,2157,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,opened,2016-06-10 02:24:37,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,title,2016-06-10 02:24:37,00:00,,1,,"b""b' Test & Fix for Windows Spaces'""",,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,body,2016-06-10 02:24:37,00:00,,1,,b'b\' I noticed when running a test as an isolated process on Windows 10," there is an error: ""\\\'C:\\\\Program\\\' is not recognized as an internal or external command"," operable program or batch file."" I researched this and found it is an issue with proc_open and spaces", and the solution for Windows is to add a set of double quotes around the entire command.  Source: url  I manually tested this, and created a unit test as well. \'',,,,,,,,,,,,,,,
phpunit,2211,closed,closed,2016-06-10 14:23:40,719.05,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,1,2016-06-10 02:24:37,748.83,,1,,"b""b' Updated test to use stub data"," so test can work on Linux CI.'""",,,,,,,,,,,,,,,,,,
phpunit,2211,closed,reopened,2016-06-10 14:53:27,29.78,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,2,2016-06-10 02:24:37,862.28,,,1,"b'b"" I have merged the fix from your pull request in ade4756f6cf9d986f3716d55a85e2f662ac5ff8c"," thank you for your contribution. I have verified that your patch works by running PHPUnit\'s own test suite on Windows 10 with PHP 7 at  . Without the patch there are a lot more test failures (basically all PHPT tests fail) than with the patch. I have not merged your tests because the PHPUnit test suite currently cannot be successfully run on Windows anyway.""'",,,,,,,,,,,,,,,,,,
phpunit,2211,closed,closed,2016-06-11 05:15:44,862.28,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,3,2016-06-10 02:24:37,1001.12,,,1,"b""b' @sebastianbergmann First of all", thank you!Regarding the test, the test is actually agnostic of the actual system it runs on," and passes on Linux this is the reason I stubbed the the Runtime class. I think the test is still useful to ensure the logic of escaping the string in the extra quotes remains if someone else edits the files. I might suggest moving the comment from the test file into the file at least so anyone else who works on it knows why the extra quotes :) '""",,,,,,,,,,,,,,,,
phpunit,2211,closed,4,2016-06-10 02:24:37,1004.4,,,1,"b'b"" PS: Would you be interested in contributions to make the test suite work on Windows? I have contributed to a few other projects soley in  tests. I\'m a test engineer so it\'s kind of my thing ;) ""'",,,,,,,,,,,,,,,,,,,
phpunit,2211,closed,-,-,-,0,3,3,,,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,opened,2016-09-08 09:24:18,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,title,2016-09-08 09:24:18,00:00,,1,,"b""b' Question: how to run with filter test"," that depends on other test'""",,,,,,,,,,,,,,,,,,
phpunit,2292,closed,body,2016-09-08 09:24:18,00:00,,1,,"b""b' I have on some tests.There is option which might be used to run exactly one test.If this one test depends on some other"," it will be skipped. Is there any option to automatically get and run all chain to run requested by filter test?'""",,,,,,,,,,,,,,,,,,
phpunit,2292,closed,closed,2017-04-13 07:30:11,1325.88,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,1,2016-09-08 09:24:18,575.43,,1,,"b""b' What was the solution here?'""",,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,2,2016-09-08 09:24:18,321.7,,1,,"b""b' AFAIK there is no solution for this.'""",,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,3,2016-09-08 09:24:18,319.98,,1,,"b""b' Ok.. thought you found a solution since you closed the issue. Never mind.'""",,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,reopened,2017-08-28 05:51:05,1340.9,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,4,2016-09-08 09:24:18,30.75,1,,,"b""b' This is not a discussion or support forum"," sorry.'""",,,,,,,,,,,,,,,,,,
phpunit,2292,closed,closed,2017-08-28 06:12:10,21.08,1,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,2292,closed,5,2016-09-08 09:24:18,93.68,,,1,"b""b' No but if two people could work together to find a solution to an issue they both encountered", and post the results here.. other people might find the issue," see the solution and be happy'""",,,,,,,,,,,,,,,,,
phpunit,2292,closed,-,-,-,1,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,opened,2016-12-06 11:18:41,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,title,2016-12-06 11:18:41,00:00,,1,,"b""b' TravisCI reports progress with one dot per line'""",,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,body,2016-12-06 11:18:41,00:00,,1,,"b'b"" I noticed that recently PHPUnit started reporting progress in TravisCI with one dot per line. It\'s not an important issue", but that makes reading the log a bit harder.  For instance: before: url  after: url Is this a TravisCI issue," a PHPUnit issue or an issue with the integration of the two?""'",,,,,,,,,,,,,,,,,
phpunit,2388,closed,1,2016-12-06 11:18:41,0.7,,1,,"b""b' Cross-reference: url '""",,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,2,2016-12-06 11:18:41,121.27,,1,,"b""b' I cannot reproduce this"," see url  for instance.  Are you sure that you did not change anything other than PHPUnit?'""",,,,,,,,,,,,,,,,,,
phpunit,2388,closed,3,2016-12-06 11:18:41,23.33,,1,,"b""b' Progress shown correctly:   date: 2016-11-30T17:26:16Z   commit: b0fa09b67d37bc47b6fa801779fde9a634bd18ae   url  Progress reported with one dot per line:   date: 2016-12-01T17:14:12Z   commit: ea3a119922e48ec631c34dcca4a67d5126a2bda1   url Changes between the commits: url As you can see"," the only change has nothing to do with phpunit or travis'""",,,,,,,,,,,,,,,,,,
phpunit,2388,closed,4,2016-12-06 11:18:41,29.98,,,1,"b""b' Thank you for your report.  Please provide a **minimal**", **self-contained**, reproducing test case that shows the problem you are reporting.  Without such a minimal, self-contained," reproducing test case I will not be able to investigate this issue.'""",,,,,,,,,,,,,,,
phpunit,2388,closed,closed,2016-12-06 14:13:58,175.28,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,reopened,2016-12-06 14:14:01,0.05,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,5,2016-12-06 11:18:41,37.42,,1,,"b'b"" I wish I had the possibility to give some more detail", but I don\'t really know how could I do that.  The PHP version is unchanged, the PHPUnit version is unchanged, the changes to our code are not relevant, I simply don\'t know what could lead to this problem, except some changes in the Travis environment.  That\'s why I\'m going to close this issue here," and hopefully solve this problem in the [TravisCI]url  bug report.  (I just hoped someone else already saw this problem)""'",,,,,,,,,,,,,
phpunit,2388,closed,closed,2016-12-06 14:51:23,37.37,0,6,1,,,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,6,2016-12-06 11:18:41,29.55,,,1,"b""b' How are you invoking PHPUnit? Could it be related to url '""",,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,7,2016-12-06 11:18:41,39.02,,,1,"b'b"" Yes", maybe: we call phpunit via composer: see []url  and []url  but we\'ve been doing that [since October]url  but tests was running fine since a few days ago (eg url  ), so I\'m not 100% sure...  BTW, looking at the TravisCI log, we can see that composer version changed from version 1.2.2 to 1.2.3," so that may be the cause.  I\'ll open another PR on composer issue tracker :wink:""'",,,,,,,,,,,,,,
phpunit,2388,closed,8,2016-12-06 11:18:41,43.68,,,1,"b""b' Others have this problem with composer: see url  and url Thanks for help!'""",,,,,,,,,,,,,,,,,,,
phpunit,2388,closed,-,-,-,0,6,4,,,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,opened,2017-01-26 15:42:40,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,title,2017-01-26 15:42:40,00:00,1,,,"b""b' Weird error when trying to run from but does not exist'""",,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,body,2017-01-26 15:42:40,00:00,,1,,"b""b' ## Expected ## Actual '""",,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,1,2017-01-26 15:42:40,1260.52,,1,,"b'b"" I did find the problem but i don\'t know create a test for simulate the issue. I need create a test for send a pr. Tip for solution the issue :  Class : Class PHPUnit_Util_Fileloader Method :  public static function checkAndLoad($filename) The problem reason  : There are one class called  My solution : ""'",,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,2,2017-01-26 15:42:40,126.72,,1,,b'b\' Actually, the **Expected** section shown above is wrong, too," as it is missing the PHPUnit ""header"". It should be \''",,,,,,,,,,,,,,,,
phpunit,2448,closed,closed,2017-03-31 16:04:10,21.5,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,reopened,2017-04-01 13:27:26,1283.27,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,closed,2017-04-02 04:31:14,903.8,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,2448,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,opened,2017-01-29 08:13:17,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,title,2017-01-29 08:13:17,00:00,,1,,"b""b' Test failures with PHP 7.1.2-dev'""",,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,body,2017-01-29 08:13:17,00:00,,1,,"b""b' ## PHP 7.1.2-dev ## PHP 7.1.1 '""",,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,1,2017-01-29 08:13:17,82.6,,1,,"b""b' Yes"," seems related to url '""",,,,,,,,,,,,,,,,,,
phpunit,2454,closed,2,2017-01-29 08:13:17,1027.53,,1,,"b""b' which version of phpunit and which commit of php-master do you use? I try to execute with phpunit 5.7.9 and -src f007e9f"," but if fails with the folloing error:  '""",,,,,,,,,,,,,,,,,,
phpunit,2454,closed,3,2017-01-29 08:13:17,271.33,,1,,"b""b' @jhdxr Your issue is different from this one and has been taken care of in #2453.'""",,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,closed,2017-01-30 07:14:45,1381.47,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,reopened,2017-01-30 07:14:48,0.05,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,4,2017-01-29 08:13:17,20.22,,1,,"b'b"" @sebastianbergmann @jhdxr wrote the commit that is breaking the XML formatting expected in your tests ... he\'s just been hit by the inheritance bugfix while trying to test his solution to that ...  There needs to be a tag in just a few days", if this XML formatting issue is not resolved," it will need to be reverted from all branches ...""'",,,,,,,,,,,,,,,,,
phpunit,2454,closed,5,2017-01-29 08:13:17,10.8,1,,,"b""b' @krakjoe Thank you for clarification.  @jhdxr Sorry for the confusion. Make sure that Composer installs the latest version of so that you are not affected by the inheritance bug.'""",,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,6,2017-01-29 08:13:17,201.12,,1,,"b""b' url  should have a test case + possibly fix for this according to the author'""",,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,closed,2017-01-30 13:22:07,367.32,1,7,0,,,,,,,,,,,,,,,,,,,,
phpunit,2454,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,,,
phpunit,2482,closed,opened,2017-02-07 04:17:00,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2482,closed,title,2017-02-07 04:17:00,00:00,,1,,"b""b' PHPUnit 6 upgrade fails 5.7 passing tests'""",,,,,,,,,,,,,,,,,,,
phpunit,2482,closed,body,2017-02-07 04:17:00,00:00,,1,,"b'b"" As soon as I attempt to upgrade to PHPUnit 6 (and quickly do necessary changes to make it run)"," the following test starts to fail in Doctrine ORM: url Here\'s the output:   ""'",,,,,,,,,,,,,,,,,,
phpunit,2482,closed,1,2017-02-07 04:17:00,149.17,,,1,"b""b' Thank you for your report.  Please provide a **minimal**", **self-contained**, reproducing test case that shows the problem you are reporting.  Without such a minimal, self-contained," reproducing test case I will not be able to investigate this issue.'""",,,,,,,,,,,,,,,
phpunit,2482,closed,closed,2017-02-07 06:46:10,149.17,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2482,closed,reopened,2017-02-07 06:46:29,0.32,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2482,closed,2,2017-02-07 04:17:00,914.38,,1,,"b'b"" @sebastianbergmann This issue can be closed", however I\'m adding the reasoning of the issue here. I only found it after trying to reproduce in a minimal, self-contained test case:  EntityManagerDecorator is an abstract class that delegates all calls to EntityManagerInterface. Some methods (such as clear(), persist()) do not return the output from the wrapped EntityManagerInterface instance. This leads to pass in PHPUnit 5.7 but fail on PHPUnit 6.0 (basically,"  version 6 addressed a bug from 5.7).""'",,,,,,,,,,,,,,,
phpunit,2482,closed,closed,2017-02-07 22:00:33,914.07,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,2482,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,opened,2017-02-07 15:29:05,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,title,2017-02-07 15:29:05,00:00,,1,,"b'b\' Travis CI fails with 6.x to The command "" coverage-clover "" exited with 1\''",,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,body,2017-02-07 15:29:05,00:00,,1,,"b""b' This seems to happen with versions and not with  "," Travis CI builds below  [phpunit 6.x]url  Fail  [phpunit 5.x]url  Success  Any idea why why this happen ?'""",,,,,,,,,,,,,,,,,,
phpunit,2488,closed,closed,2017-02-07 15:31:25,2.33,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,reopened,2017-02-07 15:31:27,0.03,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,1,2017-02-07 15:29:05,3.82,,1,,"b""b' The test runner now exits with (instead of  ) when all tests pass but there are warnings (see url '""",,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,closed,2017-02-07 15:32:54,1.45,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,2488,closed,2,2017-02-07 15:29:05,2.52,,,1,"b""b' Aah"," ok that explains that thanks.'""",,,,,,,,,,,,,,,,,,
phpunit,2488,closed,3,2017-02-07 15:29:05,1034.77,,1,,"b""b' @sebastianbergmann I get the same warning"," is this supposed to happen?'""",,,,,,,,,,,,,,,,,,
phpunit,2488,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,opened,2017-02-07 17:15:55,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,title,2017-02-07 17:15:55,00:00,,1,,"b""b' Version 5.7.10 coverage is 3.5 times slower than 5.7.9'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,body,2017-02-07 17:15:55,00:00,,1,,"b""b' PHP version: 7.1.1 PHPUnit version: 5.7.10  By using version 5.7.10 the generation of coverage (in this case html"," but I think it does not matter) is slowed down by a factor of 3.5 in comparison to 5.7.9. 5.7.10:   5.7.9: '""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,1,2017-02-07 17:15:55,726.08,,1,,"b""b' Is there a speed difference when no code coverage report is generated?'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,2,2017-02-07 17:15:55,196.47,,1,,"b""b' There is no significant difference. is taking 1.33 minutes"," is taking 1.29 minutes.'""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,3,2017-02-07 17:15:55,6.15,,,1,"b""b' Thank you. It would seem to be related to code coverage.  This [should]url  have been reported on the [php-code-coverage]url  project.'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,closed,2017-02-08 08:44:37,928.7,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,4,2017-02-07 17:15:55,16.23,,1,,"b""b' At first I thought that"," too. But in both cases phpunit-code-coverage version 4.0.5 was used. So I concluded this is an issue with phpunit.'""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,reopened,2017-02-08 09:24:41,40.07,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,5,2017-02-07 17:15:55,24.03,,1,,"b""b' In that case it probably belongs here.'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,6,2017-02-07 17:15:55,297.35,,1,,"b""b' I cannot reproduce this.  Please provide a **minimal**", **self-contained**, reproducing test case that shows the problem you are reporting.  Without such a minimal, self-contained," reproducing test case I will not be able to investigate this issue.'""",,,,,,,,,,,,,,,
phpunit,2489,closed,7,2017-02-07 17:15:55,71.05,,1,,"b""b' I just tried version 5.7.9 ... slow aswell. We run tests multiple times per day. First occurance of this was on Feb"," 6. Maybe that helps. '""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,8,2017-02-07 17:15:55,9.38,,1,,"b""b' What would help would be knowing the last version that is not slow and the first version that is slow.'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,9,2017-02-07 17:15:55,28.53,,1,,"b""b' Well for me the last version which was not slow was "," as shown above. But maybe the perfomance decreased before but not as significantly.'""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,10,2017-02-07 17:15:55,14.6,,1,,"b'b"" Yes", that is possible. I think we should focus on the difference between 5.7.9 and 5.7.10. Right now I\'m testing 5.7.5 with -code-coverage 4.0.4 which is the last version I have logs from with a short runtime to make sure it is nothing else.  Update: Slow as well o0 ... @mbaeuerle: Are you also using and testing Symfony? Maybe they have changed something.  Another question @mbaeuerle: If you run phpunit 5.7.9 now with PHP 7.1.1," is it still faster?""'",,,,,,,,,,,,,,,,,
phpunit,2489,closed,11,2017-02-07 17:15:55,1073.3,,,1,"b""b' Good news (at least for phpunit ;) ). This PR from Symfony fixes the issue for us:  url Seems to be unrelated to phpunit.'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,12,2017-02-07 17:15:55,2.83,,1,,"b""b' @sawmurai I was using PHP 7.1.1 for all tests from the beginning. The tests belong to a laravel application"," which uses some symfony components. For the tests I specifically just changed the phpUnit version from 5.7.9 to 5.7.10 and did not change any other aspect of the dependencies.'""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,13,2017-02-07 17:15:55,25.0,,1,,"b""b' Is laravel depending on the FramworkBundle of Symfony? If so you could try to limit that to version 3.2.2 as well. Maybe that resolves the issue for you"," too.'""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,14,2017-02-07 17:15:55,66.95,,1,,"b""b' Laravel is just depending on some packages from symfony and it seems they are already on 3.2. From composer:  I just retried the tests", just changing the version of phpUnit," and I still get the same results as before. '""",,,,,,,,,,,,,,,,,
phpunit,2489,closed,15,2017-02-07 17:15:55,6.47,,1,,"b""b' 3.2 will use the current version which is 3.2.3 and which contains the bug. Can you try and replace ~3.2 with 3.2.2 and run the tests again?'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,16,2017-02-07 17:15:55,57.9,,1,,"b""b' I just tried that", but with no success," still slow with phpUnit 5.7.10 and faster with 5.7.9'""",,,,,,,,,,,,,,,,,
phpunit,2489,closed,17,2017-02-07 17:15:55,1.53,1,,,"b""b' Hm"," that is weird. Can you upload your  so I can compare it to ours? Maybe it is some other dependency. '""",,,,,,,,,,,,,,,,,,
phpunit,2489,closed,18,2017-02-07 17:15:55,1233.43,,1,,"b'b"" Maybe the slowdown has something to do with changing the coverage strategy? I don\'t know the details of the fix for issue #2462 (which is the only change from 5.7.9 to 5.7.10) but our code coverage changes between the two versions. 5.7.9:  5.7.10: ""'",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,19,2017-02-07 17:15:55,22.33,,1,,b'b\' The fix for #2462 is comprised of two commits, c9fb2d0b48755613513124516dd21dfae9fd3d08 and 631351297cd5ec850f81aecfc3ac3f3cf7c778c9. As far as I can see, these are the only changes related to code coverage between PHPUnit 5.7.9 and PHPUnit 5.7.10.  The only thing these two commits intended to change was to not fill the whitelist when one is configured but no code coverage report is to be generated, for instance when is used.  Looking at your screenshots, @mbaeuerle," the report you get with PHPUnit 5.7.9 looks wrong to me as no details are shown for  . This would be correct if you have in your  . should also be the default value for this configuration option.  The report you get with PHPUnit 5.7.10 looks correct to me as there are details shown for  . ""Correct"" assumes", of course, that you have configured in your (and that is not covered by any test).  Processing uncovered, whitelisted files to show details for them in the code coverage report is additional work that is otherwise not performed. This additional work could explain the slowdown.  Can you please share your file\\\'s section?\'',,,,,,,,,,,
phpunit,2489,closed,20,2017-02-07 17:15:55,260.95,1,,,"b'b"" There is something going on with the parameter. In Laravel it is set to by default:  I haven\'t changed the parameter when switching phpUnit versions and running the coverage. But for some reason in 5.7.9 not tested files are not processed but in 5.7.10 they are.  Now comes the odd part: If I use on both versions", untested files are processed both times.  You can see the differences in my repo where I created two fresh Laravel apps," the only difference is the version of phpUnit in : url  url ""'",,,,,,,,,,,,,,,,,
phpunit,2489,closed,21,2017-02-07 17:15:55,232.53,,,1,"b""b' The option has a positive performance impact as noted [here]url  But due to a regression phpunit does not pass this option from the xml configuration file to  . My PR #2505 should fix that.'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,closed,2017-02-18 18:39:46,555.08,2,18,3,,,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,22,2017-02-07 17:15:55,41.17,,,1,"b""b' @sebastianbergmann thanks for the quick merge. Can you please tag  ?'""",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,23,2017-02-07 17:15:55,1091.47,,,1,"b'b"" Thanks for the fix ! It\'s working fine now again!""'",,,,,,,,,,,,,,,,,,,
phpunit,2489,closed,24,2017-02-07 17:15:55,1255.52,,,1,"b'b"" Oh god", thanks for this! I\'ve been trying to figure out for the last week why my code coverage was taking an hour to generate," so much faster now. \\xf0\\x9f\\x8e\\x89 ""'",,,,,,,,,,,,,,,,,
phpunit,2489,closed,-,-,-,2,18,6,,,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,opened,2017-02-20 09:36:05,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,title,2017-02-20 09:36:05,00:00,,1,,"b""b' Missing typehints on PHPUnit_Framework_MockObject_MockObject'""",,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,body,2017-02-20 09:36:05,00:00,,1,,"b'b"" I don\'t have autocomplete support for the PHPUnit_Framework_MockObject_MockObject return type things like..   Will work but my phpstan complains that the method function does not exists i also don\'t have any auto completion in my ide. It would be nice if the available methods would be documented in the interface.  This is for phpunit 6""'",,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,1,2017-02-20 09:36:05,2.8,,,1,"b""b' Use and your IDE will be happy.'""",,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,closed,2017-02-20 09:38:53,2.8,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,2,2017-02-20 09:36:05,1212.63,,1,,"b'b"" That won\'t work it does not have completion on or as they are not in the returned interface.  I notice now that it\'s in it\'s own repo btw so the issue probably belongs there. url  ""'",,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,3,2017-02-20 09:36:05,146.15,,1,,"b""b' This [should]url  have been reported on the [phpunit-mock-objects]url  project.'""",,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,reopened,2017-02-21 08:17:40,1358.78,0,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,4,2017-02-20 09:36:05,832.73,,1,,"b""b' I use url  '""",,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,closed,2017-03-18 05:24:09,1266.48,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2507,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,opened,2017-03-10 16:27:56,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,title,2017-03-10 16:27:56,00:00,,1,,"b'b""   doesn\'t display version when running unsupported PHP""'",,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,body,2017-03-10 16:27:56,00:00,1,,,"b'b"" | Q       | A  PHPUnit version   | Unknown", probably 5.7.x | PHP version   | HHVM 3.18.1 | Installation Method | Composer  When running an unsupported version of PHP, the command becomes useless because it omits outputting the current version of PHPUnit.   We\'re seeing a problem on Travis CI where we\'re getting the error when running HHVM builds. While attempting to debug the problem," we added but it fails to report the PHPUnit version.""'",,,,,,,,,,,,,,,,
phpunit,2563,closed,1,2017-03-10 16:27:56,19.02,1,,,"b""b' That is unfortunate but something that cannot be helped. The version information is stored in a class ( ). This class can only be loaded after it has been established that PHPUnit is running on a supported version of PHP. Otherwise we might run into a syntax error as could be using syntax not supported on the version of PHP trying to run PHPUnit.'""",,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,closed,2017-03-10 16:46:57,19.02,2,1,0,,,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,2,2017-03-10 16:27:56,4.13,,1,,"b""b' Can the version information be moved into a non-PHP file and populated during the release build? Then the command can use this file instead of reading a PHP file which might not get parsed.'""",,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,reopened,2017-03-10 16:51:16,4.32,2,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,3,2017-03-10 16:27:56,2.27,,,1,"b""b' Good point. However", I am not comfortable introducing such a change in the or branches. Not yet," at least. I will need to think about this.'""",,,,,,,,,,,,,,,,,
phpunit,2563,closed,4,2017-03-10 16:27:56,1.18,,1,,"b""b' Such a change", if made," would also remove the need for this [hack]url '""",,,,,,,,,,,,,,,,,
phpunit,2563,closed,5,2017-03-10 16:27:56,21.88,,1,,"b""b' Proof of Concept: '""",,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,closed,2017-05-02 07:17:03,865.78,2,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,2563,closed,6,2017-03-10 16:27:56,844.6,,,1,"b'b"" I did not feel comfortable with the approach shown in url  and have now implemented a solution for this that should work for the PHAR distribution of PHPUnit.  I understand that having multiple versions of PHP installed (I", for instance, have PHP 5.6, PHP 7.0, PHP 7.1, and PHP 7.2 installed on my machine) is not uncommon," but I do not want to add additional complexity to PHPUnit because of this. If you are able to install PHPUnit using Composer (which does check PHPUnit\'s compatibility with the version of PHP that is used to run  ) then you are on your own when you use different versions of PHP when you run and  .""'",,,,,,,,,,,,,
phpunit,2563,closed,-,-,-,2,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,opened,2017-05-16 19:32:36,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,title,2017-05-16 19:32:36,00:00,,1,,"b""b' Make agument types consistent with implementation and underlying function argument types'""",,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,body,2017-05-16 19:32:36,00:00,,1,,"b""b' The types of aguments in methods and corresponding function aliases are declared as however the underlying method allows them to be  .  Static code analysis of the tests using these assertions with [phpstan]url  produces false positives like:  '""",,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,1,2017-05-16 19:32:36,7.2,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94 | Complexity \\xce\\x94  []url []url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,closed,2017-05-16 20:58:18,85.7,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,reopened,2017-05-17 19:29:36,1351.3,0,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,2,2017-05-16 19:32:36,15.58,,,1,"b""b' Merged manually"," thanks.'""",,,,,,,,,,,,,,,,,,
phpunit,2680,closed,closed,2017-05-17 19:55:23,25.78,0,2,2,,,,,,,,,,,,,,,,,,,,
phpunit,2680,closed,-,-,-,0,2,2,,,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,opened,2017-05-28 10:34:38,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,title,2017-05-28 10:34:38,00:00,,1,,"b""b' Add new constraint functions'""",,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,body,2017-05-28 10:34:38,00:00,,1,,"b""b' Added the function Added the function Added the function Added the function Added the function'""",,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,1,2017-05-28 10:34:38,5.33,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url   -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,2,2017-05-28 10:34:38,8.12,1,,,"b""b' @sebastianbergmann Now that PHPUnit has switched to namespaces", I think it would be a good idea, but another breaking change, to move the functions into a namespace.  EDIT: oops," issue closed by error.'""",,,,,,,,,,,,,,,
phpunit,2695,closed,closed,2017-05-28 10:48:05,13.45,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,reopened,2017-05-28 10:48:08,0.05,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,closed,2017-05-28 12:11:03,82.92,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2695,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,opened,2017-10-15 14:17:45,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,title,2017-10-15 14:17:45,00:00,,1,,"b""b' Added assertResourceType assertion'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,body,2017-10-15 14:17:45,00:00,,1,,"b""b' Implements #2802.'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,1,2017-10-15 14:17:45,6.15,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94 | Complexity \\xce\\x94  []url []url []url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,2,2017-10-15 14:17:45,96.98,,1,,"b""b' what about not adding new assertion"," but change existing one? eg  '""",,,,,,,,,,,,,,,,,,
phpunit,2808,closed,3,2017-10-15 14:17:45,687.0,,1,,"b""b' @keradus That would also work. However", I think I prefer a specific," new assertion method for this.'""",,,,,,,,,,,,,,,,,
phpunit,2808,closed,4,2017-10-15 14:17:45,363.18,1,,,"b'b"" Then there is an issue that it won\'t be clear that one shall:  or just:  And for that"," you will also have different console output for that. I don\'t like confusing users ;)""'",,,,,,,,,,,,,,,,,,
phpunit,2808,closed,5,2017-10-15 14:17:45,1113.1,,1,,"b'b""  could", and IMO should," internally call first to ensure that it\'s a resource.""'",,,,,,,,,,,,,,,,,
phpunit,2808,closed,6,2017-10-15 14:17:45,0.38,,1,,"b""b' Wondering  this needs to take (PHP 7.2) into account.'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,7,2017-10-15 14:17:45,172.85,,1,,"b'b""  but that\'s the thing", it\'s implementation detail. if so, it shall be described that assertion is checking not only if type is matching," but also if it\'s a resource in first place""'",,,,,,,,,,,,,,,,
phpunit,2808,closed,8,2017-10-15 14:17:45,937.1,,1,,"b""b'  @keradus", I renamed assertion to  ," what do you think about it?'""",,,,,,,,,,,,,,,,,
phpunit,2808,closed,9,2017-10-15 14:17:45,71.37,,1,,"b""b' Tests failure looks unrelated.'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,10,2017-10-15 14:17:45,263.67,,1,,"b'b"" @kejwmen They are"," see url  Hopefully I\'ll have some time soon to look into this.""'",,,,,,,,,,,,,,,,,,
phpunit,2808,closed,11,2017-10-15 14:17:45,1384.88,,,1,"b""b' Looks like tests are ok"," feedback implemented (thanks @keradus).  Is it mergable?'""",,,,,,,,,,,,,,,,,,
phpunit,2808,closed,12,2017-10-15 14:17:45,934.5,,,1,"b""b' and thanks again @keradus ;)'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,13,2017-10-15 14:17:45,778.27,,1,,"b""b' This branch has conflicts that must be resolved'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,14,2017-10-15 14:17:45,1324.03,,1,,"b""b' What is the status of this?'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,15,2017-10-15 14:17:45,522.72,,1,,"b""b' Closed in favour of #3298.'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,closed,2018-09-08 14:33:56,16.18,1,13,3,,,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,reopened,2018-09-08 14:37:38,3.7,1,13,3,,,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,16,2017-10-15 14:17:45,4.62,1,,,"b""b' Closed this in favour of #3298 was a bad idea.'""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,17,2017-10-15 14:17:45,16.4,,1,,"b""b' After fixing the merge conflicts of this pull request and reviewing the code I think is not much of an enhancement to Maybe we should close this pull request and its regarding issue #2802 '""",,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,18,2017-10-15 14:17:45,1.62,,,1,"b""b' I must say that I agree with @sebastianfeldmann.  Thank you for your contribution. I appreciate the time you invested in preparing this pull request. However"," I have decided not to merge it.'""",,,,,,,,,,,,,,,,,,
phpunit,2808,closed,closed,2018-09-08 14:56:34,18.93,2,14,4,,,,,,,,,,,,,,,,,,,,
phpunit,2808,closed,-,-,-,2,14,4,,,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,opened,2017-10-15 20:55:39,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,title,2017-10-15 20:55:39,00:00,1,,,"b""b' expectException always checks Exception message'""",,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,body,2017-10-15 20:55:39,00:00,,1,,"b""b' | Q       | A  PHPUnit version   | 5.7.23 | PHP version   | 7.1.10 | Installation Method | PHAR  <!-Please fill in this template according to your issue. Please keep the table shown above at the top of your issue. Please post code as text (using proper markup). Do not post screenshots of code. For support request or how-tos", visit url  Otherwise," replace this comment by the description of your issue. -With this new version (5.7.23) it is mandatory to define the exception message when asserting an exception. With the previous version (5.7.22) it was not needed.  Code:   Before (5.7.22):   After (5.7.23):   Possible related code: url  url Prof PR of failing builds:  url And it is failing on other Sonata projects that test exceptions'""",,,,,,,,,,,,,,,,,
phpunit,2809,closed,1,2017-10-15 20:55:39,13.43,,1,,"b""b' Closing"," it is on our side. url '""",,,,,,,,,,,,,,,,,,
phpunit,2809,closed,closed,2017-10-15 21:09:05,13.43,1,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,reopened,2017-10-15 21:10:48,1.72,1,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,2,2017-10-15 20:55:39,2.8,,1,,"b""b' Not really sure if it is still a BC break on phpunit or a bug fixing. Because that code worked with the old version. If I remove that interface and go directly with Phpunit testcase it works again...'""",,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,3,2017-10-15 20:55:39,388.08,,1,,"b""b' 567ca23a4c62e8b9bcefae0b39b5f33e3853c2c2 and 182941e21951a3fa6d1cff158319746a1f8d53f4 are backward compatible bug fixes. You only ran into an issue because of your layer on top of PHPUnit.'""",,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,closed,2017-10-16 03:39:58,389.17,1,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,2809,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,opened,2017-10-29 10:39:46,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,title,2017-10-29 10:39:46,00:00,,1,,"b""b' Test class loaded during data provider execution is not discovered'""",,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,body,2017-10-29 10:39:46,00:00,,1,,"b'b"" | Q       | A  PHPUnit version   | 6.4.3 | PHP version   | 7.1.11 | Installation Method | Composer  Having 2 test cases: and running them will result with executing only  .  It\'s not even listed:  After removing or moving this line to both classes will be executed. The problem is only with data provider.""'",,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,closed,2017-11-10 09:12:57,1353.18,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,reopened,2017-11-14 15:21:37,368.67,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,1,2017-10-29 10:39:46,282.37,,1,,"b""b' #2834 was reverted due to #2859'""",,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,2,2017-10-29 10:39:46,225.55,,1,,"b""b' So I use my test case from the first solution plus the test from url  and try again"," right?'""",,,,,,,,,,,,,,,,,,
phpunit,2833,closed,3,2017-10-29 10:39:46,21.65,,1,,"b""b' Yes"," please.'""",,,,,,,,,,,,,,,,,,
phpunit,2833,closed,4,2017-10-29 10:39:46,853.35,,,1,"b""b' at PHP CS Fixer", we come across this issue as well. it will be great to addition to have this solved! would be really great to have it solved :+1: big :+1: for one actually working on it," we are with you @kubawerlos ! '""",,,,,,,,,,,,,,,,,
phpunit,2833,closed,closed,2017-11-27 14:13:19,1371.7,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,2833,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,opened,2018-02-14 23:39:48,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,title,2018-02-14 23:39:48,00:00,,1,,"b""b' Unsupported PHPT SECTION-throws unhandled exception'""",,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,body,2018-02-14 23:39:48,00:00,1,,,"b""b' I apologize for not being super familiar with the code", but both Ubuntu and Debian are hitting fatal DEP8 tests due to:  url In the prior PHPUnit, 5.4.6, we saw:   but now we get:   Which causes the package self-tests to fail (this is for php-cache-lite). My understanding is that this is internal to PHPUnit, and not expected to be handled by the caller," right?'""",,,,,,,,,,,,,,
phpunit,3011,closed,1,2018-02-14 23:39:48,353.18,,,1,"b""b' Thank you for your report.  Please provide a **minimal**", **self-contained**, reproducing test case that shows the problem you are reporting.  Without such a minimal, self-contained," reproducing test case I will not be able to investigate this issue.'""",,,,,,,,,,,,,,,
phpunit,3011,closed,2,2018-02-14 23:39:48,11.97,,1,,"b""b' No feedback"," closing.'""",,,,,,,,,,,,,,,,,,
phpunit,3011,closed,closed,2018-04-07 05:44:57,365.15,1,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,3,2018-02-14 23:39:48,269.62,,1,,"b'b"" I\'d like to reopen this. This can be reproduced in the following PEAR module:  url Unpack archive", enter Console_CommandLine-1.2.2 directory and place following  in that directory: Run phpunit. Boom.  It would be helpful if the PHPT file was mentioned that caused this," to narrow down what can be done to prevent this.""'",,,,,,,,,,,,,,,,,
phpunit,3011,closed,4,2018-02-14 23:39:48,1.37,,1,,"b""b' That was with PHPUnit 7.5.3 by the way.'""",,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,5,2018-02-14 23:39:48,30.53,,,1,"b""b' @arjendekorte @nacc I am able to reproduce the bug with:  bug is verified to exist uses PHPUnit 8.x already by default  ![image]url but something else is going on"," which I will look into:  after which PHPUnit will just quit to command line.'""",,,,,,,,,,,,,,,,,,
phpunit,3011,closed,reopened,2019-02-13 10:46:28,301.52,1,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,6,2018-02-14 23:39:48,42.17,,1,,"b""b' @nacc @arjendekorte The problem is the section in the PHPT-file. I can offer you no suggestion why this has not come up before"," most likely exception handling has changed either by code or by environment settings.  To do: [ ] fix for PHPUnit 7 to convert unhandled exception into properly skipped test [ ] explore work required to bring new code location hints from v8 to v7'""",,,,,,,,,,,,,,,,,,
phpunit,3011,closed,7,2018-02-14 23:39:48,45.4,,1,,"b'b""  That would solve it for me. I\'m not sure if that\'s worth the effort. I can switch to v8 easily for development"," as long as the bug is fixed in v7 as well.""'",,,,,,,,,,,,,,,,,,
phpunit,3011,closed,8,2018-02-14 23:39:48,6.72,,1,,"b""b' @arjendekorte Bringing the improved code hints to v7 is not a problem. The infrastructure is already there. If anything"," it shows me getting used to contributing to a large project that has two major releases existing side-by-side. '""",,,,,,,,,,,,,,,,,,
phpunit,3011,closed,closed,2019-02-14 15:03:30,257.03,1,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,3011,closed,-,-,-,1,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,opened,2018-05-27 17:48:53,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,title,2018-05-27 17:48:53,00:00,,1,,"b""b' Some minor performance optimizations'""",,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,body,2018-05-27 17:48:53,00:00,,1,,"b""b' * Use strict so that the new opcode can be used * Use splat operator instead of where applicable. '""",,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,1,2018-05-27 17:48:53,71.37,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94 | Complexity \\xce\\x94  []url []url []url []url []url [.../]url []url []url []url []url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,2,2018-05-27 17:48:53,103.87,,1,,"b""b' Please send two separate pull requests. The refactoring to use the splat operator needs to wait until PHPUnit 8 due to BC considerations.'""",,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,closed,2018-05-27 20:44:07,175.23,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,3,2018-05-27 17:48:53,642.88,,1,,"b""b' OK"," will get to it later this week.  What breaks because of this change? The type is checked a bit later anyway. Just curious.  '""",,,,,,,,,,,,,,,,,,
phpunit,3145,closed,4,2018-05-27 17:48:53,3.05,,,1,b'b\' There is no semantic change," but a syntactic one as the signature of the methods changes.  Whether or not it is a good idea to overwrite PHPUnit\\\'s ""built-in"" assertions (it\\\'s not) in your test case classes", changing their signature is a BC break and existing tests will cease to work due to signature mismatches.\'',,,,,,,,,,,,,,,,,
phpunit,3145,closed,reopened,2018-05-28 07:40:19,656.2,0,4,2,,,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,5,2018-05-27 17:48:53,14.37,,1,,"b""b' Cherry-picked url  into  .'""",,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,closed,2018-05-28 07:44:25,4.1,0,5,2,,,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,6,2018-05-27 17:48:53,8.38,,1,,"b""b'  They could be made in PHPUnit 8. '""",,,,,,,,,,,,,,,,,,,
phpunit,3145,closed,7,2018-05-27 17:48:53,12.38,,1,,"b""b' Yes"," that is an idea I would like to pursue.'""",,,,,,,,,,,,,,,,,,
phpunit,3145,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,opened,2018-06-14 08:00:04,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,title,2018-06-14 08:00:04,00:00,,1,,"b""b' fix stdout in testcase'""",,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,body,2018-06-14 08:00:04,00:00,,1,,"b""b' For testcase: Because child php process stdout will closed after testA", phpunit cannot get error in child process, so will mark this case passed. **Phpunit should open standalone  **.  Some logging library, such as [log4php]url  will open standalone  ," And then the subprocess test result will lost.'""",,,,,,,,,,,,,,,
phpunit,3167,closed,1,2018-06-14 08:00:04,6.07,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url   -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,2,2018-06-14 08:00:04,1276.3,,1,,"b""b' not sure about tests structure here", some tests have subfolders, some not, some has .phpt in subfolder," some not...'""",,,,,,,,,,,,,,,
phpunit,3167,closed,3,2018-06-14 08:00:04,7.0,,,1,"b""b' I do not understand the problem this wants to solve. Can you elaborate? Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,4,2018-06-14 08:00:04,22.85,,1,,"b""b' Removed hhvm detection in phpt'""",,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,5,2018-06-14 08:00:04,1414.72,,1,,"b'b"" @sebastianbergmann Could you review this.  And if there isn\'t any problem"," please release new 6.x version. This bug hasn\'t a workaround.""'",,,,,,,,,,,,,,,,,,
phpunit,3167,closed,6,2018-06-14 08:00:04,308.33,,1,,"b""b' I now understand what this issue is about. However"," I am not yet sure on potential (adverse) side effects of the proposed change.  @keradus What do you think (apart from test structure)?'""",,,,,,,,,,,,,,,,,,
phpunit,3167,closed,7,2018-06-14 08:00:04,269.85,,1,,"b""b' I do have some remarks"," but I need to go deeper into it. Will try to do in this Monday'""",,,,,,,,,,,,,,,,,,
phpunit,3167,closed,8,2018-06-14 08:00:04,1093.35,,,1,"b""b' @keradus Much appreciated"," thanks!'""",,,,,,,,,,,,,,,,,,
phpunit,3167,closed,9,2018-06-14 08:00:04,88.77,1,,,"b""b' @sebastianbergmann Is there anyone working on this? This is a confirmed bug"," and all tests passed. Why are we wasting time on review? What are we waiting for?'""",,,,,,,,,,,,,,,,,,
phpunit,3167,closed,10,2018-06-14 08:00:04,86.78,1,,,"b""b'  So far the bug has only been confirmed by you. This is not correct: the pull request modifies the expectation of an existing test case. I am sorry if I take too long to review pull requests for your patience. '""",,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,11,2018-06-14 08:00:04,2.42,,1,,"b""b' @keradus Did you get a chance to look into this?'""",,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,12,2018-06-14 08:00:04,397.0,,,1,"b'b""  review is important process", and you found out really edge case IMO. software that big and complex, heavily used around the world simply need to ensure new changes won\'t break existing integrations. - @sebastianbergmann , I can confirm the behaviour and I kind of able to agree this is a bug, but it affects super few users. (Proof? it\'s there since years, nobody noticed) Thing is, that is not usual to print sth to stdout during tests, it\'s considered risky (and simply not clean), for that RobberPhex putted it into separated process. I don\'t consider putting sth directly to stdout as good thing personally, when I need to test output of my app, I let it print to abstracted output and then capture it in tests with buffer, eg  . Yet, if one doesn\'t want to do that, eg he has super low-level script, why to forbid him ?  After saying that, I do not see this change breaking sth, I did also run it across my heavier projects, all good. As always, your decision do you want to incorporate the change or not (especially considering amount of affected users).  On a side note," I will raise a minor concern about style of solution soon""'"
phpunit,3167,closed,closed,2018-07-03 02:45:40,1125.6,2,8,4,,,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,reopened,2018-07-03 02:48:29,2.82,2,8,4,,,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,13,2018-06-14 08:00:04,689.48,,,1,"b""b' Thank you for your contribution. I appreciate the time you invested in preparing this pull request. However"," I have decided not to merge it.'""",,,,,,,,,,,,,,,,,,
phpunit,3167,closed,closed,2018-11-29 06:22:59,214.5,2,8,5,,,,,,,,,,,,,,,,,,,,
phpunit,3167,closed,-,-,-,2,8,5,,,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,opened,2018-07-04 08:19:20,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,title,2018-07-04 08:19:20,00:00,,1,,"b""b' Lazy dataprovider loading'""",,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,body,2018-07-04 08:19:20,00:00,,1,,"b'b"" | Q       | A  PHPUnit version   | 7.1.5 | PHP version   | 7.2 | Installation Method | Composer  This is not a bug", but more of a feature request / proposal.  Currently the result of a dataprovider is always traversed, meaning that a generator will be fully traversed  before the first test starts.  This approach has several downsides: The whole data set must fit in memory. Actual testing is delayed.  Changes required would be relatively minor. return type should be changed to  . Instead of testing the dataset beforehand we should test each element separately," we can easily do this by wrapping the  . needs some minor changes (can\'t check if a is empty).  I\'m open for implementing if there\'s agreement that this would be an improvement.""'",,,,,,,,,,,,,,,,
phpunit,3191,closed,1,2018-07-04 08:19:20,253.1,,1,,"b""b' Depends on #10.'""",,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,closed,2018-07-04 12:32:26,253.1,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,2,2018-07-04 08:19:20,527.63,,1,,"b""b' note: currently there is a possibility to filter tests by data provider label"," this shall not be broken'""",,,,,,,,,,,,,,,,,,
phpunit,3191,closed,3,2018-07-04 08:19:20,799.37,,1,,"b'b""  Just to clarify", you are referring to also acting on row names or is there some other filtering mechanism I am not yet aware of?  This works with the caveat that the current mechanism discovers available tests by instantiation and then simply using the  -iterator. To get filters on tests working I have to force load the data rows when a filter gets injected in a  .  Frankly," I am not too familiar with the ins and outs  of  . I\'ve always wondered if the execution reordering could have been implemented as a fancy  . ""'",,,,,,,,,,,,,,,,,
phpunit,3191,closed,4,2018-07-04 08:19:20,386.5,,1,,"b""b'  example of data provider:  then"," you can  '""",,,,,,,,,,,,,,,,,,
phpunit,3191,closed,5,2018-07-04 08:19:20,1020.27,,,1,"b""b' @keradus Yes", this scenario works in the prototype. It did require some new logic to check if a dataprovider requires being loaded for filtering to work, but yes," this works fine!'""",,,,,,,,,,,,,,,,
phpunit,3191,closed,6,2018-07-04 08:19:20,31.22,,,1,"b'b"" Hooray! I\'ve got some first results as of yesterday:  ![image]url  is the implementation from v8.x is the experimental just-in-time loading mechanism is the JIT combined with data unloading during the run  ### Benefits of improved data provider handling compared to current implementation **speed and resource consumption is equal or better** already saves between 5%-10% memory on PHPUnit\'s self-test suite", which is light on data sets **smoother resource usage** and lower spikes during initialization works with selectors like  , and no changes to tests or configuration required  ![image]url ### Opportunities for further improvement row-by-row loading could further smooth load spikes cache data sets when used by multiple tests data providers loaded on-demand could be executed non-statically and have access to resources created by fixtures steadily climbing memory usage hints at low-hanging fruit in  ### Testing The effect of on-demand creation of tests based on rows is visible in the test counts:  ### Notes PHPUnit\'s unit self-tests only use simple and small dataproviders: no large sets, no complex datatypes," no database interaction memory usage during a run of with exact measurements are slightly different between environments ""'",,,,,,,,,,,,,,,
phpunit,3191,closed,reopened,2019-06-20 10:37:25,1324.98,0,6,2,,,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,7,2018-07-04 08:19:20,1134.92,,1,,"b""b'  out of curiosity", can you elaborate that logic? like," how to detect if dataprovider shall be loaded or not to filter by keys provided by dataprovider ?'""",,,,,,,,,,,,,,,,,
phpunit,3191,closed,8,2018-07-04 08:19:20,170.37,,,1,"b""b'  Unfortunately there is no magic here. Filtering by name requires the names to be available which in turn forces us to load the data provider. This works by loading the data upon  ", making the data is available for the iterator filter.  Many optimizations came to mind," introducing their own edge cases. Any ideas welcome as always! I intend to build a proper implementation and your critical eye is very much appreciated.'""",,,,,,,,,,,,,,,,,
phpunit,3191,closed,9,2018-07-04 08:19:20,3.43,,1,,"b""b' _if @keradus orders a meal in a restaurant"," does the kitchen iterate through the whole menu only to return his order?_'""",,,,,,,,,,,,,,,,,,
phpunit,3191,closed,10,2018-07-04 08:19:20,155.07,,,1,"b""b' ping @SamMousa on-demand data providers are a possible :) '""",,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,11,2018-07-04 08:19:20,77.95,,1,,"b""b' *if @epdenouden ordered anything with salami", does the kitchen knows where to look for it, or iterate over all dishes ingredients?*  _problematic_ part is that we can filter not only by items (test classes," methods) but also ingredients (case description)'""",,,,,,,,,,,,,,,,
phpunit,3191,closed,12,2018-07-04 08:19:20,596.77,,,1,"b""b'  It will iterate through al dishes looking for salami as an ingredient. This works by simply reverting to the old data provider behaviour when a is used. There are still some efficiency gains possible", but the main advantage of not loading the providers is gone It might be possible," though! I am not (yet) familiar enough with the whole test filtering logic.'""",,,,,,,,,,,,,,,,,
phpunit,3191,closed,13,2018-07-04 08:19:20,1067.68,,1,,"b""b' Superseded by url '""",,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,closed,2019-06-25 16:03:36,326.18,0,10,5,,,,,,,,,,,,,,,,,,,,
phpunit,3191,closed,-,-,-,0,10,5,,,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,opened,2018-07-18 17:43:34,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,title,2018-07-18 17:43:34,00:00,,1,,"b'b\' Fix fatal syntax error ""unexpected \\\'-\\\'"," expecting \\\'{\\\'""\''",,,,,,,,,,,,,,,,,,
phpunit,3217,closed,body,2018-07-18 17:43:34,00:00,1,,,"b""b' caused by special chars in wsdl file name.  **This is the fix"," you can find the tests here**: url  Im sorry but the fix might be best placed here while the tests for it are in another project :('""",,,,,,,,,,,,,,,,,,
phpunit,3217,closed,1,2018-07-18 17:43:34,6.22,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94 | Complexity \\xce\\x94  []url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,2,2018-07-18 17:43:34,590.9,,1,,"b""b' The tests are in this project"," just in a different branch. phpunit-mock-objects was merged into this project starting with PHPUnit 7.2.'""",,,,,,,,,,,,,,,,,,
phpunit,3217,closed,3,2018-07-18 17:43:34,204.07,1,,,"b""b' will fix this in phpunit 7.2 (mock-object project was merged into main project): url '""",,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,closed,2018-07-19 07:04:45,801.18,2,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,reopened,2018-07-19 07:44:09,39.4,2,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,closed,2018-08-07 07:03:41,1399.53,2,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,3217,closed,-,-,-,2,2,1,,,,,,,,,,,,,,,,,,,,
phpunit,3258,open,opened,2018-08-19 21:44:19,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3258,open,title,2018-08-19 21:44:19,00:00,,1,,"b""b' @runClassInSeparateProcess has the same effect as @runTestsInSeparateProcesses'""",,,,,,,,,,,,,,,,,,,
phpunit,3258,open,body,2018-08-19 21:44:19,00:00,,,1,"b'b\' | Q       | A  PHPUnit version   | 7.4-dev | PHP version   | 7.2.7 | Installation Method | Composer  <!-Please fill in this template according to your issue. Please keep the table shown above at the top of your issue. Please include the output of ""composer info | sort"" if you installed PHPUnit using Composer. Please post code as text (using proper markup). Do not post screenshots of code. Visit url  if you are looking for support. Otherwise", replace this comment by the description of your issue. -has the same effect as and makes test []url  fail when it\\\'s run by itself. My project has the same problem so I think the problem is with the annotation.  The older versions I tested have the same problem.   It makes sense for the first test to fail but the third shouldn\\\'t.  All tests pass when run together. \'',,,,,,,,,,,,,,,,,,
phpunit,3258,open,1,2018-08-19 21:44:19,940.95,,1,,"b""b' I am seeing the same issue with phpUnit 7.4.0. Despite @runClassInSeparateProcesss annotation the individual tests in a class are all run in isolation to each other rather run in the same process but isolated to others classes. So there is no visible difference between @runClassInSeparateProcesss and @runTestsInSeparateProcesses and the expected speed improvement for setting up a process only once for a class does eventuate. '""",,,,,,,,,,,,,,,,,,,
phpunit,3258,open,2,2018-08-19 21:44:19,794.77,,1,,"b'b"" @sebastianbergmann Can you see if this can be fixed? It makes tests run very slowly. I can create a pull request if it\'s something simple.""'",,,,,,,,,,,,,,,,,,,
phpunit,3258,open,3,2018-08-19 21:44:19,703.82,,1,,"b'b"" @hwmaier @bugreportuser I am working on this right now. Will take me a bit of time to read up on the context. #2591 has multiple end-to-end tests and moving parts"," however none of these is failing. I\'ll dig into this and report back here.""'",,,,,,,,,,,,,,,,,,
phpunit,3258,open,4,2018-08-19 21:44:19,530.05,,,1,"b""b' @epdenouden I am happy to assist and run a possible fix against our test cases.'""",,,,,,,,,,,,,,,,,,,
phpunit,3258,open,5,2018-08-19 21:44:19,252.47,,,1,"b'b"" @epdenouden Thanks. It\'s good to see this being worked on.  I checked why the test fails", and it\'s because it doesn\'t run [the bootstrap file]url  It passes when the bootstrap file runs," however [the test]url  is wrong. It should be:   The test does fail when that line is changed.""'",,,,,,,,,,,,,,,,,
phpunit,3258,open,6,2018-08-19 21:44:19,581.77,,,1,"b'b"" **TL;DR** Great to get such quick feedback! The annotation doesn\'t work as advertised and I suspect the code isn\'t ever hit.  @hwmaier thanks", I surely will take you up on the offer! @bugreportuser thanks for pointing out the test. This whole group of tests could use a good second look. @sebastianbergmann I will fix the support for this feature for the 7.x branch  ![image]url **Background** In all honesty I need to do more exploring of this piece of the PHPUnit code as I am not very familiar with it yet. After as first reading I was also wondering why the current end-to-end tests didn\'t notice the failing support for  . As a first step for fixing this thing I\'ll make a list of the configurations that are tested by the #2591 regression tests.  It appears as though the \'in seperate process\' piece of logic in and cannot handle running complete classes. The logic for is buried in the and not in the parent where one would expect it: url There are two slightly different code templates to run either a complete class or an individual test in a seperate PHPUnit process. These templates look sensible. However, there doesn\'t seem to be any code at the level to configure, start and parse the output of an external test run for a complete class. Logic like and  , for example," will need to be checked.""'",,,,,,,,,,,,,,
phpunit,3258,open,7,2018-08-19 21:44:19,559.92,,,1,"b'b"" @epdenouden I recently moved to another test framework so this issue isn\'t a priority for me anymore. The slow tests were affecting productivity so I decided it was time to switch. Thanks for your work on the issue.  @hwmaier Is this still important to you? I don\'t want to suggest delaying a fix if you\'re still waiting.""'",,,,,,,,,,,,,,,,,,,
phpunit,3258,open,8,2018-08-19 21:44:19,57.82,,1,,"b""b' @bugreportuser The issue is not critical and I have workarounds at present"," so from my point this can wait.'""",,,,,,,,,,,,,,,,,,
phpunit,3258,open,closed,2019-02-11 23:26:07,101.8,0,5,5,,,,,,,,,,,,,,,,,,,,
phpunit,3258,open,9,2018-08-19 21:44:19,396.6,,1,,"b'b\' So the comments above don\\xe2\\x80\\x98t count as activity? ""Not super urgent\\xe2\\x80\\x9c does not mean it is not a valid issue.\''",,,,,,,,,,,,,,,,,,,
phpunit,3258,open,reopened,2019-02-12 06:35:56,429.82,0,6,5,,,,,,,,,,,,,,,,,,,,
phpunit,3258,open,10,2018-08-19 21:44:19,64.35,,1,,"b'b"" @epdenouden Can I help in any way? I\'m not very familiar with PHPUnit\'s internals"," but I think this would be an important bug to fix.""'",,,,,,,,,,,,,,,,,,
phpunit,3258,open,-,-,-,0,7,5,,,,,,,,,,,,,,,,,,,,
phpunit,3259,closed,opened,2018-08-20 12:27:21,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3259,closed,title,2018-08-20 12:27:21,00:00,,1,,"b""b' expectExceptionMessage does not fail when testing wierd value'""",,,,,,,,,,,,,,,,,,,
phpunit,3259,closed,body,2018-08-20 12:27:21,00:00,,1,,"b'b"" | Q       | A  PHPUnit version   | 7.3.1 | PHP version   | 7.2.9 | Installation Method | Composer  The exception emssage is different", so I expect the I expect the $this->expectExceptionMessage(\'ha\'); to fail, but it doesn\'t.  The class throws an AUException with message BaseModel->other: Prg\\\\Common\\\\Exceptions\\\\AUException this: PHPUnit\\\\Framework\\\\Constraint\\\\ExceptionMessage I found out with digging deeper, the mathces does not match but does a contains kind of check... Nogw that I know, I think, that is even better," but perhaps a good idea to document this?  ""'",,,,,,,,,,,,,
phpunit,3259,closed,closed,2018-08-20 12:30:31,3.17,0,2,0,,,,,,,,,,,,,,,,,,,,
phpunit,3259,closed,1,2018-08-20 12:27:21,62.23,,1,,b'b\' oh, it\\\'s not the same as a contains," since I can do multiple contains but only one expectExceptionMessage  Country->notExistingMethod() cannot be called with arguments  So I can\\\'t do: $this->expectExceptionMessage(""Country->notExistingMethod()""); $this->expectExceptionMessage(""cannot be called with arguments""); \''",,,,,,,,,,,,,,,,,
phpunit,3259,closed,reopened,2018-08-20 13:29:35,59.07,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,3259,closed,2,2018-08-20 12:27:21,1162.45,,,1,"b""b' Thank you for your report.  Please provide a **minimal**", **self-contained**, reproducing test case that shows the problem you are reporting.  Without such a minimal, self-contained," reproducing test case I will not be able to investigate this issue.'""",,,,,,,,,,,,,,,
phpunit,3259,closed,3,2018-08-20 12:27:21,7.28,1,,,"b'b"" @marcelloh this is documented: here: url So this is not an  nor lack of documentation. Thus", there\'s no reproducing example :). What you seem to be suggesting though is a non existing feature, where you can run several and all of them will be checked in the same test case (which imho I find very unnecessary," since either you place the entire message or the important part only).""'",,,,,,,,,,,,,,,,
phpunit,3259,closed,closed,2018-09-05 06:46:23,1036.8,1,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,3259,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,opened,2018-10-05 18:07:26,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,title,2018-10-05 18:07:26,00:00,,1,,"b""b' Make ExceptionMessage constraint strict'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,body,2018-10-05 18:07:26,00:00,,,1,"b'b"" | Q       | A  PHPUnit version   | ? | PHP version   | not related | Installation Method | not related  Heavily descried in: url  ", used under the hood by and is not strict about expected message.  Constraint does not check if expected message is same as actual one, but only if it\'s somewhere present in actual one. Making those two calls equivalent:  Which is not obvious for developer and actually most of them are not aware about this.  I would like to change behaviour of Constraint to use comparison instead of  .  For me, personally, it\'s a bug, yet I can understood that requested change may be considered as bigger one and treated as BC breaker.  If this request will be approved, I\'m all in implementing this change myself either to lowest supported branch, if this would be treated as a bugfix," or later for 8.0 branch (which is not yet existing).  Thanks !""'",,,,,,,,,,,
phpunit,3325,closed,1,2018-10-05 18:07:26,0.3,,1,,"b""b' fyi @TomasVotruba '""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,2,2018-10-05 18:07:26,576.12,,1,,"b""b' I would consider this a bugfix", too," and would appreciate a pull request for (which will be merged to and  ).'""",,,,,,,,,,,,,,,,,
phpunit,3325,closed,closed,2018-10-09 06:12:23,724.95,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,3,2018-10-05 18:07:26,615.2,1,,,"b'b\' My 2 cents: this makes the (already screwed up) exception api so much more worse...  now I have to write a regexp for every ""contains"" check of my exception message? Why would I want to test thee FULL assertion message in exceptions? Someone corrects a typo and the tests will fail.  at least add something like:  expectedExceptionMessageContains() or . \''",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,4,2018-10-05 18:07:26,18.35,,1,,"b""b' imho this is a BC break and must not go to branch 6.5.x-dev right? '""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,5,2018-10-05 18:07:26,33.87,,1,,"b""b' @pscheit You can use explicit annotation for that: url '""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,6,2018-10-05 18:07:26,840.82,,1,,"b'b\' I don\\\'t want to use annotations and still: i need to write a regexp for ""contains"". I\\\'m just saying: this issue will decrease developer experience\''",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,7,2018-10-05 18:07:26,11.0,,1,,"b'b"" I don\'t use annotations neither"," as they\'re [not recommended]url There is method:   But still I prefer specific 100% exception match. Otherwise it has no value to test that exception contains some text.  ""'",,,,,,,,,,,,,,,,,,
phpunit,3325,closed,8,2018-10-05 18:07:26,12.1,,1,,"b""b' I have reverted the change(s) in the branch.'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,reopened,2018-10-10 05:15:11,1382.8,1,8,1,,,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,9,2018-10-05 18:07:26,247.88,,1,,"b""b' I decided to deprecate expecting exceptions through annotations in PHPUnit 8 and remove the annotations in PHPUnit 9.'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,10,2018-10-05 18:07:26,46.15,,,1,"b""b' This issue has been automatically marked as stale because it has not had activity within the last 60 days. It will be closed after 7 days if no further activity occurs. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,11,2018-10-05 18:07:26,116.93,,1,,"b""b'  "," go away request for is still valid'""",,,,,,,,,,,,,,,,,,
phpunit,3325,closed,12,2018-10-05 18:07:26,5.92,,,1,"b""b' And stale bread is still good for croutons or bread pudding :D'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,13,2018-10-05 18:07:26,1184.02,,,1,"b""b' As I wrote in url  support for expecting exceptions through annotations will be removed in PHPUnit 9 (see #3332 and #3333). I am not sure how to properly address this before the annotation is issue is gone.'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,14,2018-10-05 18:07:26,43.4,,,1,"b""b' This issue has been automatically marked as stale because it has not had activity within the last 60 days. It will be closed after 7 days if no further activity occurs. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,15,2018-10-05 18:07:26,26.35,,,1,"b""b' This issue has been automatically closed because it has not had activity since it was marked as stale. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,closed,2019-03-12 09:05:52,230.68,1,10,6,,,,,,,,,,,,,,,,,,,,
phpunit,3325,closed,-,-,-,1,10,6,,,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,opened,2018-10-12 07:02:09,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,title,2018-10-12 07:02:09,00:00,,1,,"b'b"" $mock->expects->at(0)->method(\'methodName\') is green"," event if the method name is different""'",,,,,,,,,,,,,,,,,,
phpunit,3345,closed,body,2018-10-12 07:02:09,00:00,,,1,"b'b\' | Q       | A  PHPUnit version   | 7.1.5 | PHP version   | 7.2.10 | Installation Method | Composer  <!-Please fill in this template according to your issue. Please keep the table shown above at the top of your issue. Please include the output of ""composer info | sort"" if you installed PHPUnit using Composer. Please post code as text (using proper markup). Do not post screenshots of code. Visit url  if you are looking for support. Otherwise", replace this comment by the description of your issue. -I\\\'ve build a mock helper on top of phpunit mock. To test as strict as possible i work with ->at(). The tests are green even if i put the wrong method name as long there is a at() exists.  url \'',,,,,,,,,,,,,,,,,,
phpunit,3345,closed,1,2018-10-12 07:02:09,4.55,,,1,"b""b' Thank you for your report.  Please provide a **minimal**", **self-contained**, reproducing test case that shows the problem you are reporting.  Without such a minimal, self-contained," reproducing test case I will not be able to investigate this issue.'""",,,,,,,,,,,,,,,
phpunit,3345,closed,2,2018-10-12 07:02:09,35.55,,1,,"b""b' @sebastianbergmann with a simple example i cannot reproduce it", it seems it depends on the mocked class," the original test mocks the symfony ContainerBuilder '""",,,,,,,,,,,,,,,,,
phpunit,3345,closed,3,2018-10-12 07:02:09,7.33,,1,,"b""b' @sebastianbergmann got a example that breaks"," as explained    url '""",,,,,,,,,,,,,,,,,,
phpunit,3345,closed,closed,2018-10-12 07:49:42,47.55,0,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,4,2018-10-12 07:02:09,0.97,1,,,"b""b' That is not minimal and self-contained"," sorry.'""",,,,,,,,,,,,,,,,,,
phpunit,3345,closed,reopened,2018-10-12 07:50:33,0.85,1,3,2,,,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,5,2018-10-12 07:02:09,3.43,,1,,"b""b' @sebastianbergmann if i replace self::at(0) with self::once()", self::at(1) with self::once() it behaves as expected," so this problem only appears with at()'""",,,,,,,,,,,,,,,,,
phpunit,3345,closed,6,2018-10-12 07:02:09,3.28,,1,,"b'b"" @nicolas-grekas do you have an idea", why mocking the ContainerBuilder leads to this issue? @sebastianbergmann have this issue not the first time (also mocking other objects), but can\'t remember and example," so i try to find other ones to find similarities""'",,,,,,,,,,,,,,,,
phpunit,3345,closed,7,2018-10-12 07:02:09,85.38,,,1,"b""b' This issue has been automatically marked as stale because it has not had activity within the last 60 days. It will be closed after 7 days if no further activity occurs. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,8,2018-10-12 07:02:09,760.57,,,1,"b""b' This issue has been automatically closed because it has not had activity since it was marked as stale. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,closed,2018-12-18 22:03:14,852.68,1,5,4,,,,,,,,,,,,,,,,,,,,
phpunit,3345,closed,-,-,-,1,5,4,,,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,opened,2018-10-17 13:07:46,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,title,2018-10-17 13:07:46,00:00,,1,,"b""b' Running phpunit-7.4.0.phar with phpdbg throws NOTICE'""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,body,2018-10-17 13:07:46,00:00,,1,,"b""b' | Q       | A  PHPUnit version   | 7.4.0 | PHP version   | phpdbg 7.2.10  | Installation Method | PHAR  phpunit installed via phive. When calling the folling NOTICE is shown:  Guess that $_SERVER is simply not set in phpdbg?  This line raises the notice"," I guess in -phar-:  '""",,,,,,,,,,,,,,,,,,
phpunit,3352,closed,1,2018-10-17 13:07:46,18.32,,1,,"b""b' I cannot reproduce this.  Maybe you have an auto-prepend script configured that  s or something?'""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,2,2018-10-17 13:07:46,6.87,1,,,"b""b' No auto-prepend script. phpdbg runs in a Docker Container with PHP 7.2 coming from Alpine 3.8. Weird. Will investigate further and report.'""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,3,2018-10-17 13:07:46,33.87,,1,,"b'b"" Ok", even weirder," this does look like phpdbg specific behavior. $GLOBALS[\'_SERVER\'] is only set after $_SERVER is accessed:     ""'",,,,,,,,,,,,,,,,,
phpunit,3352,closed,4,2018-10-17 13:07:46,139.45,1,,,"b""b' Sorry"," but this does not look like a PHPUnit problem to me.'""",,,,,,,,,,,,,,,,,,
phpunit,3352,closed,closed,2018-10-17 16:26:16,198.5,2,4,0,,,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,5,2018-10-17 13:07:46,1249.45,,1,,"b'b\' I just ran into this myself in exactly the same scenario. Found this:  url Setting ""auto_globals_jit = Off"" does seem to fix it.\''",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,6,2018-10-17 13:07:46,131.03,,1,,"b""b' You can run phpunit with phpdbg setting directly auto_globals_jit variable like this '""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,7,2018-10-17 13:07:46,1120.17,,1,,"b'b"" This is the same problem as #3514. It was reproduced in the Docker-based reproducer repo I made.  PHPUnit expects the key to always be there", but that\'s not compatible with  ," it\'s 100% a PHPUnit issue.""'",,,,,,,,,,,,,,,,,
phpunit,3352,closed,8,2018-10-17 13:07:46,15.07,,1,,"b'b"" It\'s not only a docker issue. Here\'s a reproducer that also fails on OS X:   ""'",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,9,2018-10-17 13:07:46,161.15,,1,,"b""b' @sebastianbergmann do you still consider it NOT a phpunit problem?'""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,10,2018-10-17 13:07:46,31.83,,1,,"b""b' I still cannot reproduce this:      '""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,11,2018-10-17 13:07:46,8.22,1,,,"b'b"" ~~@sebastianbergmann what about ? (on an off chance you\'ve got it disabled in ).~~ nvm"," just noticed you have it enabled.  It might be PHP 7.2 issue only :(""'",,,,,,,,,,,,,,,,,,
phpunit,3352,closed,12,2018-10-17 13:07:46,1.67,1,,,"b'b"" Maybe xDebug messes with it"," we don\'t have it enabled in the Docker reproducer?""'",,,,,,,,,,,,,,,,,,
phpunit,3352,closed,13,2018-10-17 13:07:46,3.7,,1,,"b""b' Without Xdebug I can reproduce it:   '""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,14,2018-10-17 13:07:46,1.93,,1,,"b""b'  Nope", just tried 7.2 and 7.3," both work the same. \\\\o/'""",,,,,,,,,,,,,,,,,
phpunit,3352,closed,reopened,2019-02-07 13:53:32,1287.27,4,12,0,,,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,15,2018-10-17 13:07:46,5.43,,1,,"b'b"" According to @krakjoe and @nikic"," there might be an interoperability issue between PHPDBG and Xdebug here that hides a problem in PHPUnit\'s code. That problem is that one cannot rely on being defined.  CC @derickr on the off chance that is relevant to Xdebug development.""'",,,,,,,,,,,,,,,,,,
phpunit,3352,closed,closed,2019-02-07 14:04:49,11.28,4,13,0,,,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,16,2018-10-17 13:07:46,62.85,,1,,"b'b"" To clarify", you can rely on  , but works like a variable variable, and will not trigger just-in-time population of  , while accessing directly is reliable ...  GLOBALS is broken and auto_globals_jit just cannot work with it as everyone expects (me included), and we can\'t remove because legacy ...  I\'m not precisely sure of the reason that xdebug should make a difference, but whatever it doesn\'t make much sense to load a debugger inside a debugger," the two cannot be expected to inter-operate properly ...""'",,,,,,,,,,,,
phpunit,3352,closed,17,2018-10-17 13:07:46,73.82,,1,,"b""b'  The thing is the issue can only be observed if xdebug is not loaded.'""",,,,,,,,,,,,,,,,,,,
phpunit,3352,closed,18,2018-10-17 13:07:46,91.03,,1,,"b'b"" So I looked at Xdebug ... The reason it doesn\'t happen when Xdebug is loaded is because auto_globals_jit behaviour is not preserved", upon startup, Xdebug does this:   Which is forcing all super globals to be populated before you accessed them," and so you do not see this behaviour ...""'",,,,,,,,,,,,,,,,
phpunit,3352,closed,19,2018-10-17 13:07:46,148.47,,1,,"b""b' Yes"," as I need to be able to reach them to read the headers to find out whether Xdebug needs to start a debug session or not. And then the others are needed to show the information from the super globals through debugging.'""",,,,,,,,,,,,,,,,,,
phpunit,3352,closed,-,-,-,4,17,0,,,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,opened,2019-01-24 11:48:43,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,title,2019-01-24 11:48:43,00:00,,1,,"b""b' Unable to chain a @dataProvider in method a with a @depends in method b'""",,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,body,2019-01-24 11:48:43,00:00,,1,,b'b\' | Q       | A  PHPUnit version   | 7.5.2 | PHP version   | 7.2 | Installation Method | Composer |System |Ubuntu 18.10 |DE |PHPStorm 1.1.0 |-copy       |1.8.1 |phar      |1.0.3 |phar       |2.0.1 |-common  |1.0.1 |-docblock  |4.3.0 |-resolver    |0.4.0  1.8.0  |-code-coverage    |6.1.4  |-file-iterator   |2.0.2 |-text-template    |1.2.1 |-timer      |2.0.0 |-token-stream     |3.0.1   7.5.2   |-unit-reverse-lookup |1.0.1   3.0.2   3.0.1   4.0.1  3.1.0   |-state     |2.0.0  |-enumerator    |3.0.3 |-reflector   |1.1.1 |-context    |3.0.0  |-operations  |2.0.1  2.0.1 |-ctype     |v1.10.0  1.1.0 1.4.0  Good day, I tried to play around with dataproviders and dependencies till I recognized an older issue occurring again now.  Its the Same Issue like in April 2018: Unable to chain a @dataProvider in method a with a @depends in method b #3093url now a little test code for reproduction:  if I try the shown code," I get an exception message.  TestPop is waiting for the parameter ""stack"" an array"," but TestPush can\\\'t return a correct value to TestPop. So on the exception massage says ""null"" was given by TestPush.  The example should show three things I recognized: First: all functions get called. Second: in TestPush the dataprovider sets the parameter ""stack"" of TestPush not the dependency Third: TestPop gets ""null"" passed by the dependency of TestPush not an array  I tried my best to explain it in english. I hope you can help me out.\''",,,,,,,,,,,,,,,,
phpunit,3498,closed,1,2019-01-24 11:48:43,4.95,,,1,"b""b' @D43M0NT00L5 Thanks for the report. If you can clean up the code example above a bit"," I will have a look later today.'""",,,,,,,,,,,,,,,,,,
phpunit,3498,closed,2,2019-01-24 11:48:43,56.33,,1,,"b""b' @D43M0NT00L5 Can you please explain the example a bit? Both and provider return something that you call a stack. Myself I hardly ever values from a test"," although I know can be used to pass return values from one test to the next.  What do you want your example to output?'""",,,,,,,,,,,,,,,,,,
phpunit,3498,closed,closed,2019-01-29 14:21:13,152.5,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,reopened,2019-01-29 14:21:22,0.15,0,3,1,,,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,3,2019-01-24 11:48:43,38.2,,1,,"b""b' Hello @epdenouden I added an explanation.'""",,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,4,2019-01-24 11:48:43,156.43,,1,,"b""b' @D43M0NT00L5 Yes", I did see your explanation and tried the example locally. I do see the same errors  but I am not completely sure what the expected use result _should be_. Maybe @sebastianbergmann can also chime in here.  The simple reason the code throws an error right now is a result of the design of the runner: is a test with a which get transformed into a with a for every row. This results in the the not working, as there is no _single, individual_ test called anymore.  Of course the next questions would be: should PHPUnit automagically expand this type of relationship into mulitple runs for  ? Should there be an error, but a nicer one? Do we only honor the for some sort of combined result from and what would that look like?  These questions are very good ones and people keep bumping into them. There are few easy answers here," because as soon as build a test runner that can do  there will be nasty consequences for continuous integration. Somebody will write a  . \\xf0\\x9f\\xa4\\x90 '""",,,,,,,,,,,,,,
phpunit,3498,closed,5,2019-01-24 11:48:43,991.97,1,,,b'b\' @epdenouden i see the issue. So, as you said chaining would be very nasty," are we talking about one test calling the and the other are only waiting for the return value or all following tests with also calling a  ?  As example: ""calling""->testPop +  ->""call dependency first""Is it possible in the to run one row each and then the after calling a test with a dependency? Or did you mean if we are starting which has no  "," calling his dependency and this one let the runner creates another as a result of return values. Would this end up in that ""nasty consequences"" you noticed? As example: ""calling""->testPop +  ->""call dependency first""so if the second example would be your ""nasty consequences"" of course in combination of an extra  of testPop", why wouldn\\\'t it be possible to add a kind of priority variable to the test config?  I hope you understand my intention.\'',,,,,,,,,,,,,,,
phpunit,3498,closed,6,2019-01-24 11:48:43,324.33,,1,,"b'b"" Heyho"," how is it going? Haven\'t heard from you guys in a while...""'",,,,,,,,,,,,,,,,,,
phpunit,3498,closed,7,2019-01-24 11:48:43,1011.5,1,,,"b""b' @epdenouden hello", I would be amused, if someone could answer me the question I did 2 months ago ;). I know you guys are hard working on bugs and features," but leaving me alone with no statement made me impatient.'""",,,,,,,,,,,,,,,,
phpunit,3498,closed,8,2019-01-24 11:48:43,0.52,,,1,"b""b' This issue has been automatically marked as stale because it has not had activity within the last 60 days. It will be closed after 7 days if no further activity occurs. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,9,2019-01-24 11:48:43,55.25,,,1,"b""b' This issue has been automatically closed because it has not had activity since it was marked as stale. Thank you for your contributions.'""",,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,closed,2019-06-10 07:48:13,1046.85,2,6,3,,,,,,,,,,,,,,,,,,,,
phpunit,3498,closed,-,-,-,2,6,3,,,,,,,,,,,,,,,,,,,,
phpunit,3549,open,opened,2019-03-05 18:42:06,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3549,open,title,2019-03-05 18:42:06,00:00,,1,,"b""b' Implement using @depends for depending on class'""",,,,,,,,,,,,,,,,,,,
phpunit,3549,open,body,2019-03-05 18:42:06,00:00,,1,,"b'b"" Exploring #3519. ### Use case ### _As a_ developer of a larger collection of tests _I want to_ express dependencies on whole classes _so that_ I don\'t waste time on maintaining lists of  ### Example ### url ### Changes ### [x] keep track of passing test suites in  "," seperate from passing tests [x] handle annotation  in dependency handler [ ] support annotation in execution reordering  ping @spriebsch""'",,,,,,,,,,,,,,,,,,
phpunit,3549,open,1,2019-03-05 18:42:06,649.02,,1,,"b""b' @epdenouden Are you sure this should go into  ? I would consider this a new feature and not a bugfix"," to be honest.'""",,,,,,,,,,,,,,,,,,
phpunit,3549,open,2,2019-03-05 18:42:06,405.77,,1,,"b""b' I think I like what I see (since you pinged me). @sebastianbergmann"," what would be the problem with adding a new feature in a minor version (as long as it does not break BC)?'""",,,,,,,,,,,,,,,,,,
phpunit,3549,open,3,2019-03-05 18:42:06,3.98,,1,,"b""b' I have no problem with accepting this into PHPUnit 8.1.'""",,,,,,,,,,,,,,,,,,,
phpunit,3549,open,4,2019-03-05 18:42:06,59.72,1,,,"b'b""  @sebastianbergmann I started exploring the code in and got it working rather quickly. Then realized you might have wanted it in 7", too, so I created a new branch for this. Personally I do not mind either way.  My assumptions when creating the  -based branch: safe: version 7.5 has all infrastructure needed safe: no BC breaks or changing test results, as the use-case simply wasn\'t available before it is aimed at larger test collections which are more likely to run not-the-latest version support for this was already in my earliest sketches for the reordering features  @spriebsch Ah, I thought it was you who had brought this up in #3519! Sorry if I poked you for something unrelated," hope you like your present anyway \\xf0\\x9f\\x8e\\x81""'",,,,,,,,,,,,,,
phpunit,3549,open,5,2019-03-05 18:42:06,1142.75,,1,,"b""b' It is new functionality. PHPUnit 7.5 does not get new functionality anymore.'""",,,,,,,,,,,,,,,,,,,
phpunit,3549,open,6,2019-03-05 18:42:06,128.67,,,1,"b'b""  Okidoki"," I\'ll target v8  \\xf0\\x9f\\x8f\\x97 This will take a bit more time to implement properly. I\'ve had a good look at the logic and found out again why I didn\'t manage to get working for all of the following scenarios: 1. **already supported**: determine optimal running order for tests in a 2. **already supported**: determine optimal running order for rows as individual tests in a 3. **already supported**: understand result of a data-driven test as a result in context of a suite 4. determine optimal running order for test classes when there are interdependencies  The current logic was designed to be simple as I didn\'t understand the technical details of the various scenarios last time around. Now I will upgrade the logic to support inter-class dependencies as a next step.""'",,,,,,,,,,,,,,,,,,
phpunit,3549,open,7,2019-03-05 18:42:06,72.02,,1,,"b""b' Note to self: check interaction between options and test execution reordering. The sorter logic should only trigger on and cached results related to tests being run. My suspicion is it currently takes all defined tests into account. Example: #3560'""",,,,,,,,,,,,,,,,,,,
phpunit,3549,open,closed,2019-03-15 11:18:03,995.95,1,7,1,,,,,,,,,,,,,,,,,,,,
phpunit,3549,open,reopened,2019-03-21 09:42:23,1344.33,1,7,1,,,,,,,,,,,,,,,,,,,,
phpunit,3549,open,8,2019-03-05 18:42:06,1384.4,,1,,"b""b' This already exists"," with capital D @Depends Class::Method'""",,,,,,,,,,,,,,,,,,
phpunit,3549,open,9,2019-03-05 18:42:06,55.52,,,1,"b""b' hi @PatricNox! What is going to be build is allowing for which will force a check on all tests run for that class. I cannot find this in the PHPUnit codebase; is it an optional package that provides this? '""",,,,,,,,,,,,,,,,,,,
phpunit,3549,open,-,-,-,1,8,2,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,opened,2019-04-05 07:13:05,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,title,2019-04-05 07:13:05,00:00,,1,,"b""b'  file is all over the place'""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,body,2019-04-05 07:13:05,00:00,1,,,b'b\' | Q       | A  PHPUnit version   | 8,1,0 | PHP version   | 7.2.8 | Installation Method | PHAR  Cache is enabled by default, which is not a bad thing. However, by running unit tests, file is being generated in each folder where the test is run. When running tests from the root of the project that\\\'s not a big issue, since one file is generated in the root directory of the project. However," IDEs have integrations for unit tests where you can run a single test method or a class ""on click"". That translates to having multiple files all over the directory structure in each directory where a test is run.  The solution is obvious have a single location where the cache file is placed by default and prevent cache clutter in project\\\'s directory structure.  \''",,,,,,,,,,,,
phpunit,3587,closed,1,2019-04-05 07:13:05,2.67,,1,,"b""b' It should only be in the root directory (where is). Right"," @epdenouden?'""",,,,,,,,,,,,,,,,,,
phpunit,3587,closed,2,2019-04-05 07:13:05,34.72,,1,,b'b\' @constup Thanks for your report. I will look for ways to tighten up the cachefile placement.  @sebastianbergmann Yes, it was designed that way. However I have also seen it ending up in the \\\'root\\\' of end-to-end test directories and depending on the  script the mechanism might see a different root. It still happens, though:   I will think more about this coming days. Basically the cache is to speed up when testing _the same_ collection over and over again, like I do a lot for PHPUnit. When using the \\xe2\\x8f\\xaf  buttons in PHPStorm for example," caching this result makes no sense. In addition to the IDE having its own ""run failed tests "" option.  @sebastianbergmann if you have any wishes or suggestions to be included for this let me know. This (already) works when there\\\'s a single location to see as root. It gets hard when people use custom configurations with  ", or a different location for  .\'',,,,,,,,,,,,,,
phpunit,3587,closed,3,2019-04-05 07:13:05,215.4,,,1,"b'b"" The current implementation is still the MVP", basically:  url Unless the user sets a fixed path in the config," the will end up in the directory is run from. I\'ll make some improvements. :)""'",,,,,,,,,,,,,,,,,
phpunit,3587,closed,4,2019-04-05 07:13:05,1188.67,,1,,"b""b' To be honest", suggests to me that IDEs are running single tests wrong. This does not mean, though," that we should not make sure that is always located in the same directory where is.'""",,,,,,,,,,,,,,,,
phpunit,3587,closed,closed,2019-04-26 14:54:19,461.23,1,4,1,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,5,2019-04-05 07:13:05,472.3,,1,,"b""b' @epdenouden Thanks! I merged this to but am stuck merging it from there to due to a merge conflict. Can you send a pull request for  ?'""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,6,2019-04-05 07:13:05,5.77,,,1,"b""b' Will do!'""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,7,2019-04-05 07:13:05,1042.87,,1,,"b""b' I managed to merge it without conflict from to  : In I did 9c2fcfd8458bc8a2a0f00f049a4edd50e1d7083e because the issue solved there resulted in a in PHPUnit 8 due to strict interpretation of scalar types.  **However**", with the changes shown above, running the tests for PHPUnit 8.1 results in the following files getting created:  * * * * * * * * * *  Is this behaviour correct, @epdenouden," and we just need to add these files to  ?'""",,,,,,,,,,,,,,,
phpunit,3587,closed,reopened,2019-04-27 08:42:58,1068.65,1,6,2,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,8,2019-04-05 07:13:05,476.85,,1,,"b""b' I came to the conclusion that it is the right thing to do here to ignore the generated files.'""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,closed,2019-04-27 16:32:19,469.35,1,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,9,2019-04-05 07:13:05,1211.9,1,,,"b'b\'  No it certainly isn\\\'t! The ""we are running our self-tests"" environment variable should prevent this. I will have a deeper look. Self-testing a testing framework properly just hurts my brain every now and then. Apologies for the fix", I should have run more tests on it.\'',,,,,,,,,,,,,,,,,,
phpunit,3587,closed,reopened,2019-04-28 12:44:13,1211.9,2,7,2,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,10,2019-04-05 07:13:05,51.75,,,1,"b""b' @sebastianbergmann Perhaps I am misinterpreting some comments from yesterday"," but I do not see a lot of cache files being generated by at least:  ![image]url  '""",,,,,,,,,,,,,,,,,,
phpunit,3587,closed,11,2019-04-05 07:13:05,11.68,,1,,"b""b' You probably do not see them because of acd938fc0752c346fd94b360758fd0ab51af2a16.'""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,12,2019-04-05 07:13:05,0.52,,1,,"b'b"" Never mind"," you\'re looking using and not  .""'",,,,,,,,,,,,,,,,,,
phpunit,3587,closed,13,2019-04-05 07:13:05,0.92,,1,,"b""b' I did not see those files on but on  . See at the bottom of url '""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,14,2019-04-05 07:13:05,1397.15,,,1,"b'b"" Just made a fresh branch of and I do not see result caches everywhere", only one in the main directory.  When running from another directory new caches get created," as expected. Here\'s the end result of running the self-test suite from its own directory in  :  ![image]url For now it seems to work as expected. Don\'t hesitate to reopen the issue if a new scenario pops up!  ""'",,,,,,,,,,,,,,,,,
phpunit,3587,closed,closed,2019-04-30 13:06:14,22.02,2,10,4,,,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,15,2019-04-05 07:13:05,391.88,,1,,"b""b' When I run a test with PHPUnit from PHPStorm I see them all over when I run a single test (test method). I think this cannot be desired behaviour"," right? Using PHPStorm 2019.1 and PHPUnit 8.1.3. Based on the last comments from this discussion I am not sure if there was any action on it.'""",,,,,,,,,,,,,,,,,,
phpunit,3587,closed,16,2019-04-05 07:13:05,1006.45,,1,,"b""b' Changes were made to remedy what you describe", @frederikbosch," but there is no release yet that has them.'""",,,,,,,,,,,,,,,,,
phpunit,3587,closed,17,2019-04-05 07:13:05,94.82,,,1,"b'b"" @sebastianbergmann and @epdenouden Will that changes also help for our situation", where the PHPUnit PHAR file is located on a share and execution of single PHPUnit Tests via PhpStorm IDE (without configuration file) will always try to create the \'\' next to the shared PHPUnit PHAR file, leading to warning logs like:  In the course of analysing the problem we stumbled over url  that we initially had hoped to configure (globally on the \'\') to set to result cache file directory to user-specific non-shared value: however, since the c\'tor is never called with null (cf. url  this environment variable cannot be used. Actually I think it is not usable anymore since url **Should it be usable?**  As far as I understand our devs using PhpStorm IDE must configure something to avoid these warnings, and the most convenient approach might be: (1) removing all existing PHPUnit runners and (2) configuring the PHPUnit runner template with the option to disable the PHPUnit result cache file via (that is not yet documented url  by the way) or alternatively to specify the location via  ?  Of course I would be happy if global configuration via might be supported (again)," so that our devs would not need to do anything...""'",,,,,,,,,,,,,,
phpunit,3587,closed,18,2019-04-05 07:13:05,16.67,1,,,"b'b\' @sebastianbergmann What do you think of my aforementioned comment url  (I am using latest PHPUnit release 8.1.6 and thus unfortunately have the ""fix"" from 8.1.4 that may help @frederikbosch", but actually causes my problem...)?\'',,,,,,,,,,,,,,,,,,
phpunit,3587,closed,19,2019-04-05 07:13:05,205.1,,,1,"b""b' @reinholdfuereder If your problem is a  one then please open a new ticket. Thanks!'""",,,,,,,,,,,,,,,,,,,
phpunit,3587,closed,-,-,-,3,12,6,,,,,,,,,,,,,,,,,,,,
phpunit,3605,open,opened,2019-04-12 23:53:01,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3605,open,title,2019-04-12 23:53:01,00:00,,1,,"b""b' Add support for test suite chunking directly in phpunit.'""",,,,,,,,,,,,,,,,,,,
phpunit,3605,open,body,2019-04-12 23:53:01,00:00,,1,,b'b\' At my job we had 1 hour of functional tests. We built url  on top of phpunit to get the chunking functionality and with this we were able to achieve test builds in ~3 minutes. I thought it might be useful to have this built in to phpunit. If you use travis, circle ci, etc. it becomes trivial to configure multiple jobs," one for each chunk.  Before I continue work on this I wanted to know if something like this would be accepted? I am new to the internals of phpunit so I am not 100% sure if I even implemented this functionality the ""correct"" way.  Example", run your tests in two separate chunks across two different **server1**   **server2**   Thoughts?\'',,,,,,,,,,,,,,,
phpunit,3605,open,1,2019-04-12 23:53:01,329.6,,1,,"b""b' My initial thought is that I think that I prefer the approach outlined in #3387. That way", PHPUnit is used to create a list of tests and can be given a list of tests to execute. In between those two steps, that list of tests can be chunked, filtered, sorted," etc. outside of PHPUnit.'""",,,,,,,,,,,,,,
phpunit,3605,open,2,2019-04-12 23:53:01,10.62,,1,,"b""b' Interesting. Thanks for the link. I did something similar here to achieve my parallelization url I just built my own runner that finds the tests", chunks them and generates a temporary phpunit xml file to run with.  While what you describe makes sense, it leaves the responsibility up to the end user to implement something custom. Which is not necessarily bad, it is just a higher barrier. With some kind of built in chunking plus travis, circleci," etc. it is just a matter of configuration to achieve parallel test running. Is it possible to make it that easy?'""",,,,,,,,,,,,,,
phpunit,3605,open,3,2019-04-12 23:53:01,214.0,,1,,"b""b' Shall we close this then?'""",,,,,,,,,,,,,,,,,,,
phpunit,3605,open,closed,2019-04-14 09:07:14,554.22,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,3605,open,reopened,2019-04-14 09:09:46,2.53,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,3605,open,4,2019-04-12 23:53:01,2.57,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94 | Complexity \\xce\\x94  []url []url []url []url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,3605,open,5,2019-04-12 23:53:01,2.57,,,1,"b""b' # [Codecov]url  Report[![Impacted file tree graph]url  | [Impacted Files]url  | Coverage \\xce\\x94 | Complexity \\xce\\x94  []url []url []url []url -[Continue to review full report at Codecov]url '""",,,,,,,,,,,,,,,,,,,
phpunit,3605,open,6,2019-04-12 23:53:01,3.17,,1,,"b'b"" I need to think about this some more. But it\'s the weekend"," you know ;-) Maybe @epdenouden has some input?""'",,,,,,,,,,,,,,,,,,
phpunit,3605,open,7,2019-04-12 23:53:01,1379.85,1,,,"b'b"" Random user opinion: I quite miss parallelism in PHP and I think it\'s hurting a lot the PHP ecosystem especially for testing frameworks. There is quite a few attempts in the wild but they are all unreliable because:  Requires to re-implement the test runner (e.g. for paratest for PHPUnit) which is bound to be incomplete or getting out of sync one way or another Requires a dubious PHP extension (I have high hopes on but it\'s not widely used yet and more importantly not in the core and likely requires one to recompile  PHP binary since requires the ZTS distribution)  Anyway just to say from my PoV both approach suggested here and in #3387 are perfectly valid... I quite like #3387 since it opens the door to more advanced stuff. I however dislike that it\'s pushing the parallelism integration down to third-party instead of being handled by PHPUnit as this will most likely result in a small adoption rate.  The solution suggested here however is elegant and pragmatic: it won\'t cover all cases but will get the job done for most people. So _maybe_ a solution would be to:  Implement #3387 Leverage #3387 to implement the chunk feature suggested here within PHPUnit  This way you provide a minimalist yet good way to parallelise PHPUnit tests in the core and for the few for whom it\'s not enough"," they have an extension point to work on instead of trying to push more things in PHPUnit guarding it from becoming overly complex and bloated for this extra feature.""'",,,,,,,,,,,,,,,,,,
phpunit,3605,open,8,2019-04-12 23:53:01,650.1,,,1,"b'b"" In my opinion", even if PHP has good parallelism support, really big test suites will still need to be handled differently because you need to be able to run the chunks across a BIG infrastructure, not just one server. For example, with this PR it would be easily possible to have a process with docker that spins up all the servers need to run all the chunks in parallel across many servers, and tear it all down when done. This PR enables people to generate the chunks and run them directly with PHPUnit, then they can decide to either parallelize those chunks in one server and multiple PHP threads, or across many servers however they are able to set it up.  I am starting a new project right now where we are modernizing a legacy application and we have unit, functional and selenium tests. The selenium tests will quickly be very slow when ran serially and I have the infrastructure to be able to run those Selenium tests in parallel, I just need the mechanism to do it. This is why I think PHPUnit should have this mechanism built in.  Also," I\'ve seen this type of pattern appear multiple times over the years. Some people manually do the chunking by using groups (I think Etsy was the first I saw to do this) and some create different test  they run the different  across multiple jobs in Jenkins for example.""'",,,,,,,,,
phpunit,3605,open,-,-,-,1,6,3,,,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,opened,2019-05-25 15:16:25,,,,,,,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,title,2019-05-25 15:16:25,00:00,,1,,"b""b' Mocking method with object return type throws warning'""",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,body,2019-05-25 15:16:25,00:00,,1,,"b'b"" | Q       | A  PHPUnit version   | 8.2-gd58761f7b | PHP version   | 7.3.0 | Installation Method | Composer  Mocking a method with an return type throws a warning", eg  .  This was not happening in 8.1.  For example, let\'s say I have this interface:   And let\'s say I have the following (contrived) test:  I would expect this to pass," but instead I get a warning  .  I\'m guessing it has something to do with [this commit]url  : ""'",,,,,,,,,,,,,,,,
phpunit,3706,closed,1,2019-05-25 15:16:25,31.42,,1,,"b""b' I believe [this PR]url  should fix the problem'""",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,closed,2019-05-26 06:03:13,886.8,0,3,0,,,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,2,2019-05-25 15:16:25,1314.15,,1,,"b""b' I can still reproduce the warning in the most recent version of PHPUnit (3e9a1656a) using the example above.  Name|Version -|PHPUnit version|3e9a1656a PHP version|7.2.19 + 7.3.6 Installation Method|composer  '""",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,3,2019-05-25 15:16:25,928.12,,1,,"b""b' I was able to reproduce the issue with '""",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,reopened,2019-06-19 05:10:06,1386.88,0,5,0,,,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,4,2019-05-25 15:16:25,94.57,,1,,"b""b' url  (part of version 1.1.2 of the type package) fixes url  for me.'""",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,closed,2019-06-19 06:44:41,94.58,0,6,0,,,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,5,2019-05-25 15:16:25,706.18,,1,,"b'b"" @sebastianbergmann it\'s still happening to me when a mock of an interface returns another mock...     Version of phpunit: 8.2.3 Version of type: 1.1.3""'",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,6,2019-05-25 15:16:25,1355.72,,1,,"b""b' @davidkmenta Your example was incomplete. I have completed it like so:   The warning shown above is triggered because the API is used incorrectly. Its return value must be stored in a variable. Then", on this variable," needs to be called:   Before you were passing the result of instead of the result of to the second  .'""",,,,,,,,,,,,,,,,,
phpunit,3706,closed,7,2019-05-25 15:16:25,1431.02,,,1,"b'b"" @sebastianbergmann you\'re right! I completely forgot about that behavior. Thank you!""'",,,,,,,,,,,,,,,,,,,
phpunit,3706,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,,,
