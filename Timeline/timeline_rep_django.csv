REPOSITORY,ISSUE_ID,STATUS,EVENT,CREATED_AT,TIME DURATION,NEGATIVE,NEUTRAL,POSITIVE,MSG,,,,,,,,,,,,,,,,,
django,13,closed,opened,2012-04-28 19:48:22,,,,,,,,,,,,,,,,,,,,,,
django,13,closed,title,2012-04-28 19:48:22,00:00,,1,,"b""b' i18n javascript_catalog View Pollutes Global Namespace'""",,,,,,,,,,,,,,,,,
django,13,closed,body,2012-04-28 19:48:22,00:00,,1,,"b""b' This pull request corresponds to [Trac Ticket number 18231]url '""",,,,,,,,,,,,,,,,,
django,13,closed,1,2012-04-28 19:48:22,1095.37,,1,,"b""b' @matthewwithanm Does this have any backward compat issues? Eg if someone used this global scope vars?'""",,,,,,,,,,,,,,,,,
django,13,closed,2,2012-04-28 19:48:22,11.67,,1,,"b'b"" Yeah", this creates the and dictionaries in IIFEs," so they aren\'t global anymore.""'",,,,,,,,,,,,,,,
django,13,closed,3,2012-04-28 19:48:22,1.08,,,1,"b""b' Hmm I guess we could provide a deprecation path for that"," but who reads js warnings?!'""",,,,,,,,,,,,,,,,
django,13,closed,4,2012-04-28 19:48:22,402.62,1,,,"b""b' What do you think about the following idea: make all the generated javascript to be a string with django template syntax? That would allow us not to worry about indentation changes.'""",,,,,,,,,,,,,,,,,
django,13,closed,5,2012-04-28 19:48:22,112.9,,1,,"b'b"" I\'m very in favor of that. I think it would also make the JS much more maintainable. I would\'ve done that with the initial PR but thought it might be too drastic a change.""'",,,,,,,,,,,,,,,,,
django,13,closed,6,2012-04-28 19:48:22,548.13,,1,,"b""b' That would definitely help"," @jezdez any objections?'""",,,,,,,,,,,,,,,,
django,13,closed,7,2012-04-28 19:48:22,450.48,,1,,"b'b"" I\'m getting ready to embark on a weeklong trip", but if there aren\'t any objections in the meantime, I\'ll knock this out afterwards," before DjangoCon. I\'ll also update the dict creation to use object literals instead of repeated assignment.""'",,,,,,,,,,,,,,
django,13,closed,8,2012-04-28 19:48:22,346.93,,,1,"b'b\' This PR is stale; since our triage options on GitHub are limited to ""open"" or ""closed"" I\\\'m going to close it. Please re-open if you have a chance to update it. If no one reviews it", write to the django-developers mailing list. Thanks!\'',,,,,,,,,,,,,,,,
django,13,closed,closed,2013-02-01 21:17:33,89.18,1,7,2,,,,,,,,,,,,,,,,,,
django,13,closed,9,2012-04-28 19:48:22,234.48,,1,,"b'b"" @aaugustin I\'ve [rebased these commits]url  onto the current master", however, I don\'t have permissions to re-open this issue and, unless the issue is open, I can\'t update the pull request. I believe if you reopen the issue I can force push to this branch and GitHub will update the PR. Alternatively," I can open a new PR if you\'d rather.""'",,,,,,,,,,,,
django,13,closed,reopened,2013-02-02 09:52:34,755.02,1,8,2,,,,,,,,,,,,,,,,,,
django,13,closed,10,2012-04-28 19:48:22,520.95,,1,,"b""b' I thought you could re-open a PR simply by pushing new commits :/'""",,,,,,,,,,,,,,,,,
django,13,closed,11,2012-04-28 19:48:22,619.98,,1,,"b""b' No problem. There they be (:'""",,,,,,,,,,,,,,,,,
django,13,closed,12,2012-04-28 19:48:22,1065.88,,1,,"b""b' I think using the namespace like we do in the admin makes sense for this.'""",,,,,,,,,,,,,,,,,
django,13,closed,13,2012-04-28 19:48:22,192.33,,,1,"b'b"" @jezdez Sounds good. 952f32a makes that change and 95b1fe3 updates the other creation of the django namespace so as not to clobber it if it already exists. (I think that\'s the only place it\'s created?) Note that I\'m not exporting the catalog or format dictionaries to the global namespace but we could if we wanted to preserve backwards compatibility. (Since the functions are using the namespaced versions"," they would still continue to work if somebody overwrote the global reference.)""'",,,,,,,,,,,,,,,,
django,13,closed,14,2012-04-28 19:48:22,1327.85,,1,,"b""b' @ramiro Let me know if anything is missing.'""",,,,,,,,,,,,,,,,,
django,13,closed,15,2012-04-28 19:48:22,740.15,,,1,"b'b"" @matthewwithanm I\'ve reviewed the PR and it\'s in good  commit RSN after some i18n problems in master are settled so I can test the changes in isolation and ask for opinions from a couple  of devs experienced on i18n. Thanks for a great job.""'",,,,,,,,,,,,,,,,,
django,13,closed,16,2012-04-28 19:48:22,601.97,,,1,"b""b' No problem; thanks for reviewing!'""",,,,,,,,,,,,,,,,,
django,13,closed,17,2012-04-28 19:48:22,443.02,,,1,"b""b' Fixed in a506b6981bc48caec30bca3de94d2ac3e6fc1660. Thanks!'""",,,,,,,,,,,,,,,,,
django,13,closed,closed,2013-04-14 21:04:10,671.6,1,12,6,,,,,,,,,,,,,,,,,,
django,13,closed,-,-,-,1,12,6,,,,,,,,,,,,,,,,,,
django,46,closed,opened,2012-05-05 12:12:58,,,,,,,,,,,,,,,,,,,,,,
django,46,closed,title,2012-05-05 12:12:58,00:00,,1,,"b""b' Ticket #14030 Refactor Aggregate to use ExpressionNodes'""",,,,,,,,,,,,,,,,,
django,46,closed,body,2012-05-05 12:12:58,00:00,,1,,"b""b' This patch refactors Aggregate into ExpressionNode", allowing for total composability of the two. My original announcement was in this email to the developers list," and more detail can be found there: url '""",,,,,,,,,,,,,,,
django,46,closed,1,2012-05-05 12:12:58,39.73,,,1,"b'b"" If you want this pulled in you should rework the commit history (git rebase -i HEAD~29). We will not pull all those commits into django\'s repo. Aim for logical commits", and a commit history where the tests pass after each commit. It seems this patch could be squashed to one, or maybe 2-3 commits. Another option is to let the committers do the squashing (ie, they will do a git merge squash of your work). It is of course nicer for committers if you do this work for us... It makes reviewing easier, and the easier the reviewing is, the better the chances of getting this in. I really hope we will get something along the lines of this pull request into 1.5 the feature is useful, but so is reworking the aggregate support to better reuse the expression nodes. So," the silence doesn\'t mean we are against this patch just that we are too busy to deal with such a large patch.""'",,,,,,,,,,
django,46,closed,2,2012-05-05 12:12:58,444.62,,1,,"b""b' After considering it for a little bit", I figured it would make the most sense just to rebase it into a single commit. However, just in case it would ease review in any way," I made [a backup full-history copy]url '""",,,,,,,,,,,,,,
django,46,closed,3,2012-05-05 12:12:58,1390.83,,1,,"b'b"" At this point I think it would be best to first rework the ORM internals to better shape. This should include SQLExpression", SQLEvaluator and the . I definitely think there is a lot of potential in your patch, but the existing implementation has just gotten too messy. I just can\'t wrap my head around all the complexities of the current implementation, and thus I don\'t feel comfortable adding more possible complexities. Note that my rejection is not about your patch, it\'s about the existing stuff in Django needing cleanup first. The idea of using SQLExpressions in aggregates is definitely a good idea. Your work looked good to me. I will close this pull request for now. I would hope to get the SQLExpression into such a state that basing the aggregate on expression should be much more straightforward to do. If it turns out that the implementation is already as simple as it will get," then lets reopen this pull request.""'",,,,,,,,,,,,
django,46,closed,closed,2012-05-24 19:28:09,435.18,0,4,1,,,,,,,,,,,,,,,,,,
django,46,closed,4,2012-05-05 12:12:58,1255.32,,1,,"b'b"" Even if the ORM hasn\'t been cleaned up IMO it is time to just work this into master. I am not sure if reopening this pull request is the best way forward... But doing that in any case.""'",,,,,,,,,,,,,,,,,
django,46,closed,reopened,2012-11-28 16:23:28,1255.32,0,5,1,,,,,,,,,,,,,,,,,,
django,46,closed,5,2012-05-05 12:12:58,254.15,,1,,"b'b"" I\'m anxiously waiting for this to be get in so that we can work on way forward for ticket #11305. I personally feel this is a major improvement"," particularly for use cases involving large  databases like the one I\'m  working on currently.""'",,,,,,,,,,,,,,,,
django,46,closed,6,2012-05-05 12:12:58,1041.53,,,1,"b'b"" I\'m very excited about this as well (esp"," pertaining to its application in accounting and commerce software). I will help test this out immediately after it makes it into master.""'",,,,,,,,,,,,,,,,
django,46,closed,7,2012-05-05 12:12:58,440.62,,1,,"b""b' @akaariai This PR no longer applies. Do you still wish to keep it open? Or is the Trac ticket enough?'""",,,,,,,,,,,,,,,,,
django,46,closed,closed,2013-02-01 21:19:46,296.3,0,7,2,,,,,,,,,,,,,,,,,,
django,46,closed,8,2012-05-05 12:12:58,549.2,1,,,"b'b"" @aaugustin May I ask why this PR no longer applies? Has a different direction been taken? I\'m looking into how the ORM works", in detail, with the aim of trying to improve aggregate support (and, potentially, things like user-built expressions as suggested in #11305). Traction on #14030 seems to have stalled, and I can\'t find any information about the ticket since this PR was closed. @akaariai has mentioned some concerns about the internals of the ORM that should be cleaned up (ideally) before accepting this patch perhaps there\'s been some progress made," or a direction chosen?""'",,,,,,,,,,,
django,46,closed,9,2012-05-05 12:12:58,678.78,,1,,"b'b"" I doesn\'t apply cleanly to master because of changes that happened in master since it was created.""'",,,,,,,,,,,,,,,,,
django,46,closed,-,-,-,1,8,2,,,,,,,,,,,,,,,,,,
django,134,closed,opened,2012-06-08 10:03:04,,,,,,,,,,,,,,,,,,,,,,
django,134,closed,title,2012-06-08 10:03:04,00:00,,1,,"b""b' Fixed #17869 security improvement to RemoteUserMiddleware'""",,,,,,,,,,,,,,,,,
django,134,closed,body,2012-06-08 10:03:04,00:00,,1,,"b""b' (On behalf of Paul McMillan) this is a minor security fix so it should be backported to 1.4 Fixed #17869RemoteUserMiddleware forces logout when REMOTE_USER header disappears during a same browser session.Added a test"," and documentation for the 1.4.1 release.'""",,,,,,,,,,,,,,,,
django,134,closed,1,2012-06-08 10:03:04,38.53,,1,,"b""b' The changelog entry needs to be in  "," too.'""",,,,,,,,,,,,,,,,
django,134,closed,2,2012-06-08 10:03:04,28.33,,1,,"b""b' Added changelog entry to 1.5.txt.'""",,,,,,,,,,,,,,,,,
django,134,closed,closed,2012-09-09 20:02:48,599.73,0,4,0,,,,,,,,,,,,,,,,,,
django,134,closed,reopened,2012-09-09 20:02:58,0.17,0,4,0,,,,,,,,,,,,,,,,,,
django,134,closed,closed,2012-09-09 20:03:05,0.12,0,4,0,,,,,,,,,,,,,,,,,,
django,134,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,
django,144,closed,opened,2012-06-08 15:40:54,,,,,,,,,,,,,,,,,,,,,,
django,144,closed,title,2012-06-08 15:40:54,00:00,,1,,"b""b' #18451 Improved class based view documentation'""",,,,,,,,,,,,,,,,,
django,144,closed,body,2012-06-08 15:40:54,00:00,,1,,"b'b"" For url  Ref Improvements:Documentation moved to /-based-views/ directory.Method Resolution Order (MRO) on most views.Method flowchart added to many views.Mixins moved to their own pages.Mixins demonstrate which other Mixins they extend.Autodoc added to all views and mixins.  Because the Django code does always not contain docstrings", or it is not complete," there remains in many cases the old manual documentation.  \'Note\' statements placed whenever autodoc is in addition to manual documentation. Topic Improvements:Documentation moved to /-based-views/ directory.Cleaner explanation including additional examples.More examples.Mixins moved to their own pages.Very clean mixin documentation with advocacy for best practices. Authors:Daniel GreenfeldJames AylettMarc TamlynSimon Williams""'",,,,,,,,,,,,,,,
django,144,closed,1,2012-06-08 15:40:54,26.02,1,,,"b'b"" Filling in some discussion from IRC: I think this should nix the use of  . isn\'t used in Django\'s docs deliberately: it prevents translation (which we _want_ to do", despite have not done it...) and it can cause the docs to be hard to build (since it means they have to be able to  , risking the dreaded error). Instead," I\'d like to see this use the [include directive]url  to avoid repetition.""'",,,,,,,,,,,,,,
django,144,closed,2,2012-06-08 15:40:54,233.47,,1,,"b'b"" More updates from me can be found here: url  When @pydanny has accepted them they\'ll appear here.""'",,,,,,,,,,,,,,,,,
django,144,closed,3,2012-06-08 15:40:54,326.75,,,1,"b""b' Wow", sorry for the interruption," but thanks for your great documentation efforts! :)'""",,,,,,,,,,,,,,,
django,144,closed,4,2012-06-08 15:40:54,17.52,,1,,"b'b"" I could probably help a little with those docs"," but I don\'t want to conflict with currently ongoing work. Is anyone working on major changes? Something I noticed is that the method flowcharts aren\'t always correct. I could for example verify and correct those. Against which version are those docs written? 1.5-dev?""'",,,,,,,,,,,,,,,,
django,144,closed,5,2012-06-08 15:40:54,1013.05,,1,,"b'b"" Ok", autodoc is nixed. #145 has been merged in. Most of the small comments from here are fixed up," and the dead files (  and  ) have been deleted. So I think we\'re kinda there. There\'s still a load to do but it would make sense to get this merged in and then look for smaller patches to improve it further. Will make it much easier for others to get involved.""'",,,,,,,,,,,,,,,
django,144,closed,6,2012-06-08 15:40:54,247.05,,,1,"b'b"" Except some optional intersphinx links this looks good to me. If there are no other reviews"," I\'d commit this tomorrow. ""'",,,,,,,,,,,,,,,,
django,144,closed,7,2012-06-08 15:40:54,1260.38,,1,,"b""b' @jezdez"," master of intersphinx. I believe all outstanding blocking issues are resolved.'""",,,,,,,,,,,,,,,,
django,144,closed,8,2012-06-08 15:40:54,58.18,,1,,"b""b' Those changes fixed the build for me: url  '""",,,,,,,,,,,,,,,,,
django,144,closed,9,2012-06-08 15:40:54,4.97,,,1,b'b\' Oh," I think I still have two issues:The word ""Fundamentals"" for describing the base class based views seems a bit off to me. It may be my non-nativeness but it sounds like ""Fundamentalists"" which has a rather negative connotation. I know ""base"" is also pretty loaded"," so what if we call it ""Basic class based views"". Alternatively ""Essential class based views""?The method flowcharts need some nice graphics", or at least links to the appropriate methods instead of just a list of text. Given those two important things are still open, I won\\\'t merge this just yet. Any help with solving would be much appreciated.\'',,,,,,,,,,,,,
django,144,closed,10,2012-06-08 15:40:54,38.75,1,,,b'b\' Hmmm. I like fundamental. To me there\\\'s no connection with fundamentalist," and we\\\'re using it in the meaning of ""Foundational"" (which is a worse word) kinda meaning that they\\\'re the important ones and the ones upon which everything else is built. Basic has connotations of simple", and I\\\'m not sure they are... Essential also implies you have to use them, which you don\\\'t. Flowcharts are a bit more of a question. I probably need to do a good review of them to make sure they\\\'re actually accurate. Some graphviz graphics would be nice, but I\\\'m concerned about them not being updated properly. Either we build them first and commit the images to the repo, or we use url  to build them dynamically. This would require everything to have the relevant binaries installed though. Opinions @jacobian? A lot of the ref docs are incomplete which includes the method flows. Not every method is documented yet (see previous discussion about ) I\\\'ve not written all of the replacement references now the autobuilt stuff is gone. Do we want to get it all accurate and finished before we merge anything? Re those build changes, I\\\'m not getting errors but that is tidier rst so I\\\'ll make those tweaks.\'',,,,,,,,,,,
django,144,closed,11,2012-06-08 15:40:54,656.72,,1,,"b'b"" @idangazit I\'m going to find you on IRC. Right now.""'",,,,,,,,,,,,,,,,,
django,144,closed,closed,2012-06-11 08:23:45,1002.85,2,8,3,,,,,,,,,,,,,,,,,,
django,144,closed,reopened,2012-06-11 08:35:07,11.37,2,8,3,,,,,,,,,,,,,,,,,,
django,144,closed,12,2012-06-08 15:40:54,20.23,,1,,"b'b"" I\'m going to close this as I think it\'s ready for commit (I have all the changes locally). I\'ve decided to not go with as I think it would introduce more confusion. But that\'s really a minor thing and I\'m happy to say this is going to be a HUGE help for our users. Thank you good sirs.""'",,,,,,,,,,,,,,,,,
django,144,closed,closed,2012-06-11 08:44:00,8.88,2,9,3,,,,,,,,,,,,,,,,,,
django,144,closed,13,2012-06-08 15:40:54,4.58,,1,,"b""b' :cake::sparkles:'""",,,,,,,,,,,,,,,,,
django,144,closed,14,2012-06-08 15:40:54,1215.05,1,,,"b""b' Just in time to make us look foolish url  as we complain about lack of documentation... :-D'""",,,,,,,,,,,,,,,,,
django,144,closed,-,-,-,3,10,3,,,,,,,,,,,,,,,,,,
django,368,closed,opened,2012-09-11 08:59:59,,,,,,,,,,,,,,,,,,,,,,
django,368,closed,title,2012-09-11 08:59:59,00:00,,1,,"b'b"" fixed bug#6681: RST default reference role tries docutils\' default role ...""'",,,,,,,,,,,,,,,,,
django,368,closed,body,2012-09-11 08:59:59,00:00,,1,,"b'b"" Fixes bug#6681 as described in url  Docutils establish a \'\'DEFAULT_INTERPRETED_ROLE\'\' which is overriden by django with **cmsreference** role. Django\'s role is intended to work on admin docs"," but it\'s not suitable for general purpose as it needs some keys in \'\'\'\'.""'",,,,,,,,,,,,,,,,
django,368,closed,1,2012-09-11 08:59:59,570.82,,1,,"b""b' Ticket has been closed as  has been deprecated.'""",,,,,,,,,,,,,,,,,
django,368,closed,closed,2013-05-31 18:30:48,570.82,0,3,0,,,,,,,,,,,,,,,,,,
django,368,closed,2,2012-09-11 08:59:59,824.73,,1,,"b'b"" Reopening", as this isn\'t a problem with ," but a problem with .""'",,,,,,,,,,,,,,,
django,368,closed,reopened,2013-06-17 08:15:32,824.73,0,4,0,,,,,,,,,,,,,,,,,,
django,368,closed,3,2012-09-11 08:59:59,1089.53,,1,,"b""b' An improved fix at #1277 -no need to set a global default at all.'""",,,,,,,,,,,,,,,,,
django,368,closed,closed,2013-06-18 09:29:56,74.4,0,5,0,,,,,,,,,,,,,,,,,,
django,368,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,
django,392,closed,opened,2012-09-25 03:53:02,,,,,,,,,,,,,,,,,,,,,,
django,392,closed,title,2012-09-25 03:53:02,00:00,,1,,"b""b' fixing auth basic tests'""",,,,,,,,,,,,,,,,,
django,392,closed,body,2012-09-25 03:53:02,00:00,,1,,"b""b' Testing method () without password param.'""",,,,,,,,,,,,,,,,,
django,392,closed,1,2012-09-25 03:53:02,149.12,,1,,"b""b' This was fixed in url '""",,,,,,,,,,,,,,,,,
django,392,closed,closed,2012-09-27 06:22:09,149.12,0,3,0,,,,,,,,,,,,,,,,,,
django,392,closed,2,2012-09-25 03:53:02,414.43,,1,,"b""b' Look this: url  It is creating an user at variable and is testing the variable again"," so the variable is not being .'""",,,,,,,,,,,,,,,,
django,392,closed,3,2012-09-25 03:53:02,240.73,,,1,"b'b"" Though I had linked to the wrong commit you are correct while the code was altered in the recent 3011 work"," it still contained the logic flaw. url  I\'ll land a fix shortly thanks for the keen eye and followup.""'",,,,,,,,,,,,,,,,
django,392,closed,reopened,2012-09-27 17:17:19,655.17,0,4,1,,,,,,,,,,,,,,,,,,
django,392,closed,closed,2012-09-27 17:26:09,8.83,0,4,1,,,,,,,,,,,,,,,,,,
django,392,closed,4,2012-09-25 03:53:02,142.57,,1,,"b'b"" @ptone I\'m pretty sure that doesn\'t fix #392. Please make sure to use Trac ticket IDs to reduce the number of wrong comments there (see url ""'",,,,,,,,,,,,,,,,,
django,392,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,
django,393,closed,opened,2012-09-25 07:16:16,,,,,,,,,,,,,,,,,,,,,,
django,393,closed,title,2012-09-25 07:16:16,00:00,,1,,b'b\' Fixes for Oracle: Output conversion,"%"" in names\''
django	393	closed	body	shaib	2012-09-25 07:16:16	00:00		+1		b""b' Two fixes for the Oracle backend:1. Support database object names including percent signs. Without this, the backend cannot be used to run the Django test suite, as it fails to create the test database.2. Use a more efficient method for converting values, esp. numbers, on the way out (code mostly by Ian Kelly, with a small but imported fix after comment by Anssi K\\xc3\\xa4\\xc3\\xa4ri\\xc3\\xa4inen)'",,,,,,,,,,,,,,,,
django,393,closed,1,2012-09-25 07:16:16,884.55,,1,,"b'b"" I pushed the \'%\' handling part in manually.""'",,,,,,,,,,,,,,,,,
django,393,closed,closed,2012-10-27 22:00:50,884.57,0,3,0,,,,,,,,,,,,,,,,,,
django,393,closed,2,2012-09-25 07:16:16,27.62,,1,,"b""b' ... but then you closed the whole pull-request; what about the other parts?'""",,,,,,,,,,,,,,,,,
django,393,closed,3,2012-09-25 07:16:16,711.3,1,,,"b""b' Sorry"," I managed to miss this having multiple issues. Will reopen. BTW does this issue have a ticket in Trac?'""",,,,,,,,,,,,,,,,
django,393,closed,reopened,2012-10-28 10:19:44,738.9,1,4,0,,,,,,,,,,,,,,,,,,
django,393,closed,4,2012-09-25 07:16:16,844.0,,1,,"b'b"" Not that I\'m aware of (or I would have mentioned it).""'",,,,,,,,,,,,,,,,,
django,393,closed,5,2012-09-25 07:16:16,1328.23,,1,,"b'b"" I\'m re-submitting this. Needed to be changed a lot anyway.""'",,,,,,,,,,,,,,,,,
django,393,closed,closed,2013-05-15 22:31:58,732.23,1,6,0,,,,,,,,,,,,,,,,,,
django,393,closed,-,-,-,1,6,0,,,,,,,,,,,,,,,,,,
django,695,closed,opened,2013-02-02 12:47:28,,,,,,,,,,,,,,,,,,,,,,
django,695,closed,title,2013-02-02 12:47:28,00:00,,1,,"b""b' Add CSRF_COOKIE_HTTPONLY config value'""",,,,,,,,,,,,,,,,,
django,695,closed,body,2013-02-02 12:47:28,00:00,,,1,"b'b"" Follow-up of #114 and more recently #150", rebased on current master. Hopefully it\'s not lying around for another 8 months :-) So I copied my last comment: Maybe it makes sense to keep the config value and set it to False by default," otherwise the current CSRF+Ajax recipe in the official Django documentation won\'t work url  because access to \'\' is restricted (obviously). Of course there are other ways to do it (like url  but maybe this is worth discussing beforehand.""'",,,,,,,,,,,,,,,
django,695,closed,1,2013-02-02 12:47:28,1.27,,1,,"b""b' @aaugustin"," could you have a look again?'""",,,,,,,,,,,,,,,,
django,695,closed,2,2013-02-02 12:47:28,1200.6,,1,,"b""b' Mhm"," 1.5 was feature-frozen back then. I really hope this one makes it in before 1.6 is gonna be frozen :-)'""",,,,,,,,,,,,,,,,
django,695,closed,3,2013-02-02 12:47:28,298.67,,1,,"b""b' @saschpe: Where is the ticket for this change?'""",,,,,,,,,,,,,,,,,
django,695,closed,closed,2013-02-06 13:49:54,62.43,0,4,1,,,,,,,,,,,,,,,,,,
django,695,closed,reopened,2013-02-06 13:50:03,0.15,0,4,1,,,,,,,,,,,,,,,,,,
django,695,closed,4,2013-02-02 12:47:28,2.53,,1,,"b'b"" Sry"," didn\'t intend to close here but to cancel my comment -github\'s ui failed me""'",,,,,,,,,,,,,,,,
django,695,closed,5,2013-02-02 12:47:28,1063.72,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,695,closed,6,2013-02-02 12:47:28,87.92,,1,,"b""b' Fixed in 720888a14699a80a6cd07d32514b9dcd5b1005fb'""",,,,,,,,,,,,,,,,,
django,695,closed,closed,2013-02-07 09:02:11,1152.13,0,7,1,,,,,,,,,,,,,,,,,,
django,695,closed,7,2013-02-02 12:47:28,25.08,,1,,b'b\' Mhm," can I get a comment on url  ? It seems to me that several core guys are part of the ""single-path purity"" church.\''",,,,,,,,,,,,,,,,
django,695,closed,-,-,-,0,8,1,,,,,,,,,,,,,,,,,,
django,1062,closed,opened,2013-05-14 03:52:46,,,,,,,,,,,,,,,,,,,,,,
django,1062,closed,title,2013-05-14 03:52:46,00:00,,1,,"b""b' Recommend using the bcrypt library instead of py-bcrypt'""",,,,,,,,,,,,,,,,,
django,1062,closed,body,2013-05-14 03:52:46,00:00,,1,,"b""b' py-bcrypt has not been updated in some timepy-bcrypt does not support Python3py3k-bcrypt"," a port of py-bcrypt to python3 is not compatible with Djangobcrypt is supported on all versions of Python that Django supports'""",,,,,,,,,,,,,,,,
django,1062,closed,1,2013-05-14 03:52:46,1.67,1,,,"b""b' Note that this is completely backwards compatible. The bcrypt library supports the same API as py-bcrypt does it just works on Python 2.x and Python 3.x as well as PyPy 2.0 (py-bcrypt might work here"," but using the C API on PyPy is asking for trouble).'""",,,,,,,,,,,,,,,,
django,1062,closed,closed,2013-05-14 22:51:51,1139.08,1,2,0,,,,,,,,,,,,,,,,,,
django,1062,closed,reopened,2013-05-14 22:51:55,0.07,1,2,0,,,,,,,,,,,,,,,,,,
django,1062,closed,2,2013-05-14 03:52:46,1144.52,1,,,"b""b' Sorry for the accidental click. This looks good to me.'""",,,,,,,,,,,,,,,,,
django,1062,closed,closed,2013-05-14 23:20:33,28.63,2,2,0,,,,,,,,,,,,,,,,,,
django,1062,closed,-,-,-,2,2,0,,,,,,,,,,,,,,,,,,
django,1098,closed,opened,2013-05-18 12:29:27,,,,,,,,,,,,,,,,,,,,,,
django,1098,closed,title,2013-05-18 12:29:27,00:00,,1,,"b""b' Added example of using sitemaps with static views.'""",,,,,,,,,,,,,,,,,
django,1098,closed,body,2013-05-18 12:29:27,00:00,,1,,"b""b' References #16829.'""",,,,,,,,,,,,,,,,,
django,1098,closed,1,2013-05-18 12:29:27,1268.5,,1,,"b'b"" It does look OK to me"," it\'s an useful example.""'",,,,,,,,,,,,,,,,
django,1098,closed,2,2013-05-18 12:29:27,49.48,,,1,"b""b' Thanks!'""",,,,,,,,,,,,,,,,,
django,1098,closed,closed,2013-05-19 10:27:26,1317.98,0,3,1,,,,,,,,,,,,,,,,,,
django,1098,closed,reopened,2013-05-19 10:27:30,0.07,0,3,1,,,,,,,,,,,,,,,,,,
django,1098,closed,closed,2013-05-19 10:27:34,0.07,0,3,1,,,,,,,,,,,,,,,,,,
django,1098,closed,3,2013-05-18 12:29:27,0.25,1,,,"b""b' Ooops"," button fail.'""",,,,,,,,,,,,,,,,
django,1098,closed,4,2013-05-18 12:29:27,29.7,,1,,b'b\' Thank-you for the contribution. In the future," please following the commit message guidelines (""Fixed #16829 -Added example of using sitemaps with static views"") so that the ticket will  automatically be closed when the pull request is merged. url \''",,,,,,,,,,,,,,,,
django,1098,closed,5,2013-05-18 12:29:27,58.37,1,,,"b'b"" Ack! Sorry Tim", I\'ve been doing some of these as I go along," missed it this time.""'",,,,,,,,,,,,,,,
django,1098,closed,-,-,-,2,4,1,,,,,,,,,,,,,,,,,,
django,1139,closed,opened,2013-05-18 16:34:19,,,,,,,,,,,,,,,,,,,,,,
django,1139,closed,title,2013-05-18 16:34:19,00:00,,1,,"b""b' Make sure () never fetches more than two rows'""",,,,,,,,,,,,,,,,,
django,1139,closed,body,2013-05-18 16:34:19,00:00,,1,,"b""b' Currently if you pass incorrect parameters to get you can end up fetching a huge number of rows and possibly run out of memory for the sake of displaying the number of matched rows.'""",,,,,,,,,,,,,,,,,
django,1139,closed,1,2013-05-18 16:34:19,245.77,,1,,"b""b' This seems reasonable to me. Is there a corresponding trac ticket?'""",,,,,,,,,,,,,,,,,
django,1139,closed,2,2013-05-18 16:34:19,364.38,,1,,"b'b"" I thought there was but I can\'t find after a quick search.""'",,,,,,,,,,,,,,,,,
django,1139,closed,3,2013-05-18 16:34:19,409.38,,1,,b'b\' I found it," but it was marked as ""won\\\'t fix."" [#6785]url \''",,,,,,,,,,,,,,,,
django,1139,closed,closed,2013-06-01 09:33:51,1019.53,0,5,0,,,,,,,,,,,,,,,,,,
django,1139,closed,4,2013-05-18 16:34:19,98.28,1,,,"b'b"" Not sure why this isn\'t considered a problem. I\'ve had this bring a production server down when buggy code generated a object that resulted in twenty something millions of rows being matched. Instead of getting a 500 with multiple rows returned error"," the server swapped to death while trying to fetch all rows and wrap them in python objects just for the sake of displaying a useless counter.""'",,,,,,,,,,,,,,,,
django,1139,closed,5,2013-05-18 16:34:19,3.57,,1,,"b'b\' Feel free to start a discussion on django-developers if you disagree with the reasoning presented in the ticket. That\\\'s the proper forum for re-opening a ticket that\\\'s marked as ""won\\\'t fix.""\''",,,,,,,,,,,,,,,,,
django,1139,closed,6,2013-05-18 16:34:19,377.42,,1,,"b""b' Reopening this based on url  (needs some adjustments based on that discussion"," I think).'""",,,,,,,,,,,,,,,,
django,1139,closed,reopened,2013-06-06 17:33:07,479.27,1,7,0,,,,,,,,,,,,,,,,,,
django,1139,closed,7,2013-05-18 16:34:19,1315.85,,1,,"b""b' Updated pull request: url '""",,,,,,,,,,,,,,,,,
django,1139,closed,closed,2013-07-02 15:28:59,1315.87,1,8,0,,,,,,,,,,,,,,,,,,
django,1139,closed,-,-,-,1,8,0,,,,,,,,,,,,,,,,,,
django,1225,closed,opened,2013-05-27 08:31:07,,,,,,,,,,,,,,,,,,,,,,
django,1225,closed,title,2013-05-27 08:31:07,00:00,,1,,"b""b' Fixed #13518 Added FILE_UPLOAD_DIRECTORY_PERMISSIONS setting'""",,,,,,,,,,,,,,,,,
django,1225,closed,body,2013-05-27 08:31:07,00:00,,1,,"b""b' This setting does for new directories what FILE_UPLOAD_PERMISSIONSdoes for new files.'""",,,,,,,,,,,,,,,,,
django,1225,closed,1,2013-05-27 08:31:07,944.65,,,1,"b""b' Thanks for this. Since 1.6 is feature frozen"," could you update this for 1.7 and add a note in ?'""",,,,,,,,,,,,,,,,
django,1225,closed,closed,2013-08-12 00:15:46,944.65,0,2,1,,,,,,,,,,,,,,,,,,
django,1225,closed,reopened,2013-08-12 00:17:11,1.42,0,2,1,,,,,,,,,,,,,,,,,,
django,1225,closed,2,2013-05-27 08:31:07,664.15,,,1,"b""b' Thanks"," merged in 6bdb3b1135d1bd7b2dc24131b9d26ac19ebdba67.'""",,,,,,,,,,,,,,,,
django,1225,closed,closed,2013-08-12 11:19:55,662.73,0,2,2,,,,,,,,,,,,,,,,,,
django,1225,closed,-,-,-,0,2,2,,,,,,,,,,,,,,,,,,
django,1236,closed,opened,2013-06-01 18:34:35,,,,,,,,,,,,,,,,,,,,,,
django,1236,closed,title,2013-06-01 18:34:35,00:00,,1,,"b""b' Allowing FORMAT_MODULE_PATH setting to be list of paths.'""",,,,,,,,,,,,,,,,,
django,1236,closed,body,2013-06-01 18:34:35,00:00,,1,,"b""b' This patch includes tests for the iter_format_modules method (which was nevertested before). It also includes a test to ensure backwards compatibility andto test the new functionality. The patch also includes changes to thos parts of the docs that mentionthe FORMAT_MODULE_PATH setting.'""",,,,,,,,,,,,,,,,,
django,1236,closed,1,2013-06-01 18:34:35,1105.33,,1,,"b""b' Where is an accepted ticket for this pull request?'""",,,,,,,,,,,,,,,,,
django,1236,closed,2,2013-06-01 18:34:35,84.12,,1,,"b""b' @apollo13 the ticket is here: url '""",,,,,,,,,,,,,,,,,
django,1236,closed,3,2013-06-01 18:34:35,36.92,1,,,"b""b' @apollo13 I rebased this branch in my fork to the latest commit of Django. Then I force pushed this branch into my fork. I think because of this", some comments of you got lost. You had asked me to change the behaviour so that the values in the FORMAT_MODULE_PATH settings are not reversed," which is done now. Sorry again for the huge delay.'""",,,,,,,,,,,,,,,
django,1236,closed,4,2013-06-01 18:34:35,12.43,,1,,"b""b' The new functionality should also be mentioned in the release notes ()'""",,,,,,,,,,,,,,,,,
django,1236,closed,5,2013-06-01 18:34:35,1287.82,,1,,"b""b' The feature freeze for 1.7 is next Thursday"," any chance of addressing my last set of comments before then?'""",,,,,,,,,,,,,,,,
django,1236,closed,6,2013-06-01 18:34:35,1404.33,,,1,"b""b' oh dear"," forgot about this one. I will rebase to 1.7 and submit a new patch that addresses the review comments... '""",,,,,,,,,,,,,,,,
django,1236,closed,7,2013-06-01 18:34:35,660.97,,,1,"b""b' Maybe you made a typo"," but actually it needs to be rebased on master (1.8) as 1.7 is feature frozen now.'""",,,,,,,,,,,,,,,,
django,1236,closed,8,2013-06-01 18:34:35,1.4,,1,,b'b\' right, that\\\'s what I meant.On 17 May 2014 07:07,"Tim Graham"" notifications@ wrote:\''
django	1236	closed	9	mbrochh	2013-06-01 18:34:35	633.67	+1			b""b' @timgraham here we go. I rebased the current master into my patch and applied the codereview hints that you provided. Sorry that due to the rebase parts of our discussion are now lost, again.'",,,,,,,,,,,,,,,
django,1236,closed,10,2013-06-01 18:34:35,461.57,,,1,"b'b"" This is looking good. If you can address my latest round of comments"," please go ahead and squash your commits and follow our [commit message guidelines]url  I\'ll commit it shortly thereafter. Thanks!""'",,,,,,,,,,,,,,,,
django,1236,closed,11,2013-06-01 18:34:35,727.98,,1,,"b""b' @timgraham I have added your recent comments and have squashed the commits. Hope my commit message is good enough :)'""",,,,,,,,,,,,,,,,,
django,1236,closed,12,2013-06-01 18:34:35,390.57,,,1,"b""b' I fixed a couple flake8 warnings and merged in 950b6de16ac2f8135612f2ed5984c090dd8e4dcf"," thanks.'""",,,,,,,,,,,,,,,,
django,1236,closed,closed,2014-05-19 12:01:41,1047.1,2,8,4,,,,,,,,,,,,,,,,,,
django,1236,closed,13,2013-06-01 18:34:35,22.38,,1,,"b""b' Actually"," there is a failing test so I reverted this for now:  '""",,,,,,,,,,,,,,,,
django,1236,closed,reopened,2014-05-19 12:24:04,22.38,2,9,4,,,,,,,,,,,,,,,,,,
django,1236,closed,14,2013-06-01 18:34:35,39.93,,1,,"b""b' @timgraham alright"," the odyssey continues. I have deleted my tests and the fake format modules that I had added and I have moved the test that checks for the new functionality into the existing test function. I also created a second fake format module next to the one that we already have at I ran the whole test suite: Note: I just saw that you merged some flake8 fixes those might be lost now becuase I ammended my commit and forced pushed into my branch. I checked and for flake8 issues but could find none.'""",,,,,,,,,,,,,,,,
django,1236,closed,15,2013-06-01 18:34:35,33.3,,1,,"b""b' @timgraham added your remarks.'""",,,,,,,,,,,,,,,,,
django,1236,closed,16,2013-06-01 18:34:35,3.37,,1,,"b""b' buildbot"," test this please.'""",,,,,,,,,,,,,,,,
django,1236,closed,17,2013-06-01 18:34:35,24.28,,,1,"b'b"" Looks good. Test failure on Jenkins are unrelated. I\'ll merge it soon.""'",,,,,,,,,,,,,,,,,
django,1236,closed,18,2013-06-01 18:34:35,8.92,,,1,"b""b' @timgraham thank you so so so much for your patience and guidance. I guess this pull request kind of defeated the whole purpose of open source if I had told you my feature idea and you had implemented it", the whole thing would have been done in 30 minutes one year ago. But then again," I think I learned a lot along the way and will definitely be much much much more precise when submitting pull requests in the future.'""",,,,,,,,,,,,,,,
django,1236,closed,19,2013-06-01 18:34:35,1301.75,,,1,"b'b"" You\'re welcome"," look forward to your future contributions. :-) merged in bb0a9a070b9570c85bcb17346dae6513e4ba6e76.""'",,,,,,,,,,,,,,,,
django,1236,closed,closed,2014-05-21 11:55:37,1411.55,2,12,7,,,,,,,,,,,,,,,,,,
django,1236,closed,-,-,-,2,12,7,,,,,,,,,,,,,,,,,,
django,1253,closed,opened,2013-06-08 05:32:09,,,,,,,,,,,,,,,,,,,,,,
django,1253,closed,title,2013-06-08 05:32:09,00:00,,1,,"b""b' fixes #20486'""",,,,,,,,,,,,,,,,,
django,1253,closed,body,2013-06-08 05:32:09,00:00,,1,,"b""b' Ticket found here: url '""",,,,,,,,,,,,,,,,,
django,1253,closed,closed,2013-06-12 09:12:48,220.65,0,2,0,,,,,,,,,,,,,,,,,,
django,1253,closed,reopened,2013-06-12 10:38:44,85.93,0,2,0,,,,,,,,,,,,,,,,,,
django,1253,closed,1,2013-06-08 05:32:09,545.62,,,1,"b""b' All good points @apollo13. I have fixed. Thanks for reviewing.'""",,,,,,,,,,,,,,,,,
django,1253,closed,2,2013-06-08 05:32:09,1225.03,,1,,"b""b' Committed in 18e79f1425fa87f2f38df25c65203ec4d311f499'""",,,,,,,,,,,,,,,,,
django,1253,closed,closed,2013-06-20 11:02:48,24.07,0,3,1,,,,,,,,,,,,,,,,,,
django,1253,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,
django,1382,closed,opened,2013-07-20 19:34:27,,,,,,,,,,,,,,,,,,,,,,
django,1382,closed,title,2013-07-20 19:34:27,00:00,,1,,"b""b' Fixed #19617 -Refactored form metaclasses to support more inheritance scenarios.'""",,,,,,,,,,,,,,,,,
django,1382,closed,1,2013-07-20 19:34:27,1047.95,,,1,"b'b"" As mentioned on IRC", please don\'t rename the meta class just because you can, this is a critical part used by many apps out there," even if not public API. That\'ll keep upgraders happy""'",,,,,,,,,,,,,,
django,1382,closed,2,2013-07-20 19:34:27,1273.8,,1,,"b""b' I might revisit this patch at a later stage.'""",,,,,,,,,,,,,,,,,
django,1382,closed,closed,2013-07-25 10:16:12,881.75,0,2,1,,,,,,,,,,,,,,,,,,
django,1382,closed,3,2013-07-20 19:34:27,507.8,1,,,"b'b\' There have been discussions about allowing non values to shadow instances as a way to ""opt-out"" from a declarative field: url  I added a new commit that addresses that. It however removes support for declared on plain Python mixins from the previous commit. Although I think it\\\'s a good thing", as supporting them is ugly in term of implementation. Also the fields attributes declared on simple mixins would leak onto the child class, which is not desirable. For to be pickup up," the parent class needs to bear the metaclass; should work well as a ""field holder"" or we could introduce as suggested in the ticket description. Since is just an empty wrapper around and also inherits from there are no consequences in using a as a field holder.\''",,,,,,,,,,,,,,
django,1382,closed,reopened,2013-07-29 18:44:00,507.8,1,2,1,,,,,,,,,,,,,,,,,,
django,1382,closed,4,2013-07-20 19:34:27,857.23,,,1,"b'b"" Conceptually this looks good to me. I\'m happy with the restriction that field holders have to be Forms (or similar). I\'d rather avoid introducing a new object it makes sense to me that you can take one form and combine it with another to get a new form. It might be nice to see a few more complex hierarchies in the tests to ensure that everything is working. Then we should just need some documentation work.""'",,,,,,,,,,,,,,,,,
django,1382,closed,5,2013-07-20 19:34:27,399.87,,1,,"b'b"" To summarize what\'s still needed:Docs in the release notesLeave as is and deprecate it (Django won\'t use it anymore"," but let\'s give others a time to update their code)Restore the unneeded renaming of the other classes.""'",,,,,,,,,,,,,,,,
django,1382,closed,6,2013-07-20 19:34:27,217.77,,1,,"b""b' This last commit deals with fields shadowing the same way Python would for standard attribute shadowing. I consider this patch RFC.'""",,,,,,,,,,,,,,,,,
django,1382,closed,7,2013-07-20 19:34:27,520.25,,1,,"b""b' Rebased to resolve conflicts.'""",,,,,,,,,,,,,,,,,
django,1382,closed,8,2013-07-20 19:34:27,598.3,,1,,"b""b' Rebased to latest master.'""",,,,,,,,,,,,,,,,,
django,1382,closed,9,2013-07-20 19:34:27,87.43,,1,,"b""b' @mjtamlyn & @jezdez : Mind giving this a second look so we have another opinion?'""",,,,,,,,,,,,,,,,,
django,1382,closed,10,2013-07-20 19:34:27,1380.3,,1,,"b""b' Rebased again"," another conflict.'""",,,,,,,,,,,,,,,,
django,1382,closed,11,2013-07-20 19:34:27,258.63,,1,,"b""b' Rebased / retested.'""",,,,,,,,,,,,,,,,,
django,1382,closed,closed,2013-10-15 11:22:34,998.57,1,9,2,,,,,,,,,,,,,,,,,,
django,1382,closed,-,-,-,1,9,2,,,,,,,,,,,,,,,,,,
django,1451,closed,opened,2013-08-07 17:25:59,,,,,,,,,,,,,,,,,,,,,,
django,1451,closed,title,2013-08-07 17:25:59,00:00,,1,,"b""b' (updated) added .strip() to username for AuthenticationForm .clean()'""",,,,,,,,,,,,,,,,,
django,1451,closed,body,2013-08-07 17:25:59,00:00,,1,,"b""b' The Authentication form", does not validate the username field," if there are extra spaces at the end or the beginning in the string. Which shouldnt really be the case.'""",,,,,,,,,,,,,,,
django,1451,closed,closed,2013-08-07 17:29:25,3.43,0,2,0,,,,,,,,,,,,,,,,,,
django,1451,closed,reopened,2013-08-07 17:29:29,0.07,0,2,0,,,,,,,,,,,,,,,,,,
django,1451,closed,1,2013-08-07 17:25:59,1245.32,,1,,"b'b"" I think it\'s probably better to subclass the form and customize it if you need to make this change. It\'s seems unlikely", but it\'s possible a custom user model could allow usernames with whitespace. If this were accepted though," it would need tests.""'",,,,,,,,,,,,,,,
django,1451,closed,2,2013-08-07 17:25:59,3.78,,1,,"b""b' The strip() only removes whitespaces from the beginning and ending of the string"," the username field can still contain whitespaces in it.  I ll update the request with tests. '""",,,,,,,,,,,,,,,,
django,1451,closed,3,2013-08-07 17:25:59,7.13,1,,,"b'b"" I know", some sites may allow such usernames. Changing the behavior like this would be backwards incompatible. I\'m not rejecting this outright," but I\'m skeptical of the change given that it seems reasonable for users to properly enter their usernames.""'",,,,,,,,,,,,,,,
django,1451,closed,4,2013-08-07 17:25:59,240.58,1,,,b'b\' This is just trimming of whitespace. One subtle problem related to extra white spaces," in user names is that the space character is ""invisible"" and two consecutive spaces may look very similar to a single space. Errors that arise from entering two instead of one space can be hard to spot and this is one reason to disallow spaces all together. I kinda have seen such issues. \''",,,,,,,,,,,,,,,,
django,1451,closed,5,2013-08-07 17:25:59,1353.13,,1,,"b""b' @bkvirendra Either way"," this pull request will need an accepted ticket first\\xe2\\x80\\xa6'""",,,,,,,,,,,,,,,,
django,1451,closed,6,2013-08-07 17:25:59,50.93,,1,,"b""b' Closing in absence of a ticket.'""",,,,,,,,,,,,,,,,,
django,1451,closed,closed,2013-08-13 17:46:53,17.4,2,6,0,,,,,,,,,,,,,,,,,,
django,1451,closed,-,-,-,2,6,0,,,,,,,,,,,,,,,,,,
django,1613,closed,opened,2013-09-11 04:11:39,,,,,,,,,,,,,,,,,,,,,,
django,1613,closed,title,2013-09-11 04:11:39,00:00,,1,,"b""b' #unsetting: base  file for removing settings dependencies'""",,,,,,,,,,,,,,,,,
django,1613,closed,body,2013-09-11 04:11:39,00:00,,,1,"b""b' an incremental approach to remove settings dependencies This will follow up with two other pull requests which depend on this one.  This is the base.  the others depend on this one.  Those respectively begin an approach to remove dependencies to  with a decorator. is a straightforward example of using @uses_settings which is in here.  The other makes  independent and is another canonical example of using @uses_settings() decorator which includes decorated class methods", etc. This is the result of the djangocon sprint with help and work from Justin Holmes," Adrian and Jacob.  Thanks everyone!'""",,,,,,,,,,,,,,,
django,1613,closed,1,2013-09-11 04:11:39,601.02,,1,,"b'b"" Could you open a ticket for this? I assume there is further work to do? In particular I don\'t see any documentation -is intended to be a public API?""'",,,,,,,,,,,,,,,,,
django,1613,closed,2,2013-09-11 04:11:39,287.23,,1,,"b'b"" @timgraham : We inquired about opening a ticket at the sprints.  @adrianholovaty advised us to instead start using the #unsetting hash tag and open micro-tickets for each issue. However", you\'re right: We do definitely at least need documentation for uses_settings.  Although it is intended to be a public API," we\'re hoping that it has a relatively short lifespan leading to deprecation in favor of a state of general sanity surrounding settings.""'",,,,,,,,,,,,,,,
django,1613,closed,3,2013-09-11 04:11:39,43.67,,,1,"b'b"" Thanks"," @schuyler1d -I\'ll take a look at this.""'",,,,,,,,,,,,,,,,
django,1613,closed,4,2013-09-11 04:11:39,1283.6,,,1,"b""b' I have never been so excited about a pull request.  I am clicking refresh every half hour.  :-)'""",,,,,,,,,,,,,,,,,
django,1613,closed,closed,2013-09-14 05:20:42,69.05,0,3,3,,,,,,,,,,,,,,,,,,
django,1613,closed,reopened,2013-09-14 05:43:01,22.32,0,3,3,,,,,,,,,,,,,,,,,,
django,1613,closed,5,2013-09-11 04:11:39,764.22,,,1,"b'b"" I put in some documentation.  I kept the feature pull requests separate so evaluating those could be independent from the core or the unsetting of each component -the whole point here is to make it incremental.  That said", the core mail pull request seems like it would make a good first contender:url Email is rarely on a fast-path and it\'s a nice api, that we could use outside of web framework contexts. I think it would be too early to recommend as a public api," but I could see it coming in handy for people wanting to clean up their own .""'",,,,,,,,,,,,,,
django,1613,closed,6,2013-09-11 04:11:39,648.88,,1,,"b'b"" I don\'t think this has been discussed with the community at large. If this effort is still active"," I would recommend bringing it up on django-developers.""'",,,,,,,,,,,,,,,,
django,1613,closed,7,2013-09-11 04:11:39,2.6,,1,,"b'b\' Agreed. We have been trying to put together the time to meaningfully engagethe community about ""unsetting"" soon.On Feb 2", 2014 11:41 AM,"Aymeric Augustin"" notifications@wrote:\''
django	1613	closed	8	timgraham	2013-09-11 04:11:39	146.3			+1	b'b"" Until the discussion happens, I\'m going to close these PRs so they don\'t show up in the review queue. We can reopen or create new ones when the time is right, thanks!""'
django	1613	closed	closed	 - 	2014-02-07 19:09:10	806.15	0	5	5
django	1613	closed	-	-	-	-	0	5	5
django	1638	closed	opened	Sc00bz	2013-09-17 23:15:51
django	1638	closed	title	Sc00bz	2013-09-17 23:15:51	00:00		+1		b""b' Fixed #21253 -PBKDF2 with cached HMAC key'",,,,,,,,,,,,,,,
django,1638,closed,body,2013-09-17 23:15:51,00:00,1,,,"b'b"" This gives a 2x speed increase and removes the ability to DoS with large passwords. Sorry this is my hello world for Python"," and I don\'t even know how to run it. It probably works but you should test it. url ""'",,,,,,,,,,,,,,,,
django,1638,closed,1,2013-09-17 23:15:51,485.52,,,1,"b""b' Hi @Sc00bz", thank you for you pull request," we are already aware of this. For the next time please report security sensitive stuff to security@ like outlined in url '""",,,,,,,,,,,,,,,
django,1638,closed,closed,2013-09-18 07:21:22,485.52,1,1,1,,,,,,,,,,,,,,,,,,
django,1638,closed,2,2013-09-17 23:15:51,1151.92,,1,,"b""b' Just thought I would let you know that I benchmarked this code vs url  and this code is about 50% faster (84.6 ms vs 125 ms for 10","000 iterations). So you might want to reconsider this. Also I checked that it gives the same output.'""",,,,,,,,,,,,,,,,
django,1638,closed,3,2013-09-17 23:15:51,247.4,,1,,b'b\' Hi Steve, thx will take a look at it. Could you provide yourbenchmarkscript so we can rule out errors there?On Sep 29, 2013 4:33 AM,"Steve Thomas"" notifications@ wrote:\''
django	1638	closed	4	apollo13	2013-09-17 23:15:51	16.88	+1			b'b"" Ok, I think the copy saves a few cpu cycles every round. That said, getting rid of _cached_hmac completely and unrolling it into the main function might be a bit faster too, I doubt that later is worth it though. I am waiting for feedback from our security guys to see if they can see any issues with your implementation (I personally can\'t find one)""'
django	1638	closed	5	Sc00bz	2013-09-17 23:15:51	915.78		+1		b'b"" This takes around 20 seconds to run: url I removed _cached_hmac and it got a little faster 80.5 ms. The reason this is faster is with HMAC if you don\'t cache the results from the inner and outer pads those need to be recalculated each time. This does 20,002 SHA256 blocks vs 40,000 SHA256 blocks for 10,000 iterations of PBKDF2.""'
django	1638	closed	reopened	 - 	2013-10-09 17:40:52	619.5	2	4	1
django	1638	closed	6	timgraham	2013-09-17 23:15:51	973.02		+1		b""b' Rebased to apply cleanly: url '",,,,,,,,,,,,,,
django,1638,closed,closed,2013-10-11 14:26:22,1245.5,2,5,1,,,,,,,,,,,,,,,,,,
django,1638,closed,-,-,-,2,5,1,,,,,,,,,,,,,,,,,,
django,1760,closed,opened,2013-10-16 22:27:19,,,,,,,,,,,,,,,,,,,,,,
django,1760,closed,title,2013-10-16 22:27:19,00:00,,1,,"b""b' Fix #20346: cache middleware should vary on full URL'""",,,,,,,,,,,,,,,,,
django,1760,closed,body,2013-10-16 22:27:19,00:00,,1,,"b""b' This pull request changes the generation of cache keys from using the path of a request ( ) to the more-standard fully-qualified URL ( . Tracked at url '""",,,,,,,,,,,,,,,,,
django,1760,closed,1,2013-10-16 22:27:19,987.98,,1,,"b""b' Please be sure to update the ticket when you make a new PR. I also have some backwards compatibility concerns about this which I commented on the ticket about.'""",,,,,,,,,,,,,,,,,
django,1760,closed,closed,2013-10-17 16:04:06,1056.78,0,3,0,,,,,,,,,,,,,,,,,,
django,1760,closed,2,2013-10-16 22:27:19,123.7,1,,,"b'b"" Sorry"," I didn\'t mean you had to close this PR and send a completely new one if that\'s why you closed this one. Feel free to reopen it if you\'d like.""'",,,,,,,,,,,,,,,,
django,1760,closed,3,2013-10-16 22:27:19,9.72,1,,,"b'b"" I was distracted & clicked close the PRthought it was the in-line comment box I was in.  In which versions\' release notes should this change be documented? 1.5", 1.6,"  1.7?""'",,,,,,,,,,,,,,,
django,1760,closed,reopened,2013-10-17 17:09:00,64.9,2,3,0,,,,,,,,,,,,,,,,,,
django,1760,closed,4,2013-10-16 22:27:19,4.0,,1,,"b""b' This would go in 1.7 -1.6 is feature frozen and 1.5 is only receiving critical bug fixes. see url  for details.'""",,,,,,,,,,,,,,,,,
django,1760,closed,5,2013-10-16 22:27:19,84.75,,1,,"b'b"" I\'ve added a release note to 1.7"," and made the maintainability and style changes you mentioned inline.""'",,,,,,,,,,,,,,,,
django,1760,closed,6,2013-10-16 22:27:19,1390.52,,1,,"b'b"" We\'ve had this open for a few days without anyone else weighing in"," so I wonder if there\'s anything else desired in order to move this ticket along?""'",,,,,,,,,,,,,,,,
django,1760,closed,7,2013-10-16 22:27:19,8.1,,1,,"b""b' If you could write to the django-developers mailing list to get some more visibility regarding backwards compatibility so we can see if anyone has concerns or suggestions that would be helpful.'""",,,,,,,,,,,,,,,,,
django,1760,closed,8,2013-10-16 22:27:19,155.37,,1,,"b'b"" It\'s been a few days on django-developers with just one note not expressing concerns. Would it be appropriate to merge this?""'",,,,,,,,,,,,,,,,,
django,1760,closed,9,2013-10-16 22:27:19,815.97,,1,,"b""b' Hi"," are you able to rebase this and making the documentation updates I suggested so we can merge it?'""",,,,,,,,,,,,,,,,
django,1760,closed,10,2013-10-16 22:27:19,499.33,,1,,"b'b"" Yes"," I\'ll update today or tomorrow for 1.7\'s timeline""'",,,,,,,,,,,,,,,,
django,1760,closed,11,2013-10-16 22:27:19,571.68,,1,,"b'b"" Tim"," I\'ve rebased and made the documentation updates mentioned.""'",,,,,,,,,,,,,,,,
django,1760,closed,12,2013-10-16 22:27:19,755.65,,,1,"b""b' merged in 71a03e01aa19cbde08e915d156abf39b67d904ef"," thanks!'""",,,,,,,,,,,,,,,,
django,1760,closed,closed,2013-12-28 16:34:05,1405.08,2,11,1,,,,,,,,,,,,,,,,,,
django,1760,closed,-,-,-,2,11,1,,,,,,,,,,,,,,,,,,
django,1770,closed,opened,2013-10-18 11:40:37,,,,,,,,,,,,,,,,,,,,,,
django,1770,closed,title,2013-10-18 11:40:37,00:00,,1,,"b""b' Fixed #21302 -Fixed unused imports and import *.'""",,,,,,,,,,,,,,,,,
django,1770,closed,body,2013-10-18 11:40:37,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,1770,closed,1,2013-10-18 11:40:37,149.3,,1,,"b""b' I prefer the **all** approach personally'""",,,,,,,,,,,,,,,,,
django,1770,closed,2,2013-10-18 11:40:37,97.4,,1,,"b""b' I favor as well since it denotes an explicit decision with regards to what we export.'""",,,,,,,,,,,,,,,,,
django,1770,closed,3,2013-10-18 11:40:37,1345.42,,1,,"b""b' +1 to  '""",,,,,,,,,,,,,,,,,
django,1770,closed,4,2013-10-18 11:40:37,56.12,,,1,"b""b' Thanks"," I will reopen this after I made the updates.'""",,,,,,,,,,,,,,,,
django,1770,closed,closed,2013-10-23 15:08:51,208.23,0,5,1,,,,,,,,,,,,,,,,,,
django,1770,closed,reopened,2013-10-28 00:13:08,544.28,0,5,1,,,,,,,,,,,,,,,,,,
django,1770,closed,5,2013-10-18 11:40:37,471.53,,,1,"b'b"" This is ready for review. I tried to strike a balance between using and to silence warnings. It\'s not the prettiest thing in some places and perhaps could be improved"," but I think it\'s at least a good first step. Your thoughts are welcome.""'",,,,,,,,,,,,,,,,
django,1770,closed,6,2013-10-18 11:40:37,1227.4,,1,,"b""b' merged in 36ded01527b690b5df0574492af9cfcc2ea3d1dc'""",,,,,,,,,,,,,,,,,
django,1770,closed,closed,2013-11-02 19:27:47,1154.65,0,6,2,,,,,,,,,,,,,,,,,,
django,1770,closed,-,-,-,0,6,2,,,,,,,,,,,,,,,,,,
django,1891,closed,opened,2013-11-07 15:56:02,,,,,,,,,,,,,,,,,,,,,,
django,1891,closed,title,2013-11-07 15:56:02,00:00,1,,,"b""b' Expose level_tag property on messages.'""",,,,,,,,,,,,,,,,,
django,1891,closed,body,2013-11-07 15:56:02,00:00,1,,,"b'b\' Exposing the level name (e.g. ""info"") makes it possible to prependsomething to the class name. For example", Twitter Bootstrap hasan alert-info class. This class can now be added to the messageusing  .Because the level_tag was on the end of the property, itcould not be used in this fashion when extra_tags were given.\'',,,,,,,,,,,,,,,
django,1891,closed,1,2013-11-07 15:56:02,473.85,,1,,"b'b"" Hi"," it looks like you\'ve sent a pull request without filing a Trac ticket. Please [file a ticket]url  to suggest changes. The patch would also require a documentation in order to be merged.""'",,,,,,,,,,,,,,,,
django,1891,closed,closed,2013-11-08 23:49:53,473.85,2,1,0,,,,,,,,,,,,,,,,,,
django,1891,closed,reopened,2013-11-08 23:49:56,0.05,2,1,0,,,,,,,,,,,,,,,,,,
django,1891,closed,2,2013-11-07 15:56:02,525.57,,1,,"b""b' Created Trac ticket: url '""",,,,,,,,,,,,,,,,,
django,1891,closed,3,2013-11-07 15:56:02,399.45,,,1,"b'b"" The addition to the documentation looks good.Make sure you remove the trailing whitespace too though. The only thing that\'s missing now is a mention of the new feature in the file.""'",,,,,,,,,,,,,,,,,
django,1891,closed,4,2013-11-07 15:56:02,2.88,,1,,"b'b"" Once you\'ve made all these changes"," can you also squash all the commits together into one (also make sure you follow the commit messages guidelines outlined on url  I\'m available on the #django-dev channel on Freenode if you need some guidance. Thanks.""'",,,,,,,,,,,,,,,,
django,1891,closed,5,2013-11-07 15:56:02,102.38,,,1,"b""b' Merged in d87127655f540747e7dc83badc015ea520b880f5. Thanks!'""",,,,,,,,,,,,,,,,,
django,1891,closed,closed,2013-11-11 17:00:11,1030.25,2,3,2,,,,,,,,,,,,,,,,,,
django,1891,closed,-,-,-,2,3,2,,,,,,,,,,,,,,,,,,
django,2082,closed,opened,2013-12-16 16:47:39,,,,,,,,,,,,,,,,,,,,,,
django,2082,closed,title,2013-12-16 16:47:39,00:00,,1,,"b""b' Fixed #21430 -Added Exception to be raised when unpickiling QuerySet across unsupported django version'""",,,,,,,,,,,,,,,,,
django,2082,closed,body,2013-12-16 16:47:39,00:00,,1,,"b""b' Added an exception that is raised when user tries to unpickle a pickles different Django versions.'""",,,,,,,,,,,,,,,,,
django,2082,closed,closed,2013-12-17 11:54:26,1146.78,0,2,0,,,,,,,,,,,,,,,,,,
django,2082,closed,reopened,2013-12-17 13:50:44,116.3,0,2,0,,,,,,,,,,,,,,,,,,
django,2082,closed,1,2013-12-16 16:47:39,1190.28,,1,,"b""b' LGTM'""",,,,,,,,,,,,,,,,,
django,2082,closed,2,2013-12-16 16:47:39,59.1,,1,,"b""b' As noted on the ticket", please update to also cover Models. Also, it will need documentation (at least release notes," probably also a mention wherever pickling models and querysets is mentioned'""",,,,,,,,,,,,,,
django,2082,closed,3,2013-12-16 16:47:39,42.38,,1,,"b'b"" @akaariai : I\'ve made the changes as you required. Please check if anything else is needed.@mjtamlyn : Made changes to the docs. Please see this is sufficient.""'",,,,,,,,,,,,,,,,,
django,2082,closed,4,2013-12-16 16:47:39,194.93,,,1,"b""b' Docs look good to me.'""",,,,,,,,,,,,,,,,,
django,2082,closed,5,2013-12-16 16:47:39,1157.27,,1,,"b'b"" @charettes : I\'ve made the changes you required. Tell me if more is needed.""'",,,,,,,,,,,,,,,,,
django,2082,closed,6,2013-12-16 16:47:39,326.05,,1,,"b'b"" @charettes : The latest commit contains all changes", I think. Also, for the exception name, I\'ve decided to drop the part. It\'s now just  . Also, there\'s a new file," in which I\'ve moved the definition. Let me know of any more changes.""'",,,,,,,,,,,,
django,2082,closed,7,2013-12-16 16:47:39,1153.0,,1,,"b""b' @charettes : Now?'""",,,,,,,,,,,,,,,,,
django,2082,closed,8,2013-12-16 16:47:39,481.83,,,1,"b'b"" Thanks for all the changes this is looking good. Many changes have landed in master recently and your change don\'t apply anymore"," could you rebase on top of master?""'",,,,,,,,,,,,,,,,
django,2082,closed,9,2013-12-16 16:47:39,676.02,,1,,"b'b"" @charettes : Okay then. I\'ve squashed all commits into a single commit and rebased on top of master.""'",,,,,,,,,,,,,,,,,
django,2082,closed,10,2013-12-16 16:47:39,19.35,,,1,"b'b"" On quick glance looks good to me. We might want to relax the version check for models if it happens that for example 1.6 models are unpickleable in 1.7. But it is best to default to error and then add exceptions to the check if unpickle is possible. For models it might even make sense to add unpickle conversions between major versions if there are incompatibilities. If we know the pickled model\'s version it should be possible to convert internal data-structures between versions. For QuerySets it seems unlikely that unpickling across major versions will ever be possible. The data-structures and possible interactions are just too complex.""'",,,,,,,,,,,,,,,,,
django,2082,closed,11,2013-12-16 16:47:39,1221.02,,1,,"b""b' Also seems to cause a regression: @akaariai does shipping the strict model version checks as is makes sense to you or should we stick to queryset for now?'""",,,,,,,,,,,,,,,,,
django,2082,closed,12,2013-12-16 16:47:39,43.6,,,1,"b'b"" So it seems there are test failures. I\'ll see what I can do and comment back in 4-5 days. Also", I\'ll probably be away from internet connectivity over the next 2-3 days so," please don\'t except a reply to any comments made till them. Thanks!""'",,,,,,,,,,,,,,,
django,2082,closed,13,2013-12-16 16:47:39,605.8,,,1,"b""b' @prasoon2211 are you interested in trying to complete this? If not", we have a GSoC student interested in finishing it up. Please let us know," thanks!'""",,,,,,,,,,,,,,,
django,2082,closed,14,2013-12-16 16:47:39,101.32,1,,,"b'b"" @timgraham: I had totally forgotten about this patch! Sorry for the delay. Anyway", I have my own GSoC project to deal with at the moment, so no. Anyone is welcome to finish this!IIRC," this patch was done but there were some test failures which\'ll need to be looked at.""'",,,,,,,,,,,,,,
django,2082,closed,15,2013-12-16 16:47:39,670.12,,,1,"b""b' @prasoon2211 I am happy to complete it.'""",,,,,,,,,,,,,,,,,
django,2082,closed,16,2013-12-16 16:47:39,345.85,,1,,"b'b"" Closing this since it\'ll be updated separately.""'",,,,,,,,,,,,,,,,,
django,2082,closed,closed,2014-06-02 10:55:34,1264.83,1,11,6,,,,,,,,,,,,,,,,,,
django,2082,closed,-,-,-,1,11,6,,,,,,,,,,,,,,,,,,
django,2098,closed,opened,2013-12-20 18:29:23,,,,,,,,,,,,,,,,,,,,,,
django,2098,closed,title,2013-12-20 18:29:23,00:00,,1,,"b""b' Removed requires_literal_default DatabaseFeature.'""",,,,,,,,,,,,,,,,,
django,2098,closed,body,2013-12-20 18:29:23,00:00,1,,,"b'b"" Any database that needs to control how the default value is rendered willneed to override prepare_default.  has been relocated to SchemaEditor andprefixed with an underscore to discourage usage by others. It\'s possibleto use _quote_parameter in such a way as to open the possibility of an SQLinjection attack.""'",,,,,,,,,,,,,,,,,
django,2098,closed,1,2013-12-20 18:29:23,362.53,,1,,"b""b' Is there a ticket for this?'""",,,,,,,,,,,,,,,,,
django,2098,closed,2,2013-12-20 18:29:23,1355.9,,1,,"b""b' No. This PR has been incorporated in to url '""",,,,,,,,,,,,,,,,,
django,2098,closed,closed,2014-01-16 23:07:49,278.43,1,3,0,,,,,,,,,,,,,,,,,,
django,2098,closed,reopened,2014-01-21 18:36:18,1168.48,1,3,0,,,,,,,,,,,,,,,,,,
django,2098,closed,closed,2014-02-06 17:47:39,1391.35,1,3,0,,,,,,,,,,,,,,,,,,
django,2098,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,
django,2411,closed,opened,2014-03-08 05:40:30,,,,,,,,,,,,,,,,,,,,,,
django,2411,closed,title,2014-03-08 05:40:30,00:00,,1,,"b""b' Fixed #22341 -Turned  into a package'""",,,,,,,,,,,,,,,,,
django,2411,closed,body,2014-03-08 05:40:30,00:00,,1,,"b""b' **POC** turned into a PR for **review purpose**. **Not ready for commit.**'""",,,,,,,,,,,,,,,,,
django,2411,closed,1,2014-03-08 05:40:30,18.42,,1,,"b""b' A more readable overview of the new organization:  : ",  : (**depends** on  )     : (**depends** on  ,  )  : (**depends** on  ,  ,"  )   : (**depends** on  )      '""",,,,,,,,,,,,,
django,2411,closed,2,2014-03-08 05:40:30,2.97,,1,,"b""b' Putting @akaariai and @charettes in copy. @charettes", I remember you doing a similar reorganization for  ," let me know if you encountered any issues in the process that I may have been overlooking here.'""",,,,,,,,,,,,,,,
django,2411,closed,3,2014-03-08 05:40:30,99.45,,1,,"b'b"" The safest way to ensure that this reorganization doesn\'t accidentally revert any commit would be to do it again immediately before committing. Hopefully this document can be used as a guideline if someone work on this later on. Closing the PR.""'",,,,,,,,,,,,,,,,,
django,2411,closed,closed,2014-03-17 07:41:20,120.83,0,5,0,,,,,,,,,,,,,,,,,,
django,2411,closed,4,2014-03-08 05:40:30,492.9,,1,,"b'b"" Redone from scratch using the latest master. Also coalesced and according to @akaariai\'s feedback.""'",,,,,,,,,,,,,,,,,
django,2411,closed,reopened,2014-03-26 15:54:14,492.9,0,6,0,,,,,,,,,,,,,,,,,,
django,2411,closed,5,2014-03-08 05:40:30,231.02,,1,,"b'b"" As @timgraham pointed out on the trac ticket", the timing for this PR isn\'t right as it would make backporting to 1.7 more difficult. Also is currently ongoing a lot of changes, so this cleanup is already outdated. Closing the PR for now," I\'ll reopen after the 1.7 release.""'",,,,,,,,,,,,,,
django,2411,closed,closed,2014-03-27 19:45:18,231.07,0,7,0,,,,,,,,,,,,,,,,,,
django,2411,closed,reopened,2014-09-24 04:42:15,536.95,0,7,0,,,,,,,,,,,,,,,,,,
django,2411,closed,6,2014-03-08 05:40:30,540.83,,1,,"b""b' The latest update was as follows:  :  :  :  :  '""",,,,,,,,,,,,,,,,,
django,2411,closed,7,2014-03-08 05:40:30,1.47,,1,,"b'b"" @akaariai I wonder if shouldn\'t move to  "," out of the box it really behaves like a M2O.""'",,,,,,,,,,,,,,,,
django,2411,closed,8,2014-03-08 05:40:30,907.77,,1,,"b""b' build say:  '""",,,,,,,,,,,,,,,,,
django,2411,closed,9,2014-03-08 05:40:30,864.58,,1,,"b""b' Yes this PR has to be redone from scratch since those classes have changed significantly. I was waiting for feedback regarding url  before going ahead.'""",,,,,,,,,,,,,,,,,
django,2411,closed,closed,2014-10-30 17:25:56,763.68,0,11,0,,,,,,,,,,,,,,,,,,
django,2411,closed,10,2014-03-08 05:40:30,607.78,,1,,"b'b\' @loic moving / renaming ForeignObject to M2O make sense to me. I always hear people talk about ""foreignobject"" and I always think it\\\'s a GFK thing.\''",,,,,,,,,,,,,,,,,
django,2411,closed,reopened,2014-12-30 05:23:06,717.17,0,12,0,,,,,,,,,,,,,,,,,,
django,2411,closed,11,2014-03-08 05:40:30,548.95,,1,,"b'b"" Redone the split up from a recent master. Last time I discussed this with @akaariai we concluded that FO is meant to be truly generic and rather than moving it to  "," we should remove its dependency on  . I\'ll try this once the test suite passes.""'",,,,,,,,,,,,,,,,
django,2411,closed,12,2014-03-08 05:40:30,653.83,,1,,"b'b"" Looks good to me. I guess you\'ll have to duke it out with @PirosB3 and @freakboy3742 as to who wants to merge first.""'",,,,,,,,,,,,,,,,,
django,2411,closed,13,2014-03-08 05:40:30,288.9,,1,,b'b\' I\\\'ll have a look as soon as I come backOn 1 Jan 2015 17:30,"Tim Graham"" notifications@ wrote:\''
django	2411	closed	14	loic	2014-03-08 05:40:30	459.23		+1		b'b"" @timgraham @PirosB3, I think we are going to postpone this refactor some more. After discussing this with @akaariai again we both agree that more work is needed to decouple FO and FK properly, we should also fix the inconsistent and confusing naming of classes. Finally we want to experiment with making reverse relation actual fields. It\'s a grand plan, but if we can\'t pull it off we can always do an unambitious split up later. Also I suspect Daniel\'s Meta refactor can help quite a bit.""'
django	2411	closed	15	PirosB3	2014-03-08 05:40:30	407.65			+1	b""b' Hi all,@loic I like the new structuring a lot.  is too big currently.@loic, once the _meta API is in I would love to help you in this. By doing the _meta API I have seen many parts of the code that should be redesigned once the new API is in.'",,,,,,,,,,,,,,,,
django,2411,closed,16,2014-03-08 05:40:30,102.68,,1,,"b'b"" Okay", I assume this won\'t happen for 1.8 alpha," so I\'ll remove that tag from the ticket.""'",,,,,,,,,,,,,,,
django,2411,closed,closed,2015-01-09 13:13:12,470.1,0,17,1,,,,,,,,,,,,,,,,,,
django,2411,closed,-,-,-,0,17,1,,,,,,,,,,,,,,,,,,
django,2436,closed,opened,2014-03-17 10:47:22,,,,,,,,,,,,,,,,,,,,,,
django,2436,closed,title,2014-03-17 10:47:22,00:00,,1,,"b""b' fix:ImportError: No module named fcntl'""",,,,,,,,,,,,,,,,,
django,2436,closed,body,2014-03-17 10:47:22,00:00,,1,,"b""b' fcntl module may not be available in some app engine.'""",,,,,,,,,,,,,,,,,
django,2436,closed,1,2014-03-17 10:47:22,74.88,,1,,"b'b"" Hi @smallcode  I think you should open Trac ticket for this first and provide there more details about environment where mentioned import error occurs. url Also I\'m not sure that silently skipping error is the best way to solve this.""'",,,,,,,,,,,,,,,,,
django,2436,closed,2,2014-03-17 10:47:22,22.95,,1,,"b""b' Hi @bak1an This error has been fixed before"," but appeared in version 1.7.I fix this error is a reference to the previous version 1.6.x:url '""",,,,,,,,,,,,,,,,
django,2436,closed,3,2014-03-17 10:47:22,178.67,,1,,"b'b"" It\'s a regression caused by 6fe26bd3ee75a6d804ca3861181ad61b1cca45ea. I don\'t think the proposed fix is correct though", as it\'s cause  , etc. to be undefined in this case," rather than 0. The and methods won\'t be correct either.""'",,,,,,,,,,,,,,
django,2436,closed,closed,2014-03-18 04:44:19,1076.95,0,5,0,,,,,,,,,,,,,,,,,,
django,2436,closed,reopened,2014-03-18 04:50:55,6.6,0,5,0,,,,,,,,,,,,,,,,,,
django,2436,closed,closed,2014-03-18 04:55:27,4.53,0,5,0,,,,,,,,,,,,,,,,,,
django,2436,closed,reopened,2014-03-18 12:02:48,427.35,0,5,0,,,,,,,,,,,,,,,,,,
django,2436,closed,4,2014-03-17 10:47:22,1293.42,,1,,"b""b' Updated PR: url  Could you please review  test?'""",,,,,,,,,,,,,,,,,
django,2436,closed,closed,2014-03-18 12:57:37,54.82,0,6,0,,,,,,,,,,,,,,,,,,
django,2436,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,
django,2480,closed,opened,2014-03-25 21:33:57,,,,,,,,,,,,,,,,,,,,,,
django,2480,closed,title,2014-03-25 21:33:57,00:00,,1,,"b""b' Clarified the documentation of the kwargs param to ()'""",,,,,,,,,,,,,,,,,
django,2480,closed,body,2014-03-25 21:33:57,00:00,,1,,"b""b' The reference documentation for the url() function now links to the exampleelsewhere in the documentation. The explanation of URL processing explains how the kwargs parameter iscombined with the results of the regexp match'""",,,,,,,,,,,,,,,,,
django,2480,closed,1,2014-03-25 21:33:57,44.98,,1,,"b""b' This is for url '""",,,,,,,,,,,,,,,,,
django,2480,closed,2,2014-03-25 21:33:57,796.02,,,1,"b""b' Please note our [commit message guidelines]url  (include ticket number). Thanks!'""",,,,,,,,,,,,,,,,,
django,2480,closed,closed,2014-03-26 11:34:57,841.0,0,3,1,,,,,,,,,,,,,,,,,,
django,2480,closed,reopened,2014-03-26 11:35:01,0.07,0,3,1,,,,,,,,,,,,,,,,,,
django,2480,closed,3,2014-03-25 21:33:57,573.98,1,,,"b'b"" I addressed these comments and rebased the branch to fix the commit message", which meant force-pushing. I couldn\'t find any documentation about whether this prevent the pull request from applying cleanly," so let me know if I need to recreate it.""'",,,,,,,,,,,,,,,
django,2480,closed,4,2014-03-25 21:33:57,895.87,,,1,"b'b"" Nope", that\'s fine," merge in a779757706b19ef244dc1ede2e1e992735461623. I tweaked the commit message as follows: Thanks!""'",,,,,,,,,,,,,,,
django,2480,closed,closed,2014-03-27 12:04:48,29.78,1,3,2,,,,,,,,,,,,,,,,,,
django,2480,closed,-,-,-,1,3,2,,,,,,,,,,,,,,,,,,
django,2574,closed,opened,2014-04-16 16:39:02,,,,,,,,,,,,,,,,,,,,,,
django,2574,closed,title,2014-04-16 16:39:02,00:00,,1,,"b""b' Fixed #22423 -Made GIS leverage MySQL 5.6 spatial functions'""",,,,,,,,,,,,,,,,,
django,2574,closed,body,2014-04-16 16:39:02,00:00,1,,,"b'b"" MySQL 5.6.1 supports proper spatial checks for some of the functions. ( spatial object checks instead of bounding box checks). waiting for reviewer. Unit Test: I have three shapes with one shape overalapping the other two. [City of SF shape overlapping South of Market neighborhood and Downtown neighborhood].I selected a point in South of Market neighborhood", such that bounding box check returns all three shapes, while ST_contains returns two. (SoMA and SF). MySQL query  (5.6.1 where st_ functions are implemented): mysql++| count(_) |++|    2 |++1 row in set (0.00 sec) mysql++| count(_) |++|    3 |++1 row in set (0.00 sec) mysqlDjango Test:  (in older version," it would have returned 3 for both the queries). point_wkt = \'POINT(-122.4158771 37.7792381)\'In [8]: y = (geom__contains=point_wkt) In [9]: ()Out[9]: 2 In [10]: y = (geom__bbcontains=point_wkt) In [11]: ()Out[11]: 3""'",,,,,,,,,,,,,,
django,2574,closed,1,2014-04-16 16:39:02,196.22,,,1,"b'b"" Hi"," it looks like you\'ve sent a pull request without filing a Trac ticket. Please [file a ticket]url  to suggest changes. Then amend your commit message to reference the ticket as noted in our [commit message guidelines]url  Thanks!""'",,,,,,,,,,,,,,,,
django,2574,closed,2,2014-04-16 16:39:02,1266.17,,1,,"b""b' Closing in absence of a ticket.'""",,,,,,,,,,,,,,,,,
django,2574,closed,closed,2014-07-08 17:01:25,22.38,1,2,1,,,,,,,,,,,,,,,,,,
django,2574,closed,3,2014-04-16 16:39:02,533.2,,,1,"b'b"" @timgraham Thanks for taking time to look at my pull request. I was away for few months. I didn\'t realize that this pull request has been commented and closed. I filed a trac ticket earlier. url  Please let me know"," how to proceed.""'",,,,,,,,,,,,,,,,
django,2574,closed,reopened,2014-09-19 11:46:57,1125.53,1,2,2,,,,,,,,,,,,,,,,,,
django,2574,closed,4,2014-04-16 16:39:02,605.03,,,1,"b""b' Could you add 1.8 release notes and double check your patch against our [patch review checklist]url  Thanks!'""",,,,,,,,,,,,,,,,,
django,2574,closed,5,2014-04-16 16:39:02,225.95,,1,,"b'b"" I am working on a refactoring related to GIS lookups", and if possible I would have liked to push it before this patch," as it has many conflicting parts. I\'d be happy to help with the merging afterwards.Unfortunately my branch is not completely finished. See url ""'",,,,,,,,,,,,,,,
django,2574,closed,6,2014-04-16 16:39:02,18.92,,,1,"b""b' @timgraham sure. will fix them. @claudep please comment on this pull request when you are done. I will fix on top of your branch and will contact you"," in case I need any help. Thanks.'""",,,,,,,,,,,,,,,,
django,2574,closed,7,2014-04-16 16:39:02,497.15,,1,,"b""b' GIS lookups refactor was merged in 2bd1bbc42430f9815d16b779735b77c35ea4cde7.'""",,,,,,,,,,,,,,,,,
django,2574,closed,8,2014-04-16 16:39:02,1035.52,,,1,"b""b' Please send a new PR when you redo this"," thanks.'""",,,,,,,,,,,,,,,,
django,2574,closed,closed,2014-10-30 17:37:11,350.23,1,4,5,,,,,,,,,,,,,,,,,,
django,2574,closed,9,2014-04-16 16:39:02,1318.32,,,1,"b'b"" I\'ve updated the pull request in #3941. @visu it would be nice to run  tests on the new pull request.""'",,,,,,,,,,,,,,,,,
django,2574,closed,10,2014-04-16 16:39:02,1125.93,,1,,"b'b"" Current PR is #3941 (I\'ll let a new comment there).""'",,,,,,,,,,,,,,,,,
django,2574,closed,-,-,-,1,5,6,,,,,,,,,,,,,,,,,,
django,2575,closed,opened,2014-04-16 18:58:36,,,,,,,,,,,,,,,,,,,,,,
django,2575,closed,title,2014-04-16 18:58:36,00:00,,1,,"b""b' Fixed #22397 -Issues removing M2M field with explicit through model'""",,,,,,,,,,,,,,,,,
django,2575,closed,body,2014-04-16 18:58:36,00:00,,,1,"b'b\' Changed the migration autodetector to remove models last so that FKand M2M fields will not be left as dangling references. Added a checkin the migration state renderer to error out in the presence ofdangling references instead of leaving them as strings. Fixed a bugin the sqlite backend to handle the deletion of M2M fields with""through"" models properly (i.e.", do nothing successfully). Thanks to melinath for report, loic for tests and andrewgodwin andcharettes for assistance with architecture.\'',,,,,,,,,,,,,,,
django,2575,closed,1,2014-04-16 18:58:36,204.77,,,1,"b'b"" Great work @andrewsg"," except the minor issues above this is definitely looking good. @andrewgodwin do you think there\'s a way of providing an even better message when someone attempts to delete a still referenced model?""'",,,,,,,,,,,,,,,,
django,2575,closed,2,2014-04-16 18:58:36,21.12,,1,,b'b\' @charettes I discussed this with @andrewsg in person," and I agree this is the best thing for now it\\\'ll catch a lot of other related errors and give a string helping me debug rather than ""string doesn\\\'t have _meta""", and the makemigrations fix should stop you even getting near the situation in the first place.\'',,,,,,,,,,,,,,,
django,2575,closed,3,2014-04-16 18:58:36,3.28,,,1,"b""b' Great then @andrewsg"," once you manage to find time to fix the remaining nitpicks I should be able to merge it.'""",,,,,,,,,,,,,,,,
django,2575,closed,4,2014-04-16 18:58:36,993.9,,1,,"b'b"" @charettes Okay", I fixed those three issues and re-squashed.  In the case of alphabetization of imports, the existing ones didn\'t seem to be ordered in any particular way," so I alphabetized the entire set with isort.""'",,,,,,,,,,,,,,
django,2575,closed,5,2014-04-16 18:58:36,105.25,,,1,"b""b' Merged manually in 00e3b9a2a992ee0b7288eeeb03e7cbd52ebc6dce with some minor flake8 fixes. Thanks"," I really appreciated working on this with you during the sprints!'""",,,,,,,,,,,,,,,,
django,2575,closed,closed,2014-04-17 17:06:55,1328.32,0,3,4,,,,,,,,,,,,,,,,,,
django,2575,closed,6,2014-04-16 18:58:36,749.72,,1,,"b'b"" I had to revert this commit since it\'s causing a yet to be identified regression when tests are ran after the ones. I spent a couple of hours today trying to figure it all out but I couldn\'t put my finger on it. It seems like the changes to might be causing this. It looks like the table is somehow never deleted and causes the following failures.""'",,,,,,,,,,,,,,,,,
django,2575,closed,reopened,2014-04-18 05:36:38,749.72,0,4,4,,,,,,,,,,,,,,,,,,
django,2575,closed,7,2014-04-16 18:58:36,15.62,,,1,"b""b' Thanks to Lo\\xc3\\xafc for pointing me to it seems the following fixes the issue.  '""",,,,,,,,,,,,,,,,,
django,2575,closed,8,2014-04-16 18:58:36,1090.25,,1,,"b""b' Pushed the adjusted patch.'""",,,,,,,,,,,,,,,,,
django,2575,closed,closed,2014-04-19 00:02:30,1105.87,0,5,5,,,,,,,,,,,,,,,,,,
django,2575,closed,-,-,-,0,5,5,,,,,,,,,,,,,,,,,,
django,2672,closed,opened,2014-05-16 20:56:29,,,,,,,,,,,,,,,,,,,,,,
django,2672,closed,title,2014-05-16 20:56:29,00:00,,1,,"b""b' 22019 add objects docs to ref'""",,,,,,,,,,,,,,,,,
django,2672,closed,body,2014-05-16 20:56:29,00:00,,1,,"b""b' Added new document in /. Linked existing references to objects attribute.'""",,,,,,,,,,,,,,,,,
django,2672,closed,1,2014-05-16 20:56:29,67.1,,,1,b'b\' This is a good start. If you can make the updates above, I\\\'ll polish the language a bit and commit it, thanks! Also," please note our [commit message guidelines]url  (include ticket number and commit message in past tense). It would be something like ""Fixed #22019 -Added  reference documentation.""\''",,,,,,,,,,,,,,
django,2672,closed,2,2014-05-16 20:56:29,599.58,,,1,"b'b"" Great"," I\'ll come up with an update soon.""'",,,,,,,,,,,,,,,,
django,2672,closed,closed,2014-05-17 08:34:21,697.87,0,2,2,,,,,,,,,,,,,,,,,,
django,2672,closed,reopened,2014-05-17 08:34:26,0.08,0,2,2,,,,,,,,,,,,,,,,,,
django,2672,closed,3,2014-05-16 20:56:29,48.58,,1,,"b'b"" I\'ve updated the commit following your recommendations. Could you please take look?""'",,,,,,,,,,,,,,,,,
django,2672,closed,4,2014-05-16 20:56:29,220.93,,,1,"b""b' merged in 5b185ecc68c04c0ee63cf44de43d831623daa263"," thanks.'""",,,,,,,,,,,,,,,,
django,2672,closed,closed,2014-05-17 12:32:41,238.25,0,3,3,,,,,,,,,,,,,,,,,,
django,2672,closed,-,-,-,0,3,3,,,,,,,,,,,,,,,,,,
django,2697,closed,opened,2014-05-21 18:37:03,,,,,,,,,,,,,,,,,,,,,,
django,2697,closed,title,2014-05-21 18:37:03,00:00,,1,,"b""b' Fixed #10811 -Assigning unsaved objects to FK"," O2O and GFK raises ValueError.'""",,,,,,,,,,,,,,,,
django,2697,closed,body,2014-05-21 18:37:03,00:00,,,1,"b""b' Thanks @timgraham @loic  for help and reviewing.'""",,,,,,,,,,,,,,,,,
django,2697,closed,1,2014-05-21 18:37:03,8.97,,,1,"b""b' When the fix for this was written", the problem that came up was that tests in and failed. The reason for their failure was in case of inlines the value of is set at a later point of time in  (function overridden for the same purpose of assigning FK) rather than in  . was already being excluded, but after is called, I excluded it before the call to  , because there is no meaning to use when there is going to be there, so the problem of failing tests in and was over.But now there was one another problem, whenever there was new object creation in everything worked fine, as no raised because of fix for 10811 and does its work, but when an existing object was edited, problem occured as this time it used to get value in  , but since we had excluded  , so similar to  , I had to override **What happened uptil now:**_adding_ new_obj -_changing_ old_obj -**What is done here:** In fix #2697 , added check for FK in which led to raising of errors when that case occured as described above, so now does not gets passed in as it is excluded _before_ call to rather than _after_.Reason because this can be done for:new_objs: The FK is set in overriden regardless of if its set to None or proper value in  , so it can be excluded.old_objs: Problem as its FK field get value in and not overriden to do the same at later point of time, so did the same thing as in In this way," our fix works fine and no original functionality altered. Problem Solved!!(Had a complete discussion on this with @timgraham )'"""
django,2697,closed,2,2014-05-21 18:37:03,2.3,,1,,"b""b' The tests for this fix already included in edited tests by using  '""",,,,,,,,,,,,,,,,,
django,2697,closed,closed,2014-05-21 21:32:25,175.37,0,2,2,,,,,,,,,,,,,,,,,,
django,2697,closed,reopened,2014-05-21 21:32:56,0.52,0,2,2,,,,,,,,,,,,,,,,,,
django,2697,closed,3,2014-05-21 18:37:03,165.72,1,,,"b""b' Sorry"," closed by  the other  too late for me too...'""",,,,,,,,,,,,,,,,
django,2697,closed,4,2014-05-21 18:37:03,498.42,,1,,"b""b' Is anthing else required?'""",,,,,,,,,,,,,,,,,
django,2697,closed,5,2014-05-21 18:37:03,606.12,,1,,"b""b' I think the documentation should probably be beefed up a bit", e.g. say _why_ we made the change so that assigning unsaved objects to a FK raises an error.  Also," mention this restriction in the model topic or reference doc.'""",,,,,,,,,,,,,,,
django,2697,closed,6,2014-05-21 18:37:03,905.83,,1,,"b""b' @timgraham @apollo13I have added the test"," please see if that is what is required.'""",,,,,,,,,,,,,,,,
django,2697,closed,7,2014-05-21 18:37:03,235.9,,1,,"b""b' The suggested changes have been done.The merged build is failing in some test in for dbs other than  . In my system its failing even on with with exact same error.Do you think its probably due to url  ?'""",,,,,,,,,,,,,,,,,
django,2697,closed,8,2014-05-21 18:37:03,1039.12,,1,,"b'b"" @coder9042 Could you add a test case to verify that assigning unsaved objects to and aren\'t also affected by this issue? We need to ensure that things remain consistent across the different relations.""'",,,,,,,,,,,,,,,,,
django,2697,closed,closed,2014-06-03 04:38:29,425.55,1,7,2,,,,,,,,,,,,,,,,,,
django,2697,closed,reopened,2014-06-03 04:45:49,7.33,1,7,2,,,,,,,,,,,,,,,,,,
django,2697,closed,9,2014-05-21 18:37:03,26.83,1,,,"b""b' Sorry closed again by mistake.@loic Added test for O2O.'""",,,,,,,,,,,,,,,,,
django,2697,closed,10,2014-05-21 18:37:03,369.85,,1,,"b""b' @loic Improved test for  .Fix and test for added.@timgraham Made the changes you suggested.I think we need to add more into the docs regarding O2O and GFK now. I could not find a suitable place for GFK. Please if you could point that out.'""",,,,,,,,,,,,,,,,,
django,2697,closed,11,2014-05-21 18:37:03,1240.15,,,1,"b'b"" @loic @timgraham @aaugustin I have updated #2757 . I think that now it is good to go.Those changes haven\'t been done here. So for those changes please refer to the other PR.""'",,,,,,,,,,,,,,,,,
django,2697,closed,12,2014-05-21 18:37:03,284.4,,1,,"b""b' @timgraham  @loic Since the other PR is now merged"," I have rebased this one.Looking to forward to this being merged as well.'""",,,,,,,,,,,,,,,,
django,2697,closed,13,2014-05-21 18:37:03,343.18,,,1,"b""b' @timgraham @loic Pushed all the changes.Anything else required or its good?'""",,,,,,,,,,,,,,,,,
django,2697,closed,14,2014-05-21 18:37:03,1112.77,,1,,"b""b' buildbot"," test this please.'""",,,,,,,,,,,,,,,,
django,2697,closed,15,2014-05-21 18:37:03,144.03,,1,,"b'b\' Add to commit message: ""Thanks Aymeric Augustin for the initial patch and Loic Bistuer for the review.""\''",,,,,,,,,,,,,,,,,
django,2697,closed,16,2014-05-21 18:37:03,132.55,,1,,"b""b' merged in 5643a3b51be338196d0b292d5626ad43648448d3.'""",,,,,,,,,,,,,,,,,
django,2697,closed,closed,2014-06-05 17:13:11,747.37,2,12,4,,,,,,,,,,,,,,,,,,
django,2697,closed,-,-,-,2,12,4,,,,,,,,,,,,,,,,,,
django,2876,closed,opened,2014-07-03 14:18:47,,,,,,,,,,,,,,,,,,,,,,
django,2876,closed,title,2014-07-03 14:18:47,00:00,,1,,"b""b' Using recommended way of localising a naive datetime.'""",,,,,,,,,,,,,,,,,
django,2876,closed,body,2014-07-03 14:18:47,00:00,,1,,"b""b' Since pytz 2014.3", doing .replace will use LMT timezoneswhich are not particularly useful. The recommended way of avoiding this," is to use utc (orwhatever timezone you are using) .localize(naive).'""",,,,,,,,,,,,,,,
django,2876,closed,1,2014-07-03 14:18:47,3.23,,1,,"b'b"" Here\'s an example: Which is correct? dt1 or dt2?  I think dt1", because it\'s summer time here, so we should be +01:00," whereas dt2 is +00:01""'",,,,,,,,,,,,,,
django,2876,closed,2,2014-07-03 14:18:47,348.05,,1,,"b""b' @radiosilence It is well known (see the pytz docs) that replace only works for UTC", so I think in that context the example in the docs is correct. Eg to quote the docs: That said, if someone wants to work with timezones in Django," the pytz docs are a must read imo; we might wanna add a paragraph about that to the docs.'""",,,,,,,,,,,,,,
django,2876,closed,3,2014-07-03 14:18:47,901.7,1,,,"b'b"" Hi Apollo does that mean that you agree with the premise of updating at least the Django docs to use .localize I think now that we have naive datetimes being effectively deprecated"," we\'ll be getting a fair few people reading this page who aren\'t familiar with pytz and thus will make this mistake.""'",,,,,,,,,,,,,,,,
django,2876,closed,closed,2014-07-08 11:11:46,1252.98,1,4,0,,,,,,,,,,,,,,,,,,
django,2876,closed,reopened,2014-07-08 11:18:19,6.55,1,4,0,,,,,,,,,,,,,,,,,,
django,2876,closed,4,2014-07-03 14:18:47,11.07,,,1,"b'b"" @radiosilence I think the first example should just use which does the correct thing. Not to sure about the second"," but it\'s technically correct; maybe add a sentence on how to create a aware time from an naive local (as opposed to utcnow) one and link to url  for details? (I really don\'t want to copy the pytz docs and works fine and **is** correct. Maybe @aaugustin has some thoughts on it.""'",,,,,,,,,,,,,,,,
django,2876,closed,5,2014-07-03 14:18:47,212.8,,,1,"b'b"" Did you see my example? Doing replace actually fails if you say want 4AM in the locale\'s timezone", and so make a naive object in that case calling .replace with the local TZ gets utterly the wrong thing," and but if you do localize() it works great! Basically there are no issues if you do it the way I changed the docs to say.""'",,,,,,,,,,,,,,,
django,2876,closed,6,2014-07-03 14:18:47,3.6,,1,,b'b\' Yes, but your example is different from what the docs suggest. Comparingyour example with the one from the docs is comparing apples and peaches IMO.On Jul 8, 2014 4:56 PM,"James Cleveland"" notifications@ wrote:\''
django	2876	closed	7	aaugustin	2014-07-03 14:18:47	415.15			+1	b'b"" I used in performance-sensitive code paths to minimize the overhead of time zone support. I only used it for UTC. That it fine. The pull request here is about updating the docs, which should indeed show the best practices. In both cases, I\'d use  .""'
django	2876	closed	8	timgraham	2014-07-03 14:18:47	1143.23		+1		b""b' Made changes suggested by Aymeric in da599022504995891bf745a6424e242ca9097b07.'",,,,,,,,,,,,,,
django,2876,closed,closed,2014-07-31 16:57:37,339.3,1,6,3,,,,,,,,,,,,,,,,,,
django,2876,closed,-,-,-,1,6,3,,,,,,,,,,,,,,,,,,
django,2959,closed,opened,2014-07-25 17:23:57,,,,,,,,,,,,,,,,,,,,,,
django,2959,closed,title,2014-07-25 17:23:57,00:00,,1,,"b""b' Fixed #23098 -Checked that lazy choices are not evaluated too soon'""",,,,,,,,,,,,,,,,,
django,2959,closed,body,2014-07-25 17:23:57,00:00,,,1,"b""b' Thanks Matthieu Agopian for the report.'""",,,,,,,,,,,,,,,,,
django,2959,closed,1,2014-07-25 17:23:57,1186.18,,1,,"b""b' LGTM"," test failure is unrelated to this.'""",,,,,,,,,,,,,,,,
django,2959,closed,2,2014-07-25 17:23:57,8.87,,,1,"b'b"" The report seems invalid to me (see the ticket for details). Besides", it\'s best to avoid type checking whenever possible," and I\'m not sure this code behaves correctly when the Promise resolves to or  .""'",,,,,,,,,,,,,,,
django,2959,closed,closed,2014-07-26 13:19:00,1195.05,0,2,2,,,,,,,,,,,,,,,,,,
django,2959,closed,reopened,2014-07-26 13:32:57,13.95,0,2,2,,,,,,,,,,,,,,,,,,
django,2959,closed,3,2014-07-25 17:23:57,1323.57,,1,,"b""b' Closing in favor of #2985 '""",,,,,,,,,,,,,,,,,
django,2959,closed,closed,2014-07-27 11:22:34,1309.62,0,3,2,,,,,,,,,,,,,,,,,,
django,2959,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,
django,3302,closed,opened,2014-10-03 17:50:53,,,,,,,,,,,,,,,,,,,,,,
django,3302,closed,title,2014-10-03 17:50:53,00:00,,1,,"b""b' Refactored some tests where is len(). Changed to count().'""",,,,,,,,,,,,,,,,,
django,3302,closed,body,2014-10-03 17:50:53,00:00,1,,,b'b\' Hello,  I done this changes," becouse len(qs) will hit the database with select \\\\* from table whereas () will hit the db with select count(*) from table. So count() here fits better. Sorry for typo in commit massage ""Refaktored"".Maybe on pull You can change this?Thanks :)\''",,,,,,,,,,,,,,,
django,3302,closed,closed,2014-10-03 18:11:30,20.62,1,1,0,,,,,,,,,,,,,,,,,,
django,3302,closed,reopened,2014-10-03 18:11:53,0.38,1,1,0,,,,,,,,,,,,,,,,,,
django,3302,closed,1,2014-10-03 17:50:53,1054.43,,,1,"b'b"" Hmm", in user facing code this is an obvious optimisation. However in the test suite there is possibly more to consider there\'s no particular reason in my opinion why it has to be as fast as possible, and we may as well check that the simplest possibly query we are interested in is being run. In particular, as most of these results return no objects anyway," the optimisation will have very little real benefit to the speed that the tests run. My guess would be that we\'re in the order of single milliseconds.""'",,,,,,,,,,,,,
django,3302,closed,2,2014-10-03 17:50:53,2.7,1,,,"b""b' But place like this is misleading (len(list(())) == 3) because we can only do (() == 4)'""",,,,,,,,,,,,,,,,,
django,3302,closed,3,2014-10-03 17:50:53,6.05,,1,,"b'b"" Those should be  "," but and the can just be those are readability improvements which make no change to the underlying queries. But I\'m not convinced about changing the query.""'",,,,,,,,,,,,,,,,
django,3302,closed,4,2014-10-03 17:50:53,51.18,,1,,"b""b' +1 to what Marc said.'""",,,,,,,,,,,,,,,,,
django,3302,closed,5,2014-10-03 17:50:53,388.55,,1,,"b""b' I created ticket [#23620]url  for the assertion issue and added the relevant parts of this to an initial patch there.'""",,,,,,,,,,,,,,,,,
django,3302,closed,closed,2014-10-08 18:53:48,41.92,2,4,1,,,,,,,,,,,,,,,,,,
django,3302,closed,-,-,-,2,4,1,,,,,,,,,,,,,,,,,,
django,3511,closed,opened,2014-11-15 09:00:40,,,,,,,,,,,,,,,,,,,,,,
django,3511,closed,title,2014-11-15 09:00:40,00:00,,1,,"b""b' Better signposting in templatetags documentation'""",,,,,,,,,,,,,,,,,
django,3511,closed,body,2014-11-15 09:00:40,00:00,,1,,"b""b' Provide links to shortcut decorators from template tag introductoin url '""",,,,,,,,,,,,,,,,,
django,3511,closed,1,2014-11-15 09:00:40,12.13,1,,,"b'b"" Please remove (it\'s a vim backup file I guess?). Also"," please update the commit message to follow Django\'s commit message format: url ""'",,,,,,,,,,,,,,,,
django,3511,closed,closed,2014-11-15 09:49:53,49.22,1,2,0,,,,,,,,,,,,,,,,,,
django,3511,closed,reopened,2014-11-15 09:50:03,0.17,1,2,0,,,,,,,,,,,,,,,,,,
django,3511,closed,2,2014-11-15 09:00:40,37.65,,1,,"b""b' Closed in favour of a fix to url '""",,,,,,,,,,,,,,,,,
django,3511,closed,closed,2014-11-15 09:50:27,0.4,1,3,0,,,,,,,,,,,,,,,,,,
django,3511,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,
django,3623,closed,opened,2014-11-25 22:47:33,,,,,,,,,,,,,,,,,,,,,,
django,3623,closed,title,2014-11-25 22:47:33,00:00,,1,,"b""b' Fixed #5372 -Added prefech to ModelAdmin inline ForeignKeys'""",,,,,,,,,,,,,,,,,
django,3623,closed,body,2014-11-25 22:47:33,00:00,,1,,"b""b' Made sure the admin prefetches foreign key fields for inline models.'""",,,,,,,,,,,,,,,,,
django,3623,closed,1,2014-11-25 22:47:33,14.92,1,,,"b'b"" Did you make sure the queries are not actually issued twice? I remember reporting an issue where [inline formsets wouldn\'t use the cache]url  which would render this whole automatic generation useless until it\'s fixed.""'",,,,,,,,,,,,,,,,,
django,3623,closed,2,2014-11-25 22:47:33,17.67,,,1,"b""b' Oh", I see now! The issue is more complex than I first thought," thank you for pointing this out.'""",,,,,,,,,,,,,,,
django,3623,closed,3,2014-11-25 22:47:33,7.55,,1,,"b""b' I think '""",,,,,,,,,,,,,,,,,
django,3623,closed,closed,2014-11-25 23:27:41,40.13,1,3,1,,,,,,,,,,,,,,,,,,
django,3623,closed,reopened,2014-11-25 23:27:44,0.05,1,3,1,,,,,,,,,,,,,,,,,,
django,3623,closed,4,2014-11-25 22:47:33,112.12,,1,,"b""b' Does this help with foreignkey choices dropdowns?'""",,,,,,,,,,,,,,,,,
django,3623,closed,5,2014-11-25 22:47:33,611.87,1,,,b'b\' You might want to revert one previous commit of mine (fa534b92dda0771661a98a1ca302ced264d0a6da, for Django 1.8): is implemented in such a way that you have to choose between that and (that is," if you use it won\\\'t trigger at all).I wasn\\\'t aware of that by the time I commited that change. Django could do something like ""if nothing is prefetched"," then I use .iterator() otherwise I use a classic queryset with cache""", but that might not be worth the change.\'',,,,,,,,,,,,,
django,3623,closed,6,2014-11-25 22:47:33,410.23,,1,,"b""b' Is this still blocked on ticket #18597?'""",,,,,,,,,,,,,,,,,
django,3623,closed,7,2014-11-25 22:47:33,265.5,,1,,"b'b"" Yes I think it\'s the case.""'",,,,,,,,,,,,,,,,,
django,3623,closed,8,2014-11-25 22:47:33,1117.32,,1,,"b'b"" Closing since it\'s blocked by [#18597]url ""'",,,,,,,,,,,,,,,,,
django,3623,closed,closed,2015-02-17 17:24:43,1076.98,2,7,1,,,,,,,,,,,,,,,,,,
django,3623,closed,-,-,-,2,7,1,,,,,,,,,,,,,,,,,,
django,3921,closed,opened,2015-01-15 02:08:55,,,,,,,,,,,,,,,,,,,,,,
django,3921,closed,title,2015-01-15 02:08:55,00:00,,1,,"b""b' Fixed #23935 -Example Failing test case.'""",,,,,,,,,,,,,,,,,
django,3921,closed,body,2015-01-15 02:08:55,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,3921,closed,1,2015-01-15 02:08:55,716.58,,1,,"b'b"" From a quick glance", I\'m not seeing a way we could adjust the fix from the ticket and preserve the behavior you require. It seems like a custom template filter would be appropriate for your use case," rather than relying on Django\'s implicit formatting of decimals. We could add a mention to the release notes if it seems appropriate.""'",,,,,,,,,,,,,,,
django,3921,closed,2,2015-01-15 02:08:55,27.25,,1,,"b""b' I just pushed a super hacky solution"," but yeah might be best for me to use a custom template filter.'""",,,,,,,,,,,,,,,,
django,3921,closed,3,2015-01-15 02:08:55,31.15,,1,,"b'b\' I\\\'m thinking ""won\\\'t fix"" based on the fact that the rest of the features in will have little chance of working if you override  . Try to add tests like the ones added in 9d1a69579b996eaa208f141b409141be63f597ec", but using your custom class and see what happens.\'',,,,,,,,,,,,,,,,
django,3921,closed,4,2015-01-15 02:08:55,297.42,,1,,"b'b"" Ok", one last proposal. Still hacky. If not," I\'ll figure something out.""'",,,,,,,,,,,,,,,
django,3921,closed,closed,2015-01-15 20:01:19,1072.4,0,6,0,,,,,,,,,,,,,,,,,,
django,3921,closed,reopened,2015-01-15 20:01:21,0.03,0,6,0,,,,,,,,,,,,,,,,,,
django,3921,closed,5,2015-01-15 02:08:55,2.87,1,,,"b'b"" I think I\'d like to table the issue for now and see if anyone else complains about this change.""'",,,,,,,,,,,,,,,,,
django,3921,closed,6,2015-01-15 02:08:55,2.47,,1,,"b""b' Yeah"," I like that idea.'""",,,,,,,,,,,,,,,,
django,3921,closed,closed,2015-01-15 20:06:39,5.3,1,7,0,,,,,,,,,,,,,,,,,,
django,3921,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,
django,3941,closed,opened,2015-01-17 15:32:33,,,,,,,,,,,,,,,,,,,,,,
django,3941,closed,title,2015-01-17 15:32:33,00:00,,1,,"b""b' Fixed #22423 -Leveraged MySQL 5.6 spatial functions'""",,,,,,,,,,,,,,,,,
django,3941,closed,body,2015-01-17 15:32:33,00:00,,,1,"b""b' Thanks Viswanathan Mahalingam for the report and initial patch.'""",,,,,,,,,,,,,,,,,
django,3941,closed,1,2015-01-17 15:32:33,13.28,,1,,b'b\' After this passes on the regular PR builder," you can test it on MySQL 5.6 using ""test on trusty"" as described [on the wiki]url \''",,,,,,,,,,,,,,,,
django,3941,closed,2,2015-01-17 15:32:33,18.95,,,1,"b'b"" Thanks"," I didn\'t remember that the Trusty instance was running MySQL 5.6""'",,,,,,,,,,,,,,,,
django,3941,closed,3,2015-01-17 15:32:33,0.13,,1,,"b""b' buildbot"," test on trusty'""",,,,,,,,,,,,,,,,
django,3941,closed,4,2015-01-17 15:32:33,18.37,,1,,"b""b' Add a release note? Comments to trigger the build seem broken (I can downgrade the jenkins plugin again to fix it)"," but I triggered a build manually for now: url '""",,,,,,,,,,,,,,,,
django,3941,closed,5,2015-01-17 15:32:33,76.73,1,,,"b""b' Main failure on  5.6 is  (line 236): Other errors are easily fixed (ST_Equals instead of ST_Equal).'""",,,,,,,,,,,,,,,,,
django,3941,closed,6,2015-01-17 15:32:33,267.98,,1,,"b""b' OK", now there is a remaining failure with ST_Disjoint," but I cannot figure out how to fix it. It might be that ST_Disjoint is still buggy on MySQL?  '""",,,,,,,,,,,,,,,
django,3941,closed,7,2015-01-17 15:32:33,67.0,,1,,"b""b' Test errors need to be fixed of course", but otherwise," LGTM.'""",,,,,,,,,,,,,,,
django,3941,closed,8,2015-01-17 15:32:33,824.77,,1,,"b""b' @visu"," care to investigate the failure that Claude noted?'""",,,,,,,,,,,,,,,,
django,3941,closed,9,2015-01-17 15:32:33,26.92,,1,,"b""b' In any case"," #4027 will most probably obsolete this patch.'""",,,,,,,,,,,,,,,,
django,3941,closed,10,2015-01-17 15:32:33,542.68,,1,,"b""b' Okay"," will close this for now then.'""",,,,,,,,,,,,,,,,
django,3941,closed,closed,2015-03-17 22:29:22,416.82,1,9,2,,,,,,,,,,,,,,,,,,
django,3941,closed,11,2015-01-17 15:32:33,1223.17,,1,,"b""b' Reopening"," I plan to update it.'""",,,,,,,,,,,,,,,,
django,3941,closed,reopened,2015-04-22 18:52:32,1223.17,1,10,2,,,,,,,,,,,,,,,,,,
django,3941,closed,12,2015-01-17 15:32:33,5.75,,1,,"b""b' Patch updated"," the blocker is still the failure.'""",,,,,,,,,,,,,,,,
django,3941,closed,13,2015-01-17 15:32:33,6.82,,1,,"b'b"" It may be that MySQL 5.6 doesn\'t support ST_Disjoint combining and  .As per this comment in the MySQL user guide:  .""'",,,,,,,,,,,,,,,,,
django,3941,closed,14,2015-01-17 15:32:33,1052.42,,1,,"b""b' Would it be helpful to upgrade the MySQL on Jenkins to a newer version? Of course"," we still need to get the tests passing for older versions.'""",,,,,,,,,,,,,,,,
django,3941,closed,15,2015-01-17 15:32:33,49.2,,,1,"b'b"" No"," I think that most installations have no newer versions than 5.6.x. It\'s still a good candidate to run the test on.""'",,,,,,,,,,,,,,,,
django,3941,closed,16,2015-01-17 15:32:33,231.52,,1,,"b""b' The test also fails on MySQL 5.7.7-rc.'""",,,,,,,,,,,,,,,,,
django,3941,closed,17,2015-01-17 15:32:33,1181.28,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,
django,3941,closed,closed,2015-08-01 12:59:31,1086.98,1,15,3,,,,,,,,,,,,,,,,,,
django,3941,closed,18,2015-01-17 15:32:33,346.32,,1,,"b""b' Reopening just for  testing.'""",,,,,,,,,,,,,,,,,
django,3941,closed,19,2015-01-17 15:32:33,1402.77,,,1,"b""b' Is anyone working on this?  I have created a new ticket: url  The ticket also contains the link to a patch for django 1.9.2.  I am fine if tickets #22423 and #29302 are merged.'""",,,,,,,,,,,,,,,,,
django,3941,closed,20,2015-01-17 15:32:33,1404.92,,,1,"b'b"" I\'m maintaining the patch (except the version references in docs). I will push my latest version. However", there is still a GIS test failing," would be nice if you could explore that!""'",,,,,,,,,,,,,,,
django,3941,closed,21,2015-01-17 15:32:33,1409.17,,1,,"b""b' Looks like I cannot reopen now that I forced-push it. you can work from my branch at url  Feel free to make a new PR if you can resolve the failing test.'""",,,,,,,,,,,,,,,,,
django,3941,closed,22,2015-01-17 15:32:33,1416.33,,1,,"b'b"" I used [this]url  to run the unittest suite", however," they aren\'t moving past this issue  Is it possible to run the relevant tests for your PR instead of the whole django test suite?""'",,,,,,,,,,,,,,,
django,3941,closed,23,2015-01-17 15:32:33,1421.3,,1,,"b""b' you can add the argument to (and maybe to avoid the database creation overhead which is heavy with MySQL).'""",,,,,,,,,,,,,,,,,
django,3941,closed,-,-,-,1,19,5,,,,,,,,,,,,,,,,,,
django,3942,closed,opened,2015-01-17 18:38:34,,,,,,,,,,,,,,,,,,,,,,
django,3942,closed,title,2015-01-17 18:38:34,00:00,,1,,"b""b' Fixed #18773 -Added logging for template variable resolving'""",,,,,,,,,,,,,,,,,
django,3942,closed,body,2015-01-17 18:38:34,00:00,,1,,"b""b' Added a  logger with a default console handler.  Addedlogging if there is an exception while resolving variables in atemplate. Added corresponding tests and updated loggingdocumentation. Updated AdminField to prevent colsole output aboutis_readonly not being defined.'""",,,,,,,,,,,,,,,,,
django,3942,closed,1,2015-01-17 18:38:34,546.85,,1,,"b'b"" I\'m still investigating the build failures for this one.  When I run the tests locally they are all passing"," but it looks like they all failed in the last run on the Jenkins server.""'",,,,,,,,,,,,,,,,
django,3942,closed,2,2015-01-17 18:38:34,1115.95,1,,,"b""b' Could you try rebasing so this merges cleanly to see if Jenkins still complains after that?'""",,,,,,,,,,,,,,,,,
django,3942,closed,3,2015-01-17 18:38:34,10.55,,,1,"b'b"" I\'ll give that a try and incorporate the comments above. Thanks!""'",,,,,,,,,,,,,,,,,
django,3942,closed,4,2015-01-17 18:38:34,323.35,,1,,"b'b"" I\'ve incorporated the changes from your latest review @timgraham.  The docs build is failing with an error about the command not being available", so I\'m not sure what to do about that.  I\'m not sure if I did something as it looks like my pull-request is the only one that has triggered that error, although it is also the only one that looks like it has run today. For the default build errors, it looks like the workspaces for the images that are still failing didn\'t pull in the code from the last version of the check-in.  They still have an older version of template_," but I\'m not sure why or how to force it to update.  ""'",,,,,,,,,,,,,
django,3942,closed,5,2015-01-17 18:38:34,108.07,,1,,"b""b' I had the same problem in a recent pull request"," and fixed by closing and re-opening the PR (I waited about 10 minutes in between). This seems relevant: [JENKINS-10385]url '""",,,,,,,,,,,,,,,,
django,3942,closed,closed,2015-03-27 01:28:09,409.58,1,5,1,,,,,,,,,,,,,,,,,,
django,3942,closed,reopened,2015-03-27 01:28:17,0.13,1,5,1,,,,,,,,,,,,,,,,,,
django,3942,closed,6,2015-01-17 18:38:34,511.03,1,,,"b""b' No need to worry about Jenkins checkout failures at this point. If most of the builds pass"," that gives me enough confidence that the change is okay.'""",,,,,,,,,,,,,,,,
django,3942,closed,7,2015-01-17 18:38:34,551.58,,,1,"b""b' merged in dc5b01ad05e50ccde688c73c2ed3334a956076b0"," thanks!'""",,,,,,,,,,,,,,,,
django,3942,closed,closed,2015-03-27 23:25:57,1317.67,2,5,2,,,,,,,,,,,,,,,,,,
django,3942,closed,-,-,-,2,5,2,,,,,,,,,,,,,,,,,,
django,3963,closed,opened,2015-01-21 16:36:09,,,,,,,,,,,,,,,,,,,,,,
django,3963,closed,title,2015-01-21 16:36:09,00:00,,1,,"b""b' Fixed #24211 -Removed ValuesQuerySet() and ValuesListQuerySet().'""",,,,,,,,,,,,,,,,,
django,3963,closed,1,2015-01-21 16:36:09,375.9,,1,,"b""b' +100'""",,,,,,,,,,,,,,,,,
django,3963,closed,closed,2015-01-28 22:52:03,375.9,0,2,0,,,,,,,,,,,,,,,,,,
django,3963,closed,reopened,2015-01-28 22:52:06,0.05,0,2,0,,,,,,,,,,,,,,,,,,
django,3963,closed,2,2015-01-21 16:36:09,466.25,,,1,"b""b' Looks good to me.'""",,,,,,,,,,,,,,,,,
django,3963,closed,closed,2015-01-30 15:06:38,974.53,0,2,1,,,,,,,,,,,,,,,,,,
django,3963,closed,-,-,-,0,2,1,,,,,,,,,,,,,,,,,,
django,4115,closed,opened,2015-02-12 07:11:26,,,,,,,,,,,,,,,,,,,,,,
django,4115,closed,title,2015-02-12 07:11:26,00:00,,1,,"b""b' Refs #24215 -Prevented pending lookup pollution by abstract models.'""",,,,,,,,,,,,,,,,,
django,4115,closed,1,2015-02-12 07:11:26,2.88,,1,,"b'b"" The tests could be removed if [#24215]url  adds system checks to make sure there\'s no pending lookup on application initialization.""'",,,,,,,,,,,,,,,,,
django,4115,closed,2,2015-02-12 07:11:26,386.95,,1,,"b""b' Looks reasonable to me.'""",,,,,,,,,,,,,,,,,
django,4115,closed,3,2015-02-12 07:11:26,215.57,,,1,"b""b' Looks good to me as well. With this change we do want to be confident that concrete models which inherit an abstract base with lazy relations will resolve that relation I assume there are already tests covering that case?'""",,,,,,,,,,,,,,,,,
django,4115,closed,4,2015-02-12 07:11:26,43.73,,1,,"b'b"" Yes"," in the [ ]url  test app. I\'m going to close this in favor of #3984 which includes a similar commit (3e7b896617a9fe1f315b757a45f92a58d707575f).""'",,,,,,,,,,,,,,,,
django,4115,closed,closed,2015-02-12 18:00:34,649.13,0,4,1,,,,,,,,,,,,,,,,,,
django,4115,closed,5,2015-02-12 07:11:26,1.93,,1,,"b'b"" I don\'t think you should close this", I think you should merge it. It\'s a much  change than #3984," and can be made independently. Smaller incremental changes in general are better. #3984 can easily adapt to having this bit merged in from master. I\'m not sure that #3984 is close enough to being ready that we can assume it\'s going in.""'",,,,,,,,,,,,,,,
django,4115,closed,reopened,2015-02-12 18:02:30,1.93,0,5,1,,,,,,,,,,,,,,,,,,
django,4115,closed,6,2015-02-12 07:11:26,3.7,,,1,"b'b"" Okay"," I\'ll proceed with merging then!""'",,,,,,,,,,,,,,,,
django,4115,closed,closed,2015-02-12 18:08:13,5.72,0,5,2,,,,,,,,,,,,,,,,,,
django,4115,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,
django,4122,closed,opened,2015-02-13 04:21:21,,,,,,,,,,,,,,,,,,,,,,
django,4122,closed,title,2015-02-13 04:21:21,00:00,,1,,"b""b' Refs #24215 -Safer table alterations under SQLite'""",,,,,,,,,,,,,,,,,
django,4122,closed,body,2015-02-13 04:21:21,00:00,,1,,"b'b"" Table alterations in SQLite require creating a new table and copying data over from the old one. This change ensures that no Django model ever exists with the temporary table name as its db_table attribute. I ran into this while refactoring Django\'s lazy model operations. See PR #3984 and [discussion of this specific change on django-developers]url ""'",,,,,,,,,,,,,,,,,
django,4122,closed,1,2015-02-13 04:21:21,197.2,,,1,"b""b' Hey @AlexHill", thanks for the patch. To be honest, the mailing list discussion slipped under my radar. I like the old approach to rename the final new table including copied data better," as it prevents still running processes to already insert new data in the new table before all existing data has been copied. With your approach it is possible that the copy part can fail with some integrity error like a duplicate unique value. The current process ensures that the existing data is preserved as is before new data from running processes can join the game.'""",,,,,,,,,,,,,,
django,4122,closed,2,2015-02-13 04:21:21,75.1,,,1,"b'b"" Thanks for looking this over! These changes should take place within a transaction \\xe2\\x80\\x93\\xc2\\xa0wouldn\'t that guard against those kinds of problems? Alex""'",,,,,,,,,,,,,,,,,
django,4122,closed,3,2015-02-13 04:21:21,7.3,,1,,"b'b"" Possibly"," depending on whether the actual SQLite version supports DDL roleback. I found an old issue in South\'s bug tracker regarding DDL and transactions on SQLite: url ""'",,,,,,,,,,,,,,,,
django,4122,closed,4,2015-02-13 04:21:21,1.35,,1,,"b""b' CCing @andrewgodwin for advice.'""",,,,,,,,,,,,,,,,,
django,4122,closed,closed,2015-02-13 09:12:29,291.13,0,4,2,,,,,,,,,,,,,,,,,,
django,4122,closed,reopened,2015-02-13 09:12:40,0.18,0,4,2,,,,,,,,,,,,,,,,,,
django,4122,closed,5,2015-02-13 04:21:21,489.0,,,1,"b'b"" I am pretty sure that all supported versions of SQLite fully support transactional DDL (AFAIK this has been the case for a long time). The problem is that the Python sqlite module has some bugs in it", and one of them is around transactional DDL handling. But it\'s possible to workaround this bug (see url  and from my reading of our SQLite backend, I think we do workaround it correctly, at least since the transaction updates in Django 1.6. I did a brief experiment with getting a raw and running some DDL within a  , and everything seemed to work correctly. (I actually don\'t have any strong opinion on this patch, because I don\'t think anyone should ever use migrations on SQLite :-) But I really want to see #3984 get in. I\'m not clear @AlexHill  if #3984 actually depends on this patch going in first," or if you just happened to run into this while working on #3984?)""'",,,,,,,,,,,
django,4122,closed,6,2015-02-13 04:21:21,41.15,,,1,"b""b' Thanks @carljm . Fine with me then.'""",,,,,,,,,,,,,,,,,
django,4122,closed,7,2015-02-13 04:21:21,7.77,1,,,"b'b"" Yup", as long as we\'re sure Django\'s minimum SQLite version is above the DDL transactional one," I\'m pro this. Anything that makes our alteration hack a little less bad is worth it.""'",,,,,,,,,,,,,,,
django,4122,closed,8,2015-02-13 04:21:21,24.18,,1,,"b'b"" I spent a while trying to figure out what version of SQLite first supported transactional DDL", and was unsuccessful. As best I can tell," this is because SQLite has always supported it; the rumors to the contrary are all due to Python\'s broken sqlite module.""'",,,,,,,,,,,,,,,
django,4122,closed,9,2015-02-13 04:21:21,37.62,,,1,b'b\' Thanks for the feedback everyone. #3984 is dependent on this. [This introspection test]url  breaks without the change," with an error encountered at line 132. The actual exception is raised here: url  We find a reference to the now-nonexistent ""__new"" table on line 116", then when we assume there are rows in sqlite_master related to it we get an  .\'',,,,,,,,,,,,,,,
django,4122,closed,10,2015-02-13 04:21:21,91.57,,1,,"b""b' @AlexHill Should the transaction be explicit here? Or is this function called from within a transaction?'""",,,,,,,,,,,,,,,,,
django,4122,closed,11,2015-02-13 04:21:21,297.58,,1,,"b""b' @foresmac should always happen within a transaction I think. [  is a context manager]url  which wraps alteration operations in a transaction"," e.g.  '""",,,,,,,,,,,,,,,,
django,4122,closed,12,2015-02-13 04:21:21,491.2,,1,,"b""b' Yes", SQLite has always supported transaction DDL. This is inherent to its implementation of atomic commit (i.e. just a file lock). In fact," SQLite has excellent transactional properties. All the pain comes from url '""",,,,,,,,,,,,,,,
django,4122,closed,13,2015-02-13 04:21:21,339.48,,1,,"b'b"" If I understand correctly", the documentation of sqlite3 says that, when a table is renamed," foreign key definitions will be altered accordingly. url  Isn\'t that a problem? **Before**new table created  constraints from new table to other tables created  no constraints from other tables to new tabledata copiedold table dropped  constraints from old table to other tables dropped  constraints from other tables to old table survive (?) (needs testing)new table renamed  constraints from new table to other tables still work  constraints from other tables automatically apply (?) (needs testing) **After**old table renamed  constraints from old table to other tables still work  constraints from other tables aren\'t updated (?) (needs testing)new table created  constraints from new table to other tables created  constraints from other tables are missingdata copiedold table dropped  constraints from old table to other tables dropped  constraints from other tables to old table survive (?) (needs testing)""'",,,,,,,,,,,,,,
django,4122,closed,14,2015-02-13 04:21:21,92.07,,,1,"b""b' Briefly looking at the SQLite schema editor", you summary sounds about right," @aaugustin . The method on the base schema editor is way smarter and handles the constraints on related tables itself: url '""",,,,,,,,,,,,,,,
django,4122,closed,15,2015-02-13 04:21:21,33.67,,1,,"b'b"" Yes"," that does sound like a problem. It\'s also making me wonder why I ran into this problem in the first place since foreign key references should be renamed when the parent table is renamed. Will have to do more investigation. From the SQLite docs I suspect this is subtly broken when foreign key constraints are enabled before this change as well (they\'re disabled by default). Would it be a good idea to just follow [the procedure in the SQLite docs]url  as closely as we can? It\'s basically the old procedure with foreign key constraints explicitly disabled.""'",,,,,,,,,,,,,,,,
django,4122,closed,16,2015-02-13 04:21:21,506.0,,,1,"b'b"" OK \\xe2\\x80\\x93\\xc2\\xa0simply enabling foreign key constraints during the existing", unpatched schema alteration process makes my original problem go away. The recursive reference is renamed as per the docs and all is well. Similarly, the changes in this patch should work fine as long as foreign key constraints aren\'t enabled. Overall," this seems like good advice:""'",,,,,,,,,,,,,,
django,4122,closed,17,2015-02-13 04:21:21,986.43,,1,,"b'b"" @AlexHill Ok", so what\'s the conclusion here? Should we be explicitly setting constraints ON," and otherwise leaving things as they are?""'",,,,,,,,,,,,,,,
django,4122,closed,18,2015-02-13 04:21:21,166.08,,1,,"b'b"" I\'ve been playing with enabling foreign keys on a SQLite database. Then my migrations always crash with an integrity error. So I don\'t think that\'s the solution here.""'",,,,,,,,,,,,,,,,,
django,4122,closed,19,2015-02-13 04:21:21,55.38,,1,,"b'b"" Most recent commit explicitly disables FK constraints before entering a transaction in the SQLite schema editor. This won\'t change any existing behaviour and protects us against a future change to the default.""'",,,,,,,,,,,,,,,,,
django,4122,closed,20,2015-02-13 04:21:21,1145.82,,1,,"b'b"" Ok", I\'ve reviewed the thread. Let me check these conclusions for sanity:1. SQLite\'s docs recommend our current approach (using a table), plus ensuring that FK constraints are off.2. This approach causes problems for us, because a model with set to the table can escape and be referenced later (I\'m still not quite clear on  this happens, and why that leakage alone can\'t just be fixed).3. Changing our approach to use an table instead (still with FK constraints off) fixes the problem in (2), and otherwise works fine. That\'s what this PR does.4. Regardless, we want FK constraints off for this process. That is the default in SQLite, which we currently rely on. This PR also enforces that so we are no longer relying on SQLite\'s default, which may change. This change is basically orthogonal to the other change in this PR. It seems to me that (4) is uncontroversial. (3) makes me a bit nervous because it means we are no longer following the process that SQLite recommends. And I still don\'t have a clear enough understanding of why the change is necessary in the first place," or what alternatives there might be to fix the problem in (2).""'",,,,,,,,
django,4122,closed,21,2015-02-13 04:21:21,2.28,,,1,"b""b' Presuming this is good to go", I think it should be squashed down to two commits (one for the change to the table alteration process, and one for enforcing FK constraints off), and we need to get a clean test run (right now it looks like we have the other three checks," but no test run).'""",,,,,,,,,,,,,
django,4122,closed,22,2015-02-13 04:21:21,137.43,,1,,"b'b"" Thanks Carl. Your conclusions are correct but with a clarification on point (2): the existing behaviour causes problems ONLY with my lazy operations refactor patch #4130 applied. I will have to remind myself of the exact mechanism", but the actual problem boils down to this:Django dynamically creates a temporary model that it uses to generate the DDL for the table.before #4130, any self-referential related fields on the temporary model actually refer to the original model (and to the original table name, in the DDL).after #4130, those FKs-to-self refer (correctly?) to the temporary . When a table is renamed with FK constraints enabled, any FKs to the same table are also updated. With FK constraints disabled, that doesn\'t happen. So after #4130, FKs-to-self end up pointing to a non-existent table after it\'s renamed. I hope that makes sense. I think there is a way to fix this while retaining the existing procedure: add an optional argument to the schema editor\'s  , and use it only for the table\'s name," not for its FK references. I\'ve emailed sqlite-users to to see if anybody can see any problems with changing the procedure.""'",,,,,,,,
django,4122,closed,23,2015-02-13 04:21:21,8.18,,,1,"b""b' Thanks for the additional detail", Alex! I think I have a grasp now of why this is needed. The alternative (of changing  ) seems less clean than ensuring that we never create a model with a bogus table name. Unless somebody can come up with a specific reason why this new procedure is problematic," I think we should go ahead with it (pending a clean test run).'""",,,,,,,,,,,,,,,
django,4122,closed,24,2015-02-13 04:21:21,8.45,,1,,"b'b"" I never really used sqlite3 before", and I\'m not sure I completely understand the situation, but my guess would be that the _new method would mean slightly less downtime and more consistency because all of the rows are present and readable while the data is being copied from the original table to the new table. Also, if something goes wrong when creating the new table," the old table hasn\'t been touched yet.""'",,,,,,,,,,,,,
django,4122,closed,25,2015-02-13 04:21:21,17.17,1,,,"b'b"" @collinanderson I think your understanding is correct. This all happens within a transaction so consistency at least shouldn\'t be an issue. Availability I\'m not sure. I know SQLite delays writes for as long as possible and that its locks are very coarse-grained", which makes me suspect there wouldn\'t be much difference," but I could be completely wrong about that.""'",,,,,,,,,,,,,,,
django,4122,closed,26,2015-02-13 04:21:21,11.15,,1,,"b""b' Have squashed into two commits and rebased against current master.'""",,,,,,,,,,,,,,,,,
django,4122,closed,27,2015-02-13 04:21:21,425.3,,1,,"b'b"" @collinanderson I\'ve just tested the availability side of things very informally with sessions open in two terminals", and I observed the same behaviour using both procedures. If you rename a table inside a transaction, other processes can still access the data under the old table name until the happens. At that point, if the data is small enough to fit in sqlite\'s cache, other processed can still access the data right up until  / . If the data has to be put on disk," the database is locked for reads and writes from that point until the end of the transaction.""'",,,,,,,,,,,,
django,4122,closed,28,2015-02-13 04:21:21,598.63,,1,,"b""b' buildbot"," add to whitelist.'""",,,,,,,,,,,,,,,,
django,4122,closed,29,2015-02-13 04:21:21,528.17,,1,,"b'b"" Here\'s the gist of the issue as I understand it. 1) Table structure changes should occur with integrity constraints turned off. SQLite\'s docs most likely recommend this so that constraints from other tables to the table being altered remain unchanged throughout the process. This may not be required in Django because it takes care of updating constraints. Conversely we may be able to simplify Django in this area", that is, remove the code @MarkusH linked to. EDIT: this is required, Django doesn\'t update constraints, that code deals with something else, it cannot be removed. 2) As a consequence, self-referential constraints won\'t be updated when a table is renamed. 3) Django should rename the old table to tablename_old and create the new table with the target tablename. Corruption of the old table doesn\'t matter because it will be dropped. Some concerns have been expressed about running such a migration while inserting data in the table. Touching the old table first isn\'t an issue. If the migration\'s transaction ends up with a rollback, the previous state will be restored. Data loss is impossible because transactions are always serializable on SQLite. Concurrent reads may occur while the migation\'s transaction is in progress \\xe2\\x80\\x94 SQLite is fairly optimized for concurrency within the constraints of its model \\xe2\\x80\\x94 but concurrent writes will wait until the transaction is complete. In all cases," I don\'t think the order in which operations are performed makes a difference. (SQLite isn\'t a very good option for high availability anyway.)""'",,,,,,,,,
django,4122,closed,30,2015-02-13 04:21:21,13.68,1,,,"b'b"" Please have a look at my comments on the implementation of the first commit. Otherwise I\'m OK with merging this. Thanks for working on this and sorry for taking so long to review your patch.""'",,,,,,,,,,,,,,,,,
django,4122,closed,31,2015-02-13 04:21:21,458.73,1,,,"b'b"" The patch now accounts for spatialite", which had not been on my radar at at all until seeing the failed test. Previously, I had chosen to just execute the delete and rename SQL manually rather than calling and methods. I thought it made the method easier to understand and possibly safer, given that we\'re not _actually_ altering or deleting any Django models from a migrations point of view \\xe2\\x80\\x93\\xc2\\xa0 we\'re just fiddling with the database tables temporarily. However, spatialite\'s schema editor relies on and methods to correctly handle its columns and indexes so I\'ve reverted to using them. Unfortunately this means we need to modify  , which breaks things horribly if not reversed by the end of the method. I\'ve used a context manager to make this explicit and hard to mess up. The alternative is to add an optional argument to which would override the the passed-in model\'s table name. This seems weird, but has precedent in  ," whose arguments are a model and two arbitrary table names.""'",,,,,,,,,,
django,4122,closed,32,2015-02-13 04:21:21,23.88,,1,,"b""b' The remaining failure was a git error"," not a failing test.'""",,,,,,,,,,,,,,,,
django,4122,closed,33,2015-02-13 04:21:21,145.77,,1,,"b'b"" Can you just squash the 3rd commit into the 1st one and rebase on top of master? Then I\'ll merge this.""'",,,,,,,,,,,,,,,,,
django,4122,closed,34,2015-02-13 04:21:21,19.95,,1,,"b""b' Done.'""",,,,,,,,,,,,,,,,,
django,4122,closed,35,2015-02-13 04:21:21,15.15,,,1,"b'b"" The MySQL build error is sticky but unrelated to this code. It\'s happening because I rebased and  d this branch while a build was running: [JENKINS-22537]url  Should be fine to merge.""'",,,,,,,,,,,,,,,,,
django,4122,closed,36,2015-02-13 04:21:21,11.15,,1,,"b""b' Merged. I also added you to AUTHORS.'""",,,,,,,,,,,,,,,,,
django,4122,closed,37,2015-02-13 04:21:21,8.33,,,1,"b""b' Good stuff. Thanks so much for your help with this!'""",,,,,,,,,,,,,,,,,
django,4122,closed,closed,2015-03-21 09:40:43,28.05,4,24,11,,,,,,,,,,,,,,,,,,
django,4122,closed,-,-,-,4,24,11,,,,,,,,,,,,,,,,,,
django,4130,closed,opened,2015-02-14 04:04:42,,,,,,,,,,,,,,,,,,,,,,
django,4130,closed,title,2015-02-14 04:04:42,00:00,,1,,"b""b' Fixed #24215 -Refactor of lazy model operations'""",,,,,,,,,,,,,,,,,
django,4130,closed,body,2015-02-14 04:04:42,00:00,,1,,"b'b"" See #3984 for history \\xe2\\x80\\x93\\xc2\\xa0this is a new pull request based on master instead of . I\'ve bumped the deprecation warning for to  "," and documented the deprecation. I\'ve also consolidated the commits into a smaller number of logical chunks. CC @timgraham @carljm @charettes @akaariai""'",,,,,,,,,,,,,,,,
django,4130,closed,1,2015-02-14 04:04:42,288.12,,1,,"b'b\' Updated with feedback from @aaugustin and @MarkusH. Notably:make_model_label is gone (we shouldn\\\'t need to go back to an ""app_"" string often)now only takes tuples", not model instances or string labels. still works with all forms.\'',,,,,,,,,,,,,,,,
django,4130,closed,2,2015-02-14 04:04:42,379.73,,1,,"b""b' See #4122 for details of the failing test.'""",,,,,,,,,,,,,,,,,
django,4130,closed,3,2015-02-14 04:04:42,188.28,,1,,"b""b' So this should be ready to go once #4122 is resolved to fix the failing test?'""",,,,,,,,,,,,,,,,,
django,4130,closed,4,2015-02-14 04:04:42,224.58,,,1,"b'b"" @carljm yes"," provided everyone\'s happy with the latest API changes.""'",,,,,,,,,,,,,,,,
django,4130,closed,5,2015-02-14 04:04:42,18.68,,,1,"b""b' I like the latest API changes"," and am happy with the state of this whenever the tests are passing.'""",,,,,,,,,,,,,,,,
django,4130,closed,6,2015-02-14 04:04:42,1402.15,1,,,"b'b"" I\'m done commenting the changes to the app registry. The final implementation looks clean and consistent which is extremely important in this area. I read the rest of the patch and didn\'t spot anything suspicious but I\'m a bit out of my depth there.""'",,,,,,,,,,,,,,,,,
django,4130,closed,7,2015-02-14 04:04:42,502.38,,1,,"b'b"" I realised the tests Simon wrote no longer test the right thing after all my changes"," so I\'ve rewritten them and added a test to to verify  .""'",,,,,,,,,,,,,,,,
django,4130,closed,8,2015-02-14 04:04:42,19.4,,,1,"b""b' Ok"," this is now just waiting for #4122 to be approved. Thanks for your help everyone!'""",,,,,,,,,,,,,,,,
django,4130,closed,9,2015-02-14 04:04:42,485.55,,,1,"b'b"" I\'ve just rebased against current master to fix some merge conflicts"," and rewritten the commit history to get rid of the junk: url  I\'m keen to get this in so it doesn\'t stagnate further \\xe2\\x80\\x93\\xc2\\xa0if there\'s anything more I can do to help the process along please let me know!""'",,,,,,,,,,,,,,,,
django,4130,closed,10,2015-02-14 04:04:42,349.45,,1,,"b""b' Jenkins says that the tests fail on SQLite. Can you have a look?'""",,,,,,,,,,,,,,,,,
django,4130,closed,11,2015-02-14 04:04:42,206.83,,,1,"b""b' @aaugustin the failures under SQLite are fixed by #4122"," which I think is good to go as well.'""",,,,,,,,,,,,,,,,
django,4130,closed,12,2015-02-14 04:04:42,134.17,,1,,"b""b' The squashed and rebased changes can be viewed in my [lazy_ops_rebase branch]url  up-to-date as of today. Should I squash the commits in this pull request or open a new one? Secondly", for all tests to pass this depends on #4122," which has been approved in theory but needs final review. Paging @akaariai and @carljm having expressed some interest in getting this committed :)'""",,,,,,,,,,,,,,,
django,4130,closed,13,2015-02-14 04:04:42,661.63,,1,,"b'b"" Let\'s wait for url  to merge first as that is a large patch and has some conflicts with this. I think that will happen in a few days.""'",,,,,,,,,,,,,,,,,
django,4130,closed,14,2015-02-14 04:04:42,171.33,,,1,"b'b"" Thanks for your feedback Tim. I\'ve followed your suggestions. Don\'t mind waiting. Anssi mentioned that merging this patch could make his work on the rel stuff easier \\xe2\\x80\\x93 is that still the case @akaariai?""'",,,,,,,,,,,,,,,,,
django,4130,closed,15,2015-02-14 04:04:42,1141.92,,1,,"b""b' This will likely make composite fields and  refactor easier later on.'""",,,,,,,,,,,,,,,,,
django,4130,closed,16,2015-02-14 04:04:42,179.42,,1,,"b""b' Alright"," no need to merge this before #4241 then.'""",,,,,,,,,,,,,,,,
django,4130,closed,17,2015-02-14 04:04:42,1108.73,,1,,"b'b"" Jenkins really doesn\'t seem to like some of these  d commits. The build is failing on most configurations. I\'ll try closing and re-opening to re-trigger a build.""'",,,,,,,,,,,,,,,,,
django,4130,closed,closed,2015-03-25 08:27:04,262.37,1,12,6,,,,,,,,,,,,,,,,,,
django,4130,closed,reopened,2015-03-25 08:33:47,6.72,1,12,6,,,,,,,,,,,,,,,,,,
django,4130,closed,18,2015-02-14 04:04:42,263.22,,,1,"b'b"" OK @timgraham"," I\'ve rebased on top of master now that #4241 is in. There are a couple of those git errors in Jenkins but all tests are passing \\xe2\\x80\\x93 I think this is good to go.""'",,,,,,,,,,,,,,,,
django,4130,closed,19,2015-02-14 04:04:42,5.07,,1,,"b'b"" This seems like it\'s broken into more commits than needed. Also"," none of them reference the ticket.""'",,,,,,,,,,,,,,,,
django,4130,closed,20,2015-02-14 04:04:42,25.68,,1,,"b'b"" Ok"," I\'ve put the bulk of this into a single commit referring to the ticket.""'",,,,,,,,,,,,,,,,
django,4130,closed,21,2015-02-14 04:04:42,448.17,,,1,"b""b' merged in 720ff740e70e649a97fcf0232fec132569a52c7e and 7a75ed1a4fdf043064f0cce393bb93b698794978"," thanks.'""",,,,,,,,,,,,,,,,
django,4130,closed,closed,2015-03-25 20:49:12,735.42,1,14,8,,,,,,,,,,,,,,,,,,
django,4130,closed,22,2015-02-14 04:04:42,316.95,,,1,"b""b' Great! Thanks Tim and everyone else who took to the time to review this and offer feedback: @charettes", @MarkusH, @akaariai and particularly @carljm and @aaugustin. The patch that got committed is much," much nicer than what I initially proposed thanks to all of you.'""",,,,,,,,,,,,,,
django,4130,closed,-,-,-,1,14,9,,,,,,,,,,,,,,,,,,
django,4191,closed,opened,2015-02-23 01:12:47,,,,,,,,,,,,,,,,,,,,,,
django,4191,closed,title,2015-02-23 01:12:47,00:00,,1,,"b""b' [1.7.x] Fixed 24352 -Coercing ManyRelatedManager to string raises StopIteracion exception. '""",,,,,,,,,,,,,,,,,
django,4191,closed,body,2015-02-23 01:12:47,00:00,,1,,"b""b' Fixed Coercing ManyRelatedManager to string raises Stopteration exception'""",,,,,,,,,,,,,,,,,
django,4191,closed,1,2015-02-23 01:12:47,5.35,,1,,"b""b' Is isort failed error related to my change?'""",,,,,,,,,,,,,,,,,
django,4191,closed,2,2015-02-23 01:12:47,773.8,,,1,"b""b' Please open a new pull request against master as Simon indicated on the ticket"," thanks.'""",,,,,,,,,,,,,,,,
django,4191,closed,closed,2015-02-23 14:11:56,779.15,0,3,1,,,,,,,,,,,,,,,,,,
django,4191,closed,3,2015-02-23 01:12:47,263.15,,,1,"b""b' Reopening as the bug only affects 1.7. Please update the test per my comments and add a mention in the 1.7.6 release notes"," thanks.'""",,,,,,,,,,,,,,,,
django,4191,closed,reopened,2015-02-25 18:35:05,263.15,0,3,2,,,,,,,,,,,,,,,,,,
django,4191,closed,4,2015-02-23 01:12:47,205.75,,1,,"b""b' Should I do the PR against branch?'""",,,,,,,,,,,,,,,,,
django,4191,closed,5,2015-02-23 01:12:47,899.8,,1,,"b""b' buildbot"," test this please.'""",,,,,,,,,,,,,,,,
django,4191,closed,6,2015-02-23 01:12:47,185.2,,,1,"b""b' merged in 0831a43c3afc3f93b8ed0c58630836e38248be12"," thanks.'""",,,,,,,,,,,,,,,,
django,4191,closed,closed,2015-02-26 16:05:50,1290.75,0,5,3,,,,,,,,,,,,,,,,,,
django,4191,closed,-,-,-,0,5,3,,,,,,,,,,,,,,,,,,
django,4345,closed,opened,2015-03-17 15:18:29,,,,,,,,,,,,,,,,,,,,,,
django,4345,closed,title,2015-03-17 15:18:29,00:00,,1,,"b""b' Fixed #24499 -Dropped support for PostGIS 1.5.'""",,,,,,,,,,,,,,,,,
django,4345,closed,body,2015-03-17 15:18:29,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,4345,closed,closed,2015-03-17 22:37:23,438.9,0,2,0,,,,,,,,,,,,,,,,,,
django,4345,closed,reopened,2015-03-24 22:35:02,1437.65,0,2,0,,,,,,,,,,,,,,,,,,
django,4345,closed,1,2015-03-17 15:18:29,545.25,,1,,"b""b' @claudep", are you okay to proceed with this? If so," could you review?'""",,,,,,,,,,,,,,,
django,4345,closed,2,2015-03-17 15:18:29,351.47,,1,,"b""b' Tim", the patch looks good. My only reluctance currently is very selfish! My main dev system is still on Debian stable where 1.5 is the installed Postgis version. The next stable is not far away, but meanwhile I would be unable to work on GIS," unless I setup external repositories or docker-style configs (as I need to keep 1.5 to match some production installs).'""",,,,,,,,,,,,,,
django,4345,closed,3,2015-03-17 15:18:29,321.33,,,1,"b'b"" As you are the main contributor to GIS these days"," that\'s a good reason for me. I\'ll see if I can use this as motivation to put something together with docker based on our Jenkins playbooks to ease testing.""'",,,,,,,,,,,,,,,,
django,4345,closed,4,2015-03-17 15:18:29,204.32,,1,,"b""b' Feel free to rebase and commit this at your convenience.'""",,,,,,,,,,,,,,,,,
django,4345,closed,closed,2015-04-25 17:05:53,1110.85,0,5,1,,,,,,,,,,,,,,,,,,
django,4345,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,
django,4347,closed,opened,2015-03-18 20:44:57,,,,,,,,,,,,,,,,,,,,,,
django,4347,closed,title,2015-03-18 20:44:57,00:00,,1,,"b'b"" Refs #24469 -Revisit strategy of escaping Django\'s form elements in non-Django forms""'",,,,,,,,,,,,,,,,,
django,4347,closed,body,2015-03-18 20:44:57,00:00,,1,,"b""b' For more information see url '""",,,,,,,,,,,,,,,,,
django,4347,closed,1,2015-03-18 20:44:57,1400.53,,1,,"b'b"" Shouldn\'t we also have tests for each of the decorated classes?""'",,,,,,,,,,,,,,,,,
django,4347,closed,2,2015-03-18 20:44:57,9.05,,1,,"b""b' There are test for Media", Form and BoundField," should I also add test for the rest?'""",,,,,,,,,,,,,,,
django,4347,closed,3,2015-03-18 20:44:57,2.25,,1,,"b""b' Yes"," if the classes need to be decorated it seems we should have to verification of that.'""",,,,,,,,,,,,,,,,
django,4347,closed,4,2015-03-18 20:44:57,35.02,,1,,"b'b"" Where should I put them? In like the test for Media"," Form and BoundField or in their own module\'s tests?""'",,,,,,,,,,,,,,,,
django,4347,closed,closed,2015-03-20 20:51:48,6.85,0,6,0,,,,,,,,,,,,,,,,,,
django,4347,closed,reopened,2015-03-20 20:51:52,0.07,0,6,0,,,,,,,,,,,,,,,,,,
django,4347,closed,5,2015-03-18 20:44:57,26.38,,1,,"b'b"" Seems better in their own module as it\'s not really testing the template backends.""'",,,,,,,,,,,,,,,,,
django,4347,closed,6,2015-03-18 20:44:57,84.87,,1,,"b""b' Added the tests and fixed errors in docs.'""",,,,,,,,,,,,,,,,,
django,4347,closed,7,2015-03-18 20:44:57,1411.92,,1,,"b""b' Squashing commits as suggested on the ticket might fix Jenkins checkout issues.'""",,,,,,,,,,,,,,,,,
django,4347,closed,8,2015-03-18 20:44:57,835.57,,1,,"b""b' The last commit can be squashed if everything is ok.Just wanted the changes to be visible.'""",,,,,,,,,,,,,,,,,
django,4347,closed,9,2015-03-18 20:44:57,697.53,,,1,"b""b' merged in 1f2abf784a9fe550959de242d91963b2ad6f7e9c"," thanks!'""",,,,,,,,,,,,,,,,
django,4347,closed,closed,2015-03-27 23:48:04,176.2,0,10,1,,,,,,,,,,,,,,,,,,
django,4347,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,
django,4405,closed,opened,2015-03-28 19:23:18,,,,,,,,,,,,,,,,,,,,,,
django,4405,closed,title,2015-03-28 19:23:18,00:00,,1,,"b""b' Fixed #24100 -Dispatched migration plan"," state and loader to post_migrate signal'""",,,,,,,,,,,,,,,,
django,4405,closed,body,2015-03-28 19:23:18,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,4405,closed,1,2015-03-28 19:23:18,10.65,,1,,"b""b' I guess this will also require documentation and tests.'""",,,,,,,,,,,,,,,,,
django,4405,closed,2,2015-03-28 19:23:18,1242.77,,1,,"b'b"" Please reopen when it\'s ready for review.""'",,,,,,,,,,,,,,,,,
django,4405,closed,closed,2015-07-03 16:16:43,1253.42,0,4,0,,,,,,,,,,,,,,,,,,
django,4405,closed,reopened,2015-08-24 10:59:26,1122.72,0,4,0,,,,,,,,,,,,,,,,,,
django,4405,closed,3,2015-03-28 19:23:18,858.82,1,,,"b""b' @MarkusH", do you mind if I add the required tests and release notes to complete the patch? What do you think about also dispatching the  , and in  ? I know the main purpose of this patch is to deal with the mess but I can think of a couple of use for the provided in  . Also," I remember a discussion about adding a signal that would be fired after each is applied. Does it ring a bell?'""",,,,,,,,,,,,,,
django,4405,closed,4,2015-03-28 19:23:18,187.57,,1,,"b'b"" Feel free to go ahead. The only thing I don\'t really like yet is to expose (and hence  ) as a public API. I have too many ideas I want to go ahead with soon that might need some refactoring in that area.""'",,,,,,,,,,,,,,,,,
django,4405,closed,5,2015-03-28 19:23:18,483.25,,1,,"b""b' I think I could submit a reasonable fix for the content type rename issue without exposing the ( ). What I have in mind is hooking to the signal and insert a operation after each operation.'""",,,,,,,,,,,,,,,,,
django,4405,closed,6,2015-03-28 19:23:18,449.77,,1,,"b""b' Superseded by #5835'""",,,,,,,,,,,,,,,,,
django,4405,closed,closed,2015-12-18 01:16:07,856.68,1,7,0,,,,,,,,,,,,,,,,,,
django,4405,closed,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,
django,4423,closed,opened,2015-04-01 11:41:07,,,,,,,,,,,,,,,,,,,,,,
django,4423,closed,title,2015-04-01 11:41:07,00:00,1,,,"b""b' Refs #24215 -Improved error message for unhandled lazy ops.'""",,,,,,,,,,,,,,,,,
django,4423,closed,body,2015-04-01 11:41:07,00:00,1,,,"b""b' Before #4130", the condition in where lazy field operations were pending after all models loaded gave an error message which listed the field pointing at the missing model. Due to the refactor that introspection into the lazy operation was lost, and the error message was simplified to simply show the name of the missing model. This restores the more informative error message, and lists all missing models and related fields," not just the first encountered.'""",,,,,,,,,,,,,
django,4423,closed,1,2015-04-01 11:41:07,138.52,,,1,"b""b' Ok"," made those changes and fixed the tests in Python 3. Thanks for your feedback!'""",,,,,,,,,,,,,,,,
django,4423,closed,closed,2015-04-01 15:24:08,223.02,2,0,1,,,,,,,,,,,,,,,,,,
django,4423,closed,reopened,2015-04-01 15:31:58,7.83,2,0,1,,,,,,,,,,,,,,,,,,
django,4423,closed,2,2015-04-01 11:41:07,13.55,,1,,"b""b' Done.'""",,,,,,,,,,,,,,,,,
django,4423,closed,3,2015-04-01 11:41:07,436.6,,1,,"b""b' In this still work in progress?'""",,,,,,,,,,,,,,,,,
django,4423,closed,4,2015-04-01 11:41:07,334.6,,1,,"b""b' IIRC", I marked this as WIP because Markus was working on something related," which meant that this might have to change. @MarkusH can you remember what the plan was here?'""",,,,,,,,,,,,,,,
django,4423,closed,5,2015-04-01 11:41:07,595.77,,1,,"b'b"" Markus"," still waiting for your feedback. Seems like it would be nice to have a decision for 1.9 so we don\'t have a regression in the error message.""'",,,,,,,,,,,,,,,,
django,4423,closed,6,2015-04-01 11:41:07,559.78,,1,,"b'b"" I honestly don\'t remember what I might have been working on. I\'d say", get it in and if my code -whatever it\'s doing -breaks," I got to fix my stuff.""'",,,,,,,,,,,,,,,
django,4423,closed,7,2015-04-01 11:41:07,133.4,,,1,"b""b' merged in 25c157e4ccc27702883b0c3a53e0e9b44e19757d"," thanks!'""",,,,,,,,,,,,,,,,
django,4423,closed,closed,2015-09-08 00:33:20,541.37,2,5,2,,,,,,,,,,,,,,,,,,
django,4423,closed,8,2015-04-01 11:41:07,1063.47,,1,,"b""b' Alex"," the new test seems to fail on Python 3.5. Do you have a chance to take a look?  '""",,,,,,,,,,,,,,,,
django,4423,closed,9,2015-04-01 11:41:07,1098.42,,1,,"b'b"" Bisected the Python 3.5 failure to url is returning instead of so raise  . I\'m not sure if this is a regression in Python or something we need to fix in Django.""'",,,,,,,,,,,,,,,,,
django,4423,closed,10,2015-04-01 11:41:07,1104.83,,,1,"b""b' Interesting. Maybe we could explicitly annotate the field name when creating the lazy operation and avoid introspection.'""",,,,,,,,,,,,,,,,,
django,4423,closed,11,2015-04-01 11:41:07,1317.67,,1,,"b""b' In case we construct nested partials", this is a regression in Python, IMO. Furthermore," url  seems to lack a check that is a partial type.'""",,,,,,,,,,,,,,
django,4423,closed,12,2015-04-01 11:41:07,1436.88,,1,,"b'b"" Yes we do construct nested partials. I\'ll try to better understand the issue tomorrow unless you can create an issue in the Python tracker to explain it.""'",,,,,,,,,,,,,,,,,
django,4423,closed,13,2015-04-01 11:41:07,64.22,,1,,"b'b"" I opened a ticket on Python\'s tracker: url ""'",,,,,,,,,,,,,,,,,
django,4423,closed,14,2015-04-01 11:41:07,788.73,,1,,"b'b"" Seems like the Python ticket indicates we shouldn\'t rely on the behavior of Python < 3.5. Collin"," does url  implement what you had in mind?""'",,,,,,,,,,,,,,,,
django,4423,closed,15,2015-04-01 11:41:07,865.2,,1,,"b""b' Yes. I think so.'""",,,,,,,,,,,,,,,,,
django,4423,closed,-,-,-,2,12,3,,,,,,,,,,,,,,,,,,
django,4619,closed,opened,2015-05-07 03:44:21,,,,,,,,,,,,,,,,,,,,,,
django,4619,closed,title,2015-05-07 03:44:21,00:00,,1,,"b""b' Changes to  '""",,,,,,,,,,,,,,,,,
django,4619,closed,body,2015-05-07 03:44:21,00:00,,1,,"b""b' Series of grammatical changes to  for your review and consideration.'""",,,,,,,,,,,,,,,,,
django,4619,closed,1,2015-05-07 03:44:21,590.4,,,1,b'b\' Please build the documentation and verify there aren\\\'t any errors," or check the ""Details"" link next to the docs pull request builder and fix any errors reported there. Thanks.\''",,,,,,,,,,,,,,,,
django,4619,closed,2,2015-05-07 03:44:21,1394.82,,1,,"b""b' Could you add a commit to fix my suggestions?'""",,,,,,,,,,,,,,,,,
django,4619,closed,closed,2015-05-15 21:40:25,1076.07,0,3,1,,,,,,,,,,,,,,,,,,
django,4619,closed,reopened,2015-05-15 21:49:29,9.07,0,3,1,,,,,,,,,,,,,,,,,,
django,4619,closed,3,2015-05-07 03:44:21,591.45,,1,,"b'b"" Here\'s a reference for working with Git that might help. You need to rebase your branch", squash commits," and remove the unrelated commit about sessions. Let me know if you need any advice on this.url ""'",,,,,,,,,,,,,,,
django,4619,closed,closed,2015-05-20 05:51:20,481.85,0,4,1,,,,,,,,,,,,,,,,,,
django,4619,closed,4,2015-05-07 03:44:21,1287.03,,,1,"b'b"" I can update this if you can\'t"," just please let me know instead of closing the PR without comment. Thanks!""'",,,,,,,,,,,,,,,,
django,4619,closed,5,2015-05-07 03:44:21,1292.48,,,1,"b""b' Thank you"," please do. My only version is a forked version online (I did not start by forking a version over to my gitHub for Mac) and I cannot rebase or make other changes. Appreciate all your help. Clint '""",,,,,,,,,,,,,,,,
django,4619,closed,6,2015-05-07 03:44:21,40.22,,1,,"b""b' merged in 99ec80f84a826b68cb7c09c662e411314f7c9b8c and 5edf25bdddab24966d8597d17d841cb9c05274c9.'""",,,,,,,,,,,,,,,,,
django,4619,closed,-,-,-,0,5,3,,,,,,,,,,,,,,,,,,
django,4783,closed,opened,2015-06-04 21:16:13,,,,,,,,,,,,,,,,,,,,,,
django,4783,closed,title,2015-06-04 21:16:13,00:00,,1,,"b""b' Fixed #13910 -Added generator based rendering (streaming) of templates and supporting views'""",,,,,,,,,,,,,,,,,
django,4783,closed,body,2015-06-04 21:16:13,00:00,,1,,"b""b' This is a port of url  url  to master. What has been done:Added stream method to Template and Node classesAdded stream function to Added stream_to_response shortcut", similar to render_to_responseAdded stream shortcut," similar to renderAdded stream functionality to defaulttags that would benefit from itAdded StreamingTemplateResponse and SimpleStreamingTemplateResponse to complement the existing non-streaming template response classesAdded generic StreamingTemplateViewTestsDocumentations'""",,,,,,,,,,,,,,,
django,4783,closed,1,2015-06-04 21:16:13,36.45,,,1,"b'b"" This was something I was thinking of looking at for a while now", as I\'ve had to work around it for our project MapIt as follows: url  I\'d be happy to help out if that\'s useful. At least," I\'ve made the fixes needed for flake8 to pass in url ""'",,,,,,,,,,,,,,,
django,4783,closed,2,2015-06-04 21:16:13,610.82,,,1,"b""b' Thanks for the fixes. If you want to do a specific part"," you can find me on irc so we can coordinate. You can still do the documentation and unit tests if you want as I will do it last.'""",,,,,,,,,,,,,,,,
django,4783,closed,3,2015-06-04 21:16:13,728.87,,1,,"b'b"" I\'ve added some docs for the functions you\'ve already done. Do the shortcuts and loader\'s stream need to return  s not  s?""'",,,,,,,,,,,,,,,,,
django,4783,closed,4,2015-06-04 21:16:13,933.53,,,1,"b""b' Yes you are right about  "," thanks for the review. Where did you add the docs so I can merge it in my branch ?'""",,,,,,,,,,,,,,,,
django,4783,closed,5,2015-06-04 21:16:13,348.88,,1,,"b'b"" I\'ve put it on the url  branch of my fork"," hope that\'s helpful.""'",,,,,,,,,,,,,,,,
django,4783,closed,6,2015-06-04 21:16:13,62.52,,,1,"b""b' Thanks"," added it.'""",,,,,,,,,,,,,,,,
django,4783,closed,7,2015-06-04 21:16:13,1155.7,,1,,"b""b' Is this ready for review? (if so"," please update the flags on the Trac ticket)'""",,,,,,,,,,,,,,,,
django,4783,closed,8,2015-06-04 21:16:13,48.22,,1,,"b'b"" There are still some documentations and unit tests to add. I\'ll update the Track ticket as soon as it will be ready.""'",,,,,,,,,,,,,,,,,
django,4783,closed,9,2015-06-04 21:16:13,287.87,,1,,"b'b"" Is the Nodelist class tested somewhere ? I can\'t find it.""'",,,,,,,,,,,,,,,,,
django,4783,closed,10,2015-06-04 21:16:13,4.52,,1,,"b""b' template_?'""",,,,,,,,,,,,,,,,,
django,4783,closed,11,2015-06-04 21:16:13,37.43,,1,,"b'b"" But only the method is tested"," I\'m looking for the rendering part. Is it omitted because it is already tested by the Template rendering testing (and thus I shouldn\'t have to test the streaming of that part too) ?""'",,,,,,,,,,,,,,,,
django,4783,closed,12,2015-06-04 21:16:13,9.95,,1,,"b'b"" I think that seems likely (though I\'m not intimately familiar with that code myself).""'",,,,,,,,,,,,,,,,,
django,4783,closed,13,2015-06-04 21:16:13,30.6,,1,,"b'b"" It should be ready for reviewing then. I\'ll squashed the commits later.""'",,,,,,,,,,,,,,,,,
django,4783,closed,14,2015-06-04 21:16:13,1322.2,,1,,"b""b' Squashed'""",,,,,,,,,,,,,,,,,
django,4783,closed,15,2015-06-04 21:16:13,913.33,,,1,"b""b' Anyone interested in reviewing this ? :smiley: '""",,,,,,,,,,,,,,,,,
django,4783,closed,16,2015-06-04 21:16:13,284.15,,,1,"b""b' @Gagaro Thanks for being patient. I can review this"," but I may not get a chance until this weekend.'""",,,,,,,,,,,,,,,,
django,4783,closed,17,2015-06-04 21:16:13,8.35,,,1,"b""b' No problem"," I just want to be sure that this pull request dies like the last two. Thanks for taking the time to review it.'""",,,,,,,,,,,,,,,,
django,4783,closed,18,2015-06-04 21:16:13,120.27,,1,,"b""b' some cosmetic edits: url '""",,,,,,,,,,,,,,,,,
django,4783,closed,19,2015-06-04 21:16:13,201.38,,,1,"b'b\' This is looking good. Some more edits: url Please uncheck ""Patch needs improvement"" on the ticket once you update it and hopefully we can get some other reviews.\''",,,,,,,,,,,,,,,,,
django,4783,closed,20,2015-06-04 21:16:13,1.3,,,1,"b""b' Thanks for the  @timgraham! :+1: '""",,,,,,,,,,,,,,,,,
django,4783,closed,21,2015-06-04 21:16:13,689.33,,1,,"b'b"" Anyone willing to do another review ? (I noticed the merge conflict"," I\'ll fix this asap).""'",,,,,,,,,,,,,,,,
django,4783,closed,22,2015-06-04 21:16:13,869.22,1,,,"b""b' Sorry for the delay and thanks for your patience. I guess Preston has been busy", on vacation, or this fell of his radar. I posted to the [django-developers mailing list]url  to ask for a high level review. I do expect to merge this for 1.9," barring something unexpected. The feature freeze is September 21.'""",,,,,,,,,,,,,,
django,4783,closed,23,2015-06-04 21:16:13,334.95,,,1,"b'b"" Over all I think this API looks good. I\'ll take a closer look at the tests tomorrow.""'",,,,,,,,,,,,,,,,,
django,4783,closed,24,2015-06-04 21:16:13,222.6,,,1,"b'b"" Thanks for the bump and the review"," I\'ll take a look now and work on it asap.""'",,,,,,,,,,,,,,,,
django,4783,closed,25,2015-06-04 21:16:13,1004.72,,1,,"b""b' The Python 3.3+ construct would really alleviate this patch :)'""",,,,,,,,,,,,,,,,,
django,4783,closed,26,2015-06-04 21:16:13,1016.35,,1,,"b""b' For those who are monitoring this PR but not the django-developers mailing-list"," I just posted a review.'""",,,,,,,,,,,,,,,,
django,4783,closed,27,2015-06-04 21:16:13,1210.77,,1,,"b""b' Link to the mailing list thread: url '""",,,,,,,,,,,,,,,,,
django,4783,closed,28,2015-06-04 21:16:13,1083.47,1,,,"b'b"" Sorry for the delay"," I went on holidays and expected to have internet but hadn\'t.. I\'ll answer the question in the mailing list.""'",,,,,,,,,,,,,,,,
django,4783,closed,29,2015-06-04 21:16:13,40.65,,1,,"b'b"" Hi", just a quick heads up," I had way less time than I expected. I just rebased the PR for now. I\'m going to summarize what has been said on the mailing list:Refactoring all stream methods to instead be called from render(stream=True)Removing StreamingTemplateView (and documenting it instead ?)Benchmarking to have a better idea of how this affects the performances""'",,,,,,,,,,,,,,,
django,4783,closed,30,2015-06-04 21:16:13,498.88,1,,,"b'b"" Please see the last commit to see the refactoring. I didn\'t remove the method on Node implementations for two reasons:Not all of the classes will need it"," and having to handle it for every implementation will only be a pain for the user.It would break every custom implementation already existing (having to handle the argument). What do you think about it ?""'",,,,,,,,,,,,,,,,
django,4783,closed,31,2015-06-04 21:16:13,1060.73,,,1,"b""b' Once again"," thanks for the reviews :+1: .'""",,,,,,,,,,,,,,,,
django,4783,closed,32,2015-06-04 21:16:13,130.08,,1,,"b""b' I started to do some benchmarking with ApacheBench. It seems to be fine for general pages but the performance are really bad on a big template"," even with stream disabled: url '""",,,,,,,,,,,,,,,,
django,4783,closed,33,2015-06-04 21:16:13,401.3,1,,,"b""b' This is still stuck on the performance issues"," correct?'""",,,,,,,,,,,,,,,,
django,4783,closed,34,2015-06-04 21:16:13,755.28,,1,,"b'b"" Yes. The issue is that all methods now use join() with a generator to create non-streaming content. I\'m not sure how to improve perfomances without having to double everything. Also I didn\'t have much time to think about it since then. If someone has an idea on how to fix this"," please try it or let us know here.""'",,,,,,,,,,,,,,,,
django,4783,closed,35,2015-06-04 21:16:13,695.67,,,1,"b'b"" I\'ll close this for new. We can reopen it (or a new PR) if you return to it. Thanks.""'",,,,,,,,,,,,,,,,,
django,4783,closed,closed,2016-06-21 19:16:33,1320.33,4,20,13,,,,,,,,,,,,,,,,,,
django,4783,closed,36,2015-06-04 21:16:13,303.18,,1,,"b""b' In python 3 using work wonders: [PR]url  STREAMING BRANCH : ORIGINAL:  '""",,,,,,,,,,,,,,,,,
django,4783,closed,37,2015-06-04 21:16:13,604.67,,,1,"b""b' Django is Python 3 only now", so that part is not a concern :) Why did you remove mark_safe though; render() uses it, so stream presumably should as well (and would that account for the speed difference). I imagine given the time elapsed," this would need reimplementing on top of current master.'""",,,,,,,,,,,,,,
django,4783,closed,38,2015-06-04 21:16:13,266.17,,1,,"b""b' I only removed from being applied to chunks"," it is still applied to  . There is a performance hit for applying it to each chunk: STREAMING  w   I guess we could pass a flag to apply to chunks when  '""",,,,,,,,,,,,,,,,
django,4783,closed,39,2015-06-04 21:16:13,2.73,,,1,"b""b' Should we reopen this PR? Would be great to have this feature.'""",,,,,,,,,,,,,,,,,
django,4783,closed,reopened,2019-03-31 15:29:21,1212.8,4,22,15,,,,,,,,,,,,,,,,,,
django,4783,closed,40,2015-06-04 21:16:13,239.07,,1,,"b""b' @Gagaro shall we?'""",,,,,,,,,,,,,,,,,
django,4783,closed,41,2015-06-04 21:16:13,1434.92,,,1,"b'b"" Hi @pglotov "," thanks for taking a look at this!  It looks very promising indeed. I\'ll have to take a proper look tomorrow because it\'s been a very long time and I don\'t remember everything.""'",,,,,,,,,,,,,,,,
django,4783,closed,42,2015-06-04 21:16:13,402.77,,1,,"b""b' we can close this pr and follow the new rebased one.'""",,,,,,,,,,,,,,,,,
django,4783,closed,43,2015-06-04 21:16:13,324.4,,1,,"b""b' Updated in #11157.'""",,,,,,,,,,,,,,,,,
django,4783,closed,closed,2019-04-02 06:54:27,925.1,4,25,16,,,,,,,,,,,,,,,,,,
django,4783,closed,-,-,-,4,25,16,,,,,,,,,,,,,,,,,,
django,4792,closed,opened,2015-06-05 09:36:56,,,,,,,,,,,,,,,,,,,,,,
django,4792,closed,title,2015-06-05 09:36:56,00:00,,1,,"b""b' Fixed #22571 -Added clarification about auto_now_add=True'""",,,,,,,,,,,,,,,,,
django,4792,closed,body,2015-06-05 09:36:56,00:00,,1,,"b""b' Related to: url '""",,,,,,,,,,,,,,,,,
django,4792,closed,closed,2015-06-05 10:11:17,34.35,0,2,0,,,,,,,,,,,,,,,,,,
django,4792,closed,reopened,2015-06-05 10:14:43,3.43,0,2,0,,,,,,,,,,,,,,,,,,
django,4792,closed,1,2015-06-05 09:36:56,38.22,,1,,"b""b' I think I accidentally closed the PR... Reopened again :)'""",,,,,,,,,,,,,,,,,
django,4792,closed,2,2015-06-05 09:36:56,222.03,,,1,"b""b' merged in cbe4efcbc13ad402bf1f1a94b02a8ec93f20327d"," thanks!'""",,,,,,,,,,,,,,,,
django,4792,closed,closed,2015-06-05 13:57:11,222.47,0,3,1,,,,,,,,,,,,,,,,,,
django,4792,closed,3,2015-06-05 09:36:56,20.33,,,1,"b""b' yuhu!! \\\\o/'""",,,,,,,,,,,,,,,,,
django,4792,closed,-,-,-,0,3,2,,,,,,,,,,,,,,,,,,
django,4815,closed,opened,2015-06-05 18:58:55,,,,,,,,,,,,,,,,,,,,,,
django,4815,closed,title,2015-06-05 18:58:55,00:00,,1,,"b""b' Fixed #24938 -add PostgreSQL trigram support.'""",,,,,,,,,,,,,,,,,
django,4815,closed,body,2015-06-05 18:58:55,00:00,,,1,"b'b"" Discussed briefly with @mjtamlyn at DjangoCon Europe. Not sure if it\'s useful or important enough to be in core"," but thought I\'d try coding it anyway :)""'",,,,,,,,,,,,,,,,
django,4815,closed,1,2015-06-05 18:58:55,1374.05,,,1,"b'b"" Thanks! After updating the docs as suggested", and after some more reading of the Postgres , I thought that I should actually implement the operator by preference, as that allows the user to specify their own threshold, can use an index like  , and can be used in the to return the distance also. I have implemented it as both a lookup and a function; I have left the existing code for lookup and Similarity function, but have only documented the function and lookup at present, as if it\'s agreed I think they might be all that is necessary \\xe2\\x80\\x93 they can do everything  /  can do," if I\'ve understood it correctly.""'",,,,,,,,,
django,4815,closed,2,2015-06-05 18:58:55,395.97,,1,,"b'b"" As noted in #4825"," I guess we\'ll close this for now until Marc\'s work on full-text search is further along.""'",,,,,,,,,,,,,,,,
django,4815,closed,closed,2015-09-10 00:28:56,330.02,0,2,2,,,,,,,,,,,,,,,,,,
django,4815,closed,3,2015-06-05 18:58:55,836.4,,1,,"b""b' As FTS support is now merged this should be re-visited.'""",,,,,,,,,,,,,,,,,
django,4815,closed,reopened,2016-04-27 14:25:20,836.4,0,3,2,,,,,,,,,,,,,,,,,,
django,4815,closed,4,2015-06-05 18:58:55,375.08,,1,,"b'b"" @dracos", do you want to update sometime soon? If not," we\'ll close the PR and let somebody else take over.""'",,,,,,,,,,,,,,,
django,4815,closed,5,2015-06-05 18:58:55,977.33,,,1,"b'b"" Rebased and tests all pass (just fixed the isort hopefully", whoops). I\'ve kept things in the same locations they were before, happy for things to be moved if they\'d be preferably under \'search\' or somewhere else," whatever :)""'",,,,,,,,,,,,,,
django,4815,closed,6,2015-06-05 18:58:55,176.77,,1,,"b'b""   needs documenting (and if we remove that needs undocumenting). Trigrams are also now mentioned in the [search topic doc]url  so we can update that example and refer to the code here. I\'d also suggest moving the functions (but not the lookups) to  .""'",,,,,,,,,,,,,,,,,
django,4815,closed,7,2015-06-05 18:58:55,230.15,,,1,"b""b' Have moved the functions"," thanks. Will await closure of distance discussion before updating search topic doc.'""",,,,,,,,,,,,,,,,
django,4815,closed,8,2015-06-05 18:58:55,1283.38,,1,,"b'b"" Okay"," I\'ve removed the lookup and documented the function and lookup.""'",,,,,,,,,,,,,,,,
django,4815,closed,9,2015-06-05 18:58:55,894.5,,,1,"b'b"" I\'m happy with the structure and design of the code. @timgraham Can you work your magic with any docs tweaks and then I think this is good to go.""'",,,,,,,,,,,,,,,,,
django,4815,closed,10,2015-06-05 18:58:55,20.47,,1,,"b'b"" Just as a side note about filter() syntax the best syntax I have seen so far is something along the lines of .filter(F(\'foo\').trigram_distance(\'bar\').gt(0.7)) (or better yet"," filter(F(\'foo\').trigram_distance(\'bar\') ""'",,,,,,,,,,,,,,,,
django,4815,closed,11,2015-06-05 18:58:55,497.95,,,1,"b""b' merged in 1962a96a30e02de78a674a2e02979c00cc55655b"," thanks!'""",,,,,,,,,,,,,,,,
django,4815,closed,closed,2016-05-13 16:40:58,135.63,0,7,6,,,,,,,,,,,,,,,,,,
django,4815,closed,-,-,-,0,7,6,,,,,,,,,,,,,,,,,,
django,4825,closed,opened,2015-06-06 19:32:00,,,,,,,,,,,,,,,,,,,,,,
django,4825,closed,title,2015-06-06 19:32:00,00:00,,1,,"b""b' Fixed #24945 -PostgreSQL fuzzystrmatch support.'""",,,,,,,,,,,,,,,,,
django,4825,closed,body,2015-06-06 19:32:00,00:00,,1,,"b""b' Just as I was in the area adding the trigram code"," I thought I might as well take a look at this very similar functionality. I use Double Metaphone on my (Django powered) site url  so that e.g. url  resolves to Katy Stephens.'""",,,,,,,,,,,,,,,,
django,4825,closed,1,2015-06-06 19:32:00,804.73,,1,,"b'b"" Could you add Levenhstein to  (you\'re probably also asked to rebase the commits into a single commit when you\'ve done that) ? That should fix the failing test (docs).""'",,,,,,,,,,,,,,,,,
django,4825,closed,2,2015-06-06 19:32:00,13.03,,,1,"b""b' @atombrella Thanks :)'""",,,,,,,,,,,,,,,,,
django,4825,closed,3,2015-06-06 19:32:00,45.03,,1,,"b""b' /cc @mjtamlyn (Might be overlapping with a bit of work you are doing currently)'""",,,,,,,,,,,,,,,,,
django,4825,closed,4,2015-06-06 19:32:00,9.92,,,1,b'b\' Hmmm there\\\'s some decisions to be made here between the overlap of trigrams, fuzzy string match and full text search. Each have their own uses and they\\\'re probably all useful in their own way. If it\\\'s ok with you @dracos I\\\'d like to not merge either this or #4815 at the moment when I have #4726 a little more feature complete (it\\\'s getting there!) then I can start writing documentation which combines the collection of these features together, integrating in your code as well. It may be we want to lay things out slightly differently," with these functions appearing in as well. I\\\'d also like to get some guidance from some ""experts""", probably via a post on django dev or similar as to the relative benefits and problems of these different approaches.\'',,,,,,,,,,,,,
django,4825,closed,5,2015-06-06 19:32:00,23.48,,,1,"b'b"" Yes", of course; I only really did this one as I had done #4815 and it seemed very similar (as you say) and was already in my head. I\'ll be sticking with an for now anyway," got old versions to support :)""'",,,,,,,,,,,,,,,
django,4825,closed,6,2015-06-06 19:32:00,839.78,,1,,"b'b"" I guess we\'ll close this for now until Marc\'s work is further along.""'",,,,,,,,,,,,,,,,,
django,4825,closed,closed,2015-09-10 00:27:59,295.98,0,5,3,,,,,,,,,,,,,,,,,,
django,4825,closed,7,2015-06-06 19:32:00,828.38,,1,,"b'b"" Shouldn\'t this PR be revived as #4726 was closed? This PR is very important. Many people just have to install a apache lucene based solution because this is not available.""'",,,,,,,,,,,,,,,,,
django,4825,closed,8,2015-06-06 19:32:00,6.7,,1,,"b""b' I also believe this should be re-opened as FTS search was merged without _fuzzy_ support. This will need to be rebased and the release note should be adjusted for 1.10.'""",,,,,,,,,,,,,,,,,
django,4825,closed,reopened,2016-04-27 14:23:16,835.28,0,7,3,,,,,,,,,,,,,,,,,,
django,4825,closed,9,2015-06-06 19:32:00,15.68,,1,,"b'b\' @imaia This PR is hardly ""very"" important -if you want this feature", feel free to improve this PR to a state where it is mergeable and cleaned up.\'',,,,,,,,,,,,,,,,
django,4825,closed,10,2015-06-06 19:32:00,137.23,,,1,"b'b"" @apollo13 because it is a feature? Although", nice suggestion. I\'ll probably be able to do it next week," if things go well for me. @charettes fair enough. ""'",,,,,,,,,,,,,,,
django,4825,closed,11,2015-06-06 19:32:00,1264.6,,1,,"b""b' Any suggestion on how to handle test only models for fuzzystrmatch? Django 1.9 seems to not be handling the idea very well. '""",,,,,,,,,,,,,,,,,
django,4825,closed,12,2015-06-06 19:32:00,24.75,,1,,"b'b"" If you\'re developing an updated patch", then please be more specific about what problem you\'re running into, even sending a work in progress PR would be okay. This won\'t be backported to 1.9. If you\'re asking some other usage question," then please use our support channels like the django-users mailing list.""'",,,,,,,,,,,,,,
django,4825,closed,13,2015-06-06 19:32:00,170.35,,1,,"b""b' This should be rebased and updated now.'""",,,,,,,,,,,,,,,,,
django,4825,closed,14,2015-06-06 19:32:00,19.0,,,1,b'b\' Nice! @dracos what about adding LEVENSHTEIN_LESS_EQUAL support too," as it is a "" accelerated version of levenshtein function for low values of distance""? url \''",,,,,,,,,,,,,,,,
django,4825,closed,15,2015-06-06 19:32:00,188.57,,1,,"b'b"" I\'ve added it in a second commit"," if that\'s considered okay.""'",,,,,,,,,,,,,,,,
django,4825,closed,16,2015-06-06 19:32:00,685.28,,,1,"b'b"" So"," I\'m less confident about the inclusion of these than I am with trigrams. I suppose what I\'d really like to see is some discussion or examples of when these features are useful. Some questions which spring to mind:How do I choose between Trigram and Levenshtein?How do I choose between the 3 soundy matches?How do the sound matches work in not-english?""'",,,,,,,,,,,,,,,,
django,4825,closed,17,2015-06-06 19:32:00,238.73,,,1,b'b\' Yeah, it\\\'s tricky, I don\\\'t know (I\\\'m sure there must be papers). The example I gave in the PR above is a Django project using double metaphone for when people search for names; I find it really useful. I think this is a good case because names are a good candidate for a \\\'sounds like\\\' fuzzy matching algorithm. I\\\'d say you could only have double metaphone for a soundy algorithm and not bother with soundex (which is definitely rubbish) or metaphone, but OTOH metaphone at least is simpler with only the one output (I hadn\\\'t yet implemented the dmetaphone_alt function in this PR, but it is used on my site). Soundex and Metaphone are definitely English only; double metaphone takes account of other language origins with its alternate response, but still biased towards US pronunciation. As for , Levenshtein seems better suited to spot occasional , whereas trigram seems more suited to a wider \\\'similarity\\\' between two pieces of text," but I can\\\'t easily think of ""in this scenario"," use this one"" type response. Trigram would work better if you had multiple words where their order could differ (but if you didn\\\'t care about the order", you could just sort them first\\xe2\\x80\\xa6). You can\\\'t index levenshtein, as I understand it, which may make a difference; you could use levenshtein to help you  trigram filtered results, perhaps. And of course there are other algorithms not in postgres, e.g. Beider-Morse phonetic matching.\'',,,
django,4825,closed,18,2015-06-06 19:32:00,198.92,1,,,"b""b' I had some personal tryouts with Levenhstein", LevenhsteinLessEqual and Trigram. Within my tests, Trigram went very bad with short words. After some tunning," LevenhsteinLessEqual behaved the best in most scenarios. '""",,,,,,,,,,,,,,
django,4825,closed,19,2015-06-06 19:32:00,193.17,,1,,"b""b' Where do we stand with this issue? Should we pose the remaining questions to the mailing list?'""",,,,,,,,,,,,,,,,,
django,4825,closed,20,2015-06-06 19:32:00,893.82,,1,,b'b\' My instinct is that they are very simple to implement if you want to use them," and that it\\\'s hard to give good reasons as to why you should. I think a ""django-postgres-functions"" third party package could be a good home.\''",,,,,,,,,,,,,,,,
django,4825,closed,closed,2016-07-18 09:33:14,1149.97,1,14,7,,,,,,,,,,,,,,,,,,
django,4825,closed,-,-,-,1,14,7,,,,,,,,,,,,,,,,,,
django,4848,closed,opened,2015-06-11 00:02:23,,,,,,,,,,,,,,,,,,,,,,
django,4848,closed,title,2015-06-11 00:02:23,00:00,,1,,"b""b' [WIP] Fixed #15667 -Added template-based widget rendering.'""",,,,,,,,,,,,,,,,,
django,4848,closed,1,2015-06-11 00:02:23,19.98,,,1,"b'b"" This looks really promising! I didn\'t have time to carefully review all the widget and test changes"," but I reviewed the core API code.""'",,,,,,,,,,,,,,,,
django,4848,closed,2,2015-06-11 00:02:23,501.38,,1,,"b""b' awsome. any plan for jinja2 based rendering?'""",,,,,,,,,,,,,,,,,
django,4848,closed,3,2015-06-11 00:02:23,515.93,,,1,"b'b"" I pushed some updates to the test suite. My first goal to get all the widget tests working again is complete. The old widget tests are doc tests masquerading as unit tests. They include a ton of duplicate testing for unicode handling", attrs overriding, etc. I started to rectify this by splitting tests for each widget into separate test cases and files. These now live in  . There\'s some cleanup to do still, but I think it\'s a big improvement. My second goal to make the rest of work again, at least mostly, is also complete. 90% of the previous test failures were due to an HTML5 attribute being added to  . This breaks hundreds of checks. It would be nice to use HTML5 attributes in the default templates, but for now I\'m going to make the templates mimic existing rendering as much as possible. This will keep the size of this patch from ballooning," as well. :) My next goals are to write tests for the new API changes and to convert the leftover widgets that still use string rendering.""'",,,,,,,,,,
django,4848,closed,4,2015-06-11 00:02:23,1.72,,1,,"b""b' @auvipy jinja2 will be the default renderer. I find this patch to be a bit easier to start with Django templates first"," though.'""",,,,,,,,,,,,,,,,
django,4848,closed,5,2015-06-11 00:02:23,11.48,,,1,"b'b"" Hi Preston"," Great work so far as usual! One question I had is if you considered other template location namespace than  ? I\'m asking because sounds more consistent to me.""'",,,,,,,,,,,,,,,,
django,4848,closed,6,2015-06-11 00:02:23,1.88,,1,,"b""b' This would also allow us to put form rendering (  and friends) templates in  .'""",,,,,,,,,,,,,,,,,
django,4848,closed,7,2015-06-11 00:02:23,19.38,,,1,"b'b"" I think keeping the widget rendering as unchanged as possible in this patch is smart HTML5 required attributes are a good idea IMO", but there\'s a separate ticket for that and it can be a separate commit: url  The widget tests look much improved, but I\'d also argue for keeping those tests as unchanged as possible in this PR (even if they\'re bad) and fix them in a follow-up commit. It\'s much easier to review and verify a big refactor if you can trust the tests to be mostly unchanged and not have to review them carefully too at the same time. Are the test changes necessary to get them passing with the HTML-rendered widgets, or could those test changes possibly be pulled out and moved to a separate follow-up PR? I also slightly prefer over  ," but I don\'t feel strongly. @charettes Great point about converting after this is done. There\'s a ticket for that too: url ""'",,,,,,,,,,,,,
django,4848,closed,8,2015-06-11 00:02:23,10.32,1,,,"b'b"" Regarding the tests", another good option could be to pull out the test changes and commit those first, rather than second, if that\'s easier. Either way, the benefit of splitting the bulk of the test changes from the rendering changes is that we get a clean test run in between them, which goes a long way towards avoiding unexpected and undesired changes in the output. That said, if it\'s really hard to do," it\'s not strictly necessary just means we have to review extra carefully :-)""'",,,,,,,,,,
django,4848,closed,9,2015-06-11 00:02:23,22.95,,,1,"b'b"" @charettes I didn\'t think through the namespace that much. sounds great to me. @carljm Since the most recent implementation of can instantiate a default renderer if none is specified"," the existing tests should be able to pass without any changes. I\'m happy to commit those after the initial patch lands. None of those changes introduce new tests.""'",,,,,,,,,,,,,,,,
django,4848,closed,10,2015-06-11 00:02:23,1311.22,,1,,"b""b' what about dtlform for dtl based renderer and jinjaform?'""",,,,,,,,,,,,,,,,,
django,4848,closed,11,2015-06-11 00:02:23,3.9,,1,,"b'b"" @auvipy The DTL and Jinja templates will be in and top-level directories", as is the normal requirement for separating DTL and Jinja templates in apps in Django 1.8+. These directories aren\'t part of the template path, though, they are a property of each template engine. Within those directories the path to each template should be exactly the same. That way the widget classes (which is where the template path for each widget\'s template is defined) are agnostic to template engine," and your and settings will determine whether the DTL or Jinja template is used.""'",,,,,,,,,,,,,
django,4848,closed,closed,2015-06-12 16:23:03,980.67,1,6,5,,,,,,,,,,,,,,,,,,
django,4848,closed,reopened,2015-06-12 16:23:11,0.13,1,6,5,,,,,,,,,,,,,,,,,,
django,4848,closed,12,2015-06-11 00:02:23,353.2,,1,,"b'b"" It\'s not pushed yet", but I now have most of the widgets updated to use templates. This includes some of the tricky ones, like  . The leftover widgets all use  , which is a really intrusive API. Based on 339c01fb755, at least some people are using it, even though it\'s not documented. Do you think it\'s sufficient to remove if we can maintain at least the documented iterator behavior for and through a deprecation cycle? url  Additionally," I could move the and it\'s widgets to  . This would give projects the option to opt-in to the old behavior.""'",,,,,,,,,,,
django,4848,closed,13,2015-06-11 00:02:23,22.5,1,,,"b'b"" @prestontimmons I don\'t think it\'s feasible to worry about undocumented internal APIs when making a change like this", even if we have some evidence that some people might be using it. If it\'s undocumented, we\'ve made no guarantees about its future. Just get rid of it (probably give it a mention in the release notes, but that\'s all). The documented iteration-over-BoundField behavior, on the other hand, needs to stay, at least for a deprecation path. If the code to support it isn\'t too bad, I don\'t really see why it shouldn\'t stay permanently; it\'s a handy shortcut that in many cases will still be simpler than defining your own full-blown radio-select template. I guess the issue with supporting is that it will mean either duplicating the individual option markup, or using an include inside the options loop of the radio-select etc templates," which could hurt performance?""'",,,,,,,,
django,4848,closed,14,2015-06-11 00:02:23,96.25,,,1,"b'b"" Cool.  :) Iterating over the options is easy. It\'s the method that\'s not. Since this method isn\'t part of  ",  it doesn\'t receive  ,  , or when called in the template using  . worked around this in a convoluted way. The cleanest solution may be to have return instances," or even another class that can render the widget without arguments. I\'ll play around with it some and see what I find.""'",,,,,,,,,,,,,
django,4848,closed,15,2015-06-11 00:02:23,14.08,,1,,"b""b' Now that I take a closer look at it I think it will be easy to do.'""",,,,,,,,,,,,,,,,,
django,4848,closed,16,2015-06-11 00:02:23,1261.15,,1,,"b'b"" There\'s a lot of work left to do", but I have passing with both DTL and Jinja2 now. The tricky part now is finding consistent behavior for the iteration API. Unlike  , isn\'t renderable without extra arguments. In the minimum case, rendering requires and to be passed. To get around that, the existing yields instances. Like  , stores the and from the object. This means it can be rendered without arguments. Unlike  , provides two render methods with different output:Renders the widget input element with a wrapping label element.Renders the widget input element without a label element. The iteration API has further inconsistency in the templates. For instance, can take a argument. This is used for the options. This doesn\'t carry through if the field is iterated since has no access to the argument. Iteration looks only at and  . Further, because there are two render methods, supporting this API requires either two templates for each option class, or an extra context argument like being passed to a single template. The approach I took in the current patch is to:Updated to return instances.Added and methods to for backwards-compatibility.Updated to take an argument.Updated to pass in as   based on whether or is called. Another option is to make return  -like widgets that define and  . Finally, there\'s some inconsistency I don\'t like in the templates. The following templates are mutually exclusive:and  and  and Preferably, the parent widget templates would reuse the iteration API and call  ," but this isn\'t possible if we support the argument to  . Is this a useful feature? It looks like it only exists for use in the test suite. It\'s not documented as far as I can tell.""'",,,,
django,4848,closed,17,2015-06-11 00:02:23,23.2,,,1,"b'b"" Good news. I found a better API I\'m stoked about. returns a element like this: Templates access values from the variable: That means widgets like can easily reuse the same option template used by  . For example: Where is:   yields wrappers around the dictionary that implements  ",  ," and  . I think I can focus on writing tests and documentation now.""'",,,,,,,,,,,,,,,
django,4848,closed,18,2015-06-11 00:02:23,89.48,,1,,"b""b' @timgraham Getting build failures on Python 3.4 in this branch: url  It seems related to using the  context manager in  . Any clue why Jenkins would fail on that? I can remove the usage if necessary.'""",,,,,,,,,,,,,,,,,
django,4848,closed,19,2015-06-11 00:02:23,109.5,,1,,"b""b' Looks like url '""",,,,,,,,,,,,,,,,,
django,4848,closed,20,2015-06-11 00:02:23,181.82,,,1,"b'b"" @timograham Can I get your thoughts on the easiest way to commit the tests in this branch? You\'ll see in that I rewrote the existing tests as individual unit tests. This was primarily as a develpment aid", but it also made it easy to run the tests under both DTL and Jinja2. Further, the old tests are currently intact in this branch, sans ones that covered obsolete private API\'s. I see a few options:Commit the branch with only the old tests in place. This would ensure nothing that worked before is broken. It would only run under Jinja2, which is the default rendering engine, though. The new tests would be added in a separate commit.Use the old tests, but retrofit all the existing test cases to run under both DTL and Jinja2. This could be updating each test case to use a custom subclass. Add the new tests in a separate commit.Commit both the old and new tests, and remove the old tests in a separate commit.Update the existing forms tests to unit tests prior to committing this branch. This would decrease the size of this patch and make it clearer in the commit which tests were specific to the branch. I\'m leaning toward the last option," but I\'m happy to go either way if anyone has better ideas.""'",,,,,,,,,
django,4848,closed,21,2015-06-11 00:02:23,742.43,,1,,"b""b' The last option is what I would do too.'""",,,,,,,,,,,,,,,,,
django,4848,closed,22,2015-06-11 00:02:23,599.98,,1,,"b""b' Added PR #5209 for the test changes.'""",,,,,,,,,,,,,,,,,
django,4848,closed,23,2015-06-11 00:02:23,101.58,,,1,"b'b"" Hi all", I rebased this patch onto master. Tests are passing again. The branch is close to feature complete, but the docs for it are still a big job. For anyone interested, here are the steps I believe are left to be taken: ### TemplatesAdd the comparison operator to the DTL tag -Ticket 26118. (merged in c00ae7f58c34962ed6dbec4eb8aaf747da59ed2f) ### DocsRelease notesTemplate rendering API:  The setting.  The built-in  The public API for custom renderers.  Overriding the renderer per form and at render call time.  Default behavior: Uses Jinja2 if installed, otherwise uses DTL.Default template used for each built-in widgetPublic API for the class with examples of overriding templates and customizing behavior.Public API for the new class?Deprecation notesBackwards-compatible change to choice field rendering implementation -template-wise it works the same as before, but the following classes, which are never officially documented, are removed:      ### BugsThe template renderer needs to import the Jinja2 backend lazily so as not to raise import errors when Jinja2 isn\'t installed. ### Optimizations (optional)The Jinja2 templates could probably be more idiomatic. I got them working," but they\'re mainly copied from the DTL templates.""'",,,,,,,,,
django,4848,closed,24,2015-06-11 00:02:23,837.93,,1,,"b'b"" Rebased PR is url  This branch is on  so anyone can add commits to it. I\'ll make sure all the comments here are addressed before that gets merged (which is probably at least a week away depending on who else pitches in).""'",,,,,,,,,,,,,,,,,
django,4848,closed,closed,2016-04-23 18:15:39,112.47,2,14,9,,,,,,,,,,,,,,,,,,
django,4848,closed,-,-,-,2,14,9,,,,,,,,,,,,,,,,,,
django,4889,closed,opened,2015-06-19 08:16:47,,,,,,,,,,,,,,,,,,,,,,
django,4889,closed,title,2015-06-19 08:16:47,00:00,,1,,"b""b' Fixed #25004 -Updated OpenLayers-based widget to OpenLayers 3'""",,,,,,,,,,,,,,,,,
django,4889,closed,1,2015-06-19 08:16:47,495.32,,1,,"b'b"" What\'s the plan for the old widget? Is it used at all? Should it be deprecated at some point?Add a convenience import for the new widget in  ?Docs in (+ release notes)?What\'s the situation with tests? still references \'url  -is that a candidate for being updated too (now or later)?""'",,,,,,,,,,,,,,,,,
django,4889,closed,2,2015-06-19 08:16:47,186.4,,1,,"b'b"" The old widget is still accurate", especially for those installations that still have OpenLayers 2 custom code.Sure, will do.To do.Bad :-) We\'ll see with the forthcoming JS test infrastructure what\'s will be possible, but map-based tests are generally heavy and network-dependent.Frankly," my plan is to kill GeoModelAdmin (or refactor it seriously). We\'ll see...""'",,,,,,,,,,,,,
django,4889,closed,3,2015-06-19 08:16:47,1040.9,,1,,"b'b"" Mention me when it will be ready to merge. I\'ll draw SVG icons for this.""'",,,,,,,,,,,,,,,,,
django,4889,closed,4,2015-06-19 08:16:47,361.3,,,1,"b""b' Thanks for the offer"," very nice!'""",,,,,,,,,,,,,,,,
django,4889,closed,closed,2015-09-10 00:32:17,975.5,0,4,1,,,,,,,,,,,,,,,,,,
django,4889,closed,reopened,2016-05-06 17:39:08,1026.85,0,4,1,,,,,,,,,,,,,,,,,,
django,4889,closed,5,2015-06-19 08:16:47,3.92,,1,,"b""b' Returned to the patch. This time I think we should simply replace the OpenLayers 2 version by the OpenLayers 3 version. It might be a bit more abrupt"," but OpenLayers 2 is now aging and obsolete.'""",,,,,,,,,,,,,,,,
django,4889,closed,6,2015-06-19 08:16:47,736.87,,1,,"b'b"" I\'m wondering if OpenLayers 3 maps can be tested without a browser context. OL3 tests are based on PhantomJS url ""'",,,,,,,,,,,,,,,,,
django,4889,closed,7,2015-06-19 08:16:47,1349.0,,1,,"b'b"" I\'m guessing there\'s a race condition somewhere in those tests that isn\'t appearing except in the PhantomJS tests. In the browser"," when I click into an individual test and then click the back button on my browser one or more of the gis tests appears to fail. Refreshing the page fixes it.""'",,,,,,,,,,,,,,,,
django,4889,closed,8,2015-06-19 08:16:47,429.62,,1,,"b""b' I pushed a fix for the issue raised by Trey.'""",,,,,,,,,,,,,,,,,
django,4889,closed,9,2015-06-19 08:16:47,1415.77,,1,,"b'b"" I discovered another problem with the default map"," which should be in the 4326/WGS84 projection to not require coordinate transformations. Let\'s not block Django 1.10 because of this.""'",,,,,,,,,,,,,,,,
django,4889,closed,closed,2016-07-15 18:39:58,60.83,0,9,1,,,,,,,,,,,,,,,,,,
django,4889,closed,reopened,2016-12-19 19:00:31,20.55,0,9,1,,,,,,,,,,,,,,,,,,
django,4889,closed,10,2015-06-19 08:16:47,233.82,,1,,"b""b' Tests are OK: url '""",,,,,,,,,,,,,,,,,
django,4889,closed,closed,2017-01-03 09:06:24,845.88,0,10,1,,,,,,,,,,,,,,,,,,
django,4889,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,
django,4911,closed,opened,2015-06-23 06:09:26,,,,,,,,,,,,,,,,,,,,,,
django,4911,closed,title,2015-06-23 06:09:26,00:00,,1,,"b""b' Fixed #25016 -Reallowed non-ASCII values for  on Python 3.'""",,,,,,,,,,,,,,,,,
django,4911,closed,body,2015-06-23 06:09:26,00:00,,1,,"b""b' add tests and implement for [25016]url '""",,,,,,,,,,,,,,,,,
django,4911,closed,1,2015-06-23 06:09:26,143.7,,1,,"b""b' test is fail in python2'""",,,,,,,,,,,,,,,,,
django,4911,closed,closed,2015-06-23 08:33:09,143.72,0,3,0,,,,,,,,,,,,,,,,,,
django,4911,closed,2,2015-06-23 06:09:26,82.07,,1,,"b""b' You can make the test work for py2 also: note that: '""",,,,,,,,,,,,,,,,,
django,4911,closed,reopened,2015-06-23 13:25:06,291.95,0,4,0,,,,,,,,,,,,,,,,,,
django,4911,closed,3,2015-06-23 06:09:26,515.73,,,1,"b'b\' You can squash your commits when making those last few updates. Also uncheck ""Patch needs improvement"" on the ticket. Thanks!\''",,,,,,,,,,,,,,,,,
django,4911,closed,4,2015-06-23 06:09:26,798.33,,1,,"b""b' I already rebased. Rebase reference:[Squash All Commits Related to a Single Issue into a Single Commit]url '""",,,,,,,,,,,,,,,,,
django,4911,closed,5,2015-06-23 06:09:26,281.25,,,1,"b""b' merged in d3e12c901777697b7bf08b25e2dd46f0b951db8c"," thanks!'""",,,,,,,,,,,,,,,,
django,4911,closed,closed,2015-06-26 12:30:31,1385.42,0,5,2,,,,,,,,,,,,,,,,,,
django,4911,closed,6,2015-06-23 06:09:26,39.68,,,1,"b'b"" You\'re welcome. I just love this framework. By the way"," I did  . Then you did and \'commit amend\'. It seems not convenient...""'",,,,,,,,,,,,,,,,
django,4911,closed,7,2015-06-23 06:09:26,43.2,,1,,"b""b' I use the process outlined at url '""",,,,,,,,,,,,,,,,,
django,4911,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,
django,4970,closed,opened,2015-07-09 08:57:52,,,,,,,,,,,,,,,,,,,,,,
django,4970,closed,title,2015-07-09 08:57:52,00:00,,1,,"b""b' Fixed #14286 -Added BigAutoField model field.'""",,,,,,,,,,,,,,,,,
django,4970,closed,body,2015-07-09 08:57:52,00:00,,1,,"b""b' url url '""",,,,,,,,,,,,,,,,,
django,4970,closed,1,2015-07-09 08:57:52,507.2,,1,,"b'b"" We have a problem with m2m fields migration in Django: intermediate table (e.g. myapp_article_tags) is not migrated at all. So if I have a Tag table (and Article table with tags=ManyToManyField) with PositiveSmallIntegerField as PK and I\'m trying to migrate it to AutoField I will get an exception under mysql.The same problem when migrating Tag pk AutoField -""'",,,,,,,,,,,,,,,,,
django,4970,closed,2,2015-07-09 08:57:52,1297.3,1,,,"b'b"" What additional  do we need? Also I\'m a little bit confused by  ""'",,,,,,,,,,,,,,,,,
django,4970,closed,3,2015-07-09 08:57:52,1411.03,,1,,"b'b""   can only be used as primary key. To make this explicit it\'s a requirement to specify when you manually supply an  .""'",,,,,,,,,,,,,,,,,
django,4970,closed,4,2015-07-09 08:57:52,1.73,,1,,"b""b' Have you handled the migration of all the foreign keys when an changes to  ?'""",,,,,,,,,,,,,,,,,
django,4970,closed,5,2015-07-09 08:57:52,1071.37,,1,,"b""b' Foreign fields are migrated"," many to many fields are not.'""",,,,,,,,,,,,,,,,
django,4970,closed,6,2015-07-09 08:57:52,22.75,,1,,"b'b"" I don\'t have time to investigate right now", but if you do," check what happens for other PK changes. e.g. change the of a and see if M2M handle it properly.""'",,,,,,,,,,,,,,,
django,4970,closed,7,2015-07-09 08:57:52,76.42,,1,,"b""b' Regarding M2M could you add a failing test?'""",,,,,,,,,,,,,,,,,
django,4970,closed,8,2015-07-09 08:57:52,1334.98,,1,,"b'b"" Sure! Checked CharField(primary_key=True) by hands (mysql & postgres) intermediate table remains unchanged. Wrote test_m2m_intermediate_table_is_not_migrated_properly(self): with CharField(primary_key=True).After PK growth you can\'t add tag with big id ...""'",,,,,,,,,,,,,,,,,
django,4970,closed,9,2015-07-09 08:57:52,975.9,,1,,b'b\' Hi Alexander, is this ready for a full review? If so, please make sure the flags on the ticket are set appropriately so the patch appears in the review queue. For example," one of the tickets has ""Needs tests"" checked. See also our [patch review checklist]url  There are a few things you should be able to correct if you do a self-review using that list.\''",,,,,,,,,,,,,,
django,4970,closed,10,2015-07-09 08:57:52,441.33,,1,,"b""b' Hi Tim"," I updated my PR.'""",,,,,,,,,,,,,,,,
django,4970,closed,11,2015-07-09 08:57:52,135.6,,,1,"b""b' The design looks good to me.'""",,,,,,,,,,,,,,,,,
django,4970,closed,12,2015-07-09 08:57:52,667.45,,1,,"b""b' It could be a separate ticket or commit", I suppose," but how about introspection support for BigAutoField?minor edits: url '""",,,,,,,,,,,,,,,
django,4970,closed,13,2015-07-09 08:57:52,10.63,,,1,"b""b' I think the method needs to be documented (look for the two pages where is documented). If you could split that ticket into a separate commit that precedes the addition of BigAutoField"," that would be ideal. Thanks!'""",,,,,,,,,,,,,,,,
django,4970,closed,14,2015-07-09 08:57:52,1226.52,,1,,"b""b' Could you also check url  and see if any of the concerns mentioned there are applicable here? Is there any further work that could be done to meet the concerns of that ticket or is it basically a duplicate if we go this route?'""",,,,,,,,,,,,,,,,,
django,4970,closed,15,2015-07-09 08:57:52,1398.92,,1,,"b'b"" What\'s the current state of this? Reason: I would like to have these changes in a separate app (at least as long as these changes do not exist in any version of Django). Is this set of changes working well with ManyToMany relations without a through= being specified?""'",,,,,,,,,,,,,,,,,
django,4970,closed,16,2015-07-09 08:57:52,138.0,,1,,"b'b"" @luismasuelli"," we are awaiting an update to the patch per my review comments. Feel free to test this branch with the situation you noted to confirm there aren\'t any bugs there.""'",,,,,,,,,,,,,,,,
django,4970,closed,17,2015-07-09 08:57:52,1302.38,,1,,"b'b"" (Please don\'t kill me) Would be awesome if models support a Meta option for this BigAutoField to be generated automagically instead of having to manually specify it. It is easy to add support to this by editing the lines at :285 replaced by: Or something like that. (big_pk could be redundant or even raise an error if the pk is specified It\'s up to your criteria if this feature sounds good) (haha sorry this is my work account)""'",,,,,,,,,,,,,,,,,
django,4970,closed,18,2015-07-09 08:57:52,219.07,,,1,"b'b"" I\'m not seeing much advantage to the additional complexity. It\'s a line of code either way. Care to elaborate on any benefits that I missed?""'",,,,,,,,,,,,,,,,,
django,4970,closed,19,2015-07-09 08:57:52,54.07,,,1,b'b\' Now I think about it... no. \\xc2\\xbfPerhaps less boilerplate code? It is common for models to define a class Meta," and is just an easily recallable setting to use. However the current way (i.e. explicitly define the id field as BigAutoField) would still exist. It is just a little detail I think it could be... comfortable to use. But (now I deeperly think about it) have no real reasons to implement it (i.e. don\\\'t see it as a really super-duper-useful-must-have thing). I think that the tutorial saying ""If you want big models you can declare a class Meta with big_pk = True"" sounds more user friendly than saying ""if you want big models you can declare a field id = BigAutoField(bla bla bla)"" would be more user friendly. Also perhaps the user expects the field behave exactly as AutoField in the scenarios where auto_created=True is relevant", but he does not explicitly set that argument for BigAutoField and stuff like serializers work slightly different... don\\\'t know, but having a uniform behavior would sound fine for me.\'',,,,,,,,,,,,,,
django,4970,closed,20,2015-07-09 08:57:52,14.48,,,1,b'b\' I feel that if the id is automatically created via the meta (which default to true), then," controlling whether  it is a ""normal"" or ""Big"" auto belong to meta too. I encourage the \\\'meta\\\' road unless of course it is considerably complex. Regards\''",,,,,,,,,,,,,,,
django,4970,closed,21,2015-07-09 08:57:52,11.0,,1,,"b'b"" I\'m concerned it\'ll complicate the migrations autodetector and require an operation in addition to  .""'",,,,,,,,,,,,,,,,,
django,4970,closed,22,2015-07-09 08:57:52,4.72,1,,,"b'b"" Damn u\'re right :s. Forgot the implications regarding migrations :s (TWO operations would be created instead of just one). Don\'t know how much damage can do that"," but I think it\'d require additional tests. Nevermind. Was just a thought. It would seriously complicate the migs.""'",,,,,,,,,,,,,,,,
django,4970,closed,23,2015-07-09 08:57:52,750.85,,1,,"b""b' Introspection added.I would be grateful if someone could help me with the docs (the rel_db_type() method needs to be documented).'""",,,,,,,,,,,,,,,,,
django,4970,closed,24,2015-07-09 08:57:52,109.43,,1,,"b""b' Did you have some questions about those docs?'""",,,,,,,,,,,,,,,,,
django,4970,closed,closed,2015-11-27 13:00:44,242.87,2,19,5,,,,,,,,,,,,,,,,,,
django,4970,closed,reopened,2015-11-27 13:04:07,3.38,2,19,5,,,,,,,,,,,,,,,,,,
django,4970,closed,25,2015-07-09 08:57:52,796.45,,,1,"b""b' Fixed Oracle failure and merged in 2a7ce34600d0f879e93c9a5e02215948ed3bb6ac"," thanks!'""",,,,,,,,,,,,,,,,
django,4970,closed,closed,2015-12-26 01:57:27,773.33,2,19,6,,,,,,,,,,,,,,,,,,
django,4970,closed,26,2015-07-09 08:57:52,1047.82,,1,,"b""b' Is the feature finally ready? :D.'""",,,,,,,,,,,,,,,,,
django,4970,closed,27,2015-07-09 08:57:52,636.28,,1,,"b""b' In which versions will this be included? 1.8"," 1.9 or later?'""",,,,,,,,,,,,,,,,
django,4970,closed,28,2015-07-09 08:57:52,638.3,,1,,"b'b"" If you look at the commit"," you\'ll see it\'s added in the 1.10 release notes.""'",,,,,,,,,,,,,,,,
django,4970,closed,29,2015-07-09 08:57:52,642.68,,,1,"b""b' Thanks @timgraham"," I should have looked closer.'""",,,,,,,,,,,,,,,,
django,4970,closed,-,-,-,2,22,7,,,,,,,,,,,,,,,,,,
django,5055,closed,opened,2015-07-27 20:46:41,,,,,,,,,,,,,,,,,,,,,,
django,5055,closed,title,2015-07-27 20:46:41,00:00,,1,,"b""b' Fixed #25181 -Moved () to ()'""",,,,,,,,,,,,,,,,,
django,5055,closed,body,2015-07-27 20:46:41,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,5055,closed,1,2015-07-27 20:46:41,6.23,,1,,"b""b' LGTM as far as it goes. I would think that the purpose of this move is to make the utility publicly available"," so I think docs should be added for it.'""",,,,,,,,,,,,,,,,
django,5055,closed,2,2015-07-27 20:46:41,0.17,,1,,"b""b' Could you also document the method in docs.'""",,,,,,,,,,,,,,,,,
django,5055,closed,3,2015-07-27 20:46:41,12.58,1,,,"b'b"" I\'m afraid that people will be bitten by the following inconsistent parallel::: gives the current time as a naive value in the default timezone :: as an aware value in UTC.:: gives the current date in the default timezone :: in the current timezone What do you think about naming the function or  "," so the parallel with works?""'",,,,,,,,,,,,,,,,
django,5055,closed,4,2015-07-27 20:46:41,3.78,,,1,"b'b"" I think the renaming is a good suggestion to avoid the false parallel. I don\'t have much preference between the names you suggested.""'",,,,,,,,,,,,,,,,,
django,5055,closed,5,2015-07-27 20:46:41,8.42,,,1,"b""b' Renaming the sounds good to me too. :+1: '""",,,,,,,,,,,,,,,,,
django,5055,closed,6,2015-07-27 20:46:41,1325.13,,,1,"b""b' PR updated"," thanks for the review.'""",,,,,,,,,,,,,,,,
django,5055,closed,7,2015-07-27 20:46:41,55.03,1,,,"b'b"" Another idea (that I didn\'t have when I left my first comment", sorry) to increase consistency: it would be nice to give this function the same arguments as  . The argument of should be made optional, if not provided," it should default to the current time. (This is backwards compatible).""'",,,,,,,,,,,,,,
django,5055,closed,closed,2015-07-28 20:18:02,1411.35,2,4,3,,,,,,,,,,,,,,,,,,
django,5055,closed,reopened,2015-07-28 20:18:05,0.05,2,4,3,,,,,,,,,,,,,,,,,,
django,5055,closed,8,2015-07-27 20:46:41,0.18,1,,,"b""b' (oops"," clicked the wrong button)'""",,,,,,,,,,,,,,,,
django,5055,closed,9,2015-07-27 20:46:41,145.1,,1,,"b""b'   and params are now unified. Please let me know"," what do you think about that implementation.'""",,,,,,,,,,,,,,,,
django,5055,closed,10,2015-07-27 20:46:41,517.33,1,,,"b'b"" A cursory [GitHub search]url  suggests that the existing function is being used in the wild by some", though it\'s hard to quantify how many," because the search returns a lot of chaff. I point this out in case their usage is enough to warrant a deprecation warning as has happened with other tidy-ups on such occasions.""'",,,,,,,,,,,,,,,
django,5055,closed,11,2015-07-27 20:46:41,359.07,,1,,"b'b""   was not from the public API"," isn\'t it a \'use at your own risk\' case? Note about moving this function to will be added to  .""'",,,,,,,,,,,,,,,,
django,5055,closed,12,2015-07-27 20:46:41,3.03,,1,,"b'b"" Sometimes we have included a deprecation path for commonly used private APIs. It\'s not required though.""'",,,,,,,,,,,,,,,,,
django,5055,closed,13,2015-07-27 20:46:41,382.22,,1,,"b""b' @kswiat"," are you waiting on anything except your own time to finish this patch?'""",,,,,,,,,,,,,,,,
django,5055,closed,14,2015-07-27 20:46:41,1378.93,,1,,"b""b' Everything seems to be clear"," but I had to delay the work. I think I will get this done till next weekend. '""",,,,,,,,,,,,,,,,
django,5055,closed,15,2015-07-27 20:46:41,1144.5,,1,,"b""b' Any chance to follow soon or should we close this?'""",,,,,,,,,,,,,,,,,
django,5055,closed,16,2015-07-27 20:46:41,28.82,,1,,"b""b' If it can stay open until start of a new year"," I am willing to finish this.'""",,,,,,,,,,,,,,,,
django,5055,closed,17,2015-07-27 20:46:41,285.57,,1,,"b""b' Please send a new PR if you are able to finish it.'""",,,,,,,,,,,,,,,,,
django,5055,closed,closed,2016-02-26 19:02:47,1364.7,4,12,3,,,,,,,,,,,,,,,,,,
django,5055,closed,-,-,-,4,12,3,,,,,,,,,,,,,,,,,,
django,5136,closed,opened,2015-08-14 11:17:32,,,,,,,,,,,,,,,,,,,,,,
django,5136,closed,title,2015-08-14 11:17:32,00:00,,1,,"b""b' Fixed #25269 -Allowed method_decorator() to accept an iterable of decorators'""",,,,,,,,,,,,,,,,,
django,5136,closed,body,2015-08-14 11:17:32,00:00,,1,,"b""b' ticket: url (updated from url '""",,,,,,,,,,,,,,,,,
django,5136,closed,closed,2015-08-17 08:44:53,1287.35,0,2,0,,,,,,,,,,,,,,,,,,
django,5136,closed,reopened,2015-08-17 08:44:57,0.07,0,2,0,,,,,,,,,,,,,,,,,,
django,5136,closed,1,2015-08-14 11:17:32,15.92,,1,,"b""b' I had squashed but I had to pull to solve a conflict'""",,,,,,,,,,,,,,,,,
django,5136,closed,2,2015-08-14 11:17:32,626.73,,,1,"b'b\' Some suggested edits: url Could you please squash commits and bump the ticket to ""Ready for checkin"" when you\\\'re able to update it? Thanks!\''",,,,,,,,,,,,,,,,,
django,5136,closed,3,2015-08-14 11:17:32,532.95,,1,,"b'b"" ok WIll do this weekend if it\'s not a problem""'",,,,,,,,,,,,,,,,,
django,5136,closed,4,2015-08-14 11:17:32,613.15,,1,,"b'b"" Need it done in the next day or two to make it into 1.9. Just let me know if you don\'t have time and I\'ll take care of it.""'",,,,,,,,,,,,,,,,,
django,5136,closed,5,2015-08-14 11:17:32,1258.02,1,,,"b'b"" Hello", unfortunately my hd went to fire last week (yes it is a painfulexperience)," so I don\'t think I will be able to do any work until I findthe time to go buy another one.. I\'m sorry :-(\\xe2\\x80\\x8b""'",,,,,,,,,,,,,,,
django,5136,closed,6,2015-08-14 11:17:32,22.87,,1,,"b""b' Updated in url '""",,,,,,,,,,,,,,,,,
django,5136,closed,closed,2015-09-18 14:27:10,342.22,1,6,1,,,,,,,,,,,,,,,,,,
django,5136,closed,-,-,-,1,6,1,,,,,,,,,,,,,,,,,,
django,5359,closed,opened,2015-09-25 18:04:21,,,,,,,,,,,,,,,,,,,,,,
django,5359,closed,title,2015-09-25 18:04:21,00:00,,1,,"b""b' refactoring if by ternary operator'""",,,,,,,,,,,,,,,,,
django,5359,closed,closed,2015-09-25 18:05:29,1.13,0,1,0,,,,,,,,,,,,,,,,,,
django,5359,closed,reopened,2015-09-25 18:05:42,0.22,0,1,0,,,,,,,,,,,,,,,,,,
django,5359,closed,1,2015-09-25 18:04:21,112.9,,,1,"b""b' merged in 829e33f67f8b3fa8ccade46f14482f4a6ddd7b9d"," thanks.'""",,,,,,,,,,,,,,,,
django,5359,closed,closed,2015-09-25 19:57:15,111.55,0,1,1,,,,,,,,,,,,,,,,,,
django,5359,closed,2,2015-09-25 18:04:21,93.55,,,1,"b""b' Ok :D '""",,,,,,,,,,,,,,,,,
django,5359,closed,-,-,-,0,1,2,,,,,,,,,,,,,,,,,,
django,5416,closed,opened,2015-10-09 01:25:47,,,,,,,,,,,,,,,,,,,,,,
django,5416,closed,title,2015-10-09 01:25:47,00:00,,1,,"b'b"" Fixed #25501 -Changed Filebased cache\'s pickling protocol""'",,,,,,,,,,,,,,,,,
django,5416,closed,body,2015-10-09 01:25:47,00:00,,1,,"b""b' Filebased cache pickling protocol is set to HIGHEST_PROTOCOL.Previously using the default protocol which causes a TypeError'""",,,,,,,,,,,,,,,,,
django,5416,closed,closed,2015-10-09 01:27:02,1.25,0,2,0,,,,,,,,,,,,,,,,,,
django,5416,closed,reopened,2015-10-09 01:27:13,0.18,0,2,0,,,,,,,,,,,,,,,,,,
django,5416,closed,1,2015-10-09 01:25:47,5.95,,1,,"b""b' Are there any upgrade considerations for this patch? Will cached values from a previous version be retrieved without a problem after applying this patch?'""",,,,,,,,,,,,,,,,,
django,5416,closed,2,2015-10-09 01:25:47,86.08,,,1,"b'b"" Hi Tim"," I haven\'t thought of any upgrade considerations. What kind of tests should I write to ensure that there will be no problems when the user upgrades? I revised the patch with all your comments. Thanks.  I will update the patch again after this one is sorted out.""'",,,,,,,,,,,,,,,,
django,5416,closed,3,2015-10-09 01:25:47,649.85,,1,,"b'b"" I guess there probably isn\'t an issue since you didn\'t need to modify the method.""'",,,,,,,,,,,,,,,,,
django,5416,closed,4,2015-10-09 01:25:47,200.18,,,1,"b""b' merged in 48888a1a67db0404e5a31c9ca0349984e496f26f"," thanks!'""",,,,,,,,,,,,,,,,
django,5416,closed,closed,2015-10-20 17:07:51,940.63,0,4,2,,,,,,,,,,,,,,,,,,
django,5416,closed,-,-,-,0,4,2,,,,,,,,,,,,,,,,,,
django,5454,closed,opened,2015-10-21 04:54:56,,,,,,,,,,,,,,,,,,,,,,
django,5454,closed,title,2015-10-21 04:54:56,00:00,,1,,"b""b' Fixed #25578 -Correct the spelling of GitHub'""",,,,,,,,,,,,,,,,,
django,5454,closed,body,2015-10-21 04:54:56,00:00,,1,,"b'b\' ""GitHub"" was spelled as ""Github"" in some documents", so I fixed them.\'',,,,,,,,,,,,,,,,
django,5454,closed,1,2015-10-21 04:54:56,155.52,,1,,"b""b' What about replacing by in the file?'""",,,,,,,,,,,,,,,,,
django,5454,closed,closed,2015-10-21 08:52:16,237.33,0,3,0,,,,,,,,,,,,,,,,,,
django,5454,closed,reopened,2015-10-21 08:52:25,0.15,0,3,0,,,,,,,,,,,,,,,,,,
django,5454,closed,2,2015-10-21 04:54:56,83.3,,1,,"b""b' I did not know well about  .So I checked a [documentation]url  and updated  '""",,,,,,,,,,,,,,,,,
django,5454,closed,3,2015-10-21 04:54:56,193.42,,,1,"b""b' merged in 230d8c7301281176a31443a2f4f425828291e46d"," thanks!'""",,,,,,,,,,,,,,,,
django,5454,closed,closed,2015-10-21 12:07:10,194.75,0,4,1,,,,,,,,,,,,,,,,,,
django,5454,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,
django,5524,closed,opened,2015-10-30 23:40:05,,,,,,,,,,,,,,,,,,,,,,
django,5524,closed,title,2015-10-30 23:40:05,00:00,,1,,"b""b' Fixed #25619 -Made runserver serve with HTTP 1.1 protocol'""",,,,,,,,,,,,,,,,,
django,5524,closed,closed,2015-11-19 15:59:21,979.27,0,1,0,,,,,,,,,,,,,,,,,,
django,5524,closed,1,2015-10-30 23:40:05,994.0,,1,,"b""b' @berkerpeksag maybe some python dev could chime in and give a hint here?'""",,,,,,,,,,,,,,,,,
django,5524,closed,2,2015-10-30 23:40:05,76.43,1,,,b'b\' @claudep sorry for my late response. Python already supports HTTP 1.1 in both client and server level," but the default protocol is set to 1.0 for backward compatibility reasons(since runserver is basically for development I don\\\'t think it\\\'s a problem for Django). You also need to set protocol_version in WSGIServer: url  We may add a new ""Http11Handler""(or something like that) to make HTTP 1.1 easier to use in Python 3.6. Do you think it would be helpful?\''",,,,,,,,,,,,,,,,
django,5524,closed,3,2015-10-30 23:40:05,21.2,,1,,b'b\' The question I had was about what the Python docs says about enabling HTTP 1.1,"your server must then include an accurate Content-Length header (using send_header()) in all of its responses to clients."" As far as I know, Django only sets that header in (there\\\'s an open ticket to move it to  ) so I wasn\\\'t sure if we could do it without causing a problem there. I didn\\\'t look into details though, so the meaning of that sentence might be something else entirely.\''
django	5524	closed	4	berkerpeksag	2015-10-30 23:40:05	110.72			+1	b'b"" Without the Content-Length header the client will probably hang since there is no way to determine end of the response. A (probably hackish) way solve the problem would be overriding the parse_request method of  and setting to  . So you will end up with HTTP 1.0 keep-alive support in HTTP 1.1. I don\'t think it\'s worth to have HTTP 1.1 support without proper persistent connections :)""'
django	5524	closed	5	claudep	2015-10-30 23:40:05	15.2			+1	b'b"" Thanks Berker for the enlightment. We\'ll need first to set Content-Length on non-streaming responses (Django ticket 5897). ""'
django	5524	closed	reopened	 - 	2016-06-27 09:40:28	1061.12	1	3	2
django	5524	closed	6	claudep	2015-10-30 23:40:05	1169.32	+1			b'b"" I\'m trying to debug the failures, but I don\'t get why the second request of the connection does not trigger the server code with HTTP 1.1. Probably related to  and such, but I\'m currently stuck.""'
django	5524	closed	7	claudep	2015-10-30 23:40:05	50.9		+1		b""b' I think I have an idea...'",,,,,,,,,,,,,,,,
django,5524,closed,8,2015-10-30 23:40:05,1358.83,,1,,"b""b' How about these changes: url  ?'""",,,,,,,,,,,,,,,,,
django,5524,closed,9,2015-10-30 23:40:05,57.95,,1,,"b'b"" Yes"," seems to work. But shouldn\'t a HTTP 1.1 server be able to serve multiple requests without closing the connection between each request?""'",,,,,,,,,,,,,,,,
django,5524,closed,10,2015-10-30 23:40:05,48.92,,1,,"b'b"" Oh"," I don\'t know. I\'d have to dig in a bit more to understand things.""'",,,,,,,,,,,,,,,,
django,5524,closed,11,2015-10-30 23:40:05,503.65,1,,,"b'b"" Closing for now as I guess we\'re stuck on the selenium failures.""'",,,,,,,,,,,,,,,,,
django,5524,closed,closed,2016-09-17 01:07:12,926.73,3,7,2,,,,,,,,,,,,,,,,,,
django,5524,closed,12,2015-10-30 23:40:05,530.32,,1,,"b""b' Reopening following  bece837.'""",,,,,,,,,,,,,,,,,
django,5524,closed,reopened,2017-02-10 09:57:31,530.32,3,8,2,,,,,,,,,,,,,,,,,,
django,5524,closed,closed,2017-02-10 09:57:40,0.15,3,8,2,,,,,,,,,,,,,,,,,,
django,5524,closed,13,2015-10-30 23:40:05,3.07,1,,,"b'b"" I\'m sorry", due to wrong manipulations," I had to recreate a PR: url ""'",,,,,,,,,,,,,,,
django,5524,closed,-,-,-,4,8,2,,,,,,,,,,,,,,,,,,
django,5530,closed,opened,2015-11-02 00:02:19,,,,,,,,,,,,,,,,,,,,,,
django,5530,closed,title,2015-11-02 00:02:19,00:00,,1,,"b""b' Fixed #25658 -Allowed inspectdb to inspect a specific set of tables.'""",,,,,,,,,,,,,,,,,
django,5530,closed,body,2015-11-02 00:02:19,00:00,,1,,"b""b' This adds a new option to the command so that", instead of automatically detecting and inspecting all existing views and tables in a database," the user can input what tables and views should be inspected. Usage is simple: Trac ticket: url '""",,,,,,,,,,,,,,,
django,5530,closed,1,2015-11-02 00:02:19,495.17,,1,,"b""b' add docs and release notes'""",,,,,,,,,,,,,,,,,
django,5530,closed,2,2015-11-02 00:02:19,41.92,,,1,"b""b' Added docs and release notes!'""",,,,,,,,,,,,,,,,,
django,5530,closed,3,2015-11-02 00:02:19,608.68,,1,,"b""b' Jose"," could you have a reply to my question on the mailing list? url '""",,,,,,,,,,,,,,,,
django,5530,closed,4,2015-11-02 00:02:19,825.9,,1,,"b""b' Tim"," did you check my response in the mailing list? '""",,,,,,,,,,,,,,,,
django,5530,closed,5,2015-11-02 00:02:19,592.1,,1,,"b""b' Closing per ticket.'""",,,,,,,,,,,,,,,,,
django,5530,closed,closed,2016-02-25 18:46:05,1123.77,0,6,1,,,,,,,,,,,,,,,,,,
django,5530,closed,reopened,2016-03-18 12:20:19,1054.23,0,6,1,,,,,,,,,,,,,,,,,,
django,5530,closed,6,2015-11-02 00:02:19,1094.13,,,1,"b""b' merged in 39a16dd2e003f9ca82a6d061a022ced6904bd243"," thanks!'""",,,,,,,,,,,,,,,,
django,5530,closed,closed,2016-03-18 13:00:13,39.9,0,6,2,,,,,,,,,,,,,,,,,,
django,5530,closed,-,-,-,0,6,2,,,,,,,,,,,,,,,,,,
django,5614,closed,opened,2015-11-09 06:37:59,,,,,,,,,,,,,,,,,,,,,,
django,5614,closed,title,2015-11-09 06:37:59,00:00,,1,,"b""b' Fixed #25708 -Fixed annotations with geometry values.'""",,,,,,,,,,,,,,,,,
django,5614,closed,body,2015-11-09 06:37:59,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,5614,closed,1,2015-11-09 06:37:59,259.7,,1,,"b""b' There is also a GeomValue class in  . I wonder if your patch does not partially duplicate this behavior. Did you evaluate if:wrapping a geometric value in GeomValue would be appropriate?your patch may obsolete the GeomValue implementation?'""",,,,,,,,,,,,,,,,,
django,5614,closed,2,2015-11-09 06:37:59,164.68,,1,,"b'b"" Do you mean internally or by user? If the second one", I think it\'s not appropriate.Yes, I thought to obsolete it later. After re-evaluating this patch I\'m not sure that getting placeholder in the is the right thing," any thoughts on this?""'",,,,,,,,,,,,,,
django,5614,closed,3,2015-11-09 06:37:59,626.73,,1,,"b""b' Do you still prefer this approach to url  Just looking for a way to break the stalemate on this issue...'""",,,,,,,,,,,,,,,,,
django,5614,closed,4,2015-11-09 06:37:59,1071.78,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,
django,5614,closed,closed,2016-09-28 18:00:53,682.9,0,6,0,,,,,,,,,,,,,,,,,,
django,5614,closed,5,2015-11-09 06:37:59,1032.43,,1,,"b""b' Could you please rebase your patch (which will re-trigger a test run)?'""",,,,,,,,,,,,,,,,,
django,5614,closed,reopened,2016-11-26 11:13:19,1032.43,0,7,0,,,,,,,,,,,,,,,,,,
django,5614,closed,6,2015-11-09 06:37:59,1142.83,,1,,"b""b' @claudep  Will do it in several days.'""",,,,,,,,,,,,,,,,,
django,5614,closed,7,2015-11-09 06:37:59,834.13,,1,,"b'b\' Would it be useful to document this with a section something like ""Annotating Geometry values""? Claude said on the ticket","With your approach, you are also forced to specify an output_field for geometry values, which is not very intuitive either"".\''
django	5614	closed	8	sir-sigurd	2015-11-09 06:37:59	773.05		+1		b'b\' I don\\\'t think there is something specific in annotating geometry values, so I guess we need a section  ""Annotating with Value expressions", but it\\\'s not related to this PR.\'',,,,,,,,,,,,,,,
django,5614,closed,9,2015-11-09 06:37:59,661.57,,1,,"b""b' @timgraham  made requested changes.'""",,,,,,,,,,,,,,,,,
django,5614,closed,10,2015-11-09 06:37:59,1394.13,,,1,"b""b' merged in f909fa84bedb51778a175aadfe4cfe7a91fe06cd"," thanks!'""",,,,,,,,,,,,,,,,
django,5614,closed,closed,2016-12-07 19:19:02,485.72,0,11,1,,,,,,,,,,,,,,,,,,
django,5614,closed,-,-,-,0,11,1,,,,,,,,,,,,,,,,,,
django,5732,closed,opened,2015-11-27 06:41:32,,,,,,,,,,,,,,,,,,,,,,
django,5732,closed,title,2015-11-27 06:41:32,00:00,,1,,"b""b' Fixed #25811 -Added a helpful error when making _in queries across different databases.'""",,,,,,,,,,,,,,,,,
django,5732,closed,body,2015-11-27 06:41:32,00:00,,1,,"b""b' Normally it vlookup IN is used with a list", but we go through another query argument, generating a single SQL query like adding a second subquery, but we must check if there is db attribute and validate the 2 consultations belong to the same base data," otherwise evaluation must force the second query.'""",,,,,,,,,,,,,
django,5732,closed,closed,2015-11-27 07:00:09,18.62,0,2,0,,,,,,,,,,,,,,,,,,
django,5732,closed,reopened,2015-11-27 07:00:59,0.83,0,2,0,,,,,,,,,,,,,,,,,,
django,5732,closed,1,2015-11-27 06:41:32,1047.82,,1,,"b""b' No comment? in url  is an example where queries generated with the changes made are observed.'""",,,,,,,,,,,,,,,,,
django,5732,closed,2,2015-11-27 06:41:32,1093.7,,1,,"b""b' I have added a simple test that checks the operation of the generated queries'""",,,,,,,,,,,,,,,,,
django,5732,closed,3,2015-11-27 06:41:32,153.07,,1,,"b'b"" Well", the test is needed," but that\'s not what I meant. My comment was supposed to make Jenkins run tests on your PR; I guess I didn\'t write it correctly.""'",,,,,,,,,,,,,,,
django,5732,closed,4,2015-11-27 06:41:32,34.15,1,,,"b""b' Hi", thanks for your comments, and corrections applied in the test," but do not understand about the make Jenkins run tests on your PR. Sorry it is this is the first time I try to do this.Sorry for my English too bad.'""",,,,,,,,,,,,,,
django,5732,closed,5,2015-11-27 06:41:32,14.45,,1,,b'b\' As you may know, we have a Jenkins server that runs automatic tests. This Jenkins also looks at PRs. If a person with the right permissions submits a PR, or makes a comment such as the above (Earlier I used the wrong name)," then you get a ""default"" entry added to the ""checks""", where it also runs all the tests on the code with your PR, on all the different databases.\'',,,,,,,,,,,,
django,5732,closed,6,2015-11-27 06:41:32,30.07,,,1,"b""b' Great I did not know. I see there are test failures", and my concern seems to be true, in the comments ticket talked about existing code that would be required to be corrected, apparently testing within subqueries are generated in different database, and that does not generate consistent results, as well both models are based on different data, they do not necessarily have the same stored information. So what can not be the best solution, the exception requires correct code," but when you run the subquery would solve once.'""",,,,,,,,,
django,5732,closed,7,2015-11-27 06:41:32,67.63,,,1,"b'b"" I would also consider adding a test that confirms wrapping the inner query with a does what you\'d expect. Edit: whoops"," I missed the inner thanks shai.""'",,,,,,,,,,,,,,,,
django,5732,closed,8,2015-11-27 06:41:32,9.48,,1,,"b'b"" @jarshwah : Your pseudocode is not using  "," but I don\'t think we need such a test at all. We have tests covering and beyond that it\'s just  .""'",,,,,,,,,,,,,,,,
django,5732,closed,9,2015-11-27 06:41:32,22.63,,,1,"b""b' thanks for the feedback"," and implement the suggestions.'""",,,,,,,,,,,,,,,,
django,5732,closed,10,2015-11-27 06:41:32,74.37,1,,,b'b\' The one failing test seems like something we could just change. The test assumes that routing information isn\\\'t (yet) available when evaluating what the sql string should be. Your change here breaks that assumption, but for better or worse? I haven\\\'t debugged the test with your changes to see exactly what is happening, but from eyeballing it, it looks as if the database routers are routing queries to two different backends. Your change to the seems to use the router. If you can, debug the failing test," and figure out why it\\\'s now erroring where it wasn\\\'t before. Maybe we can just change the test if the new behaviour is ""better"". It seems wrong to allow evaluation of the query when generating a string", but failing when you actually try to execute it.\'',,,,,,,,,,,
django,5732,closed,11,2015-11-27 06:41:32,1398.18,,1,,"b""b' @ebar0n"," do you have time to investigate the failing test?'""",,,,,,,,,,,,,,,,
django,5732,closed,12,2015-11-27 06:41:32,125.75,,1,,"b""b' @timgraham if I can make time for that"," but then if it is appropriate to modify the test that failed?'""",,,,,,,,,,,,,,,,
django,5732,closed,13,2015-11-27 06:41:32,565.85,,1,,"b'b"" See Josh\'s comment above"," I haven\'t looked into it myself.""'",,,,,,,,,,,,,,,,
django,5732,closed,14,2015-11-27 06:41:32,209.55,,1,,"b""b' @timgraham I think he was misusing the **db** attribute", change using **_db**. With that change, the tests pass   Please," you can rerun the test in jenkins?'""",,,,,,,,,,,,,,
django,5732,closed,15,2015-11-27 06:41:32,22.12,,1,,"b""b' @timgraham Now that the test passed"," You apply the merge?'""",,,,,,,,,,,,,,,,
django,5732,closed,16,2015-11-27 06:41:32,1244.75,,,1,"b""b' merged in eb44172760e9439c8025d6812885b99a94892af3"," thanks!'""",,,,,,,,,,,,,,,,
django,5732,closed,closed,2016-02-26 12:35:06,334.12,2,12,4,,,,,,,,,,,,,,,,,,
django,5732,closed,-,-,-,2,12,4,,,,,,,,,,,,,,,,,,
django,5798,closed,opened,2015-12-09 09:07:10,,,,,,,,,,,,,,,,,,,,,,
django,5798,closed,title,2015-12-09 09:07:10,00:00,,1,,"b""b' Changed query to detect MySQL storage engine.'""",,,,,,,,,,,,,,,,,
django,5798,closed,body,2015-12-09 09:07:10,00:00,,,1,"b""b' update for INFORMATION_ sometiomes do not exist!'""",,,,,,,,,,,,,,,,,
django,5798,closed,1,2015-12-09 09:07:10,0.77,,,1,"b""b' update for INFORMATION_ sometiomes do not exist!'""",,,,,,,,,,,,,,,,,
django,5798,closed,closed,2015-12-09 09:08:03,0.88,0,1,2,,,,,,,,,,,,,,,,,,
django,5798,closed,reopened,2015-12-09 09:08:11,0.13,0,1,2,,,,,,,,,,,,,,,,,,
django,5798,closed,2,2015-12-09 09:07:10,378.62,,,1,"b""b' Could you please create a [Trac ticket]url  with more details including the circumstances in which the query fails? Thanks!'""",,,,,,,,,,,,,,,,,
django,5798,closed,3,2015-12-09 09:07:10,454.63,,1,,"b""b' Closing due to lack of follow up.'""",,,,,,,,,,,,,,,,,
django,5798,closed,closed,2015-12-21 23:01:11,833.0,0,2,3,,,,,,,,,,,,,,,,,,
django,5798,closed,-,-,-,0,2,3,,,,,,,,,,,,,,,,,,
django,5804,closed,opened,2015-12-09 13:05:30,,,,,,,,,,,,,,,,,,,,,,
django,5804,closed,title,2015-12-09 13:05:30,00:00,,1,,"b'b"" Fixed #25939 -Removed transaction from \'s save().""'",,,,,,,,,,,,,,,,,
django,5804,closed,body,2015-12-09 13:05:30,00:00,,1,,"b'b"" There is no need to wrap calls of create and save methods in as it\'s already done down the call stack in method.""'",,,,,,,,,,,,,,,,,
django,5804,closed,1,2015-12-09 13:05:30,5.9,,1,,"b""b' This is a second PR. You can see first one here: url '""",,,,,,,,,,,,,,,,,
django,5804,closed,2,2015-12-09 13:05:30,26.62,,,1,b'b\' Thanks," I\\\'ll update PR according to your comments. Just wanted to say that I\\\'m getting ""OperationalError: database is locked"" exception without first hunk applied. It happens on get_or_create call.Can you suggest what can be the reason for that? I\\\'m using sqlite if it matters.\''",,,,,,,,,,,,,,,,
django,5804,closed,3,2015-12-09 13:05:30,30.93,,1,,"b'b"" If you\'re getting on SQLite"," most likely you shouldn\'t be using SQLite in the first place. I don\'t expect the kind of changes you\'re proposing here to have a significant effect. Please seek help:on the django-users mailing list to discuss what optimizations you could use in your projecton the django-developers mailing list to discuss changes in Django; these changes will have to be backed up by benchmarks showing an improvement""'",,,,,,,,,,,,,,,,
django,5804,closed,4,2015-12-09 13:05:30,4.77,,,1,"b'b"" Thanks for your suggestion. I can only say that with this patch applied I can\'t reproduce the error. There should be a reason for that. Suggesting to stop using sqlite is a work around"," not a solution from my point of view.""'",,,,,,,,,,,,,,,,
django,5804,closed,5,2015-12-09 13:05:30,15.83,,1,,"b'b"" Updated PR according to reviewer suggestions. Please"," merge if you don\'t mind.""'",,,,,,,,,,,,,,,,
django,5804,closed,6,2015-12-09 13:05:30,54.8,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,5804,closed,7,2015-12-09 13:05:30,23.22,,,1,"b'b"" aaugustin"," thank you for the info. I hope it will help me to find the reason for the issue.Just checked out what you\'ve pointed to:ATOMIC_REQUESTS is not in use trueupdate_or_create ends up creating an object truethe save method of that objects does long things like sending email after the write (i.e. once it holds an exclusive lock on the database) not true. save is not redefined in the model. Just to be clear. The issue is gone when both hunks of original patch are applied. It\'s still there with moving save out of  context. I\'ll check if another hunk alone fixes it or not.""'",,,,,,,,,,,,,,,,
django,5804,closed,8,2015-12-09 13:05:30,87.83,,1,,"b'b"" aaugustin"," I\'ve read sqlite FAQ before. what\'s written there doesn\'t explain the fact that I\'m getting dozens of \'database is locked\' issues and they\'re gone if I move obj = (**params) out of  context in  Any other ideas where to look and what potentially could be the reason?""'",,,,,,,,,,,,,,,,
django,5804,closed,9,2015-12-09 13:05:30,308.47,,1,,"b'b"" I have no idea about your use case", your code, or the kind of concurrency you\'re facing. If you could reproduce this with a minimal example and a simulate load," then we could benchmark it.""'",,,,,,,,,,,,,,
django,5804,closed,10,2015-12-09 13:05:30,738.67,,,1,"b'b"" yep", makes sense. I\'ll try to sketch some example. meanwhile feel free to merge this commit. I\'ll create new PR when I get the data. Thank you,"Ed""'",,,,,,,,,,,,,,,
django,5804,closed,11,2015-12-09 13:05:30,387.85,,1,,"b'b\' Could you add a mention in the 1.10 release notes ""Backwards-incompatible"" changes section as requested by Aymeric? ""This may affect query counts tested by assertNumQueries in TransactionTestCase which should be mentioned in the release notes.""\''",,,,,,,,,,,,,,,,,
django,5804,closed,closed,2015-12-14 18:53:13,347.72,0,9,4,,,,,,,,,,,,,,,,,,
django,5804,closed,12,2015-12-09 13:05:30,112.43,1,,,"b""b' reopen as it was closed by mistake.'""",,,,,,,,,,,,,,,,,
django,5804,closed,13,2015-12-09 13:05:30,2.25,,1,,"b""b' Updated release notes as suggested.'""",,,,,,,,,,,,,,,,,
django,5804,closed,reopened,2015-12-14 19:05:04,11.85,1,10,4,,,,,,,,,,,,,,,,,,
django,5804,closed,14,2015-12-09 13:05:30,337.62,,,1,"b""b' merged in 423b3afce431fd0a1d683bca9b2b80a1c4e3c8ca"," thanks!'""",,,,,,,,,,,,,,,,
django,5804,closed,closed,2015-12-15 00:42:41,337.62,1,10,5,,,,,,,,,,,,,,,,,,
django,5804,closed,-,-,-,1,10,5,,,,,,,,,,,,,,,,,,
django,5852,closed,opened,2015-12-22 15:08:18,,,,,,,,,,,,,,,,,,,,,,
django,5852,closed,title,2015-12-22 15:08:18,00:00,,1,,"b""b' Fixed #25316 -Fixed using order_by() and values() after annotate().'""",,,,,,,,,,,,,,,,,
django,5852,closed,body,2015-12-22 15:08:18,00:00,,1,,"b""b' In reference to ticket url  .'""",,,,,,,,,,,,,,,,,
django,5852,closed,1,2015-12-22 15:08:18,385.0,,1,,"b'b"" Please try to add tests in instead of in a new test app. It\'s better to reuse existing models if possible as adding more models increases the complexity and execution time of the test suite.""'",,,,,,,,,,,,,,,,,
django,5852,closed,2,2015-12-22 15:08:18,16.17,,1,,"b'b"" Rather"," there\'s already a that could be used that already has the model you\'re writing tests against. You should move the tests into that file.""'",,,,,,,,,,,,,,,,
django,5852,closed,3,2015-12-22 15:08:18,478.63,1,,,"b""b' Sorry for  keep that in mind.Added the tests to the  using the existing models.'""",,,,,,,,,,,,,,,,,
django,5852,closed,4,2015-12-22 15:08:18,405.2,,1,,"b""b' Could you try to follow the style of the other tests and clean up the code a bit? See the flake8 and isort errors", remove the commented out print statements," etc. Josh suggested to use  . You can squash commits too.'""",,,,,,,,,,,,,,,
django,5852,closed,5,2015-12-22 15:08:18,123.23,,1,,"b'b"" Hi",I made all the changes you suggested.I ran flake8 on my command line ,but no errors came  line it is showing the error was not even part of any changes I  I\'m unable to find the error it is  error shown is:./:761:31: E231 missing whitespace after \',\' Other than that,"all other tests pass.I changed the coding style in accordance with other  keep that in mind in the future.""'",,,,,,,,,,,,,
django,5852,closed,6,2015-12-22 15:08:18,55.83,1,,,"b'b"" Could you please squash your commits when updating and use the message from the pull request\'s title? Please check the test failures as well.""'",,,,,,,,,,,,,,,,,
django,5852,closed,7,2015-12-22 15:08:18,88.67,,1,,"b'b"" Haven\'t squashed commits  give me a while to figure it out.""'",,,,,,,,,,,,,,,,,
django,5852,closed,closed,2015-12-23 17:01:40,113.37,2,7,0,,,,,,,,,,,,,,,,,,
django,5852,closed,reopened,2015-12-23 17:02:03,0.38,2,7,0,,,,,,,,,,,,,,,,,,
django,5852,closed,8,2015-12-22 15:08:18,22.98,,1,,"b""b' Squashed the commits .Please check.'""",,,,,,,,,,,,,,,,,
django,5852,closed,9,2015-12-22 15:08:18,1341.6,1,,,"b'b"" Hi","Fixed the .idea directory.I\'m sorry I\'m taking time to getting adjusted to the git  take care of the following in the future.Please review""'",,,,,,,,,,,,,,,,
django,5852,closed,10,2015-12-22 15:08:18,1416.72,,1,,"b""b' Josh"," any opinion about backporting this fix?'""",,,,,,,,,,,,,,,,
django,5852,closed,11,2015-12-22 15:08:18,1084.0,,,1,"b'b"" I think it\'s fine to backport considering it\'s a crashing bug with a valid use case.""'",,,,,,,,,,,,,,,,,
django,5852,closed,12,2015-12-22 15:08:18,134.52,,1,,"b'b"" Would like to include this in today\'s release"," so updated in url ""'",,,,,,,,,,,,,,,,
django,5852,closed,closed,2016-01-02 11:40:51,1118.8,3,10,1,,,,,,,,,,,,,,,,,,
django,5852,closed,-,-,-,3,10,1,,,,,,,,,,,,,,,,,,
django,5877,closed,opened,2015-12-26 18:29:24,,,,,,,,,,,,,,,,,,,,,,
django,5877,closed,title,2015-12-26 18:29:24,00:00,,1,,"b""b' Fixed #25989 -Find latest lastmod of all sitemaps'""",,,,,,,,,,,,,,,,,
django,5877,closed,body,2015-12-26 18:29:24,00:00,,1,,"b""b' Determine latest lastmod of all sitemaps supplied to"," instead of unconditionally pickinglastmod of a last sitemap.'""",,,,,,,,,,,,,,,,
django,5877,closed,1,2015-12-26 18:29:24,989.5,,1,,"b""b' Tests added.'""",,,,,,,,,,,,,,,,,
django,5877,closed,2,2015-12-26 18:29:24,339.9,,1,,"b""b' Fixed python35 error.'""",,,,,,,,,,,,,,,,,
django,5877,closed,closed,2015-12-30 16:38:49,1329.42,0,4,0,,,,,,,,,,,,,,,,,,
django,5877,closed,reopened,2015-12-30 16:38:57,0.13,0,4,0,,,,,,,,,,,,,,,,,,
django,5877,closed,3,2015-12-26 18:29:24,1275.08,,,1,"b""b' merged in 002a4f72c46458514d97f7e54d4fd9416d89899d"," thanks!'""",,,,,,,,,,,,,,,,
django,5877,closed,closed,2016-01-23 13:53:53,1274.93,0,4,1,,,,,,,,,,,,,,,,,,
django,5877,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,
django,5922,closed,opened,2016-01-03 07:46:58,,,,,,,,,,,,,,,,,,,,,,
django,5922,closed,title,2016-01-03 07:46:58,00:00,,1,,"b""b' Fixed #25850 -Made migrations fail loudly on inconsistent history'""",,,,,,,,,,,,,,,,,
django,5922,closed,1,2016-01-03 07:46:58,83.23,,1,,"b'b"" Shouldn\'t be added to the as a field"," so a user could easily track incorrectly applied migrations?""'",,,,,,,,,,,,,,,,
django,5922,closed,closed,2016-01-03 19:02:54,675.93,0,2,0,,,,,,,,,,,,,,,,,,
django,5922,closed,reopened,2016-01-03 19:02:56,0.03,0,2,0,,,,,,,,,,,,,,,,,,
django,5922,closed,2,2016-01-03 07:46:58,811.53,,1,,"b""b' This will stop the executor"," alright. Will it also stop the creation of new migrations?'""",,,,,,,,,,,,,,,,
django,5922,closed,3,2016-01-03 07:46:58,1084.15,1,,,"b'b"" Oh", sorry," I missed that part. When I figure out that part I\'ll reopen pull request.""'",,,,,,,,,,,,,,,
django,5922,closed,closed,2016-01-06 16:45:53,1302.95,1,3,0,,,,,,,,,,,,,,,,,,
django,5922,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,
django,5988,closed,opened,2016-01-16 10:31:02,,,,,,,,,,,,,,,,,,,,,,
django,5988,closed,title,2016-01-16 10:31:02,00:00,,1,,"b""b' Corrected English name of nb language.'""",,,,,,,,,,,,,,,,,
django,5988,closed,body,2016-01-16 10:31:02,00:00,,1,,b'b\' See for example url  ," where the name is listed as ""Norwegian Bokm\\xc3\\xa5l"".\''",,,,,,,,,,,,,,,,
django,5988,closed,1,2016-01-16 10:31:02,137.8,,1,,"b'b"" Looks like you need to add to this file for Python 2. Even after that"," there\'s a test failure:  ""'",,,,,,,,,,,,,,,,
django,5988,closed,2,2016-01-16 10:31:02,110.65,1,,,"b""b' [Tim Graham]Right.  I guess UTF-8 and Python 2 is always going to be a pain. So", what should be done about this," and by whom?  I am not capable ofrewriting the code base to work properly with non-ascii language names. ##  Happy hackingPetter Reinholdtsen'""",,,,,,,,,,,,,,,
django,5988,closed,3,2016-01-16 10:31:02,589.88,,1,,"b""b' I created [a ticket]url  for the issue and will close this pull request for now.'""",,,,,,,,,,,,,,,,,
django,5988,closed,closed,2016-01-20 00:29:22,838.33,1,4,0,,,,,,,,,,,,,,,,,,
django,5988,closed,4,2016-01-16 10:31:02,1252.27,,1,,"b""b' Petter"," could you try updating with and  ?'""",,,,,,,,,,,,,,,,
django,5988,closed,reopened,2016-01-20 21:21:38,1252.27,1,5,0,,,,,,,,,,,,,,,,,,
django,5988,closed,5,2016-01-16 10:31:02,46.13,,,1,"b'b"" [Tim Graham]Not quite sure I understood what you meant"," but I\'ve tried. ##  Happy hackingPetter Reinholdtsen""'",,,,,,,,,,,,,,,,
django,5988,closed,6,2016-01-16 10:31:02,21.12,,,1,"b""b' merged in a1fba4e843901eb35820c14d83a5d7d5622432fe"," thanks!'""",,,,,,,,,,,,,,,,
django,5988,closed,closed,2016-01-20 22:28:53,67.25,1,5,2,,,,,,,,,,,,,,,,,,
django,5988,closed,-,-,-,1,5,2,,,,,,,,,,,,,,,,,,
django,6099,closed,opened,2016-02-07 05:01:21,,,,,,,,,,,,,,,,,,,,,,
django,6099,closed,title,2016-02-07 05:01:21,00:00,,1,,"b'b"" Fixed #25364 -Added support for all selenium\'s browsers in tests.""'",,,,,,,,,,,,,,,,,
django,6099,closed,body,2016-02-07 05:01:21,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,6099,closed,1,2016-02-07 05:01:21,602.75,,,1,"b'b""   should work fine now. But it isn\'t supporting multiple browsers (like  ) in the argument.""'",,,,,,,,,,,,,,,,,
django,6099,closed,2,2016-02-07 05:01:21,1326.75,,,1,"b'b"" Looks like there\'s a problem where something like will run all the tests. I think specifying without any values should raise an error. If we could automatically extract and output the possible browser values in that error", then we won\'t have to hardcode the browser list in the docs which will inevitably go stale. This is coming along," keep up the good work.""'",,,,,,,,,,,,,,,
django,6099,closed,3,2016-02-07 05:01:21,376.98,,1,,"b'b"" @timgraham Please take a final review.As far as the task of getting the list of browsers is concerned"," I am trying to find something but haven\'t  got anything much concrete yet. Maybe I should open a separate ticket for it ?""'",,,,,,,,,,,,,,,,
django,6099,closed,closed,2016-02-10 19:27:50,866.48,0,3,2,,,,,,,,,,,,,,,,,,
django,6099,closed,reopened,2016-02-10 19:27:59,0.15,0,3,2,,,,,,,,,,,,,,,,,,
django,6099,closed,4,2016-02-07 05:01:21,13.4,,1,,"b'b"" An option might be to enumerate the packages in and exclude the ones that we know aren\'t browsers ( ",  ,  ), however that seems a bit hacky. Would you like to raise the issue upstream url  and see if the devs would be open to adding that list? If so," I agree we could defer that improvement to a separate ticket until the version of selenium with the improvement is released.""'",,,,,,,,,,,,,
django,6099,closed,5,2016-02-07 05:01:21,16.72,,1,,"b""b' I am raising the issue upstream", keeping my fingers crossed. :)For till then," I am raising a ticket on our own Trac to discuss what can be done.Please let me know if anything else is required on this PR.'""",,,,,,,,,,,,,,,
django,6099,closed,6,2016-02-07 05:01:21,11.65,,1,,"b'b"" I don\'t think we need another Trac ticket yet.Also", if we can\'t support multiple browser specs," I think that\'ll be a blocker to merge this ... at least until url  is completed. Otherwise we have to run the entire test suite twice on our CI server (we currently test with firefox and chrome there) which will make a slow build even slower. I\'ll try to get some movement on that ticket though -url  is the first part.""'",,,,,,,,,,,,,,,
django,6099,closed,7,2016-02-07 05:01:21,734.85,,1,,"b""b' @timgraham I was working on the support for multi browser thing and have been able to do it. Just polishing it up. Will push it soon.'""",,,,,,,,,,,,,,,,,
django,6099,closed,8,2016-02-07 05:01:21,587.72,,1,,"b'b"" Hi @timgrahamI have been able to take in multiple arguments for most of the test classes but am facing some issue while doing it for classes which are inheriting multiple classes like [this one]url I am not able to call the function of class as it is being  \'s function overrides it when I use  . Could you please help me out ?One solution could be to remove the class as is the case in other files.""'",,,,,,,,,,,,,,,,,
django,6099,closed,9,2016-02-07 05:01:21,6.0,,1,,"b""b' I think as long as you have all the needed calls"," it should work.'""",,,,,,,,,,,,,,,,
django,6099,closed,10,2016-02-07 05:01:21,266.48,,1,,"b'b"" Since all subclasses of also subclass I would declare a class to avoid the  \'s quirks:  ""'",,,,,,,,,,,,,,,,,
django,6099,closed,11,2016-02-07 05:01:21,846.87,,,1,"b""b' @timgraham I tried things out [here d4dc77]url  regarding the compatibility concerns of the two patches you mentioned earlier.Everything works fine and as mentioned by me in my earlier comment. I can send a PR in favour of [#25653]url  once this current patch gets merged.'""",,,,,,,,,,,,,,,,,
django,6099,closed,12,2016-02-07 05:01:21,245.73,,1,,"b'b"" @timgraham I have run the test suite on machines with Mac", Ubuntu and Windows on both Python 2 and 3, and it passes on all of them. Since I cannot reproduce the bug," I am unable to debug it on my end. Please try to run the tests on your computer as well to check if the tests pass or not. I reckon that the problem has something to do with Jenkins and it\'s environment.""'",,,,,,,,,,,,,,
django,6099,closed,13,2016-02-07 05:01:21,1308.58,,1,,b'b\' @timgraham Some facts that might be useful when you investigate this issue -1) The last selenium test that actually ran and passed was [#56]url  which was for the [PR-6077]url  and not [#61]url 2) The reason [#61]url  requested by [PR6165]url  had passed was because all tests had been skipped by Jenkins (because currently the logic is to skip any test which is not able to import the selenium webdriver). The result was **Ran 0 tests, skipped 31**.3) This PR fails the tests because I have changed that [current logic]url  to raise an error instead. So basically, any selenium test that has passed after [#56]url  is because all tests were skipped. The test that had run after that, i.e. [#57]url  was none other than the one in which the variable had been changed. Conclusions:1) Now I am quite sure that something with Jenkin\\\'s environment has changed and the recent failures of this PR have nothing to do with the patch.2) #6165 might have failed on some test because it was never actually tested. Fortunately, it didn\\\'t (I ran the test suite on my machine and they pass).3) Not to say, this also means that Jenkins is not a reliable place for running selenium tests right now," it will always give a green light provided that the ""current logic"" is there.\''",,,,,,,,,,,
django,6099,closed,14,2016-02-07 05:01:21,21.45,,,1,"b""b' Good find. I found at least one problem with the Jenkins configuration and am working on it now.'""",,,,,,,,,,,,,,,,,
django,6099,closed,15,2016-02-07 05:01:21,76.27,,1,,"b""b' buildbot"," test on selenium.'""",,,,,,,,,,,,,,,,
django,6099,closed,16,2016-02-07 05:01:21,527.43,,1,,"b'b"" Multiple browsers aren\'t working on Python 3. Zero tests are run for  .""'",,,,,,,,,,,,,,,,,
django,6099,closed,17,2016-02-07 05:01:21,703.72,,1,,"b""b' buildbot"," test on selenium.'""",,,,,,,,,,,,,,,,
django,6099,closed,18,2016-02-07 05:01:21,63.82,1,,,"b""b' @timgraham For some reason"," the [selenium test for python 3]url  is stuck on running the migration _Applying sites_..._.Can you please abort it ?'""",,,,,,,,,,,,,,,,
django,6099,closed,19,2016-02-07 05:01:21,128.67,,,1,"b'b"" Here are a few edits: url Otherwise this looks good to go", but if we can improve it to launch the browser once per class as described on the ticket, that will be useful and might even reduce the likelihood of Jenkins hanging. Still," the build does pass now on my local test Jenkins so that\'s a good sign.""'",,,,,,,,,,,,,,
django,6099,closed,20,2016-02-07 05:01:21,86.23,,1,,"b""b' I guess we can address that in a separate ticket if the selenium tests on the CI still run in an acceptable time.'""",,,,,,,,,,,,,,,,,
django,6099,closed,21,2016-02-07 05:01:21,84.93,,1,,"b'b"" Updated -1) The changes suggested url  except Single inverted commas are being used in all files for this so I didn\'t change this one either. Is there some specific reason for changing it here ? 2) Added function so that a browser error is not raised on each method", when an invalid browser is provided. Now," it is being raised only once in the beginning. 3) Squashed and rebased.""'",,,,,,,,,,,,,,,
django,6099,closed,22,2016-02-07 05:01:21,6.42,,1,,"b'b"" It\'s better not to make unrelated cosmetic cleanups like change quote styles in a feature commit like this that\'s why I changed it back in my edit. I think we should investigate launching the browser once per class before merging -otherwise it seems like we lose the ability to run selenium tests on Jenkins due to the hanging issue.""'",,,,,,,,,,,,,,,,,
django,6099,closed,23,2016-02-07 05:01:21,2.93,,1,,"b""b' @akki"," do you want to work on launching the browser once per class yourself?I could also open a PR and base it on yours.'""",,,,,,,,,,,,,,,,
django,6099,closed,24,2016-02-07 05:01:21,12.52,,1,,"b'b"" @MoritzS This might be a bit tricky for me but I\'ll like to try it myself first"," if that would not be an issue. I\'ll give my 100% and try to make it as early as possible.""'",,,,,,,,,,,,,,,,
django,6099,closed,25,2016-02-07 05:01:21,20.4,,,1,"b""b' Yes of course"," go ahead!'""",,,,,,,,,,,,,,,,
django,6099,closed,26,2016-02-07 05:01:21,954.15,,1,,"b""b' Further work by @charettes over here url '""",,,,,,,,,,,,,,,,,
django,6099,closed,27,2016-02-07 05:01:21,1309.97,,1,,"b""b' HiThis branch is not up to date", I was thinking maybe we should figure out how to make the tests pass on Jenkins and I could do the polishing after that (once we agree on a solution for the bigger problem).Or do we plan to merge this PR anyways," as Jenkins is unstable with selenium tests ? In that case I will finish this off as soon as I can.'""",,,,,,,,,,,,,,,
django,6099,closed,28,2016-02-07 05:01:21,755.65,,,1,"b""b' Simon continued this in url  Looks good to me pending a few cosmetic issues and additional comments. Thanks!'""",,,,,,,,,,,,,,,,,
django,6099,closed,closed,2016-03-12 22:00:23,152.4,1,22,7,,,,,,,,,,,,,,,,,,
django,6099,closed,-,-,-,1,22,7,,,,,,,,,,,,,,,,,,
django,6137,closed,opened,2016-02-12 22:38:51,,,,,,,,,,,,,,,,,,,,,,
django,6137,closed,title,2016-02-12 22:38:51,00:00,,1,,"b""b' Fixed #25251 -Made data migrations available in TransactionTestCase.'""",,,,,,,,,,,,,,,,,
django,6137,closed,body,2016-02-12 22:38:51,00:00,,1,,"b""b' Data loaded in migrations are restored at the beginning of each and all the tables are truncated at the end of these test cases. It means that", at the end of your whole test suite, if there was at least one  , the migrated data are no more in the database, specially surprising when using option. I propose to restore data at the end of a (just after the  )," to be sure that the next test will be in the expected environment (data loaded from initial migrations) and the database will be in the expected state at the end of the test running suite. This PR follows the discussion related to url  with @timgraham.'""",,,,,,,,,,,,
django,6137,closed,1,2016-02-12 22:38:51,115.87,1,,,"b'b"" I will have a look on generated errors. One seems trivial (python unicode decorator)", the remaining ones are unexpected, specially on sqlite db that I have tested locally with py2/py3. It seems a bit tricky to test an internal function of a in itself," as is then called twice. Hard to know if it\'s my update or the test that is wrong.""'",,,,,,,,,,,,,,
django,6137,closed,2,2016-02-12 22:38:51,1149.8,1,,,"b""b' After some side effects with other tests", specially when defining migrations, I tried to mock the to isolate the impacts of my new test. Seems better now, I had to update which was impacted by my code change. Tests are passing on  ," waiting for tests. travis seems to be stuck since build  . It should be better with last PR updates.'""",,,,,,,,,,,,,
django,6137,closed,3,2016-02-12 22:38:51,980.73,1,,,"b'b"" The way the works"," it will break if you don\'t use your mixin. I suggest changing it to: It was written the way it is because of [this]url  comment but it is way easier to just explicitly set  . That way it also doesn\'t mess with your changes.""'",,,,,,,,,,,,,,,,
django,6137,closed,4,2016-02-12 22:38:51,443.05,,1,,"b'b"" @MoritzS About your proposition for  ", that\'s what I have initially done," but I had some tests failing because they were trying to load from some data from  . That\'s why I finished by isolating these data to not be dependent from other tests.""'",,,,,,,,,,,,,,,
django,6137,closed,5,2016-02-12 22:38:51,7.35,,1,,"b""b' Yeah", I got the same errors," but they only occurred because was set to in instead of in the class definition. For me all tests pass with my proposed test case.'""",,,,,,,,,,,,,,,
django,6137,closed,6,2016-02-12 22:38:51,912.87,,1,,"b'b"" @MoritzS I think it\'s better to isolate the data that were provoking this problem because of test dependencies than updating the inner logic of another test than mine.""'",,,,,,,,,,,,,,,,,
django,6137,closed,7,2016-02-12 22:38:51,8.42,,1,,b'b\' I\\\'m not sure what you mean. The logic of the other test is exactly the same as it was before," my changes merely were a ""fix"" that in turn allow your changes to the TestCase to not fail on the old (buggy) test.\''",,,,,,,,,,,,,,,,
django,6137,closed,8,2016-02-12 22:38:51,43.3,,1,,"b'b"" @MoritzS I tried your suggestion. Some tests are failing url  I have spent a lot of time on this MR to make the tests pass"," and I realized that there were always some side effects somewhere else. That\'s why I decided at the end to not be dependent to any other test and decided to also mock in  ""'",,,,,,,,,,,,,,,,
django,6137,closed,9,2016-02-12 22:38:51,277.78,,1,,"b""b' @MoritzS Any other feedback ?'""",,,,,,,,,,,,,,,,,
django,6137,closed,10,2016-02-12 22:38:51,1.2,,1,,b'b\' Don\\\'t we need to update the [Rollback emulation documentation]url  Also," a mention in the release notes is needed -I guess in the ""Backwards-incompatible changes"" section.\''",,,,,,,,,,,,,,,,
django,6137,closed,11,2016-02-12 22:38:51,45.83,,,1,"b'b"" I agree the test isn\'t the most elegant but I don\'t have an alternative right now. Moritz", if you\'d like to try to craft an alternative test," I\'ll happily compare the two approaches.""'",,,,,,,,,,,,,,,
django,6137,closed,12,2016-02-12 22:38:51,293.95,,1,,"b""b' @timgraham I will write some details in rollback emulation section"," and think about what we can say on any backward-incompatible change.'""",,,,,,,,,,,,,,,,
django,6137,closed,13,2016-02-12 22:38:51,92.35,,1,,"b'b"" I tried to write the test as I suggested it", however now I get what @romgar meant. To test this the migrations have to run _before_ the test case even gets touched," so doesn\'t work. Also you somehow have to emulate  . I\'m now convinced that monkey patching the internals of the connection is the best thing to do here.""'",,,,,,,,,,,,,,,
django,6137,closed,14,2016-02-12 22:38:51,1049.6,,1,,"b""b' Closing in favor of url '""",,,,,,,,,,,,,,,,,
django,6137,closed,closed,2016-03-17 17:00:57,1102.1,3,12,1,,,,,,,,,,,,,,,,,,
django,6137,closed,15,2016-02-12 22:38:51,403.02,,1,,"b""b' @aaugustin The MR we were discussing today"," and the proposition I initially made to change the way was  the db. @MarkusH The MR we can have a look tomorrow during the sprint.'""",,,,,,,,,,,,,,,,
django,6137,closed,reopened,2016-11-05 09:23:05,982.13,3,13,1,,,,,,,,,,,,,,,,,,
django,6137,closed,16,2016-02-12 22:38:51,603.97,,,1,"b'b"" A few comments:I\'m strongly convinced that the correct approach is to restore serialized data just after flush. The reason why Django needs to restore it is because Django flushed it. So that\'s the correct point to do it. Restoring it only at the end of tests when is enabled seems wrong. (It\'s fairly obvious to me", happy to elaborate if someone isn\'t convinced.)I reviewed the documentation and it seems that this change falls within the currently described semantics. So it isn\'t backwards-incompatible (but is worth mentioning in the release notes as people often have fragile code around test setup and data loading). I talked with @romgar and here\'s the remaining problem as far as I understand it. Django currently allows each to declare whether they need the initial data to be restored with the attribute. If we\'re moving the restore of the initial data at the end of the _previous_  , then that test case needs to know about the value of in the _following_ test case, and the last always needs to restore data. Otherwise," if the next run uses the initial data will go missing for the entire execution. (This is where the ticket started.) In the test runner we have this line: At this point we know the sequence of and  . I think we should loop on all test cases here and set as well as  . (Well hopefully you get the idea.) Then you\'d use that flag to restore data after  .""'",,,,,,,,,,,,,
django,6137,closed,17,2016-02-12 22:38:51,2.68,,1,,"b'b"" This isn\'t the most elegant approach but it\'s the best you can do to preserve the current API. The situation is fundamentally messy; IMO expresses the only behavior that makes sense here but it can\'t be implemented within the that declares it.""'",,,,,,,,,,,,,,,,,
django,6137,closed,18,2016-02-12 22:38:51,23.45,,,1,b'b\' With the current implementation (leaving aside for a minute):the first always gets a database populated with the initial data \\xe2\\x80\\x94 and will reload this data if for no good reason, which suggest this isn\\\'t the right point to do itfurther get an empty database if and a database populated with the initial data if  . However, when they\\\'re run in isolation," we\\\'re back to the ""first"" case", and these test cases get a populated database. So depending on an empty database is an error. So there\\\'s an invariant: an gets either an empty database or a database populate with the initial date. I don\\\'t think it\\\'s reasonable to depend on this invariant and that\\\'s why I don\\\'t mind that the solution I recommend above breaks it. Since the database can be empty you can\\\'t rely on what\\\'s in there. You might rely on the fact that there isn\\\'t more than a given number of objects (your initial data) but that\\\'s super fragile -what if you add more initial data? For this reason, I think documenting the change is sufficient. After the change, gets exactly the initial data if is  , like it currently does, and whatever the previous test case left behind if is (instead of either an empty database or the initial data).\'',,,,,,,,,
django,6137,closed,19,2016-02-12 22:38:51,20.97,,1,,"b'b"" It\'s unclear to me that we can write meaningful tests for this behavior of the test runner. Even if we write in the Django test suite", they\'ll depend on being executed in order and will fail in isolation," which doesn\'t seem acceptable to me.""'",,,,,,,,,,,,,,,
django,6137,closed,20,2016-02-12 22:38:51,0.13,,1,,"b""b' Pro tip:  '""",,,,,,,,,,,,,,,,,
django,6137,closed,21,2016-02-12 22:38:51,27.12,,1,,"b""b' Closing this on in favor of #7528 '""",,,,,,,,,,,,,,,,,
django,6137,closed,closed,2016-11-11 11:02:17,99.2,3,17,3,,,,,,,,,,,,,,,,,,
django,6137,closed,-,-,-,3,17,3,,,,,,,,,,,,,,,,,,
django,6156,closed,opened,2016-02-17 22:58:26,,,,,,,,,,,,,,,,,,,,,,
django,6156,closed,title,2016-02-17 22:58:26,00:00,,1,,"b""b' Fixed #26229 -Improved check for model admin check '""",,,,,,,,,,,,,,,,,
django,6156,closed,body,2016-02-17 22:58:26,00:00,,1,,"b""b' I found this tricky to get my head around", so hopefully I have got the logic correct. The existing tests pass following my change," and I have added an extra unit test.'""",,,,,,,,,,,,,,,
django,6156,closed,1,2016-02-17 22:58:26,960.25,,1,,"b""b' @gchp Please could you review this patch"," since it changes the code you wrote in d8f19bb3b6.'""",,,,,,,,,,,,,,,,
django,6156,closed,closed,2016-02-29 10:10:10,671.73,0,3,0,,,,,,,,,,,,,,,,,,
django,6156,closed,reopened,2016-02-29 10:12:44,2.57,0,3,0,,,,,,,,,,,,,,,,,,
django,6156,closed,2,2016-02-17 22:58:26,1206.12,,1,,"b'b"" @timgraham I\'ve added a regression test  ", made the minor doc string fixes you suggested," and rebased the patch against master.""'",,,,,,,,,,,,,,,
django,6156,closed,3,2016-02-17 22:58:26,46.97,,1,,"b'b"" I rebased incorrectly. Closing pull request until it\'s fixed.""'",,,,,,,,,,,,,,,,,
django,6156,closed,closed,2016-02-29 11:51:46,99.03,0,5,0,,,,,,,,,,,,,,,,,,
django,6156,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,
django,6314,closed,opened,2016-03-19 23:57:41,,,,,,,,,,,,,,,,,,,,,,
django,6314,closed,title,2016-03-19 23:57:41,00:00,1,,,"b""b' A humanized ImportError message in '""",,,,,,,,,,,,,,,,,
django,6314,closed,body,2016-03-19 23:57:41,00:00,,1,,b'b\' I\\\'ve been teaching Django for several years in classes [like this]url Again and again I\\\'ve seen newbies flounder when they receive this error after running  . The root cause is almost always simple," like forgetting install Django with pip or neglecting to ""activate"" a virtual environment. But the Python jargon doesn\\\'t do much to help people new to our world connect the dots.  My proposal: Catch that error and print out a more verbose message that explains to the user exactly what\\\'s wrong. Here\\\'s my draft. I\\\'d welcome any changes", but I think something along these lines could better welcome new people into Django.  \'',,,,,,,,,,,,,,,
django,6314,closed,1,2016-03-19 23:57:41,1409.15,1,,,"b'b"" Do you know of any projects that do something similar? I guess I\'m a bit skeptical of doing something non-standard. Newbies will need to learn how to interpret import errors one way or another.""'",,,,,,,,,,,,,,,,,
django,6314,closed,2,2016-03-19 23:57:41,1197.28,,1,,"b'b"" In the end this kind of thing is", of course, subjective. However, when introduced strategically I believe it can help provide a handrail for new users.  Django itself is an example of the practice in action. Take a look at the root imports for the backend [right here]url  By giving a couple simple clues for new users, you can help them get a foothold more quickly. I don\'t have a sweeping survey of users, but my experience teaching Django to dozens of Python newbies is that this particular error frequently deters people from getting started.  I\'m open to alternative ideas," but I\'m confident something a little more literate would make a significant difference. I also don\'t see what it could hurt since the same underlying error would be called regardless.""'",,,,,,,,,,,
django,6314,closed,3,2016-03-19 23:57:41,42.55,,1,,"b'b"" +1. Even if you know Python"," the existing error seems to obfuscate the problem for anyone who doesn\'t know django\'s internal structure. (The fact that the first import is  doesn\'t seem intuitively obvious until you know how  interacts with the framework...)""'",,,,,,,,,,,,,,,,
django,6314,closed,4,2016-03-19 23:57:41,0.37,1,,,"b""b' Grunt throws (sic) for reference of a similar error message. +1 to this PR '""",,,,,,,,,,,,,,,,,
django,6314,closed,5,2016-03-19 23:57:41,38.1,,1,,"b'b"" +1 A good error message teaches. It can make the error not only understandable but less likely to be repeated. As someone first exposed to Django in a @palewire class"," this error is an obfuscating barrier both at initial exposure to the framework and again later working on one\'s own. It simply isn\'t descriptive of the issue in a way a newbie will understand how to fix. ""'",,,,,,,,,,,,,,,,
django,6314,closed,6,2016-03-19 23:57:41,126.1,,1,,"b""b' How about:  '""",,,,,,,,,,,,,,,,,
django,6314,closed,7,2016-03-19 23:57:41,67.82,,,1,"b""b' I love it. '""",,,,,,,,,,,,,,,,,
django,6314,closed,closed,2016-03-28 23:59:03,1.37,3,5,1,,,,,,,,,,,,,,,,,,
django,6314,closed,reopened,2016-03-28 23:59:27,0.4,3,5,1,,,,,,,,,,,,,,,,,,
django,6314,closed,8,2016-03-19 23:57:41,697.3,,,1,"b""b' merged in 724a279849a5cd09cdb5ef201fe6958a4c26fe73"," thanks.'""",,,,,,,,,,,,,,,,
django,6314,closed,closed,2016-03-29 11:36:21,696.9,3,5,2,,,,,,,,,,,,,,,,,,
django,6314,closed,9,2016-03-19 23:57:41,1110.87,,1,,"b""b' See the discussion on the commit: url  Reopening to (at least) change PATH to PYTHONPATH.'""",,,,,,,,,,,,,,,,,
django,6314,closed,reopened,2016-03-30 06:07:13,1110.87,3,6,2,,,,,,,,,,,,,,,,,,
django,6314,closed,10,2016-03-19 23:57:41,668.53,,1,,"b""b' Posted to [django-developers]url  to get more feedback.'""",,,,,,,,,,,,,,,,,
django,6314,closed,11,2016-03-19 23:57:41,18.35,,1,,"b""b' Opened a ticket: url and a new PR: url '""",,,,,,,,,,,,,,,,,
django,6314,closed,closed,2016-04-09 17:34:06,686.88,3,8,2,,,,,,,,,,,,,,,,,,
django,6314,closed,-,-,-,3,8,2,,,,,,,,,,,,,,,,,,
django,6316,closed,opened,2016-03-20 19:55:03,,,,,,,,,,,,,,,,,,,,,,
django,6316,closed,title,2016-03-20 19:55:03,00:00,,1,,"b""b' Fixed #26378 -Fixed incorrect behavior in GenericIPAdressField'""",,,,,,,,,,,,,,,,,
django,6316,closed,body,2016-03-20 19:55:03,00:00,,1,,"b'b\' Mixed IPv4 and IPv6 representation is not accepted if unpack_ipv4=False and the first byte of the IPv4 is ""0"" References this: url \''",,,,,,,,,,,,,,,,,
django,6316,closed,closed,2016-03-22 18:36:07,1361.07,0,2,0,,,,,,,,,,,,,,,,,,
django,6316,closed,reopened,2016-03-22 18:42:01,5.9,0,2,0,,,,,,,,,,,,,,,,,,
django,6316,closed,1,2016-03-20 19:55:03,1370.33,,1,,"b""b' Done :-)'""",,,,,,,,,,,,,,,,,
django,6316,closed,2,2016-03-20 19:55:03,1057.63,,,1,"b""b' merged in 32c8e43ef1e859fa55af2f470a2a1120f51afabe"," thanks!'""",,,,,,,,,,,,,,,,
django,6316,closed,closed,2016-03-23 12:23:01,1061.0,0,3,1,,,,,,,,,,,,,,,,,,
django,6316,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,
django,6358,closed,opened,2016-03-29 21:19:43,,,,,,,,,,,,,,,,,,,,,,
django,6358,closed,title,2016-03-29 21:19:43,00:00,,1,,"b""b' Fixed  constructor in openlayers-.'""",,,,,,,,,,,,,,,,,
django,6358,closed,body,2016-03-29 21:19:43,00:00,,1,,"b'b"" Old constructor didn\'t work anymore""'",,,,,,,,,,,,,,,,,
django,6358,closed,1,2016-03-29 21:19:43,218.28,,1,,"b""b' Can you provide any additional details? Is it broken in Django 1.9  1.8?'""",,,,,,,,,,,,,,,,,
django,6358,closed,2,2016-03-29 21:19:43,504.7,,1,,"b'b\' I tested it with Django 1.9 and OpenLayers 2.13.1.The error says: ""Uncaught TypeError:  is not a constructor"".After changing the constructor it works again.\''",,,,,,,,,,,,,,,,,
django,6358,closed,3,2016-03-29 21:19:43,357.5,,1,,"b'b"" @claudep"," can you advise? Not sure if it\'s been broken since its introduction in b16b72d415808073da0418de93bf32f71ead959d. Not sure if we should try for a test too.""'",,,,,,,,,,,,,,,,
django,6358,closed,4,2016-03-29 21:19:43,42.35,,,1,"b""b' Ticket and test"," yes please!'""",,,,,,,,,,,,,,,,
django,6358,closed,5,2016-03-29 21:19:43,501.12,,1,,"b""b' @bgaechter"," any chance you can provide a ticket and test?'""",,,,,,,,,,,,,,,,
django,6358,closed,6,2016-03-29 21:19:43,884.53,,1,,"b""b' Closing due to lack of follow up.'""",,,,,,,,,,,,,,,,,
django,6358,closed,closed,2016-04-27 15:08:12,1068.48,0,7,1,,,,,,,,,,,,,,,,,,
django,6358,closed,7,2016-03-29 21:19:43,32.2,1,,,"b'b"" I investigated about adding a test. This does not belong to JS tests", and I\'m reluctant to add a live server test with network dependencies. I think we could just commit this," only fools never change their mind!""'",,,,,,,,,,,,,,,
django,6358,closed,reopened,2016-05-02 15:40:24,32.2,1,7,1,,,,,,,,,,,,,,,,,,
django,6358,closed,8,2016-03-29 21:19:43,27.23,,,1,"b""b' Committed in 4e2ee866275. Thanks!'""",,,,,,,,,,,,,,,,,
django,6358,closed,closed,2016-05-02 16:07:38,27.23,1,7,2,,,,,,,,,,,,,,,,,,
django,6358,closed,-,-,-,1,7,2,,,,,,,,,,,,,,,,,,
django,6385,closed,opened,2016-04-02 23:27:18,,,,,,,,,,,,,,,,,,,,,,
django,6385,closed,title,2016-04-02 23:27:18,00:00,,1,,"b""b' Fixed #14370 -Added select2 widget for related object fields in admin.'""",,,,,,,,,,,,,,,,,
django,6385,closed,body,2016-04-02 23:27:18,00:00,,1,,"b""b' Adds jQuery Select2 version 4 to support async select inputs including a search feature.  **I split the PR in two commits", one is vendoring select2, one contains my code.**  ### Links & Discussions * [djangoproject#14370]url  * url  * url  * url ### Changes: ~~jQuery noConflict is set to false," jQuery itself does not get removed form global~~ ~~the new select2 widget is automatically used if the related object has a registered admin and defines search fields~~ only str representation is supported at this point the search feature uses the same field as the model admin ### Todo: [x] ~~Possible deprecation of raw_id field?~~ [x] Release note. (Which release?) [x] Selenium integration tests [x] widget tests [x] pagingnator and page tests [x] view tests [x] admin_site integration tests [x] add permission to json view [x] [system checks]url  '""",,,,,,,,,,,,,,
django,6385,closed,1,2016-04-02 23:27:18,1.95,,,1,"b'b"" @jpic this is a first draft", I tested it manually, it seems fine@timgraham I only added tests for the new json view," I\'ll add the widget tests in the sprint tomorrow""'",,,,,,,,,,,,,,
django,6385,closed,2,2016-04-02 23:27:18,515.58,,,1,"b""b' Nice ! Did you try it on dynamically added formset rows ?'""",,,,,,,,,,,,,,,,,
django,6385,closed,3,2016-04-02 23:27:18,54.17,,,1,"b'b"" @jpic no that can\'t work yet", but I\'m on it today!I also got a lot of documentation ahead of me," but it really depends where this is going. I\'m gonna talk to a couple of people here about it.""'",,,,,,,,,,,,,,,
django,6385,closed,4,2016-04-02 23:27:18,13.35,,1,,"b""b' @codingjoe we use DOMNodeInserted event for dynamically added selects: url  We also have a really small snippet for option renaming using the edit button which you might like: url '""",,,,,,,,,,,,,,,,,
django,6385,closed,5,2016-04-02 23:27:18,465.73,,,1,"b'b"" I might be able to try test this out later this week. Seems to me we should give this a release or two in the real world before deprecating raw_id_fields. Like"," make sure it\'s good enough in practice to replace raw_id_fields.""'",,,,,,,,,,,,,,,,
django,6385,closed,6,2016-04-02 23:27:18,9.98,,1,,"b'b"" Does do permission checks? It seems to me it should require the same permissions as raw_id_fields (so if you\'re logged in to the admin", you can\'t just query that table unless you actually have permission, but maybe that\'s ok) Edit: Actually," maybe we just need to make sure that you have the change permission for the Model that has the foreign key. That way it follows the permissions of a normal ChoiceField.""'",,,,,,,,,,,,,,
django,6385,closed,7,2016-04-02 23:27:18,57.32,,,1,"b'b"" @collinanderson good point", that\'s what I thought. Lets see how it performs.Regarding the permissions, you are correct, the change permission would the right thing to check. I\'ll put it on my list," thanks!""'",,,,,,,,,,,,,
django,6385,closed,8,2016-04-02 23:27:18,729.0,,1,,"b""b' There is a small typo in the diff of : you mean not  .'""",,,,,,,,,,,,,,,,,
django,6385,closed,9,2016-04-02 23:27:18,1.95,,,1,"b""b' @codingjoe  first: Thank you for this great improvement. Next: It would be nice if the autocomplete would be easily re-usable outside the admin"," too. Do you plan to support this?'""",,,,,,,,,,,,,,,,
django,6385,closed,10,2016-04-02 23:27:18,566.42,,1,,"b'b"" @guettli no", not really. We have and for that.The really tricky part is to know which queryset to server as a JSON. solves this by using the cache as a persistent storage shared by all application servers. In you\'ll have to specify that explicitly. I don\'t see a way to get this into core. This should remain a admin only feature for now," just like the raw ID field.""'",,,,,,,,,,,,,,,
django,6385,closed,11,2016-04-02 23:27:18,1396.23,,1,,"b'b"" @codingjoe btw", at some point we\'ll need to eventually get django-developers mailing list approval for vendoring select2. Also," you\'ve been mentioning raw_id_fields. I\'m also hoping we can eventually use select2 to replace filter_ for m2m\'s.""'",,,,,,,,,,,,,,,
django,6385,closed,12,2016-04-02 23:27:18,217.0,,,1,b'b\' @codingjoe you said:Yes, this is true, since the django admin interface needs a generic ajax server part. But I still think it would be great to have a autocomplete component in django which can be used in django apps and the django admin. You can make a BaseWidget available which gets subclassed once in the admin interface and once for the usage in custom apps. I like small systems and having select2 twice in my static directory gives me a bad feeling. Yes it works and does not hurt," but somehow I think ""less is more avoid redundancy"".\''",,,,,,,,,,,,,,
django,6385,closed,13,2016-04-02 23:27:18,86.48,,1,,"b'b"" You don\'t need to have it twice", you can reuse it. For example," this publicfacing-app reuses admin scripts:url  Correct me if I\'m wrong but the idea here is to first incorporateautocompletion in the admin first and then perhaps extract it into.""'",,,,,,,,,,,,,,,
django,6385,closed,14,2016-04-02 23:27:18,832.58,,,1,"b""b' @jpic  nice to hear", that you want it in ," too. I just ask myself if this is the best order for the steps for the implementation:1. in admin2. then in .'""",,,,,,,,,,,,,,,
django,6385,closed,15,2016-04-02 23:27:18,129.65,,1,,"b'b"" @guettli @jpic I\'d like to end the discussion about a feature beyond Django admin at this point. Please submit another ticket for that"," it\'s beyond the scope of the current ticket and seems to need a longer discussion.""'",,,,,,,,,,,,,,,,
django,6385,closed,16,2016-04-02 23:27:18,1.87,,1,,"b'b"" @collinanderson I\'m not familiar with that process"," can you help me out here?""'",,,,,,,,,,,,,,,,
django,6385,closed,17,2016-04-02 23:27:18,38.8,,1,,"b'b"" Yeah", I also agree adding generally to forms is a lot more work," and it\'s something we could maybe do down the road. I think the next set is to run this all by django-developer\'s mailing list. Though maybe we should wait til the  discussion plays out first. url  ""'",,,,,,,,,,,,,,,
django,6385,closed,18,2016-04-02 23:27:18,40.4,,1,,"b'b"" @collinanderson we\'ll need to vendor select2 anyways"," it can\'t be a dependency for the sake of offline development and I had to manually add a wrapper to support the jQuery\'s  .[I posted into the mailing list.]url ""'",,,,,,,,,,,,,,,,
django,6385,closed,19,2016-04-02 23:27:18,178.37,,,1,"b""b' I was able to try out a little and added some notes. Super cool. :)'""",,,,,,,,,,,,,,,,,
django,6385,closed,20,2016-04-02 23:27:18,1290.52,,,1,"b'b"" @kevin-brown thanks for the review"," good the have some feedback form a select2 dev@collinanderson thanks to you too of course :)I\'ll try to get your these changes in this weekend and add some of the tests that I\'m still missing.""'",,,,,,,,,,,,,,,,
django,6385,closed,21,2016-04-02 23:27:18,188.13,,1,,"b""b' Ok"," I fixed all the review notes and added support for M2M fields. That was actually a 1 liner :)'""",,,,,,,,,,,,,,,,
django,6385,closed,22,2016-04-02 23:27:18,525.43,,,1,"b'b"" Awesome.  are working for me"," and m2m is also working well. This is so cool. It looks like there\'s just one test failure that needs to be fixed?""'",,,,,,,,,,,,,,,,
django,6385,closed,23,2016-04-02 23:27:18,4.72,,1,,"b""b' Also"," I think there should be a check to be sure the User has access to change the model containing the field.'""",,,,,,,,,,,,,,,,
django,6385,closed,24,2016-04-02 23:27:18,871.08,,1,,"b'b"" @timgraham I\'m slowly getting there. One question", I want to add system checks," as we have for  . Should I add new once or make the one for check the as well?url ""'",,,,,,,,,,,,,,,
django,6385,closed,25,2016-04-02 23:27:18,49.43,1,,,"b'b"" No string opinion but I guess I don\'t see much harm in reusing the existing error codes for the checks if they work similarly.""'",,,,,,,,,,,,,,,,,
django,6385,closed,26,2016-04-02 23:27:18,1157.75,,1,,"b'b"" Ok", I\'m done with my own checklist. I need some serious reviews now to get going. @timgraham since I didn\'t no one was against vendoring Select2, I don\'t see anything holding this feature back. I\'d like to start writing release notes," when would this be released?""'",,,,,,,,,,,,,,
django,6385,closed,27,2016-04-02 23:27:18,210.48,,1,,"b'b"" 1.10 alpha is scheduled for May 16 so there\'s probably enough time to get this polished by then.""'",,,,,,,,,,,,,,,,,
django,6385,closed,28,2016-04-02 23:27:18,159.07,,1,,"b""b' Please add tests in for the new checks.'""",,,,,,,,,,,,,,,,,
django,6385,closed,29,2016-04-02 23:27:18,26.6,,1,,"b'b"" A small bug: after using the pencil icon to open a pop and edit the related object"," the representation of the object in the select box isn\'t updated after clicking the save of the popup. Also I\'m getting a failure for (admin_ ""'",,,,,,,,,,,,,,,,
django,6385,closed,30,2016-04-02 23:27:18,945.08,,1,,"b'b"" @timgraham they are not updated"," because there isn\'t really a way to do that in select2 \\xf0\\x9f\\x98\\x9e ""'",,,,,,,,,,,,,,,,
django,6385,closed,31,2016-04-02 23:27:18,176.15,,1,,"b'b\' About ""they are not updated""", maybe you could try submitting an enhancement to select2 to allow it?\'',,,,,,,,,,,,,,,,
django,6385,closed,32,2016-04-02 23:27:18,8.92,,1,,"b'b"" @timgraham we have one already in select2/select2#4249 This is our hack meanwhile: url  If that\'s not what you\'re talking about"," could you reproduce your issue [here]url  ?""'",,,,,,,,,,,,,,,,
django,6385,closed,33,2016-04-02 23:27:18,14.72,,1,,b'b\' @jpic no it\\\'s slightly different, but might be solved within your commit. @timgraham not really," no. I\\\'m not that much of a ""javascript ninja"". I don\\\'t believe this is a blocker. I would rather remove inline editing capabilities.\''",,,,,,,,,,,,,,,
django,6385,closed,34,2016-04-02 23:27:18,7.77,,,1,"b'b"" @codingjoe it wasn\'t clear to me either how I fixed this issue", note that I\'m running a fairly recent perhaps even unreleased source tree for select2 in DAL, so that\'s worth trying to.hope this helps," keep up the great work !:guitar:""'",,,,,,,,,,,,,,
django,6385,closed,35,2016-04-02 23:27:18,279.08,,1,,"b'b"" @timgraham what\'s next. I fixed it all. I can rebase everything", but needs to be done to get this finally merged," before the 1.10-RC1?""'",,,,,,,,,,,,,,,
django,6385,closed,36,2016-04-02 23:27:18,3.87,,1,,"b'b"" It needs to be targeted for 1.11 now that we\'re past the feature freeze for 1.10.""'",,,,,,,,,,,,,,,,,
django,6385,closed,37,2016-04-02 23:27:18,2.83,1,,,"b'b"" hm... that\'s somewhat disappointing", but hey, if that is really it," than I\'ll do it right away.Maybe it\'s even better to get it into 1.11 to get more people into testing this feature.""'",,,,,,,,,,,,,,
django,6385,closed,38,2016-04-02 23:27:18,2.08,,1,,"b""b' Just a note"," Select2 4.0.3 was released. url  This should solve the editing problem that you were seeing before (among other bugs).'""",,,,,,,,,,,,,,,,
django,6385,closed,39,2016-04-02 23:27:18,19.0,,,1,"b""b' @kevin-brown thanks! I updated to versoin 4.0.3'""",,,,,,,,,,,,,,,,,
django,6385,closed,40,2016-04-02 23:27:18,913.6,,1,,"b""b' @timgraham what do you think: Shall we do it? Do you need me to rebase and squash it first?'""",,,,,,,,,,,,,,,,,
django,6385,closed,41,2016-04-02 23:27:18,121.62,,1,,"b""b' Do what?'""",,,,,,,,,,,,,,,,,
django,6385,closed,42,2016-04-02 23:27:18,2.6,,1,,"b""b' @timgraham merge this feature of course \\xf0\\x9f\\x98\\x86 '""",,,,,,,,,,,,,,,,,
django,6385,closed,43,2016-04-02 23:27:18,65.82,,,1,"b'b"" It\'s not a great time to merge huge features until after 1.10 is released but rebasing and squashing is fine to do.""'",,,,,,,,,,,,,,,,,
django,6385,closed,44,2016-04-02 23:27:18,148.98,,1,,"b'b"" \\xf0\\x9f\\x98\\x90  ok"," squashed. I\'ll rebase it after the 1.10 release.""'",,,,,,,,,,,,,,,,
django,6385,closed,45,2016-04-02 23:27:18,1329.72,,1,,"b'b\' Did you consider implementing ""get_autocomplete_fields""? That\\\'s an inevitable feature request (here\\\'s the same for ""get_raw_id_fields"": url \''",,,,,,,,,,,,,,,,,
django,6385,closed,46,2016-04-02 23:27:18,13.15,,1,,"b'b"" The selenium test isn\'t passing for me:  Also sent a PR for a few cosmetic edits: url ""'",,,,,,,,,,,,,,,,,
django,6385,closed,47,2016-04-02 23:27:18,1395.27,,1,,"b""b' Is there any reason to have this in the admin and not more generically?'""",,,,,,,,,,,,,,,,,
django,6385,closed,48,2016-04-02 23:27:18,9.03,,,1,"b""b' @apollo13 a generic implementation in Django is not as easy as it seems. We had a lot of dicussion about it"," and there are two really good packages for that: django-select2 and django-autocomplete-light. But I think nether @jpic or me would recommend any of those packages to be merged into Django at this point.L'""",,,,,,,,,,,,,,,,
django,6385,closed,49,2016-04-02 23:27:18,11.1,,1,,"b'b\' Any links to that ""lot of discussion""?\''",,,,,,,,,,,,,,,,,
django,6385,closed,50,2016-04-02 23:27:18,118.57,1,,,"b'b"" @apollo13 most of the discussion happened on DjangoConEu2016. To sum it up:you\'d need to vendor select2 into corethus we would ship JS code for the very first timewe don\'t have in coreyou can\'t make workyou must define a view for each select2 field manually", or you use my caching hack, which is a security risk if you misconfigure your application Trust me, we gave it much thought, but ultimately it\'s not worth the effort. @jpic and me maintain to different but very stable implementations, that many people use. I\'m totally open to reconsider this, but for now," it\'s a good start to get this into the admin.""'",,,,,,,,,,
django,6385,closed,51,2016-04-02 23:27:18,7.1,,,1,"b'b"" @apollo13 but it\'s a good point. I should probably add a link in the documentation that points to a discussion"," so people understand why it\'s not available in regular forms.""'",,,,,,,,,,,,,,,,
django,6385,closed,52,2016-04-02 23:27:18,878.73,,1,,"b""b' @timgraham since Django 1.10 is released", there should be nothing stopping us from merging," is there?'""",,,,,,,,,,,,,,,
django,6385,closed,53,2016-04-02 23:27:18,297.8,,1,,"b'b\' Any response about  ? You need to uncheck ""Patch needs improvement"" on the ticket after you update the patch so the ticket appears in the review queue.\''",,,,,,,,,,,,,,,,,
django,6385,closed,54,2016-04-02 23:27:18,1223.07,,,1,"b'b"" @timgraham good point", I\'ll add and update the ticket," thanks!""'",,,,,,,,,,,,,,,
django,6385,closed,55,2016-04-02 23:27:18,1406.38,,,1,"b'b""   is added"," I changed the ticket. I\'m happy when you are.""'",,,,,,,,,,,,,,,,
django,6385,closed,56,2016-04-02 23:27:18,191.25,,,1,"b""b' @timgraham thanks for the comments"," you will find them all fixed in separate comments.'""",,,,,,,,,,,,,,,,
django,6385,closed,57,2016-04-02 23:27:18,712.83,,1,,"b""b' Please squash commits when updating.'""",,,,,,,,,,,,,,,,,
django,6385,closed,58,2016-04-02 23:27:18,148.1,,1,,"b'b"" @timgraham I\'m a little lost here. I don\'t know why some tests are failing. I didn\'t do anything in  . I did try to fix it"," but it only worked for py3 for no apparent reason. Do you know what I\'m missing here?""'",,,,,,,,,,,,,,,,
django,6385,closed,59,2016-04-02 23:27:18,968.77,,,1,"b""b' Ok", done," thanks!'""",,,,,,,,,,,,,,,
django,6385,closed,60,2016-04-02 23:27:18,955.73,,1,,"b""b' @timgraham I rebased again'""",,,,,,,,,,,,,,,,,
django,6385,closed,61,2016-04-02 23:27:18,130.53,,1,,"b'b"" If it\'s ready for review", don\'t forget to update the ticket. By the way," maybe you have some thoughts about url ""'",,,,,,,,,,,,,,,
django,6385,closed,62,2016-04-02 23:27:18,44.68,,1,,"b""b' @timgraham thanks for forwarding the message'""",,,,,,,,,,,,,,,,,
django,6385,closed,63,2016-04-02 23:27:18,361.05,,1,,"b'b"" @timgraham what do you think? can we merge it? I\'d really like to get some feedback at DUTH from some early birds to make sure I can provide patches until the next release.""'",,,,,,,,,,,,,,,,,
django,6385,closed,64,2016-04-02 23:27:18,122.15,1,,,"b'b"" Sorry", I haven\'t looked again. I mean," anyone is welcome to test and review the branch. I feel like I\'m the only one who\'s done that.""'",,,,,,,,,,,,,,,
django,6385,closed,65,2016-04-02 23:27:18,971.1,,1,,"b'b"" @timgraham no problem. I understand that this isn\'t an small feature and it needs a lot of attention.I\'ll try to get some more people to review it on DUTH next weekend.""'",,,,,,,,,,,,,,,,,
django,6385,closed,66,2016-04-02 23:27:18,615.07,,1,,"b""b' @codingjoe Absolutely", I would appreciate it if we could talk about it at DUTH, especially about permissions & security. The current patch as is is quite big," so talking about it will certainly make it easier for me to review.'""",,,,,,,,,,,,,,
django,6385,closed,67,2016-04-02 23:27:18,795.78,,,1,"b""b' Screenshot of the admin page (on firefox at least):![selection_506]url  Please extend the width of the fields to match the normal textfields etc\\xe2\\x80\\xa6 Especially for m2m input"," the current form is quite small. This probably has to be patched in select2 itself: Clicking on the label of the input should open the select box.'""",,,,,,,,,,,,,,,,
django,6385,closed,68,2016-04-02 23:27:18,56.12,,1,,"b'b"" I am getting on the console. Would it make sense to require ordering? (Personally I don\'t think so"," in which case we probably might wanna silence that warning somehow)""'",,,,,,,,,,,,,,,,
django,6385,closed,69,2016-04-02 23:27:18,1329.82,,1,,"b'b"" I\'ll rebase and squash once @apollo13 had time to review his requested changes.""'",,,,,,,,,,,,,,,,,
django,6385,closed,70,2016-04-02 23:27:18,94.47,1,,,"b""b' @MarkusH @apollo13 I worked my way though all your feedback. I refactored some bit too"," to reuse more code and to avoid confusion.The custom paginator is gone. But I added documentation how to tweek performance if need be.'""",,,,,,,,,,,,,,,,
django,6385,closed,71,2016-04-02 23:27:18,272.5,,,1,"b'b"" Hi", I\'m really happy about this, I\'ve a similar custom implementation for my admin sites.The only different things is the search fields: this implementation relies on  , which not always can be modified (and I cannot update my admin code to this without monkeypatching).Mine version has a custom field," ie: where I tell which fields should use the autocompletition and which fields use for search.""'",,,,,,,,,,,,,
django,6385,closed,72,2016-04-02 23:27:18,1326.38,,,1,"b""b' @rsalmaso This is a good point"," maybe use and if it does not exist fall back to the of the remote admin.'""",,,,,,,,,,,,,,,,
django,6385,closed,73,2016-04-02 23:27:18,13.35,,,1,"b""b' The widget needs a little bit of tuning for firefox 50: ![selection_515]url Also please get rid of the helptext there.'""",,,,,,,,,,,,,,,,,
django,6385,closed,74,2016-04-02 23:27:18,10.83,1,,,"b'b"" Ugh", I mistakenly clicked on approving the review," github doesn\'t let me revert it :/""'",,,,,,,,,,,,,,,
django,6385,closed,75,2016-04-02 23:27:18,136.47,,,1,"b""b' ![selection_516]url  M2M input still needs a few style tweaks if you select many items'""",,,,,,,,,,,,,,,,,
django,6385,closed,76,2016-04-02 23:27:18,4.42,,1,,"b'b\' Using the ""edit""-icon next to a FK does not update the autocomplete widget.\''",,,,,,,,,,,,,,,,,
django,6385,closed,77,2016-04-02 23:27:18,1243.05,,1,,"b""b' @apollo13 the edit button thing is far form trivial. It feels like plenty work to fix it. Is it a must have?'""",,,,,,,,,,,,,,,,,
django,6385,closed,78,2016-04-02 23:27:18,355.93,1,,,"b""b' @codingjoe Yes"," the usability is really bad otherwise.'""",,,,,,,,,,,,,,,,
django,6385,closed,79,2016-04-02 23:27:18,1202.17,,1,,"b'b"" I was surprised that:  gave: Maybe there\'s nothing that can be done about it"," but I was surprised that the order of registering the models affects the check""'",,,,,,,,,,,,,,,,
django,6385,closed,80,2016-04-02 23:27:18,9.33,,1,,"b""b' @timgraham Jupp", I ran into that too, sounds as if system checks are execute during register," which seems wrong.'""",,,,,,,,,,,,,,
django,6385,closed,81,2016-04-02 23:27:18,294.2,,1,,"b""b' Anybody got it to work with relations to self by any chance ?  '""",,,,,,,,,,,,,,,,,
django,6385,closed,82,2016-04-02 23:27:18,840.15,1,,,"b""b' @timgraham agreed that is very confusing. @apollo13 is right"," the checks are performed too early. I added a ticket url  Since this problem is out of scope for this ticket.'""",,,,,,,,,,,,,,,,
django,6385,closed,83,2016-04-02 23:27:18,685.12,,1,,"b'b"" @timgraham as I just came to understand I again missed the feature freeze. So this can not be merged until after the LTS release and won\'t possibly released until the official 2.0 release"," correct?""'",,,,,,,,,,,,,,,,
django,6385,closed,84,2016-04-02 23:27:18,44.87,,1,,"b""b' Correct'""",,,,,,,,,,,,,,,,,
django,6385,closed,85,2016-04-02 23:27:18,770.45,,,1,"b""b' Nooooooo \\xf0\\x9f\\x98\\xad '""",,,,,,,,,,,,,,,,,
django,6385,closed,closed,2017-01-24 12:57:04,809.77,8,53,26,,,,,,,,,,,,,,,,,,
django,6385,closed,reopened,2017-01-24 12:57:15,0.18,8,53,26,,,,,,,,,,,,,,,,,,
django,6385,closed,86,2016-04-02 23:27:18,1.72,1,,,"b'b"" sorry", wrong button," I haven\'t given up... yet""'",,,,,,,,,,,,,,,
django,6385,closed,87,2016-04-02 23:27:18,130.02,,,1,"b'b"" Don\'t give up ! Keep up the great work ! :guitar: ""'",,,,,,,,,,,,,,,,,
django,6385,closed,88,2016-04-02 23:27:18,388.32,,,1,b'b\' Hi @codingjoe," I just ran over url  -looks like a lightweight and great alternative to select2 (I started using it in my projects and it works great). Do you have any experience with it? I think we could fix the ""+""-button issue with it since it simply operates on a text input.\''",,,,,,,,,,,,,,,,
django,6385,closed,89,2016-04-02 23:27:18,819.12,,1,,"b'b"" @apollo13 if i understand history of these projects correctly", selectize was started with the purpose to do a select2 without the problems of select2 v3, but was not maintained much (last commit is from Aug. 2016) so that didn\'t drive the webdev community away from select2 after all. But now," select2 v4 is out but still fresh. That\'s sort of the reason why DAL v3 was designed to support both (and more).""'",,,,,,,,,,,,,,
django,6385,closed,90,2016-04-02 23:27:18,48.85,,,1,"b""b' @jpic thanks", that is good to know. I am using it in my project since it can handle normal input fields easily," which is unsupported or deprecated in newer select2 versions afaik.'""",,,,,,,,,,,,,,,
django,6385,closed,91,2016-04-02 23:27:18,1245.03,,,1,"b'b"" Ok", @apollo13 I fixed the issue that the select field didn\'t update, if you changed a foreign object, using the little pencil icon and popup.  @timgraham this should conclude my work. If no one finds another bug. I had to rebase everything onto the commit that changed widgets to use templates. That was a bit of work, therefore I would encourage you to look of the code one more time (the second commit).  I have holiday until Monday, if we get to finish this up before than," I guess a lot of people would be very happy!  Thanks <3""'",,,,,,,,,,,
django,6385,closed,92,2016-04-02 23:27:18,299.63,,,1,"b""b' This is awesome. Thanks so much.  I found an issue with inlines: The error is:  Do inline models need to also get registered as a ModelAdmin? Maybe there could be a url for:  ?  (my models:)  '""",,,,,,,,,,,,,,,,,
django,6385,closed,93,2016-04-02 23:27:18,105.23,1,,,"b""b' I tried all my nastiest tricks:  relation to self", inlines, dynamically added inline forms,"  It all works for me.  :guitar: :drum: :trumpet: :saxophone: '""",,,,,,,,,,,,,,
django,6385,closed,94,2016-04-02 23:27:18,1364.7,,,1,"b""b' @collinanderson thanks! I just push a commit that should resolve the inline admin issue.'""",,,,,,,,,,,,,,,,,
django,6385,closed,95,2016-04-02 23:27:18,1141.2,,1,,"b'b\' I am still getting  UnorderedObjectListWarning  on the console. This should not happen by default. Also if I get ""No results found"" in the selectbox it is english even though my language is set to german -this should adapt to language code.\''",,,,,,,,,,,,,,,,,
django,6385,closed,96,2016-04-02 23:27:18,2.92,,1,,"b'b"" Removing an item from an m2m selection popup opens the selection box"," don\'t think that is expected behavior.""'",,,,,,,,,,,,,,,,
django,6385,closed,97,2016-04-02 23:27:18,164.9,,,1,b'b\' @apollo13 thanks for your feedback, lets go though it: 1. I removed the custom pagignator. If you get this warning, that means, that you don\\\'t have an order defined in your example application, which you should. Therefore the warning is correct. 2. This is the behavior of Select2, which I would avoid to alter. It also makes sense to me. If you click on an input (be it an x-button in it)," it should focus the input. The ""popup"" as you call it", is in fact the representation of the focus state.\'',,,,,,,,,,
django,6385,closed,98,2016-04-02 23:27:18,0.97,,1,,"b'b"" @timgraham since there haven\'t been any other complaints"," I would kindly ask you for a last review round. Thx <3""'",,,,,,,,,,,,,,,,
django,6385,closed,99,2016-04-02 23:27:18,62.03,1,,,"b'b\' @codingjoe There is one complaint which you haven\\\'t addressed so far afaik: > Also if I get ""No results found"" in the selectbox it is english even though my language is set to german -this should adapt to language code.\''",,,,,,,,,,,,,,,,,
django,6385,closed,100,2016-04-02 23:27:18,1422.78,,,1,"b'b"" @apollo13 good catch", thanks. I just fixed it. It now loads the right locale. I forced pushed, because I had to backport select2 to work with the admin\'s jQuery noConflict setup. It was better make the changes in the select2 source and build it using grunt. I tagged the release of select2. I don\'t know if it makes sense to have a fork here at Django org, anyways here is the release: url I\'ll rebase everything again, it test it manually one last time. I\'ll let you know," once this is ready to roll.""'",,,,,,,,,,,,
django,6385,closed,101,2016-04-02 23:27:18,9.7,,,1,"b'b"" Ok", that should be it. I did another local test round. Works in English \\xf0\\x9f\\x87\\xac\\xf0\\x9f\\x87\\xa7 , German  \\xf0\\x9f\\x87\\xa9\\xf0\\x9f\\x87\\xaa ," Polish \\xf0\\x9f\\x87\\xb5\\xf0\\x9f\\x87\\xb1  and probably a lot more languages that I didn\'t test. Inlines work too. I\'m excited!""'",,,,,,,,,,,,,,
django,6385,closed,102,2016-04-02 23:27:18,10.88,,,1,"b'b"" @codingjoe amazing work! don\'t forget to update the ticket accordingly""'",,,,,,,,,,,,,,,,,
django,6385,closed,103,2016-04-02 23:27:18,505.88,1,,,"b'b"" @MarkusH @apollo13 @timgraham  May I kindly ask you to take one last look at this. I know it\'s a scary big PR"," but I\'d really like to finish this.""'",,,,,,,,,,,,,,,,
django,6385,closed,104,2016-04-02 23:27:18,1025.0,1,,,"b""b' I am wondering if we should just stop using -otherwise updating stuff like select2 will be a pain :/'""",,,,,,,,,,,,,,,,,
django,6385,closed,105,2016-04-02 23:27:18,37.03,,1,,"b'b"" @codingjoe I\'ve replaced your changed select2 version with the original one and found that it difers from 4.0.3 by more than just  changes. Could you please base your changes on the released 4.0.3 and document (in the vendor directory maybe) how select2 needs to be modified to work on Django + add it to our closure compiler stuff so that we can generate a .min version (see url ""'",,,,,,,,,,,,,,,,,
django,6385,closed,106,2016-04-02 23:27:18,63.62,,,1,"b'b""  I\'d be in favor of this change"," this would be an amazing relief.""'",,,,,,,,,,,,,,,,
django,6385,closed,107,2016-04-02 23:27:18,1081.42,,1,,"b'b"" @apollo13 I based my changes on url  which is tagged with 4.0.3. @kevin-brown did you release anything without tagging the change?  @apollo13 the closure compile misses a bit of documentation. Can you point me somewhere", where I can find an example?  Regarding  . I don\'t know. We can do that," but it might break some custom admin integrations.""'",,,,,,,,,,,,,,,
django,6385,closed,108,2016-04-02 23:27:18,662.7,,,1,"b'b"" It would break admin integration for users who are loading jquery again in the admin", ie. grapelli. I think users have had more hard times trying to find out if they would load a third jquery for the autocomplete or rely on the on one provided by grappeli. And another one, for each widget. noConflict() perhaps isn\'t the best way to deal with jQuery in Django after all. We could try another way ie. to update to the latest jQuery release at each Django release without noConflict() and see how the community copes with that. If you would like to know more about the user feedback on noConflict(), I can search stackoverflow and dal issues and see if I find any links, but basically, our userbase has been suffering this noConflict+our will to not load another jQuery but rather make sure we\'re compatible with Django\'s version. Honnestly we\'re all wondering what the best way would be," ie. yourlabs@django-autocomplete-light#831  Keep up the great work <3""'",,,,,,,,,,,
django,6385,closed,109,2016-04-02 23:27:18,13.93,,1,,"b""b' Would it be possible to  select2 in between  and ? That way it attaches to  without needing to modify select2?'""",,,,,,,,,,,,,,,,,
django,6385,closed,110,2016-04-02 23:27:18,532.6,,,1,"b""b' If select2 stashes away the reference that would be an interesting approach. @codingjoe There is not more documentation than the one I linked to :('""",,,,,,,,,,,,,,,,,
django,6385,closed,111,2016-04-02 23:27:18,264.62,,1,,"b""b' @apollo13 that is possible. I wrote a PoC that allows maintaining the order. This way"," we could put the at the bottom. What do you think? Does that make sense?'""",,,,,,,,,,,,,,,,
django,6385,closed,112,2016-04-02 23:27:18,43.88,1,,,"b""b' @codingjoe Regarding your select2 changes"," the loader stuff seems to have changed at least: url  0.3.1 vs 0.3.3 which is kinda weird if you based it on the tag.'""",,,,,,,,,,,,,,,,
django,6385,closed,113,2016-04-02 23:27:18,644.25,,,1,"b'b"" @apollo13: I rebased on master after merging #8667 It now works with the original version of select2 without any changes.  @timgraham I checked the selenium tests too. *works on my machine* ;)  Let me know if you have anything else that you want me to do. Anyways I\'m really excited to get this going :)""'",,,,,,,,,,,,,,,,,
django,6385,closed,114,2016-04-02 23:27:18,906.23,,,1,"b""b' Please do not squash your fixes to my individual comments so they can be reviewed easier!'""",,,,,,,,,,,,,,,,,
django,6385,closed,115,2016-04-02 23:27:18,410.6,1,,,"b'b"" @codingjoe I did do a radical simplification (see my commit message). This should take care of all open issues -I hope I didn\'t break too much.  Sorry for the changes but I think we hit a road block otherwise :/""'",,,,,,,,,,,,,,,,,
django,6385,closed,116,2016-04-02 23:27:18,1336.95,,1,,"b""b' @codingjoe What are your thoughts on the latest changes?'""",,,,,,,,,,,,,,,,,
django,6385,closed,117,2016-04-02 23:27:18,46.85,,1,,"b""b' @codingjoe Those failures were a result of psycopg2 bugs in a new version -not related to our code.'""",,,,,,,,,,,,,,,,,
django,6385,closed,118,2016-04-02 23:27:18,1180.1,,1,,"b""b' Ok"," I have nothing to more to add. @timgraham any other steps we need to take?'""",,,,,,,,,,,,,,,,
django,6385,closed,119,2016-04-02 23:27:18,1067.63,,,1,"b""b' FWIW", I am going to merge that before the 2.0 alpha (and fix fallouts later if needed)," if someone wants to review -now would be a good time :)'""",,,,,,,,,,,,,,,
django,6385,closed,120,2016-04-02 23:27:18,984.65,,1,,"b'b"" @codingjoe"," how\'s your availability this week to address those issues?""'",,,,,,,,,,,,,,,,
django,6385,closed,121,2016-04-02 23:27:18,406.18,,1,,"b'b"" @timgraham not much"," but I\'ll try to find as much time as I can. I really want to make sure this makes it into 2.0 prior to the feature freeze.""'",,,,,,,,,,,,,,,,
django,6385,closed,122,2016-04-02 23:27:18,712.83,,1,,"b""b' @timgraham done \\xf0\\x9f\\x91\\x8d  I addressed all your concerns in separate commits. Let me know if there is anything else I can do. BTW"," I will make sure to be available for any issues that might pop up during the alpha phase.'""",,,,,,,,,,,,,,,,
django,6385,closed,123,2016-04-02 23:27:18,1001.67,,,1,"b""b' @timgraham I believe I addressed all you comments. I took another look at the coverage myself as well. Anything else I can do? It t-7 days now... EXCITEMENT! ;)'""",,,,,,,,,,,,,,,,,
django,6385,closed,124,2016-04-02 23:27:18,168.53,,1,,"b""b' Can I hear an Amen?'""",,,,,,,,,,,,,,,,,
django,6385,closed,125,2016-04-02 23:27:18,125.38,,,1,"b'b\' Testing this out myself... I\\\'m seeing that the first time I click ""Add another"" on an inline", the widget doesn\\\'t initialize," though if I click ""Add another"" again", the next inline row works fine.  (tested in both chrome and firefox on mac)  I can give a minimial project if needed.\'',,,,,,,,,,,,,,
django,6385,closed,126,2016-04-02 23:27:18,209.2,1,,,"b'b"" @timgraham I added a lot new selenium tests overing all the cases you described and all the cases I can think of.  While doing so I discovered and fix two bugs", including the one described by @collinanderson  Furthermore I added tests for the paginator and distinct behavior.  Puh, that took the the whole day, but it\'s done. Just in time," sorry for that :/""'",,,,,,,,,,,,,
django,6385,closed,127,2016-04-02 23:27:18,666.87,,1,,"b'b"" @timgraham is this happening in 2.0? I\'ll watch my notifications closely today"," incase anything comes up. But I am CEST.""'",,,,,,,,,,,,,,,,
django,6385,closed,closed,2017-09-18 18:04:01,306.77,16,69,44,,,,,,,,,,,,,,,,,,
django,6385,closed,128,2016-04-02 23:27:18,1153.85,,1,,"b""b' @codingjoe thanks for all your hard work and patience'""",,,,,,,,,,,,,,,,,
django,6385,closed,129,2016-04-02 23:27:18,82.9,,,1,"b""b' Thanks everyone for all the support", be it mental or though reviews. This has been a crazy but also amazing experience for me.  Thanks to @jpic and @apollo13 for your feedback and the help during the DjangoCon and DUTH sprints.  Special thanks to @kevin-brown who build the foundation this feature rests upon. I hope this will also send more contributors your way to make Select2 even better.  Last but not least," special thanks to @timgraham. Thank you for your guidance and thoroughness and seemingly limitless patience.  Thank you <3'""",,,,,,,,,,,,,,,
django,6385,closed,130,2016-04-02 23:27:18,434.08,1,,,"b'b"" Hi @codingjoe ", I just migrated my test project to django 2a1, and got to test your feature. Congrats for having it merged! It looks nice on the admin model creation form, but I was somewhat expecting to see the same select2 control showing up in the filter pane (considering that I passed this field to both and  ). Do you think this could be considered as a nice to have addition?  For me, the whole point of this autocomplete kind of control is to better handle long lists of items, and list_filter has always been a pain for that. My current workaround is to use an approach like url  , but it\'d be much better to have it available out of the box, as part of django 2, now that select2 has been vendored :)  In any case," keep up the good work \\xf0\\x9f\\x91\\x8d ""'",,,,,,,,
django,6385,closed,131,2016-04-02 23:27:18,597.03,,1,,"b""b' @rom1dep you could propose something like that here: url '""",,,,,,,,,,,,,,,,,
django,6385,closed,132,2016-04-02 23:27:18,7.23,,,1,"b'b"" @rom1dep love the idea! Lets put that into a separate ticket. Now that we have a version of Select2 vendored in Django\'s admin"," it should be simple and not invoice too much discussion \\xf0\\x9f\\x91\\x8d ""'",,,,,,,,,,,,,,,,
django,6385,closed,133,2016-04-02 23:27:18,762.73,,1,,"b""b' Added this ticket to facilitate discussion url '""",,,,,,,,,,,,,,,,,
django,6385,closed,134,2016-04-02 23:27:18,433.47,,,1,"b'b"" @paultiplady There isn\'t really much discussion needed (in the sense that we\'d want that feature)"," if you feel up to the task a PR would be great!""'",,,,,,,,,,,,,,,,
django,6385,closed,135,2016-04-02 23:27:18,249.57,,,1,"b""b' I agree. Just build it"," this would be an amazing addition and actually not too hard to implement.'""",,,,,,,,,,,,,,,,
django,6385,closed,136,2016-04-02 23:27:18,981.3,,,1,"b'b"" Good to know"," thanks -just wanted to check whether anyone else was already looking at it. I\'m unlikely to have time in the next couple weeks but my team needs this feature so I\'ll hopefully find time to have a crack at it soon.""'",,,,,,,,,,,,,,,,
django,6385,closed,-,-,-,17,72,49,,,,,,,,,,,,,,,,,,
django,6578,closed,opened,2016-05-09 18:57:04,,,,,,,,,,,,,,,,,,,,,,
django,6578,closed,title,2016-05-09 18:57:04,00:00,,1,,"b""b' Refs #26445 -Used app config to lookup user model in _create_user'""",,,,,,,,,,,,,,,,,
django,6578,closed,body,2016-05-09 18:57:04,00:00,,1,,b'b\' Ticket comment: url  Even though the UserManager is available to the user model inmigrations," one cannot use create_superuser() or create_user() due tothem using the attached model to set the password. Since model managers used in migrations will _ALWAYS_ refer to theircurrent implementation and will have to work with the migration statemodel and the ""real"" model", using the global app_registry to lookup theuser model is not a problem.\'',,,,,,,,,,,,,,,
django,6578,closed,1,2016-05-09 18:57:04,290.4,,,1,"b""b' Looks good to me.'""",,,,,,,,,,,,,,,,,
django,6578,closed,2,2016-05-09 18:57:04,467.65,,,1,"b""b' Gnaah", Python 2," why??!?'""",,,,,,,,,,,,,,,
django,6578,closed,3,2016-05-09 18:57:04,26.82,,1,,"b'b"" Since Python 2 doesn\'t like my I updated to create an instance of the real Model and not the model from the model state. This", however," will lead to some interesting experience with regards to foreign keys: At which point I see 3 options:1. Only support Python 3 and leave current behavior for Python 22.  Document the oddities as mentioned above3. Withdraw the patch until Django 2.0 I tend to go with 3""'",,,,,,,,,,,,,,,
django,6578,closed,4,2016-05-09 18:57:04,668.52,,1,,"b'b"" I don\'t mind option 1 -it\'s up to you.""'",,,,,,,,,,,,,,,,,
django,6578,closed,closed,2016-09-17 18:57:20,0.27,0,4,2,,,,,,,,,,,,,,,,,,
django,6578,closed,reopened,2017-02-11 00:37:52,340.53,0,4,2,,,,,,,,,,,,,,,,,,
django,6578,closed,5,2016-05-09 18:57:04,0.82,,1,,"b""b' Updated in #8268.'""",,,,,,,,,,,,,,,,,
django,6578,closed,closed,2017-03-30 19:11:16,1113.4,0,5,2,,,,,,,,,,,,,,,,,,
django,6578,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,
django,6621,closed,opened,2016-05-18 02:54:22,,,,,,,,,,,,,,,,,,,,,,
django,6621,closed,title,2016-05-18 02:54:22,00:00,,1,,"b'b"" Fixed #26615 -Password reset token now depends on user\'s email.""'",,,,,,,,,,,,,,,,,
django,6621,closed,body,2016-05-18 02:54:22,00:00,,1,,"b'b"" Per [26615]url  Also refactored user\'s hash generation into methods on User and AbstractUser so that PasswordResetTokenGenerator doesn\'t need to know which fields are available. Resubmit of #6608.""'",,,,,,,,,,,,,,,,,
django,6621,closed,1,2016-05-18 02:54:22,829.3,,,1,"b""b' @berkerpeksag Good point"," added a commit to do it that way. Will squash if looks good.'""",,,,,,,,,,,,,,,,
django,6621,closed,2,2016-05-18 02:54:22,70.78,,,1,"b""b' I think it would be good to mention about the new method at least in .'""",,,,,,,,,,,,,,,,,
django,6621,closed,3,2016-05-18 02:54:22,135.52,,1,,"b""b' @berkerpeksag Fixed everything but the docs"," will get to that later.'""",,,,,,,,,,,,,,,,
django,6621,closed,4,2016-05-18 02:54:22,2.03,,1,,"b""b' Closing for now.'""",,,,,,,,,,,,,,,,,
django,6621,closed,closed,2016-05-18 20:12:00,1037.63,0,4,2,,,,,,,,,,,,,,,,,,
django,6621,closed,5,2016-05-18 02:54:22,576.12,,,1,"b'b"" Thanks", it looks good to me. By the way," you can keep open your pull request even if you don\'t have time to work on it in near future. The advantage of keeping it open is that more people can see and comment about the current state of the patch (so it can be merged much more quickly :))""'",,,,,,,,,,,,,,,
django,6621,closed,reopened,2016-05-20 19:52:06,1420.1,0,4,3,,,,,,,,,,,,,,,,,,
django,6621,closed,6,2016-05-18 02:54:22,845.53,,1,,"b'b"" @berkerpeksag Alright", then I\'m reopening it, but don\'t yet know what to add for the docs," any hints?  Just that the customizing users may have to overwrite  ?""'",,,,,,,,,,,,,,
django,6621,closed,7,2016-05-18 02:54:22,7.27,,,1,"b'b\' @SilasX There\\\'s probably (I didn\\\'t check) _something_ in the docs about password resets. Add something like: ""Apart from the old password"," Django includes the email address when generating the password reset token"". That would also be a good fit for the 1.11 release notes under the section.\''",,,,,,,,,,,,,,,,
django,6621,closed,8,2016-05-18 02:54:22,1388.3,,1,,"b""b' Updated in url '""",,,,,,,,,,,,,,,,,
django,6621,closed,closed,2016-07-08 19:09:13,1397.12,0,6,4,,,,,,,,,,,,,,,,,,
django,6621,closed,-,-,-,0,6,4,,,,,,,,,,,,,,,,,,
django,6696,closed,opened,2016-06-02 20:01:09,,,,,,,,,,,,,,,,,,,,,,
django,6696,closed,title,2016-06-02 20:01:09,00:00,,1,,"b""b' Fixed #26666 -Added error message when assertRedirects encounters external URLs.'""",,,,,,,,,,,,,,,,,
django,6696,closed,body,2016-06-02 20:01:09,00:00,,1,,"b""b' See url '""",,,,,,,,,,,,,,,,,
django,6696,closed,closed,2016-06-02 21:20:05,78.93,0,2,0,,,,,,,,,,,,,,,,,,
django,6696,closed,reopened,2016-06-02 21:23:16,3.18,0,2,0,,,,,,,,,,,,,,,,,,
django,6696,closed,1,2016-06-02 20:01:09,108.62,,,1,"b""b' Thanks for your work. Merged in c7b1b81352533be9b7f4637c12219f59c0964a82 \\xf0\\x9f\\x94\\x94\\xf0\\x9f\\x94\\xa8'""",,,,,,,,,,,,,,,,,
django,6696,closed,closed,2016-06-02 21:49:51,26.58,0,2,1,,,,,,,,,,,,,,,,,,
django,6696,closed,2,2016-06-02 20:01:09,12.37,1,,,"b'b"" Also for future reference", I edited the PR title to try to suggest a more descriptive commit message. Not sure if you tried to keep it short," but we\'re not too picky about longer messages.""'",,,,,,,,,,,,,,,
django,6696,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,
django,6713,closed,opened,2016-06-03 22:04:50,,,,,,,,,,,,,,,,,,,,,,
django,6713,closed,title,2016-06-03 22:04:50,00:00,,,1,"b""b' Fixed #26666 -Validated ALLOWED_HOSTS when running tests and use ALLOWED_HOSTS to check for external domains in assertRedirects'""",,,,,,,,,,,,,,,,,
django,6713,closed,body,2016-06-03 22:04:50,00:00,,,1,"b""b' The original fix to ticket 26666 (PR #6696) broke unit testing of custom hostnames in non-core Django projects when the hostname was passed as part of the path to  This change leverages to facilitate support for custom domain testing in 3rd party packages while increasing the rigor which with we validate ALLOWED_HOSTS (now also in tests)'""",,,,,,,,,,,,,,,,,
django,6713,closed,closed,2016-06-05 04:05:35,360.75,0,0,2,,,,,,,,,,,,,,,,,,
django,6713,closed,reopened,2016-06-05 04:05:36,0.02,0,0,2,,,,,,,,,,,,,,,,,,
django,6713,closed,1,2016-06-03 22:04:50,73.55,,1,,"b""b' Buildbot"," test on selenium.'""",,,,,,,,,,,,,,,,
django,6713,closed,2,2016-06-03 22:04:50,155.1,,,1,"b'b"" Thanks @phildini"," expanded that into a full sentence so it\'s more clear.""'",,,,,,,,,,,,,,,,
django,6713,closed,3,2016-06-03 22:04:50,48.03,,1,,"b""b' Buildbot"," test on selenium.'""",,,,,,,,,,,,,,,,
django,6713,closed,4,2016-06-03 22:04:50,1034.17,,1,,"b'b"" FYI the selenium builds pass locally and it looks like the last failure was due to a build cancellation. I\'m not sure about the previous failure; I\'ve not been able to reproduce those errors and I didn\'t do anything to fix them"," intentionally at least.""'",,,,,,,,,,,,,,,,
django,6713,closed,5,2016-06-03 22:04:50,1245.9,,,1,"b""b' @timgraham @charettes Thanks for the feedback. I agree with including both approaches. PR is updated with an expanded section on tests and multiple host names.'""",,,,,,,,,,,,,,,,,
django,6713,closed,6,2016-06-03 22:04:50,1350.4,,,1,"b""b' merged in 17e661641ddaf8266e7430d83cfb2039abc55df7"," thanks!'""",,,,,,,,,,,,,,,,
django,6713,closed,closed,2016-06-20 15:11:59,666.38,0,3,5,,,,,,,,,,,,,,,,,,
django,6713,closed,-,-,-,0,3,5,,,,,,,,,,,,,,,,,,
django,6765,closed,opened,2016-06-13 06:45:27,,,,,,,,,,,,,,,,,,,,,,
django,6765,closed,title,2016-06-13 06:45:27,00:00,,1,,"b""b' [WIP] Fixed #26626 -Updated decorator_from_middleware() to work with DEP5 style middleware.'""",,,,,,,,,,,,,,,,,
django,6765,closed,body,2016-06-13 06:45:27,00:00,,1,,"b'b"" @timgraham pushing this so you can take a look"," but please don\'t merge yet; this needs some adjustments and documentation still.""'",,,,,,,,,,,,,,,,
django,6765,closed,1,2016-06-13 06:45:27,66.7,,,1,b'b\' @timgraham I think this is ready to go. New middleware doesn\\\'t play 100% nicely with and -because request and response processing are no longer separable, we can\\\'t in the general case automatically defer response processing for when a middleware is converted to decorator. Of course," the main benefit of DEP 5 is precisely that ""request and response processing are no longer separable"," so this isn\\\'t avoidable. I was at least able to add automated handling to  , which takes care of immediate backwards-compatibility. I\\\'m traveling tomorrow and may not be available all the time. Feel free to ping me with questions or requested changes here, but if I don\\\'t get back to you quickly just make whatever changes you feel are needed and merge it; I don\\\'t want to hold you up on the beta.\''
django	6765	closed	2	timgraham	2016-06-13 06:45:27	258.63		+1		b""b' Did you consider requiring middleware using to continue implementing /  , etc?'",,,,,,,,,,,,,,
django,6765,closed,3,2016-06-13 06:45:27,61.55,,1,,"b""b' New approach is url '""",,,,,,,,,,,,,,,,,
django,6765,closed,closed,2016-06-20 13:12:20,386.88,0,4,1,,,,,,,,,,,,,,,,,,
django,6765,closed,reopened,2016-07-14 16:09:16,176.93,0,4,1,,,,,,,,,,,,,,,,,,
django,6765,closed,4,2016-06-13 06:45:27,213.43,,,1,"b'b"" Based on the latest mailing list thread url  I\'m leaning toward this approach instead of #6805. Neither is perfect", but I think the tradeoff might be better here. However, after discussion with @timgraham in IRC, we are thinking to leave the status quo in place for 1.10 and wait for a ticket to be filed about and new-style middleware, in order to have the change be better informed by real-world use cases. If we do go with this approach," I think it could still use a) more reliable detection of new-style vs old-style middleware (maybe default to old instead of new for middleware using so that the behavior of with those middleware doesn\'t change?) and b) a documentation note that you can use to take care of the issue for you. ""'",,,,,,,,,,,,
django,6765,closed,5,2016-06-13 06:45:27,94.15,,,1,"b""b' Closing until we resume work on this"," inspired by feedback from users.'""",,,,,,,,,,,,,,,,
django,6765,closed,closed,2016-08-04 18:19:55,130.65,0,4,3,,,,,,,,,,,,,,,,,,
django,6765,closed,-,-,-,0,4,3,,,,,,,,,,,,,,,,,,
django,7018,closed,opened,2016-08-03 19:17:57,,,,,,,,,,,,,,,,,,,,,,
django,7018,closed,title,2016-08-03 19:17:57,00:00,,1,,"b""b' Fixed #27009 -Made update_session_auth_hash() rotate the session key.'""",,,,,,,,,,,,,,,,,
django,7018,closed,body,2016-08-03 19:17:57,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,7018,closed,1,2016-08-03 19:17:57,9.13,,1,,"b""b' @apollo13"," @shaib -is this what you had in mind?'""",,,,,,,,,,,,,,,,
django,7018,closed,2,2016-08-03 19:17:57,2.3,,,1,"b""b' Looks good"," did you manually test that with two browser windows and database based sessions?'""",,,,,,,,,,,,,,,,
django,7018,closed,3,2016-08-03 19:17:57,1.77,,1,,"b""b' Yes :-)'""",,,,,,,,,,,,,,,,,
django,7018,closed,4,2016-08-03 19:17:57,1.5,,,1,"b""b' K", well I cannot see anything wrong with the patch -as long as we cycle the key before updating the hash (which you do)," we should be fine.'""",,,,,,,,,,,,,,,
django,7018,closed,5,2016-08-03 19:17:57,215.13,,1,,"b""b' LGTM2.'""",,,,,,,,,,,,,,,,,
django,7018,closed,closed,2016-08-15 23:29:01,251.07,0,5,2,,,,,,,,,,,,,,,,,,
django,7018,closed,reopened,2016-08-15 23:29:04,0.05,0,5,2,,,,,,,,,,,,,,,,,,
django,7018,closed,closed,2016-08-15 23:29:12,0.13,0,5,2,,,,,,,,,,,,,,,,,,
django,7018,closed,-,-,-,0,5,2,,,,,,,,,,,,,,,,,,
django,7041,closed,opened,2016-08-07 21:57:28,,,,,,,,,,,,,,,,,,,,,,
django,7041,closed,title,2016-08-07 21:57:28,00:00,,1,,"b""b' Add  '""",,,,,,,,,,,,,,,,,
django,7041,closed,body,2016-08-07 21:57:28,00:00,,1,,"b""b' Add  for more and simple customization result_list in change_list_template '""",,,,,,,,,,,,,,,,,
django,7041,closed,1,2016-08-07 21:57:28,986.23,,1,,"b'b"" Hi", to propose a feature," you need to first get an accepted Trac ticket. It seems this implementation was considered in [the ticket]url  where the method was added but the method version was deemed more flexible. I\'m not sure it\'s worth it to add more complexity by also allowing overriding by attribute.""'",,,,,,,,,,,,,,,
django,7041,closed,closed,2016-08-08 14:23:42,986.23,0,3,0,,,,,,,,,,,,,,,,,,
django,7041,closed,reopened,2016-08-08 14:23:54,0.2,0,3,0,,,,,,,,,,,,,,,,,,
django,7041,closed,2,2016-08-07 21:57:28,109.97,,1,,"b'b\' I think about override like ""change_list_template"" .  And this way needs less code to override ChangeList And whats problem with docs ?\''",,,,,,,,,,,,,,,,,
django,7041,closed,3,2016-08-07 21:57:28,236.33,,,1,b'b\' You can write to the [django-developers mailing list]url  to see if anyone else sees a need for this patch, but personally, I think the existing way is fine," even if a bit verbose. You can click ""Details"" -\''",,,,,,,,,,,,,,
django,7041,closed,closed,2016-08-10 20:10:00,346.1,0,4,1,,,,,,,,,,,,,,,,,,
django,7041,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,
django,7153,open,opened,2016-08-25 16:26:21,,,,,,,,,,,,,,,,,,,,,,
django,7153,open,title,2016-08-25 16:26:21,00:00,,1,,"b""b' Fixed #18763 -Added with_perm() to User manager.'""",,,,,,,,,,,,,,,,,
django,7153,open,body,2016-08-25 16:26:21,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,7153,open,1,2016-08-25 16:26:21,994.32,,1,,"b'b"" Generally I think this would be useful I\'ve wanted to know which users have which permissions in the past. However I can think of a many other cases that would be useful:Which groups have certain permissions", i.e. add  Which users have certain permissions directly assigned," i.e. not from membership of a group.I may want to know what users have permissions regardless of whether they are active.I may want to to exclude superusers from the output only show explicit assignations. Also of note is the parameter which is untested. According to the documentation should return no users if  .""'",,,,,,,,,,,,,,,
django,7153,open,2,2016-08-25 16:26:21,1420.88,,,1,"b""b' Hi @pope1ni", Thank you for review and suggestions.This should probably needs to be discussed in a separate ticket.+1 for adding and parameters (or  ) Tim," what do you think?'""",,,,,,,,,,,,,,,
django,7153,open,3,2016-08-25 16:26:21,6.93,,,1,"b'b"" I think I\'ve addressed all review comments except url  (pending discussion) Thanks!""'",,,,,,,,,,,,,,,,,
django,7153,open,4,2016-08-25 16:26:21,721.33,,1,,"b'b"" I\'ve now implemented both my idea from the [django-developers thread]url  and Nick Pope\'s suggestions about adding and flags.""'",,,,,,,,,,,,,,,,,
django,7153,open,5,2016-08-25 16:26:21,848.35,1,,,"b'b"" Two comments regarding and parameters:has weird behavior IMHO. It\'s impossible to get ALL users with a permission"," including both active and non-active users. I would skip filtering by when the value of parameter is None. The valid param values would then be . The default value could probably remain True as you only care about active users most of the time (?).I would rename to indicate that it selects whether all superusers are automatically included in results. Maybe e.g.  ?""'",,,,,,,,,,,,,,,,
django,7153,open,6,2016-08-25 16:26:21,508.07,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,
django,7153,open,closed,2016-12-30 19:26:14,179.88,1,5,2,,,,,,,,,,,,,,,,,,
django,7153,open,7,2016-08-25 16:26:21,56.63,,1,,b'b\' I\\\'m not sure I understand why you closed it. I didn\\\'t get any feedback or review comments from you or someone else on the Django team since September. If you think Rovi\\\'s suggestions should be addressed," you should have left a comment (for example ""did you see Rovi\\\'s suggestions?"" or ""do you have time to address the suggestions Rovi made?"") before prematurely closing the pull request.\''",,,,,,,,,,,,,,,,
django,7153,open,8,2016-08-25 16:26:21,27.22,1,,,b'b\' Oh, it\\\'s a misunderstanding that a team member has to validate feedback from someone else. You two could at least discuss among yourselves and come to a consensus. I guess it would be better to discuss it on the [mailing list thread]url  rather than here. Anyway," I had marked the ticket as ""patch needs improvement"" given the unresolved comment", so it wasn\\\'t going anywhere in the current state.\'',,,,,,,,,,,,,,
django,7153,open,reopened,2016-12-30 20:50:05,83.85,2,6,2,,,,,,,,,,,,,,,,,,
django,7153,open,9,2016-08-25 16:26:21,208.68,,,1,"b'b"" Well", from a contributor\'s point of view, it doesn\'t matter whether we (the contributors) have reached a consensus on our end or not if it doesn\'t get accepted by the core developers. So what I was trying to say is that at some point it would be nice to know whether we are on the same page or not.  Anyway," thanks for reopening it! I will try to address all review comments this week.""'",,,,,,,,,,,,,,
django,7153,open,10,2016-08-25 16:26:21,229.65,,1,,"b'b"" Unfortunately", it\'s impossible for a team member to give feedback on every issue. The lack of feedback on the mailing list is concerning (maybe there\'s little demand for this) but If two people come to a consensus," that\'s a good start.""'",,,,,,,,,,,,,,,
django,7153,open,11,2016-08-25 16:26:21,906.5,,,1,"b""b' @berkerpeksag Are you still interested in pursuing this PR?'""",,,,,,,,,,,,,,,,,
django,7153,open,12,2016-08-25 16:26:21,989.72,,,1,"b'b"" @rixx thank you for the ping! Yes", I\'m still interested in getting this merged. However, last time I discussed it on django-developers," I wasn\'t able to gather much positive feedback. Perhaps it should be released on PyPI or proposed to a project such as django-extensions first?""'",,,,,,,,,,,,,,
django,7153,open,13,2016-08-25 16:26:21,1018.02,,1,,b'b\' @berkerpeksag As far as I could see, there were still some discussions that were not resolved, and the PR is by nature limited," so there are at least documentation warnings missing (""only works with the Django permission backend"" would be a start). But I still think this could make for a helpful feature in Django.\''",,,,,,,,,,,,,,
django,7153,open,14,2016-08-25 16:26:21,1029.48,,,1,"b'b"" I\'m glad you found it useful :) I will try to update my branch this weekend.""'",,,,,,,,,,,,,,,,,
django,7153,open,15,2016-08-25 16:26:21,1169.02,,,1,"b'b"" @berkerpeksag I\'d be happy to pick up reviewing this one again and to see some of the other improvements I mentioned up thread implemented. Will keep an eye out for your rebase...""'",,,,,,,,,,,,,,,,,
django,7153,open,16,2016-08-25 16:26:21,1173.87,,,1,"b'b"" @pope1ni thank you again! I will make sure I\'ve addressed your comments and ping both you and @rixx.""'",,,,,,,,,,,,,,,,,
django,7153,open,17,2016-08-25 16:26:21,1372.6,,1,,"b'b"" I\'ve addressed most of the review comments. I will add support for instances later tonight.""'",,,,,,,,,,,,,,,,,
django,7153,open,-,-,-,2,9,8,,,,,,,,,,,,,,,,,,
django,7181,open,opened,2016-08-29 22:39:06,,,,,,,,,,,,,,,,,,,,,,
django,7181,open,title,2016-08-29 22:39:06,00:00,,1,,"b""b' Fixed #28458 - Added () '""",,,,,,,,,,,,,,,,,
django,7181,open,body,2016-08-29 22:39:06,00:00,,1,,"b""b' This allows to easily override it", e.g. when using django-filter and youdo not want the evaluation of the queryset,"  instead validate theinput manually. Ref: url  TODO:[x] documentation'""",,,,,,,,,,,,,,,
django,7181,open,1,2016-08-29 22:39:06,1277.97,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,
django,7181,open,closed,2016-11-16 19:57:04,1277.97,0,3,0,,,,,,,,,,,,,,,,,,
django,7181,open,2,2016-08-29 22:39:06,94.87,,1,,"b""b' FWIW I still think it is useful.'""",,,,,,,,,,,,,,,,,
django,7181,open,3,2016-08-29 22:39:06,3.52,,1,,"b""b' @blueyed the feature request makes sense but without appropriate tests and documentation it would barely be useful as no users could benefit from it.'""",,,,,,,,,,,,,,,,,
django,7181,open,4,2016-08-29 22:39:06,9.1,,1,,"b'b"" @charettes I see.  But back then I wanted to ask for feedback first.Your comment is the first one now.Let\'s leave it closed for now though.""'",,,,,,,,,,,,,,,,,
django,7181,open,5,2016-08-29 22:39:06,12.62,,1,,"b'b"" Oh"," I didn\'t know this was a request for feedback. I guess you could try to make that clearer in the future.""'",,,,,,,,,,,,,,,,
django,7181,open,6,2016-08-29 22:39:06,23.87,,1,,"b'b"" @timgraham  Can we re-open this", please?  From my point of view it serves everybody using the existing API already, but I agree that there should go some doc with it.  As for me," I am rather looking at the code than at then documentation when looking for things to hook into and that\'s why I came up with this.""'",,,,,,,,,,,,,,
django,7181,open,7,2016-08-29 22:39:06,151.8,,1,,"b""b' A ticket", test," and documentation are required.'""",,,,,,,,,,,,,,,
django,7181,open,reopened,2017-05-17 00:52:51,295.78,0,9,0,,,,,,,,,,,,,,,,,,
django,7181,open,8,2016-08-29 22:39:06,780.2,,1,,"b""b' Added a test and documentation. Is a ticket really required?  How should it look like?  Copy the  from here?'""",,,,,,,,,,,,,,,,,
django,7181,open,9,2016-08-29 22:39:06,782.07,,1,,"b""b' Sure"," same as any other ticket proposing a change.'""",,,,,,,,,,,,,,,,
django,7181,open,10,2016-08-29 22:39:06,820.48,,1,,"b""b' Done: url '""",,,,,,,,,,,,,,,,,
django,7181,open,-,-,-,0,12,0,,,,,,,,,,,,,,,,,,
django,7203,closed,opened,2016-09-02 18:19:38,,,,,,,,,,,,,,,,,,,,,,
django,7203,closed,title,2016-09-02 18:19:38,00:00,,,1,"b""b' Replaced smart_* by force_* calls whenever possible'""",,,,,,,,,,,,,,,,,
django,7203,closed,1,2016-09-02 18:19:38,12.18,,,1,"b""b' You might want to investigate all usages of as there are a couple ones that could be replaced by one. The file is a good example.'""",,,,,,,,,,,,,,,,,
django,7203,closed,2,2016-09-02 18:19:38,11.13,,1,,"b'b"" Yes", many could be replaced by  . Some are obvious, while for others, it\'s more tricky to know if some lazy object should be kept lazy. Doing it piecemeal is maybe not the better approach," agreed.""'",,,,,,,,,,,,,
django,7203,closed,3,2016-09-02 18:19:38,3.23,,1,,"b""b' Closing it meanwhile"," until I can find the time for a more thorough investigation.'""",,,,,,,,,,,,,,,,
django,7203,closed,closed,2016-09-02 18:46:11,26.55,0,2,2,,,,,,,,,,,,,,,,,,
django,7203,closed,4,2016-09-02 18:19:38,820.38,,1,,"b'b"" Reopening as I\'ll push an update""'",,,,,,,,,,,,,,,,,
django,7203,closed,reopened,2016-09-03 08:26:34,820.38,0,3,2,,,,,,,,,,,,,,,,,,
django,7203,closed,closed,2016-09-03 11:48:08,201.57,0,3,2,,,,,,,,,,,,,,,,,,
django,7203,closed,5,2016-09-02 18:19:38,290.55,,,1,"b""b' Thanks for the investigation Claude!'""",,,,,,,,,,,,,,,,,
django,7203,closed,-,-,-,0,3,3,,,,,,,,,,,,,,,,,,
django,7347,closed,opened,2016-10-06 17:05:08,,,,,,,,,,,,,,,,,,,,,,
django,7347,closed,title,2016-10-06 17:05:08,00:00,,1,,"b""b' Documented that cache keys are strings'""",,,,,,,,,,,,,,,,,
django,7347,closed,body,2016-10-06 17:05:08,00:00,1,,,"b""b' Some libraries have mistakenly used for cache keys.'""",,,,,,,,,,,,,,,,,
django,7347,closed,1,2016-10-06 17:05:08,1.53,,1,,"b'b"" I found this in  "," fix at -waffle#226. I\'m pretty sure Django only accepts  s for cache keys but would like clarification \\xf0\\x9f\\x98\\x84 ""'",,,,,,,,,,,,,,,,
django,7347,closed,2,2016-10-06 17:05:08,29.12,,1,,"b'b"" I didn\'t look in detail but maybe url  helps.""'",,,,,,,,,,,,,,,,,
django,7347,closed,3,2016-10-06 17:05:08,849.6,,,1,"b'b"" Just because allows doesn\'t mean that all cache backends should. It\'s problematic with which only uses a  ", and and objects happily live in the same dict: Also it\'s only memcached that only allows ascii keys without spaces, other backends allow all unicode characters," like  .""'",,,,,,,,,,,,,,
django,7347,closed,4,2016-10-06 17:05:08,719.78,,,1,b'b\' In principle it makes sense -I don\\\'t see a reason for a cache to mix str and bytes," though I\\\'m not sure if using on Python 2 (e.g. no or no prefixes) is problematic. ... seems to pass the test suite. I guess the ""should"" wording doesn\\\'t imply ""must"" so it\\\'s probably fine", I\\\'m not certain I understand all the implications though.\'',,,,,,,,,,,,,,,
django,7347,closed,5,2016-10-06 17:05:08,752.67,,1,,"b'b\' By ""seems to pass the test suite"" you mean in both Python 2 and 3 right? The way that just happens to work with Django-MySQL\\\'s backend is that the of gets used in the full cache key", which is not intuitive. You might as well pass in any other object with a  . I think it might be the same for and others, but haven\\\'t checked.Me neither but I think having the more restrictive typing makes it easier to work with cache code and it\\\'s also more intuitive. I never once considered the possibility of cache keys being bytes when I made  .\'',,,,,,,,,,,,,,,
django,7347,closed,6,2016-10-06 17:05:08,264.13,,1,,"b'b"" Right", but on Python 2 wouldn\'t add a prefix. Anyway," Python 2 is so close to end of support for Django that I\'m not sure it needs clarification.""'",,,,,,,,,,,,,,,
django,7347,closed,7,2016-10-06 17:05:08,70.7,,1,,"b'b"" It\'ll need clarification when type annotations get added \\xf0\\x9f\\x98\\xb8 ""'",,,,,,,,,,,,,,,,,
django,7347,closed,8,2016-10-06 17:05:08,357.58,,,1,"b""b' merged in 968f61b99180a17e1752432df38f28f192c6cf86"," thanks!'""",,,,,,,,,,,,,,,,
django,7347,closed,closed,2016-10-27 19:50:15,165.12,1,6,3,,,,,,,,,,,,,,,,,,
django,7347,closed,reopened,2016-10-27 19:50:17,0.03,1,6,3,,,,,,,,,,,,,,,,,,
django,7347,closed,closed,2016-10-27 19:50:55,0.63,1,6,3,,,,,,,,,,,,,,,,,,
django,7347,closed,-,-,-,1,6,3,,,,,,,,,,,,,,,,,,
django,7510,closed,opened,2016-11-05 16:50:09,,,,,,,,,,,,,,,,,,,,,,
django,7510,closed,title,2016-11-05 16:50:09,00:00,,1,,"b""b' Fixed #24994 -Added system check for invalid characters in .'""",,,,,,,,,,,,,,,,,
django,7510,closed,body,2016-11-05 16:50:09,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,7510,closed,1,2016-11-05 16:50:09,83.8,,1,,"b""b' Why is it necessary to ensure the secret key is a valid Unicode string? Is there some security issue with using truly random byte strings for the Django secret key?'""",,,,,,,,,,,,,,,,,
django,7510,closed,2,2016-11-05 16:50:09,14.65,,1,,"b'b"" That\'s discussed on [the ticket]url ""'",,,,,,,,,,,,,,,,,
django,7510,closed,3,2016-11-05 16:50:09,102.63,1,,,"b'b"" I read the ticket and related Github issues. I still have questions. What are those cryptic errors that occur when using bytes? I saw no links to issues pertaining to these cryptic messages. Also", I\'m not sure of this but there seems to be a belief that keys should be unicode characters and truly random bytes as keys are strange  not used in practice. Using truly random byte strings (bytes with values 0 255) as keys is not strange at all. In fact, it **is** recommended practice. See also url  . I\'m not seeing a compelling argument for ensuring the secret key is a valid unicode string. At worst, you\'ll be adding an extra burden on your users to base64 encode their secret keys or do some other transformation in order to continue using Django. As it stands, this change does not make it clear what issues are being resolved, offers no enhanced security, implies to users that they go against recommended practice for generating cryptographic keys, and adds an unnecessary burden on your users to generate a proper cryptographic key. I would prefer if this restriction is not accepted and users like myself can continue to use random byte strings as secret keys," with the consideration that it seems this change offers no benefit.""'",,,,,,,,,
django,7510,closed,4,2016-11-05 16:50:09,1358.77,,,1,"b'b"" I\'ve closed the ticket"," absent a good rationale of the check\'s usefulness.""'",,,,,,,,,,,,,,,,
django,7510,closed,closed,2016-12-06 18:50:01,119.87,1,4,1,,,,,,,,,,,,,,,,,,
django,7510,closed,5,2016-11-05 16:50:09,1067.82,,1,,"b""b' Reopening per ticket.'""",,,,,,,,,,,,,,,,,
django,7510,closed,reopened,2016-12-07 12:37:49,1067.8,1,5,1,,,,,,,,,,,,,,,,,,
django,7510,closed,6,2016-11-05 16:50:09,376.08,,1,,"b'b"" Following the [django-developers discussion]url  it seems there isn\'t consensus for this check after all. I\'ve created url  to document the expectation about the type of the secret key.""'",,,,,,,,,,,,,,,,,
django,7510,closed,closed,2016-12-27 18:53:54,376.08,1,6,1,,,,,,,,,,,,,,,,,,
django,7510,closed,-,-,-,1,6,1,,,,,,,,,,,,,,,,,,
django,7525,closed,opened,2016-11-06 17:11:26,,,,,,,,,,,,,,,,,,,,,,
django,7525,closed,title,2016-11-06 17:11:26,00:00,,1,,"b""b' Fixed #27452 -Added SerialField and BigSerialField to .'""",,,,,,,,,,,,,,,,,
django,7525,closed,body,2016-11-06 17:11:26,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,7525,closed,1,2016-11-06 17:11:26,1030.23,1,,,"b""b' I hate to throw a spanner in the works"," but this would be a lot simple  this is merged: url  Something along the lines of  '""",,,,,,,,,,,,,,,,
django,7525,closed,2,2016-11-06 17:11:26,58.78,,,1,"b""b' @wengole yes", that would be cool," but whoever comes last hast to refactor ;) It is really only a couple of lines in both cases.'""",,,,,,,,,,,,,,,
django,7525,closed,3,2016-11-06 17:11:26,127.73,,1,,"b'b"" I changed a couple of things", I don\'t know tho, if this field is ready year. Currently every insert would result in an extra query, where the field should use  . I\'m not too familiar with the db backends," to implement that properly.""'",,,,,,,,,,,,,
django,7525,closed,4,2016-11-06 17:11:26,3.55,,1,,"b'b"" Well"," I\'m currently writing a DEP targetting precisely this problem. Serial is just a part of a more generic problem we need solved once and for all. Do you want to participate on the DEP ?""'",,,,,,,,,,,,,,,,
django,7525,closed,5,2016-11-06 17:11:26,1.02,,1,,"b""b' (For the record : url  )'""",,,,,,,,,,,,,,,,,
django,7525,closed,6,2016-11-06 17:11:26,1418.08,,,1,"b""b' Hey guys", Any news on this PR? We would love to use it in production and had to copy the implementation \\xf0\\x9f\\xa4\\x93.  Thanks," Arthur'""",,,,,,,,,,,,,,,
django,7525,closed,7,2016-11-06 17:11:26,227.12,,1,,"b""b' We are waiting for this PR to be merged. Very useful'""",,,,,,,,,,,,,,,,,
django,7525,closed,8,2016-11-06 17:11:26,234.12,,1,,"b""b' @syurchenko I will resume my work on this once #6385 is merged. There is also a lager design issue", that is still to be resolved. Currently this field would execute an additional query for each insert. To be honest I know how to solve this in prostgres, I need to look into the ORM again," to see how I can make it work in Django.'""",,,,,,,,,,,,,,
django,7525,closed,9,2016-11-06 17:11:26,36.1,,,1,"b'b"" @codingjoe #6385 is merged. Can I give you a bump to resume work on this?  I know I\'d like to see this feature land! We use uuid\'s but need serial int ids for other uses"," so this would be a great addition to the postgres contrib.  Thanks.""'",,,,,,,,,,,,,,,,
django,7525,closed,10,2016-11-06 17:11:26,189.6,,,1,"b'b"" @codingjoe I ended up going off of what you had done in order to build a custom for our project. It worked great. If you want help with this PR and just don\'t have time to do it now", I could take a crack at it. Let me know?  I did add the below method, or else it wasn\'t creating the field in the database. But other than that," I pretty much went off of what you had:  ""'",,,,,,,,,,,,,,
django,7525,closed,11,2016-11-06 17:11:26,1087.47,,1,,"b""b' @aronysidoro yes sure", be my guest to try. I do have more time now, since my other big PR is merged, but I have another one too. The big problem here is to add the statement," that you only have a single query per insert.'""",,,,,,,,,,,,,
django,7525,closed,12,2016-11-06 17:11:26,1122.65,,,1,"b'b"" @codingjoe ok", I am going to try.  So, it sounds like the big problem would be when using the with a bulk insert?  I didn\'t test for that," so I will test for that as well. Thanks for pointing that out.""'",,,,,,,,,,,,,,
django,7525,closed,closed,2017-09-25 12:26:25,1154.98,1,8,5,,,,,,,,,,,,,,,,,,
django,7525,closed,13,2016-11-06 17:11:26,220.07,,1,,"b'b"" @codingjoe I have looked into this several times. I just want to follow up. So far", I haven\'t seen where a single statement could be injected.  One place I looked at in particular was here:  url It looks like the code is looking for objects without a to bulk return the ids, but in the case of a Postgres  , it could be any field, not just the field.  It seems like the code would need to use the regardless. If that\'s true," then I wouldn\'t have much to add to your PR because it did everything necessary.  Any thoughts?  ""'",,,,,,,,,,,,
django,7525,closed,14,2016-11-06 17:11:26,1059.37,,1,,"b'b"" Hi @aaronlelevier I know there isn\'t a simple way to inject this. What I think needs to be done is: Create a method to get a set of all fields that have a database default and should have a returning value", than rewrite those functions:  url url and this one:  url They all need to be able to not only unpack a single but all values for the fields that are specified within your method.  btw," that method should return the fields in a deterministic order.  Does that help you? ""'",,,,,,,,,,,,,,,
django,7525,closed,15,2016-11-06 17:11:26,453.95,,,1,"b'b"" @codingjoe thank you for your reply. I am going to look into your recommendations above. Yes", it definitely helps. I was looking at Django 1.11, but I see the PR that you linked above is from Nov 29th, so there\'s new code then for some of the logic that SerialField could use that I hadn\'t seen. Great," thank you.""'",,,,,,,,,,,,,
django,7525,closed,16,2016-11-06 17:11:26,1264.28,,1,,"b""b' See also url '""",,,,,,,,,,,,,,,,,
django,7525,closed,reopened,2018-08-22 14:53:44,147.32,1,11,6,,,,,,,,,,,,,,,,,,
django,7525,closed,17,2016-11-06 17:11:26,1374.57,,,1,"b""b' Thanks for the review @charettes", but this will have to wait until after #9983 anyways. I will close the PR for now and open it," once #9983 is merged.'""",,,,,,,,,,,,,,,
django,7525,closed,closed,2018-12-23 14:20:07,1406.38,1,11,7,,,,,,,,,,,,,,,,,,
django,7525,closed,-,-,-,1,11,7,,,,,,,,,,,,,,,,,,
django,7529,closed,opened,2016-11-08 02:05:17,,,,,,,,,,,,,,,,,,,,,,
django,7529,closed,title,2016-11-08 02:05:17,00:00,,1,,"b""b' Fixed 27397 Querying with an integer larger than SQLite supports crashes with OverflowError'""",,,,,,,,,,,,,,,,,
django,7529,closed,1,2016-11-08 02:05:17,836.82,,,1,"b'b"" let me know if there\'s something I miss cc: @timgraham ""'",,,,,,,,,,,,,,,,,
django,7529,closed,2,2016-11-08 02:05:17,23.05,,1,,"b'b"" Yes"," the fix isn\'t going to work for (no results will be returned rather than all objects).""'",,,,,,,,,,,,,,,,
django,7529,closed,3,2016-11-08 02:05:17,3.6,1,,,"b'b"" Sorry still I don\'t understand your means about this ? I have test exclude nothing overflowing","'
django	7529	closed	4	timgraham	2016-11-08 02:05:17	1.65		+1		b'b"" Add this assertion to your new test: It doesn\'t pass.""'
django	7529	closed	5	raminfp	2016-11-08 02:05:17	8.37		+1		b""b'   is Zero is not equal  '",,,,,,,,,,,,,,,,
django,7529,closed,6,2016-11-08 02:05:17,6.7,,1,,"b'b"" The test should pass. The that exists doesn\'t have that pk.""'",,,,,,,,,,,,,,,,,
django,7529,closed,7,2016-11-08 02:05:17,8.27,,1,,"b""b' If there are users in the database", should return all the users," not zero users.'""",,,,,,,,,,,,,,,
django,7529,closed,8,2016-11-08 02:05:17,3.82,,,1,"b""b' Thanks ",but i not sure because before Overflow occurred from SQLlite this means any select all of database side," do you have solution?'""",,,,,,,,,,,,,,,
django,7529,closed,closed,2016-11-09 16:57:33,892.27,1,6,2,,,,,,,,,,,,,,,,,,
django,7529,closed,reopened,2016-11-09 16:57:40,0.12,1,6,2,,,,,,,,,,,,,,,,,,
django,7529,closed,9,2016-11-08 02:05:17,8.47,1,,,"b'b"" Sorry"," I don\'t have any ideas about a proper fix.""'",,,,,,,,,,,,,,,,
django,7529,closed,10,2016-11-08 02:05:17,18.6,,1,,"b""b' @timgraham  please answer this question : url  also look :  url '""",,,,,,,,,,,,,,,,,
django,7529,closed,11,2016-11-08 02:05:17,12.6,,1,,"b'b"" If you\'re proposing to change the default primary key type to  "," no we can\'t do that due to backwards-compatibility.""'",,,,,,,,,,,,,,,,
django,7529,closed,12,2016-11-08 02:05:17,24.77,1,,,"b""b' You are right ",Oops, i think this fix so far enough,"because with use with large integer raise '""",,,,,,,,,,,,,,
django,7529,closed,13,2016-11-08 02:05:17,14.77,,1,,"b""b' @timgraham i think we should write on docs about behavior from SQLlite","What do you think?'""",,,,,,,,,,,,,,,,
django,7529,closed,14,2016-11-08 02:05:17,14.23,,1,,"b""b' We usually try to fix bugs rather than document them.'""",,,,,,,,,,,,,,,,,
django,7529,closed,15,2016-11-08 02:05:17,5.38,,1,,"b""b' I wonder if this could be solved by raising an somewhere.'""",,,,,,,,,,,,,,,,,
django,7529,closed,16,2016-11-08 02:05:17,1276.15,,,1,"b""b' Hi @timgraham my idea Filter values"," output : ./ shell browser in admin panel :  ![idea]url '""",,,,,,,,,,,,,,,,
django,7529,closed,17,2016-11-08 02:05:17,3.13,,1,,"b'b"" @RaminFP this approach won\'t fly as the sentinel integer used to replace overflowing values can match an existing row. e.g.  ""'",,,,,,,,,,,,,,,,,
django,7529,closed,18,2016-11-08 02:05:17,5.65,,1,,"b""b' @charettes this is not final fix",so i need flag for discover , execute return all objects,"  '""",,,,,,,,,,,,,,
django,7529,closed,19,2016-11-08 02:05:17,48.92,,1,,"b'b"" It has the same caveats for a model with a an instead of an . I don\'t think this is where this should be handled. 2016-11-10 11:35 GMT-05:00 Ramin Farajpour Cami notifications@:""'",,,,,,,,,,,,,,,,,
django,7529,closed,20,2016-11-08 02:05:17,66.77,1,,,"b'b"" @timgraham @charettes sorry for tag",Python doesn\'t distinguish between integer sizes .We\'ll need to explicitly check for and or  your means i write bad code," or not this is a bad idea?""'",,,,,,,,,,,,,,,
django,7529,closed,21,2016-11-08 02:05:17,4.55,,1,,"b""b' @RaminFP we believe this is not the right approach as it could break in subtle ways. Using as a sentinel value could still break when using  :  '""",,,,,,,,,,,,,,,,,
django,7529,closed,22,2016-11-08 02:05:17,5.43,,1,,"b""b' OK @charettes ","please give me suggestion rather then  ?what do I do?'""",,,,,,,,,,,,,,,,
django,7529,closed,23,2016-11-08 02:05:17,14.25,1,,,"b'b"" @RaminFP I haven\'t investigated if this is possible but I think this would require all lookups available for numeric fields to deal with this case on SQLite. For example the and lookups could raise an like the [  lookup does]url  That\'s the only way I can of but I\'m starting to think this might not be worth the required efforts. It seems odd to me SQLite doesn\'t handle this case like other RDMS do.""'",,,,,,,,,,,,,,,,,
django,7529,closed,24,2016-11-08 02:05:17,182.98,,1,,"b""b' As Simon suggested"," you could check if this could be fixed in SQLite.'""",,,,,,,,,,,,,,,,
django,7529,closed,25,2016-11-08 02:05:17,489.12,,1,,"b""b' @timgraham I am not familiar with lookups", i see here : url please give me example lookup for this for add code for commit if this is possible,"  '""",,,,,,,,,,,,,,,
django,7529,closed,26,2016-11-08 02:05:17,398.23,1,,,"b'b"" I\'m sorry but I can\'t provide any further guidance about a proper solution.""'",,,,,,,,,,,,,,,,,
django,7529,closed,27,2016-11-08 02:05:17,888.07,,1,,"b""b' i going to close PR for new PR'""",,,,,,,,,,,,,,,,,
django,7529,closed,closed,2016-11-12 02:59:37,601.95,6,19,3,,,,,,,,,,,,,,,,,,
django,7529,closed,-,-,-,6,19,3,,,,,,,,,,,,,,,,,,
django,7678,closed,opened,2016-12-11 02:14:52,,,,,,,,,,,,,,,,,,,,,,
django,7678,closed,title,2016-12-11 02:14:52,00:00,,1,,"b""b' Fixed #27589 -Added managed triggers for SearchVectorField.'""",,,,,,,,,,,,,,,,,
django,7678,closed,body,2016-12-11 02:14:52,00:00,,,1,"b'b"" This is a significantly enhanced version of with automatically generated and managed database trigger.  Remaining todo\'s:  [ ] documentation [x] only update the column if the fields on which it depends have changed (need to add a conditional in the  function check if relevant columns have changed) [x] instead of hard coding language in the field definition", also support column name  There are probably a lot of other things that will need to be done. Please provide feedback," thanks!  url ""'",,,,,,,,,,,,,,,
django,7678,closed,1,2016-12-11 02:14:52,775.82,,1,,"b""b' It would be appropriate to post on the django-developers mailing list to try to get feedback from people who are using the field.'""",,,,,,,,,,,,,,,,,
django,7678,closed,2,2016-12-11 02:14:52,44.35,1,,,"b'b"" 1. This is making a requirement for using the Django postgres backend", which it isn\'t at current (afaik)  2. This is also the first instance I know of triggers being touched by Django. Typically Django has stayed away from them, preferring such things to be done in Python code with signals etc. I don\'t know enough here to see why a trigger is preferable to a signal, but I\'d like to see the justification.  I\'d also like to know if it is possible to manage the trigger as objects on their own, maybe using  s, with their own separate, concrete migration operations, etc. Adding a code to the postgres schema editor that manages one specific trigger seems to me to move us away from this laudable goal.  Another thing about adding triggers is that it changes backup procedure. Idk if it\'s common to exclude them on postgres (  seems to include them by default?), but on MySQL the main backup utilities and don\'t dump triggers by default. If Django starts managing triggers, it has to be *really* clearly communicated that backups now need to include them," otherwise a lot of users will be very unhappy when restoring their backups.""'",,,,,,,
django,7678,closed,3,2016-12-11 02:14:52,14.9,,1,,"b'b"" As Adam mentioned there\'s a lot of reason to believe a trigger based approach is not always the best solution.  Is there a reason this cannot live as a third-party package? For the trigger creation and removal part you could do without a custom database backend by hooking into the signal and injecting some and operations when detecting an  or operation the plan.""'",,,,,,,,,,,,,,,,,
django,7678,closed,4,2016-12-11 02:14:52,32.65,,1,,b'b\' The primary reason I added this is so that the could be more of a black box. You add it to your model,"  migrations and ""it just works"".  On the other hand", I can\\\'t think of anything a database trigger solves that is otherwise impossible to do with a signal in Python. Although, I think most scenarios would require at least one extra query to perform whatever action you want.  In cases where you want to cut down on the number of queries or how much data you are sending to postgres then stored procedures become very useful.  I\\\'m open to doing a more general purpose stored procedure building system. But I don\\\'t think that should be a blocker for this feature. The fact that the underlying code for the new is very specialized is an implementation detail. Once a general purpose procedure framework exists we could replace the current specialized version and the wouldn\\\'t know the difference.\'',,,,,,,,,,,,,,
django,7678,closed,5,2016-12-11 02:14:52,3.87,,,1,"b'b"" Can we keep this pull request open a bit longer to get more feedback. If it turns out that it\'s not worth to add this to I can definitely do it as a 3rd party package.  @charettes Thanks for the tip about the  "," I didn\'t know about that.""'",,,,,,,,,,,,,,,,
django,7678,closed,6,2016-12-11 02:14:52,2.42,,1,,"b'b"" @eukreign there\'s an example of the approach in [ ]url  and #7673.""'",,,,,,,,,,,,,,,,,
django,7678,closed,7,2016-12-11 02:14:52,80.9,,,1,"b'b"" Thanks for all of the feedback. I\'ve decided to close the pull request. Using is probably good enough for most people. I may switch to that approach as well.""'",,,,,,,,,,,,,,,,,
django,7678,closed,closed,2016-12-12 18:09:46,954.9,1,5,3,,,,,,,,,,,,,,,,,,
django,7678,closed,8,2016-12-11 02:14:52,17.02,,1,,"b""b' Could you update (close?) the ticket and mailing list thread also?'""",,,,,,,,,,,,,,,,,
django,7678,closed,9,2016-12-11 02:14:52,2.15,,1,,"b'b"" Actually", is it possible to do a with a single statement? I setup a I can\'t figure out a way to use the this way...   When I save a Task," it throws the following exception:  Maybe the trigger approach is still useful?""'",,,,,,,,,,,,,,,
django,7678,closed,reopened,2016-12-12 18:28:56,19.17,1,7,3,,,,,,,,,,,,,,,,,,
django,7678,closed,closed,2016-12-12 18:45:54,16.97,1,7,3,,,,,,,,,,,,,,,,,,
django,7678,closed,10,2016-12-11 02:14:52,249.7,,1,,"b""b' @eukreign yes"," expressions can be used for INSERT as of url  / url '""",,,,,,,,,,,,,,,,
django,7678,closed,11,2016-12-11 02:14:52,265.23,,1,,"b""b' @jarshwah as you can see from the traceback above it does not seem to work", at least not for  ," the traceback is from current master version of django.'""",,,,,,,,,,,,,,,
django,7678,closed,12,2016-12-11 02:14:52,271.17,,1,,"b'b"" @eukreign F expressions explicitly can\'t be used for INSERT as they don\'t make sense"," since there is no row to select the value out of.""'",,,,,,,,,,,,,,,,
django,7678,closed,13,2016-12-11 02:14:52,273.7,,1,,"b""b' Another thing to consider is that bulk changes do not fire signals per instance.'""",,,,,,,,,,,,,,,,,
django,7678,closed,14,2016-12-11 02:14:52,1339.23,,,1,"b""b' I have created a separate package for this for anyone interested:  url '""",,,,,,,,,,,,,,,,,
django,7678,closed,15,2016-12-11 02:14:52,1345.7,,,1,"b""b' @eukreign great work!  I think you might be interested in this [DEP]url  about read-only fields. This feature would allow making your refresh automatically on save on PostgreSQL by relying on  .'""",,,,,,,,,,,,,,,,,
django,7678,closed,16,2016-12-11 02:14:52,1436.05,,,1,"b'b"" Definitely looking forward to the field attribute. I\'ve created an issue in to track this.  As far as  ", I would actually want to go in the opposite direction. I would like to make the field deferred by default. The contents of the is an implementation detail in postgres," it\'s kind of pointless to keep shuttling this back and forth between Postgres and Django.  Is there a good way to make a field deferred by default?""'",,,,,,,,,,,,,,,
django,7678,closed,17,2016-12-11 02:14:52,8.83,1,,,"b'b""  You should mention that on the DEP"," maybe there\'s a use case for always deferring such fields. Not yet unfortunately.""'",,,,,,,,,,,,,,,,
django,7678,closed,-,-,-,2,11,6,,,,,,,,,,,,,,,,,,
django,7721,closed,opened,2016-12-20 20:30:07,,,,,,,,,,,,,,,,,,,,,,
django,7721,closed,title,2016-12-20 20:30:07,00:00,,1,,"b""b' Fixed #27615 -Used timedeltas as arguments to Oracle database driver.'""",,,,,,,,,,,,,,,,,
django,7721,closed,body,2016-12-20 20:30:07,00:00,,1,,"b""b' Ticket [#27615]url  Used as a arguments to the Oracle database driver. Removed  .'""",,,,,,,,,,,,,,,,,
django,7721,closed,1,2016-12-20 20:30:07,3.53,,1,,"b""b' Buildbot"," test on Oracle.'""",,,,,,,,,,,,,,,,
django,7721,closed,2,2016-12-20 20:30:07,5.35,,1,,"b""b' Should we bump the minimum required documented version of (4.3.1 right now)?'""",,,,,,,,,,,,,,,,,
django,7721,closed,3,2016-12-20 20:30:07,13.08,,1,,"b""b' Indeed"," I missed that. We should bump the minimum required version to  .'""",,,,,,,,,,,,,,,,
django,7721,closed,4,2016-12-20 20:30:07,12.5,,,1,"b'b"" I guess it would be nice to get feedback on the mailing list about that. I don\'t know if there\'s some reason why we try to support older versions -certainly it would be nice to remove the other workarounds for older versions. Anyway"," the minimum version bump isn\'t really required as part of this commit except to fix queries with timedeltas.""'",,,,,,,,,,,,,,,,
django,7721,closed,5,2016-12-20 20:30:07,68.03,,1,,"b'b"" Taking to the mailing list probably makes sense"," as there\'s quite a lot of fixes and features in newer cx_Oracle versions that would help us out. Some:  Explicit support for service_name as well as SID (5.1.1) Support for Oracle 12c (5.1.3) Support for python 3.5 (5.2.1)  I\'m not aware of any reasons for maintaining support for version 4 of cx_Oracle.""'",,,,,,,,,,,,,,,,
django,7721,closed,6,2016-12-20 20:30:07,1084.08,,1,,"b""b' [django-developers thread]url  about bumping the minimum cx_oracle requirement.'""",,,,,,,,,,,,,,,,,
django,7721,closed,closed,2016-12-29 18:02:13,1292.1,0,7,1,,,,,,,,,,,,,,,,,,
django,7721,closed,reopened,2016-12-29 18:09:02,6.82,0,7,1,,,,,,,,,,,,,,,,,,
django,7721,closed,7,2016-12-20 20:30:07,133.77,,,1,"b""b' Thanks for review. I updated PR.'""",,,,,,,,,,,,,,,,,
django,7721,closed,closed,2016-12-29 20:49:18,160.27,0,7,2,,,,,,,,,,,,,,,,,,
django,7721,closed,-,-,-,0,7,2,,,,,,,,,,,,,,,,,,
django,7882,closed,opened,2017-01-19 08:07:34,,,,,,,,,,,,,,,,,,,,,,
django,7882,closed,title,2017-01-19 08:07:34,00:00,,1,,"b""b' Refs #23919 -Removed unneeded force_str() calls.'""",,,,,,,,,,,,,,,,,
django,7882,closed,closed,2017-01-19 08:52:51,45.28,0,1,0,,,,,,,,,,,,,,,,,,
django,7882,closed,reopened,2017-01-19 13:47:35,294.73,0,1,0,,,,,,,,,,,,,,,,,,
django,7882,closed,1,2017-01-19 08:07:34,556.2,,1,,"b'b"" I didn\'t address uses in because they are removed in another patch of mine where the functions using are deprecated (and their content removed).""'",,,,,,,,,,,,,,,,,
django,7882,closed,2,2017-01-19 08:07:34,67.17,,,1,"b'b"" Note that I didn\'t deprecate anything in this patch. However"," I still don\'t get your point about Python 2 support and deprecations. I don\'t see what\'s different from any other deprecation we made in the past. Maybe I need a drawing :-)""'",,,,,,,,,,,,,,,,
django,7882,closed,3,2017-01-19 08:07:34,21.52,,1,,b'b\' I know," I was just replying to ""I didn\\\'t address"". My thinking is that if a project wants to run deprecation warning free and support Python 2 and 3", it would have to copy the Python 2 version of those functions into their project. It doesn\\\'t seem to add much overhead to keep the stubs in Django a bit longer to avoid this situation.\'',,,,,,,,,,,,,,,
django,7882,closed,4,2017-01-19 08:07:34,17.35,,1,,"b'b"" Are you talking about user projects or reusable apps? For a user project", I think that when you choose to run with Django 2.0, you definitely say goodbye to Python 2. For reusable apps, the choice is like it is now: either you are looking to be mostly deprecation-free and you use the pattern:  , or you choose to be deprecation-free on the LTS only, and accept deprecations in non-LTS Djangos. I could hear the fact that we would have a bit too many deprecations during the 2.x cycle, so delaying (some or all) Python 2 related deprecations could make sense," but then you only report the problem. I\'m simply -0 on that idea.""'",,,,,,,,,,
django,7882,closed,closed,2017-01-20 07:45:31,1077.93,0,4,1,,,,,,,,,,,,,,,,,,
django,7882,closed,-,-,-,0,4,1,,,,,,,,,,,,,,,,,,
django,8064,closed,opened,2017-02-15 08:59:54,,,,,,,,,,,,,,,,,,,,,,
django,8064,closed,title,2017-02-15 08:59:54,00:00,,1,,"b""b' Fixed typos'""",,,,,,,,,,,,,,,,,
django,8064,closed,body,2017-02-15 08:59:54,00:00,,1,,"b'b\' nothing must be ""nothing""\''",,,,,,,,,,,,,,,,,
django,8064,closed,closed,2017-02-15 09:39:19,39.42,0,2,0,,,,,,,,,,,,,,,,,,
django,8064,closed,reopened,2017-02-15 09:39:22,0.05,0,2,0,,,,,,,,,,,,,,,,,,
django,8064,closed,1,2017-02-15 08:59:54,226.68,1,,,"b""b' There are no quotes in the output"," so I think the current version may be less confusing.'""",,,,,,,,,,,,,,,,
django,8064,closed,2,2017-02-15 08:59:54,24.02,,1,,"b""b' I think one of them needs to be corrected. This commit or #8067 '""",,,,,,,,,,,,,,,,,
django,8064,closed,3,2017-02-15 08:59:54,29.37,,,1,"b""b' The other one looks good"," thanks!'""",,,,,,,,,,,,,,,,
django,8064,closed,closed,2017-02-15 13:39:58,240.6,1,3,1,,,,,,,,,,,,,,,,,,
django,8064,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,
django,8117,closed,opened,2017-02-25 20:39:16,,,,,,,,,,,,,,,,,,,,,,
django,8117,closed,title,2017-02-25 20:39:16,00:00,,1,,"b""b' Refs #27025 -Removed unneeded sqlite3 transaction management workaround in Python 3.6'""",,,,,,,,,,,,,,,,,
django,8117,closed,body,2017-02-25 20:39:16,00:00,,1,,"b""b' Obsolete per url '""",,,,,,,,,,,,,,,,,
django,8117,closed,1,2017-02-25 20:39:16,0.72,,1,,"b""b' Would you prefer in a new feature flag? If so"," what name?'""",,,,,,,,,,,,,,,,
django,8117,closed,2,2017-02-25 20:39:16,57.38,,1,,"b'b"" What about setting SQLite\'s feature to on Python > 3.6?""'",,,,,,,,,,,,,,,,,
django,8117,closed,3,2017-02-25 20:39:16,2.3,,1,,"b""b' Is this because it would cause issues here? url '""",,,,,,,,,,,,,,,,,
django,8117,closed,4,2017-02-25 20:39:16,6.73,,1,,"b""b' Correct'""",,,,,,,,,,,,,,,,,
django,8117,closed,5,2017-02-25 20:39:16,970.55,,1,,"b""b' @aaugustin"," any thoughts about the current approach vs. a new feature flag?'""",,,,,,,,,,,,,,,,
django,8117,closed,6,2017-02-25 20:39:16,34.43,,,1,"b'b"" I started writing an answer but there are too many open questions.  I\'d like to check what got fixed exactly in Python 3.6. If memory serves", the biggest problem,  , was fixed, but I think there are still some cases where sqlite3 commits when it shouldn\'t, perhaps before DDL statements (to be confirmed).  In any case I\'m in favor of fine grained flags with comments explaining what they do," otherwise it will be difficult to maintain the logic in the future.""'",,,,,,,,,,,
django,8117,closed,7,2017-02-25 20:39:16,11.33,,,1,"b'b"" If it\'s easier to keep the status quo until Django supports Python 3.6+ that\'s fine with me.""'",,,,,,,,,,,,,,,,,
django,8117,closed,8,2017-02-25 20:39:16,1338.62,,1,,"b'b"" Closing for now as I don\'t have time to do further investigation right now.""'",,,,,,,,,,,,,,,,,
django,8117,closed,closed,2017-04-01 13:01:20,982.07,0,8,2,,,,,,,,,,,,,,,,,,
django,8117,closed,reopened,2018-10-25 17:51:22,290.03,0,8,2,,,,,,,,,,,,,,,,,,
django,8117,closed,9,2017-02-25 20:39:16,368.33,,1,,b'b\' Aymeric," I found url  ""sqlite3 no longer implicitly commit an open transaction before DDL statements"" (also in Python 3.6+). Does that address your concern?  I revised this patch a bit since the March 2017 version. When dropping support for Python 3.5", we can eliminate the feature flag but  is still needed.\'',,,,,,,,,,,,,,,
django,8117,closed,10,2017-02-25 20:39:16,19.18,,1,,"b""b' Yes"," it does.'""",,,,,,,,,,,,,,,,
django,8117,closed,closed,2018-10-25 23:54:49,363.45,0,10,2,,,,,,,,,,,,,,,,,,
django,8117,closed,-,-,-,0,10,2,,,,,,,,,,,,,,,,,,
django,8304,closed,opened,2017-04-06 10:34:51,,,,,,,,,,,,,,,,,,,,,,
django,8304,closed,title,2017-04-06 10:34:51,00:00,,1,,"b'b"" Fixed #27991 -Add \'obj\' kwarg to ()""'",,,,,,,,,,,,,,,,,
django,8304,closed,body,2017-04-06 10:34:51,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,8304,closed,closed,2017-04-07 10:10:01,1415.17,0,2,0,,,,,,,,,,,,,,,,,,
django,8304,closed,reopened,2017-04-07 13:58:29,228.47,0,2,0,,,,,,,,,,,,,,,,,,
django,8304,closed,1,2017-04-06 10:34:51,262.22,,,1,"b'b"" Hi @icu0755 Are you still working on this PR? I\'m interested in this feature. If you\'re too busy to continue or have otherwise moved on", I can continue the work if you\'d like. If you\'d like to continue the work," that works too.""'",,,,,,,,,,,,,,,
django,8304,closed,2,2017-04-06 10:34:51,205.63,1,,,"b'b"" Hi @jdufresne. Please feel free to continue or start from scratch. Unfortunately I don\'t know how to proceed further.""'",,,,,,,,,,,,,,,,,
django,8304,closed,3,2017-04-06 10:34:51,613.68,,,1,"b'b"" Thanks @icu0755 and thanks for the initial patch. I\'ve created a new PR at #9721.""'",,,,,,,,,,,,,,,,,
django,8304,closed,closed,2018-02-23 11:53:13,1314.73,1,2,2,,,,,,,,,,,,,,,,,,
django,8304,closed,-,-,-,1,2,2,,,,,,,,,,,,,,,,,,
django,8306,closed,opened,2017-04-06 10:51:30,,,,,,,,,,,,,,,,,,,,,,
django,8306,closed,title,2017-04-06 10:51:30,00:00,,1,,"b""b' Fixed #27849: Add support for filtering postgres aggregates'""",,,,,,,,,,,,,,,,,
django,8306,closed,body,2017-04-06 10:51:30,00:00,,,1,"b'b"" This adds support for filtering on all Postgres aggregates using the syntax.  I thought it would be best to make it a bit queryset-like", as in you can do and on all Postgres aggregates, like so:  .  Under the hood this just converts the keywords to objects, but it feels a lot nicer than passing them in manually. They also support chaining.  I\'m at the DjangoCon sprints if anyone wishes to comment in person about this \\xf0\\x9f\\x91\\x8d  Edit: I\'ve added some tests specifically for the ArrayAgg aggregate, but I\'d like some feedback about the implementation before I commit to writing more tests + documentation etc.  I\'m also not entirely sure how I would go about writing the tests," should I write the same tests for every postgres aggregate?""'",,,,,,,,,,,,
django,8306,closed,1,2017-04-06 10:51:30,189.58,,,1,"b'b"" Hello @orf"," thanks for your contribution!  Adding support for all PostgreSQL aggregates was proposed in the past in #5956 and one comment I had is that it would be much better to implement this for all existing Aggregates by using for databases that don\'t have support. This also has a bit of overlap with #7611 if I\'m not mistaken.  While I like your syntax I find it a bit unintuitive that it\'s not chainable like is. I think we should stick to using a kwarg for that instead as we don\'t want to get into the semantic of filtering chaining e.g. can produce different queries than under certain conditions.""'",,,,,,,,,,,,,,,,
django,8306,closed,2,2017-04-06 10:51:30,19.78,,,1,"b'b"" Hey @charettes", thanks for commenting! I think emulating using is a good idea in theory but it might get a bit tricky and I\'m not sure how you would do it in a generic way. Maybe I\'m over thinking it though. If you have any hints I could try and take this PR in that direction," because then it could be added to the base class and would work with standard aggregates like and etc.  The syntax in this PR is chainable? The handles this by returning new instances. uses the  .""'",,,,,,,,,,,,,,,
django,8306,closed,3,2017-04-06 10:51:30,1160.75,,1,,"b'b"" Ok"," I\'ve managed to implement this using CASE statements (with FILTER upgrades to Postgres). I\'ll close this MR and push it as a separate MR.""'",,,,,,,,,,,,,,,,
django,8306,closed,closed,2017-04-07 09:41:37,1370.12,0,2,3,,,,,,,,,,,,,,,,,,
django,8306,closed,reopened,2017-04-07 11:24:23,102.77,0,2,3,,,,,,,,,,,,,,,,,,
django,8306,closed,4,2017-04-06 10:51:30,365.72,,1,,"b""b' @orf did you push this to another PR?'""",,,,,,,,,,,,,,,,,
django,8306,closed,5,2017-04-06 10:51:30,420.92,,1,,"b'b"" Hey @charettes", I spoke to Marc about this ticket and he re-opened because it was a new feature, independent of the fallback, it but in the course of the discussion we realized it was not strictly necessary as there is apparently no performance difference between and other than the syntax.  I had an implementation that worked (ish), but with this new knowledge I think this ticket should stay closed. I really like the idea of a on aggregates, but the implementation would more simple than my current one (just produce the necessary and instances). It would just be syntactic sugar rather than a whole new aggregate.  So yeah, IMO this ticket should be closed in replacement for a \'adding to aggregates\' ticket, and perhaps some discussion should be had about the specifics on the mailing list. I can push a proof of concept branch for you to review about this if you like," and send the initial email asking for comments.  Let me know what you think.""'",,,,,,,,,
django,8306,closed,6,2017-04-06 10:51:30,93.62,,1,,"b""b' Hey @orf!  I agree that adding a generic kwarg would only be syntactic sugar but I think it would still be worth adding.  Just like PostgreSQL added support for the clause as syntactic sugar to make more readable I can see value in a kwarg to aggregate expressions to make them more readable as well.  Taking the [conditional aggregation]url  documentation as example"," I find the following way more easier to parse with all the boilerplate stripped.   From my non-regular contributions on the django-user mailing list confusion about conditional aggregations [came out a couple of times]url  It could also be considered a reduction of functionality over what the [django-aggregate-if]url  library that supported conditional aggregation before built-in support shipped through in Django 1.8 offered. '""",,,,,,,,,,,,,,,,
django,8306,closed,7,2017-04-06 10:51:30,8.28,,,1,"b""b' In all cases moving the discussions about adding a kwarg as syntactic sugar and  /  methods to the ML is good idea @orf. It will get much more exposure and will gather more valuable feedback.'""",,,,,,,,,,,,,,,,,
django,8306,closed,8,2017-04-06 10:51:30,21.37,,1,,"b'b"" Ok @charettes", I\'ll try and compose an email tomorrow with my thoughts, as well as a draft merge request. I agree with what you are saying about the statements being fairly unreadable. I\'ll leave any ticket creating up to you if that\'s OK," feel free to close this MR if you want to create a fresh ticket or leave it open if you want to morph the existing ticket into this new scope. ""'",,,,,,,,,,,,,,
django,8306,closed,9,2017-04-06 10:51:30,397.98,,,1,b'b\' Hello," @orf @charettes ! I\\\'d like to add my 2 cents to the discussion. There is a performance difference between  CASE  and  FILTER : From the [doc]url  ""If  FILTER  is specified"," then only the input rows for which the **filter_clause** evaluates to true are fed to the aggregate function; other rows are discarded."" In case with  CASE  all rows will be passed to the aggregate function. Thus it depends on complexity of the aggregate function", but anyway it is measurable at my work we gained about ~15% performance improvement in our statistical reports after switching from  CASE  to  FILTER  with multiple  MAX  and  COUNT  aggregates on ~2M of input rows.\'',,,,,,,,,,,,,,
django,8306,closed,10,2017-04-06 10:51:30,569.28,,1,,"b'b"" I\'ve made an initial merge request with this functionality here: #8352. I\'m going to close this now"," thanks @Stranger6667 for your feedback. I will send a message to the mailing list now.""'",,,,,,,,,,,,,,,,
django,8306,closed,closed,2017-04-12 16:58:47,334.4,0,7,5,,,,,,,,,,,,,,,,,,
django,8306,closed,-,-,-,0,7,5,,,,,,,,,,,,,,,,,,
django,8386,closed,opened,2017-04-21 09:27:57,,,,,,,,,,,,,,,,,,,,,,
django,8386,closed,title,2017-04-21 09:27:57,00:00,,1,,"b""b' Fixed #28046 -Added the db_tablespace parameter to class-based indexes.'""",,,,,,,,,,,,,,,,,
django,8386,closed,body,2017-04-21 09:27:57,00:00,,1,,"b""b' Ticket [28046]url '""",,,,,,,,,,,,,,,,,
django,8386,closed,1,2017-04-21 09:27:57,609.35,,,1,"b""b' @MarkusH Thanks for review.'""",,,,,,,,,,,,,,,,,
django,8386,closed,2,2017-04-21 09:27:57,50.17,,,1,"b""b' The patch looks good but lacks tests.'""",,,,,,,,,,,,,,,,,
django,8386,closed,3,2017-04-21 09:27:57,19.38,,1,,"b""b' I added tests.'""",,,,,,,,,,,,,,,,,
django,8386,closed,closed,2017-05-01 18:17:51,529.9,0,3,2,,,,,,,,,,,,,,,,,,
django,8386,closed,reopened,2017-05-01 18:17:58,0.12,0,3,2,,,,,,,,,,,,,,,,,,
django,8386,closed,4,2017-04-21 09:27:57,1303.85,1,,,"b'b"" Closed by mistake. @MarkusH I think it\'s ready for a final review. ""'",,,,,,,,,,,,,,,,,
django,8386,closed,5,2017-04-21 09:27:57,996.83,,,1,"b""b' @MarkusH Thanks for review. I updated PR.'""",,,,,,,,,,,,,,,,,
django,8386,closed,6,2017-04-21 09:27:57,268.3,,1,,"b""b' I rebased from master.'""",,,,,,,,,,,,,,,,,
django,8386,closed,7,2017-04-21 09:27:57,335.85,,,1,"b""b' @timgraham Thanks for review. I updated PR.'""",,,,,,,,,,,,,,,,,
django,8386,closed,closed,2017-06-27 19:15:16,57.3,1,4,4,,,,,,,,,,,,,,,,,,
django,8386,closed,-,-,-,1,4,4,,,,,,,,,,,,,,,,,,
django,8467,closed,opened,2017-05-06 18:43:20,,,,,,,,,,,,,,,,,,,,,,
django,8467,closed,title,2017-05-06 18:43:20,00:00,,1,,"b""b' Fixed #29227 -Allowed BooleanField to be null=True.'""",,,,,,,,,,,,,,,,,
django,8467,closed,body,2017-05-06 18:43:20,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,8467,closed,closed,2017-05-06 19:12:00,28.67,0,2,0,,,,,,,,,,,,,,,,,,
django,8467,closed,reopened,2017-06-09 16:26:35,1274.58,0,2,0,,,,,,,,,,,,,,,,,,
django,8467,closed,1,2017-05-06 18:43:20,1240.23,,1,,"b""b' I guess could be made to return as well so we can remove support for this now obsolete internal type?'""",,,,,,,,,,,,,,,,,
django,8467,closed,2,2017-05-06 18:43:20,4.85,,1,,"b'b"" @charettes I thought about suggesting that", but wasn\'t sure whether there would be a problem with not distinguishing types. I imagine not given the behaviour should be covered by  . That would make an even smaller deprecated subclass.  Also, by making a subclass of  , other areas can be simplified," such as the following:  url ""'",,,,,,,,,,,,,
django,8467,closed,3,2017-05-06 18:43:20,1407.92,,1,,"b""b' If you decide to stick with the subclass"," this could also be simplified:  url '""",,,,,,,,,,,,,,,,
django,8467,closed,closed,2018-03-20 17:07:13,40.63,0,5,0,,,,,,,,,,,,,,,,,,
django,8467,closed,-,-,-,0,5,0,,,,,,,,,,,,,,,,,,
django,8477,open,opened,2017-05-08 21:51:55,,,,,,,,,,,,,,,,,,,,,,
django,8477,open,title,2017-05-08 21:51:55,00:00,,1,,"b""b' Fixed #28184 -Allowed passing a callable storage to FileField.'""",,,,,,,,,,,,,,,,,
django,8477,open,body,2017-05-08 21:51:55,00:00,,1,,"b""b' Adds the ability to pass a callable as the storage param of FileField"," and testing for this new ability  See [ticket 28184]url  for details.  Signed-off-by: miigotu '""",,,,,,,,,,,,,,,,
django,8477,open,closed,2017-05-08 23:08:35,76.67,0,2,0,,,,,,,,,,,,,,,,,,
django,8477,open,reopened,2017-05-08 23:08:42,0.12,0,2,0,,,,,,,,,,,,,,,,,,
django,8477,open,closed,2017-05-31 15:46:49,998.12,0,2,0,,,,,,,,,,,,,,,,,,
django,8477,open,reopened,2017-05-31 15:46:52,0.05,0,2,0,,,,,,,,,,,,,,,,,,
django,8477,open,1,2017-05-08 21:51:55,1303.25,,1,,"b'b"" Yes", I\'ll fix the build first and then see about the other checks. About the type checking though," there is also no type checking in other places callables are allowed so I just did it the same way. I\'ll test what exactly DOES happen and see for sure.""'",,,,,,,,,,,,,,,
django,8477,open,2,2017-05-08 21:51:55,1288.67,,1,,"b""b' This is going to take me a bit more . These tests fail on master for me also.'""",,,,,,,,,,,,,,,,,
django,8477,open,3,2017-05-08 21:51:55,1019.22,,,1,"b""b' @carltongibson I will add  tomorrow-ish. Please let me know if you can think of any other tests I can add or anything else to improve this. Thanks'""",,,,,,,,,,,,,,,,,
django,8477,open,4,2017-05-08 21:51:55,1178.75,,,1,"b""b' Let me know if this needs more work"," thanks.'""",,,,,,,,,,,,,,,,
django,8477,open,5,2017-05-08 21:51:55,130.82,,1,,"b""b' Will do'""",,,,,,,,,,,,,,,,,
django,8477,open,6,2017-05-08 21:51:55,545.48,,,1,"b'b"" @carltongibson I wasn\'t sure where to add to the changelog. Does this have to wait until 2.2 now or is it allowed in 2.1.3? Also", can you  your review please? I broke github by squashing and force push lol, but I did do all of the requested changes to the PR so far, including some extra tests. I also removed the changes I made to the wordlist," because I don\'t think they should be in this patch.""'",,,,,,,,,,,,,
django,8477,open,7,2017-05-08 21:51:55,947.47,1,,,"b'b"" Sorry about the duplicate reviews. GH\'s UI was having difficulties. ""'",,,,,,,,,,,,,,,,,
django,8477,open,8,2017-05-08 21:51:55,98.9,1,,,"b'b"" Hi @miigotu \\xe2\\x80\\x94 GH\'s review panel seems to be failing me this morning... I\'ll try a comment \\xf0\\x9f\\x98\\x84 Sorry if this ends up appearing several times. - Hi @miigotu  Thanks for updating here. It\'s looking good. \\xf0\\x9f\\x91\\x8d  It\'s a new feature so"," it\'ll have to go in 2.2. Can you update accordingly? ""'",,,,,,,,,,,,,,,,
django,8477,open,9,2017-05-08 21:51:55,781.98,,1,,"b'b"" @carltongibson I\'ve addressed the changes from your last comments", and added an unforeseen way to use this in the example (mostly to make sure someone doesn\'t add a call method to their storage class and something unexpected happen)  This build should pass, let me know if there are any other changes that need to be made," or if my added example is too much.""'",,,,,,,,,,,,,,
django,8477,open,closed,2018-10-30 18:52:40,185.8,2,6,3,,,,,,,,,,,,,,,,,,
django,8477,open,reopened,2018-10-30 18:52:47,0.12,2,6,3,,,,,,,,,,,,,,,,,,
django,8477,open,-,-,-,2,6,3,,,,,,,,,,,,,,,,,,
django,8513,closed,opened,2017-05-17 03:19:32,,,,,,,,,,,,,,,,,,,,,,
django,8513,closed,title,2017-05-17 03:19:32,00:00,,1,,"b""b' Fixed #28102 -Add example for DIRS in TemplatesSetting'""",,,,,,,,,,,,,,,,,
django,8513,closed,body,2017-05-17 03:19:32,00:00,,1,,"b""b' Add example to put the full path for DIRS in TemplatesSetting  Ticket: url '""",,,,,,,,,,,,,,,,,
django,8513,closed,closed,2017-05-17 03:47:12,27.67,0,2,0,,,,,,,,,,,,,,,,,,
django,8513,closed,reopened,2017-05-17 03:51:30,4.3,0,2,0,,,,,,,,,,,,,,,,,,
django,8513,closed,1,2017-05-17 03:19:32,615.98,,1,,"b'b"" This isn\'t correct", at least for the definition of in the settings file generated by  . The built-in widget templates are located where Django is installed," not in the project.""'",,,,,,,,,,,,,,,
django,8513,closed,2,2017-05-17 03:19:32,1226.92,,1,,"b""b' It would be better to include an actual code example rather than the psuedocode. For example"," the path to the Django install is given by  .'""",,,,,,,,,,,,,,,,
django,8513,closed,3,2017-05-17 03:19:32,58.18,,1,,"b""b' I wonder if better to put all the basic path example code in a particular page so we can just link to that page"," just incase we will use them in other place. '""",,,,,,,,,,,,,,,,
django,8513,closed,4,2017-05-17 03:19:32,401.2,,1,,"b'b"" A possibility is: I\'m not sure if this is the best approach.""'",,,,,,,,,,,,,,,,,
django,8513,closed,closed,2017-06-05 21:26:49,1055.32,0,6,0,,,,,,,,,,,,,,,,,,
django,8513,closed,-,-,-,0,6,0,,,,,,,,,,,,,,,,,,
django,8929,closed,opened,2017-08-17 23:00:46,,,,,,,,,,,,,,,,,,,,,,
django,8929,closed,title,2017-08-17 23:00:46,00:00,,1,,"b""b' Fixed #28050 Added template path to TemplateSyntaxError exception.'""",,,,,,,,,,,,,,,,,
django,8929,closed,body,2017-08-17 23:00:46,00:00,,1,,"b'b"" Adjust template exception test to account for template path. Here\'s an example technical_500.html render with the duplication removed: Remove redundant template path and line number in technical_500.html.""'",,,,,,,,,,,,,,,,,
django,8929,closed,closed,2017-08-25 16:41:39,1060.88,0,2,0,,,,,,,,,,,,,,,,,,
django,8929,closed,reopened,2017-08-25 16:42:14,0.58,0,2,0,,,,,,,,,,,,,,,,,,
django,8929,closed,1,2017-08-17 23:00:46,1077.88,1,,,"b'b"" I\'m maybe a bit confused about the proper gitflow. Apologies.  I merged  with the latest master branch from  using:  774  git remote add upstream url  775  git remote -v 776  git fetch upstream 777  git checkout master 778  git merge Then I merged my previous patch into my current ticket branch:  780  git checkout ticket_28050 785  git merge Then I also merged changes to the master into my ticket branch:  781  git merge master  Then I push my ticket branch to origin:  804  git push  However"," that results in my pull request showing all the changes (not just mine) since the PR was created. Is that normal?""'",,,,,,,,,,,,,,,,
django,8929,closed,2,2017-08-17 23:00:46,10.05,,1,,"b'b\' @rogeremasse It should just say ""Merged master into "". To clean things up you can do this: \''",,,,,,,,,,,,,,,,,
django,8929,closed,closed,2017-08-26 13:12:53,1230.65,1,3,0,,,,,,,,,,,,,,,,,,
django,8929,closed,-,-,-,1,3,0,,,,,,,,,,,,,,,,,,
django,9082,closed,opened,2017-09-14 14:26:04,,,,,,,,,,,,,,,,,,,,,,
django,9082,closed,title,2017-09-14 14:26:04,00:00,,1,,"b""b' Fixed #29007 -Fixed DecimalValidator crash on NaN", SNan, Inf," and Infinity values.'""",,,,,,,,,,,,,,
django,9082,closed,body,2017-09-14 14:26:04,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,9082,closed,1,2017-09-14 14:26:04,11.63,,,1,"b""b' Thank you for your contribution. Would it be possible to move the tests to instead? You should be able to test the directly there without dealing with the model layer.'""",,,,,,,,,,,,,,,,,
django,9082,closed,2,2017-09-14 14:26:04,41.42,1,,,"b'b""  Sure", it\'s much better that way. Sorry," I\'m not familiar with the codebase.""'",,,,,,,,,,,,,,,
django,9082,closed,3,2017-09-14 14:26:04,1320.42,,1,,"b""b' @charettes Can you take a look at it?'""",,,,,,,,,,,,,,,,,
django,9082,closed,4,2017-09-14 14:26:04,1421.75,,1,,"b""b' I think we should also include similar tests for as the second case in this patch still fails: I wonder how you reproduced this issue because the other cases already pass without the patch. Can you open a new ticket with details rather than referencing the old ticket?'""",,,,,,,,,,,,,,,,,
django,9082,closed,5,2017-09-14 14:26:04,632.52,,1,,"b""b' @bfabio"," are you able to continue work on this?'""",,,,,,,,,,,,,,,,
django,9082,closed,6,2017-09-14 14:26:04,702.3,,1,,"b'b"" @timgraham I\'ll try to take a look at it in the next few weeks.""'",,,,,,,,,,,,,,,,,
django,9082,closed,7,2017-09-14 14:26:04,388.35,,1,,"b'b""  @timgraham I didn\'t test against the tree as it was on October 10th"," but as of today they don\'t pass against master without the patch.""'",,,,,,,,,,,,,,,,
django,9082,closed,8,2017-09-14 14:26:04,10.32,,,1,"b'b"" The tests that pass are: You should really open a new ticket that demonstrates how to reproduce the crash reported in [#7777]url  otherwise this patch doens\'t have a tracking ticket. Thanks.""'",,,,,,,,,,,,,,,,,
django,9082,closed,closed,2018-01-10 21:27:21,421.28,1,7,2,,,,,,,,,,,,,,,,,,
django,9082,closed,9,2017-09-14 14:26:04,411.57,,1,,"b'b"" I guess closing this meant you didn\'t want to pursue it any further. I split out the fix in url  and will continue the validator fix here.""'",,,,,,,,,,,,,,,,,
django,9082,closed,reopened,2018-01-11 00:46:20,198.98,1,8,2,,,,,,,,,,,,,,,,,,
django,9082,closed,closed,2018-01-11 03:13:12,146.87,1,8,2,,,,,,,,,,,,,,,,,,
django,9082,closed,10,2017-09-14 14:26:04,434.8,1,,,"b""b' @timgraham I was going to create a new ticket and open a new PR. Sorry for the misunderstanding.'""",,,,,,,,,,,,,,,,,
django,9082,closed,-,-,-,2,8,2,,,,,,,,,,,,,,,,,,
django,9323,closed,opened,2017-11-02 16:37:24,,,,,,,,,,,,,,,,,,,,,,
django,9323,closed,title,2017-11-02 16:37:24,00:00,,1,,"b""b' Fixed #28766 -Added .'""",,,,,,,,,,,,,,,,,
django,9323,closed,body,2017-11-02 16:37:24,00:00,,1,,"b'b\' This adds the ""route"" attribute to ResolverMatch", which is set if the new  function is used to define URL patterns.  Track ticket: url \'',,,,,,,,,,,,,,,,
django,9323,closed,1,2017-11-02 16:37:24,470.38,,1,,"b""b' @beniwohli"," do you plan to continue this?'""",,,,,,,,,,,,,,,,
django,9323,closed,2,2017-11-02 16:37:24,1139.45,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,
django,9323,closed,closed,2018-03-20 19:27:14,169.83,0,4,0,,,,,,,,,,,,,,,,,,
django,9323,closed,3,2017-11-02 16:37:24,1205.35,,,1,"b'b"" Hello @timgraham I\'m interested by the feature and willing to finish the work here. What was actually missing ?""'",,,,,,,,,,,,,,,,,
django,9323,closed,4,2017-11-02 16:37:24,3.33,,1,,"b""b' Addressing each of my comments above.'""",,,,,,,,,,,,,,,,,
django,9323,closed,5,2017-11-02 16:37:24,2.8,,1,,"b'b"" Weren\'t they addressed by your own commit url  ? ""'",,,,,,,,,,,,,,,,,
django,9323,closed,reopened,2018-11-16 15:45:09,1217.92,0,6,1,,,,,,,,,,,,,,,,,,
django,9323,closed,6,2017-11-02 16:37:24,7.08,,1,,"b'b"" I\'ll take a look to try to remember why I closed this.""'",,,,,,,,,,,,,,,,,
django,9323,closed,7,2017-11-02 16:37:24,86.23,,1,,"b'b"" @timgraham I added a failing test and a possible fix in url  (I can\'t push on @beniwohli branch) Should I start my own PR ?""'",,,,,,,,,,,,,,,,,
django,9323,closed,8,2017-11-02 16:37:24,134.4,,1,,"b""b' Yes"," you can continue it in a new PR.'""",,,,,,,,,,,,,,,,
django,9323,closed,closed,2018-11-16 19:26:26,221.28,0,9,1,,,,,,,,,,,,,,,,,,
django,9323,closed,9,2017-11-02 16:37:24,744.47,,1,,"b""b' Continued in #10657.'""",,,,,,,,,,,,,,,,,
django,9323,closed,-,-,-,0,10,1,,,,,,,,,,,,,,,,,,
django,9397,closed,opened,2017-11-29 12:03:50,,,,,,,,,,,,,,,,,,,,,,
django,9397,closed,title,2017-11-29 12:03:50,00:00,,1,,"b""b' Ticket 27704'""",,,,,,,,,,,,,,,,,
django,9397,closed,closed,2017-11-29 12:06:05,2.25,0,1,0,,,,,,,,,,,,,,,,,,
django,9397,closed,1,2017-11-29 12:03:50,4.12,,1,,"b'b"" I only wanted to send pull request for this single commit. I don\'t know where I was wrong. can you help me? url ""'",,,,,,,,,,,,,,,,,
django,9397,closed,reopened,2017-11-29 12:08:06,2.02,0,2,0,,,,,,,,,,,,,,,,,,
django,9397,closed,2,2017-11-29 12:03:50,42.85,,1,,"b""b' It looks like you created your branch on  instead of master. Create a branch off of master and cherry-pick your commit over", then force push that branch to this GitHub branch.  By the way," did you find a deficiency in the approach suggested in the older PR url  That patch needs a few simplifications as noted there and adds much less new code.'""",,,,,,,,,,,,,,,
django,9397,closed,3,2017-11-29 12:03:50,110.82,1,,,"b""b' I had not seen it before. It seems to be a more simple solution. The only problem is the widget it use. When there are around 20 choices for a field"," it is really hard for user to scroll down and keep control button down to select items. What do you think?'""",,,,,,,,,,,,,,,,
django,9397,closed,4,2017-11-29 12:03:50,23.87,,1,,"b""b' A checkbox widget should probably be chosen by the user rather than be the default as that would be consistent with other form fields in Django.'""",,,,,,,,,,,,,,,,,
django,9397,closed,closed,2017-12-27 15:05:30,177.4,1,4,0,,,,,,,,,,,,,,,,,,
django,9397,closed,-,-,-,1,4,0,,,,,,,,,,,,,,,,,,
django,9718,closed,opened,2018-02-21 17:31:57,,,,,,,,,,,,,,,,,,,,,,
django,9718,closed,title,2018-02-21 17:31:57,00:00,,1,,"b""b' Fixed #23406 -added a MIGRATIONS_INCLUDE_PYC setting'""",,,,,,,,,,,,,,,,,
django,9718,closed,body,2018-02-21 17:31:57,00:00,,1,,"b""b' \\xe2\\x80\\xa6to allow loading compiled migrations. Based on the patch from jdetaeye in the ticket", but with a setting to control the behavior, documentation," and tests.'""",,,,,,,,,,,,,,
django,9718,closed,1,2018-02-21 17:31:57,20.58,,1,,"b""b' Please check the [patch review checklist]url  A few things are missing such as a release note and a annotation.'""",,,,,,,,,,,,,,,,,
django,9718,closed,2,2018-02-21 17:31:57,906.18,,,1,"b'b\' Hey @dcwatson I\\\'m going to close this \\xe2\\x80\\x94\\xc2\\xa0since ""Revert"" looks like the new best option. (Just leave the branch for now", so we can re-open if that option comes back up.) Are you OK to open a PR reverting the original change? We\\\'ll try and get that reviewed promptly and we can get this working for you. Thanks for the input! \'',,,,,,,,,,,,,,,,
django,9718,closed,closed,2018-03-08 08:58:43,926.77,0,3,1,,,,,,,,,,,,,,,,,,
django,9718,closed,3,2018-02-21 17:31:57,1360.18,,1,,"b'b\' From the ticket: ""...is there any disadvantage to **not** reverting until Python 2.7. is EOL..."" \\xe2\\x80\\x94\\xc2\\xa0Probably not", so we could merge this to avoid any unexpected issues. I\\\'m going to re-open this PR (so we don\\\'t forget it) and mark it RFC. Then we can give it a final review and decide which way to go. Thanks @dcwatson. \'',,,,,,,,,,,,,,,,
django,9718,closed,reopened,2018-03-12 07:38:54,1360.18,0,4,1,,,,,,,,,,,,,,,,,,
django,9718,closed,4,2018-02-21 17:31:57,574.17,,1,,"b""b' I proposed a different approach on the ticket.'""",,,,,,,,,,,,,,,,,
django,9718,closed,closed,2018-03-15 17:13:04,574.17,0,5,1,,,,,,,,,,,,,,,,,,
django,9718,closed,-,-,-,0,5,1,,,,,,,,,,,,,,,,,,
django,9925,closed,opened,2018-05-05 22:03:53,,,,,,,,,,,,,,,,,,,,,,
django,9925,closed,title,2018-05-05 22:03:53,00:00,,1,,"b""b' Fixed #20147 -Added .'""",,,,,,,,,,,,,,,,,
django,9925,closed,body,2018-05-05 22:03:53,00:00,,,1,b'b\' Hello \\xf0\\x9f\\x91\\x8b! My first PR, so please double check my code \\xf0\\x9f\\x98\\x81.  #### Background  Django\\xe2\\x80\\x99s primary deployment platform is [WSGI]url  WSGI uses an [ ]url  dictionary similarly to CGI, which converts all headers to uppercase, replaces dashes with underscores and prepends  . For example, if the client sends the header  , WSGI would store it in as  .  This makes the process of accessing familiar headers a little bit more cumbersome. The ticket #20147 proposes making original headers more easily accesible.  #### Proposed Solution  My solution is simple. Now has a attribute which is an immutable, case-insensitive dictionary with the original names of the headers. I decided because is the most intuitive way of thinking about it," and case insensitive because HTTP specifies so: _""Field names are case-insensitive""_ (see [RFC]url  Example of proposed solution:   #### Implementation details  I looked for ""inspiration"" (\\xf0\\x9f\\x98\\xac) in [Werkzeug]url  (the wsgi framework behind Flask). They implement an [ ]url  which receives the dict and transforms headers to the original format (assuming title case). But"," I didn\\\'t implement the dictionary features in my  . Instead I separated it into another data structure inspired by requests\\\'  [CaseInsensitiveDict]url  (more ""inspiration"" \\xf0\\x9f\\x98\\x85).  #### Design Decisions  A few design decisions that I arbitrarily made and are obviously subject to discussion:  * As mentioned above", separated from the underlying data structure because we might be able to reuse it later. * I didn\\\'t modify the current way the framework uses headers. For example, is still accessing  . It wouldn\\\'t be hard to trace down all the headers being accessed through and change them to  , but I figured I could create **many** merge conflicts by doing so. So please advice. * I updated the docs accordingly, but didn\\\'t indicate any preference or recommendation of one over the other. I repeat, this is my first PR, so comments, suggestion, criticism are welcome.\'',
django,9925,closed,1,2018-05-05 22:03:53,628.62,1,,,"b'b"" This looks like a good start", thanks so much.  A key issue with this feature is unicode and what happens if header values contain non-ascii chars. For that we need to think: 1. Are there any relevant RFCs for this? Based on a comment [here]url  perhaps headers need to assume latin1 encoding always. 2. What exactly does WSGI do to the incoming bytes? url  3. Do we need to apply DEFAULT_CHARSET at any point? 4. Can we get close to an \'end to end\' test for non-ascii characters to ensure the right thing happens, i.e. start with a set of bytes that would arrive, and check what happens to them?  Also be aware that in various docs \'headers\' might refer to response OR request headers, here we are obviously only talking about the latter.  The good news is that we are Python 3 only for this feature, which should make things simpler.  Sorry to just throw in a bunch of questions," I won\'t be around to give further feedback.""'",,,,,,,,,,,
django,9925,closed,2,2018-05-05 22:03:53,225.8,,,1,"b'b"" Re lower-case vs Titled-Hyphens", I don\'t have a strong opinion at this point. Either\'s fine with me. Titled-Hyphens has seemed to stay pretty standard, despite HTTP2 taking off.  Re unicode, I believe wsgi is already handling this (because we\'re on python 3). I think we\'re already getting unicode strings. (I did some work on making sure unicode works in incoming cookies a few years ago," and things seemed to just work.)""'",,,,,,,,,,,,,
django,9925,closed,3,2018-05-05 22:03:53,89.23,,,1,b'b\' Thanks very much folks @carltongibson, @spookylukey, @collinanderson. I can make all the requested changes. I\\\'d like to summarize them first to see if everybody else agree on them:  #### Lowercase Headers As @carltongibson mentioned, HTTP/2 [specifies that they must be converted to lowercase]url  I can do that. After all, it\\\'s a case-insensitive dict, the vs difference is just shown in  , or (I guess when you\\\'re debugging the app). The user can still use if they prefer so.  **Conclusion:** I can quickly change it. Should I? \\xf0\\x9f\\x91\\x8d/\\xf0\\x9f\\x91\\x8e  #### Headers Encoding  This is a tough one. According to the RFC, headers can\\\'t carry characters outside latin1. I did some research and found [an interesting comment by @Lukasa with more details]url  in the requests project. Also some [discussion (more interesting comments)]url  in the httpie project. Python 3 doesn\\\'t even support **sending** non-latin1 headers. They [mention RFC2616]url  in the source code ([forcing latin1 encoding]url  Tried the following:   does support sending non-latin1 headers, but the behavior of servers is erratic and not consistent. I made a few tests. I tried both with a simple Flask app and a Django app; using their respective development servers and gunicorn. Both development servers drop completely the headers that can\\\'t be parsed. Gunicorn makes them available, but they\\\'re completely scrambled and are pretty much useless. These are the results of my experiments (using gunicorn; dev servers don\\\'t even make them available):   **Conclusion:** I think this is way out of our scope. I haven\\\'t tried mod_wsgi or other variants, but I also expect some erratic behavior.  #### E2E tests  As @spookylukey mentioned," I\\\'d love to do some E2E tests. When I implemented this solution I did write a few simple tests using [django-webtest]url  and a few others using and everything worked fine. Are there any ""integration"" tests in the test suite?\''",,,,,,
django,9925,closed,4,2018-05-05 22:03:53,7.95,,1,,"b'b"" @santiagobasulto Good follow-up! Lowercase Headers: hold-off for now to give people a chance to comment. (It\'s probably an _either way_ for most people.) I\'m inclined to agree \\xe2\\x80\\x94\\xc2\\xa0**at least for this PR**. Ultimately all we have here is a filtered wrapper around the existing  "," which we get given by WSGI. If we add nothing else we still have the API improvement. (Our position is certainly no worse.) _Maybe_ we can add other things later but I can\'t see that we should hold this up on that. ""'",,,,,,,,,,,,,,,,
django,9925,closed,5,2018-05-05 22:03:53,60.9,1,,,"b'b"" Sorry for the spam", I was just thinking," we could also rely on the [ ]url  environ variable to check if it\'s and in that case make it all  .""'",,,,,,,,,,,,,,,
django,9925,closed,6,2018-05-05 22:03:53,29.05,,1,,"b'b"" I think the most important thing is to be consistent", regardless of the underlying protocol. It doesn\'t actually go against the http2 spec if we were to use Title-Cased headers here," because we\'re not implementing http2.  ""'",,,,,,,,,,,,,,,
django,9925,closed,7,2018-05-05 22:03:53,723.77,,,1,"b'b\' \\xf0\\x9f\\x91\\x8b hello folks. I\\\'ve addressed all the comments made by @carltongibson. I made a small change to the to make the ""styling"" of headers easily overridable. For now", they\\\'re still title-cased, but extending the class and changing it is extremely simple now (paving the way for future generations right? \\xf0\\x9f\\x98\\x89).  @carltongibson I added the annotation as you suggested with version 2.1. Checking the [roadmap of 2.1]url  I see there are still 3 days until it\\\'s frozen, so this one hopefully gets merged before that.  Thanks for your help and support! Have a great weekend y\\\'all!\'',,,,,,,,,,,,,,
django,9925,closed,8,2018-05-05 22:03:53,21.07,,,1,"b'b"" Thanks @bluetech! I addressed all the comments. I am copying the dict"," but I don\'t think it\'s a big issue compared to the simplicity and safety it adds to the implementation. ""'",,,,,,,,,,,,,,,,
django,9925,closed,closed,2018-05-14 03:50:16,346.38,2,3,5,,,,,,,,,,,,,,,,,,
django,9925,closed,reopened,2018-05-14 03:50:22,0.1,2,3,5,,,,,,,,,,,,,,,,,,
django,9925,closed,9,2018-05-05 22:03:53,1230.0,,1,,"b'b"" @carltongibson \\xf0\\x9f\\x91\\x8d on it. I was away for a few days. I\'ll fix the comments and push. I should use release 2.2"," right?""'",,,,,,,,,,,,,,,,
django,9925,closed,10,2018-05-05 22:03:53,868.35,,1,,"b""b' Yes"," target Django 2.2.'""",,,,,,,,,,,,,,,,
django,9925,closed,11,2018-05-05 22:03:53,574.07,,,1,"b'b"" @timgraham \\xf0\\x9f\\x91\\x8d I\'ll get on it and update. Thanks!""'",,,,,,,,,,,,,,,,,
django,9925,closed,12,2018-05-05 22:03:53,1187.45,,,1,"b'b"" @carltongibson"," thanks SO much for all your help. this community is amazing. I\'ll close the PR for a second so I can work on this without notifying everybody about changes and I\'ll reopen it after it\'s done. Thanks again!""'",,,,,,,,,,,,,,,,
django,9925,closed,closed,2018-07-10 20:10:08,979.77,2,5,7,,,,,,,,,,,,,,,,,,
django,9925,closed,-,-,-,2,5,7,,,,,,,,,,,,,,,,,,
django,10023,closed,opened,2018-06-05 09:40:27,,,,,,,,,,,,,,,,,,,,,,
django,10023,closed,title,2018-06-05 09:40:27,00:00,,1,,"b""b' Fixed #29396 -Fixed crash when using __year lookup with OuterRef.'""",,,,,,,,,,,,,,,,,
django,10023,closed,body,2018-06-05 09:40:27,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,10023,closed,1,2018-06-05 09:40:27,515.25,,,1,"b""b' This patch seems to fix my issue"," thanks! :+1:'""",,,,,,,,,,,,,,,,
django,10023,closed,2,2018-06-05 09:40:27,231.6,,1,,"b""b'   might be the place for the test. Try to reuse existing models if possible as adding models increases the time it takes to run all the tests.'""",,,,,,,,,,,,,,,,,
django,10023,closed,3,2018-06-05 09:40:27,526.82,,,1,"b""b' @timgraham Thank you"," please review the pr.'""",,,,,,,,,,,,,,,,
django,10023,closed,4,2018-06-05 09:40:27,521.72,,1,,"b'b"" I don\'t know how to do with this code   We only want to compare the year but we can\'t just get the year from with OuterRef","  right?""'",,,,,,,,,,,,,,,,
django,10023,closed,5,2018-06-05 09:40:27,6.22,,1,,"b""b' @Windsooon you could if the outer query annotated and you referred to it using  .'""",,,,,,,,,,,,,,,,,
django,10023,closed,6,2018-06-05 09:40:27,38.53,,,1,"b'b"" Thank you @charettes", I didn\'t know we can do this. Now I tried But it work even without the patch. When I look at the sql," I found that the filter didn\'t work.  ""'",,,,,,,,,,,,,,,
django,10023,closed,7,2018-06-05 09:40:27,231.27,,1,,"b""b'  Yes", because does not actually compile the query to SQL. @Windsooon You need to use any of methods evaluating the queryset, or assert I do not understand what you are trying to achieve by putting the filter inside  . As far as I am aware, only the aggregate supports keyword.  I don\\xe2\\x80\\x99t think there is a way to make an alternative queryset to compare with. You can use  /  to annotate the year," but it will still work only with the fix:  is identical to  '""",,,,,,,,,,,,,
django,10023,closed,8,2018-06-05 09:40:27,535.75,,,1,"b""b' Thank you @mitya57"," so what we can do now is ?'""",,,,,,,,,,,,,,,,
django,10023,closed,9,2018-06-05 09:40:27,86.4,,,1,"b""b'   sounds fine as long as the test is only run on one particular DB backend.'""",,,,,,,,,,,,,,,,,
django,10023,closed,10,2018-06-05 09:40:27,371.18,,1,,"b'b"" I\'d use an assertion for the results of the query (as the majority of Django\'s tests do) rather than the SQL.""'",,,,,,,,,,,,,,,,,
django,10023,closed,11,2018-06-05 09:40:27,1018.0,,1,,"b""b' I agreed with @timgraham . So I add another field for testing.'""",,,,,,,,,,,,,,,,,
django,10023,closed,12,2018-06-05 09:40:27,544.28,,1,,"b'b"" @timgraham anything I can do to speed up the merge? the checks didn\'t pass give 404 not found.""'",,,,,,,,,,,,,,,,,
django,10023,closed,13,2018-06-05 09:40:27,1229.58,,1,,"b""b' @Windsooon Can you please address the review comments?'""",,,,,,,,,,,,,,,,,
django,10023,closed,closed,2019-01-13 03:38:43,1078.27,0,10,5,,,,,,,,,,,,,,,,,,
django,10023,closed,reopened,2019-01-13 03:47:36,8.88,0,10,5,,,,,,,,,,,,,,,,,,
django,10023,closed,14,2018-06-05 09:40:27,998.67,1,,,"b'b"" @mitya57 I\'m sorry I messed up with Git", I thought I updated the PR two months ago but it didn\'t :<. I push my PR," hope this would help.""'",,,,,,,,,,,,,,,
django,10023,closed,15,2018-06-05 09:40:27,263.63,,1,,"b""b' Now the diff contains only tests changes. Why did you drop the actual fix part?'""",,,,,,,,,,,,,,,,,
django,10023,closed,16,2018-06-05 09:40:27,92.8,1,,,"b""b' @mitya57 Another mistakes I made :D'""",,,,,,,,,,,,,,,,,
django,10023,closed,17,2018-06-05 09:40:27,50.85,1,,,"b'b\' Now I wonder why the tests are running against your previous commit. E.g. [this log]url  has this line:  Commit message: ""Merge f155e28ec853b803ed8ddf752470baa9f09e5ebf into 573f44d62fe1e87e2c20a74eba5e20ca9ff0ed85""  The first commit ID is from your previous push", not from the current one.  Maybe one of the project members can restart the tests? GitHub\\\'s is now up to date, so a new run should pick up the latest commit.\'',,,,,,,,,,,,,,,
django,10023,closed,18,2018-06-05 09:40:27,1387.33,,1,,"b""b' @timgraham @charettes Ping"," can you please retry tests and review this?'""",,,,,,,,,,,,,,,,
django,10023,closed,19,2018-06-05 09:40:27,1057.7,,1,,"b""b' @timgraham anything I can do with the PR?'""",,,,,,,,,,,,,,,,,
django,10023,closed,20,2018-06-05 09:40:27,2.48,,1,,"b'b"" @Windsooon"," Tim isn\'t available but I think you should start by addressing the comment he left back in November.  url url  ""'",,,,,,,,,,,,,,,,
django,10023,closed,21,2018-06-05 09:40:27,3.52,,1,,"b""b' @charettes Thanks", I found I forget to submit my comments :<. Weird design by Github," right.'""",,,,,,,,,,,,,,,
django,10023,closed,22,2018-06-05 09:40:27,1189.07,,1,,"b'b"" FWIW this issue doesn\'t have anything to do with subqueries/ . The lookups simply never added support for nonvalues. The following test diff reproduces the issue without the use of subqueries ""'",,,,,,,,,,,,,,,,,
django,10023,closed,23,2018-06-05 09:40:27,320.25,,1,,"b""b' Superseded by #11393.'""",,,,,,,,,,,,,,,,,
django,10023,closed,closed,2019-05-21 04:43:21,55.75,3,17,5,,,,,,,,,,,,,,,,,,
django,10023,closed,-,-,-,3,17,5,,,,,,,,,,,,,,,,,,
django,10029,closed,opened,2018-06-06 14:07:33,,,,,,,,,,,,,,,,,,,,,,
django,10029,closed,title,2018-06-06 14:07:33,00:00,,1,,"b""b' [WIP] Refs #29392 -Added command line short option for specifying setting.'""",,,,,,,,,,,,,,,,,
django,10029,closed,body,2018-06-06 14:07:33,00:00,,,1,"b'b"" PR #9933 (for [ticket #29392]url  removed the ability to use abbreviations of the shared options in commands. The key one there is  . Why? Because you couldn\'t define a command with e.g. a option", as this was getting swallowed as by the first _pre-run_ parser. (This even though it\'s unambiguous to the final command parser.) Someone at DjangoCon (who will remain anonymous \\xf0\\x9f\\x99\\x82) said this was a usability back-step: in the shell they were used to doing something like and having it work. The example provided in the bug report struck me (and still does) as compelling. I think it was the right fix (correctness trumping convenience) but I\'m opening this to discuss. This PR adds a short option to  . The hope is, that\'s the best of both worlds. BC Issues: * already uses  . It does this for  . I\'d argue moving it to  is a win (  is always in use, how often?) (Discuss) * User-land commands may be using  . Again, I\'d probably be happy to steal that. (Discuss.) Other options: * Leave it as-is.  * Revert the change from #9933. Todo to merge: [ ] Update 2.1 release notes with extra changes.  [ ] Update with changes to in general and in particular.  ...anything else...?  Is this worth A) a new ticket," B) a post to Django Developers?""'",,,,,,,,,,,,
django,10029,closed,1,2018-06-06 14:07:33,1.78,,1,,"b""b' @rpkilby: PING. You did #9933"," so your input is important here. '""",,,,,,,,,,,,,,,,
django,10029,closed,2,2018-06-06 14:07:33,58.08,1,,,"b'b"" Haha"," so this is embarrassing. I wanted to check if and why worked before just to realize that I have been complaining about a non existing issue: I had shell magic set up for me which expanded to for and \\xf0\\x9f\\x98\\xad It\'s impressive how little helper can go into muscle memory and feel like they have been ever in Django itself.  Sorry for wasting your time @carltongibson -_-""'",,,,,,,,,,,,,,,,
django,10029,closed,closed,2018-06-06 15:07:26,59.88,1,2,1,,,,,,,,,,,,,,,,,,
django,10029,closed,3,2018-06-06 14:07:33,4.38,,1,,"b'b"" I honestly didn\'t know that would actually work (or for that matter). Either way"," my initial problem was loosing which I thought short forms ment but which didn\'t exist either way (see my comment above).""'",,,,,,,,,,,,,,,,
django,10029,closed,4,2018-06-06 14:07:33,157.78,,1,,"b'b"" Also I didn\'t mean to close the PR -if you still have strong feelings for it please reopen. I find weird and am happy with not adding given the backwards issues we\'d introduce On June 6", 2018 4:07:54 PM GMT+02:00," Carlton Gibson  wrote:>@carltongibson requested your review on: #10029 [WIP] Refs>#29392 -Added command line short option for specifying setting..>You are receiving this because your review was requested.>Reply to this email directly or view it on GitHub:>url ""'",,,,,,,,,,,,,,,
django,10029,closed,5,2018-06-06 14:07:33,54.8,,1,,"b""b' Hey @apollo13. Thanks for the follow up. No issues on the confusion. I prefer to double check.  Personally I\\xe2\\x80\\x99m not fussed by the  "," so we can leave it. \\xf0\\x9f\\x91\\x8d '""",,,,,,,,,,,,,,,,
django,10029,closed,6,2018-06-06 14:07:33,72.52,,1,,b'b\' FWIW," I ran into the ""some prefix of \\\'settings\\\' works"" behavior the other day. I wouldn\\\'t mind having a again", though.\'',,,,,,,,,,,,,,,
django,10029,closed,7,2018-06-06 14:07:33,736.22,1,,,"b""b' @MarkusH I cheked in 1.11 -never existed. The prefix stuff is weird at best :D'""",,,,,,,,,,,,,,,,,
django,10029,closed,reopened,2018-06-08 07:03:20,955.9,2,6,1,,,,,,,,,,,,,,,,,,
django,10029,closed,closed,2018-06-08 07:03:25,0.08,2,6,1,,,,,,,,,,,,,,,,,,
django,10029,closed,8,2018-06-06 14:07:33,1372.43,,,1,"b'b""  Yes. The only option is to **add** it. I can see the appeal of that. I think we **could** make the case for the breaking change (and for 2.1 would be a good time given #9933)", but I\'d want someone to champion that (as I haven\'t got  for the ). I republished my branch in case someone wants to drive this forward: I\'m happy to finish the PR," but I don\'t want to do the politics \\xf0\\x9f\\x98\\x83. ""'",,,,,,,,,,,,,,,
django,10029,closed,9,2018-06-06 14:07:33,133.17,1,,,b'b\' I feel a bit silly, but for such a small change, I\\\'m finding myself quite strongly opposed to it. The utility of the settings short option seems marginal at best, and I don\\\'t think the breaking change is worth the tradeoff. In my experience, it\\\'s not common to use in day to day use (where a shorthand would be most relevant). I\\\'ve tended to use in combination with supervisor or other cases where the command is written to a config file and ran indirectly. If for whatever reason I need to use and it\\\'s  to keep repeating it," I just set the environment variable (possibly with [ ]url  or [ ]url  In terms of [starting characters for words in the English language]url  ""s"" is the 5th most common", representing about ~6.5% of all words. In projects I\\\'ve worked on, I have a tendency to expose administrative functions as management commands. Losing this short option would be annoying.\'',,,,,,,,,,
django,10029,closed,10,2018-06-06 14:07:33,172.42,1,,,"b'b""  I think that\'s probably the swinger. No doubt _loads_ of people would be affected. ""'",,,,,,,,,,,,,,,,,
django,10029,closed,-,-,-,4,6,2,,,,,,,,,,,,,,,,,,
django,10066,closed,opened,2018-06-20 03:20:12,,,,,,,,,,,,,,,,,,,,,,
django,10066,closed,title,2018-06-20 03:20:12,00:00,,1,,"b""b' Fixed #29501 -Added support for ./ dbshell -c SQL.'""",,,,,,,,,,,,,,,,,
django,10066,closed,closed,2018-06-20 05:11:16,111.07,0,1,0,,,,,,,,,,,,,,,,,,
django,10066,closed,1,2018-06-20 03:20:12,208.73,,1,,"b""b' @cedric05 What happened here? Did you not want to try to address the test failures? '""",,,,,,,,,,,,,,,,,
django,10066,closed,2,2018-06-20 03:20:12,125.48,,1,,"b""b' i wanted to work on that but my approach is wrong"," i will work on in it tonight @carltongibson '""",,,,,,,,,,,,,,,,
django,10066,closed,reopened,2018-06-23 01:14:02,1202.77,0,3,0,,,,,,,,,,,,,,,,,,
django,10066,closed,3,2018-06-20 03:20:12,1361.73,,1,,"b'b"" i\'m in middle of fixing these tests. instead of going with suggestion in ticket otherwise we had to print or handle how we show output.  ""'",,,,,,,,,,,,,,,,,
django,10066,closed,closed,2018-06-28 06:48:54,334.87,0,4,0,,,,,,,,,,,,,,,,,,
django,10066,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,
django,10152,open,opened,2018-07-08 21:28:51,,,,,,,,,,,,,,,,,,,,,,
django,10152,open,title,2018-07-08 21:28:51,00:00,,1,,"b""b' Fixed #28598: Document lack of BCC in console & filebased email backends'""",,,,,,,,,,,,,,,,,
django,10152,open,body,2018-07-08 21:28:51,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,10152,open,1,2018-07-08 21:28:51,425.12,1,,,"b'b"" @carltongibson do you receive notice when I reply there", I added a few  thoughts on the ticket. Sorry if you do," don\'t mean to spam.""'",,,,,,,,,,,,,,,
django,10152,open,closed,2018-07-11 18:38:57,1270.1,1,2,0,,,,,,,,,,,,,,,,,,
django,10152,open,reopened,2018-07-11 19:20:44,41.78,1,2,0,,,,,,,,,,,,,,,,,,
django,10152,open,2,2018-07-08 21:28:51,887.97,,1,,"b""b' Is there a policy about whether or not the doc bits includes  ? Seems to go with mostly no but occasionally yes.'""",,,,,,,,,,,,,,,,,
django,10152,open,3,2018-07-08 21:28:51,1070.73,,1,,"b""b' @carltongibson indeed this patch passes all the tests re: writing bytes.   The change comes from this patch which mine would partly reverse: c988745cca1225496bfd36910dc3cec5065d8cc4. I do wonder if it was a Python2/Python3 thing.'""",,,,,,,,,,,,,,,,,
django,10152,open,4,2018-07-08 21:28:51,909.97,,1,,"b'b"" @carltongibson here\'s a different possible iteration since we are in agreement about displaying the BCC. Obviously there might be a backward compatibility issue here. I\'m not really in favor of adding the hook you mentioned although I could compromise to that if it\'s what we need to fix-up backwards compatibility.  Thoughts?""'",,,,,,,,,,,,,,,,,
django,10152,open,5,2018-07-08 21:28:51,911.25,,1,,"b'b"" Also curious if your investigation fo the  has turned up anything? That is the reason that there is duplication between file-based and console-based and I didn\'t really understand the reasoning from the linked PR.""'",,,,,,,,,,,,,,,,,
django,10152,open,6,2018-07-08 21:28:51,218.87,,,1,"b'b"" Hey @jschneier. Thanks for the follow-up. I didn\'t get a chance to look at this again yet. I will do so in the next week. I can\'t see much of a BC issue here... (?!)  ""'",,,,,,,,,,,,,,,,,
django,10152,open,7,2018-07-08 21:28:51,714.12,,1,,"b'b"" Regarding c988745cca1225496bfd36910dc3cec5065d8cc4"," it looks to me like there aren\'t any tests for that change. I rolled back to that commit and reverted the changes in and all tests pass on Python 2 and 3.""'",,,,,,,,,,,,,,,,
django,10152,open,8,2018-07-08 21:28:51,840.08,,1,,"b'b""  In the same way that the tests depends on what is output (and thus are currently failing) couldn\'t someone\'s code be depending on it?""'",,,,,,,,,,,,,,,,,
django,10152,open,9,2018-07-08 21:28:51,841.1,,1,,"b""b'  Maybe we can ask @apollo13?'""",,,,,,,,,,,,,,,,,
django,10152,open,10,2018-07-08 21:28:51,848.58,,,1,"b""b'  Yes. Hmmm. I suppose so. But then I steer back towards thinking this should just be a wontfix"," plus \\xe2\\x80\\x9ccreate your own backend if BCCs are important to you\\xe2\\x80\\x9d. (I kind of agree with you that the hook idea is suboptimal \\xe2\\x80\\x94 we should just fix it \\xe2\\x80\\x94 but if BC is a concern then how else do we satisfy both requirements?)'""",,,,,,,,,,,,,,,,
django,10152,open,11,2018-07-08 21:28:51,850.08,1,,,"b""b' I was thinking a release note message with the code to restore.'""",,,,,,,,,,,,,,,,,
django,10152,open,12,2018-07-08 21:28:51,856.67,,1,,"b""b' @jschneier url  The main reason was consistency. I had an issue with my emails and wanted to debug it with the console backend. This did not work because the unicode representation used a different encoding then when writing to bytes. Imo my change still makes sense"," even if there are not tests showing it.'""",,,,,,,,,,,,,,,,
django,10152,open,13,2018-07-08 21:28:51,868.1,,,1,"b""b' Yeah that\\xe2\\x80\\x99s fine. More unsure about if the change to file-based is needed. Changing the mode to from would mean we don\\xe2\\x80\\x99t need to override and since we aren\\xe2\\x80\\x99t specifying an encoding I assume that it ends up being written out in non mode the same? Namely with  . Not my area of expertise but would make sense to me logically"," please let me know if I\\xe2\\x80\\x99ve missed something.'""",,,,,,,,,,,,,,,,
django,10152,open,14,2018-07-08 21:28:51,872.53,,,1,"b'b"" @jschneier It should be fine to write to the file in non-binary mode as long as you use and then (ie just don\'t use  ; which will result in a different serialization then for a normal smtp transaction). Maybe also add a comment on why the bytes -> decode dance is there that it doesn\'t get replaced by accident.""'",,,,,,,,,,,,,,,,,
django,10152,open,15,2018-07-08 21:28:51,984.55,,,1,"b""b' Just opened #10241  pursuant to this discussion. Probably if we really want to mimic the smtp backend we should also add  ? Appreciate any feedback there.'""",,,,,,,,,,,,,,,,,
django,10152,open,16,2018-07-08 21:28:51,987.17,,,1,"b""b' Good catch"," yes. I think I added after I rewrote the filebackend and forgot to add it there :)'""",,,,,,,,,,,,,,,,
django,10152,open,17,2018-07-08 21:28:51,18.72,,,1,"b""b' Interestingly using results in test failures on Windows.'""",,,,,,,,,,,,,,,,,
django,10152,open,18,2018-07-08 21:28:51,267.48,,,1,"b'b"" Mind showing which? I don\'t have a windows system currently :)""'",,,,,,,,,,,,,,,,,
django,10152,open,19,2018-07-08 21:28:51,763.93,1,,,"b""b' Me neither.  I pushed up the changes in the aforementioned PR including and it failed 15 tests on the file-based backend which I think are all of the ones that depend on on the Windows sqlite build config. I\\xe2\\x80\\x99ve since force-pushed over it.  EDIT: Hold on", that test is still failing," further investigation required. Annoying when your test platform is PRs :) '""",,,,,,,,,,,,,,,
django,10152,open,20,2018-07-08 21:28:51,196.32,,,1,"b'b"" Right", lets see if we can roll this up... (It shouldn\'t be _that_ complicated... \\xf0\\x9f\\x98\\x84) @jschneier: What do you **want** to do here? What\'s the idea outcome for you? @all: can we accept a BC change? Surely it\'s easier for people to test the logic that generates the arguments to the call (e.g.  ) rather than call re-parsing the output later (?)) (If so the change suggested here looks fine to me in principle.) Failing that: My idea for the hook was easier subclassing with a behaviour change. If that\'s not worth the effort (which it may not be) then I\'m inclined towards  . I had thought even the doc change wasn\'t really necessary but, since Josh ran into it to, it probably is worth mentioning. If we nail down the strategy," I can help debug the windows issues etc. (A bit of de-duplication here seems feasible.) ""'",,,,,,,,,,,,,
django,10152,open,-,-,-,3,10,9,,,,,,,,,,,,,,,,,,
django,10171,closed,opened,2018-07-10 20:56:43,,,,,,,,,,,,,,,,,,,,,,
django,10171,closed,title,2018-07-10 20:56:43,00:00,,1,,"b""b' Fixed #20147 -Added .'""",,,,,,,,,,,,,,,,,
django,10171,closed,body,2018-07-10 20:56:43,00:00,1,,,"b'b"" Original PR (with discussion included): url I\'ve rebased from master and squashed all the commits into one.""'",,,,,,,,,,,,,,,,,
django,10171,closed,1,2018-07-10 20:56:43,25.47,,,1,"b'b"" \\xf0\\x9f\\x91\\x8b folks", there\'s only one build failing with: I haven\'t changed any dependency or  file," do you have an idea of what might be going on?  Thanks!""'",,,,,,,,,,,,,,,
django,10171,closed,closed,2018-07-13 11:51:05,894.37,1,1,1,,,,,,,,,,,,,,,,,,
django,10171,closed,reopened,2018-07-13 11:51:09,0.07,1,1,1,,,,,,,,,,,,,,,,,,
django,10171,closed,2,2018-07-10 20:56:43,870.5,,1,,"b""b' There seems to be an error with jenkins not finding the right commit after the rebase. Anybody has an idea how I could fix this?'""",,,,,,,,,,,,,,,,,
django,10171,closed,3,2018-07-10 20:56:43,162.73,,1,,"b'b"" You\'re right", when I submitted the PR originally, it was failing," it\'s working now \\xf0\\x9f\\x91\\x8d ""'",,,,,,,,,,,,,,
django,10171,closed,4,2018-07-10 20:56:43,1.15,,,1,"b""b' @carltongibson @timgraham PR finally rebased and working. Thanks for all your support. Gonna say this once again"," this community is amazing. '""",,,,,,,,,,,,,,,,
django,10171,closed,5,2018-07-10 20:56:43,1336.73,,,1,"b""b' Hello @carltongibson @timgraham \\xf0\\x9f\\x91\\x8b ! You think I could merge this one or should I make any other improvement?'""",,,,,,,,,,,,,,,,,
django,10171,closed,6,2018-07-10 20:56:43,83.32,,,1,"b'b"" Hi @santiagobasulto. As far as I can see the comments from @jschneier and @adamchainz remain unaddressed. Just dropping from the naming may be enough to address @jschneier\'s point (???)  Overall it seems quite good to me. If you can address the points and then uncheck on the ticket"," I\'ll have another look. (Seems like a nice feature for the amount of code.) ""'",,,,,,,,,,,,,,,,
django,10171,closed,7,2018-07-10 20:56:43,313.6,,,1,"b'b"" Great"," thanks @carltongibson. I\'ll get on it and update soon.""'",,,,,,,,,,,,,,,,
django,10171,closed,8,2018-07-10 20:56:43,64.28,,1,,"b'b"" Hi @santiagobasulto. This still looks good. It would be a super addition for v2.2. Are you up for pushing it over the finish line? (If not we\'ll see if we can pick it up...) Re @jschneier\'s query on immutability", from [PEP 3333]url  (the WSGI spec): So it\'s not immutable, by design. Your implements (which is read-only, vs  ) so maybe just  , not worrying about actual immutability.  is then (via your  ) a case-insensitive," read-only accessor. (Just what we want.)  (Anybody wanting to actually mutate \\xe2\\x80\\x94\\xc2\\xa0Why? \\xf0\\x9f\\x99\\x82 \\xe2\\x80\\x94\\xc2\\xa0can access it directly.) Moving as per @adamchainz\'s review and making the adjustments Tim suggested shouldn\'t leave it far off. ""'",,,,,,,,,,,,
django,10171,closed,9,2018-07-10 20:56:43,8.38,1,,,"b'b"" Hey @carltongibson! Yes", I\'ll get to this immediately and push the fixes by tomorrow. Sorry," I\'ve been quite busy lately but I don\'t want to keep postponing this.""'",,,,,,,,,,,,,,,
django,10171,closed,10,2018-07-10 20:56:43,1121.6,,,1,"b'b"" Hey folks! Thanks @carltongibson for the support so far. Quick summary: master rebased"," comments by @timgraham and @adamchainz addressed. I\'ve just rebased and pushed but seems like something is broken (there have been many changes since my first commit). I\'ll fix and this should be done by today.""'",,,,,,,,,,,,,,,,
django,10171,closed,11,2018-07-10 20:56:43,281.4,,1,,"b""b' Hi Santiago. Thanks for the work! I will review on Tuesday"," so no panic. \\xf0\\x9f\\x99\\x82'""",,,,,,,,,,,,,,,,
django,10171,closed,12,2018-07-10 20:56:43,1148.72,,1,,"b'b"" @carltongibson Agree completely on the Mapping suggestion"," I\'ll fix it now. I somehow missed one of Tim fixes. I\'ll update everything together.""'",,,,,,,,,,,,,,,,
django,10171,closed,13,2018-07-10 20:56:43,91.5,,,1,"b""b' Looking good! I love the changes'""",,,,,,,,,,,,,,,,,
django,10171,closed,14,2018-07-10 20:56:43,15.33,,,1,"b'b"" @carltongibson all done now"," I\'ll submit the doc changes in a separate PR. I\'ll take some time to read the whole text and see if there are other improvements to do. Thank so much again for your patience.""'",,,,,,,,,,,,,,,,
django,10171,closed,15,2018-07-10 20:56:43,545.73,,,1,"b'b"" @carltongibson @timgraham hey folks \\xf0\\x9f\\x91\\x8b! Is there anything else you\'d like me to change here? I \'ve addressed all your comments and seems like everything is passing. January 14th is the deadline for 2.2 features"," right?""'",,,,,,,,,,,,,,,,
django,10171,closed,16,2018-07-10 20:56:43,727.47,,1,,"b'b\' Don\\\'t forget to uncheck ""Patch needs improvement"" on the ticket so that it appears in the review queue.\''",,,,,,,,,,,,,,,,,
django,10171,closed,17,2018-07-10 20:56:43,25.75,,,1,"b""b' @timgraham I forgot about that \\xf0\\x9f\\xa4\\xa6\\xe2\\x80\\x8d\\xe2\\x99\\x82\\xef\\xb8\\x8f"," thanks for the help.'""",,,,,,,,,,,,,,,,
django,10171,closed,18,2018-07-10 20:56:43,383.47,,,1,"b'b"" @santiagobasulto If you get a chance", do you want to update the doc string for with the text that carltongibson suggested? Otherwise, I like this PR. Thanks so much! In some ways it would be nice if a header was changed in dict it would change the other," but I don\'t think that\'s going to be an issue. I don\'t think people modify incoming headers much.""'",,,,,,,,,,,,,,
django,10171,closed,19,2018-07-10 20:56:43,24.18,,,1,"b'b"" @collinanderson thanks for the nudge", I just fixed the docs and added a simple example. I remember we discussed the issue of updated headers," but the consensus was that was extremely rare to update incoming request headers. I\'m happy to revisit it if you want. ""'",,,,,,,,,,,,,,,
django,10171,closed,20,2018-07-10 20:56:43,6.32,,1,,"b'b"" @santiagobasulto yeah I don\'t think updating headers is worth it.""'",,,,,,,,,,,,,,,,,
django,10171,closed,21,2018-07-10 20:56:43,271.9,,1,,b'b\' Hey folks \\xf0\\x9f\\x91\\x8b ," just finished addressing comments by @timgraham; also improved docs with the suggestions by @carltongibson (replace ""dict"" with case insensitive mapping). The only open thing to resolve is in this comment: url I have the whole day free tomorrow (traveling to Raleigh NC for the first time", if you have recommendations of cool things to do they\\\'re welcome \\xf0\\x9f\\x98\\x81). So I\\\'d like to finish every open issue on this one and get it merged between the feature freeze. IMO having will really help beginners.\'',,,,,,,,,,,,,,,
django,10171,closed,22,2018-07-10 20:56:43,163.77,1,,,"b""b' @santiagobasulto Could you document what will be returned if duplicated header present in the request?  url  >  A sender MUST NOT generate multiple header fields with the same field name in a message unless either the entire field value for that header field is defined as a comma-separated list [i.e."," #(values)] or the header field is a well-known exception (as noted below).'""",,,,,,,,,,,,,,,,
django,10171,closed,closed,2019-01-16 19:09:04,437.92,3,9,12,,,,,,,,,,,,,,,,,,
django,10171,closed,23,2018-07-10 20:56:43,978.22,,1,,"b""b' \\xf0\\x9f\\x8e\\x89'""",,,,,,,,,,,,,,,,,
django,10171,closed,-,-,-,3,10,12,,,,,,,,,,,,,,,,,,
django,10200,closed,opened,2018-07-19 02:07:52,,,,,,,,,,,,,,,,,,,,,,
django,10200,closed,title,2018-07-19 02:07:52,00:00,,1,,"b'b"" Fixed #29576 -Corrected the test client\'s HTTP_COOKIE header.""'",,,,,,,,,,,,,,,,,
django,10200,closed,body,2018-07-19 02:07:52,00:00,,1,,"b'b"" This existing implementation wrongly constructs cookies into: \' sessionid=helloworld; Domain=None; expires=None; Max-Age=None; Path=/\'  For the given example"," this fix will correct the construction to be: \'sessionid=helloworld\'""'",,,,,,,,,,,,,,,,
django,10200,closed,1,2018-07-19 02:07:52,779.47,,1,,"b""b' Could you add a test in or  ?'""",,,,,,,,,,,,,,,,,
django,10200,closed,closed,2018-07-19 20:49:06,1121.23,0,3,0,,,,,,,,,,,,,,,,,,
django,10200,closed,2,2018-07-19 02:07:52,376.18,,1,,"b""b' Test added in url '""",,,,,,,,,,,,,,,,,
django,10200,closed,reopened,2018-07-21 23:25:58,156.87,0,4,0,,,,,,,,,,,,,,,,,,
django,10200,closed,closed,2018-07-21 23:28:26,2.47,0,4,0,,,,,,,,,,,,,,,,,,
django,10200,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,
django,10257,closed,opened,2018-08-02 02:18:01,,,,,,,,,,,,,,,,,,,,,,
django,10257,closed,title,2018-08-02 02:18:01,00:00,,1,,"b""b' Fixed #29626"," #29584 -Added optimized versions of get_many() and delete_many() for the db cache backend.'""",,,,,,,,,,,,,,,,
django,10257,closed,body,2018-08-02 02:18:01,00:00,,1,,"b""b' url  url  related PR: #10246 #10258 '""",,,,,,,,,,,,,,,,,
django,10257,closed,1,2018-08-02 02:18:01,455.35,,1,,"b""b' Please can you also add some documentation to show that is now supported and a release note?'""",,,,,,,,,,,,,,,,,
django,10257,closed,2,2018-08-02 02:18:01,626.12,,1,,"b'b"" I don\'t think documentation is needed. This is merely optimizing the implementation inherited from the base class.""'",,,,,,,,,,,,,,,,,
django,10257,closed,3,2018-08-02 02:18:01,3.95,,1,,"b'b""  Oh"," I misunderstood from the title and thought it wasn\'t supported at all.""'",,,,,,,,,,,,,,,,
django,10257,closed,4,2018-08-02 02:18:01,786.8,1,,,"b'b"" @pope1ni @timgraham  Thank you so much for your kind review and i\'m sorry i didn\'t do it right at once. I learned a lot from your review and tried to fix it. I rebased url  branch and revised it according to your advise.""'",,,,,,,,,,,,,,,,,
django,10257,closed,5,2018-08-02 02:18:01,1250.0,,1,,"b""b' Thank you very much for your review. The two PRs(#10257 "," #10258 ) are confusing. So I am going to close the PRs and merge theme to new one revised according to your advices.'""",,,,,,,,,,,,,,,,
django,10257,closed,closed,2018-08-07 06:20:14,242.22,1,6,0,,,,,,,,,,,,,,,,,,
django,10257,closed,6,2018-08-02 02:18:01,101.38,,1,,"b""b' @MyungSeKyo you could have kept this PR open", updating the title and commits," and only closed #10258 as this PR contained pretty much everything from that PR...'""",,,,,,,,,,,,,,,
django,10257,closed,7,2018-08-02 02:18:01,80.4,,1,,"b""b' @pope1ni Oh I see"," I am going to add some commits to this PR.'""",,,,,,,,,,,,,,,,
django,10257,closed,reopened,2018-08-07 09:22:01,181.78,1,8,0,,,,,,,,,,,,,,,,,,
django,10257,closed,8,2018-08-02 02:18:01,971.4,,,1,"b""b' I removed the code using not when the because there is no difference between and in that case. and optimize test code. url  url  @timgraham @charettes @pope1ni @adamchainz  Thanks for your advise. I revised as much as i can according to your advise. But","there may still be code to be revised. Do you have any more corrections?'""",,,,,,,,,,,,,,,,
django,10257,closed,9,2018-08-02 02:18:01,372.75,,,1,"b""b' Could it be merged if it is fine?'""",,,,,,,,,,,,,,,,,
django,10257,closed,10,2018-08-02 02:18:01,841.15,,1,,b'b\' I\\\'m not a database expert but I\\\'m not sure if and are always equivalent. There\\\'s a comment on [the stackoverflow post]url  that you linked to that says,"if your column_value is indexed, IN operator may not read it as an index."" Is it a concern?\''
django	10257	closed	11	adamchainz	2018-08-02 02:18:01	11.58			+1	b'b\' That comment doesn\\\'t look like very strong evidence to me, ""IN operator may not read it as an index"" would have the server skipping one of the most obvious optimizations. It also doesn\\\'t cite a version or anything.  A quick test with on sqlite and MariaDB shows has the same explain plan as on both, on a simple table:   and on MariaDB: \''
django	10257	closed	12	timgraham	2018-08-02 02:18:01	3.02		+1		b'b"" Okay, if it causes a problem, we\'ll learn something.""'
django	10257	closed	13	MyungSeKyo	2018-08-02 02:18:01	209.23			+1	b""b' @adamchainz @timgraham  Thanks for your review. I moved the tests to the right location'",,,,,,,,,,,,,,,,
django,10257,closed,closed,2018-08-17 19:58:46,636.75,1,10,4,,,,,,,,,,,,,,,,,,
django,10257,closed,-,-,-,1,10,4,,,,,,,,,,,,,,,,,,
django,10280,closed,opened,2018-08-09 07:57:05,,,,,,,,,,,,,,,,,,,,,,
django,10280,closed,title,2018-08-09 07:57:05,00:00,,1,,"b""b' Fixed #29654 -Made Truncator use ellipsis character instead of three dots.'""",,,,,,,,,,,,,,,,,
django,10280,closed,body,2018-08-09 07:57:05,00:00,,1,,"b""b' Fixes url '""",,,,,,,,,,,,,,,,,
django,10280,closed,1,2018-08-09 07:57:05,577.75,,1,,"b""b' @claudep  pointed out: Should we expand this ticket to find and replace with ellipses throughout the project?'""",,,,,,,,,,,,,,,,,
django,10280,closed,2,2018-08-09 07:57:05,0.27,,1,,"b'b"" @jeffyancey the master branch is Python 3 only and were previously using so this shouldn\'t be an issue.""'",,,,,,,,,,,,,,,,,
django,10280,closed,3,2018-08-09 07:57:05,1330.13,,1,,"b""b' Are you able to continue or do you want some help?'""",,,,,,,,,,,,,,,,,
django,10280,closed,4,2018-08-09 07:57:05,1065.97,,,1,"b'b"" I got a little busy with my day job. I\'ll try and finish it up by the end of this week. If anyone wants to help"," they are most welcome.""'",,,,,,,,,,,,,,,,
django,10280,closed,closed,2018-08-16 13:54:02,356.95,0,5,1,,,,,,,,,,,,,,,,,,
django,10280,closed,reopened,2018-08-16 15:01:22,67.33,0,5,1,,,,,,,,,,,,,,,,,,
django,10280,closed,5,2018-08-09 07:57:05,345.9,,1,,"b""b' Completed in url '""",,,,,,,,,,,,,,,,,
django,10280,closed,closed,2018-08-21 15:17:06,15.73,0,6,1,,,,,,,,,,,,,,,,,,
django,10280,closed,-,-,-,0,6,1,,,,,,,,,,,,,,,,,,
django,10284,closed,opened,2018-08-11 04:36:35,,,,,,,,,,,,,,,,,,,,,,
django,10284,closed,title,2018-08-11 04:36:35,00:00,,1,,"b'b"" Fixed #29619 -Raised FieldError\'s should include the field that caused the error""'",,,,,,,,,,,,,,,,,
django,10284,closed,body,2018-08-11 04:36:35,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,10284,closed,closed,2018-08-11 18:35:15,838.67,0,2,0,,,,,,,,,,,,,,,,,,
django,10284,closed,reopened,2018-08-11 18:43:55,8.67,0,2,0,,,,,,,,,,,,,,,,,,
django,10284,closed,1,2018-08-11 04:36:35,848.35,,1,,"b""b' branch management shenanigans led me to accidentally close this  the branch. Restored and reopening.'""",,,,,,,,,,,,,,,,,
django,10284,closed,2,2018-08-11 04:36:35,52.15,,1,,"b""b' Looks like the database tests failed due to losing connection during testing. Is there a way for a PR creator to have the tests rerun aside from making a new commit to the branch?'""",,,,,,,,,,,,,,,,,
django,10284,closed,3,2018-08-11 04:36:35,1301.85,,1,,"b""b' @timgraham I believe this to be passing all checks"," is there a way for me to rerun the checks so that it can be flagged as passing for potential reviewers?'""",,,,,,,,,,,,,,,,
django,10284,closed,4,2018-08-11 04:36:35,8.95,1,,,"b'b\' See the [patch review checklist]url  You need to add a link to the PR on the ticket and check ""Has patch"" on the ticket", don\\\'t worry about non-deterministic failures although you can amend and force push to re-run the checks. As for the patch itself, it looks like at least tests are lacking (many places changed but only a couple messages tested). I\\\'m not sure if that ordering message is an actual improvement, it still seems somewhat obscure as far as giving help to track down the issue.\'',,,,,,,,,,,,,,
django,10284,closed,5,2018-08-11 04:36:35,13.65,1,,,"b'b"" I\'ll review the checklist and can add additional testing. As far as messaging would it be sufficient or preferable to simply 6 indicate the field"," as requested in the ticket? ""'",,,,,,,,,,,,,,,,
django,10284,closed,6,2018-08-11 04:36:35,3.13,1,,,"b'b"" Whatever you think makes sense. The ticket doesn\'t describe a particular use case that caused confusion.""'",,,,,,,,,,,,,,,,,
django,10284,closed,7,2018-08-11 04:36:35,299.87,,1,,"b""b' Continued in url '""",,,,,,,,,,,,,,,,,
django,10284,closed,closed,2019-01-09 22:44:32,240.62,3,6,0,,,,,,,,,,,,,,,,,,
django,10284,closed,-,-,-,3,6,0,,,,,,,,,,,,,,,,,,
django,10301,closed,opened,2018-08-16 00:36:27,,,,,,,,,,,,,,,,,,,,,,
django,10301,closed,title,2018-08-16 00:36:27,00:00,,1,,"b""b' Fixed #29500 -Fixed SQLite function crashes on null values.'""",,,,,,,,,,,,,,,,,
django,10301,closed,body,2018-08-16 00:36:27,00:00,,1,,"b""b' Ticket [#29500]url  supersedes PR #10121.'""",,,,,,,,,,,,,,,,,
django,10301,closed,1,2018-08-16 00:36:27,756.9,,1,,"b'b"" There isn\'t a formal policy about having a blank line after the declaration of a test class but I don\'t see value in adding them.""'",,,,,,,,,,,,,,,,,
django,10301,closed,closed,2018-08-16 13:13:25,756.97,0,3,0,,,,,,,,,,,,,,,,,,
django,10301,closed,reopened,2018-08-16 13:13:26,0.02,0,3,0,,,,,,,,,,,,,,,,,,
django,10301,closed,2,2018-08-16 00:36:27,2.17,,1,,"b""b'  Ok. Will revert those..  ~~Am struggling to get the oracle tests to run again. Managed it once. Any ideas?~~ Just started now.'""",,,,,,,,,,,,,,,,,
django,10301,closed,3,2018-08-16 00:36:27,117.58,,1,,"b""b' I think this is ready for final review. All tests passed", including Oracle.  (Have reverted the blank lines in those files that were moved I only added them for consistency with all of the other test modules that have them," and because it is more readable.)'""",,,,,,,,,,,,,,,
django,10301,closed,4,2018-08-16 00:36:27,347.65,,1,,"b'b"" Did you audit this carefully? I don\'t see any test failures with the blocks removed"," for example.""'",,,,,,,,,,,,,,,,
django,10301,closed,5,2018-08-16 00:36:27,37.22,,1,,"b""b'  I think that the two cases where I added this are already tested if was passed"," the type casts raised an exception and was returned. The additional check is a minor optimisation that is used in some of the other similar functions nearby see and above and below.'""",,,,,,,,,,,,,,,,
django,10301,closed,6,2018-08-16 00:36:27,226.87,1,,,"b'b"" I added inside those new if statements and didn\'t get any failures. If you look at the [coverage report]url  for  "," you\'ll see that existing coverage isn\'t very good.""'",,,,,,,,,,,,,,,,
django,10301,closed,7,2018-08-16 00:36:27,415.62,,1,,"b'b"" Ok. I see the problem. The tests for those are not going to be sqlite-specific", however," as they are solely used in methods in which are called from backend-agnostic code. That means the null case is not tested for any backend. ~~I\'m out of time to address those before next week.~~""'",,,,,,,,,,,,,,,
django,10301,closed,8,2018-08-16 00:36:27,855.65,1,,,"b'b"" So I\'ve tracked down where all the functions are used only in  : Of these functions", only and are referenced directly in  , which is strange as they are sqlite-specific and, in fact, these tests are really testing and  .  Many of the others are only tested by test cases in  .  Some more of the functions still need testing, but I\'ve improved coverage for a number of these above that are used by the database functions  ,  ," and  .""'",,,,,,,,,,
django,10301,closed,9,2018-08-16 00:36:27,6.55,,,1,"b""b' Great! Could you please send the additional test coverage and any other unrelated changes as separate PR(s)?'""",,,,,,,,,,,,,,,,,
django,10301,closed,10,2018-08-16 00:36:27,18.42,,1,,"b""b' I thought all the changes in the fixup commit were related... Either required test cases to test the added code"," or changes to other code to allow to be passed properly as an argument in certain cases where is was incorrectly disallowed. Without which the tests cannot work properly.  Will have to pick this up next week now and finish off the tests for a few of the other functions that have had added.'""",,,,,,,,,,,,,,,,
django,10301,closed,11,2018-08-16 00:36:27,5.62,,1,,"b'b"" I spot checked and saw that and pass without the changes in this PR so that\'s the sort of thing that I\'d separately (that\'s adding test coverage for existing checks"," correct?).""'",,,,,,,,,,,,,,,,
django,10301,closed,12,2018-08-16 00:36:27,8.67,,1,,"b'b"" True. So next week I\'ll split out tests that add coverage for existing code and leave the test additions for the newly added checks in this PR.""'",,,,,,,,,,,,,,,,,
django,10301,closed,13,2018-08-16 00:36:27,8.95,,1,,"b'b"" (Actually that audit isn\'t correct. I tested incorrectly.)""'",,,,,,,,,,,,,,,,,
django,10301,closed,closed,2018-08-29 23:32:43,619.28,2,12,1,,,,,,,,,,,,,,,,,,
django,10301,closed,reopened,2018-08-29 23:32:46,0.05,2,12,1,,,,,,,,,,,,,,,,,,
django,10301,closed,14,2018-08-16 00:36:27,30.02,,,1,"b'b"" So I\'m bumping into with the following test: It seems that subtracting two  s returns a and not which is what we need for  . I [gather]url  that we need to use but that is already done in  ...  This works fine for all other backends. Any Oracle experts able to guide me here?""'",,,,,,,,,,,,,,,,,
django,10301,closed,15,2018-08-16 00:36:27,1173.3,1,,,"b""b' @pope1ni Subtracting two  s returns a in Oracle", but subtracting with works differently :disappointed::  returns  ," returns  .  We can fix this by casting an expression to  : '""",,,,,,,,,,,,,,,
django,10301,closed,16,2018-08-16 00:36:27,116.45,,,1,"b""b' Thanks Mariusz"," that worked well. I *think* this is now complete. Test failure is unrelated.'""",,,,,,,,,,,,,,,,
django,10301,closed,closed,2018-09-10 19:27:58,1195.2,3,12,3,,,,,,,,,,,,,,,,,,
django,10301,closed,17,2018-08-16 00:36:27,722.33,,,1,"b""b' Thanks for the reviews and consulting of the Oracle!'""",,,,,,,,,,,,,,,,,
django,10301,closed,-,-,-,3,12,4,,,,,,,,,,,,,,,,,,
django,10306,closed,opened,2018-08-16 13:09:43,,,,,,,,,,,,,,,,,,,,,,
django,10306,closed,title,2018-08-16 13:09:43,00:00,,1,,"b""b' Fixed #29654 -Made Truncator use ellipsis character instead of three dots. -Test cases and .po'""",,,,,,,,,,,,,,,,,
django,10306,closed,body,2018-08-16 13:09:43,00:00,,1,,"b""b' Additional patch to PR #10280 Fixed the test cases and changed the .po-files for all the translations.  Additional fixes to url '""",,,,,,,,,,,,,,,,,
django,10306,closed,1,2018-08-16 13:09:43,43.32,,1,,"b'b"" po files shouldn\'t be changed as those updates have to be made in Transifex. In the future"," please run the tests locally and fix failures before creating a pull request.""'",,,,,,,,,,,,,,,,
django,10306,closed,closed,2018-08-16 13:56:34,46.85,0,3,0,,,,,,,,,,,,,,,,,,
django,10306,closed,reopened,2018-08-16 13:59:50,3.27,0,3,0,,,,,,,,,,,,,,,,,,
django,10306,closed,2,2018-08-16 13:09:43,10.83,,1,,"b""b' @timgraham Should we just dump this PO and redo it the right way?'""",,,,,,,,,,,,,,,,,
django,10306,closed,3,2018-08-16 13:09:43,6.75,,1,,"b""b' No need to open a new PR"," you can amend this one.'""",,,,,,,,,,,,,,,,
django,10306,closed,4,2018-08-16 13:09:43,21.37,,1,,"b""b' Commits not preserved :('""",,,,,,,,,,,,,,,,,
django,10306,closed,5,2018-08-16 13:09:43,23.95,,1,,"b""b' Let us reopen #10280 and skip this PR. @timgraham '""",,,,,,,,,,,,,,,,,
django,10306,closed,closed,2018-08-16 15:01:15,61.42,0,7,0,,,,,,,,,,,,,,,,,,
django,10306,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,
django,10414,closed,opened,2018-09-19 13:06:12,,,,,,,,,,,,,,,,,,,,,,
django,10414,closed,title,2018-09-19 13:06:12,00:00,,1,,"b""b' Edited doc to remove fluff and snark'""",,,,,,,,,,,,,,,,,
django,10414,closed,body,2018-09-19 13:06:12,00:00,,1,,"b""b' I edited the doc to conform to the 80 character line rule. Also"," copy editing on the text. @Ian-Foote '""",,,,,,,,,,,,,,,,
django,10414,closed,1,2018-09-19 13:06:12,35.75,,1,,"b""b' @adamchainz '""",,,,,,,,,,,,,,,,,
django,10414,closed,2,2018-09-19 13:06:12,221.25,,1,,"b'b"" One consideration is that all modified text has to be redone by documentation translators. Therefore"," we try to avoid making a lot of cosmetic edits that don\'t add much.""'",,,,,,,,,,,,,,,,
django,10414,closed,3,2018-09-19 13:06:12,1085.78,,,1,"b""b' Hi Tim"," Sure. I was doing this as a beginner contribution in the sprint at Pycon. Ian kindly walked me through the changes and we reverted all the cosmetic ones.  Cheers.'""",,,,,,,,,,,,,,,,
django,10414,closed,4,2018-09-19 13:06:12,159.15,,1,,"b""b' @IgnatiusFlo Do you mind rebasing this to resolve the merge conflicts with recent commits?'""",,,,,,,,,,,,,,,,,
django,10414,closed,5,2018-09-19 13:06:12,54.62,,1,,"b'b"" I\'ll do it when I push my edits.""'",,,,,,,,,,,,,,,,,
django,10414,closed,6,2018-09-19 13:06:12,1017.8,1,,,"b'b"" Hi"," I\'m really sorry but I have such limited time to to any of this stuff it\'s probably best I just bow out. Sorry if I\'ve wasted anyone\'s time. ""'",,,,,,,,,,,,,,,,
django,10414,closed,7,2018-09-19 13:06:12,162.53,,1,,"b'b"" @IgnatiusFlo That\'s absolutely ok and you haven\'t wasted any of my time.""'",,,,,,,,,,,,,,,,,
django,10414,closed,closed,2018-09-28 14:18:17,72.08,1,7,1,,,,,,,,,,,,,,,,,,
django,10414,closed,8,2018-09-19 13:06:12,217.93,,1,,"b'b"" I\'ll push the edits to this PR.""'",,,,,,,,,,,,,,,,,
django,10414,closed,reopened,2018-09-28 14:21:01,2.73,1,8,1,,,,,,,,,,,,,,,,,,
django,10414,closed,closed,2018-10-04 15:35:20,74.32,1,8,1,,,,,,,,,,,,,,,,,,
django,10414,closed,9,2018-09-19 13:06:12,268.38,,1,,"b""b' \\xf0\\x9f\\x91\\x8d '""",,,,,,,,,,,,,,,,,
django,10414,closed,-,-,-,1,9,1,,,,,,,,,,,,,,,,,,
django,10419,closed,opened,2018-09-19 15:27:30,,,,,,,,,,,,,,,,,,,,,,
django,10419,closed,title,2018-09-19 15:27:30,00:00,,1,,"b""b' Fixed #29772 -Made LazyObject proxy __lt__() and __gt__().'""",,,,,,,,,,,,,,,,,
django,10419,closed,body,2018-09-19 15:27:30,00:00,,1,,"b""b' Discussion: url '""",,,,,,,,,,,,,,,,,
django,10419,closed,1,2018-09-19 15:27:30,41.62,,1,,"b""b' Quite frankly"," id like to commit this into 1.11+ and then merged with the higher versions -if its at all possible.'""",,,,,,,,,,,,,,,,
django,10419,closed,2,2018-09-19 15:27:30,4.45,,1,,"b'b"" @kingbuzzman that\'s not going to happen per our backport policy url ""'",,,,,,,,,,,,,,,,,
django,10419,closed,3,2018-09-19 15:27:30,3.47,,1,,"b""b' @charettes ok. No worries.'""",,,,,,,,,,,,,,,,,
django,10419,closed,4,2018-09-19 15:27:30,12.33,,1,,"b""b' @kingbuzzman please rebase your PR against the master branch. This is not going to be backported to 2.0 or 2.1 either. It should be in 2.2.'""",,,,,,,,,,,,,,,,,
django,10419,closed,5,2018-09-19 15:27:30,8.43,,1,,"b""b' @charettes would this be master?'""",,,,,,,,,,,,,,,,,
django,10419,closed,closed,2018-09-19 16:41:37,74.12,0,7,0,,,,,,,,,,,,,,,,,,
django,10419,closed,reopened,2018-09-19 16:45:35,3.97,0,7,0,,,,,,,,,,,,,,,,,,
django,10419,closed,6,2018-09-19 15:27:30,9.2,1,,,"b'b"" o_O i don\'t know what happened", when i rebased it closed the PR, it sorry for the spam. LOL, ohh i see,  I didn\'t press enter," and i clicked on the Close button.. _facepalm_""'",,,,,,,,,,,,
django,10419,closed,closed,2018-09-19 16:47:00,1.42,1,7,0,,,,,,,,,,,,,,,,,,
django,10419,closed,reopened,2018-09-19 16:47:10,0.17,1,7,0,,,,,,,,,,,,,,,,,,
django,10419,closed,7,2018-09-19 15:27:30,7.97,1,,,"b""b' @charettes how do i rebuild tests again? The  i did by mistake"," caused 2 of the tests to abort and thus fail.'""",,,,,,,,,,,,,,,,
django,10419,closed,8,2018-09-19 15:27:30,6.38,,,1,"b'b"" @kingbuzzman it looks like you\'re in a good spot now"," the mariadb tests are know to fail from time to time so I wouldn\'t worry about it.""'",,,,,,,,,,,,,,,,
django,10419,closed,closed,2018-09-19 17:51:02,63.87,2,7,1,,,,,,,,,,,,,,,,,,
django,10419,closed,9,2018-09-19 15:27:30,54.58,,1,,"b'b\' As a follow up. For all those of you that want to use this right now:  Add patch code somewhere at startup:   The ""patch"" will alert you when you can delete it.  Then just use it. \''",,,,,,,,,,,,,,,,,
django,10419,closed,-,-,-,2,8,1,,,,,,,,,,,,,,,,,,
django,10448,closed,opened,2018-09-26 12:05:00,,,,,,,,,,,,,,,,,,,,,,
django,10448,closed,title,2018-09-26 12:05:00,00:00,,1,,"b""b' Fixed #21171 -Avoided starting a transaction when a single (or atomic queries) are executed.'""",,,,,,,,,,,,,,,,,
django,10448,closed,body,2018-09-26 12:05:00,00:00,,,1,"b""b' Avoid starting a transaction when only a single (or atomic queries) are executed.  I have checked the following locations: *  : If there are parents involved take the safe way and use  transactions since this should be an all or nothing operation.   If we have no parents:  * Signals are executed before and after the previous existing   transaction -they have never been part of the transaction.  * if is set then only one query is executed  by definition and no transaction needed.  * same applies to  .  * If a primary key is set and no is set Django will try an   UPDATE and if that returns zero rows it tries an INSERT. The first   case is completly save (single query). In the second case a   transaction should not produce different results since the update   query is basically a no-op then (might miss something though). *  : no signals issued", single query  needed. *  : This one is fun due to the fact that is   does many things at once.  Most importantly though: It does send signals as part of the   transaction," so for maximum backwards compatibility we need to be   conservative.  To ensure maximum compatibility the transaction here is removed if   and only if the following holds true:   * We are deleting a single instance.  * There are no signal handlers attached to that instance.  * There are no  to cascade.  * There are no parents which also need deletion.'""",,,,,,,,,,,,,,,
django,10448,closed,1,2018-09-26 12:05:00,1267.3,,1,,"b""b' For ref: * url  * url '""",,,,,,,,,,,,,,,,,
django,10448,closed,2,2018-09-26 12:05:00,219.5,,1,,b'b\' Hi @carltongibson," Trust is good and I am mostly confident about those changes aside from the ""might miss something"" part. That said"," since this is a rather ""big"" change in terms of functionality I would appreciate more eyes on it. - also I have no idea on how to even write tests for such a change without mocking out the whole world (and even then I wonder what I am actually testing). Hard to say"," but all in all it lies in a rather critical part of code and setting one attribute in case of an error rather than invoking another context manager is most certainly faster. Is it worth the effort? I do not know; the other argument here is that itself also uses those low level attributes instead of the higher level apis and this new context manager plays in the same area imo.  As for performance improvements in autocommit mode: Imagine a view that only creates one item (log ingestor or whatnot). Before this patch it is three queries (BEGINN;INSERT;COMMIT); now it is just one (INSERT). Assuming the database is not on the same host; a few ms roundtrip time are probably fair to assume -I\\\'d guess you save 5-10ms per view request (database on a different server but inside the local network). Those are just guesses though; the code irked me as just being ""wrong"" mainly :)\''",,,,,,,,,,,,,,
django,10448,closed,3,2018-09-26 12:05:00,0.67,,1,,"b""b' @felixxm welp"," do you have a running Oracle instance where you could take a look what I broke?'""",,,,,,,,,,,,,,,,
django,10448,closed,4,2018-09-26 12:05:00,15.37,,1,,"b""b' Oh I see"," apparently Oracle is not properly converting integrity errors.'""",,,,,,,,,,,,,,,,
django,10448,closed,5,2018-09-26 12:05:00,249.2,,1,,"b""b'  OK. Fair enough. I will review the reasoning there over the weekend. '""",,,,,,,,,,,,,,,,,
django,10448,closed,6,2018-09-26 12:05:00,9.05,,1,,"b""b' @felixxm so the main issue appears to be the following: We get a database error and not an integrity error because the actual error code is 2091 (transaction roled back) instead of the integrity error. Any idea why?'""",,,,,,,,,,,,,,,,,
django,10448,closed,7,2018-09-26 12:05:00,78.32,,1,,"b""b' @felixxm found it"," we already had workarounds for this (but only on _commit :D)'""",,,,,,,,,,,,,,,,
django,10448,closed,8,2018-09-26 12:05:00,20.47,,1,,"b""b' @apollo13 Great :rocket: Sorry for delay I have a really busy day :sleepy: '""",,,,,,,,,,,,,,,,,
django,10448,closed,9,2018-09-26 12:05:00,719.32,,1,,"b'b"" Hi @apollo13. Sorry for the delay. I was otherwise engaged.  This still looks fine to me. (I feel a bit silly given the other reviews already... \\xe2\\x98\\xba\\xef\\xb8\\x8f) This has to be right"," otherwise there\'d be some other symptoms already. (  can\'t have found a matching row.)  Not sure if you want to do anything about my first two points above? (Happy if you don\'t.) Good one! Is this  ?""'",,,,,,,,,,,,,,,,
django,10448,closed,10,2018-09-26 12:05:00,856.15,,,1,"b'b"" I pushed cosmetic changes. Any doc changes needed in  ? I guess if you\'re happy to merge this without tests it\'s okay. I requested a review from Aymeric in case he has some expertise to offer.""'",,,,,,,,,,,,,,,,,
django,10448,closed,11,2018-09-26 12:05:00,135.53,1,,,b'b\' By the way," is ""take the save way"" in the commit message a typo? ""safe""", maybe?\'',,,,,,,,,,,,,,,
django,10448,closed,12,2018-09-26 12:05:00,506.67,,1,,"b'b"" @timgraham Haha yes"," that is me failing at english. I do not want any docs in as it is a highly internal utility imo. As for tests; I haven\'t found time yet. Will see if I can wipe some together quickly and otherwise merge it later today.""'",,,,,,,,,,,,,,,,
django,10448,closed,closed,2018-10-17 08:02:32,1197.53,1,11,2,,,,,,,,,,,,,,,,,,
django,10448,closed,reopened,2018-10-17 08:02:37,0.08,1,11,2,,,,,,,,,,,,,,,,,,
django,10448,closed,closed,2018-10-17 10:19:03,136.43,1,11,2,,,,,,,,,,,,,,,,,,
django,10448,closed,-,-,-,1,11,2,,,,,,,,,,,,,,,,,,
django,10472,closed,opened,2018-10-03 04:56:39,,,,,,,,,,,,,,,,,,,,,,
django,10472,closed,title,2018-10-03 04:56:39,00:00,,1,,"b""b' Fixed #29817 -Deprecated .'""",,,,,,,,,,,,,,,,,
django,10472,closed,body,2018-10-03 04:56:39,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,10472,closed,1,2018-10-03 04:56:39,198.4,,,1,"b""b' Closing as per ticket. (Again"," happy to reopen if the [django-developers discussion]url  evolves suitably.) '""",,,,,,,,,,,,,,,,
django,10472,closed,closed,2018-10-03 08:15:03,198.4,0,2,1,,,,,,,,,,,,,,,,,,
django,10472,closed,2,2018-10-03 04:56:39,594.1,,1,,"b""b' Ticket was reopened"," reopening PR too.'""",,,,,,,,,,,,,,,,
django,10472,closed,reopened,2018-10-06 18:09:09,594.1,0,3,1,,,,,,,,,,,,,,,,,,
django,10472,closed,3,2018-10-03 04:56:39,19.25,,1,,"b""b' Could you remove mentions of this setting in the documentation as much as possible (for example","  should mention TEMPLATES instead)?'""",,,,,,,,,,,,,,,,
django,10472,closed,4,2018-10-03 04:56:39,1.88,,1,,"b""b' I had one thought"," do we need to state anywhere that templates etc **must** now be UTF-8?'""",,,,,,,,,,,,,,,,
django,10472,closed,5,2018-10-03 04:56:39,335.07,,1,,"b'b"" @timgraham I have adjusted the docs to try to be more accurate and remove references to  . Let me know if you\'d like any additional edits.  @carltongibson Do the changes to address your feedback? Or does the [existing description of  ]url  Please let me know if you had something else in mind.""'",,,,,,,,,,,,,,,,,
django,10472,closed,6,2018-10-03 04:56:39,433.97,,,1,"b""b' Hey @jdufresne: I think the changes to are fine. Thanks! (The user I have in mind **is** using UTF-8. The ref in the TEMPLATES config is thus sufficient.) \\xf0\\x9f\\x91\\x8d (Yay. Less settings!)'""",,,,,,,,,,,,,,,,,
django,10472,closed,7,2018-10-03 04:56:39,515.6,,1,,"b'b"" I guess [whitenoise]url  should switch to using \'utf-8\' as a default for [WHITENOISE_CHARSET]url  rather than . Agreed?  I guess we can\'t raise a deprecation warning for accesses without capturing the warning in Django\'s usage. I don\'t remember if I intentionally skipped that for the deprecation. Not sure if it\'s worth it.""'",,,,,,,,,,,,,,,,,
django,10472,closed,8,2018-10-03 04:56:39,15.2,,1,,"b'b""  That sounds correct to me"," but I\'m not very familiar with whitenoise or its code. Your proposal there sounds very sensible.""'",,,,,,,,,,,,,,,,
django,10472,closed,9,2018-10-03 04:56:39,250.93,,,1,b'b\'  Right. That would likely cause the internal uses to emit false positive warnings in projects. I guess we could inspect the stack to see if it is coming from Django or a project," but concerns of performance regressions have been raised in the past for adding ""on access"" code to the settings. See 5cc81cd9eb69f5f7a711412c02039b435c393135. Or did you have a different mechanism in mind?\''",,,,,,,,,,,,,,,,
django,10472,closed,10,2018-10-03 04:56:39,519.97,,,1,"b""b' @timgraham I added a new commit that warns on access (we could use the same strategy  for too)", but avoids false positives originating from Django. Let me know what you think. If you think it is a good idea, we can squash it," otherwise drop it.'""",,,,,,,,,,,,,,
django,10472,closed,11,2018-10-03 04:56:39,549.32,,1,,"b""b' Yes", I think it would be useful as I found some uses of in [other code]url  If you could use the same technique for (in a separate PR of course)," that would [be useful]url '""",,,,,,,,,,,,,,,
django,10472,closed,12,2018-10-03 04:56:39,258.72,,,1,"b""b' Changes:  Squashed commits Added module constant to avoid repeating the string Improved explanatory comment as suggested  Thanks'""",,,,,,,,,,,,,,,,,
django,10472,closed,13,2018-10-03 04:56:39,29.47,,1,,"b""b'  Done in #10513  '""",,,,,,,,,,,,,,,,,
django,10472,closed,closed,2018-10-15 21:34:55,205.77,0,10,5,,,,,,,,,,,,,,,,,,
django,10472,closed,-,-,-,0,10,5,,,,,,,,,,,,,,,,,,
django,10494,open,opened,2018-10-08 18:41:52,,,,,,,,,,,,,,,,,,,,,,
django,10494,open,title,2018-10-08 18:41:52,00:00,,1,,"b""b' Fixed #29138 -Added  support for ForeignKeys that use to_field.'""",,,,,,,,,,,,,,,,,
django,10494,open,body,2018-10-08 18:41:52,00:00,,,1,"b'b"" Bug fix for [29138]url  creating [PR as requested]url > **Note** I\'ve been able to update all unit tests and create some new ones", however I haven\'t been able to leverage to prevent data leaks. I\'ve tried to implement it (see \\xe2\\x80\\x8bhere), however I can\'t get it to play nicely with the unit tests. When uncommented, the isn\'t properly being considered as to_field_allowed. I\'m not familiar with this function," so could use some help troubleshooting.""'",,,,,,,,,,,,,
django,10494,open,1,2018-10-08 18:41:52,288.47,,1,,"b'b"" Oh by the way"," you\'ll should base your branch off and not and will backport will take place if necessary.""'",,,,,,,,,,,,,,,,
django,10494,open,2,2018-10-08 18:41:52,1134.47,,1,,"b""b' ~~Looks like the rebase has a bunch of conflicts; submitting a new PR ([10517]url ~~  Fixed by @timgraham '""",,,,,,,,,,,,,,,,,
django,10494,open,closed,2018-10-16 18:52:59,11.12,0,3,1,,,,,,,,,,,,,,,,,,
django,10494,open,reopened,2018-10-16 20:20:38,87.65,0,3,1,,,,,,,,,,,,,,,,,,
django,10494,open,3,2018-10-08 18:41:52,127.97,,1,,"b'b"" The unit tests doesn\'t pass due to a error being raised; I\'m not sure how to resolve this issue as I\'m not familiar with function.""'",,,,,,,,,,,,,,,,,
django,10494,open,4,2018-10-08 18:41:52,1226.2,,1,,"b""b' Is this PR only blocked by isort and flake8 ?'""",,,,,,,,,,,,,,,,,
django,10494,open,5,2018-10-08 18:41:52,1378.47,,1,,"b""b' @jpic that and the fact _patch needs improvement_ was never unchecked [on the ticket]url '""",,,,,,,,,,,,,,,,,
django,10494,open,6,2018-10-08 18:41:52,537.53,,1,,"b""b' As far as I remember"," I made all the requested changes and was just waiting on someone to give the \\xf0\\x9f\\x91\\x8d '""",,,,,,,,,,,,,,,,
django,10494,open,-,-,-,0,7,1,,,,,,,,,,,,,,,,,,
django,10618,closed,opened,2018-11-08 06:51:32,,,,,,,,,,,,,,,,,,,,,,
django,10618,closed,title,2018-11-08 06:51:32,00:00,,1,,"b""b' Moved duplicate author declarations to setUpTestData() in UpdateViewT\\xe2\\x80\\xa6'""",,,,,,,,,,,,,,,,,
django,10618,closed,body,2018-11-08 06:51:32,00:00,,1,,"b""b' \\xe2\\x80\\xa6ests'""",,,,,,,,,,,,,,,,,
django,10618,closed,1,2018-11-08 06:51:32,38.42,,,1,"b'b"" Thanks @carltongibson  I agree with you I changed it that way. And I don\'t know Why some tests fail without in  ""'",,,,,,,,,,,,,,,,,
django,10618,closed,2,2018-11-08 06:51:32,9.42,,1,,"b'b""  I\'m not seeing that. I remove the and all passes:  Git diff & test run    Can you show me your failure?""'",,,,,,,,,,,,,,,,,
django,10618,closed,3,2018-11-08 06:51:32,35.7,,1,,"b""b' @carltongibson  Before fixing my commit"," There was no and the was failed in  . because So I added and there are no failures  I add a commit to show the failures  because my develop environment is not set  '""",,,,,,,,,,,,,,,,
django,10618,closed,4,2018-11-08 06:51:32,18.57,1,,,"b'b"" Looks like it\'s from url  url  And the view code is using a hard-coded  "," so that makes sense:  (generic_:160)  ""'",,,,,,,,,,,,,,,,
django,10618,closed,5,2018-11-08 06:51:32,13.75,,1,,"b""b' Oh I see. I remove the commit for showing failure and remain the parameter.'""",,,,,,,,,,,,,,,,,
django,10618,closed,closed,2018-11-08 15:02:34,491.03,1,5,1,,,,,,,,,,,,,,,,,,
django,10618,closed,reopened,2018-11-08 15:02:40,0.1,1,5,1,,,,,,,,,,,,,,,,,,
django,10618,closed,6,2018-11-08 06:51:32,375.52,1,,,"b""b' Sorry"," closed by mistake.'""",,,,,,,,,,,,,,,,
django,10618,closed,7,2018-11-08 06:51:32,926.15,,,1,"b""b' @timgraham Thanks for your review I fixed code according to your review and squashed into one commit.'""",,,,,,,,,,,,,,,,,
django,10618,closed,8,2018-11-08 06:51:32,476.7,,,1,"b""b' OK. Super. Thanks @MyungSeKyo. '""",,,,,,,,,,,,,,,,,
django,10618,closed,closed,2018-11-09 14:26:53,1404.22,2,5,3,,,,,,,,,,,,,,,,,,
django,10618,closed,-,-,-,2,5,3,,,,,,,,,,,,,,,,,,
django,10657,closed,opened,2018-11-17 07:50:22,,,,,,,,,,,,,,,,,,,,,,
django,10657,closed,title,2018-11-17 07:50:22,00:00,,1,,"b""b' Fixed #28766 -Added '""",,,,,,,,,,,,,,,,,
django,10657,closed,body,2018-11-17 07:50:22,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,10657,closed,1,2018-11-17 07:50:22,933.98,,1,,b'b\' Please check test coverage carefully. I don\\\'t see any failures if the change in is reverted," for example. Uncheck ""patch needs improvement"" on the ticket when it\\\'s ready for review again.\''",,,,,,,,,,,,,,,,
django,10657,closed,closed,2018-11-19 12:01:44,251.37,0,3,0,,,,,,,,,,,,,,,,,,
django,10657,closed,reopened,2018-11-19 12:01:47,0.05,0,3,0,,,,,,,,,,,,,,,,,,
django,10657,closed,2,2018-11-17 07:50:22,555.8,1,,,"b""b' Hello @timgraham"," sorry to nag but is there anything missing or something I  do to help this get merged ?'""",,,,,,,,,,,,,,,,
django,10657,closed,closed,2018-12-06 23:22:54,681.12,1,3,0,,,,,,,,,,,,,,,,,,
django,10657,closed,3,2018-11-17 07:50:22,747.28,,,1,"b""b' Thanks @timgraham for the guidance :)'""",,,,,,,,,,,,,,,,,
django,10657,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,
django,10712,closed,opened,2018-11-30 19:06:15,,,,,,,,,,,,,,,,,,,,,,
django,10712,closed,title,2018-11-30 19:06:15,00:00,,1,,"b""b' Fixed #29995 -Used higher contrast colors on debug page.'""",,,,,,,,,,,,,,,,,
django,10712,closed,body,2018-11-30 19:06:15,00:00,,1,,"b""b' In our technical error page in debug mode"," some of the  colors were not high contrast enough to meet the WCAG standards for accessiblity url  This change addresses those low contrast color combinations.'""",,,,,,,,,,,,,,,,
django,10712,closed,1,2018-11-30 19:06:15,1.9,,,1,"b""b' Hey @zachgarwood"," thanks for submitting this PR.  Would it be possible to provide  screenshots of the debug page?'""",,,,,,,,,,,,,,,,
django,10712,closed,2,2018-11-30 19:06:15,19.38,,,1,"b""b' Before: ![before low contrast]url After: ![after high contrast]url  '""",,,,,,,,,,,,,,,,,
django,10712,closed,3,2018-11-30 19:06:15,147.5,,1,,"b""b' Looks identical to me. You probably need to render the template with Django rather than viewing the file.'""",,,,,,,,,,,,,,,,,
django,10712,closed,4,2018-11-30 19:06:15,1067.0,1,,,"b'b"" @timgraham We\'re dealing with changing shades of grey to slightly darker shades of grey; the difference isn\'t readily apparent. To you or I viewing this page normally", there will not be much difference, but to a developer using an assistive tool like high contrast mode," these subtle differences may be more apparent.""'",,,,,,,,,,,,,,
django,10712,closed,5,2018-11-30 19:06:15,264.35,,,1,"b'b"" Okay. I think it\'s fine to keep it as is given the reporter\'s conclusion on the ticket.""'",,,,,,,,,,,,,,,,,
django,10712,closed,closed,2018-12-05 20:06:23,60.13,1,3,3,,,,,,,,,,,,,,,,,,
django,10712,closed,6,2018-11-30 19:06:15,25.32,,1,,"b'b"" I believe it is an error to close this issue without merging in the changes", despite the fact that these changes did not directly address the issue expressed by the issue reporter. As it stands, the technical error page does not meet the W3C\'s [WCAG\'s standards for accessibility]url  I consider a non-compliant," accessibility-unfriendly page in the codebase a bug. These changes should be merged in to correct that bug.""'",,,,,,,,,,,,,,
django,10712,closed,7,2018-11-30 19:06:15,6.97,,1,,"b'b"" If you can find another person to review the changes and confirm that they\'re useful"," I am not completely opposed. I\'m reluctant to make unnecessary changes that might cause a regression.""'",,,,,,,,,,,,,,,,
django,10712,closed,8,2018-11-30 19:06:15,19.05,,,1,"b""b' I\\xe2\\x80\\x99m happy to review. @zachgarwood I don\\xe2\\x80\\x99t know much: is there anything beyond the links here and on the ticket that you think is ?'""",,,,,,,,,,,,,,,,,
django,10712,closed,9,2018-11-30 19:06:15,50.57,1,,,b'b\' My sources:  url  url  url  url And this is the tool I used to determine compliance and get recommendations for change (but there are other [recommended tools]url url As a point of order," I think dismissing accessibility issues out of hand as ""unnecessary changes"" is (unconsciously) ableist and is a disappointing direction for the Django code base to go in. I think we can do better.\''",,,,,,,,,,,,,,,,
django,10712,closed,10,2018-11-30 19:06:15,8.92,,,1,"b'b"" What I meant is that it would be nice if these improvements were suggested  confirmed as useful by users of accessibility tools. Since no one has raised the issue in 10 years of Django"," I don\'t know.""'",,,,,,,,,,,,,,,,
django,10712,closed,11,2018-11-30 19:06:15,924.55,,1,,"b""b' I entirely support any improvement that can ease the experience of users with accessibility issues. I think this patch is very constrained and has very few chances to cause regressions. A big +1 from me.'""",,,,,,,,,,,,,,,,,
django,10712,closed,12,2018-11-30 19:06:15,1190.87,,,1,"b""b' According to the Accessible colours tool"," we already pass  . The change suggested here would get us to  . I think we should have it.  Screenshots plus visual diff image...  On  :  ![screenshot_2018-12-12 exception at contrast 1]url PR:  ![screenshot_2018-12-12 exception at contrast 2]url (**Update**: it is possible I have these two images the wrong way round...) Visual diff tool:  (Both version number and server time differences are incidental.)  * The changes (e.g. to '""",,,,,,,,,,,,,,,,
django,10712,closed,reopened,2018-12-12 09:12:37,786.23,2,6,6,,,,,,,,,,,,,,,,,,
django,10712,closed,13,2018-11-30 19:06:15,405.62,,1,,"b""b' @timgraham"," investigating which existing styles are / should be used is beyond the scope of this PR. I recommend opening a separate ticket for your concerns.'""",,,,,,,,,,,,,,,,
django,10712,closed,14,2018-11-30 19:06:15,27.97,,1,,"b'b"" My thinking in checking that is: how do you know if the colors offer better contrast if you don\'t confirm which colors are actually used in the rendered document?""'",,,,,,,,,,,,,,,,,
django,10712,closed,closed,2018-12-21 23:19:35,846.97,2,8,6,,,,,,,,,,,,,,,,,,
django,10712,closed,-,-,-,2,8,6,,,,,,,,,,,,,,,,,,
django,10734,closed,opened,2018-12-07 17:07:59,,,,,,,,,,,,,,,,,,,,,,
django,10734,closed,title,2018-12-07 17:07:59,00:00,,1,,"b""b' Moved choices inside of test models per coding style.'""",,,,,,,,,,,,,,,,,
django,10734,closed,body,2018-12-07 17:07:59,00:00,,1,,"b""b' moved GENDER_CHOICES as a global tuple in  to the class Person specific attribute as specified here url '""",,,,,,,,,,,,,,,,,
django,10734,closed,1,2018-12-07 17:07:59,55.2,,,1,"b'b"" I guess it\'s fine"," but how about making the change for the entire test suite? (Auditing with  .""'",,,,,,,,,,,,,,,,
django,10734,closed,2,2018-12-07 17:07:59,180.25,1,,,"b""b' url  I highly doubt that this was caused by my changes. The test suite ran without errors and even this Jenkins console shows a memcache module error. Please look further.'""",,,,,,,,,,,,,,,,,
django,10734,closed,closed,2018-12-09 11:47:42,1119.72,1,2,1,,,,,,,,,,,,,,,,,,
django,10734,closed,reopened,2018-12-09 12:43:34,55.87,1,2,1,,,,,,,,,,,,,,,,,,
django,10734,closed,closed,2018-12-10 14:28:50,105.27,1,2,1,,,,,,,,,,,,,,,,,,
django,10734,closed,-,-,-,1,2,1,,,,,,,,,,,,,,,,,,
django,10816,closed,opened,2019-01-02 16:47:09,,,,,,,,,,,,,,,,,,,,,,
django,10816,closed,title,2019-01-02 16:47:09,00:00,,1,,"b""b' Add distinct on Sum annotate'""",,,,,,,,,,,,,,,,,
django,10816,closed,closed,2019-01-02 16:47:36,0.45,0,1,0,,,,,,,,,,,,,,,,,,
django,10816,closed,reopened,2019-01-02 16:47:49,0.22,0,1,0,,,,,,,,,,,,,,,,,,
django,10816,closed,1,2019-01-02 16:47:09,4.57,,1,,"b""b' url  url '""",,,,,,,,,,,,,,,,,
django,10816,closed,2,2019-01-02 16:47:09,2.58,,,1,"b'b"" Hello there! While the tickets you linked to can be sometimes worked around by using this doesn\'t fix them. Please [file a new feature request]url  to add distinct support to to track this PR instead.""'",,,,,,,,,,,,,,,,,
django,10816,closed,3,2019-01-02 16:47:09,902.82,1,,,"b'b"" @engelolivier Did you make a new ticket to track this issue? It would be a shame to not get your change out since there\'s not ticket for it yet""'",,,,,,,,,,,,,,,,,
django,10816,closed,4,2019-01-02 16:47:09,922.43,,1,,"b""b' Closing due to inactivity.'""",,,,,,,,,,,,,,,,,
django,10816,closed,closed,2019-02-07 23:19:33,391.73,1,3,1,,,,,,,,,,,,,,,,,,
django,10816,closed,-,-,-,1,3,1,,,,,,,,,,,,,,,,,,
django,10817,open,opened,2019-01-02 21:25:47,,,,,,,,,,,,,,,,,,,,,,
django,10817,open,title,2019-01-02 21:25:47,00:00,,1,,"b""b' Documented purposes of mailing list links'""",,,,,,,,,,,,,,,,,
django,10817,open,body,2019-01-02 21:25:47,00:00,,1,,"b'b"" I noticed that there was no solid documentation on how to use the \'subscription email address\'. Google seem to have  down documentation on how these work too (the best source I found was this SO answer: url  ) so I\'m adding an explicit how-to"," plus clarifying the purposes of the other links.""'",,,,,,,,,,,,,,,,
django,10817,open,1,2019-01-02 21:25:47,98.67,,1,,"b'b"" I wonder if we should switch to something like a table so that the instructions don\'t have to be repeated each time. I\'m especially thinking of documentation translators.""'",,,,,,,,,,,,,,,,,
django,10817,open,2,2019-01-02 21:25:47,43.33,,1,,"b'b"" Are you sure this works. A week ago or so I tried to use change the email address I use for django-developers@ to use my normal email address instead of Gmail it let me subscribe"," but when I tried to post something it didn\'t let me. ""'",,,,,,,,,,,,,,,,
django,10817,open,3,2019-01-02 21:25:47,893.97,,1,,"b'b"" @tobiaswiese it sounds like if you could subscribe it\'s working. Sure your emails aren\'t being rerouted through another address or similar weirdness?""'",,,,,,,,,,,,,,,,,
django,10817,open,4,2019-01-02 21:25:47,70.67,,1,,"b'b"" Yes I already got mail delivered to that address", and I\'m in full control of the handling mail server. Just sending from that address wasn\'t possible.  I also later added the address to my google account, which made it possible to select the address in Google Groups web interface," and now Sending and Receiving is possible.""'",,,,,,,,,,,,,,
django,10817,open,5,2019-01-02 21:25:47,66.73,1,,,"b'b"" That\'s disappointing. I found [the support page]url  that lists: I\'ll update the PR to point to this page and point out these caveats. ""'",,,,,,,,,,,,,,,,,
django,10817,open,closed,2019-01-25 16:59:09,1173.37,1,6,0,,,,,,,,,,,,,,,,,,
django,10817,open,reopened,2019-01-25 16:59:12,0.05,1,6,0,,,,,,,,,,,,,,,,,,
django,10817,open,6,2019-01-02 21:25:47,1053.1,,1,,"b'b"" I\'ve added a link to the Google Groups documentation on joining and updated and rearranged the link descriptions.  I tried a table but there\'s too much information to fit in comfortably. I reduced the amount of text in the link descriptions and since it\'s repeated"," it shouldn\'t be too much of a translation burden.""'",,,,,,,,,,,,,,,,
django,10817,open,-,-,-,1,7,0,,,,,,,,,,,,,,,,,,
django,11003,open,opened,2019-02-17 22:24:49,,,,,,,,,,,,,,,,,,,,,,
django,11003,open,title,2019-02-17 22:24:49,00:00,,1,,"b""b' Fixed #30014 -Added model instance cast in ().'""",,,,,,,,,,,,,,,,,
django,11003,open,1,2019-02-17 22:24:49,880.05,,1,,"b""b' I did add many tests. Some of them fails before patch and success after"," others are added to verify that there is no code regression.'""",,,,,,,,,,,,,,,,
django,11003,open,2,2019-02-17 22:24:49,153.52,,1,,"b'b"" Additional test coverage (that already passes) should be added in a separate commit so it\'s clear what the patch fixes. Existing tests are in  .  Try to follow the [Python coding style]url  with regards to things like quotes", indentation," and line length.""'",,,,,,,,,,,,,,,
django,11003,open,3,2019-02-17 22:24:49,418.27,,,1,"b'b"" Thanks for your review and advices. I\'ve just updated the comit. ""'",,,,,,,,,,,,,,,,,
django,11003,open,closed,2019-02-25 08:03:45,578.93,0,3,1,,,,,,,,,,,,,,,,,,
django,11003,open,reopened,2019-02-25 08:09:38,5.88,0,3,1,,,,,,,,,,,,,,,,,,
django,11003,open,closed,2019-02-25 17:53:34,583.93,0,3,1,,,,,,,,,,,,,,,,,,
django,11003,open,reopened,2019-02-25 18:02:31,8.95,0,3,1,,,,,,,,,,,,,,,,,,
django,11003,open,4,2019-02-17 22:24:49,910.65,1,,,"b'b"" I apologize for all changes on this PR. It\'s the first time I use git. I can\'t understand why windows test fails. Any idea ?""'",,,,,,,,,,,,,,,,,
django,11003,open,5,2019-02-17 22:24:49,917.95,,1,,"b'b"" It\'s an issue with Jenkins that happens when you force push before the previous build finishes. Don\'t worry about it -there\'s nothing Windows-specific in this patch.""'",,,,,,,,,,,,,,,,,
django,11003,open,6,2019-02-17 22:24:49,1018.53,,,1,"b'b"" Hi @etchove. What I wanted to suggest was that we need a few extra test cases. Specifially", in [ ]url  I think we need to add three cases: *  , passing a  .  *  , passing a  , say.  *  , e.g. \\xe2\\x80\\x94 this isn\'t strictly unique," but (I think \\xf0\\x9f\\x98\\xac) it should do. Then your test case checking the behaviour from the ticket is good too. Make sense? ""'",,,,,,,,,,,
django,11003,open,7,2019-02-17 22:24:49,1142.12,,1,,"b""b' Hi Carlton","  I did add some test. The test_to_field_name success but it should fail because many keys are the same.  May we open a ticket one this subjet when the key is not unique ? I think it is different from the original one.'""",,,,,,,,,,,,,,,,
django,11003,open,8,2019-02-17 22:24:49,1288.77,,1,,"b""b' Should we correct that bug in previous versions ?'""",,,,,,,,,,,,,,,,,
django,11003,open,9,2019-02-17 22:24:49,1292.07,,1,,"b'b"" It doens\'t qualify for a backport per our [supported versions policy]url ""'",,,,,,,,,,,,,,,,,
django,11003,open,-,-,-,1,7,2,,,,,,,,,,,,,,,,,,
django,11060,closed,opened,2019-03-07 23:03:42,,,,,,,,,,,,,,,,,,,,,,
django,11060,closed,title,2019-03-07 23:03:42,00:00,,1,,"b""b' Fixed #30241 -Added system checks for translation settings.'""",,,,,,,,,,,,,,,,,
django,11060,closed,body,2019-03-07 23:03:42,00:00,,1,,"b""b' Ticket [#30241]url '""",,,,,,,,,,,,,,,,,
django,11060,closed,closed,2019-03-11 22:01:29,1377.78,0,2,0,,,,,,,,,,,,,,,,,,
django,11060,closed,reopened,2019-03-11 22:01:32,0.05,0,2,0,,,,,,,,,,,,,,,,,,
django,11060,closed,1,2019-03-07 23:03:42,1065.32,,,1,"b""b' @pope1ni Thanks for the update :rocket:  I left few minor comments.'""",,,,,,,,,,,,,,,,,
django,11060,closed,2,2019-03-07 23:03:42,189.2,,,1,"b""b' Thanks everyone!'""",,,,,,,,,,,,,,,,,
django,11060,closed,closed,2019-03-28 20:57:35,1376.05,0,2,2,,,,,,,,,,,,,,,,,,
django,11060,closed,-,-,-,0,2,2,,,,,,,,,,,,,,,,,,
django,11079,closed,opened,2019-03-13 11:37:38,,,,,,,,,,,,,,,,,,,,,,
django,11079,closed,title,2019-03-13 11:37:38,00:00,,1,,"b""b' Fixed #29810 -Fixed crash of select_related() on FilteredRelation with empty result.'""",,,,,,,,,,,,,,,,,
django,11079,closed,body,2019-03-13 11:37:38,00:00,,1,,"b""b' Ticket: [#29810]url '""",,,,,,,,,,,,,,,,,
django,11079,closed,closed,2019-03-14 07:46:44,1209.1,0,2,0,,,,,,,,,,,,,,,,,,
django,11079,closed,reopened,2019-03-14 07:49:03,2.32,0,2,0,,,,,,,,,,,,,,,,,,
django,11079,closed,1,2019-03-13 11:37:38,275.43,,1,,"b""b' Can you add a code comment to explain the new code?'""",,,,,,,,,,,,,,,,,
django,11079,closed,2,2019-03-13 11:37:38,69.62,,1,,"b""b' added'""",,,,,,,,,,,,,,,,,
django,11079,closed,3,2019-03-13 11:37:38,328.95,,1,,"b'b\' The question the comment should answer is ""In what case is from_obj None", and why is [\\\'related_klass_infos\\\'] the right object to use?\'',,,,,,,,,,,,,,,,
django,11079,closed,4,2019-03-13 11:37:38,644.65,,1,,"b'b"" @timgraham", is this appropriate? In FilteredRelation with condition returns no value cases," form_obj is none and set_cached_value raises \'NoneType\' object has no attribute \'_state\' error.  form_obj has to derived from related class of join as a key of caching.""'",,,,,,,,,,,,,,,
django,11079,closed,closed,2019-03-27 09:35:00,105.95,0,6,0,,,,,,,,,,,,,,,,,,
django,11079,closed,reopened,2019-03-27 09:38:11,3.18,0,6,0,,,,,,,,,,,,,,,,,,
django,11079,closed,5,2019-03-13 11:37:38,82.98,,1,,"b""b' hi"," @felixxm I applied your comments.'""",,,,,,,,,,,,,,,,
django,11079,closed,closed,2019-04-23 12:30:47,172.6,0,7,0,,,,,,,,,,,,,,,,,,
django,11079,closed,-,-,-,0,7,0,,,,,,,,,,,,,,,,,,
django,11087,closed,opened,2019-03-16 22:59:57,,,,,,,,,,,,,,,,,,,,,,
django,11087,closed,title,2019-03-16 22:59:57,00:00,,1,,"b""b' Fixed #30191 -Only selected referenced fields during cascade deletion. '""",,,,,,,,,,,,,,,,,
django,11087,closed,body,2019-03-16 22:59:57,00:00,,1,,"b""b' url '""",,,,,,,,,,,,,,,,,
django,11087,closed,1,2019-03-16 22:59:57,931.47,,1,,"b'b"" Oracle failure is caused by the fact doesn\'t interpolate parameters like all the other backends do.   I guess I could adjust the test to only check for the parts preceding the but fixing Oracle\'s to be coherent with the other backends seems like it would make more sense.""'",,,,,,,,,,,,,,,,,
django,11087,closed,2,2019-03-16 22:59:57,259.62,,1,,"b""b' @charettes I prepared change to unify behavior of on Oracle with other backends (see #11148).'""",,,,,,,,,,,,,,,,,
django,11087,closed,closed,2019-03-30 18:51:02,1191.08,0,4,0,,,,,,,,,,,,,,,,,,
django,11087,closed,reopened,2019-03-30 18:51:07,0.08,0,4,0,,,,,,,,,,,,,,,,,,
django,11087,closed,3,2019-03-16 22:59:57,1.03,1,,,"b""b' Closed by mistake (clicked wrong button :man_facepalming: ).'""",,,,,,,,,,,,,,,,,
django,11087,closed,4,2019-03-16 22:59:57,532.05,,1,,"b""b' All comments should be addressed.'""",,,,,,,,,,,,,,,,,
django,11087,closed,closed,2019-04-17 12:13:18,1042.18,1,5,0,,,,,,,,,,,,,,,,,,
django,11087,closed,5,2019-03-16 22:59:57,510.35,,,1,"b""b' @charettes Thanks :rocket: '""",,,,,,,,,,,,,,,,,
django,11087,closed,6,2019-03-16 22:59:57,536.25,,,1,"b""b' Thanks for the merge @felixxm.'""",,,,,,,,,,,,,,,,,
django,11087,closed,-,-,-,1,5,2,,,,,,,,,,,,,,,,,,
django,11299,closed,opened,2019-04-28 11:15:08,,,,,,,,,,,,,,,,,,,,,,
django,11299,closed,title,2019-04-28 11:15:08,00:00,,1,,"b'b"" Fixed #30412 -Fixed crash when adding check constraints with OR\'ed condition on Oracle and SQLite.""'",,,,,,,,,,,,,,,,,
django,11299,closed,body,2019-04-28 11:15:08,00:00,,1,,"b""b' Ticket: [#30412]url '""",,,,,,,,,,,,,,,,,
django,11299,closed,1,2019-04-28 11:15:08,1081.4,,1,,"b""b' @cansarigol Test and release notes are required.'""",,,,,,,,,,,,,,,,,
django,11299,closed,closed,2019-04-29 07:25:09,1210.02,0,3,0,,,,,,,,,,,,,,,,,,
django,11299,closed,reopened,2019-04-29 07:25:30,0.35,0,3,0,,,,,,,,,,,,,,,,,,
django,11299,closed,closed,2019-04-29 09:38:58,133.47,0,3,0,,,,,,,,,,,,,,,,,,
django,11299,closed,reopened,2019-04-29 09:39:33,0.58,0,3,0,,,,,,,,,,,,,,,,,,
django,11299,closed,2,2019-04-28 11:15:08,571.3,,,1,"b""b' thanks @charettes.'""",,,,,,,,,,,,,,,,,
django,11299,closed,closed,2019-04-30 11:43:26,123.88,0,3,1,,,,,,,,,,,,,,,,,,
django,11299,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,
django,11322,closed,opened,2019-05-04 17:57:26,,,,,,,,,,,,,,,,,,,,,,
django,11322,closed,title,2019-05-04 17:57:26,00:00,,1,,"b""b' Removed unnecessary import'""",,,,,,,,,,,,,,,,,
django,11322,closed,body,2019-05-04 17:57:26,00:00,,1,,"b""b' Removed unnecessary import.  As is already imported so instead of importing partial again . we can use it from  .  '""",,,,,,,,,,,,,,,,,
django,11322,closed,closed,2019-05-04 18:19:21,21.92,0,2,0,,,,,,,,,,,,,,,,,,
django,11322,closed,reopened,2019-05-04 18:19:37,0.27,0,2,0,,,,,,,,,,,,,,,,,,
django,11322,closed,closed,2019-05-06 13:11:05,1131.47,0,2,0,,,,,,,,,,,,,,,,,,
django,11322,closed,reopened,2019-05-06 13:11:08,0.05,0,2,0,,,,,,,,,,,,,,,,,,
django,11322,closed,1,2019-05-04 17:57:26,1161.58,,1,,"b'b"" @sanchjat Windows build starts automatically", you don\'t need to call it manually. Please don\'t  your PRs multiple times," it only generates unnecessary notifications.""'",,,,,,,,,,,,,,,
django,11322,closed,2,2019-05-04 17:57:26,974.45,,1,,"b'b"" We added to make clear that is used from rather then from package. I don\'t see value in removing because it is clear that is from  "," it\'s more readable (IMO) and consistent with other code.""'",,,,,,,,,,,,,,,,
django,11322,closed,closed,2019-05-07 05:33:28,982.33,0,4,0,,,,,,,,,,,,,,,,,,
django,11322,closed,-,-,-,0,4,0,,,,,,,,,,,,,,,,,,
django,11357,closed,opened,2019-05-12 14:45:54,,,,,,,,,,,,,,,,,,,,,,
django,11357,closed,title,2019-05-12 14:45:54,00:00,,1,,"b""b' Fixed #27635 -Used secrets module in .'""",,,,,,,,,,,,,,,,,
django,11357,closed,closed,2019-05-12 14:55:04,9.17,0,1,0,,,,,,,,,,,,,,,,,,
django,11357,closed,reopened,2019-05-12 15:26:17,31.22,0,1,0,,,,,,,,,,,,,,,,,,
django,11357,closed,1,2019-05-12 14:45:54,73.73,,,1,"b""b' @claudep Thanks for this patch :+1: Maybe we should use instead of also in and  . What do you think?'""",,,,,,,,,,,,,,,,,
django,11357,closed,2,2019-05-12 14:45:54,52.5,,1,,"b""b' See url  about using in other modules. I also think it should be reserved to security-sensible domains.'""",,,,,,,,,,,,,,,,,
django,11357,closed,3,2019-05-12 14:45:54,122.0,,1,,"b""b' Do we know if we have to keep this branch at all?'""",,,,,,,,,,,,,,,,,
django,11357,closed,4,2019-05-12 14:45:54,62.45,,,1,"b'b"" @claudep [it\'s documented as not available on all systems]url  so it\'s possibly still required.  An interesting note though is that is available but has no effect so we could at least remove the branch to get code coverage there.""'",,,,,,,,,,,,,,,,,
django,11357,closed,5,2019-05-12 14:45:54,40.77,,1,,"b'b"" I\'m not sure to follow. Feel free to take over the patch.""'",,,,,,,,,,,,,,,,,
django,11357,closed,6,2019-05-12 14:45:54,2.75,,,1,"b'b"" @claudep in short it looks like won\'t be available on all system as it\'s mainly an alias for  . If this patch was reduced to only swapping line 14 by keeping the assignment it should be good to go.""'",,,,,,,,,,,,,,,,,
django,11357,closed,7,2019-05-12 14:45:54,79.53,,1,,"b'b"" So I think that the fallback should be removed for the following reasons: 1. There are no tests covering this as shown in the [coverage report]url  2. The [commit]url  that introduced the fallback makes no reference to a ticket and added no tests. 3. It doesn\'t look as though the exception is triggered there because:  Other standard library modules instantiate and don\'t bother catching the exception", but I can\'t imagine that these modules cannot be imported because would be raised, e.g. [crypt]url  [secrets]url   Our check for is therefore insufficient as shown when compared to [this]url  in cpython\'s tests. 4. Given the above, have we ever received a bug report that things break because the fallback would never have triggered? 5. Do we want to make this work? Given it never worked," can we guarantee it does the right thing?  See my incoming alternate pull request...""'",,,,,,,,,,,,,
django,11357,closed,8,2019-05-12 14:45:54,499.12,,1,,"b""b' I like the approach Nick took in his patch.'""",,,,,,,,,,,,,,,,,
django,11357,closed,closed,2019-05-16 06:18:45,892.47,0,6,3,,,,,,,,,,,,,,,,,,
django,11357,closed,-,-,-,0,6,3,,,,,,,,,,,,,,,,,,
django,11442,closed,opened,2019-06-04 19:49:27,,,,,,,,,,,,,,,,,,,,,,
django,11442,closed,title,2019-06-04 19:49:27,00:00,,1,,"b""b' Fixed #28567 -Added examples of redirect_to context variable when using set_language() view.'""",,,,,,,,,,,,,,,,,
django,11442,closed,body,2019-06-04 19:49:27,00:00,,1,,"b""b' Provided examples on how to set the [ ]url  variable based on the provided solutions in the ticket [28567]url '""",,,,,,,,,,,,,,,,,
django,11442,closed,1,2019-06-04 19:49:27,1055.78,,1,,"b""b' As a user", when I reported this issue," I needed some code to reflect the following wording in order to acquire a working starting point:  > Django looks for a  next  parameter in the  POST  or  GET  data.'""",,,,,,,,,,,,,,,
django,11442,closed,closed,2019-06-06 13:25:14,1055.78,0,3,0,,,,,,,,,,,,,,,,,,
django,11442,closed,reopened,2019-06-06 13:26:26,1.2,0,3,0,,,,,,,,,,,,,,,,,,
django,11442,closed,2,2019-06-04 19:49:27,107.78,,,1,"b'b"" Hi @raratiru.  See my comment on the ticket", just now. This looks like an actual bug, rather than a documentation fix. Setting to the correctly translated URL manually is at best a hacky-workaround. Either way, I don\'t think adding docs on how to set template context variables is appropriate at this exact point in the docs. I\'ve called in the cavalry on the ticket," so hopefully we\'ll get a proper fix worked out.. Thanks again for your input. Good test case! \\xf0\\x9f\\x99\\x82""'",,,,,,,,,,,,,
django,11442,closed,closed,2019-06-06 15:13:01,106.58,0,3,1,,,,,,,,,,,,,,,,,,
django,11442,closed,-,-,-,0,3,1,,,,,,,,,,,,,,,,,,
